
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002b06c  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000039f4  9002b310  9002b310  0002f310  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  9002ed04  9002ed04  00032d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002ed1c  9002ed1c  0007f4b0  2**0
                  CONTENTS
  6 .ARM          00000008  9002ed1c  9002ed1c  00032d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002ed24  9002ed24  0007f4b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002ed24  9002ed24  00032d24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002ed3c  9002ed3c  00032d3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002ed44  00033000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  24000180  9002eeac  00033180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  24000280  9002efac  00033280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00023e7c  24000380  9002f0ac  00033380  2**3
                  ALLOC
 14 ._user_heap_stack 00002004  240241fc  9002f0ac  000341fc  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  0007f4b0  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 00001bbc  90200000  90200000  00034000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 000000b4  90201bbc  90201bbc  00035bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 00049840  90201c70  90201c70  00035c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00080000  2**2
                  ALLOC
 20 .debug_line   000759bf  00000000  00000000  0007f4de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000f4e9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000ff352  00000000  00000000  000f4efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00018281  00000000  00000000  001f4250  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000036f0  00000000  00000000  0020c4d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a1bbc  00000000  00000000  0020fbc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00007c41  00000000  00000000  003b1784  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004a812  00000000  00000000  003b93c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  00403bd7  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000aab8  00000000  00000000  00403c9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00034fc6  00000000  00000000  0040e754  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000380 	.word	0x24000380
900002bc:	00000000 	.word	0x00000000
900002c0:	9002b2f4 	.word	0x9002b2f4

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24000384 	.word	0x24000384
900002dc:	9002b2f4 	.word	0x9002b2f4

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b99d 	b.w	90000a54 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f835 	bl	90000798 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f828 	bl	90000798 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f817 	bl	90000798 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f809 	bl	90000798 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__udivmoddi4>:
90000798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000079c:	9d08      	ldr	r5, [sp, #32]
9000079e:	460c      	mov	r4, r1
900007a0:	2b00      	cmp	r3, #0
900007a2:	d14e      	bne.n	90000842 <__udivmoddi4+0xaa>
900007a4:	4694      	mov	ip, r2
900007a6:	458c      	cmp	ip, r1
900007a8:	4686      	mov	lr, r0
900007aa:	fab2 f282 	clz	r2, r2
900007ae:	d962      	bls.n	90000876 <__udivmoddi4+0xde>
900007b0:	b14a      	cbz	r2, 900007c6 <__udivmoddi4+0x2e>
900007b2:	f1c2 0320 	rsb	r3, r2, #32
900007b6:	4091      	lsls	r1, r2
900007b8:	fa20 f303 	lsr.w	r3, r0, r3
900007bc:	fa0c fc02 	lsl.w	ip, ip, r2
900007c0:	4319      	orrs	r1, r3
900007c2:	fa00 fe02 	lsl.w	lr, r0, r2
900007c6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007ca:	fa1f f68c 	uxth.w	r6, ip
900007ce:	fbb1 f4f7 	udiv	r4, r1, r7
900007d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007d6:	fb07 1114 	mls	r1, r7, r4, r1
900007da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007de:	fb04 f106 	mul.w	r1, r4, r6
900007e2:	4299      	cmp	r1, r3
900007e4:	d90a      	bls.n	900007fc <__udivmoddi4+0x64>
900007e6:	eb1c 0303 	adds.w	r3, ip, r3
900007ea:	f104 30ff 	add.w	r0, r4, #4294967295
900007ee:	f080 8112 	bcs.w	90000a16 <__udivmoddi4+0x27e>
900007f2:	4299      	cmp	r1, r3
900007f4:	f240 810f 	bls.w	90000a16 <__udivmoddi4+0x27e>
900007f8:	3c02      	subs	r4, #2
900007fa:	4463      	add	r3, ip
900007fc:	1a59      	subs	r1, r3, r1
900007fe:	fa1f f38e 	uxth.w	r3, lr
90000802:	fbb1 f0f7 	udiv	r0, r1, r7
90000806:	fb07 1110 	mls	r1, r7, r0, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb00 f606 	mul.w	r6, r0, r6
90000812:	429e      	cmp	r6, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x94>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f100 31ff 	add.w	r1, r0, #4294967295
9000081e:	f080 80fc 	bcs.w	90000a1a <__udivmoddi4+0x282>
90000822:	429e      	cmp	r6, r3
90000824:	f240 80f9 	bls.w	90000a1a <__udivmoddi4+0x282>
90000828:	4463      	add	r3, ip
9000082a:	3802      	subs	r0, #2
9000082c:	1b9b      	subs	r3, r3, r6
9000082e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000832:	2100      	movs	r1, #0
90000834:	b11d      	cbz	r5, 9000083e <__udivmoddi4+0xa6>
90000836:	40d3      	lsrs	r3, r2
90000838:	2200      	movs	r2, #0
9000083a:	e9c5 3200 	strd	r3, r2, [r5]
9000083e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000842:	428b      	cmp	r3, r1
90000844:	d905      	bls.n	90000852 <__udivmoddi4+0xba>
90000846:	b10d      	cbz	r5, 9000084c <__udivmoddi4+0xb4>
90000848:	e9c5 0100 	strd	r0, r1, [r5]
9000084c:	2100      	movs	r1, #0
9000084e:	4608      	mov	r0, r1
90000850:	e7f5      	b.n	9000083e <__udivmoddi4+0xa6>
90000852:	fab3 f183 	clz	r1, r3
90000856:	2900      	cmp	r1, #0
90000858:	d146      	bne.n	900008e8 <__udivmoddi4+0x150>
9000085a:	42a3      	cmp	r3, r4
9000085c:	d302      	bcc.n	90000864 <__udivmoddi4+0xcc>
9000085e:	4290      	cmp	r0, r2
90000860:	f0c0 80f0 	bcc.w	90000a44 <__udivmoddi4+0x2ac>
90000864:	1a86      	subs	r6, r0, r2
90000866:	eb64 0303 	sbc.w	r3, r4, r3
9000086a:	2001      	movs	r0, #1
9000086c:	2d00      	cmp	r5, #0
9000086e:	d0e6      	beq.n	9000083e <__udivmoddi4+0xa6>
90000870:	e9c5 6300 	strd	r6, r3, [r5]
90000874:	e7e3      	b.n	9000083e <__udivmoddi4+0xa6>
90000876:	2a00      	cmp	r2, #0
90000878:	f040 8090 	bne.w	9000099c <__udivmoddi4+0x204>
9000087c:	eba1 040c 	sub.w	r4, r1, ip
90000880:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000884:	fa1f f78c 	uxth.w	r7, ip
90000888:	2101      	movs	r1, #1
9000088a:	fbb4 f6f8 	udiv	r6, r4, r8
9000088e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000892:	fb08 4416 	mls	r4, r8, r6, r4
90000896:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000089a:	fb07 f006 	mul.w	r0, r7, r6
9000089e:	4298      	cmp	r0, r3
900008a0:	d908      	bls.n	900008b4 <__udivmoddi4+0x11c>
900008a2:	eb1c 0303 	adds.w	r3, ip, r3
900008a6:	f106 34ff 	add.w	r4, r6, #4294967295
900008aa:	d202      	bcs.n	900008b2 <__udivmoddi4+0x11a>
900008ac:	4298      	cmp	r0, r3
900008ae:	f200 80cd 	bhi.w	90000a4c <__udivmoddi4+0x2b4>
900008b2:	4626      	mov	r6, r4
900008b4:	1a1c      	subs	r4, r3, r0
900008b6:	fa1f f38e 	uxth.w	r3, lr
900008ba:	fbb4 f0f8 	udiv	r0, r4, r8
900008be:	fb08 4410 	mls	r4, r8, r0, r4
900008c2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008c6:	fb00 f707 	mul.w	r7, r0, r7
900008ca:	429f      	cmp	r7, r3
900008cc:	d908      	bls.n	900008e0 <__udivmoddi4+0x148>
900008ce:	eb1c 0303 	adds.w	r3, ip, r3
900008d2:	f100 34ff 	add.w	r4, r0, #4294967295
900008d6:	d202      	bcs.n	900008de <__udivmoddi4+0x146>
900008d8:	429f      	cmp	r7, r3
900008da:	f200 80b0 	bhi.w	90000a3e <__udivmoddi4+0x2a6>
900008de:	4620      	mov	r0, r4
900008e0:	1bdb      	subs	r3, r3, r7
900008e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008e6:	e7a5      	b.n	90000834 <__udivmoddi4+0x9c>
900008e8:	f1c1 0620 	rsb	r6, r1, #32
900008ec:	408b      	lsls	r3, r1
900008ee:	fa22 f706 	lsr.w	r7, r2, r6
900008f2:	431f      	orrs	r7, r3
900008f4:	fa20 fc06 	lsr.w	ip, r0, r6
900008f8:	fa04 f301 	lsl.w	r3, r4, r1
900008fc:	ea43 030c 	orr.w	r3, r3, ip
90000900:	40f4      	lsrs	r4, r6
90000902:	fa00 f801 	lsl.w	r8, r0, r1
90000906:	0c38      	lsrs	r0, r7, #16
90000908:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000090c:	fbb4 fef0 	udiv	lr, r4, r0
90000910:	fa1f fc87 	uxth.w	ip, r7
90000914:	fb00 441e 	mls	r4, r0, lr, r4
90000918:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000091c:	fb0e f90c 	mul.w	r9, lr, ip
90000920:	45a1      	cmp	r9, r4
90000922:	fa02 f201 	lsl.w	r2, r2, r1
90000926:	d90a      	bls.n	9000093e <__udivmoddi4+0x1a6>
90000928:	193c      	adds	r4, r7, r4
9000092a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000092e:	f080 8084 	bcs.w	90000a3a <__udivmoddi4+0x2a2>
90000932:	45a1      	cmp	r9, r4
90000934:	f240 8081 	bls.w	90000a3a <__udivmoddi4+0x2a2>
90000938:	f1ae 0e02 	sub.w	lr, lr, #2
9000093c:	443c      	add	r4, r7
9000093e:	eba4 0409 	sub.w	r4, r4, r9
90000942:	fa1f f983 	uxth.w	r9, r3
90000946:	fbb4 f3f0 	udiv	r3, r4, r0
9000094a:	fb00 4413 	mls	r4, r0, r3, r4
9000094e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000952:	fb03 fc0c 	mul.w	ip, r3, ip
90000956:	45a4      	cmp	ip, r4
90000958:	d907      	bls.n	9000096a <__udivmoddi4+0x1d2>
9000095a:	193c      	adds	r4, r7, r4
9000095c:	f103 30ff 	add.w	r0, r3, #4294967295
90000960:	d267      	bcs.n	90000a32 <__udivmoddi4+0x29a>
90000962:	45a4      	cmp	ip, r4
90000964:	d965      	bls.n	90000a32 <__udivmoddi4+0x29a>
90000966:	3b02      	subs	r3, #2
90000968:	443c      	add	r4, r7
9000096a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000096e:	fba0 9302 	umull	r9, r3, r0, r2
90000972:	eba4 040c 	sub.w	r4, r4, ip
90000976:	429c      	cmp	r4, r3
90000978:	46ce      	mov	lr, r9
9000097a:	469c      	mov	ip, r3
9000097c:	d351      	bcc.n	90000a22 <__udivmoddi4+0x28a>
9000097e:	d04e      	beq.n	90000a1e <__udivmoddi4+0x286>
90000980:	b155      	cbz	r5, 90000998 <__udivmoddi4+0x200>
90000982:	ebb8 030e 	subs.w	r3, r8, lr
90000986:	eb64 040c 	sbc.w	r4, r4, ip
9000098a:	fa04 f606 	lsl.w	r6, r4, r6
9000098e:	40cb      	lsrs	r3, r1
90000990:	431e      	orrs	r6, r3
90000992:	40cc      	lsrs	r4, r1
90000994:	e9c5 6400 	strd	r6, r4, [r5]
90000998:	2100      	movs	r1, #0
9000099a:	e750      	b.n	9000083e <__udivmoddi4+0xa6>
9000099c:	f1c2 0320 	rsb	r3, r2, #32
900009a0:	fa20 f103 	lsr.w	r1, r0, r3
900009a4:	fa0c fc02 	lsl.w	ip, ip, r2
900009a8:	fa24 f303 	lsr.w	r3, r4, r3
900009ac:	4094      	lsls	r4, r2
900009ae:	430c      	orrs	r4, r1
900009b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009b4:	fa00 fe02 	lsl.w	lr, r0, r2
900009b8:	fa1f f78c 	uxth.w	r7, ip
900009bc:	fbb3 f0f8 	udiv	r0, r3, r8
900009c0:	fb08 3110 	mls	r1, r8, r0, r3
900009c4:	0c23      	lsrs	r3, r4, #16
900009c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009ca:	fb00 f107 	mul.w	r1, r0, r7
900009ce:	4299      	cmp	r1, r3
900009d0:	d908      	bls.n	900009e4 <__udivmoddi4+0x24c>
900009d2:	eb1c 0303 	adds.w	r3, ip, r3
900009d6:	f100 36ff 	add.w	r6, r0, #4294967295
900009da:	d22c      	bcs.n	90000a36 <__udivmoddi4+0x29e>
900009dc:	4299      	cmp	r1, r3
900009de:	d92a      	bls.n	90000a36 <__udivmoddi4+0x29e>
900009e0:	3802      	subs	r0, #2
900009e2:	4463      	add	r3, ip
900009e4:	1a5b      	subs	r3, r3, r1
900009e6:	b2a4      	uxth	r4, r4
900009e8:	fbb3 f1f8 	udiv	r1, r3, r8
900009ec:	fb08 3311 	mls	r3, r8, r1, r3
900009f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
900009f4:	fb01 f307 	mul.w	r3, r1, r7
900009f8:	42a3      	cmp	r3, r4
900009fa:	d908      	bls.n	90000a0e <__udivmoddi4+0x276>
900009fc:	eb1c 0404 	adds.w	r4, ip, r4
90000a00:	f101 36ff 	add.w	r6, r1, #4294967295
90000a04:	d213      	bcs.n	90000a2e <__udivmoddi4+0x296>
90000a06:	42a3      	cmp	r3, r4
90000a08:	d911      	bls.n	90000a2e <__udivmoddi4+0x296>
90000a0a:	3902      	subs	r1, #2
90000a0c:	4464      	add	r4, ip
90000a0e:	1ae4      	subs	r4, r4, r3
90000a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a14:	e739      	b.n	9000088a <__udivmoddi4+0xf2>
90000a16:	4604      	mov	r4, r0
90000a18:	e6f0      	b.n	900007fc <__udivmoddi4+0x64>
90000a1a:	4608      	mov	r0, r1
90000a1c:	e706      	b.n	9000082c <__udivmoddi4+0x94>
90000a1e:	45c8      	cmp	r8, r9
90000a20:	d2ae      	bcs.n	90000980 <__udivmoddi4+0x1e8>
90000a22:	ebb9 0e02 	subs.w	lr, r9, r2
90000a26:	eb63 0c07 	sbc.w	ip, r3, r7
90000a2a:	3801      	subs	r0, #1
90000a2c:	e7a8      	b.n	90000980 <__udivmoddi4+0x1e8>
90000a2e:	4631      	mov	r1, r6
90000a30:	e7ed      	b.n	90000a0e <__udivmoddi4+0x276>
90000a32:	4603      	mov	r3, r0
90000a34:	e799      	b.n	9000096a <__udivmoddi4+0x1d2>
90000a36:	4630      	mov	r0, r6
90000a38:	e7d4      	b.n	900009e4 <__udivmoddi4+0x24c>
90000a3a:	46d6      	mov	lr, sl
90000a3c:	e77f      	b.n	9000093e <__udivmoddi4+0x1a6>
90000a3e:	4463      	add	r3, ip
90000a40:	3802      	subs	r0, #2
90000a42:	e74d      	b.n	900008e0 <__udivmoddi4+0x148>
90000a44:	4606      	mov	r6, r0
90000a46:	4623      	mov	r3, r4
90000a48:	4608      	mov	r0, r1
90000a4a:	e70f      	b.n	9000086c <__udivmoddi4+0xd4>
90000a4c:	3e02      	subs	r6, #2
90000a4e:	4463      	add	r3, ip
90000a50:	e730      	b.n	900008b4 <__udivmoddi4+0x11c>
90000a52:	bf00      	nop

90000a54 <__aeabi_idiv0>:
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a90 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a5c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a5e:	e003      	b.n	90000a68 <LoopCopyDataInit>

90000a60 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a60:	4b0c      	ldr	r3, [pc, #48]	@ (90000a94 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a62:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a64:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a66:	3104      	adds	r1, #4

90000a68 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a68:	480b      	ldr	r0, [pc, #44]	@ (90000a98 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a6a:	4b0c      	ldr	r3, [pc, #48]	@ (90000a9c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a6c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a6e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a70:	d3f6      	bcc.n	90000a60 <CopyDataInit>
  ldr  r2, =_sbss
90000a72:	4a0b      	ldr	r2, [pc, #44]	@ (90000aa0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a74:	e002      	b.n	90000a7c <LoopFillZerobss>

90000a76 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a76:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a78:	f842 3b04 	str.w	r3, [r2], #4

90000a7c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a7c:	4b09      	ldr	r3, [pc, #36]	@ (90000aa4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a80:	d3f9      	bcc.n	90000a76 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a82:	f007 fd37 	bl	900084f4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a86:	f029 ff59 	bl	9002a93c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a8a:	f002 ff77 	bl	9000397c <main>
  bx  lr    
90000a8e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a90:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a94:	9002ed44 	.word	0x9002ed44
  ldr  r0, =_sdata
90000a98:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a9c:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000aa0:	24000380 	.word	0x24000380
  ldr  r3, = _ebss
90000aa4:	240241fc 	.word	0x240241fc

90000aa8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000aa8:	e7fe      	b.n	90000aa8 <ADC3_IRQHandler>
	...

90000aac <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000aac:	4770      	bx	lr
90000aae:	bf00      	nop

90000ab0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ab0:	4770      	bx	lr
90000ab2:	bf00      	nop

90000ab4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ab4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ab6:	f002 f925 	bl	90002d04 <touchgfx_components_init>
    touchgfx_init();
}
90000aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000abe:	f002 b89f 	b.w	90002c00 <touchgfx_init>
90000ac2:	bf00      	nop

90000ac4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ac4:	f002 b920 	b.w	90002d08 <touchgfx_taskEntry>

90000ac8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ac8:	6840      	ldr	r0, [r0, #4]
    }
90000aca:	4770      	bx	lr

90000acc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000acc:	6041      	str	r1, [r0, #4]
    }
90000ace:	4770      	bx	lr

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ad4:	4b08      	ldr	r3, [pc, #32]	@ (90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ad6:	4a09      	ldr	r2, [pc, #36]	@ (90000afc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000adc:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000ae0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000ae8:	430a      	orrs	r2, r1
90000aea:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000aee:	681a      	ldr	r2, [r3, #0]
90000af0:	f042 0201 	orr.w	r2, r2, #1
90000af4:	601a      	str	r2, [r3, #0]
}
90000af6:	4770      	bx	lr
90000af8:	e0001000 	.word	0xe0001000
90000afc:	c5acce55 	.word	0xc5acce55

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b00:	1a52      	subs	r2, r2, r1
90000b02:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b06:	fbb2 f0f3 	udiv	r0, r2, r3
90000b0a:	4770      	bx	lr

90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b0c:	4b01      	ldr	r3, [pc, #4]	@ (90000b14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b0e:	6858      	ldr	r0, [r3, #4]
}
90000b10:	4770      	bx	lr
90000b12:	bf00      	nop
90000b14:	e0001000 	.word	0xe0001000

90000b18 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b1c:	b510      	push	{r4, lr}
90000b1e:	4604      	mov	r4, r0
90000b20:	210c      	movs	r1, #12
90000b22:	f029 f83c 	bl	90029b9e <_ZdlPvj>
90000b26:	4620      	mov	r0, r4
90000b28:	bd10      	pop	{r4, pc}
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b2c:	6803      	ldr	r3, [r0, #0]
90000b2e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b30:	691b      	ldr	r3, [r3, #16]
{
90000b32:	b510      	push	{r4, lr}
90000b34:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b36:	b149      	cbz	r1, 90000b4c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b38:	4293      	cmp	r3, r2
90000b3a:	d10d      	bne.n	90000b58 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b09      	ldr	r3, [pc, #36]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b3e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b40:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b42:	6863      	ldr	r3, [r4, #4]
90000b44:	1a9b      	subs	r3, r3, r2
90000b46:	4403      	add	r3, r0
90000b48:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b4a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b4c:	4293      	cmp	r3, r2
90000b4e:	d105      	bne.n	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b50:	4b04      	ldr	r3, [pc, #16]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b52:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b54:	60a0      	str	r0, [r4, #8]
}
90000b56:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b58:	4798      	blx	r3
90000b5a:	e7f1      	b.n	90000b40 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b5c:	4798      	blx	r3
90000b5e:	e7f9      	b.n	90000b54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b60:	90000b0d 	.word	0x90000b0d
90000b64:	e0001000 	.word	0xe0001000

90000b68 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b68:	4770      	bx	lr
90000b6a:	bf00      	nop
90000b6c:	0000      	movs	r0, r0
	...

90000b70 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b70:	b500      	push	{lr}
90000b72:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b74:	2208      	movs	r2, #8
90000b76:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b78:	2000      	movs	r0, #0
90000b7a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b7c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000b98 <_ZN20STM32TouchController4initEv+0x28>
90000b80:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b84:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b88:	f007 fbc6 	bl	90008318 <BSP_TS_Init>
}
90000b8c:	b005      	add	sp, #20
90000b8e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b92:	bf00      	nop
90000b94:	f3af 8000 	nop.w
90000b98:	000001e0 	.word	0x000001e0
90000b9c:	00000110 	.word	0x00000110

90000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000ba0:	b530      	push	{r4, r5, lr}
90000ba2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000ba4:	2000      	movs	r0, #0
{
90000ba6:	460d      	mov	r5, r1
90000ba8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000baa:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bac:	9001      	str	r0, [sp, #4]
90000bae:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bb2:	f007 fc3f 	bl	90008434 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bb6:	9801      	ldr	r0, [sp, #4]
90000bb8:	b120      	cbz	r0, 90000bc4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bba:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bc0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bc2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bc4:	b005      	add	sp, #20
90000bc6:	bd30      	pop	{r4, r5, pc}

90000bc8 <_ZN20STM32TouchControllerD0Ev>:
90000bc8:	b510      	push	{r4, lr}
90000bca:	4604      	mov	r4, r0
90000bcc:	2104      	movs	r1, #4
90000bce:	f028 ffe6 	bl	90029b9e <_ZdlPvj>
90000bd2:	4620      	mov	r0, r4
90000bd4:	bd10      	pop	{r4, pc}
90000bd6:	bf00      	nop

90000bd8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000bd8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bda:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bdc:	2b03      	cmp	r3, #3
90000bde:	d82b      	bhi.n	90000c38 <_ZN8touchgfx4GPIO4initEv+0x60>
90000be0:	e8df f003 	tbb	[pc, r3]
90000be4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000be8:	2140      	movs	r1, #64	@ 0x40
90000bea:	4814      	ldr	r0, [pc, #80]	@ (90000c3c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bec:	f008 f98c 	bl	90008f08 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bf0:	2801      	cmp	r0, #1
90000bf2:	d101      	bne.n	90000bf8 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000bf4:	4b12      	ldr	r3, [pc, #72]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000bf6:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000bf8:	2304      	movs	r3, #4
90000bfa:	e7ef      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000bfc:	2140      	movs	r1, #64	@ 0x40
90000bfe:	4811      	ldr	r0, [pc, #68]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c00:	f008 f982 	bl	90008f08 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c04:	2801      	cmp	r0, #1
90000c06:	d101      	bne.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c08:	4b0d      	ldr	r3, [pc, #52]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c0a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c0c:	2303      	movs	r3, #3
90000c0e:	e7e5      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c10:	2180      	movs	r1, #128	@ 0x80
90000c12:	480c      	ldr	r0, [pc, #48]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c14:	f008 f978 	bl	90008f08 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c18:	2801      	cmp	r0, #1
90000c1a:	d101      	bne.n	90000c20 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c1c:	4b08      	ldr	r3, [pc, #32]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c20:	2302      	movs	r3, #2
90000c22:	e7db      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c24:	2108      	movs	r1, #8
90000c26:	4808      	ldr	r0, [pc, #32]	@ (90000c48 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c28:	f008 f96e 	bl	90008f08 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c2c:	2801      	cmp	r0, #1
90000c2e:	d101      	bne.n	90000c34 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c30:	4b03      	ldr	r3, [pc, #12]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c32:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c34:	2301      	movs	r3, #1
90000c36:	e7d1      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c38:	bd08      	pop	{r3, pc}
90000c3a:	bf00      	nop
90000c3c:	58020000 	.word	0x58020000
90000c40:	2400039c 	.word	0x2400039c
90000c44:	58020400 	.word	0x58020400
90000c48:	58021800 	.word	0x58021800

90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c4c:	2803      	cmp	r0, #3
90000c4e:	d827      	bhi.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c50:	e8df f000 	tbb	[pc, r0]
90000c54:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c58:	4b12      	ldr	r3, [pc, #72]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c5a:	2140      	movs	r1, #64	@ 0x40
90000c5c:	4812      	ldr	r0, [pc, #72]	@ (90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c5e:	68da      	ldr	r2, [r3, #12]
90000c60:	fab2 f282 	clz	r2, r2
90000c64:	0952      	lsrs	r2, r2, #5
90000c66:	f008 b955 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c6a:	4b0e      	ldr	r3, [pc, #56]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6c:	2140      	movs	r1, #64	@ 0x40
90000c6e:	480f      	ldr	r0, [pc, #60]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c70:	689a      	ldr	r2, [r3, #8]
90000c72:	fab2 f282 	clz	r2, r2
90000c76:	0952      	lsrs	r2, r2, #5
90000c78:	f008 b94c 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c7c:	4b09      	ldr	r3, [pc, #36]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7e:	2180      	movs	r1, #128	@ 0x80
90000c80:	480a      	ldr	r0, [pc, #40]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c82:	685a      	ldr	r2, [r3, #4]
90000c84:	fab2 f282 	clz	r2, r2
90000c88:	0952      	lsrs	r2, r2, #5
90000c8a:	f008 b943 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b05      	ldr	r3, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c90:	2108      	movs	r1, #8
90000c92:	4807      	ldr	r0, [pc, #28]	@ (90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f008 b93a 	b.w	90008f14 <HAL_GPIO_WritePin>
}
90000ca0:	4770      	bx	lr
90000ca2:	bf00      	nop
90000ca4:	2400039c 	.word	0x2400039c
90000ca8:	58020000 	.word	0x58020000
90000cac:	58020400 	.word	0x58020400
90000cb0:	58021800 	.word	0x58021800

90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cb4:	2803      	cmp	r0, #3
90000cb6:	d827      	bhi.n	90000d08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cb8:	e8df f000 	tbb	[pc, r0]
90000cbc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cc0:	4b12      	ldr	r3, [pc, #72]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	4812      	ldr	r0, [pc, #72]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	3a00      	subs	r2, #0
90000cca:	bf18      	it	ne
90000ccc:	2201      	movne	r2, #1
90000cce:	f008 b921 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000cd2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	480f      	ldr	r0, [pc, #60]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	3a00      	subs	r2, #0
90000cdc:	bf18      	it	ne
90000cde:	2201      	movne	r2, #1
90000ce0:	f008 b918 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000ce4:	4b09      	ldr	r3, [pc, #36]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce6:	2180      	movs	r1, #128	@ 0x80
90000ce8:	480a      	ldr	r0, [pc, #40]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cea:	685a      	ldr	r2, [r3, #4]
90000cec:	3a00      	subs	r2, #0
90000cee:	bf18      	it	ne
90000cf0:	2201      	movne	r2, #1
90000cf2:	f008 b90f 	b.w	90008f14 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cf6:	4b05      	ldr	r3, [pc, #20]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf8:	2108      	movs	r1, #8
90000cfa:	4807      	ldr	r0, [pc, #28]	@ (90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000cfc:	681a      	ldr	r2, [r3, #0]
90000cfe:	3a00      	subs	r2, #0
90000d00:	bf18      	it	ne
90000d02:	2201      	movne	r2, #1
90000d04:	f008 b906 	b.w	90008f14 <HAL_GPIO_WritePin>
}
90000d08:	4770      	bx	lr
90000d0a:	bf00      	nop
90000d0c:	2400039c 	.word	0x2400039c
90000d10:	58020000 	.word	0x58020000
90000d14:	58020400 	.word	0x58020400
90000d18:	58021800 	.word	0x58021800

90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d1c:	2803      	cmp	r0, #3
90000d1e:	d813      	bhi.n	90000d48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d20:	e8df f000 	tbb	[pc, r0]
90000d24:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4808      	ldr	r0, [pc, #32]	@ (90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d2c:	f008 b8f6 	b.w	90008f1c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d30:	2140      	movs	r1, #64	@ 0x40
90000d32:	4807      	ldr	r0, [pc, #28]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d34:	f008 b8f2 	b.w	90008f1c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d38:	2180      	movs	r1, #128	@ 0x80
90000d3a:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d3c:	f008 b8ee 	b.w	90008f1c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d40:	2108      	movs	r1, #8
90000d42:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d44:	f008 b8ea 	b.w	90008f1c <HAL_GPIO_TogglePin>
}
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop
90000d4c:	58020000 	.word	0x58020000
90000d50:	58020400 	.word	0x58020400
90000d54:	58021800 	.word	0x58021800

90000d58 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d5e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d62:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d66:	4770      	bx	lr

90000d68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d6c:	1e0a      	subs	r2, r1, #0
90000d6e:	4b03      	ldr	r3, [pc, #12]	@ (90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d70:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d72:	bf18      	it	ne
90000d74:	2201      	movne	r2, #1
90000d76:	701a      	strb	r2, [r3, #0]
    }
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	240234bb 	.word	0x240234bb

90000d80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d80:	2000      	movs	r0, #0
90000d82:	4770      	bx	lr

90000d84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d84:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d86:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d88:	b103      	cbz	r3, 90000d8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d8a:	4718      	bx	r3
        }
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d90:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d94:	4770      	bx	lr
90000d96:	bf00      	nop

90000d98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d9c:	b510      	push	{r4, lr}
90000d9e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000da0:	f010 fe78 	bl	90011a94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000da4:	6823      	ldr	r3, [r4, #0]
90000da6:	4620      	mov	r0, r4
90000da8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000db0:	4718      	bx	r3
90000db2:	bf00      	nop

90000db4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000db4:	f002 b8be 	b.w	90002f34 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000db8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000db8:	f002 b8c2 	b.w	90002f40 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dbc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dbc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dbe:	f002 f95d 	bl	9000307c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dc2:	4812      	ldr	r0, [pc, #72]	@ (90000e0c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dc4:	2300      	movs	r3, #0
90000dc6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dca:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dce:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dd6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dda:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dde:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000de6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dec:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dee:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000df2:	1c5a      	adds	r2, r3, #1
90000df4:	d1f8      	bne.n	90000de8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000df6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dfa:	f11c 0f20 	cmn.w	ip, #32
90000dfe:	d1f0      	bne.n	90000de2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e04:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e08:	bd10      	pop	{r4, pc}
90000e0a:	bf00      	nop
90000e0c:	e000ed00 	.word	0xe000ed00

90000e10 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e10:	f002 b86c 	b.w	90002eec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e14 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e14:	f002 b9b4 	b.w	90003180 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e18 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e18:	f002 b99e 	b.w	90003158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e1c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e1c:	f002 b870 	b.w	90002f00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e22:	4b09      	ldr	r3, [pc, #36]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e24:	881b      	ldrh	r3, [r3, #0]
90000e26:	428b      	cmp	r3, r1
90000e28:	d808      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e2a:	4b08      	ldr	r3, [pc, #32]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e2c:	881b      	ldrh	r3, [r3, #0]
90000e2e:	4293      	cmp	r3, r2
90000e30:	d804      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e34:	4b07      	ldr	r3, [pc, #28]	@ (90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e36:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e38:	801a      	strh	r2, [r3, #0]
    }
90000e3a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e3c:	4b06      	ldr	r3, [pc, #24]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e3e:	219e      	movs	r1, #158	@ 0x9e
90000e40:	4a06      	ldr	r2, [pc, #24]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e44:	f029 fa24 	bl	9002a290 <__assert_func>
90000e48:	240234b0 	.word	0x240234b0
90000e4c:	240234b2 	.word	0x240234b2
90000e50:	240234b6 	.word	0x240234b6
90000e54:	240234b8 	.word	0x240234b8
90000e58:	9002b390 	.word	0x9002b390
90000e5c:	9002b3f4 	.word	0x9002b3f4
90000e60:	9002b438 	.word	0x9002b438

90000e64 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e64:	f010 b992 	b.w	9001118c <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e68:	f010 b866 	b.w	90010f38 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e6c <_ZN11TouchGFXHALD0Ev>:
90000e6c:	b510      	push	{r4, lr}
90000e6e:	4604      	mov	r4, r0
90000e70:	2188      	movs	r1, #136	@ 0x88
90000e72:	f028 fe94 	bl	90029b9e <_ZdlPvj>
90000e76:	4620      	mov	r0, r4
90000e78:	bd10      	pop	{r4, pc}
90000e7a:	bf00      	nop

90000e7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e7c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e80:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e84:	4b0b      	ldr	r3, [pc, #44]	@ (90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e86:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e88:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e8a:	d00b      	beq.n	90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e8c:	b94a      	cbnz	r2, 90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e90:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e94:	4909      	ldr	r1, [pc, #36]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e96:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e98:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e9e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ea2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ea4:	2a00      	cmp	r2, #0
90000ea6:	d0fc      	beq.n	90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea8:	4a03      	ldr	r2, [pc, #12]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eaa:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eae:	4903      	ldr	r1, [pc, #12]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000eb0:	e7f1      	b.n	90000e96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000eb2:	bf00      	nop
90000eb4:	240234b4 	.word	0x240234b4
90000eb8:	240234b2 	.word	0x240234b2
90000ebc:	240234b0 	.word	0x240234b0

90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ec0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ec2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ec6:	b118      	cbz	r0, 90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ec8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eca:	6803      	ldr	r3, [r0, #0]
90000ecc:	681b      	ldr	r3, [r3, #0]
90000ece:	4718      	bx	r3
    }
90000ed0:	4770      	bx	lr
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ed4:	6840      	ldr	r0, [r0, #4]
90000ed6:	4a04      	ldr	r2, [pc, #16]	@ (90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ed8:	6803      	ldr	r3, [r0, #0]
90000eda:	699b      	ldr	r3, [r3, #24]
90000edc:	4293      	cmp	r3, r2
90000ede:	d101      	bne.n	90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ee0:	2000      	movs	r0, #0
90000ee2:	4770      	bx	lr
        return dma.getDMAType();
90000ee4:	4718      	bx	r3
90000ee6:	bf00      	nop
90000ee8:	90000d59 	.word	0x90000d59

90000eec <_ZN11TouchGFXHAL10initializeEv>:
{
90000eec:	b538      	push	{r3, r4, r5, lr}
90000eee:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ef0:	f002 fac8 	bl	90003484 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ef4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f24 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ef6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef8:	490b      	ldr	r1, [pc, #44]	@ (90000f28 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000efe:	4293      	cmp	r3, r2
90000f00:	d10d      	bne.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f02:	4b0a      	ldr	r3, [pc, #40]	@ (90000f2c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f04:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f06:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f08:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f0a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f0e:	4628      	mov	r0, r5
90000f10:	f7ff fdde 	bl	90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f14:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f16:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f18:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f1c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f1e:	4620      	mov	r0, r4
90000f20:	4798      	blx	r3
90000f22:	e7f2      	b.n	90000f0a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f24:	90000d6d 	.word	0x90000d6d
90000f28:	d0000000 	.word	0xd0000000
90000f2c:	240234bb 	.word	0x240234bb

90000f30 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f30:	b1a9      	cbz	r1, 90000f5e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f32:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f34:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f36:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f38:	bf18      	it	ne
90000f3a:	2201      	movne	r2, #1
90000f3c:	490c      	ldr	r1, [pc, #48]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f3e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f40:	6802      	ldr	r2, [r0, #0]
90000f42:	490c      	ldr	r1, [pc, #48]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f44:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f48:	428a      	cmp	r2, r1
90000f4a:	d106      	bne.n	90000f5a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f4c:	1e19      	subs	r1, r3, #0
90000f4e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f52:	bf18      	it	ne
90000f54:	2101      	movne	r1, #1
90000f56:	7011      	strb	r1, [r2, #0]
90000f58:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f5a:	4619      	mov	r1, r3
90000f5c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5e:	4b07      	ldr	r3, [pc, #28]	@ (90000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f60:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f64:	4a06      	ldr	r2, [pc, #24]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f66:	4807      	ldr	r0, [pc, #28]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f68:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6a:	f029 f991 	bl	9002a290 <__assert_func>
90000f6e:	bf00      	nop
90000f70:	240234ba 	.word	0x240234ba
90000f74:	90000d6d 	.word	0x90000d6d
90000f78:	240234bb 	.word	0x240234bb
90000f7c:	9002b480 	.word	0x9002b480
90000f80:	9002b4b8 	.word	0x9002b4b8
90000f84:	9002b438 	.word	0x9002b438

90000f88 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f8a:	6803      	ldr	r3, [r0, #0]
{
90000f8c:	4604      	mov	r4, r0
90000f8e:	4d14      	ldr	r5, [pc, #80]	@ (90000fe0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000f90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000f94:	4798      	blx	r3
    enableInterrupts();
90000f96:	6823      	ldr	r3, [r4, #0]
90000f98:	4620      	mov	r0, r4
90000f9a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000f9c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f9e:	f001 f9ed 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fa8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000faa:	2201      	movs	r2, #1
90000fac:	2180      	movs	r1, #128	@ 0x80
90000fae:	480d      	ldr	r0, [pc, #52]	@ (90000fe4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fb0:	f007 ffb0 	bl	90008f14 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fb4:	2201      	movs	r2, #1
90000fb6:	480c      	ldr	r0, [pc, #48]	@ (90000fe8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fb8:	4611      	mov	r1, r2
90000fba:	f007 ffab 	bl	90008f14 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fbe:	f001 f9dd 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fc2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fc4:	4620      	mov	r0, r4
90000fc6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fc8:	42ab      	cmp	r3, r5
90000fca:	d107      	bne.n	90000fdc <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fcc:	f010 fd62 	bl	90011a94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fd0:	6823      	ldr	r3, [r4, #0]
90000fd2:	4620      	mov	r0, r4
90000fd4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fd8:	4798      	blx	r3
    }
90000fda:	e7f0      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fdc:	4798      	blx	r3
90000fde:	e7ee      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fe0:	90000d9d 	.word	0x90000d9d
90000fe4:	58020c00 	.word	0x58020c00
90000fe8:	58022800 	.word	0x58022800

90000fec <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000fec:	4601      	mov	r1, r0
    {
90000fee:	b508      	push	{r3, lr}
        return instance;
90000ff0:	4b05      	ldr	r3, [pc, #20]	@ (90001008 <IdleTaskHook+0x1c>)
90000ff2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000ff4:	b121      	cbz	r1, 90001000 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000ff6:	2101      	movs	r1, #1
90000ff8:	f010 fd66 	bl	90011ac8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000ffc:	2001      	movs	r0, #1
90000ffe:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001000:	f010 fd62 	bl	90011ac8 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001004:	2001      	movs	r0, #1
90001006:	bd08      	pop	{r3, pc}
90001008:	240234bc 	.word	0x240234bc

9000100c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000100c:	6940      	ldr	r0, [r0, #20]
9000100e:	4770      	bx	lr

90001010 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001010:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001014:	4770      	bx	lr
90001016:	bf00      	nop

90001018 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001018:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000101a:	b10b      	cbz	r3, 90001020 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000101c:	2001      	movs	r0, #1
}
9000101e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001020:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001022:	3800      	subs	r0, #0
90001024:	bf18      	it	ne
90001026:	2001      	movne	r0, #1
90001028:	4770      	bx	lr
9000102a:	bf00      	nop

9000102c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000102c:	6880      	ldr	r0, [r0, #8]
9000102e:	4770      	bx	lr

90001030 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001030:	4770      	bx	lr
90001032:	bf00      	nop

90001034 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001034:	3004      	adds	r0, #4
{
90001036:	468c      	mov	ip, r1
    *data = videoInfo;
90001038:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000103a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001044:	b508      	push	{r3, lr}
    assert(0);
90001046:	4a03      	ldr	r2, [pc, #12]	@ (90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001048:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000104c:	4b02      	ldr	r3, [pc, #8]	@ (90001058 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000104e:	4803      	ldr	r0, [pc, #12]	@ (9000105c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001050:	f029 f91e 	bl	9002a290 <__assert_func>
90001054:	9002b5e4 	.word	0x9002b5e4
90001058:	9002b5e0 	.word	0x9002b5e0
9000105c:	9002b640 	.word	0x9002b640

90001060 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001060:	b510      	push	{r4, lr}
90001062:	4604      	mov	r4, r0
90001064:	2148      	movs	r1, #72	@ 0x48
90001066:	f028 fd9a 	bl	90029b9e <_ZdlPvj>
9000106a:	4620      	mov	r0, r4
9000106c:	bd10      	pop	{r4, pc}
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001072:	6803      	ldr	r3, [r0, #0]
90001074:	2901      	cmp	r1, #1
90001076:	4d30      	ldr	r5, [pc, #192]	@ (90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001078:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000107a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000107c:	bf38      	it	cc
9000107e:	2101      	movcc	r1, #1
90001080:	42ab      	cmp	r3, r5
90001082:	460e      	mov	r6, r1
90001084:	d13f      	bne.n	90001106 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001086:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001088:	42a9      	cmp	r1, r5
9000108a:	d947      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000108c:	1e6b      	subs	r3, r5, #1
9000108e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001090:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001092:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90001096:	b338      	cbz	r0, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90001098:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000109a:	2b0f      	cmp	r3, #15
9000109c:	d940      	bls.n	90001120 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
9000109e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010a4:	68db      	ldr	r3, [r3, #12]
900010a6:	4631      	mov	r1, r6
900010a8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010aa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010ac:	2210      	movs	r2, #16
900010ae:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010b0:	6803      	ldr	r3, [r0, #0]
900010b2:	691b      	ldr	r3, [r3, #16]
900010b4:	4798      	blx	r3
900010b6:	b198      	cbz	r0, 900010e0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010b8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ba:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010bc:	b1a3      	cbz	r3, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010be:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010c0:	7a93      	ldrb	r3, [r2, #10]
900010c2:	7a51      	ldrb	r1, [r2, #9]
900010c4:	041b      	lsls	r3, r3, #16
900010c6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010ca:	7a11      	ldrb	r1, [r2, #8]
900010cc:	7ad2      	ldrb	r2, [r2, #11]
900010ce:	430b      	orrs	r3, r1
900010d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010d6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d8:	3a04      	subs	r2, #4
900010da:	441a      	add	r2, r3
900010dc:	61a2      	str	r2, [r4, #24]
}
900010de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010e0:	230d      	movs	r3, #13
900010e2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010e6:	e7e7      	b.n	900010b8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010ec:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010ee:	18ca      	adds	r2, r1, r3
        val |= d[0];
900010f0:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
900010f2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
900010f4:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900010f6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900010f8:	041b      	lsls	r3, r3, #16
900010fa:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900010fe:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001100:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001104:	e7e6      	b.n	900010d4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001106:	4798      	blx	r3
90001108:	4286      	cmp	r6, r0
9000110a:	d907      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000110c:	6823      	ldr	r3, [r4, #0]
9000110e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001110:	42ab      	cmp	r3, r5
90001112:	d00e      	beq.n	90001132 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001114:	4620      	mov	r0, r4
90001116:	4798      	blx	r3
90001118:	4605      	mov	r5, r0
9000111a:	e7b7      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000111c:	4635      	mov	r5, r6
9000111e:	e7b5      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001120:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001122:	4b06      	ldr	r3, [pc, #24]	@ (9000113c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001124:	4a06      	ldr	r2, [pc, #24]	@ (90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001126:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001128:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000112c:	4805      	ldr	r0, [pc, #20]	@ (90001144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000112e:	f029 f8af 	bl	9002a290 <__assert_func>
    return videoInfo.number_of_frames;
90001132:	68a5      	ldr	r5, [r4, #8]
90001134:	e7aa      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001136:	bf00      	nop
90001138:	9000102d 	.word	0x9000102d
9000113c:	9002b694 	.word	0x9002b694
90001140:	9002b6a8 	.word	0x9002b6a8
90001144:	9002b640 	.word	0x9002b640

90001148 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001148:	6943      	ldr	r3, [r0, #20]
{
9000114a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000114e:	2b00      	cmp	r3, #0
90001150:	f000 80c1 	beq.w	900012d6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001154:	4605      	mov	r5, r0
    if (reader != 0)
90001156:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001158:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000115a:	2800      	cmp	r0, #0
9000115c:	f000 80a1 	beq.w	900012a2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001160:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001162:	2b07      	cmp	r3, #7
90001164:	f240 80ac 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001168:	6803      	ldr	r3, [r0, #0]
9000116a:	4621      	mov	r1, r4
9000116c:	68db      	ldr	r3, [r3, #12]
9000116e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001170:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001172:	2208      	movs	r2, #8
90001174:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001176:	6803      	ldr	r3, [r0, #0]
90001178:	691b      	ldr	r3, [r3, #16]
9000117a:	4798      	blx	r3
9000117c:	2800      	cmp	r0, #0
9000117e:	f000 808c 	beq.w	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001182:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001184:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001186:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001188:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000118a:	2800      	cmp	r0, #0
9000118c:	f000 808b 	beq.w	900012a6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
90001190:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001192:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
90001194:	18a1      	adds	r1, r4, r2
90001196:	5ca2      	ldrb	r2, [r4, r2]
90001198:	788c      	ldrb	r4, [r1, #2]
9000119a:	784e      	ldrb	r6, [r1, #1]
9000119c:	0424      	lsls	r4, r4, #16
9000119e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011a2:	4314      	orrs	r4, r2
900011a4:	78ca      	ldrb	r2, [r1, #3]
900011a6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011aa:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011ac:	f243 0630 	movw	r6, #12336	@ 0x3030
900011b0:	e03a      	b.n	90001228 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011b2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011b4:	2b07      	cmp	r3, #7
900011b6:	f240 8083 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ba:	6803      	ldr	r3, [r0, #0]
900011bc:	4621      	mov	r1, r4
900011be:	68db      	ldr	r3, [r3, #12]
900011c0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011c4:	2208      	movs	r2, #8
900011c6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011c8:	6803      	ldr	r3, [r0, #0]
900011ca:	691b      	ldr	r3, [r3, #16]
900011cc:	4798      	blx	r3
900011ce:	b908      	cbnz	r0, 900011d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011d0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011d4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011d6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011d8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011da:	2800      	cmp	r0, #0
900011dc:	d079      	beq.n	900012d2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011de:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011e2:	18ca      	adds	r2, r1, r3
900011e4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011e6:	7994      	ldrb	r4, [r2, #6]
900011e8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011ec:	0424      	lsls	r4, r4, #16
900011ee:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f2:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900011fa:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011fc:	f892 8003 	ldrb.w	r8, [r2, #3]
90001200:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001204:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001208:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001210:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001214:	f246 3164 	movw	r1, #25444	@ 0x6364
90001218:	42b3      	cmp	r3, r6
9000121a:	bf08      	it	eq
9000121c:	428a      	cmpeq	r2, r1
9000121e:	bf0c      	ite	eq
90001220:	2301      	moveq	r3, #1
90001222:	2300      	movne	r3, #0
90001224:	d036      	beq.n	90001294 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001226:	69ab      	ldr	r3, [r5, #24]
90001228:	441c      	add	r4, r3
9000122a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000122c:	f104 0208 	add.w	r2, r4, #8
90001230:	429a      	cmp	r2, r3
90001232:	d22a      	bcs.n	9000128a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001234:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001236:	3409      	adds	r4, #9
        frameNumber++;
90001238:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000123a:	f024 0401 	bic.w	r4, r4, #1
9000123e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001242:	2800      	cmp	r0, #0
90001244:	d1b5      	bne.n	900011b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001246:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001248:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000124a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000124e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001252:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001254:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001258:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000125c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001260:	188c      	adds	r4, r1, r2
        val |= d[0];
90001262:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001264:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001266:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000126a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000126e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001272:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001276:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000127a:	0424      	lsls	r4, r4, #16
9000127c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001280:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001284:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001288:	e7c4      	b.n	90001214 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000128a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000128c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000128e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90001290:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001294:	4618      	mov	r0, r3
90001296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000129a:	230d      	movs	r3, #13
9000129c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012a0:	e76f      	b.n	90001182 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012a2:	1d22      	adds	r2, r4, #4
900012a4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012a8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012aa:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012ac:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012ae:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012b0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012b2:	0424      	lsls	r4, r4, #16
900012b4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012b8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ba:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012be:	e774      	b.n	900011aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012c2:	4b08      	ldr	r3, [pc, #32]	@ (900012e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012c4:	4a08      	ldr	r2, [pc, #32]	@ (900012e8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012c6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012cc:	4807      	ldr	r0, [pc, #28]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ce:	f028 ffdf 	bl	9002a290 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012d2:	461c      	mov	r4, r3
900012d4:	e7b7      	b.n	90001246 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012d6:	4b06      	ldr	r3, [pc, #24]	@ (900012f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012d8:	21f5      	movs	r1, #245	@ 0xf5
900012da:	4a06      	ldr	r2, [pc, #24]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012dc:	4803      	ldr	r0, [pc, #12]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f028 ffd7 	bl	9002a290 <__assert_func>
900012e2:	bf00      	nop
900012e4:	9002b694 	.word	0x9002b694
900012e8:	9002b6a8 	.word	0x9002b6a8
900012ec:	9002b640 	.word	0x9002b640
900012f0:	9002b6ec 	.word	0x9002b6ec
900012f4:	9002b738 	.word	0x9002b738

900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012f8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012fa:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012fc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012fe:	4b0e      	ldr	r3, [pc, #56]	@ (90001338 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001300:	2001      	movs	r0, #1
90001302:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001304:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001306:	6023      	str	r3, [r4, #0]
90001308:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001310:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001314:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001318:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000131c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001320:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001324:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001328:	f00c fcd0 	bl	9000dccc <osSemaphoreNew>
9000132c:	4b03      	ldr	r3, [pc, #12]	@ (9000133c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000132e:	4602      	mov	r2, r0
}
90001330:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001332:	601a      	str	r2, [r3, #0]
}
90001334:	bd10      	pop	{r4, pc}
90001336:	bf00      	nop
90001338:	9002b890 	.word	0x9002b890
9000133c:	240003f4 	.word	0x240003f4

90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001340:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001344:	2100      	movs	r1, #0
    if (reader != 0)
90001346:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001348:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000134a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000134c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001350:	2e00      	cmp	r6, #0
90001352:	f000 81b3 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001356:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001358:	2b47      	cmp	r3, #71	@ 0x47
9000135a:	f240 8270 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000135e:	6833      	ldr	r3, [r6, #0]
90001360:	4630      	mov	r0, r6
90001362:	68db      	ldr	r3, [r3, #12]
90001364:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001366:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001368:	2248      	movs	r2, #72	@ 0x48
9000136a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000136c:	6803      	ldr	r3, [r0, #0]
9000136e:	691b      	ldr	r3, [r3, #16]
90001370:	4798      	blx	r3
90001372:	2800      	cmp	r0, #0
90001374:	f000 80b7 	beq.w	900014e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001378:	2300      	movs	r3, #0
    if (reader != 0)
9000137a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000137c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000137e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001380:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001382:	2e00      	cmp	r6, #0
90001384:	f000 819b 	beq.w	900016be <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001388:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000138c:	2204      	movs	r2, #4
9000138e:	49c3      	ldr	r1, [pc, #780]	@ (9000169c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001390:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90001394:	4620      	mov	r0, r4
90001396:	f029 fa1f 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000139a:	2800      	cmp	r0, #0
9000139c:	f040 825f 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013a0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013a4:	2204      	movs	r2, #4
900013a6:	49be      	ldr	r1, [pc, #760]	@ (900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013a8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013aa:	4448      	add	r0, r9
900013ac:	f029 fa14 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013b0:	2800      	cmp	r0, #0
900013b2:	f040 8268 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013b6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ba:	2204      	movs	r2, #4
900013bc:	49b9      	ldr	r1, [pc, #740]	@ (900016a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013be:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013c2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013c6:	f029 fa07 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013ca:	4680      	mov	r8, r0
900013cc:	2800      	cmp	r0, #0
900013ce:	f040 8250 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	7ca3      	ldrb	r3, [r4, #18]
900013d4:	7c62      	ldrb	r2, [r4, #17]
900013d6:	041b      	lsls	r3, r3, #16
900013d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013dc:	7c22      	ldrb	r2, [r4, #16]
900013de:	4313      	orrs	r3, r2
900013e0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013e2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013e6:	f000 8233 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013ea:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013ee:	2204      	movs	r2, #4
900013f0:	49ad      	ldr	r1, [pc, #692]	@ (900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
900013f2:	4448      	add	r0, r9
900013f4:	f029 f9f0 	bl	9002a7d8 <strncmp>
    if (compare(offset, "hdrl", 4))
900013f8:	2800      	cmp	r0, #0
900013fa:	d078      	beq.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013fc:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013fe:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001402:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001406:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001408:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000140a:	2204      	movs	r2, #4
9000140c:	49a7      	ldr	r1, [pc, #668]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000140e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001410:	f029 f9e2 	bl	9002a7d8 <strncmp>
    if (compare(offset, "avih", 4))
90001414:	2800      	cmp	r0, #0
90001416:	f000 80e6 	beq.w	900015e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000141a:	2307      	movs	r3, #7
9000141c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001420:	f1ba 0f00 	cmp.w	sl, #0
90001424:	f000 8190 	beq.w	90001748 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001428:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000142a:	2b0b      	cmp	r3, #11
9000142c:	f240 8207 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001430:	f8da 3000 	ldr.w	r3, [sl]
90001434:	4621      	mov	r1, r4
90001436:	4650      	mov	r0, sl
90001438:	68db      	ldr	r3, [r3, #12]
9000143a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000143c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000143e:	220c      	movs	r2, #12
90001440:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001442:	6803      	ldr	r3, [r0, #0]
90001444:	691b      	ldr	r3, [r3, #16]
90001446:	4798      	blx	r3
90001448:	2800      	cmp	r0, #0
9000144a:	f000 8121 	beq.w	90001690 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000144e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001452:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001454:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001456:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000145a:	f04f 090d 	mov.w	r9, #13
9000145e:	e003      	b.n	90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001460:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001464:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001466:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001468:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000146c:	2e00      	cmp	r6, #0
9000146e:	d052      	beq.n	90001516 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001470:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001472:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001474:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001476:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001478:	1afb      	subs	r3, r7, r3
9000147a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000147c:	f029 f9ac 	bl	9002a7d8 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001480:	2800      	cmp	r0, #0
90001482:	d051      	beq.n	90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001484:	f1ba 0f00 	cmp.w	sl, #0
90001488:	f040 80a8 	bne.w	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000148c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000148e:	42a3      	cmp	r3, r4
90001490:	d94d      	bls.n	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001492:	3404      	adds	r4, #4
    if (reader != 0)
90001494:	b386      	cbz	r6, 900014f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
90001496:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
90001498:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000149c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000149e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a0:	eb01 0204 	add.w	r2, r1, r4
900014a4:	5d09      	ldrb	r1, [r1, r4]
900014a6:	7894      	ldrb	r4, [r2, #2]
900014a8:	7850      	ldrb	r0, [r2, #1]
900014aa:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014ae:	78d2      	ldrb	r2, [r2, #3]
900014b0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014b4:	ea44 0401 	orr.w	r4, r4, r1
900014b8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014bc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014be:	f240 81be 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014c2:	6833      	ldr	r3, [r6, #0]
900014c4:	4621      	mov	r1, r4
900014c6:	4630      	mov	r0, r6
900014c8:	68db      	ldr	r3, [r3, #12]
900014ca:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014cc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014ce:	220c      	movs	r2, #12
900014d0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014d2:	6803      	ldr	r3, [r0, #0]
900014d4:	691b      	ldr	r3, [r3, #16]
900014d6:	4798      	blx	r3
900014d8:	2800      	cmp	r0, #0
900014da:	d1c1      	bne.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014dc:	f04f 0a0d 	mov.w	sl, #13
900014e0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014e4:	e7be      	b.n	90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014e6:	230d      	movs	r3, #13
900014e8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014ec:	e744      	b.n	90001378 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014f2:	f04f 0801 	mov.w	r8, #1
900014f6:	e786      	b.n	90001406 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
900014f8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
900014fa:	1913      	adds	r3, r2, r4
        val |= d[0];
900014fc:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
900014fe:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001500:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001502:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001504:	0424      	lsls	r4, r4, #16
90001506:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000150a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000150c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001510:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001512:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001516:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001518:	2204      	movs	r2, #4
9000151a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000151c:	2600      	movs	r6, #0
9000151e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001520:	f029 f95a 	bl	9002a7d8 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001524:	2800      	cmp	r0, #0
90001526:	d1ad      	bne.n	90001484 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001528:	f1ba 0f00 	cmp.w	sl, #0
9000152c:	d156      	bne.n	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000152e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001532:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001534:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001536:	2e00      	cmp	r6, #0
90001538:	f000 8118 	beq.w	9000176c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000153c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000153e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001540:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001544:	f104 0e02 	add.w	lr, r4, #2
90001548:	f104 0c01 	add.w	ip, r4, #1
9000154c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001550:	1ce0      	adds	r0, r4, #3
90001552:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001556:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001558:	f811 900c 	ldrb.w	r9, [r1, ip]
9000155c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001560:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001564:	ea43 0308 	orr.w	r3, r3, r8
90001568:	f811 8000 	ldrb.w	r8, [r1, r0]
9000156c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001570:	443b      	add	r3, r7
90001572:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001574:	f811 300e 	ldrb.w	r3, [r1, lr]
90001578:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000157c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001580:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001584:	5c09      	ldrb	r1, [r1, r0]
90001586:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000158a:	ea44 040c 	orr.w	r4, r4, ip
9000158e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001592:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001594:	f240 8153 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001598:	6833      	ldr	r3, [r6, #0]
9000159a:	4621      	mov	r1, r4
9000159c:	4630      	mov	r0, r6
9000159e:	68db      	ldr	r3, [r3, #12]
900015a0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015a2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015a4:	2204      	movs	r2, #4
900015a6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015a8:	6803      	ldr	r3, [r0, #0]
900015aa:	691b      	ldr	r3, [r3, #16]
900015ac:	4798      	blx	r3
900015ae:	2800      	cmp	r0, #0
900015b0:	f000 80cd 	beq.w	9000174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015b4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015b6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015b8:	2b00      	cmp	r3, #0
900015ba:	f000 816e 	beq.w	9000189a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015be:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015c0:	2204      	movs	r2, #4
900015c2:	493b      	ldr	r1, [pc, #236]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015c4:	f029 f908 	bl	9002a7d8 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015c8:	2800      	cmp	r0, #0
900015ca:	f040 80ca 	bne.w	90001762 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015ce:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015d0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015d2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015d4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015d6:	622b      	str	r3, [r5, #32]
}
900015d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015dc:	230a      	movs	r3, #10
900015de:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015e6:	f1b8 0f00 	cmp.w	r8, #0
900015ea:	f43f af19 	beq.w	90001420 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015ee:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
900015f2:	f1ba 0f00 	cmp.w	sl, #0
900015f6:	f000 80d4 	beq.w	900017a2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900015fa:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900015fc:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001600:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001602:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001604:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001608:	f812 8001 	ldrb.w	r8, [r2, r1]
9000160c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001614:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001618:	4438      	add	r0, r7
9000161a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000161c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001622:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001626:	041b      	lsls	r3, r3, #16
90001628:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000162c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001630:	ea43 0308 	orr.w	r3, r3, r8
90001634:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001638:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000163a:	fbac c303 	umull	ip, r3, ip, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001642:	78bb      	ldrb	r3, [r7, #2]
90001644:	f897 e001 	ldrb.w	lr, [r7, #1]
90001648:	041b      	lsls	r3, r3, #16
9000164a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000164e:	78ff      	ldrb	r7, [r7, #3]
90001650:	1850      	adds	r0, r2, r1
90001652:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001656:	ea43 030c 	orr.w	r3, r3, ip
9000165a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000165e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	7883      	ldrb	r3, [r0, #2]
90001662:	7847      	ldrb	r7, [r0, #1]
90001664:	041b      	lsls	r3, r3, #16
90001666:	5c51      	ldrb	r1, [r2, r1]
90001668:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000166c:	430b      	orrs	r3, r1
9000166e:	78c1      	ldrb	r1, [r0, #3]
90001670:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001674:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001676:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001678:	788b      	ldrb	r3, [r1, #2]
9000167a:	7848      	ldrb	r0, [r1, #1]
9000167c:	041b      	lsls	r3, r3, #16
9000167e:	5d92      	ldrb	r2, [r2, r6]
90001680:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001684:	4313      	orrs	r3, r2
90001686:	78ca      	ldrb	r2, [r1, #3]
90001688:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000168c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000168e:	e6cb      	b.n	90001428 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90001690:	230d      	movs	r3, #13
90001692:	469a      	mov	sl, r3
90001694:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001698:	e6db      	b.n	90001452 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
9000169a:	bf00      	nop
9000169c:	9002b76c 	.word	0x9002b76c
900016a0:	9002b824 	.word	0x9002b824
900016a4:	9002b81c 	.word	0x9002b81c
900016a8:	9002b7f0 	.word	0x9002b7f0
900016ac:	9002b804 	.word	0x9002b804
900016b0:	9002b814 	.word	0x9002b814
900016b4:	9002b80c 	.word	0x9002b80c
900016b8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016bc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016be:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016c2:	2204      	movs	r2, #4
900016c4:	4976      	ldr	r1, [pc, #472]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016c6:	eb09 0007 	add.w	r0, r9, r7
900016ca:	f029 f885 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016ce:	2800      	cmp	r0, #0
900016d0:	f040 80c5 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016d4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016d8:	2204      	movs	r2, #4
900016da:	4972      	ldr	r1, [pc, #456]	@ (900018a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016dc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016de:	4448      	add	r0, r9
900016e0:	f029 f87a 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016e4:	2800      	cmp	r0, #0
900016e6:	f040 80ce 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016ea:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016ee:	2204      	movs	r2, #4
900016f0:	496d      	ldr	r1, [pc, #436]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016f2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900016f6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900016fa:	f029 f86d 	bl	9002a7d8 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900016fe:	4680      	mov	r8, r0
90001700:	2800      	cmp	r0, #0
90001702:	f040 80b6 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001706:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000170a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000170e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001712:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001714:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001716:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001718:	0424      	lsls	r4, r4, #16
9000171a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000171e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001720:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001724:	f000 8094 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001728:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000172c:	2204      	movs	r2, #4
9000172e:	495f      	ldr	r1, [pc, #380]	@ (900018ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001730:	4448      	add	r0, r9
90001732:	f029 f851 	bl	9002a7d8 <strncmp>
    if (compare(offset, "hdrl", 4))
90001736:	b970      	cbnz	r0, 90001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001738:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000173c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001740:	4448      	add	r0, r9
90001742:	f04f 0a00 	mov.w	sl, #0
90001746:	e65f      	b.n	90001408 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001748:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000174c:	e683      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000174e:	230d      	movs	r3, #13
90001750:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001754:	e72e      	b.n	900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001756:	2306      	movs	r3, #6
    offset += 4;
90001758:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000175c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001760:	e7ee      	b.n	90001740 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001762:	230b      	movs	r3, #11
90001764:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001768:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000176c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000176e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001770:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001772:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001774:	7893      	ldrb	r3, [r2, #2]
90001776:	041b      	lsls	r3, r3, #16
90001778:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000177c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000177e:	78d1      	ldrb	r1, [r2, #3]
90001780:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001784:	443b      	add	r3, r7
90001786:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001788:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000178a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000178c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000178e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001790:	0424      	lsls	r4, r4, #16
90001792:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001796:	430c      	orrs	r4, r1
        val |= d[3] << 24;
90001798:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
9000179c:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
9000179e:	4420      	add	r0, r4
900017a0:	e70e      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017a2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017a4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017a8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017ac:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017b0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017b4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017b8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017bc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017be:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017c2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017c6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017ca:	041b      	lsls	r3, r3, #16
900017cc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017d0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017d4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017d8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017dc:	fbae e303 	umull	lr, r3, lr, r3
900017e0:	099b      	lsrs	r3, r3, #6
900017e2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017e4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017e8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017ec:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017ee:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900017f0:	041b      	lsls	r3, r3, #16
900017f2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900017f6:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
900017fa:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
900017fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001802:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001804:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001806:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000180a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000180e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001812:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001816:	041b      	lsls	r3, r3, #16
90001818:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000181c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001820:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001824:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001826:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001828:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000182a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000182c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000182e:	041b      	lsls	r3, r3, #16
90001830:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001834:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001836:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000183a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000183c:	e60b      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000183e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001840:	4b1b      	ldr	r3, [pc, #108]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001842:	4a1c      	ldr	r2, [pc, #112]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001844:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001846:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000184a:	481b      	ldr	r0, [pc, #108]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000184c:	f028 fd20 	bl	9002a290 <__assert_func>
    assert(aviListSize);
90001850:	4b1a      	ldr	r3, [pc, #104]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001852:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001856:	4a1a      	ldr	r2, [pc, #104]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001858:	4817      	ldr	r0, [pc, #92]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185a:	f028 fd19 	bl	9002a290 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000185e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001860:	4b18      	ldr	r3, [pc, #96]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001862:	4a17      	ldr	r2, [pc, #92]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001864:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001868:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000186c:	4812      	ldr	r0, [pc, #72]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186e:	f028 fd0f 	bl	9002a290 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001872:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001874:	4b14      	ldr	r3, [pc, #80]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001876:	4a12      	ldr	r2, [pc, #72]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001878:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000187c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001880:	480d      	ldr	r0, [pc, #52]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001882:	f028 fd05 	bl	9002a290 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001886:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001888:	4b10      	ldr	r3, [pc, #64]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000188a:	4a0d      	ldr	r2, [pc, #52]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000188c:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001890:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90001894:	4808      	ldr	r0, [pc, #32]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001896:	f028 fcfb 	bl	9002a290 <__assert_func>
        src = (const char*)movieData + offset;
9000189a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000189c:	4420      	add	r0, r4
9000189e:	e68f      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018a0:	9002b76c 	.word	0x9002b76c
900018a4:	9002b824 	.word	0x9002b824
900018a8:	9002b81c 	.word	0x9002b81c
900018ac:	9002b7f0 	.word	0x9002b7f0
900018b0:	9002b694 	.word	0x9002b694
900018b4:	9002b6a8 	.word	0x9002b6a8
900018b8:	9002b640 	.word	0x9002b640
900018bc:	9002b7f8 	.word	0x9002b7f8
900018c0:	9002b790 	.word	0x9002b790
900018c4:	9002b774 	.word	0x9002b774
900018c8:	9002b7d8 	.word	0x9002b7d8
900018cc:	9002b7c0 	.word	0x9002b7c0
900018d0:	10624dd3 	.word	0x10624dd3

900018d4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018d4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018d6:	2400      	movs	r4, #0
    movieLength = length;
900018d8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018dc:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018de:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018e2:	f7ff bd2d 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018e6:	bf00      	nop

900018e8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018e8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018ea:	680b      	ldr	r3, [r1, #0]
{
900018ec:	4604      	mov	r4, r0
    movieData = 0;
900018ee:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900018f0:	4608      	mov	r0, r1
900018f2:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900018f4:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
900018f8:	4798      	blx	r3
900018fa:	4603      	mov	r3, r0
    readVideoHeader();
900018fc:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900018fe:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001904:	f7ff bd1c 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001908 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001908:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000190a:	2400      	movs	r4, #0
9000190c:	4d20      	ldr	r5, [pc, #128]	@ (90001990 <JPEG_Decode_DMA+0x88>)
    {
9000190e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001910:	4b20      	ldr	r3, [pc, #128]	@ (90001994 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001912:	602c      	str	r4, [r5, #0]
    {
90001914:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001916:	4d20      	ldr	r5, [pc, #128]	@ (90001998 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001918:	4f20      	ldr	r7, [pc, #128]	@ (9000199c <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000191a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000191e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001920:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001922:	4d20      	ldr	r5, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x9c>)
90001924:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001926:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000192a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000192e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001930:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001934:	4f1c      	ldr	r7, [pc, #112]	@ (900019a8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000193a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000193e:	bf18      	it	ne
90001940:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001944:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001946:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001948:	4e18      	ldr	r6, [pc, #96]	@ (900019ac <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000194a:	4d19      	ldr	r5, [pc, #100]	@ (900019b0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000194c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000194e:	4e19      	ldr	r6, [pc, #100]	@ (900019b4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001950:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001954:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001958:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195a:	4e17      	ldr	r6, [pc, #92]	@ (900019b8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001960:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001962:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001964:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001966:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000196a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000196c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000196e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001970:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001972:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001974:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001978:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000197c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001980:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001984:	f008 fcac 	bl	9000a2e0 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001988:	4620      	mov	r0, r4
9000198a:	b003      	add	sp, #12
9000198c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000198e:	bf00      	nop
90001990:	24006010 	.word	0x24006010
90001994:	24006004 	.word	0x24006004
90001998:	240003f0 	.word	0x240003f0
9000199c:	240003ac 	.word	0x240003ac
900019a0:	240003f8 	.word	0x240003f8
900019a4:	24006000 	.word	0x24006000
900019a8:	24006024 	.word	0x24006024
900019ac:	24006020 	.word	0x24006020
900019b0:	24000004 	.word	0x24000004
900019b4:	24006018 	.word	0x24006018
900019b8:	2400601c 	.word	0x2400601c

900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019c0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019c2:	2402      	movs	r4, #2
900019c4:	483d      	ldr	r0, [pc, #244]	@ (90001abc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019c6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019c8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019ca:	0725      	lsls	r5, r4, #28
900019cc:	d002      	beq.n	900019d4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019ce:	f024 040f 	bic.w	r4, r4, #15
900019d2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019d6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019d8:	4d39      	ldr	r5, [pc, #228]	@ (90001ac0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019da:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019dc:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019e0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019e4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019e6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019e8:	4f36      	ldr	r7, [pc, #216]	@ (90001ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ea:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019ee:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
900019f2:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	bf18      	it	ne
900019f8:	f1c4 0410 	rsbne	r4, r4, #16
900019fc:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
900019fe:	4832      	ldr	r0, [pc, #200]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a00:	f7ff ff82 	bl	90001908 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a04:	4c31      	ldr	r4, [pc, #196]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a06:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a08:	4e31      	ldr	r6, [pc, #196]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a0a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a0c:	f8da 3000 	ldr.w	r3, [sl]
90001a10:	b10b      	cbz	r3, 90001a16 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a12:	6833      	ldr	r3, [r6, #0]
90001a14:	bb6b      	cbnz	r3, 90001a72 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a16:	6828      	ldr	r0, [r5, #0]
90001a18:	7a03      	ldrb	r3, [r0, #8]
90001a1a:	b93b      	cbnz	r3, 90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a1c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a1e:	681b      	ldr	r3, [r3, #0]
90001a20:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a24:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a28:	2b01      	cmp	r3, #1
90001a2a:	d03b      	beq.n	90001aa4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a2c:	683b      	ldr	r3, [r7, #0]
90001a2e:	2b01      	cmp	r3, #1
90001a30:	d00d      	beq.n	90001a4e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a32:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a34:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a36:	6823      	ldr	r3, [r4, #0]
90001a38:	2b02      	cmp	r3, #2
90001a3a:	d024      	beq.n	90001a86 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a3c:	6823      	ldr	r3, [r4, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d1e4      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a42:	2300      	movs	r3, #0
90001a44:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a48:	6033      	str	r3, [r6, #0]
}
90001a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a4e:	f8d9 3000 	ldr.w	r3, [r9]
90001a52:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a56:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a5a:	2b00      	cmp	r3, #0
90001a5c:	d1e9      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a5e:	f8da 3000 	ldr.w	r3, [sl]
90001a62:	2b00      	cmp	r3, #0
90001a64:	d1e5      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a66:	2102      	movs	r1, #2
90001a68:	4817      	ldr	r0, [pc, #92]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a6a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a6c:	f008 fde8 	bl	9000a640 <HAL_JPEG_Resume>
90001a70:	e7df      	b.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a72:	4815      	ldr	r0, [pc, #84]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a74:	f009 fba2 	bl	9000b1bc <HAL_JPEG_GetState>
90001a78:	2804      	cmp	r0, #4
90001a7a:	d01a      	beq.n	90001ab2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a7c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a7e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a80:	6823      	ldr	r3, [r4, #0]
90001a82:	2b02      	cmp	r3, #2
90001a84:	d1da      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a86:	4b14      	ldr	r3, [pc, #80]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a88:	f04f 31ff 	mov.w	r1, #4294967295
90001a8c:	6818      	ldr	r0, [r3, #0]
90001a8e:	f00c f969 	bl	9000dd64 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a92:	6823      	ldr	r3, [r4, #0]
90001a94:	2b01      	cmp	r3, #1
90001a96:	d1b9      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a98:	2300      	movs	r3, #0
90001a9a:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a9e:	6033      	str	r3, [r6, #0]
}
90001aa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001aa4:	6833      	ldr	r3, [r6, #0]
90001aa6:	2b00      	cmp	r3, #0
90001aa8:	d1c0      	bne.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aaa:	6803      	ldr	r3, [r0, #0]
90001aac:	691b      	ldr	r3, [r3, #16]
90001aae:	4798      	blx	r3
90001ab0:	e7bc      	b.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ab2:	4805      	ldr	r0, [pc, #20]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ab4:	f008 fc92 	bl	9000a3dc <HAL_JPEG_Abort>
90001ab8:	e7e0      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aba:	bf00      	nop
90001abc:	240003ac 	.word	0x240003ac
90001ac0:	24006008 	.word	0x24006008
90001ac4:	24006010 	.word	0x24006010
90001ac8:	240092c8 	.word	0x240092c8
90001acc:	2400600c 	.word	0x2400600c
90001ad0:	240003ec 	.word	0x240003ec
90001ad4:	240003f0 	.word	0x240003f0
90001ad8:	240003f4 	.word	0x240003f4
90001adc:	24006014 	.word	0x24006014
90001ae0:	24006004 	.word	0x24006004
90001ae4:	24000004 	.word	0x24000004

90001ae8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ae8:	6943      	ldr	r3, [r0, #20]
{
90001aea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001aee:	2b00      	cmp	r3, #0
90001af0:	f000 80ad 	beq.w	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001af4:	4604      	mov	r4, r0
    if (reader != 0)
90001af6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001af8:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001afa:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001afc:	2800      	cmp	r0, #0
90001afe:	d05f      	beq.n	90001bc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b02:	2b07      	cmp	r3, #7
90001b04:	f240 80a9 	bls.w	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b08:	6803      	ldr	r3, [r0, #0]
90001b0a:	4629      	mov	r1, r5
90001b0c:	68db      	ldr	r3, [r3, #12]
90001b0e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b12:	2208      	movs	r2, #8
90001b14:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b16:	6803      	ldr	r3, [r0, #0]
90001b18:	691b      	ldr	r3, [r3, #16]
90001b1a:	4798      	blx	r3
90001b1c:	2800      	cmp	r0, #0
90001b1e:	d04a      	beq.n	90001bb6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b20:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b22:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b24:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b28:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b2a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d046      	beq.n	90001bbe <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b30:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b32:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b36:	1b52      	subs	r2, r2, r5
90001b38:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b3a:	eb03 070c 	add.w	r7, r3, ip
90001b3e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b42:	eb03 0805 	add.w	r8, r3, r5
90001b46:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b4a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b56:	78bd      	ldrb	r5, [r7, #2]
90001b58:	78ff      	ldrb	r7, [r7, #3]
90001b5a:	042d      	lsls	r5, r5, #16
90001b5c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b60:	ea45 050e 	orr.w	r5, r5, lr
90001b64:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b68:	189f      	adds	r7, r3, r2
90001b6a:	5c9b      	ldrb	r3, [r3, r2]
90001b6c:	787a      	ldrb	r2, [r7, #1]
90001b6e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b72:	eb01 0e05 	add.w	lr, r1, r5
90001b76:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b78:	f10e 0208 	add.w	r2, lr, #8
90001b7c:	429a      	cmp	r2, r3
90001b7e:	d213      	bcs.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b80:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b84:	459c      	cmp	ip, r3
90001b86:	d138      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b88:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b8c:	429f      	cmp	r7, r3
90001b8e:	d134      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b90:	2d00      	cmp	r5, #0
90001b92:	d136      	bne.n	90001c02 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b94:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b98:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b9c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b9e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001ba0:	d002      	beq.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001ba2:	2001      	movs	r0, #1
}
90001ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001ba8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001baa:	6a23      	ldr	r3, [r4, #32]
90001bac:	2000      	movs	r0, #0
        frameNumber = 1;
90001bae:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bb0:	61a3      	str	r3, [r4, #24]
}
90001bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bb6:	230d      	movs	r3, #13
90001bb8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bbc:	e7b0      	b.n	90001b20 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bbe:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bc0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bc2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bc4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bc6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bc8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bca:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bce:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001bd0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001bd2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001bd4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001bd8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bda:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bdc:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bde:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001be2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001be6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001be8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bea:	042d      	lsls	r5, r5, #16
90001bec:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001bf0:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001bf2:	2000      	movs	r0, #0
90001bf4:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001bf8:	e7bb      	b.n	90001b72 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001bfa:	2d00      	cmp	r5, #0
90001bfc:	bf18      	it	ne
90001bfe:	4672      	movne	r2, lr
90001c00:	e7c8      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c02:	f101 0708 	add.w	r7, r1, #8
90001c06:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c08:	b1f0      	cbz	r0, 90001c48 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c0c:	429d      	cmp	r5, r3
90001c0e:	d824      	bhi.n	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c10:	6803      	ldr	r3, [r0, #0]
90001c12:	4639      	mov	r1, r7
90001c14:	68db      	ldr	r3, [r3, #12]
90001c16:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c18:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c1a:	462a      	mov	r2, r5
90001c1c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c1e:	6803      	ldr	r3, [r0, #0]
90001c20:	691b      	ldr	r3, [r3, #16]
90001c22:	4798      	blx	r3
90001c24:	b910      	cbnz	r0, 90001c2c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c26:	230d      	movs	r3, #13
90001c28:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c2e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c30:	b126      	cbz	r6, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c32:	4633      	mov	r3, r6
90001c34:	462a      	mov	r2, r5
90001c36:	4620      	mov	r0, r4
90001c38:	f7ff fec0 	bl	900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c3c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c40:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c42:	442a      	add	r2, r5
            frameNumber++;
90001c44:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c46:	e7a5      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c48:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c4a:	4439      	add	r1, r7
90001c4c:	e7f0      	b.n	90001c30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c4e:	4b07      	ldr	r3, [pc, #28]	@ (90001c6c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c50:	21c1      	movs	r1, #193	@ 0xc1
90001c52:	4a07      	ldr	r2, [pc, #28]	@ (90001c70 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c54:	4807      	ldr	r0, [pc, #28]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c56:	f028 fb1b 	bl	9002a290 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c5a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c5c:	4b06      	ldr	r3, [pc, #24]	@ (90001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c5e:	4a07      	ldr	r2, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c60:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c62:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c66:	4803      	ldr	r0, [pc, #12]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c68:	f028 fb12 	bl	9002a290 <__assert_func>
90001c6c:	9002b6ec 	.word	0x9002b6ec
90001c70:	9002b82c 	.word	0x9002b82c
90001c74:	9002b640 	.word	0x9002b640
90001c78:	9002b694 	.word	0x9002b694
90001c7c:	9002b6a8 	.word	0x9002b6a8

90001c80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c84:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c86:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c8a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c8c:	460e      	mov	r6, r1
90001c8e:	4690      	mov	r8, r2
90001c90:	461f      	mov	r7, r3
    if (reader != 0)
90001c92:	2800      	cmp	r0, #0
90001c94:	f000 80f5 	beq.w	90001e82 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001c98:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c9a:	2b07      	cmp	r3, #7
90001c9c:	f240 8106 	bls.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001ca0:	6803      	ldr	r3, [r0, #0]
90001ca2:	4649      	mov	r1, r9
90001ca4:	68db      	ldr	r3, [r3, #12]
90001ca6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001ca8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001caa:	2208      	movs	r2, #8
90001cac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cae:	6803      	ldr	r3, [r0, #0]
90001cb0:	691b      	ldr	r3, [r3, #16]
90001cb2:	4798      	blx	r3
90001cb4:	2800      	cmp	r0, #0
90001cb6:	f000 80af 	beq.w	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cba:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001cbc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cbe:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cc0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cc4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cc8:	2800      	cmp	r0, #0
90001cca:	f000 80f8 	beq.w	90001ebe <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cce:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cd2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001cd4:	1899      	adds	r1, r3, r2
90001cd6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001cd8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cda:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cde:	f891 c001 	ldrb.w	ip, [r1, #1]
90001ce2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001ce6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cea:	ea49 0902 	orr.w	r9, r9, r2
90001cee:	78ca      	ldrb	r2, [r1, #3]
90001cf0:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001cf4:	454b      	cmp	r3, r9
90001cf6:	f0c0 80d9 	bcc.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cfa:	6803      	ldr	r3, [r0, #0]
90001cfc:	4629      	mov	r1, r5
90001cfe:	68db      	ldr	r3, [r3, #12]
90001d00:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d02:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d04:	464a      	mov	r2, r9
90001d06:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d08:	6803      	ldr	r3, [r0, #0]
90001d0a:	691b      	ldr	r3, [r3, #16]
90001d0c:	4798      	blx	r3
90001d0e:	2800      	cmp	r0, #0
90001d10:	d07e      	beq.n	90001e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d12:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d14:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d16:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d1a:	2302      	movs	r3, #2
90001d1c:	4869      	ldr	r0, [pc, #420]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d1e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d22:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d24:	d16f      	bne.n	90001e06 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d26:	4662      	mov	r2, ip
90001d28:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d2a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d2c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d2e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d30:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d34:	60c3      	str	r3, [r0, #12]
90001d36:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d38:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d3c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d3e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d40:	6143      	str	r3, [r0, #20]
90001d42:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d44:	f003 030f 	and.w	r3, r3, #15
90001d48:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d4a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d4c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d4e:	b236      	sxth	r6, r6
90001d50:	bf28      	it	cs
90001d52:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d54:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d58:	f002 020f 	and.w	r2, r2, #15
90001d5c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d60:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d64:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d66:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d68:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d6a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d6c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d70:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d74:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d76:	eba3 030c 	sub.w	r3, r3, ip
90001d7a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d7c:	6923      	ldr	r3, [r4, #16]
90001d7e:	429e      	cmp	r6, r3
90001d80:	bf28      	it	cs
90001d82:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d84:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d88:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d8c:	bf18      	it	ne
90001d8e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d92:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d94:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9a:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d9c:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d9e:	bf18      	it	ne
90001da0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001da4:	4d48      	ldr	r5, [pc, #288]	@ (90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001da6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001daa:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4847      	ldr	r0, [pc, #284]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dae:	f7ff fdab 	bl	90001908 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001db2:	4b47      	ldr	r3, [pc, #284]	@ (90001ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001db4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001db6:	601f      	str	r7, [r3, #0]
90001db8:	4e46      	ldr	r6, [pc, #280]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dba:	4c47      	ldr	r4, [pc, #284]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dbc:	4f47      	ldr	r7, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dbe:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dc0:	f8da 3000 	ldr.w	r3, [sl]
90001dc4:	b113      	cbz	r3, 90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dc6:	6833      	ldr	r3, [r6, #0]
90001dc8:	2b00      	cmp	r3, #0
90001dca:	d13b      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001dcc:	6828      	ldr	r0, [r5, #0]
90001dce:	7a03      	ldrb	r3, [r0, #8]
90001dd0:	b93b      	cbnz	r3, 90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001dd2:	4b43      	ldr	r3, [pc, #268]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001dd4:	681b      	ldr	r3, [r3, #0]
90001dd6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dda:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dde:	2b01      	cmp	r3, #1
90001de0:	d044      	beq.n	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001de2:	683b      	ldr	r3, [r7, #0]
90001de4:	2b01      	cmp	r3, #1
90001de6:	d01b      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001de8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dea:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dec:	6823      	ldr	r3, [r4, #0]
90001dee:	2b02      	cmp	r3, #2
90001df0:	d032      	beq.n	90001e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001df2:	6823      	ldr	r3, [r4, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d1e3      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001df8:	2300      	movs	r3, #0
}
90001dfa:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001dfc:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e00:	6033      	str	r3, [r6, #0]
}
90001e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e06:	f02c 030f 	bic.w	r3, ip, #15
90001e0a:	3310      	adds	r3, #16
90001e0c:	461a      	mov	r2, r3
90001e0e:	e78c      	b.n	90001d2a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e10:	230d      	movs	r3, #13
90001e12:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e16:	e77c      	b.n	90001d12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e18:	230d      	movs	r3, #13
90001e1a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e1e:	e74c      	b.n	90001cba <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e20:	f8d9 3000 	ldr.w	r3, [r9]
90001e24:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e28:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e2c:	2b00      	cmp	r3, #0
90001e2e:	d1db      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e30:	f8da 3000 	ldr.w	r3, [sl]
90001e34:	2b00      	cmp	r3, #0
90001e36:	d1d7      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e38:	2102      	movs	r1, #2
90001e3a:	4824      	ldr	r0, [pc, #144]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e3c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e3e:	f008 fbff 	bl	9000a640 <HAL_JPEG_Resume>
90001e42:	e7d1      	b.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e44:	4821      	ldr	r0, [pc, #132]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e46:	f009 f9b9 	bl	9000b1bc <HAL_JPEG_GetState>
90001e4a:	2804      	cmp	r0, #4
90001e4c:	d015      	beq.n	90001e7a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e4e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e50:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e52:	6823      	ldr	r3, [r4, #0]
90001e54:	2b02      	cmp	r3, #2
90001e56:	d1cc      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e58:	4b22      	ldr	r3, [pc, #136]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e5a:	f04f 31ff 	mov.w	r1, #4294967295
90001e5e:	6818      	ldr	r0, [r3, #0]
90001e60:	f00b ff80 	bl	9000dd64 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e64:	6823      	ldr	r3, [r4, #0]
90001e66:	2b01      	cmp	r3, #1
90001e68:	d1aa      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e6a:	e7c5      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e6c:	6833      	ldr	r3, [r6, #0]
90001e6e:	2b00      	cmp	r3, #0
90001e70:	d1b7      	bne.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e72:	6803      	ldr	r3, [r0, #0]
90001e74:	691b      	ldr	r3, [r3, #16]
90001e76:	4798      	blx	r3
90001e78:	e7b3      	b.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e7a:	4814      	ldr	r0, [pc, #80]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e7c:	f008 faae 	bl	9000a3dc <HAL_JPEG_Abort>
90001e80:	e7e5      	b.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e82:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e86:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e88:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e8c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e8e:	4401      	add	r1, r0
        val |= d[0];
90001e90:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001e92:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001e94:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001e98:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001e9a:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001e9e:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001ea2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ea6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eaa:	e734      	b.n	90001d16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eac:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001eae:	4b0e      	ldr	r3, [pc, #56]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001eb0:	4a0e      	ldr	r2, [pc, #56]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001eb2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eb4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001eb8:	480d      	ldr	r0, [pc, #52]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eba:	f028 f9e9 	bl	9002a290 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ebe:	4691      	mov	r9, r2
90001ec0:	e7e1      	b.n	90001e86 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ec2:	bf00      	nop
90001ec4:	240003ac 	.word	0x240003ac
90001ec8:	24006008 	.word	0x24006008
90001ecc:	240092c8 	.word	0x240092c8
90001ed0:	24005ffc 	.word	0x24005ffc
90001ed4:	240003ec 	.word	0x240003ec
90001ed8:	2400600c 	.word	0x2400600c
90001edc:	24006010 	.word	0x24006010
90001ee0:	240003f0 	.word	0x240003f0
90001ee4:	240003f4 	.word	0x240003f4
90001ee8:	9002b694 	.word	0x9002b694
90001eec:	9002b6a8 	.word	0x9002b6a8
90001ef0:	9002b640 	.word	0x9002b640
90001ef4:	24006014 	.word	0x24006014
90001ef8:	24006004 	.word	0x24006004
90001efc:	24000004 	.word	0x24000004

90001f00 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f00:	684b      	ldr	r3, [r1, #4]
90001f02:	2b01      	cmp	r3, #1
90001f04:	d015      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f06:	2b02      	cmp	r3, #2
90001f08:	d00b      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f0a:	b94b      	cbnz	r3, 90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f0c:	68cb      	ldr	r3, [r1, #12]
90001f0e:	0758      	lsls	r0, r3, #29
90001f10:	d11e      	bne.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f12:	688b      	ldr	r3, [r1, #8]
90001f14:	075a      	lsls	r2, r3, #29
90001f16:	d003      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f18:	f023 0307 	bic.w	r3, r3, #7
90001f1c:	3308      	adds	r3, #8
90001f1e:	608b      	str	r3, [r1, #8]
    }
90001f20:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f22:	68cb      	ldr	r3, [r1, #12]
90001f24:	071a      	lsls	r2, r3, #28
90001f26:	d0f4      	beq.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f28:	f023 030f 	bic.w	r3, r3, #15
90001f2c:	3310      	adds	r3, #16
90001f2e:	60cb      	str	r3, [r1, #12]
90001f30:	e7ef      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d003      	beq.n	90001f40 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f40:	688b      	ldr	r3, [r1, #8]
90001f42:	0718      	lsls	r0, r3, #28
90001f44:	d0ec      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f46:	f023 030f 	bic.w	r3, r3, #15
90001f4a:	3310      	adds	r3, #16
90001f4c:	608b      	str	r3, [r1, #8]
90001f4e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f50:	f023 0307 	bic.w	r3, r3, #7
90001f54:	3308      	adds	r3, #8
90001f56:	60cb      	str	r3, [r1, #12]
90001f58:	e7db      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
90001f5a:	bf00      	nop

90001f5c <HAL_JPEG_GetDataCallback>:
    {
90001f5c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f5e:	4c0c      	ldr	r4, [pc, #48]	@ (90001f90 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f60:	4a0c      	ldr	r2, [pc, #48]	@ (90001f94 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f62:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f64:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f66:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f68:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f6a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f6c:	d302      	bcc.n	90001f74 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f72:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f74:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f76:	4b08      	ldr	r3, [pc, #32]	@ (90001f98 <HAL_JPEG_GetDataCallback+0x3c>)
90001f78:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f7a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f7e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f80:	bf28      	it	cs
90001f82:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f86:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8c:	f008 ba1e 	b.w	9000a3cc <HAL_JPEG_ConfigInputBuffer>
90001f90:	24006020 	.word	0x24006020
90001f94:	2400601c 	.word	0x2400601c
90001f98:	24006018 	.word	0x24006018

90001f9c <HAL_JPEG_DataReadyCallback>:
    {
90001f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fa0:	4e4a      	ldr	r6, [pc, #296]	@ (900020cc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fa2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa4:	4f4a      	ldr	r7, [pc, #296]	@ (900020d0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fa6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa8:	4d4a      	ldr	r5, [pc, #296]	@ (900020d4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001faa:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fac:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fae:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fb2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4b48      	ldr	r3, [pc, #288]	@ (900020d8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb6:	4c49      	ldr	r4, [pc, #292]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fba:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fc8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	4d45      	ldr	r5, [pc, #276]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fcc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fce:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fd2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fd6:	697b      	ldr	r3, [r7, #20]
90001fd8:	428b      	cmp	r3, r1
90001fda:	d260      	bcs.n	9000209e <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fdc:	6821      	ldr	r1, [r4, #0]
90001fde:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe0:	6823      	ldr	r3, [r4, #0]
90001fe2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fe4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ff0:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001ff6:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ffa:	6823      	ldr	r3, [r4, #0]
90001ffc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002000:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002004:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002006:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002008:	b12b      	cbz	r3, 90002016 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002016:	6832      	ldr	r2, [r6, #0]
90002018:	69bb      	ldr	r3, [r7, #24]
9000201a:	4293      	cmp	r3, r2
9000201c:	d922      	bls.n	90002064 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000201e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002020:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002022:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002026:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002028:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000202c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	2200      	movs	r2, #0
90002030:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002032:	6823      	ldr	r3, [r4, #0]
90002034:	2b01      	cmp	r3, #1
90002036:	d900      	bls.n	9000203a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002038:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000203a:	6823      	ldr	r3, [r4, #0]
9000203c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002040:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002044:	2b00      	cmp	r3, #0
90002046:	d138      	bne.n	900020ba <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002048:	6823      	ldr	r3, [r4, #0]
9000204a:	4640      	mov	r0, r8
9000204c:	68fa      	ldr	r2, [r7, #12]
9000204e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002052:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002056:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000205a:	01d2      	lsls	r2, r2, #7
9000205c:	6859      	ldr	r1, [r3, #4]
9000205e:	f008 f9b9 	bl	9000a3d4 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002062:	69bb      	ldr	r3, [r7, #24]
90002064:	6832      	ldr	r2, [r6, #0]
90002066:	429a      	cmp	r2, r3
90002068:	d20b      	bcs.n	90002082 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000206a:	4b1e      	ldr	r3, [pc, #120]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x148>)
9000206c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000206e:	7a1b      	ldrb	r3, [r3, #8]
90002070:	b10b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002072:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002076:	4b1c      	ldr	r3, [pc, #112]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002078:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000207c:	6818      	ldr	r0, [r3, #0]
9000207e:	f00b bea3 	b.w	9000ddc8 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002082:	6823      	ldr	r3, [r4, #0]
90002084:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002086:	4919      	ldr	r1, [pc, #100]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002088:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000208a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000208e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002090:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	eb05 0583 	add.w	r5, r5, r3, lsl #2
90002096:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	f008 f960 	bl	9000a35c <HAL_JPEG_Pause>
9000209c:	e7e5      	b.n	9000206a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000209e:	6823      	ldr	r3, [r4, #0]
900020a0:	68fa      	ldr	r2, [r7, #12]
900020a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020aa:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ae:	01d2      	lsls	r2, r2, #7
900020b0:	6859      	ldr	r1, [r3, #4]
    }
900020b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020b6:	f008 b98d 	b.w	9000a3d4 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ba:	2102      	movs	r1, #2
900020bc:	4640      	mov	r0, r8
900020be:	f008 f94d 	bl	9000a35c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020c2:	4b0b      	ldr	r3, [pc, #44]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x154>)
900020c4:	2201      	movs	r2, #1
900020c6:	601a      	str	r2, [r3, #0]
900020c8:	e7be      	b.n	90002048 <HAL_JPEG_DataReadyCallback+0xac>
900020ca:	bf00      	nop
900020cc:	24006000 	.word	0x24006000
900020d0:	240003ac 	.word	0x240003ac
900020d4:	24006024 	.word	0x24006024
900020d8:	24005ffc 	.word	0x24005ffc
900020dc:	24006004 	.word	0x24006004
900020e0:	24000004 	.word	0x24000004
900020e4:	24006008 	.word	0x24006008
900020e8:	240003f4 	.word	0x240003f4
900020ec:	24006014 	.word	0x24006014
900020f0:	24006010 	.word	0x24006010

900020f4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900020f4:	b672      	cpsid	i
        while (1)
900020f6:	e7fe      	b.n	900020f6 <HAL_JPEG_ErrorCallback+0x2>

900020f8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900020f8:	4b01      	ldr	r3, [pc, #4]	@ (90002100 <HAL_JPEG_DecodeCpltCallback+0x8>)
900020fa:	2201      	movs	r2, #1
900020fc:	601a      	str	r2, [r3, #0]
    }
900020fe:	4770      	bx	lr
90002100:	24006014 	.word	0x24006014

90002104 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002104:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002106:	4f1e      	ldr	r7, [pc, #120]	@ (90002180 <DMA2D_CopyBuffer+0x7c>)
90002108:	6903      	ldr	r3, [r0, #16]
9000210a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000210c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000210e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002112:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002114:	4e1b      	ldr	r6, [pc, #108]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000211a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000211e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002122:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002126:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002128:	bf18      	it	ne
9000212a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000212e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002130:	6939      	ldr	r1, [r7, #16]
90002132:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000213a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000213e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002140:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002142:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002144:	7e81      	ldrb	r1, [r0, #26]
90002146:	b1b9      	cbz	r1, 90002178 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002148:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000214a:	f1c1 0110 	rsb	r1, r1, #16
9000214e:	4321      	orrs	r1, r4
90002150:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002152:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002154:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002158:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000215c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000215e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002162:	4809      	ldr	r0, [pc, #36]	@ (90002188 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002164:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002166:	4b07      	ldr	r3, [pc, #28]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
90002168:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000216c:	4a07      	ldr	r2, [pc, #28]	@ (9000218c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000216e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002170:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002172:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002174:	6018      	str	r0, [r3, #0]
}
90002176:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002178:	f044 0410 	orr.w	r4, r4, #16
9000217c:	6474      	str	r4, [r6, #68]	@ 0x44
9000217e:	e7e8      	b.n	90002152 <DMA2D_CopyBuffer+0x4e>
90002180:	240003ac 	.word	0x240003ac
90002184:	52001000 	.word	0x52001000
90002188:	00012301 	.word	0x00012301
9000218c:	ff09000b 	.word	0xff09000b

90002190 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002190:	6902      	ldr	r2, [r0, #16]
{
90002192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002196:	4605      	mov	r5, r0
90002198:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000219a:	2a00      	cmp	r2, #0
9000219c:	d165      	bne.n	9000226a <DMA2D_CropBuffer+0xda>
9000219e:	4b35      	ldr	r3, [pc, #212]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
900021a0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021a4:	f1cc 0010 	rsb	r0, ip, #16
900021a8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021ac:	3901      	subs	r1, #1
900021ae:	428a      	cmp	r2, r1
900021b0:	d102      	bne.n	900021b8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021b2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021b4:	1a41      	subs	r1, r0, r1
900021b6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021b8:	7e6e      	ldrb	r6, [r5, #25]
900021ba:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021bc:	2e00      	cmp	r6, #0
900021be:	d051      	beq.n	90002264 <DMA2D_CropBuffer+0xd4>
900021c0:	f1c7 0110 	rsb	r1, r7, #16
900021c4:	46b8      	mov	r8, r7
900021c6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021c8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021cc:	f1be 0f00 	cmp.w	lr, #0
900021d0:	d002      	beq.n	900021d8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021d2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021d4:	1b09      	subs	r1, r1, r4
900021d6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021d8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021de:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021e2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021e4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021e6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021ea:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ec:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
900021f0:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021f4:	0052      	lsls	r2, r2, #1
900021f6:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021fe:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002202:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002204:	b107      	cbz	r7, 90002208 <DMA2D_CropBuffer+0x78>
90002206:	b90e      	cbnz	r6, 9000220c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002208:	2300      	movs	r3, #0
9000220a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000220c:	4b1a      	ldr	r3, [pc, #104]	@ (90002278 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000220e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002210:	4f1a      	ldr	r7, [pc, #104]	@ (9000227c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002212:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002214:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002216:	4a1a      	ldr	r2, [pc, #104]	@ (90002280 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002218:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000221a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000221e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002220:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002222:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002224:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002228:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000222c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002230:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002234:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002236:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002238:	685b      	ldr	r3, [r3, #4]
9000223a:	9604      	str	r6, [sp, #16]
9000223c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000223e:	4b11      	ldr	r3, [pc, #68]	@ (90002284 <DMA2D_CropBuffer+0xf4>)
90002240:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002242:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002244:	4810      	ldr	r0, [pc, #64]	@ (90002288 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002246:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002248:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000224c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000224e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002250:	490e      	ldr	r1, [pc, #56]	@ (9000228c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002252:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002254:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002256:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002258:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000225c:	6019      	str	r1, [r3, #0]
}
9000225e:	b00a      	add	sp, #40	@ 0x28
90002260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002264:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002266:	46b0      	mov	r8, r6
90002268:	e7ae      	b.n	900021c8 <DMA2D_CropBuffer+0x38>
9000226a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000226c:	f04f 0c00 	mov.w	ip, #0
90002270:	4b00      	ldr	r3, [pc, #0]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
90002272:	e79a      	b.n	900021aa <DMA2D_CropBuffer+0x1a>
90002274:	240003ac 	.word	0x240003ac
90002278:	01e00010 	.word	0x01e00010
9000227c:	240003fc 	.word	0x240003fc
90002280:	24006008 	.word	0x24006008
90002284:	52001000 	.word	0x52001000
90002288:	ff09000b 	.word	0xff09000b
9000228c:	00012301 	.word	0x00012301

90002290 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
90002290:	4b0d      	ldr	r3, [pc, #52]	@ (900022c8 <DMA2D_ExternalJobCompleted+0x38>)
90002292:	6902      	ldr	r2, [r0, #16]
90002294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90002296:	429a      	cmp	r2, r3
90002298:	d000      	beq.n	9000229c <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
9000229a:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
9000229c:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
9000229e:	4b0b      	ldr	r3, [pc, #44]	@ (900022cc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022a0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022a2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022a4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022a6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022a8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022aa:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022ac:	6819      	ldr	r1, [r3, #0]
900022ae:	2901      	cmp	r1, #1
900022b0:	d900      	bls.n	900022b4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022b2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022b4:	7e83      	ldrb	r3, [r0, #26]
900022b6:	b113      	cbz	r3, 900022be <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022b8:	4b05      	ldr	r3, [pc, #20]	@ (900022d0 <DMA2D_ExternalJobCompleted+0x40>)
900022ba:	2201      	movs	r2, #1
900022bc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022be:	4b05      	ldr	r3, [pc, #20]	@ (900022d4 <DMA2D_ExternalJobCompleted+0x44>)
900022c0:	6818      	ldr	r0, [r3, #0]
900022c2:	f00b bd81 	b.w	9000ddc8 <osSemaphoreRelease>
900022c6:	bf00      	nop
900022c8:	240003ac 	.word	0x240003ac
900022cc:	240003f0 	.word	0x240003f0
900022d0:	240003ec 	.word	0x240003ec
900022d4:	240003f4 	.word	0x240003f4

900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022d8:	2101      	movs	r1, #1
900022da:	2200      	movs	r2, #0
{
900022dc:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022de:	4608      	mov	r0, r1
900022e0:	f00b fcf4 	bl	9000dccc <osSemaphoreNew>
900022e4:	4b0b      	ldr	r3, [pc, #44]	@ (90002314 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022e8:	b140      	cbz	r0, 900022fc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022ea:	2200      	movs	r2, #0
900022ec:	2104      	movs	r1, #4
900022ee:	2001      	movs	r0, #1
900022f0:	f00b fd94 	bl	9000de1c <osMessageQueueNew>
900022f4:	4b08      	ldr	r3, [pc, #32]	@ (90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022f8:	b130      	cbz	r0, 90002308 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900022fa:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022fc:	4b07      	ldr	r3, [pc, #28]	@ (9000231c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900022fe:	2128      	movs	r1, #40	@ 0x28
90002300:	4a07      	ldr	r2, [pc, #28]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002302:	4808      	ldr	r0, [pc, #32]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002304:	f027 ffc4 	bl	9002a290 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	4b07      	ldr	r3, [pc, #28]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000230a:	212c      	movs	r1, #44	@ 0x2c
9000230c:	4a04      	ldr	r2, [pc, #16]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000230e:	4805      	ldr	r0, [pc, #20]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002310:	f027 ffbe 	bl	9002a290 <__assert_func>
90002314:	2400602c 	.word	0x2400602c
90002318:	24006028 	.word	0x24006028
9000231c:	9002b8cc 	.word	0x9002b8cc
90002320:	9002b918 	.word	0x9002b918
90002324:	9002b948 	.word	0x9002b948
90002328:	9002b990 	.word	0x9002b990

9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000232c:	4b02      	ldr	r3, [pc, #8]	@ (90002338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000232e:	f04f 31ff 	mov.w	r1, #4294967295
90002332:	6818      	ldr	r0, [r3, #0]
90002334:	f00b bd16 	b.w	9000dd64 <osSemaphoreAcquire>
90002338:	2400602c 	.word	0x2400602c

9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000233c:	4b01      	ldr	r3, [pc, #4]	@ (90002344 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000233e:	6818      	ldr	r0, [r3, #0]
90002340:	f00b bd42 	b.w	9000ddc8 <osSemaphoreRelease>
90002344:	2400602c 	.word	0x2400602c

90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002348:	4b02      	ldr	r3, [pc, #8]	@ (90002354 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000234a:	2100      	movs	r1, #0
9000234c:	6818      	ldr	r0, [r3, #0]
9000234e:	f00b bd09 	b.w	9000dd64 <osSemaphoreAcquire>
90002352:	bf00      	nop
90002354:	2400602c 	.word	0x2400602c

90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002358:	4b01      	ldr	r3, [pc, #4]	@ (90002360 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000235a:	6818      	ldr	r0, [r3, #0]
9000235c:	f00b bd34 	b.w	9000ddc8 <osSemaphoreRelease>
90002360:	2400602c 	.word	0x2400602c

90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002364:	4803      	ldr	r0, [pc, #12]	@ (90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002366:	2300      	movs	r3, #0
90002368:	4903      	ldr	r1, [pc, #12]	@ (90002378 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000236a:	461a      	mov	r2, r3
9000236c:	6800      	ldr	r0, [r0, #0]
9000236e:	f00b bd91 	b.w	9000de94 <osMessageQueuePut>
90002372:	bf00      	nop
90002374:	24006028 	.word	0x24006028
90002378:	2400003c 	.word	0x2400003c

9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000237c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000237e:	2300      	movs	r3, #0
{
90002380:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002382:	4c07      	ldr	r4, [pc, #28]	@ (900023a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002384:	461a      	mov	r2, r3
90002386:	a901      	add	r1, sp, #4
90002388:	6820      	ldr	r0, [r4, #0]
9000238a:	f00b fdbf 	bl	9000df0c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000238e:	f04f 33ff 	mov.w	r3, #4294967295
90002392:	2200      	movs	r2, #0
90002394:	a901      	add	r1, sp, #4
90002396:	6820      	ldr	r0, [r4, #0]
90002398:	f00b fdb8 	bl	9000df0c <osMessageQueueGet>
}
9000239c:	b002      	add	sp, #8
9000239e:	bd10      	pop	{r4, pc}
900023a0:	24006028 	.word	0x24006028

900023a4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023a4:	6803      	ldr	r3, [r0, #0]
900023a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023a8:	4718      	bx	r3
900023aa:	bf00      	nop

900023ac <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023ac:	2001      	movs	r0, #1
900023ae:	4770      	bx	lr

900023b0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023b0:	e7fe      	b.n	900023b0 <DMA2D_XferErrorCallback>
900023b2:	bf00      	nop

900023b4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023b4:	4905      	ldr	r1, [pc, #20]	@ (900023cc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023b6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ba:	4b05      	ldr	r3, [pc, #20]	@ (900023d0 <_ZN8STM32DMAD1Ev+0x1c>)
900023bc:	6001      	str	r1, [r0, #0]
900023be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023c6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023ca:	4770      	bx	lr
900023cc:	9002bb34 	.word	0x9002bb34
900023d0:	e000e100 	.word	0xe000e100

900023d4 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d4:	4b11      	ldr	r3, [pc, #68]	@ (9000241c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023d6:	4912      	ldr	r1, [pc, #72]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023dc:	4811      	ldr	r0, [pc, #68]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023de:	f042 0210 	orr.w	r2, r2, #16
{
900023e2:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e4:	4c10      	ldr	r4, [pc, #64]	@ (90002428 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023e6:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023e8:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ec:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023f0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023f4:	f002 0210 	and.w	r2, r2, #16
900023f8:	9201      	str	r2, [sp, #4]
900023fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900023fc:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023fe:	f042 0210 	orr.w	r2, r2, #16
90002402:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002404:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002406:	f022 0210 	bic.w	r2, r2, #16
9000240a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000240c:	4b07      	ldr	r3, [pc, #28]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x58>)
9000240e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002412:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002414:	b003      	add	sp, #12
90002416:	f85d 4b04 	ldr.w	r4, [sp], #4
9000241a:	4770      	bx	lr
9000241c:	58024400 	.word	0x58024400
90002420:	24009320 	.word	0x24009320
90002424:	900023b1 	.word	0x900023b1
90002428:	900027fd 	.word	0x900027fd
9000242c:	e000e100 	.word	0xe000e100

90002430 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002430:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002434:	4770      	bx	lr
90002436:	bf00      	nop

90002438 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002438:	4909      	ldr	r1, [pc, #36]	@ (90002460 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000243e:	4b09      	ldr	r3, [pc, #36]	@ (90002464 <_ZN8STM32DMAD0Ev+0x2c>)
90002440:	b510      	push	{r4, lr}
90002442:	6001      	str	r1, [r0, #0]
90002444:	4604      	mov	r4, r0
90002446:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000244e:	f3bf 8f6f 	isb	sy
}
90002452:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002456:	f027 fba2 	bl	90029b9e <_ZdlPvj>
9000245a:	4620      	mov	r0, r4
9000245c:	bd10      	pop	{r4, pc}
9000245e:	bf00      	nop
90002460:	9002bb34 	.word	0x9002bb34
90002464:	e000e100 	.word	0xe000e100

90002468 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002468:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000246c:	b510      	push	{r4, lr}
9000246e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002470:	b963      	cbnz	r3, 9000248c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002472:	6803      	ldr	r3, [r0, #0]
90002474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002476:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002478:	4924      	ldr	r1, [pc, #144]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000247a:	4a25      	ldr	r2, [pc, #148]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000247c:	680b      	ldr	r3, [r1, #0]
9000247e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002482:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002486:	2b01      	cmp	r3, #1
90002488:	d015      	beq.n	900024b6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000248a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000248c:	7a03      	ldrb	r3, [r0, #8]
9000248e:	2b00      	cmp	r3, #0
90002490:	d12b      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
90002492:	6860      	ldr	r0, [r4, #4]
90002494:	6803      	ldr	r3, [r0, #0]
90002496:	681b      	ldr	r3, [r3, #0]
90002498:	4798      	blx	r3
9000249a:	4603      	mov	r3, r0
9000249c:	2800      	cmp	r0, #0
9000249e:	d1f4      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a0:	7a62      	ldrb	r2, [r4, #9]
900024a2:	2a00      	cmp	r2, #0
900024a4:	d0f1      	beq.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024a6:	6822      	ldr	r2, [r4, #0]
900024a8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024b4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b6:	4817      	ldr	r0, [pc, #92]	@ (90002514 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b8:	6800      	ldr	r0, [r0, #0]
900024ba:	2800      	cmp	r0, #0
900024bc:	d1e5      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024be:	7a20      	ldrb	r0, [r4, #8]
900024c0:	2800      	cmp	r0, #0
900024c2:	d1e2      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ca:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ce:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024d4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	6808      	ldr	r0, [r1, #0]
900024d8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	b17b      	cbz	r3, 90002502 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	f7ff be53 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ea:	4b08      	ldr	r3, [pc, #32]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024ec:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	4808      	ldr	r0, [pc, #32]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024f0:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024f2:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024fc:	f7ff fec8 	bl	90002290 <DMA2D_ExternalJobCompleted>
90002500:	e7c7      	b.n	90002492 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	f7ff bdfd 	b.w	90002104 <DMA2D_CopyBuffer>
9000250a:	bf00      	nop
9000250c:	240003f0 	.word	0x240003f0
90002510:	24000004 	.word	0x24000004
90002514:	240003ec 	.word	0x240003ec

90002518 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002518:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000251a:	7f8b      	ldrb	r3, [r1, #30]
9000251c:	2b0a      	cmp	r3, #10
9000251e:	d83d      	bhi.n	9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002520:	e8df f003 	tbb	[pc, r3]
90002524:	3c2a063a 	.word	0x3c2a063a
90002528:	063c3c3c 	.word	0x063c3c3c
9000252c:	0606      	.short	0x0606
9000252e:	06          	.byte	0x06
9000252f:	00          	.byte	0x00
90002530:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002532:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002536:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002538:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253a:	4b1b      	ldr	r3, [pc, #108]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000253c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002540:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002542:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002546:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002548:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000254a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000254c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000254e:	680e      	ldr	r6, [r1, #0]
        return color;
90002550:	68c8      	ldr	r0, [r1, #12]
90002552:	2e08      	cmp	r6, #8
90002554:	d012      	beq.n	9000257c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002556:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002558:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255a:	0941      	lsrs	r1, r0, #5
9000255c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002560:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002564:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000256a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000256e:	490f      	ldr	r1, [pc, #60]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002570:	4302      	orrs	r2, r0
90002572:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002574:	6019      	str	r1, [r3, #0]
    }
}
90002576:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002578:	2400      	movs	r4, #0
9000257a:	e7da      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002580:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002582:	4a0b      	ldr	r2, [pc, #44]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002584:	7f09      	ldrb	r1, [r1, #28]
90002586:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000258a:	490a      	ldr	r1, [pc, #40]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000258c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000258e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002590:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002592:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90002594:	6019      	str	r1, [r3, #0]
}
90002596:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002598:	2402      	movs	r4, #2
9000259a:	e7ca      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
9000259c:	4b06      	ldr	r3, [pc, #24]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
9000259e:	2191      	movs	r1, #145	@ 0x91
900025a0:	4a06      	ldr	r2, [pc, #24]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025a2:	4807      	ldr	r0, [pc, #28]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025a4:	f027 fe74 	bl	9002a290 <__assert_func>
900025a8:	52001000 	.word	0x52001000
900025ac:	00032301 	.word	0x00032301
900025b0:	00010009 	.word	0x00010009
900025b4:	00022301 	.word	0x00022301
900025b8:	9002b9d4 	.word	0x9002b9d4
900025bc:	9002b9f0 	.word	0x9002b9f0
900025c0:	9002ba3c 	.word	0x9002ba3c

900025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025c6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025ca:	f1be 0f0b 	cmp.w	lr, #11
900025ce:	f200 80ac 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025d2:	e8df f00e 	tbb	[pc, lr]
900025d6:	605b      	.short	0x605b
900025d8:	aaaaaa46 	.word	0xaaaaaa46
900025dc:	060606aa 	.word	0x060606aa
900025e0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025e2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025e4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f200 809d 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025f0:	e8df f00c 	tbb	[pc, ip]
900025f4:	9b0d494e 	.word	0x9b0d494e
900025f8:	069b9b9b 	.word	0x069b9b9b
900025fc:	06060606 	.word	0x06060606
    switch (format)
90002600:	f1bc 0f0b 	cmp.w	ip, #11
90002604:	f000 8097 	beq.w	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002608:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000260a:	2701      	movs	r7, #1
9000260c:	e001      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000260e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002610:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	8a8b      	ldrh	r3, [r1, #20]
90002614:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002616:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002618:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000261c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000261e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	4b4b      	ldr	r3, [pc, #300]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002624:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002626:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002628:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000262c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000262e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002630:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002632:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002634:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002636:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000263a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002640:	d02e      	beq.n	900026a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002642:	d810      	bhi.n	90002666 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002644:	2a20      	cmp	r2, #32
90002646:	d028      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002648:	2a40      	cmp	r2, #64	@ 0x40
9000264a:	d026      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000264c:	2a04      	cmp	r2, #4
9000264e:	d15a      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002650:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002652:	4a40      	ldr	r2, [pc, #256]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002658:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000265a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000265e:	601a      	str	r2, [r3, #0]
}
90002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002662:	2600      	movs	r6, #0
90002664:	e7be      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002666:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000266a:	d059      	beq.n	90002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000266c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002670:	d149      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002672:	4a39      	ldr	r2, [pc, #228]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002674:	4302      	orrs	r2, r0
90002676:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002678:	4a36      	ldr	r2, [pc, #216]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000267a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000267c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000267e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002680:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002682:	601a      	str	r2, [r3, #0]
}
90002684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002686:	2401      	movs	r4, #1
90002688:	4627      	mov	r7, r4
9000268a:	e7c2      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000268c:	2602      	movs	r6, #2
9000268e:	e7a9      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002690:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002692:	4627      	mov	r7, r4
90002694:	e7bd      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90002696:	2601      	movs	r6, #1
90002698:	e7a4      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4330      	orrs	r0, r6
9000269c:	4b2c      	ldr	r3, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000269e:	e7d8      	b.n	90002652 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026aa:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026ac:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b4:	b9b1      	cbnz	r1, 900026e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026b6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026b8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ba:	69d8      	ldr	r0, [r3, #28]
900026bc:	4a27      	ldr	r2, [pc, #156]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026be:	3901      	subs	r1, #1
900026c0:	4002      	ands	r2, r0
900026c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026c6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026c8:	4a21      	ldr	r2, [pc, #132]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ca:	69d3      	ldr	r3, [r2, #28]
900026cc:	f043 0320 	orr.w	r3, r3, #32
900026d0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026d2:	69d3      	ldr	r3, [r2, #28]
900026d4:	069b      	lsls	r3, r3, #26
900026d6:	d4fc      	bmi.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026d8:	2310      	movs	r3, #16
900026da:	6093      	str	r3, [r2, #8]
            if (blend)
900026dc:	b317      	cbz	r7, 90002724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026de:	4b1d      	ldr	r3, [pc, #116]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026e0:	6013      	str	r3, [r2, #0]
}
900026e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026e4:	2901      	cmp	r1, #1
900026e6:	d12c      	bne.n	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026ea:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ec:	69d8      	ldr	r0, [r3, #28]
900026ee:	4a1b      	ldr	r2, [pc, #108]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
900026f4:	bf18      	it	ne
900026f6:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	4002      	ands	r2, r0
900026fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026fe:	f042 0210 	orr.w	r2, r2, #16
90002702:	61da      	str	r2, [r3, #28]
                break;
90002704:	e7e0      	b.n	900026c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002706:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002708:	ea46 0600 	orr.w	r6, r6, r0
9000270c:	4b10      	ldr	r3, [pc, #64]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000270e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002712:	bf14      	ite	ne
90002714:	4a12      	ldrne	r2, [pc, #72]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002716:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000271c:	601a      	str	r2, [r3, #0]
}
9000271e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002720:	4a10      	ldr	r2, [pc, #64]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002722:	e7a7      	b.n	90002674 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002724:	4b0e      	ldr	r3, [pc, #56]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002726:	6013      	str	r3, [r2, #0]
}
90002728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000272a:	4b0f      	ldr	r3, [pc, #60]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000272c:	2170      	movs	r1, #112	@ 0x70
9000272e:	4a0f      	ldr	r2, [pc, #60]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	480f      	ldr	r0, [pc, #60]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002732:	f027 fdad 	bl	9002a290 <__assert_func>
        assert(0 && "Unsupported Format!");
90002736:	4b0c      	ldr	r3, [pc, #48]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002738:	2191      	movs	r1, #145	@ 0x91
9000273a:	4a0e      	ldr	r2, [pc, #56]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000273c:	480c      	ldr	r0, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000273e:	f027 fda7 	bl	9002a290 <__assert_func>
                assert(0 && "Unsupported format");
90002742:	4b0d      	ldr	r3, [pc, #52]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002744:	f240 111b 	movw	r1, #283	@ 0x11b
90002748:	4a0c      	ldr	r2, [pc, #48]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000274a:	4809      	ldr	r0, [pc, #36]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274c:	f027 fda0 	bl	9002a290 <__assert_func>
90002750:	52001000 	.word	0x52001000
90002754:	00022301 	.word	0x00022301
90002758:	00020009 	.word	0x00020009
9000275c:	ffff00ef 	.word	0xffff00ef
90002760:	00012301 	.word	0x00012301
90002764:	0002000a 	.word	0x0002000a
90002768:	9002b9d4 	.word	0x9002b9d4
9000276c:	9002ba84 	.word	0x9002ba84
90002770:	9002ba3c 	.word	0x9002ba3c
90002774:	9002b9f0 	.word	0x9002b9f0
90002778:	9002bad0 	.word	0x9002bad0
9000277c:	9002baec 	.word	0x9002baec

90002780 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002780:	b510      	push	{r4, lr}
90002782:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002784:	6840      	ldr	r0, [r0, #4]
90002786:	6803      	ldr	r3, [r0, #0]
90002788:	681b      	ldr	r3, [r3, #0]
9000278a:	4798      	blx	r3
9000278c:	b958      	cbnz	r0, 900027a6 <_ZN8STM32DMA5startEv+0x26>
9000278e:	7a63      	ldrb	r3, [r4, #9]
90002790:	b14b      	cbz	r3, 900027a6 <_ZN8STM32DMA5startEv+0x26>
90002792:	7a23      	ldrb	r3, [r4, #8]
90002794:	bb3b      	cbnz	r3, 900027e6 <_ZN8STM32DMA5startEv+0x66>
            execute();
90002796:	6822      	ldr	r2, [r4, #0]
90002798:	4620      	mov	r0, r4
            started_by_external_job = false;
9000279a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000279e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027a4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027a6:	4913      	ldr	r1, [pc, #76]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027a8:	4a13      	ldr	r2, [pc, #76]	@ (900027f8 <_ZN8STM32DMA5startEv+0x78>)
900027aa:	680b      	ldr	r3, [r1, #0]
900027ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027b0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027b4:	2b01      	cmp	r3, #1
900027b6:	d000      	beq.n	900027ba <_ZN8STM32DMA5startEv+0x3a>
    }
900027b8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ba:	7a20      	ldrb	r0, [r4, #8]
900027bc:	2800      	cmp	r0, #0
900027be:	d1fb      	bne.n	900027b8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027c2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ca:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027d0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d2:	6808      	ldr	r0, [r1, #0]
900027d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027d8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	b133      	cbz	r3, 900027ec <_ZN8STM32DMA5startEv+0x6c>
    }
900027de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	f7ff bcd5 	b.w	90002190 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027e6:	4b03      	ldr	r3, [pc, #12]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027e8:	681b      	ldr	r3, [r3, #0]
    }
900027ea:	bd10      	pop	{r4, pc}
900027ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f0:	f7ff bc88 	b.w	90002104 <DMA2D_CopyBuffer>
900027f4:	240003f0 	.word	0x240003f0
900027f8:	24000004 	.word	0x24000004

900027fc <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027fc:	4b2c      	ldr	r3, [pc, #176]	@ (900028b0 <DMA2D_XferCpltCallback+0xb4>)
900027fe:	492d      	ldr	r1, [pc, #180]	@ (900028b4 <DMA2D_XferCpltCallback+0xb8>)
90002800:	681b      	ldr	r3, [r3, #0]
    {
90002802:	b510      	push	{r4, lr}
90002804:	685c      	ldr	r4, [r3, #4]
90002806:	6823      	ldr	r3, [r4, #0]
90002808:	695a      	ldr	r2, [r3, #20]
9000280a:	428a      	cmp	r2, r1
9000280c:	d122      	bne.n	90002854 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000280e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002812:	b192      	cbz	r2, 9000283a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002814:	7a23      	ldrb	r3, [r4, #8]
90002816:	2b00      	cmp	r3, #0
90002818:	d13a      	bne.n	90002890 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000281a:	6860      	ldr	r0, [r4, #4]
9000281c:	6803      	ldr	r3, [r0, #0]
9000281e:	681b      	ldr	r3, [r3, #0]
90002820:	4798      	blx	r3
90002822:	4603      	mov	r3, r0
90002824:	b9a8      	cbnz	r0, 90002852 <DMA2D_XferCpltCallback+0x56>
90002826:	7a62      	ldrb	r2, [r4, #9]
90002828:	b19a      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x56>
                execute();
9000282a:	6822      	ldr	r2, [r4, #0]
9000282c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000282e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002832:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002838:	4718      	bx	r3
            executeCompleted();
9000283a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000283c:	4620      	mov	r0, r4
9000283e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002840:	491d      	ldr	r1, [pc, #116]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
90002842:	4a1e      	ldr	r2, [pc, #120]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002844:	680b      	ldr	r3, [r1, #0]
90002846:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000284a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000284e:	2b01      	cmp	r3, #1
90002850:	d004      	beq.n	9000285c <DMA2D_XferCpltCallback+0x60>
90002852:	bd10      	pop	{r4, pc}
90002854:	4620      	mov	r0, r4
90002856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000285a:	4710      	bx	r2
9000285c:	4818      	ldr	r0, [pc, #96]	@ (900028c0 <DMA2D_XferCpltCallback+0xc4>)
9000285e:	6800      	ldr	r0, [r0, #0]
90002860:	2800      	cmp	r0, #0
90002862:	d1f6      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
90002864:	7a20      	ldrb	r0, [r4, #8]
90002866:	2800      	cmp	r0, #0
90002868:	d1f3      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000286c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002870:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002874:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000287a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287c:	6808      	ldr	r0, [r1, #0]
9000287e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002882:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	b17b      	cbz	r3, 900028a8 <DMA2D_XferCpltCallback+0xac>
90002888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	f7ff bc80 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	4b09      	ldr	r3, [pc, #36]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002892:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	4809      	ldr	r0, [pc, #36]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002896:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002898:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000289e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028a2:	f7ff fcf5 	bl	90002290 <DMA2D_ExternalJobCompleted>
900028a6:	e7b8      	b.n	9000281a <DMA2D_XferCpltCallback+0x1e>
900028a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	f7ff bc2a 	b.w	90002104 <DMA2D_CopyBuffer>
900028b0:	240234bc 	.word	0x240234bc
900028b4:	90002469 	.word	0x90002469
900028b8:	240003f0 	.word	0x240003f0
900028bc:	24000004 	.word	0x24000004
900028c0:	240003ec 	.word	0x240003ec

900028c4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028c4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028c6:	4b0c      	ldr	r3, [pc, #48]	@ (900028f8 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028c8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ca:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028cc:	2500      	movs	r5, #0
900028ce:	300c      	adds	r0, #12
900028d0:	2260      	movs	r2, #96	@ 0x60
900028d2:	7235      	strb	r5, [r6, #8]
900028d4:	7275      	strb	r5, [r6, #9]
900028d6:	6070      	str	r0, [r6, #4]
900028d8:	f844 3b20 	str.w	r3, [r4], #32
900028dc:	4621      	mov	r1, r4
900028de:	f00f fa37 	bl	90011d50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028e2:	4621      	mov	r1, r4
900028e4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028e8:	60cd      	str	r5, [r1, #12]
900028ea:	3124      	adds	r1, #36	@ 0x24
900028ec:	4299      	cmp	r1, r3
900028ee:	d1fb      	bne.n	900028e8 <_ZN8STM32DMAC1Ev+0x24>
}
900028f0:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f2:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028f6:	bd70      	pop	{r4, r5, r6, pc}
900028f8:	9002bb34 	.word	0x9002bb34

900028fc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028fc:	4a03      	ldr	r2, [pc, #12]	@ (9000290c <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028fe:	6813      	ldr	r3, [r2, #0]
90002900:	07db      	lsls	r3, r3, #31
90002902:	d4fc      	bmi.n	900028fe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002904:	2323      	movs	r3, #35	@ 0x23
90002906:	6093      	str	r3, [r2, #8]
}
90002908:	4770      	bx	lr
9000290a:	bf00      	nop
9000290c:	52001000 	.word	0x52001000

90002910 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002910:	4a0b      	ldr	r2, [pc, #44]	@ (90002940 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002912:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002914:	03db      	lsls	r3, r3, #15
90002916:	d501      	bpl.n	9000291c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002918:	2900      	cmp	r1, #0
9000291a:	dc00      	bgt.n	9000291e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000291c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000291e:	f000 031f 	and.w	r3, r0, #31
90002922:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002924:	f3bf 8f4f 	dsb	sy
90002928:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000292a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000292e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002930:	1a0b      	subs	r3, r1, r0
90002932:	2b00      	cmp	r3, #0
90002934:	dcf9      	bgt.n	9000292a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002936:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000293a:	f3bf 8f6f 	isb	sy
9000293e:	4770      	bx	lr
90002940:	e000ed00 	.word	0xe000ed00

90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002944:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002946:	4c11      	ldr	r4, [pc, #68]	@ (9000298c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002948:	6825      	ldr	r5, [r4, #0]
9000294a:	07ed      	lsls	r5, r5, #31
9000294c:	d4fc      	bmi.n	90002948 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000294e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002950:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002952:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002954:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002956:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000295a:	f04f 0502 	mov.w	r5, #2
9000295e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002960:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002962:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002964:	d00b      	beq.n	9000297e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002966:	490a      	ldr	r1, [pc, #40]	@ (90002990 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002968:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000296a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000296e:	4909      	ldr	r1, [pc, #36]	@ (90002994 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002970:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002972:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002974:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002976:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002978:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000297a:	bc30      	pop	{r4, r5}
9000297c:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000297e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002980:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002982:	4b05      	ldr	r3, [pc, #20]	@ (90002998 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002984:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002986:	6023      	str	r3, [r4, #0]
}
90002988:	bc30      	pop	{r4, r5}
9000298a:	4770      	bx	lr
9000298c:	52001000 	.word	0x52001000
90002990:	00010009 	.word	0x00010009
90002994:	00020001 	.word	0x00020001
90002998:	00030001 	.word	0x00030001

9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
9000299c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000299e:	4c10      	ldr	r4, [pc, #64]	@ (900029e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029a0:	6825      	ldr	r5, [r4, #0]
900029a2:	07ed      	lsls	r5, r5, #31
900029a4:	d4fc      	bmi.n	900029a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029a6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029a8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029aa:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029ac:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ae:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b2:	f04f 0502 	mov.w	r5, #2
900029b6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ba:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029bc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029be:	d009      	beq.n	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029c2:	4a08      	ldr	r2, [pc, #32]	@ (900029e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029c8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029ca:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029cc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029ce:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029d0:	bc30      	pop	{r4, r5}
900029d2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d4:	4a04      	ldr	r2, [pc, #16]	@ (900029e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029d6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029da:	6023      	str	r3, [r4, #0]
}
900029dc:	bc30      	pop	{r4, r5}
900029de:	4770      	bx	lr
900029e0:	52001000 	.word	0x52001000
900029e4:	00020001 	.word	0x00020001
900029e8:	ff020002 	.word	0xff020002

900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029ec:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ee:	4c0c      	ldr	r4, [pc, #48]	@ (90002a20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900029f0:	6825      	ldr	r5, [r4, #0]
900029f2:	07ed      	lsls	r5, r5, #31
900029f4:	d4fc      	bmi.n	900029f0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029f6:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029f8:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029fa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029fc:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029fe:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a02:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a06:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a08:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a0c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a0e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a10:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a12:	4b04      	ldr	r3, [pc, #16]	@ (90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a14:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a18:	6023      	str	r3, [r4, #0]
}
90002a1a:	bc70      	pop	{r4, r5, r6}
90002a1c:	4770      	bx	lr
90002a1e:	bf00      	nop
90002a20:	52001000 	.word	0x52001000
90002a24:	00020001 	.word	0x00020001

90002a28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a28:	2001      	movs	r0, #1
90002a2a:	4770      	bx	lr

90002a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a2c:	2040      	movs	r0, #64	@ 0x40
90002a2e:	4770      	bx	lr

90002a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a30:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002a34:	3008      	adds	r0, #8
90002a36:	4770      	bx	lr

90002a38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a38:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002a3c:	3008      	adds	r0, #8
90002a3e:	4770      	bx	lr

90002a40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a40:	2001      	movs	r0, #1
90002a42:	4770      	bx	lr

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a44:	f641 60d8 	movw	r0, #7896	@ 0x1ed8
90002a48:	4770      	bx	lr
90002a4a:	bf00      	nop

90002a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a4c:	f641 63d8 	movw	r3, #7896	@ 0x1ed8
90002a50:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a54:	3008      	adds	r0, #8
90002a56:	4770      	bx	lr

90002a58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a58:	f641 63d8 	movw	r3, #7896	@ 0x1ed8
90002a5c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a60:	3008      	adds	r0, #8
90002a62:	4770      	bx	lr

90002a64 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a64:	2001      	movs	r0, #1
90002a66:	4770      	bx	lr

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a68:	2010      	movs	r0, #16
90002a6a:	4770      	bx	lr

90002a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a6c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a70:	3008      	adds	r0, #8
90002a72:	4770      	bx	lr

90002a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a74:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a78:	3008      	adds	r0, #8
90002a7a:	4770      	bx	lr

90002a7c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90002a7c:	4608      	mov	r0, r1
90002a7e:	f002 ba11 	b.w	90004ea4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
90002a82:	bf00      	nop

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002a84:	4b03      	ldr	r3, [pc, #12]	@ (90002a94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002a86:	b510      	push	{r4, lr}
90002a88:	4604      	mov	r4, r0
90002a8a:	6003      	str	r3, [r0, #0]
90002a8c:	f00d ffad 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a90:	4620      	mov	r0, r4
90002a92:	bd10      	pop	{r4, pc}
90002a94:	9002bbec 	.word	0x9002bbec

90002a98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002a98:	4b05      	ldr	r3, [pc, #20]	@ (90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90002a9a:	b510      	push	{r4, lr}
90002a9c:	4604      	mov	r4, r0
90002a9e:	6003      	str	r3, [r0, #0]
90002aa0:	f00d ffa3 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aa4:	2148      	movs	r1, #72	@ 0x48
90002aa6:	4620      	mov	r0, r4
90002aa8:	f027 f879 	bl	90029b9e <_ZdlPvj>
90002aac:	4620      	mov	r0, r4
90002aae:	bd10      	pop	{r4, pc}
90002ab0:	9002bbec 	.word	0x9002bbec

90002ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ab4:	4b03      	ldr	r3, [pc, #12]	@ (90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ab6:	b510      	push	{r4, lr}
90002ab8:	4604      	mov	r4, r0
90002aba:	6003      	str	r3, [r0, #0]
90002abc:	f00d ff95 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac0:	4620      	mov	r0, r4
90002ac2:	bd10      	pop	{r4, pc}
90002ac4:	9002bbb8 	.word	0x9002bbb8

90002ac8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ac8:	4b06      	ldr	r3, [pc, #24]	@ (90002ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002aca:	b510      	push	{r4, lr}
90002acc:	4604      	mov	r4, r0
90002ace:	6003      	str	r3, [r0, #0]
90002ad0:	f00d ff8b 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad4:	f44f 51f7 	mov.w	r1, #7904	@ 0x1ee0
90002ad8:	4620      	mov	r0, r4
90002ada:	f027 f860 	bl	90029b9e <_ZdlPvj>
90002ade:	4620      	mov	r0, r4
90002ae0:	bd10      	pop	{r4, pc}
90002ae2:	bf00      	nop
90002ae4:	9002bbb8 	.word	0x9002bbb8

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ae8:	4b03      	ldr	r3, [pc, #12]	@ (90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00d ff7b 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	4620      	mov	r0, r4
90002af6:	bd10      	pop	{r4, pc}
90002af8:	9002bb84 	.word	0x9002bb84

90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002afc:	4b05      	ldr	r3, [pc, #20]	@ (90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afe:	b510      	push	{r4, lr}
90002b00:	4604      	mov	r4, r0
90002b02:	6003      	str	r3, [r0, #0]
90002b04:	f00d ff71 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	2118      	movs	r1, #24
90002b0a:	4620      	mov	r0, r4
90002b0c:	f027 f847 	bl	90029b9e <_ZdlPvj>
90002b10:	4620      	mov	r0, r4
90002b12:	bd10      	pop	{r4, pc}
90002b14:	9002bb84 	.word	0x9002bb84

90002b18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b18:	b510      	push	{r4, lr}
90002b1a:	4604      	mov	r4, r0
90002b1c:	490c      	ldr	r1, [pc, #48]	@ (90002b50 <_ZN12FrontendHeapD1Ev+0x38>)
90002b1e:	4a0d      	ldr	r2, [pc, #52]	@ (90002b54 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b20:	f641 700c 	movw	r0, #7948	@ 0x1f0c
90002b24:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b28:	6021      	str	r1, [r4, #0]
90002b2a:	4420      	add	r0, r4
90002b2c:	f8c3 2f0c 	str.w	r2, [r3, #3852]	@ 0xf0c
90002b30:	f00d ff5b 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b34:	4620      	mov	r0, r4
90002b36:	4b08      	ldr	r3, [pc, #32]	@ (90002b58 <_ZN12FrontendHeapD1Ev+0x40>)
90002b38:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b3c:	f00d ff55 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b40:	4620      	mov	r0, r4
90002b42:	4b06      	ldr	r3, [pc, #24]	@ (90002b5c <_ZN12FrontendHeapD1Ev+0x44>)
90002b44:	f840 3f14 	str.w	r3, [r0, #20]!
90002b48:	f00d ff4f 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b4c:	4620      	mov	r0, r4
90002b4e:	bd10      	pop	{r4, pc}
90002b50:	9002bc20 	.word	0x9002bc20
90002b54:	9002bbec 	.word	0x9002bbec
90002b58:	9002bbb8 	.word	0x9002bbb8
90002b5c:	9002bb84 	.word	0x9002bb84

90002b60 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b60:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b62:	4c0c      	ldr	r4, [pc, #48]	@ (90002b94 <__tcf_0+0x34>)
90002b64:	490c      	ldr	r1, [pc, #48]	@ (90002b98 <__tcf_0+0x38>)
90002b66:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b6a:	4a0c      	ldr	r2, [pc, #48]	@ (90002b9c <__tcf_0+0x3c>)
90002b6c:	480c      	ldr	r0, [pc, #48]	@ (90002ba0 <__tcf_0+0x40>)
90002b6e:	6021      	str	r1, [r4, #0]
90002b70:	f8c3 2f0c 	str.w	r2, [r3, #3852]	@ 0xf0c
90002b74:	f00d ff39 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b78:	4620      	mov	r0, r4
90002b7a:	4b0a      	ldr	r3, [pc, #40]	@ (90002ba4 <__tcf_0+0x44>)
90002b7c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b80:	f00d ff33 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b84:	4620      	mov	r0, r4
90002b86:	4b08      	ldr	r3, [pc, #32]	@ (90002ba8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002b8c:	f840 3f14 	str.w	r3, [r0, #20]!
90002b90:	f00d bf2b 	b.w	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b94:	24006f10 	.word	0x24006f10
90002b98:	9002bc20 	.word	0x9002bc20
90002b9c:	9002bbec 	.word	0x9002bbec
90002ba0:	24008e1c 	.word	0x24008e1c
90002ba4:	9002bbb8 	.word	0x9002bbb8
90002ba8:	9002bb84 	.word	0x9002bb84

90002bac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bac:	b510      	push	{r4, lr}
90002bae:	4604      	mov	r4, r0
90002bb0:	4a0f      	ldr	r2, [pc, #60]	@ (90002bf0 <_ZN12FrontendHeapD0Ev+0x44>)
90002bb2:	4910      	ldr	r1, [pc, #64]	@ (90002bf4 <_ZN12FrontendHeapD0Ev+0x48>)
90002bb4:	f641 700c 	movw	r0, #7948	@ 0x1f0c
90002bb8:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002bbc:	6021      	str	r1, [r4, #0]
90002bbe:	4420      	add	r0, r4
90002bc0:	f8c3 2f0c 	str.w	r2, [r3, #3852]	@ 0xf0c
90002bc4:	f00d ff11 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc8:	4620      	mov	r0, r4
90002bca:	4b0b      	ldr	r3, [pc, #44]	@ (90002bf8 <_ZN12FrontendHeapD0Ev+0x4c>)
90002bcc:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bd0:	f00d ff0b 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd4:	4b09      	ldr	r3, [pc, #36]	@ (90002bfc <_ZN12FrontendHeapD0Ev+0x50>)
90002bd6:	4620      	mov	r0, r4
90002bd8:	f840 3f14 	str.w	r3, [r0, #20]!
90002bdc:	f00d ff05 	bl	900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be0:	4620      	mov	r0, r4
90002be2:	f242 01b8 	movw	r1, #8376	@ 0x20b8
90002be6:	f026 ffda 	bl	90029b9e <_ZdlPvj>
90002bea:	4620      	mov	r0, r4
90002bec:	bd10      	pop	{r4, pc}
90002bee:	bf00      	nop
90002bf0:	9002bbec 	.word	0x9002bbec
90002bf4:	9002bc20 	.word	0x9002bc20
90002bf8:	9002bbb8 	.word	0x9002bbb8
90002bfc:	9002bb84 	.word	0x9002bb84

90002c00 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c04:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c06:	2400      	movs	r4, #0
90002c08:	f001 fc8a 	bl	90004520 <_ZN14BitmapDatabase11getInstanceEv>
90002c0c:	4605      	mov	r5, r0
90002c0e:	f001 fc8b 	bl	90004528 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c12:	4623      	mov	r3, r4
90002c14:	4601      	mov	r1, r0
90002c16:	4622      	mov	r2, r4
90002c18:	4628      	mov	r0, r5
90002c1a:	9400      	str	r4, [sp, #0]
90002c1c:	f017 ff74 	bl	9001ab08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c20:	4b2a      	ldr	r3, [pc, #168]	@ (90002ccc <touchgfx_init+0xcc>)
90002c22:	4a2b      	ldr	r2, [pc, #172]	@ (90002cd0 <touchgfx_init+0xd0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c24:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c26:	4c2b      	ldr	r4, [pc, #172]	@ (90002cd4 <touchgfx_init+0xd4>)
90002c28:	601a      	str	r2, [r3, #0]
90002c2a:	f004 f919 	bl	90006e60 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c2e:	4b2a      	ldr	r3, [pc, #168]	@ (90002cd8 <touchgfx_init+0xd8>)
90002c30:	4a2a      	ldr	r2, [pc, #168]	@ (90002cdc <touchgfx_init+0xdc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c32:	482b      	ldr	r0, [pc, #172]	@ (90002ce0 <touchgfx_init+0xe0>)
90002c34:	609a      	str	r2, [r3, #8]
90002c36:	f017 fecf 	bl	9001a9d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c3a:	6823      	ldr	r3, [r4, #0]
90002c3c:	f3bf 8f5b 	dmb	ish
90002c40:	07db      	lsls	r3, r3, #31
90002c42:	d505      	bpl.n	90002c50 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c44:	4827      	ldr	r0, [pc, #156]	@ (90002ce4 <touchgfx_init+0xe4>)
}
90002c46:	b002      	add	sp, #8
90002c48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c4c:	f7fe b94e 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002c50:	4620      	mov	r0, r4
90002c52:	f026 ffa6 	bl	90029ba2 <__cxa_guard_acquire>
90002c56:	2800      	cmp	r0, #0
90002c58:	d0f4      	beq.n	90002c44 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c5a:	4d23      	ldr	r5, [pc, #140]	@ (90002ce8 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
90002c5c:	4f23      	ldr	r7, [pc, #140]	@ (90002cec <touchgfx_init+0xec>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c5e:	4b24      	ldr	r3, [pc, #144]	@ (90002cf0 <touchgfx_init+0xf0>)
        : presenterStorage(pres),
90002c60:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002c64:	f107 0650 	add.w	r6, r7, #80	@ 0x50
          screenStorage(scr),
90002c68:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
90002c6c:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002c6e:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002c70:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002c72:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c74:	f8c5 8008 	str.w	r8, [r5, #8]
90002c78:	f00d feb8 	bl	900109ec <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c7c:	4b1d      	ldr	r3, [pc, #116]	@ (90002cf4 <touchgfx_init+0xf4>)
90002c7e:	4640      	mov	r0, r8
90002c80:	616b      	str	r3, [r5, #20]
90002c82:	f00d feb3 	bl	900109ec <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c86:	4b1c      	ldr	r3, [pc, #112]	@ (90002cf8 <touchgfx_init+0xf8>)
90002c88:	4638      	mov	r0, r7
90002c8a:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c8c:	f00d feae 	bl	900109ec <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c90:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90002c94:	4a19      	ldr	r2, [pc, #100]	@ (90002cfc <touchgfx_init+0xfc>)
90002c96:	f603 7054 	addw	r0, r3, #3924	@ 0xf54
90002c9a:	f8c3 2f0c 	str.w	r2, [r3, #3852]	@ 0xf0c
90002c9e:	f004 f969 	bl	90006f74 <_ZN5ModelC1Ev>
90002ca2:	462a      	mov	r2, r5
90002ca4:	f107 0148 	add.w	r1, r7, #72	@ 0x48
90002ca8:	4630      	mov	r0, r6
90002caa:	f004 f959 	bl	90006f60 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cae:	4630      	mov	r0, r6
90002cb0:	f002 f8f8 	bl	90004ea4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002cb4:	4812      	ldr	r0, [pc, #72]	@ (90002d00 <touchgfx_init+0x100>)
90002cb6:	f027 fb09 	bl	9002a2cc <atexit>
90002cba:	4620      	mov	r0, r4
90002cbc:	f026 ff7d 	bl	90029bba <__cxa_guard_release>
90002cc0:	4808      	ldr	r0, [pc, #32]	@ (90002ce4 <touchgfx_init+0xe4>)
}
90002cc2:	b002      	add	sp, #8
90002cc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cc8:	f7fe b910 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002ccc:	24023520 	.word	0x24023520
90002cd0:	240060b8 	.word	0x240060b8
90002cd4:	24006f0c 	.word	0x24006f0c
90002cd8:	240060d8 	.word	0x240060d8
90002cdc:	240060bc 	.word	0x240060bc
90002ce0:	24000040 	.word	0x24000040
90002ce4:	24006030 	.word	0x24006030
90002ce8:	24006f10 	.word	0x24006f10
90002cec:	24008e1c 	.word	0x24008e1c
90002cf0:	9002bc20 	.word	0x9002bc20
90002cf4:	9002bb84 	.word	0x9002bb84
90002cf8:	9002bbb8 	.word	0x9002bbb8
90002cfc:	9002bbec 	.word	0x9002bbec
90002d00:	90002b61 	.word	0x90002b61

90002d04 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d04:	4770      	bx	lr
90002d06:	bf00      	nop

90002d08 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d08:	4801      	ldr	r0, [pc, #4]	@ (90002d10 <touchgfx_taskEntry+0x8>)
90002d0a:	f7fe b93d 	b.w	90000f88 <_ZN11TouchGFXHAL9taskEntryEv>
90002d0e:	bf00      	nop
90002d10:	24006030 	.word	0x24006030

90002d14 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d14:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d16:	4e27      	ldr	r6, [pc, #156]	@ (90002db4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d18:	4b27      	ldr	r3, [pc, #156]	@ (90002db8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d1a:	4c28      	ldr	r4, [pc, #160]	@ (90002dbc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d1c:	4630      	mov	r0, r6
static LCD16bpp display;
90002d1e:	4d28      	ldr	r5, [pc, #160]	@ (90002dc0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d20:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d22:	f7ff fdcf 	bl	900028c4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d26:	4628      	mov	r0, r5
90002d28:	f01c fffe 	bl	9001fd28 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d2c:	4825      	ldr	r0, [pc, #148]	@ (90002dc4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d2e:	f015 fbbd 	bl	900184ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d32:	4b25      	ldr	r3, [pc, #148]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d34:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d36:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d3a:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d3e:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d40:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d42:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d44:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d48:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d4a:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d4c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d50:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d54:	4c1d      	ldr	r4, [pc, #116]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d56:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d58:	4c1d      	ldr	r4, [pc, #116]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d5a:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d5c:	4c1d      	ldr	r4, [pc, #116]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d5e:	8020      	strh	r0, [r4, #0]
90002d60:	4c1d      	ldr	r4, [pc, #116]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d62:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d64:	4c1d      	ldr	r4, [pc, #116]	@ (90002ddc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d66:	481e      	ldr	r0, [pc, #120]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d68:	8021      	strh	r1, [r4, #0]
90002d6a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d6c:	4c1d      	ldr	r4, [pc, #116]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d6e:	491e      	ldr	r1, [pc, #120]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d70:	481e      	ldr	r0, [pc, #120]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d72:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d76:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d7a:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d7e:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d80:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d84:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d88:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d8c:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d90:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d94:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002d98:	7022      	strb	r2, [r4, #0]
90002d9a:	6019      	str	r1, [r3, #0]
90002d9c:	4914      	ldr	r1, [pc, #80]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002d9e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002da2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002da6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002daa:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dac:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002db0:	bd70      	pop	{r4, r5, r6, pc}
90002db2:	bf00      	nop
90002db4:	24006164 	.word	0x24006164
90002db8:	9002b380 	.word	0x9002b380
90002dbc:	24006f08 	.word	0x24006f08
90002dc0:	240060d8 	.word	0x240060d8
90002dc4:	240060bc 	.word	0x240060bc
90002dc8:	24006030 	.word	0x24006030
90002dcc:	01000001 	.word	0x01000001
90002dd0:	240234bc 	.word	0x240234bc
90002dd4:	240234b0 	.word	0x240234b0
90002dd8:	240234b6 	.word	0x240234b6
90002ddc:	240234b2 	.word	0x240234b2
90002de0:	240234b8 	.word	0x240234b8
90002de4:	240234b4 	.word	0x240234b4
90002de8:	9002b510 	.word	0x9002b510
90002dec:	01010000 	.word	0x01010000
90002df0:	9002b358 	.word	0x9002b358

90002df4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002df4:	4801      	ldr	r0, [pc, #4]	@ (90002dfc <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002df6:	f7ff badd 	b.w	900023b4 <_ZN8STM32DMAD1Ev>
90002dfa:	bf00      	nop
90002dfc:	24006164 	.word	0x24006164

90002e00 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e00:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e04:	b112      	cbz	r2, 90002e0c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e06:	6803      	ldr	r3, [r0, #0]
90002e08:	695b      	ldr	r3, [r3, #20]
90002e0a:	4718      	bx	r3
        }
    }
90002e0c:	4770      	bx	lr
90002e0e:	bf00      	nop

90002e10 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e10:	2000      	movs	r0, #0
90002e12:	4770      	bx	lr

90002e14 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e14:	8081      	strh	r1, [r0, #4]
    }
90002e16:	4770      	bx	lr

90002e18 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e18:	80c1      	strh	r1, [r0, #6]
    }
90002e1a:	4770      	bx	lr

90002e1c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e1c:	8101      	strh	r1, [r0, #8]
    }
90002e1e:	4770      	bx	lr

90002e20 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e20:	8141      	strh	r1, [r0, #10]
    }
90002e22:	4770      	bx	lr

90002e24 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e24:	4770      	bx	lr
90002e26:	bf00      	nop

90002e28 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e28:	4770      	bx	lr
90002e2a:	bf00      	nop

90002e2c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e2c:	4770      	bx	lr
90002e2e:	bf00      	nop

90002e30 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e30:	4770      	bx	lr
90002e32:	bf00      	nop

90002e34 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e34:	4770      	bx	lr
90002e36:	bf00      	nop

90002e38 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e38:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e3c:	6803      	ldr	r3, [r0, #0]
90002e3e:	eba2 020c 	sub.w	r2, r2, ip
90002e42:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e48:	eba1 010c 	sub.w	r1, r1, ip
90002e4c:	b212      	sxth	r2, r2
90002e4e:	b209      	sxth	r1, r1
90002e50:	4718      	bx	r3
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e54:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e56:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e5a:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e5e:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e62:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e66:	6010      	str	r0, [r2, #0]
    }
90002e68:	4770      	bx	lr
90002e6a:	bf00      	nop

90002e6c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e6c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e70:	b11a      	cbz	r2, 90002e7a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e72:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e76:	b102      	cbz	r2, 90002e7a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e78:	6018      	str	r0, [r3, #0]
        }
    }
90002e7a:	4770      	bx	lr

90002e7c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e7c:	2000      	movs	r0, #0
90002e7e:	4770      	bx	lr

90002e80 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e80:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e82:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002e84:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002e86:	809a      	strh	r2, [r3, #4]
    }
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002e8c:	4770      	bx	lr
90002e8e:	bf00      	nop

90002e90 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002e90:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002e98:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002e9c:	4770      	bx	lr
90002e9e:	bf00      	nop

90002ea0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ea0:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ea4:	688a      	ldr	r2, [r1, #8]
90002ea6:	f8c0 c000 	str.w	ip, [r0]
90002eaa:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002eac:	4770      	bx	lr
90002eae:	bf00      	nop

90002eb0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002eb0:	2200      	movs	r2, #0
90002eb2:	6002      	str	r2, [r0, #0]
90002eb4:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002eb6:	4770      	bx	lr

90002eb8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002eb8:	2000      	movs	r0, #0
90002eba:	4770      	bx	lr

90002ebc <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ebc:	7701      	strb	r1, [r0, #28]
    }
90002ebe:	4770      	bx	lr

90002ec0 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002ec0:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ec4:	4770      	bx	lr
90002ec6:	bf00      	nop

90002ec8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ec8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ecc:	4770      	bx	lr
90002ece:	bf00      	nop

90002ed0 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002ed0:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ed4:	4770      	bx	lr
90002ed6:	bf00      	nop

90002ed8 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ed8:	2001      	movs	r0, #1
90002eda:	4770      	bx	lr

90002edc <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002edc:	3098      	adds	r0, #152	@ 0x98
90002ede:	4770      	bx	lr

90002ee0 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002ee0:	308c      	adds	r0, #140	@ 0x8c
90002ee2:	4770      	bx	lr

90002ee4 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002ee4:	3084      	adds	r0, #132	@ 0x84
90002ee6:	4770      	bx	lr

90002ee8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002eec:	4b03      	ldr	r3, [pc, #12]	@ (90002efc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002eee:	2290      	movs	r2, #144	@ 0x90
90002ef0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002ef4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002ef8:	4770      	bx	lr
90002efa:	bf00      	nop
90002efc:	e000e100 	.word	0xe000e100

90002f00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f00:	4a09      	ldr	r2, [pc, #36]	@ (90002f28 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f02:	490a      	ldr	r1, [pc, #40]	@ (90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f04:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f06:	480a      	ldr	r0, [pc, #40]	@ (90002f30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f08:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f0c:	3b01      	subs	r3, #1
90002f0e:	b29b      	uxth	r3, r3
90002f10:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f12:	6911      	ldr	r1, [r2, #16]
90002f14:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f18:	3901      	subs	r1, #1
90002f1a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f1c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f1e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f20:	f043 0301 	orr.w	r3, r3, #1
90002f24:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f26:	4770      	bx	lr
90002f28:	50001000 	.word	0x50001000
90002f2c:	24008fca 	.word	0x24008fca
90002f30:	24008fc8 	.word	0x24008fc8

90002f34 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f34:	4b01      	ldr	r3, [pc, #4]	@ (90002f3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f36:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f3a:	4770      	bx	lr
90002f3c:	50001000 	.word	0x50001000

90002f40 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f40:	4b02      	ldr	r3, [pc, #8]	@ (90002f4c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f42:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f44:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f48:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f4a:	4770      	bx	lr
90002f4c:	50001000 	.word	0x50001000

90002f50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f50:	4770      	bx	lr
90002f52:	bf00      	nop

90002f54 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f54:	4770      	bx	lr
90002f56:	bf00      	nop

90002f58 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f58:	4770      	bx	lr
90002f5a:	bf00      	nop

90002f5c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f5c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f60:	2300      	movs	r3, #0
90002f62:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f66:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f6a:	4770      	bx	lr

90002f6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f6c:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f70:	4770      	bx	lr
90002f72:	bf00      	nop

90002f74 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f74:	b510      	push	{r4, lr}
90002f76:	4604      	mov	r4, r0
90002f78:	2130      	movs	r1, #48	@ 0x30
90002f7a:	f026 fe10 	bl	90029b9e <_ZdlPvj>
90002f7e:	4620      	mov	r0, r4
90002f80:	bd10      	pop	{r4, pc}
90002f82:	bf00      	nop

90002f84 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002f84:	b510      	push	{r4, lr}
90002f86:	4604      	mov	r4, r0
90002f88:	212c      	movs	r1, #44	@ 0x2c
90002f8a:	f026 fe08 	bl	90029b9e <_ZdlPvj>
90002f8e:	4620      	mov	r0, r4
90002f90:	bd10      	pop	{r4, pc}
90002f92:	bf00      	nop

90002f94 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f94:	b510      	push	{r4, lr}
90002f96:	4604      	mov	r4, r0
90002f98:	21bc      	movs	r1, #188	@ 0xbc
90002f9a:	f026 fe00 	bl	90029b9e <_ZdlPvj>
90002f9e:	4620      	mov	r0, r4
90002fa0:	bd10      	pop	{r4, pc}
90002fa2:	bf00      	nop

90002fa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fa4:	b911      	cbnz	r1, 90002fac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fa6:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002faa:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fac:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fae:	4a03      	ldr	r2, [pc, #12]	@ (90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fb0:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002fb4:	4b02      	ldr	r3, [pc, #8]	@ (90002fc0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fb6:	4803      	ldr	r0, [pc, #12]	@ (90002fc4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fb8:	f027 f96a 	bl	9002a290 <__assert_func>
90002fbc:	9002bc40 	.word	0x9002bc40
90002fc0:	9002bc2c 	.word	0x9002bc2c
90002fc4:	9002bd5c 	.word	0x9002bd5c

90002fc8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fc8:	b921      	cbnz	r1, 90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fca:	6840      	ldr	r0, [r0, #4]
90002fcc:	4611      	mov	r1, r2
90002fce:	6803      	ldr	r3, [r0, #0]
90002fd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fd2:	4718      	bx	r3
        assert(handle < no_streams);
90002fd4:	4b03      	ldr	r3, [pc, #12]	@ (90002fe4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002fd6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002fda:	4a03      	ldr	r2, [pc, #12]	@ (90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002fdc:	4803      	ldr	r0, [pc, #12]	@ (90002fec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002fde:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002fe0:	f027 f956 	bl	9002a290 <__assert_func>
90002fe4:	9002bc2c 	.word	0x9002bc2c
90002fe8:	9002bda4 	.word	0x9002bda4
90002fec:	9002bd5c 	.word	0x9002bd5c

90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002ff0:	b909      	cbnz	r1, 90002ff6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002ff2:	68c0      	ldr	r0, [r0, #12]
90002ff4:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002ff6:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002ff8:	4a03      	ldr	r2, [pc, #12]	@ (90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002ffa:	f44f 718a 	mov.w	r1, #276	@ 0x114
90002ffe:	4b03      	ldr	r3, [pc, #12]	@ (9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003000:	4803      	ldr	r0, [pc, #12]	@ (90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90003002:	f027 f945 	bl	9002a290 <__assert_func>
90003006:	bf00      	nop
90003008:	9002bee4 	.word	0x9002bee4
9000300c:	9002bc2c 	.word	0x9002bc2c
90003010:	9002bd5c 	.word	0x9002bd5c

90003014 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003014:	b921      	cbnz	r1, 90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003016:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003018:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000301a:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000301e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003020:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003022:	4a03      	ldr	r2, [pc, #12]	@ (90003030 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003024:	2140      	movs	r1, #64	@ 0x40
90003026:	4b03      	ldr	r3, [pc, #12]	@ (90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003028:	4803      	ldr	r0, [pc, #12]	@ (90003038 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000302a:	f027 f931 	bl	9002a290 <__assert_func>
9000302e:	bf00      	nop
90003030:	9002c02c 	.word	0x9002c02c
90003034:	9002bc2c 	.word	0x9002bc2c
90003038:	9002bd5c 	.word	0x9002bd5c

9000303c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000303c:	b508      	push	{r3, lr}
9000303e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003040:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003044:	b940      	cbnz	r0, 90003058 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003046:	2201      	movs	r2, #1
90003048:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
9000304c:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003050:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003054:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003056:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003058:	4b03      	ldr	r3, [pc, #12]	@ (90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
9000305a:	f240 116b 	movw	r1, #363	@ 0x16b
9000305e:	4a03      	ldr	r2, [pc, #12]	@ (9000306c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003060:	4803      	ldr	r0, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
90003062:	f027 f915 	bl	9002a290 <__assert_func>
90003066:	bf00      	nop
90003068:	9002c178 	.word	0x9002c178
9000306c:	9002c1a8 	.word	0x9002c1a8
90003070:	9002bd5c 	.word	0x9002bd5c

90003074 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90003074:	f00d bf9c 	b.w	90010fb0 <_ZN8touchgfx3HAL10beginFrameEv>

90003078 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003078:	f00d bfa6 	b.w	90010fc8 <_ZN8touchgfx3HAL8endFrameEv>

9000307c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
9000307c:	f00d bf62 	b.w	90010f44 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003080 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003080:	f00e b8c3 	b.w	9001120a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90003084 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90003084:	4814      	ldr	r0, [pc, #80]	@ (900030d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90003086:	6943      	ldr	r3, [r0, #20]
90003088:	03d9      	lsls	r1, r3, #15
9000308a:	d523      	bpl.n	900030d4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000308c:	2300      	movs	r3, #0
{
9000308e:	b510      	push	{r4, lr}
90003090:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003094:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003098:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000309c:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030a0:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030a4:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030a8:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030ac:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030b0:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030b2:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030b6:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030b8:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030bc:	1c5a      	adds	r2, r3, #1
900030be:	d1f8      	bne.n	900030b2 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030c0:	f1ac 0c20 	sub.w	ip, ip, #32
900030c4:	f11c 0f20 	cmn.w	ip, #32
900030c8:	d1f0      	bne.n	900030ac <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030ce:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030d2:	bd10      	pop	{r4, pc}
900030d4:	4770      	bx	lr
900030d6:	bf00      	nop
900030d8:	e000ed00 	.word	0xe000ed00

900030dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030dc:	b5f0      	push	{r4, r5, r6, r7, lr}
900030de:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030e0:	bb49      	cbnz	r1, 90003136 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
900030e2:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
900030e4:	6840      	ldr	r0, [r0, #4]
900030e6:	461d      	mov	r5, r3
900030e8:	4616      	mov	r6, r2
900030ea:	6803      	ldr	r3, [r0, #0]
900030ec:	691b      	ldr	r3, [r3, #16]
900030ee:	4798      	blx	r3
900030f0:	b908      	cbnz	r0, 900030f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
900030f2:	b003      	add	sp, #12
900030f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
900030f6:	4f13      	ldr	r7, [pc, #76]	@ (90003144 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030f8:	2101      	movs	r1, #1
900030fa:	6838      	ldr	r0, [r7, #0]
900030fc:	f00e fd2c 	bl	90011b58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003100:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003102:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003104:	4668      	mov	r0, sp
90003106:	f015 f9b7 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000310a:	4b0f      	ldr	r3, [pc, #60]	@ (90003148 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000310c:	6860      	ldr	r0, [r4, #4]
9000310e:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003110:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003114:	881b      	ldrh	r3, [r3, #0]
90003116:	f9bd 2000 	ldrsh.w	r2, [sp]
9000311a:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000311e:	6804      	ldr	r4, [r0, #0]
90003120:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003124:	69e4      	ldr	r4, [r4, #28]
90003126:	47a0      	blx	r4
90003128:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000312a:	6803      	ldr	r3, [r0, #0]
9000312c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000312e:	b003      	add	sp, #12
90003130:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003134:	4718      	bx	r3
        assert(handle < no_streams);
90003136:	4b05      	ldr	r3, [pc, #20]	@ (9000314c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003138:	21e9      	movs	r1, #233	@ 0xe9
9000313a:	4a05      	ldr	r2, [pc, #20]	@ (90003150 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000313c:	4805      	ldr	r0, [pc, #20]	@ (90003154 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000313e:	f027 f8a7 	bl	9002a290 <__assert_func>
90003142:	bf00      	nop
90003144:	240234bc 	.word	0x240234bc
90003148:	240234b6 	.word	0x240234b6
9000314c:	9002bc2c 	.word	0x9002bc2c
90003150:	9002c2c0 	.word	0x9002c2c0
90003154:	9002bd5c 	.word	0x9002bd5c

90003158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003158:	4b08      	ldr	r3, [pc, #32]	@ (9000317c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000315a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000315e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003162:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003166:	f3bf 8f6f 	isb	sy
9000316a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000316e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003172:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003176:	f3bf 8f6f 	isb	sy
}
9000317a:	4770      	bx	lr
9000317c:	e000e100 	.word	0xe000e100

90003180 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003180:	4b03      	ldr	r3, [pc, #12]	@ (90003190 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90003182:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003186:	609a      	str	r2, [r3, #8]
90003188:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000318c:	609a      	str	r2, [r3, #8]
}
9000318e:	4770      	bx	lr
90003190:	e000e100 	.word	0xe000e100

90003194 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90003194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
90003198:	2900      	cmp	r1, #0
9000319a:	f040 8096 	bne.w	900032ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
9000319e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031a2:	4604      	mov	r4, r0
900031a4:	b933      	cbnz	r3, 900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031a6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031aa:	b91b      	cbnz	r3, 900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031ac:	2501      	movs	r5, #1
    }
900031ae:	4628      	mov	r0, r5
900031b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031b4:	4b48      	ldr	r3, [pc, #288]	@ (900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031b6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031b8:	6921      	ldr	r1, [r4, #16]
900031ba:	681b      	ldr	r3, [r3, #0]
900031bc:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031c0:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031c4:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031c6:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031ca:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031cc:	b979      	cbnz	r1, 900031ee <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ce:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031d0:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031d2:	6961      	ldr	r1, [r4, #20]
900031d4:	fb01 f303 	mul.w	r3, r1, r3
900031d8:	69a1      	ldr	r1, [r4, #24]
900031da:	fb01 f202 	mul.w	r2, r1, r2
900031de:	4293      	cmp	r3, r2
900031e0:	d824      	bhi.n	9000322c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
900031e2:	2300      	movs	r3, #0
    }
900031e4:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
900031e6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
900031ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
900031ee:	6813      	ldr	r3, [r2, #0]
900031f0:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
900031f2:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
900031f4:	695b      	ldr	r3, [r3, #20]
900031f6:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
900031f8:	69e1      	ldr	r1, [r4, #28]
900031fa:	bb21      	cbnz	r1, 90003246 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
900031fc:	6a23      	ldr	r3, [r4, #32]
900031fe:	2b00      	cmp	r3, #0
90003200:	d142      	bne.n	90003288 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003202:	4f36      	ldr	r7, [pc, #216]	@ (900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003204:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003208:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000320a:	2d00      	cmp	r5, #0
9000320c:	d02c      	beq.n	90003268 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000320e:	699b      	ldr	r3, [r3, #24]
90003210:	4630      	mov	r0, r6
90003212:	4798      	blx	r3
90003214:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003216:	6833      	ldr	r3, [r6, #0]
90003218:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000321a:	42bb      	cmp	r3, r7
9000321c:	d145      	bne.n	900032aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000321e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003220:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003222:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003224:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003226:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003228:	60a2      	str	r2, [r4, #8]
9000322a:	e7d2      	b.n	900031d2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000322c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003230:	b138      	cbz	r0, 90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003232:	1a9b      	subs	r3, r3, r2
90003234:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003238:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000323a:	bf98      	it	ls
9000323c:	f102 32ff 	addls.w	r2, r2, #4294967295
90003240:	6222      	str	r2, [r4, #32]
            return true;
90003242:	2301      	movs	r3, #1
90003244:	e7ce      	b.n	900031e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003246:	6833      	ldr	r3, [r6, #0]
90003248:	4630      	mov	r0, r6
9000324a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000324c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000324e:	6833      	ldr	r3, [r6, #0]
90003250:	69e5      	ldr	r5, [r4, #28]
90003252:	4630      	mov	r0, r6
90003254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003256:	4798      	blx	r3
90003258:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000325a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000325c:	bf28      	it	cs
9000325e:	2500      	movcs	r5, #0
90003260:	4f1e      	ldr	r7, [pc, #120]	@ (900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
90003262:	bf38      	it	cc
90003264:	2501      	movcc	r5, #1
90003266:	e7d6      	b.n	90003216 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003268:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000326a:	42ba      	cmp	r2, r7
9000326c:	d124      	bne.n	900032b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000326e:	f8d6 8014 	ldr.w	r8, [r6, #20]
90003272:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003274:	4630      	mov	r0, r6
90003276:	4798      	blx	r3
90003278:	4580      	cmp	r8, r0
9000327a:	d219      	bcs.n	900032b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
9000327c:	6833      	ldr	r3, [r6, #0]
9000327e:	4630      	mov	r0, r6
90003280:	699b      	ldr	r3, [r3, #24]
90003282:	4798      	blx	r3
90003284:	4605      	mov	r5, r0
90003286:	e7c6      	b.n	90003216 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
90003288:	6832      	ldr	r2, [r6, #0]
9000328a:	4f14      	ldr	r7, [pc, #80]	@ (900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000328c:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
90003290:	42ba      	cmp	r2, r7
90003292:	d116      	bne.n	900032c2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
90003294:	6970      	ldr	r0, [r6, #20]
90003296:	18c1      	adds	r1, r0, r3
90003298:	4630      	mov	r0, r6
9000329a:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
9000329c:	6a22      	ldr	r2, [r4, #32]
9000329e:	68a3      	ldr	r3, [r4, #8]
900032a0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032a2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032a4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032a6:	6222      	str	r2, [r4, #32]
900032a8:	e7ac      	b.n	90003204 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032aa:	4630      	mov	r0, r6
900032ac:	4798      	blx	r3
900032ae:	e7b7      	b.n	90003220 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032b0:	2300      	movs	r3, #0
900032b2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032b6:	e7ae      	b.n	90003216 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032b8:	4630      	mov	r0, r6
900032ba:	4790      	blx	r2
900032bc:	6833      	ldr	r3, [r6, #0]
900032be:	4680      	mov	r8, r0
900032c0:	e7d7      	b.n	90003272 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032c2:	4630      	mov	r0, r6
900032c4:	4790      	blx	r2
900032c6:	6a23      	ldr	r3, [r4, #32]
900032c8:	e7e5      	b.n	90003296 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032ca:	4b05      	ldr	r3, [pc, #20]	@ (900032e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032cc:	21a9      	movs	r1, #169	@ 0xa9
900032ce:	4a05      	ldr	r2, [pc, #20]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032d0:	4805      	ldr	r0, [pc, #20]	@ (900032e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032d2:	f026 ffdd 	bl	9002a290 <__assert_func>
900032d6:	bf00      	nop
900032d8:	240234bc 	.word	0x240234bc
900032dc:	9000100d 	.word	0x9000100d
900032e0:	9002bc2c 	.word	0x9002bc2c
900032e4:	9002c408 	.word	0x9002c408
900032e8:	9002bd5c 	.word	0x9002bd5c

900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900032ec:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032ee:	bb11      	cbnz	r1, 90003336 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
900032f0:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
900032f2:	6840      	ldr	r0, [r0, #4]
900032f4:	4611      	mov	r1, r2
900032f6:	461a      	mov	r2, r3
900032f8:	6803      	ldr	r3, [r0, #0]
900032fa:	689b      	ldr	r3, [r3, #8]
900032fc:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032fe:	6860      	ldr	r0, [r4, #4]
90003300:	4a10      	ldr	r2, [pc, #64]	@ (90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003302:	6803      	ldr	r3, [r0, #0]
90003304:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003306:	4293      	cmp	r3, r2
90003308:	d10c      	bne.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000330a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000330c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000330e:	2300      	movs	r3, #0
90003310:	4a0d      	ldr	r2, [pc, #52]	@ (90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003312:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003314:	60e0      	str	r0, [r4, #12]
90003316:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003318:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000331c:	d104      	bne.n	90003328 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000331e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003322:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003324:	4798      	blx	r3
90003326:	e7f1      	b.n	9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003328:	4620      	mov	r0, r4
9000332a:	46ac      	mov	ip, r5
9000332c:	2201      	movs	r2, #1
9000332e:	4619      	mov	r1, r3
    }
90003330:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003334:	4760      	bx	ip
        assert(handle < no_streams);
90003336:	4b05      	ldr	r3, [pc, #20]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003338:	214e      	movs	r1, #78	@ 0x4e
9000333a:	4a05      	ldr	r2, [pc, #20]	@ (90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000333c:	4805      	ldr	r0, [pc, #20]	@ (90003354 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000333e:	f026 ffa7 	bl	9002a290 <__assert_func>
90003342:	bf00      	nop
90003344:	9000100d 	.word	0x9000100d
90003348:	900033c1 	.word	0x900033c1
9000334c:	9002bc2c 	.word	0x9002bc2c
90003350:	9002c53c 	.word	0x9002c53c
90003354:	9002bd5c 	.word	0x9002bd5c

90003358 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003358:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000335a:	bb09      	cbnz	r1, 900033a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000335c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000335e:	6840      	ldr	r0, [r0, #4]
90003360:	4611      	mov	r1, r2
90003362:	6803      	ldr	r3, [r0, #0]
90003364:	68db      	ldr	r3, [r3, #12]
90003366:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003368:	6860      	ldr	r0, [r4, #4]
9000336a:	4a10      	ldr	r2, [pc, #64]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
9000336c:	6803      	ldr	r3, [r0, #0]
9000336e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003370:	4293      	cmp	r3, r2
90003372:	d10c      	bne.n	9000338e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
90003374:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003376:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003378:	2300      	movs	r3, #0
9000337a:	4a0d      	ldr	r2, [pc, #52]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
9000337c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000337e:	60e0      	str	r0, [r4, #12]
90003380:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003382:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003386:	d104      	bne.n	90003392 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
90003388:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000338c:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000338e:	4798      	blx	r3
90003390:	e7f1      	b.n	90003376 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
90003392:	4620      	mov	r0, r4
90003394:	46ac      	mov	ip, r5
90003396:	2201      	movs	r2, #1
90003398:	4619      	mov	r1, r3
    }
9000339a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
9000339e:	4760      	bx	ip
        assert(handle < no_streams);
900033a0:	4b04      	ldr	r3, [pc, #16]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033a2:	215e      	movs	r1, #94	@ 0x5e
900033a4:	4a04      	ldr	r2, [pc, #16]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033a6:	4805      	ldr	r0, [pc, #20]	@ (900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033a8:	f026 ff72 	bl	9002a290 <__assert_func>
900033ac:	9000100d 	.word	0x9000100d
900033b0:	900033c1 	.word	0x900033c1
900033b4:	9002bc2c 	.word	0x9002bc2c
900033b8:	9002c6a8 	.word	0x9002c6a8
900033bc:	9002bd5c 	.word	0x9002bd5c

900033c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033c0:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033c2:	2900      	cmp	r1, #0
900033c4:	d14f      	bne.n	90003466 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033c6:	4604      	mov	r4, r0
        switch (cmd)
900033c8:	2a05      	cmp	r2, #5
900033ca:	d80b      	bhi.n	900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033cc:	e8df f002 	tbb	[pc, r2]
900033d0:	3c373311 	.word	0x3c373311
900033d4:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033d6:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033d8:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033da:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033de:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
900033e0:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
900033e2:	6103      	str	r3, [r0, #16]
    }
900033e4:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
900033e6:	3b00      	subs	r3, #0
900033e8:	bf18      	it	ne
900033ea:	2301      	movne	r3, #1
900033ec:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
900033f0:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
900033f2:	6840      	ldr	r0, [r0, #4]
900033f4:	6803      	ldr	r3, [r0, #0]
900033f6:	691b      	ldr	r3, [r3, #16]
900033f8:	4798      	blx	r3
900033fa:	2800      	cmp	r0, #0
900033fc:	d0f2      	beq.n	900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
900033fe:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003400:	2101      	movs	r1, #1
                if (!stream.repeat)
90003402:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003406:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000340a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000340c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000340e:	2a00      	cmp	r2, #0
90003410:	d1e8      	bne.n	900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003412:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003414:	4917      	ldr	r1, [pc, #92]	@ (90003474 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003416:	6823      	ldr	r3, [r4, #0]
90003418:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000341a:	428a      	cmp	r2, r1
9000341c:	d11e      	bne.n	9000345c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000341e:	6965      	ldr	r5, [r4, #20]
90003420:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003422:	4620      	mov	r0, r4
90003424:	4798      	blx	r3
90003426:	4285      	cmp	r5, r0
90003428:	d1dc      	bne.n	900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000342a:	6823      	ldr	r3, [r4, #0]
9000342c:	4620      	mov	r0, r4
9000342e:	699b      	ldr	r3, [r3, #24]
    }
90003430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003434:	4718      	bx	r3
            stream.isPlaying = false;
90003436:	2300      	movs	r3, #0
90003438:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000343c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000343e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003440:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003442:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003444:	6102      	str	r2, [r0, #16]
    }
90003446:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003448:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000344a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000344c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000344e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003452:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003456:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003458:	6102      	str	r2, [r0, #16]
    }
9000345a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000345c:	4620      	mov	r0, r4
9000345e:	4790      	blx	r2
90003460:	6823      	ldr	r3, [r4, #0]
90003462:	4605      	mov	r5, r0
90003464:	e7dc      	b.n	90003420 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003466:	4b04      	ldr	r3, [pc, #16]	@ (90003478 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003468:	216e      	movs	r1, #110	@ 0x6e
9000346a:	4a04      	ldr	r2, [pc, #16]	@ (9000347c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
9000346c:	4804      	ldr	r0, [pc, #16]	@ (90003480 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000346e:	f026 ff0f 	bl	9002a290 <__assert_func>
90003472:	bf00      	nop
90003474:	9000100d 	.word	0x9000100d
90003478:	9002bc2c 	.word	0x9002bc2c
9000347c:	9002c7e0 	.word	0x9002c7e0
90003480:	9002bd5c 	.word	0x9002bd5c

90003484 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90003484:	b538      	push	{r3, r4, r5, lr}
90003486:	4604      	mov	r4, r0
    HAL::initialize();
90003488:	f00d fdab 	bl	90010fe2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
9000348c:	6823      	ldr	r3, [r4, #0]
9000348e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
90003490:	f013 fede 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90003494:	4601      	mov	r1, r0
90003496:	4620      	mov	r0, r4
90003498:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000349a:	6823      	ldr	r3, [r4, #0]
9000349c:	4a13      	ldr	r2, [pc, #76]	@ (900034ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
9000349e:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900034a2:	4295      	cmp	r5, r2
900034a4:	d116      	bne.n	900034d4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034a6:	4a12      	ldr	r2, [pc, #72]	@ (900034f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034a8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034ae:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034b2:	4810      	ldr	r0, [pc, #64]	@ (900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034b4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034b8:	4a0f      	ldr	r2, [pc, #60]	@ (900034f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034ba:	7005      	strb	r5, [r0, #0]
900034bc:	4293      	cmp	r3, r2
900034be:	d110      	bne.n	900034e2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034c0:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034c2:	4a0e      	ldr	r2, [pc, #56]	@ (900034fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034c4:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034c6:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034c8:	4b0d      	ldr	r3, [pc, #52]	@ (90003500 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034ca:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034cc:	4a0d      	ldr	r2, [pc, #52]	@ (90003504 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034ce:	6459      	str	r1, [r3, #68]	@ 0x44
900034d0:	6053      	str	r3, [r2, #4]
}
900034d2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034d4:	4a0c      	ldr	r2, [pc, #48]	@ (90003508 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034d6:	2300      	movs	r3, #0
900034d8:	4620      	mov	r0, r4
900034da:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034de:	47a8      	blx	r5
900034e0:	e7f2      	b.n	900034c8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900034e2:	2100      	movs	r1, #0
900034e4:	4620      	mov	r0, r4
900034e6:	4798      	blx	r3
900034e8:	e7ee      	b.n	900034c8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900034ea:	bf00      	nop
900034ec:	90000f31 	.word	0x90000f31
900034f0:	d003fc00 	.word	0xd003fc00
900034f4:	240234ba 	.word	0x240234ba
900034f8:	90000d6d 	.word	0x90000d6d
900034fc:	240234bb 	.word	0x240234bb
90003500:	240090bc 	.word	0x240090bc
90003504:	2400908c 	.word	0x2400908c
90003508:	d007f800 	.word	0xd007f800

9000350c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000350c:	4842      	ldr	r0, [pc, #264]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000350e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003510:	6804      	ldr	r4, [r0, #0]
90003512:	f3bf 8f5b 	dmb	ish
90003516:	f014 0401 	ands.w	r4, r4, #1
9000351a:	d001      	beq.n	90003520 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000351c:	483f      	ldr	r0, [pc, #252]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000351e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003520:	f026 fb3f 	bl	90029ba2 <__cxa_guard_acquire>
90003524:	2800      	cmp	r0, #0
90003526:	d0f9      	beq.n	9000351c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003528:	4d3c      	ldr	r5, [pc, #240]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000352a:	4b3d      	ldr	r3, [pc, #244]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000352c:	4e3d      	ldr	r6, [pc, #244]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000352e:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003532:	612c      	str	r4, [r5, #16]
90003534:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003538:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
9000353c:	e9c5 3400 	strd	r3, r4, [r5]
90003540:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003544:	f015 fa11 	bl	9001896a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003548:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000354c:	f010 fcd4 	bl	90013ef8 <_ZN8touchgfx12CanvasWidgetC1Ev>
90003550:	4935      	ldr	r1, [pc, #212]	@ (90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003552:	4a36      	ldr	r2, [pc, #216]	@ (9000362c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003554:	6833      	ldr	r3, [r6, #0]
90003556:	65a9      	str	r1, [r5, #88]	@ 0x58
90003558:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000355c:	4934      	ldr	r1, [pc, #208]	@ (90003630 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000355e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90003562:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003566:	6029      	str	r1, [r5, #0]
90003568:	b192      	cbz	r2, 90003590 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
9000356a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000356c:	2800      	cmp	r0, #0
9000356e:	d03f      	beq.n	900035f0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90003570:	6803      	ldr	r3, [r0, #0]
90003572:	4c30      	ldr	r4, [pc, #192]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
90003574:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003576:	42a2      	cmp	r2, r4
90003578:	d017      	beq.n	900035aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000357a:	4790      	blx	r2
        return auxiliaryLCD;
9000357c:	6833      	ldr	r3, [r6, #0]
9000357e:	fab0 f680 	clz	r6, r0
90003582:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003584:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90003586:	2800      	cmp	r0, #0
90003588:	d03e      	beq.n	90003608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000358a:	6803      	ldr	r3, [r0, #0]
9000358c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000358e:	e00a      	b.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
90003590:	6898      	ldr	r0, [r3, #8]
90003592:	4c28      	ldr	r4, [pc, #160]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003594:	6802      	ldr	r2, [r0, #0]
90003596:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90003598:	42a2      	cmp	r2, r4
9000359a:	d1ee      	bne.n	9000357a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
9000359c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000359e:	b120      	cbz	r0, 900035aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035a0:	6803      	ldr	r3, [r0, #0]
900035a2:	2601      	movs	r6, #1
900035a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035a6:	42a3      	cmp	r3, r4
900035a8:	d129      	bne.n	900035fe <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035aa:	4923      	ldr	r1, [pc, #140]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035ac:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ae:	2300      	movs	r3, #0
        : AbstractPainter(),
900035b0:	2464      	movs	r4, #100	@ 0x64
900035b2:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900035b6:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035ba:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035be:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035c2:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035c6:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035ca:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035ce:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035d2:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
900035d6:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035da:	4a18      	ldr	r2, [pc, #96]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
900035dc:	4818      	ldr	r0, [pc, #96]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035de:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
900035e2:	f026 fe73 	bl	9002a2cc <atexit>
900035e6:	480c      	ldr	r0, [pc, #48]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
900035e8:	f026 fae7 	bl	90029bba <__cxa_guard_release>
}
900035ec:	480b      	ldr	r0, [pc, #44]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
900035ee:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900035f0:	6898      	ldr	r0, [r3, #8]
900035f2:	4c10      	ldr	r4, [pc, #64]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035f4:	6803      	ldr	r3, [r0, #0]
900035f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035f8:	42a2      	cmp	r2, r4
900035fa:	d0d6      	beq.n	900035aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035fc:	e7bd      	b.n	9000357a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035fe:	4798      	blx	r3
90003600:	2800      	cmp	r0, #0
90003602:	bf08      	it	eq
90003604:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003608:	2e00      	cmp	r6, #0
9000360a:	d1ce      	bne.n	900035aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000360c:	4b0d      	ldr	r3, [pc, #52]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000360e:	212c      	movs	r1, #44	@ 0x2c
90003610:	4a0d      	ldr	r2, [pc, #52]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003612:	480e      	ldr	r0, [pc, #56]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003614:	f026 fe3c 	bl	9002a290 <__assert_func>
90003618:	24008fcc 	.word	0x24008fcc
9000361c:	24008fd0 	.word	0x24008fd0
90003620:	9002e298 	.word	0x9002e298
90003624:	240234bc 	.word	0x240234bc
90003628:	9002ca6c 	.word	0x9002ca6c
9000362c:	9002ca4c 	.word	0x9002ca4c
90003630:	9002cae4 	.word	0x9002cae4
90003634:	90002eb9 	.word	0x90002eb9
90003638:	9002e24c 	.word	0x9002e24c
9000363c:	9002e22c 	.word	0x9002e22c
90003640:	90002ee9 	.word	0x90002ee9
90003644:	9002c944 	.word	0x9002c944
90003648:	9002c9a4 	.word	0x9002c9a4
9000364c:	9002c9e0 	.word	0x9002c9e0

90003650 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003650:	b510      	push	{r4, lr}
        return instance;
90003652:	4c14      	ldr	r4, [pc, #80]	@ (900036a4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003654:	6823      	ldr	r3, [r4, #0]
90003656:	b323      	cbz	r3, 900036a2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003658:	4b13      	ldr	r3, [pc, #76]	@ (900036a8 <HAL_LTDC_LineEventCallback+0x58>)
9000365a:	4a14      	ldr	r2, [pc, #80]	@ (900036ac <HAL_LTDC_LineEventCallback+0x5c>)
9000365c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000365e:	8811      	ldrh	r1, [r2, #0]
90003660:	428b      	cmp	r3, r1
90003662:	d00a      	beq.n	9000367a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003664:	f007 ff34 	bl	9000b4d0 <HAL_LTDC_ProgramLineEvent>
90003668:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000366a:	6803      	ldr	r3, [r0, #0]
9000366c:	6a1b      	ldr	r3, [r3, #32]
9000366e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003670:	2000      	movs	r0, #0
        }
    }
90003672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90003676:	f7fd bb1d 	b.w	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000367a:	4b0d      	ldr	r3, [pc, #52]	@ (900036b0 <HAL_LTDC_LineEventCallback+0x60>)
9000367c:	8819      	ldrh	r1, [r3, #0]
9000367e:	f007 ff27 	bl	9000b4d0 <HAL_LTDC_ProgramLineEvent>
        return instance;
90003682:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90003684:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
90003688:	3301      	adds	r3, #1
9000368a:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
9000368e:	f7fe fe69 	bl	90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003692:	6820      	ldr	r0, [r4, #0]
90003694:	f00e f9fe 	bl	90011a94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90003698:	2000      	movs	r0, #0
    }
9000369a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000369e:	f7fd bad5 	b.w	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036a2:	bd10      	pop	{r4, pc}
900036a4:	240234bc 	.word	0x240234bc
900036a8:	50001000 	.word	0x50001000
900036ac:	24008fca 	.word	0x24008fca
900036b0:	24008fc8 	.word	0x24008fc8

900036b4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036b4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036b6:	480b      	ldr	r0, [pc, #44]	@ (900036e4 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036b8:	f7fd fe1e 	bl	900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036bc:	4c0a      	ldr	r4, [pc, #40]	@ (900036e8 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036be:	4b0b      	ldr	r3, [pc, #44]	@ (900036ec <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036c0:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036c2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036c6:	2101      	movs	r1, #1
900036c8:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ca:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036cc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036d0:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036d4:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036d6:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036da:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036de:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
900036e2:	bd10      	pop	{r4, pc}
900036e4:	240090bc 	.word	0x240090bc
900036e8:	9002cb30 	.word	0x9002cb30
900036ec:	2400908c 	.word	0x2400908c

900036f0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900036f0:	4901      	ldr	r1, [pc, #4]	@ (900036f8 <vApplicationIdleHook+0x8>)
900036f2:	2000      	movs	r0, #0
900036f4:	f00c bcda 	b.w	900100ac <vTaskSetApplicationTaskTag>
900036f8:	90000fed 	.word	0x90000fed

900036fc <vUITask>:





void vUITask(void *pvParameters) {
900036fc:	b508      	push	{r3, lr}
  for (;;) {
    // No direct UI calls here! Use queues only.
    vTaskDelay(pdMS_TO_TICKS(50)); // Prevent task starvation
900036fe:	2032      	movs	r0, #50	@ 0x32
90003700:	f00c fbb4 	bl	9000fe6c <vTaskDelay>
  for (;;) {
90003704:	e7fb      	b.n	900036fe <vUITask+0x2>
90003706:	bf00      	nop

90003708 <vTimerTask>:
  }
}

void vTimerTask(void *pvParameters) {
90003708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000370c:	4e6a      	ldr	r6, [pc, #424]	@ (900038b8 <vTimerTask+0x1b0>)
9000370e:	b089      	sub	sp, #36	@ 0x24
90003710:	4f6a      	ldr	r7, [pc, #424]	@ (900038bc <vTimerTask+0x1b4>)
              currentSecond--;
            }

            // Send update to UI
            timeUpdate.minutes = currentMinute;
            timeUpdate.seconds = currentSecond;
90003712:	f04f 083b 	mov.w	r8, #59	@ 0x3b
    if (xQueueReceive(xCommandQueue, &command, portMAX_DELAY) == pdPASS) {
90003716:	f04f 32ff 	mov.w	r2, #4294967295
9000371a:	a904      	add	r1, sp, #16
9000371c:	6830      	ldr	r0, [r6, #0]
9000371e:	f00b fb91 	bl	9000ee44 <xQueueReceive>
90003722:	2801      	cmp	r0, #1
90003724:	d1f7      	bne.n	90003716 <vTimerTask+0xe>
      if (command.commandType == START_TIMER) {
90003726:	f89d 3010 	ldrb.w	r3, [sp, #16]
9000372a:	2b00      	cmp	r3, #0
9000372c:	d16b      	bne.n	90003806 <vTimerTask+0xfe>
        int16_t studyTime = command.studyTime;
9000372e:	f9bd a012 	ldrsh.w	sl, [sp, #18]
        int16_t totalSessions = command.sessions;
90003732:	f9bd b014 	ldrsh.w	fp, [sp, #20]
        int16_t breakTime = (studyTime > 10) ? (studyTime / 20) : 1;
90003736:	f1ba 0f0a 	cmp.w	sl, #10
9000373a:	dd6b      	ble.n	90003814 <vTimerTask+0x10c>
9000373c:	f1a3 3399 	sub.w	r3, r3, #2576980377	@ 0x99999999
90003740:	ea4f 70ea 	mov.w	r0, sl, asr #31
90003744:	fb83 230a 	smull	r2, r3, r3, sl
90003748:	ebc0 00e3 	rsb	r0, r0, r3, asr #3
9000374c:	b203      	sxth	r3, r0
        while (isRunning && (currentSession <= totalSessions)) {
9000374e:	f1bb 0f00 	cmp.w	fp, #0
90003752:	dde0      	ble.n	90003716 <vTimerTask+0xe>
        int16_t currentSession = 1;
90003754:	f04f 0901 	mov.w	r9, #1
90003758:	e9cd a300 	strd	sl, r3, [sp]
        	TickType_t xLastWakeTime = xTaskGetTickCount();
9000375c:	f00c fc90 	bl	90010080 <xTaskGetTickCount>
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
90003760:	9b00      	ldr	r3, [sp, #0]
        	TickType_t xLastWakeTime = xTaskGetTickCount();
90003762:	9002      	str	r0, [sp, #8]
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
90003764:	2b00      	cmp	r3, #0
90003766:	dd45      	ble.n	900037f4 <vTimerTask+0xec>
90003768:	461d      	mov	r5, r3
        	        int16_t currentSecond = 0;
9000376a:	2400      	movs	r4, #0
            vTaskDelayUntil(&xLastWakeTime, pdMS_TO_TICKS(1000));
9000376c:	a802      	add	r0, sp, #8
9000376e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
90003772:	f00c fafd 	bl	9000fd70 <vTaskDelayUntil>
            if (xQueueReceive(xCommandQueue, &command, 0) == pdPASS) {
90003776:	a904      	add	r1, sp, #16
90003778:	2200      	movs	r2, #0
9000377a:	6830      	ldr	r0, [r6, #0]
9000377c:	f00b fb62 	bl	9000ee44 <xQueueReceive>
90003780:	2801      	cmp	r0, #1
              currentSecond--;
90003782:	f104 3eff 	add.w	lr, r4, #4294967295
              currentMinute--;
90003786:	f105 3aff 	add.w	sl, r5, #4294967295
            timeUpdate.isBreak = isBreak;
9000378a:	f04f 0c00 	mov.w	ip, #0
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
9000378e:	4623      	mov	r3, r4
90003790:	f04f 32ff 	mov.w	r2, #4294967295
90003794:	a906      	add	r1, sp, #24
            if (xQueueReceive(xCommandQueue, &command, 0) == pdPASS) {
90003796:	d00d      	beq.n	900037b4 <vTimerTask+0xac>
            if (currentSecond == 0) {
90003798:	b994      	cbnz	r4, 900037c0 <vTimerTask+0xb8>
              currentMinute--;
9000379a:	fa0f f58a 	sxth.w	r5, sl
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
9000379e:	6838      	ldr	r0, [r7, #0]
            timeUpdate.isBreak = isBreak;
900037a0:	f88d 401c 	strb.w	r4, [sp, #28]
              currentSecond = 59;
900037a4:	243b      	movs	r4, #59	@ 0x3b
            timeUpdate.seconds = currentSecond;
900037a6:	f8ad 801a 	strh.w	r8, [sp, #26]
            timeUpdate.minutes = currentMinute;
900037aa:	f8ad 5018 	strh.w	r5, [sp, #24]
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
900037ae:	f00b f90b 	bl	9000e9c8 <xQueueGenericSend>
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
900037b2:	e7db      	b.n	9000376c <vTimerTask+0x64>
              if (command.commandType == STOP_TIMER) {
900037b4:	f89d 0010 	ldrb.w	r0, [sp, #16]
900037b8:	2801      	cmp	r0, #1
900037ba:	d0ac      	beq.n	90003716 <vTimerTask+0xe>
            if (currentSecond == 0) {
900037bc:	2c00      	cmp	r4, #0
900037be:	d0ec      	beq.n	9000379a <vTimerTask+0x92>
              currentSecond--;
900037c0:	fa0f f48e 	sxth.w	r4, lr
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
900037c4:	4663      	mov	r3, ip
900037c6:	f04f 32ff 	mov.w	r2, #4294967295
900037ca:	a906      	add	r1, sp, #24
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
900037cc:	2c00      	cmp	r4, #0
900037ce:	bfd8      	it	le
900037d0:	2d00      	cmple	r5, #0
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
900037d2:	6838      	ldr	r0, [r7, #0]
            timeUpdate.minutes = currentMinute;
900037d4:	f8ad 5018 	strh.w	r5, [sp, #24]
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
900037d8:	bfcc      	ite	gt
900037da:	f04f 0a01 	movgt.w	sl, #1
900037de:	f04f 0a00 	movle.w	sl, #0
            timeUpdate.seconds = currentSecond;
900037e2:	f8ad 401a 	strh.w	r4, [sp, #26]
            timeUpdate.isBreak = isBreak;
900037e6:	f88d c01c 	strb.w	ip, [sp, #28]
            xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
900037ea:	f00b f8ed 	bl	9000e9c8 <xQueueGenericSend>
          while (isRunning && (currentMinute > 0 || currentSecond > 0)) {
900037ee:	f1ba 0f00 	cmp.w	sl, #0
900037f2:	d1bb      	bne.n	9000376c <vTimerTask+0x64>
          }

          if (!isRunning) break; // Exit session loop if stopped

          // Break session (if not last session)
          if (currentSession < totalSessions) {
900037f4:	45cb      	cmp	fp, r9
900037f6:	dc0f      	bgt.n	90003818 <vTimerTask+0x110>
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
            }
          }

          if (!isRunning) break; // Exit session loop if stopped
          currentSession++;
900037f8:	f109 0901 	add.w	r9, r9, #1
900037fc:	fa0f f989 	sxth.w	r9, r9
        while (isRunning && (currentSession <= totalSessions)) {
90003800:	45cb      	cmp	fp, r9
90003802:	db88      	blt.n	90003716 <vTimerTask+0xe>
90003804:	e7aa      	b.n	9000375c <vTimerTask+0x54>
          isBreak = false;
        }
      }
      // ====== CHANGED: Handle STOP_TIMER command ======
      else if (command.commandType == STOP_TIMER) {
90003806:	2b01      	cmp	r3, #1
90003808:	d185      	bne.n	90003716 <vTimerTask+0xe>
        isRunning = false;
        xQueueReset(xTimeQueue);	// Clear any pending time updates
9000380a:	2100      	movs	r1, #0
9000380c:	6838      	ldr	r0, [r7, #0]
9000380e:	f00a ff41 	bl	9000e694 <xQueueGenericReset>
90003812:	e780      	b.n	90003716 <vTimerTask+0xe>
        int16_t breakTime = (studyTime > 10) ? (studyTime / 20) : 1;
90003814:	4603      	mov	r3, r0
90003816:	e79a      	b.n	9000374e <vTimerTask+0x46>
            TickType_t xLastWakeTime = xTaskGetTickCount();
90003818:	f00c fc32 	bl	90010080 <xTaskGetTickCount>
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
9000381c:	9b01      	ldr	r3, [sp, #4]
            TickType_t xLastWakeTime = xTaskGetTickCount();
9000381e:	9003      	str	r0, [sp, #12]
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
90003820:	2b00      	cmp	r3, #0
90003822:	d0e9      	beq.n	900037f8 <vTimerTask+0xf0>
            currentMinute = breakTime;
90003824:	461d      	mov	r5, r3
            currentSecond = 0;
90003826:	2400      	movs	r4, #0
              vTaskDelayUntil(&xLastWakeTime, pdMS_TO_TICKS(1000));
90003828:	a803      	add	r0, sp, #12
9000382a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
9000382e:	f00c fa9f 	bl	9000fd70 <vTaskDelayUntil>
              if (xQueueReceive(xCommandQueue, &command, 0) == pdPASS) {
90003832:	a904      	add	r1, sp, #16
90003834:	2200      	movs	r2, #0
90003836:	6830      	ldr	r0, [r6, #0]
90003838:	f00b fb04 	bl	9000ee44 <xQueueReceive>
9000383c:	2801      	cmp	r0, #1
                currentSecond--;
9000383e:	f104 3aff 	add.w	sl, r4, #4294967295
                currentMinute--;
90003842:	f105 3cff 	add.w	ip, r5, #4294967295
              timeUpdate.isBreak = isBreak;
90003846:	f04f 0e01 	mov.w	lr, #1
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
9000384a:	4623      	mov	r3, r4
9000384c:	f04f 32ff 	mov.w	r2, #4294967295
90003850:	a906      	add	r1, sp, #24
              if (xQueueReceive(xCommandQueue, &command, 0) == pdPASS) {
90003852:	d00f      	beq.n	90003874 <vTimerTask+0x16c>
              if (currentSecond == 0) {
90003854:	b9ac      	cbnz	r4, 90003882 <vTimerTask+0x17a>
              timeUpdate.isBreak = isBreak;
90003856:	f04f 0001 	mov.w	r0, #1
                currentMinute--;
9000385a:	fa0f f58c 	sxth.w	r5, ip
              timeUpdate.seconds = currentSecond;
9000385e:	f8ad 801a 	strh.w	r8, [sp, #26]
                currentSecond = 59;
90003862:	243b      	movs	r4, #59	@ 0x3b
              timeUpdate.isBreak = isBreak;
90003864:	f88d 001c 	strb.w	r0, [sp, #28]
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
90003868:	6838      	ldr	r0, [r7, #0]
              timeUpdate.minutes = currentMinute;
9000386a:	f8ad 5018 	strh.w	r5, [sp, #24]
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
9000386e:	f00b f8ab 	bl	9000e9c8 <xQueueGenericSend>
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
90003872:	e7d9      	b.n	90003828 <vTimerTask+0x120>
                if (command.commandType == STOP_TIMER) {
90003874:	f89d 0010 	ldrb.w	r0, [sp, #16]
90003878:	4570      	cmp	r0, lr
9000387a:	f43f af4c 	beq.w	90003716 <vTimerTask+0xe>
              if (currentSecond == 0) {
9000387e:	2c00      	cmp	r4, #0
90003880:	d0e9      	beq.n	90003856 <vTimerTask+0x14e>
                currentSecond--;
90003882:	fa0f f48a 	sxth.w	r4, sl
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
90003886:	2300      	movs	r3, #0
90003888:	f04f 32ff 	mov.w	r2, #4294967295
9000388c:	a906      	add	r1, sp, #24
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
9000388e:	429d      	cmp	r5, r3
90003890:	bfd8      	it	le
90003892:	429c      	cmple	r4, r3
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
90003894:	6838      	ldr	r0, [r7, #0]
              timeUpdate.minutes = currentMinute;
90003896:	f8ad 5018 	strh.w	r5, [sp, #24]
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
9000389a:	bfcc      	ite	gt
9000389c:	f04f 0a01 	movgt.w	sl, #1
900038a0:	f04f 0a00 	movle.w	sl, #0
              timeUpdate.seconds = currentSecond;
900038a4:	f8ad 401a 	strh.w	r4, [sp, #26]
              timeUpdate.isBreak = isBreak;
900038a8:	f88d e01c 	strb.w	lr, [sp, #28]
              xQueueSend(xTimeQueue, &timeUpdate, portMAX_DELAY);
900038ac:	f00b f88c 	bl	9000e9c8 <xQueueGenericSend>
            while (isRunning && (currentMinute > 0 || currentSecond > 0)) {\
900038b0:	f1ba 0f00 	cmp.w	sl, #0
900038b4:	d1b8      	bne.n	90003828 <vTimerTask+0x120>
900038b6:	e79f      	b.n	900037f8 <vTimerTask+0xf0>
900038b8:	24009108 	.word	0x24009108
900038bc:	24009104 	.word	0x24009104

900038c0 <StartDefaultTask>:




void StartDefaultTask(void *argument)
{
900038c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900038c2:	2064      	movs	r0, #100	@ 0x64
900038c4:	f00a f9f4 	bl	9000dcb0 <osDelay>
  for(;;)
900038c8:	e7fb      	b.n	900038c2 <StartDefaultTask+0x2>
900038ca:	bf00      	nop

900038cc <SystemClock_Config>:
{
900038cc:	b570      	push	{r4, r5, r6, lr}
900038ce:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900038d0:	224c      	movs	r2, #76	@ 0x4c
900038d2:	2100      	movs	r1, #0
900038d4:	a80a      	add	r0, sp, #40	@ 0x28
900038d6:	f026 ff77 	bl	9002a7c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900038da:	2220      	movs	r2, #32
900038dc:	2100      	movs	r1, #0
900038de:	a802      	add	r0, sp, #8
900038e0:	f026 ff72 	bl	9002a7c8 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900038e4:	2002      	movs	r0, #2
900038e6:	f008 f85d 	bl	9000b9a4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900038ea:	4a22      	ldr	r2, [pc, #136]	@ (90003974 <SystemClock_Config+0xa8>)
900038ec:	2100      	movs	r1, #0
900038ee:	4b22      	ldr	r3, [pc, #136]	@ (90003978 <SystemClock_Config+0xac>)
900038f0:	9101      	str	r1, [sp, #4]
900038f2:	6991      	ldr	r1, [r2, #24]
900038f4:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
900038f8:	6191      	str	r1, [r2, #24]
900038fa:	6991      	ldr	r1, [r2, #24]
900038fc:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003900:	9101      	str	r1, [sp, #4]
90003902:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003904:	f041 0101 	orr.w	r1, r1, #1
90003908:	62d9      	str	r1, [r3, #44]	@ 0x2c
9000390a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000390c:	f003 0301 	and.w	r3, r3, #1
90003910:	9301      	str	r3, [sp, #4]
90003912:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003914:	6993      	ldr	r3, [r2, #24]
90003916:	0499      	lsls	r1, r3, #18
90003918:	d5fc      	bpl.n	90003914 <SystemClock_Config+0x48>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
9000391a:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
9000391c:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
90003920:	2001      	movs	r0, #1
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003922:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003924:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003926:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLN = 192;
90003928:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLP = 2;
9000392a:	9317      	str	r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
9000392c:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLQ = 4;
9000392e:	9618      	str	r6, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003930:	941c      	str	r4, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003932:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLN = 192;
90003936:	23c0      	movs	r3, #192	@ 0xc0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003938:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
9000393c:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.PLL.PLLN = 192;
9000393e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003942:	e9cd 541a 	strd	r5, r4, [sp, #104]	@ 0x68
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003946:	f008 f8c3 	bl	9000bad0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
9000394a:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
9000394c:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
9000394e:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003950:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003952:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003956:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003958:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
9000395a:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
9000395c:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
9000395e:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003960:	e9cd 5305 	strd	r5, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003964:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003968:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
9000396a:	f008 fc31 	bl	9000c1d0 <HAL_RCC_ClockConfig>
}
9000396e:	b01e      	add	sp, #120	@ 0x78
90003970:	bd70      	pop	{r4, r5, r6, pc}
90003972:	bf00      	nop
90003974:	58024800 	.word	0x58024800
90003978:	58000400 	.word	0x58000400

9000397c <main>:
{
9000397c:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000397e:	2400      	movs	r4, #0
{
90003980:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003982:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003984:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003986:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003988:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
9000398c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
90003990:	f004 fea8 	bl	900086e4 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003994:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003998:	49d3      	ldr	r1, [pc, #844]	@ (90003ce8 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000399a:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.BaseAddress = 0x24000000;
9000399c:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000399e:	4bd3      	ldr	r3, [pc, #844]	@ (90003cec <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900039a0:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900039a4:	e9cd 130f 	strd	r1, r3, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039a8:	f004 feba 	bl	90008720 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
900039ac:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039b0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900039b2:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
900039b6:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900039b8:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
900039bc:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900039c0:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039c4:	f004 feac 	bl	90008720 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900039c8:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039ca:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900039cc:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900039d0:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
900039d4:	231a      	movs	r3, #26
900039d6:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900039da:	f240 1301 	movw	r3, #257	@ 0x101
900039de:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039e2:	f004 fe9d 	bl	90008720 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900039e6:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039ea:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900039ec:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900039f0:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900039f2:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
900039f6:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900039fa:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
900039fe:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003a00:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003a04:	f004 fe8c 	bl	90008720 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003a08:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003a0a:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003a0c:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003a10:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003a14:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003a18:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003a1c:	f004 fe80 	bl	90008720 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003a20:	4620      	mov	r0, r4
90003a22:	f004 fe6d 	bl	90008700 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003a26:	4ab2      	ldr	r2, [pc, #712]	@ (90003cf0 <main+0x374>)
90003a28:	6953      	ldr	r3, [r2, #20]
90003a2a:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003a2e:	d111      	bne.n	90003a54 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003a30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a34:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003a38:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003a3c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a40:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003a44:	6953      	ldr	r3, [r2, #20]
90003a46:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003a4a:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003a4c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a50:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003a54:	48a6      	ldr	r0, [pc, #664]	@ (90003cf0 <main+0x374>)
90003a56:	6943      	ldr	r3, [r0, #20]
90003a58:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003a5c:	d124      	bne.n	90003aa8 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003a5e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003a62:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003a66:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a6a:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003a6e:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003a72:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003a76:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a78:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003a7c:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a7e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003a82:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a84:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003a88:	1c5a      	adds	r2, r3, #1
90003a8a:	d1f8      	bne.n	90003a7e <main+0x102>
    } while(sets-- != 0U);
90003a8c:	3c20      	subs	r4, #32
90003a8e:	f114 0f20 	cmn.w	r4, #32
90003a92:	d1f1      	bne.n	90003a78 <main+0xfc>
90003a94:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003a98:	6943      	ldr	r3, [r0, #20]
90003a9a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003a9e:	6143      	str	r3, [r0, #20]
90003aa0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003aa4:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003aa8:	f004 fd66 	bl	90008578 <HAL_Init>
  SystemClock_Config();
90003aac:	f7ff ff0e 	bl	900038cc <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003ab0:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003ab2:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003ab4:	4d8f      	ldr	r5, [pc, #572]	@ (90003cf4 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003ab6:	21c0      	movs	r1, #192	@ 0xc0
90003ab8:	488f      	ldr	r0, [pc, #572]	@ (90003cf8 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003aba:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003abc:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003abe:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ac0:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003ac4:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003ac6:	f04f 0940 	mov.w	r9, #64	@ 0x40
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003aca:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003ace:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003ad2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ad6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003ada:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ade:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ae2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003ae6:	9303      	str	r3, [sp, #12]
90003ae8:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003aea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003af2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003af6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003afa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003afe:	9304      	str	r3, [sp, #16]
90003b00:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003b02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b06:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003b0a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b12:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003b16:	9305      	str	r3, [sp, #20]
90003b18:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003b1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b1e:	f043 0310 	orr.w	r3, r3, #16
90003b22:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b2a:	f003 0310 	and.w	r3, r3, #16
90003b2e:	9306      	str	r3, [sp, #24]
90003b30:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003b32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b36:	f043 0302 	orr.w	r3, r3, #2
90003b3a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b42:	f003 0302 	and.w	r3, r3, #2
90003b46:	9307      	str	r3, [sp, #28]
90003b48:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003b4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b4e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003b52:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b5a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003b5e:	9308      	str	r3, [sp, #32]
90003b60:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003b62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b66:	f043 0308 	orr.w	r3, r3, #8
90003b6a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b72:	f003 0308 	and.w	r3, r3, #8
90003b76:	9309      	str	r3, [sp, #36]	@ 0x24
90003b78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003b7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b7e:	f043 0320 	orr.w	r3, r3, #32
90003b82:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b8a:	f003 0320 	and.w	r3, r3, #32
90003b8e:	930a      	str	r3, [sp, #40]	@ 0x28
90003b90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003b92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b96:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003b9a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ba2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003ba6:	930b      	str	r3, [sp, #44]	@ 0x2c
90003ba8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003baa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003bae:	f043 0301 	orr.w	r3, r3, #1
90003bb2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003bb6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003bba:	f003 0301 	and.w	r3, r3, #1
90003bbe:	930c      	str	r3, [sp, #48]	@ 0x30
90003bc0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003bc2:	f005 f9a7 	bl	90008f14 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003bc6:	4622      	mov	r2, r4
90003bc8:	2180      	movs	r1, #128	@ 0x80
90003bca:	484c      	ldr	r0, [pc, #304]	@ (90003cfc <main+0x380>)
90003bcc:	f005 f9a2 	bl	90008f14 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003bd0:	4622      	mov	r2, r4
90003bd2:	2108      	movs	r1, #8
90003bd4:	484a      	ldr	r0, [pc, #296]	@ (90003d00 <main+0x384>)
90003bd6:	f005 f99d 	bl	90008f14 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003bda:	2201      	movs	r2, #1
90003bdc:	4849      	ldr	r0, [pc, #292]	@ (90003d04 <main+0x388>)
90003bde:	4611      	mov	r1, r2
90003be0:	f005 f998 	bl	90008f14 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003be4:	4622      	mov	r2, r4
90003be6:	2140      	movs	r1, #64	@ 0x40
90003be8:	4847      	ldr	r0, [pc, #284]	@ (90003d08 <main+0x38c>)
90003bea:	f005 f993 	bl	90008f14 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003bee:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003bf0:	a90d      	add	r1, sp, #52	@ 0x34
90003bf2:	4841      	ldr	r0, [pc, #260]	@ (90003cf8 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bf4:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003bf8:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003bfc:	f004 ff78 	bl	90008af0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003c00:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003c02:	a90d      	add	r1, sp, #52	@ 0x34
90003c04:	483d      	ldr	r0, [pc, #244]	@ (90003cfc <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003c06:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003c08:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003c0a:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003c0e:	f004 ff6f 	bl	90008af0 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003c12:	a90d      	add	r1, sp, #52	@ 0x34
90003c14:	483a      	ldr	r0, [pc, #232]	@ (90003d00 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c16:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003c1a:	970d      	str	r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003c1c:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003c20:	f004 ff66 	bl	90008af0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003c24:	a90d      	add	r1, sp, #52	@ 0x34
90003c26:	4837      	ldr	r0, [pc, #220]	@ (90003d04 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c28:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003c2c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003c30:	f004 ff5e 	bl	90008af0 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003c34:	a90d      	add	r1, sp, #52	@ 0x34
90003c36:	4834      	ldr	r0, [pc, #208]	@ (90003d08 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c38:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c3c:	f04f 0805 	mov.w	r8, #5
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003c40:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003c44:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003c48:	f004 ff52 	bl	90008af0 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c4c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c50:	4622      	mov	r2, r4
90003c52:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c54:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c56:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c58:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003c5c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003c60:	4d2a      	ldr	r5, [pc, #168]	@ (90003d0c <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c62:	4033      	ands	r3, r6
90003c64:	9302      	str	r3, [sp, #8]
90003c66:	9b02      	ldr	r3, [sp, #8]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c68:	f004 fce0 	bl	9000862c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003c6c:	207a      	movs	r0, #122	@ 0x7a
90003c6e:	f004 fd19 	bl	900086a4 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003c72:	2234      	movs	r2, #52	@ 0x34
90003c74:	4621      	mov	r1, r4
90003c76:	eb0d 0002 	add.w	r0, sp, r2
90003c7a:	f026 fda5 	bl	9002a7c8 <memset>
  hltdc.Instance = LTDC;
90003c7e:	4b24      	ldr	r3, [pc, #144]	@ (90003d10 <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90003c80:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003c82:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003c84:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003c86:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003c88:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003c8c:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003c90:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003c92:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003c94:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003c96:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003c9a:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003c9e:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003ca2:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003ca4:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003ca8:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003cac:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003cae:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003cb2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003cb6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003cba:	f007 fa83 	bl	9000b1c4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003cbe:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003cc2:	4622      	mov	r2, r4
90003cc4:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90003cc6:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003cc8:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003cca:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90003ccc:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003cd0:	4d10      	ldr	r5, [pc, #64]	@ (90003d14 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90003cd2:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90003cd4:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90003cd6:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003cd8:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Alpha = 255;
90003cda:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003cdc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowY0 = 0;
90003ce0:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003ce2:	9314      	str	r3, [sp, #80]	@ 0x50
90003ce4:	e018      	b.n	90003d18 <main+0x39c>
90003ce6:	bf00      	nop
90003ce8:	03000012 	.word	0x03000012
90003cec:	01010001 	.word	0x01010001
90003cf0:	e000ed00 	.word	0xe000ed00
90003cf4:	58024400 	.word	0x58024400
90003cf8:	58020400 	.word	0x58020400
90003cfc:	58020c00 	.word	0x58020c00
90003d00:	58021800 	.word	0x58021800
90003d04:	58022800 	.word	0x58022800
90003d08:	58020000 	.word	0x58020000
90003d0c:	24009148 	.word	0x24009148
90003d10:	50001000 	.word	0x50001000
90003d14:	24009320 	.word	0x24009320
  pLayerCfg.Alpha0 = 0;
90003d18:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
90003d1a:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90003d1c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
90003d20:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003d24:	9711      	str	r7, [sp, #68]	@ 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003d26:	f8cd 8054 	str.w	r8, [sp, #84]	@ 0x54
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003d2a:	f007 fb09 	bl	9000b340 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003d2e:	4b44      	ldr	r3, [pc, #272]	@ (90003e40 <main+0x4c4>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d30:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003d32:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003d34:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003d36:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003d38:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003d3c:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003d40:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003d44:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d48:	f004 fd90 	bl	9000886c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003d4c:	4631      	mov	r1, r6
90003d4e:	4628      	mov	r0, r5
90003d50:	f004 fe64 	bl	90008a1c <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d54:	483b      	ldr	r0, [pc, #236]	@ (90003e44 <main+0x4c8>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d56:	2304      	movs	r3, #4
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d58:	f44f 6c00 	mov.w	ip, #2048	@ 0x800
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d5c:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.LoadToActiveDelay = 2;
90003d5e:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d60:	60c3      	str	r3, [r0, #12]
  SdramTiming.SelfRefreshTime = 4;
90003d62:	930f      	str	r3, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
90003d64:	2307      	movs	r3, #7
  SdramTiming.RCDDelay = 2;
90003d66:	9713      	str	r7, [sp, #76]	@ 0x4c
  SdramTiming.ExitSelfRefreshDelay = 7;
90003d68:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
90003d6a:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d6c:	4b36      	ldr	r3, [pc, #216]	@ (90003e48 <main+0x4cc>)
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003d6e:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d72:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003d74:	2310      	movs	r3, #16
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003d76:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003d78:	6103      	str	r3, [r0, #16]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d7a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003d7e:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d80:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d82:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  SdramTiming.RPDelay = 2;
90003d86:	e9cd 8711 	strd	r8, r7, [sp, #68]	@ 0x44
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d8a:	e9c0 c308 	strd	ip, r3, [r0, #32]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003d8e:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d92:	f009 fc41 	bl	9000d618 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003d96:	4a2d      	ldr	r2, [pc, #180]	@ (90003e4c <main+0x4d0>)
  BSP_SDRAM_DeInit(0);
90003d98:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003d9a:	6813      	ldr	r3, [r2, #0]
90003d9c:	f023 0301 	bic.w	r3, r3, #1
90003da0:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003da2:	f004 f985 	bl	900080b0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003da6:	4620      	mov	r0, r4
90003da8:	f004 f9cc 	bl	90008144 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003dac:	f7fc fe7e 	bl	90000aac <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003db0:	4b27      	ldr	r3, [pc, #156]	@ (90003e50 <main+0x4d4>)
90003db2:	4828      	ldr	r0, [pc, #160]	@ (90003e54 <main+0x4d8>)
90003db4:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003db6:	f006 f961 	bl	9000a07c <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003dba:	4b27      	ldr	r3, [pc, #156]	@ (90003e58 <main+0x4dc>)
90003dbc:	4827      	ldr	r0, [pc, #156]	@ (90003e5c <main+0x4e0>)
90003dbe:	6003      	str	r3, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003dc0:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003dc2:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003dc4:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003dc8:	f004 fcda 	bl	90008780 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90003dcc:	f7fc fe72 	bl	90000ab4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003dd0:	f7fc fe6e 	bl	90000ab0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003dd4:	f009 fefe 	bl	9000dbd4 <osKernelInitialize>
  xCommandQueue = xQueueCreate(5, sizeof(TimerCommand_t)); // Command queue
90003dd8:	4622      	mov	r2, r4
90003dda:	2106      	movs	r1, #6
90003ddc:	4640      	mov	r0, r8
90003dde:	f00a fd0b 	bl	9000e7f8 <xQueueGenericCreate>
90003de2:	4b1f      	ldr	r3, [pc, #124]	@ (90003e60 <main+0x4e4>)
90003de4:	4602      	mov	r2, r0
    xTimeQueue = xQueueCreate(5, sizeof(TimeUpdate_t));      // Time update queue
90003de6:	2106      	movs	r1, #6
90003de8:	4640      	mov	r0, r8
  xCommandQueue = xQueueCreate(5, sizeof(TimerCommand_t)); // Command queue
90003dea:	601a      	str	r2, [r3, #0]
    xTimeQueue = xQueueCreate(5, sizeof(TimeUpdate_t));      // Time update queue
90003dec:	4622      	mov	r2, r4
90003dee:	f00a fd03 	bl	9000e7f8 <xQueueGenericCreate>
90003df2:	4b1c      	ldr	r3, [pc, #112]	@ (90003e64 <main+0x4e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003df4:	4a1c      	ldr	r2, [pc, #112]	@ (90003e68 <main+0x4ec>)
90003df6:	4621      	mov	r1, r4
    xTimeQueue = xQueueCreate(5, sizeof(TimeUpdate_t));      // Time update queue
90003df8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003dfa:	481c      	ldr	r0, [pc, #112]	@ (90003e6c <main+0x4f0>)
90003dfc:	f009 ff16 	bl	9000dc2c <osThreadNew>
90003e00:	4b1b      	ldr	r3, [pc, #108]	@ (90003e70 <main+0x4f4>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003e02:	4a1c      	ldr	r2, [pc, #112]	@ (90003e74 <main+0x4f8>)
90003e04:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003e06:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003e08:	481b      	ldr	r0, [pc, #108]	@ (90003e78 <main+0x4fc>)
90003e0a:	f009 ff0f 	bl	9000dc2c <osThreadNew>
90003e0e:	4a1b      	ldr	r2, [pc, #108]	@ (90003e7c <main+0x500>)
  xTaskCreate(vUITask, "UITask", 512, NULL, 1, NULL);
90003e10:	4623      	mov	r3, r4
90003e12:	491b      	ldr	r1, [pc, #108]	@ (90003e80 <main+0x504>)
90003e14:	e9cd 6400 	strd	r6, r4, [sp]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003e18:	6010      	str	r0, [r2, #0]
  xTaskCreate(vUITask, "UITask", 512, NULL, 1, NULL);
90003e1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
90003e1e:	4819      	ldr	r0, [pc, #100]	@ (90003e84 <main+0x508>)
90003e20:	f00b ff14 	bl	9000fc4c <xTaskCreate>
  xTaskCreate(vTimerTask, "TimerTask", 512, NULL, 2, NULL);
90003e24:	4623      	mov	r3, r4
90003e26:	f44f 7200 	mov.w	r2, #512	@ 0x200
90003e2a:	4917      	ldr	r1, [pc, #92]	@ (90003e88 <main+0x50c>)
90003e2c:	4817      	ldr	r0, [pc, #92]	@ (90003e8c <main+0x510>)
90003e2e:	e9cd 7400 	strd	r7, r4, [sp]
90003e32:	f00b ff0b 	bl	9000fc4c <xTaskCreate>
  vTaskStartScheduler();
90003e36:	f00c f86f 	bl	9000ff18 <vTaskStartScheduler>
  osKernelStart();
90003e3a:	f009 fedd 	bl	9000dbf8 <osKernelStart>
  while (1)
90003e3e:	e7fe      	b.n	90003e3e <main+0x4c2>
90003e40:	52001000 	.word	0x52001000
90003e44:	24009114 	.word	0x24009114
90003e48:	52004140 	.word	0x52004140
90003e4c:	52004000 	.word	0x52004000
90003e50:	52003000 	.word	0x52003000
90003e54:	240092c8 	.word	0x240092c8
90003e58:	58024c00 	.word	0x58024c00
90003e5c:	24009388 	.word	0x24009388
90003e60:	24009108 	.word	0x24009108
90003e64:	24009104 	.word	0x24009104
90003e68:	9002cbb4 	.word	0x9002cbb4
90003e6c:	900038c1 	.word	0x900038c1
90003e70:	24009110 	.word	0x24009110
90003e74:	9002cb90 	.word	0x9002cb90
90003e78:	90000ac5 	.word	0x90000ac5
90003e7c:	2400910c 	.word	0x2400910c
90003e80:	9002cb68 	.word	0x9002cb68
90003e84:	900036fd 	.word	0x900036fd
90003e88:	9002cb70 	.word	0x9002cb70
90003e8c:	90003709 	.word	0x90003709

90003e90 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003e90:	4b03      	ldr	r3, [pc, #12]	@ (90003ea0 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003e92:	6802      	ldr	r2, [r0, #0]
90003e94:	429a      	cmp	r2, r3
90003e96:	d000      	beq.n	90003e9a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003e98:	4770      	bx	lr
    HAL_IncTick();
90003e9a:	f004 bb9d 	b.w	900085d8 <HAL_IncTick>
90003e9e:	bf00      	nop
90003ea0:	40001000 	.word	0x40001000

90003ea4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003ea4:	4770      	bx	lr
90003ea6:	bf00      	nop

90003ea8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003ea8:	4b0b      	ldr	r3, [pc, #44]	@ (90003ed8 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003eaa:	2200      	movs	r2, #0
90003eac:	210f      	movs	r1, #15
90003eae:	f06f 0001 	mvn.w	r0, #1
{
90003eb2:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003eb4:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003eb8:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003eba:	f044 0402 	orr.w	r4, r4, #2
90003ebe:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003ec2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003ec6:	f003 0302 	and.w	r3, r3, #2
90003eca:	9301      	str	r3, [sp, #4]
90003ecc:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003ece:	b003      	add	sp, #12
90003ed0:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003ed4:	f004 bbaa 	b.w	9000862c <HAL_NVIC_SetPriority>
90003ed8:	58024400 	.word	0x58024400

90003edc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003edc:	4b0a      	ldr	r3, [pc, #40]	@ (90003f08 <HAL_CRC_MspInit+0x2c>)
90003ede:	6802      	ldr	r2, [r0, #0]
90003ee0:	429a      	cmp	r2, r3
90003ee2:	d000      	beq.n	90003ee6 <HAL_CRC_MspInit+0xa>
90003ee4:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003ee6:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003eea:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003eec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003ef0:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003ef4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003ef8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003efc:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003f00:	9301      	str	r3, [sp, #4]
90003f02:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
90003f04:	b002      	add	sp, #8
90003f06:	4770      	bx	lr
90003f08:	58024c00 	.word	0x58024c00

90003f0c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003f0c:	4b0f      	ldr	r3, [pc, #60]	@ (90003f4c <HAL_DMA2D_MspInit+0x40>)
90003f0e:	6802      	ldr	r2, [r0, #0]
90003f10:	429a      	cmp	r2, r3
90003f12:	d000      	beq.n	90003f16 <HAL_DMA2D_MspInit+0xa>
90003f14:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003f16:	4b0e      	ldr	r3, [pc, #56]	@ (90003f50 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003f18:	205a      	movs	r0, #90	@ 0x5a
90003f1a:	2200      	movs	r2, #0
90003f1c:	2105      	movs	r1, #5
{
90003f1e:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003f20:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003f24:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003f26:	f044 0410 	orr.w	r4, r4, #16
90003f2a:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003f2e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003f32:	f003 0310 	and.w	r3, r3, #16
90003f36:	9301      	str	r3, [sp, #4]
90003f38:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003f3a:	f004 fb77 	bl	9000862c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003f3e:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
90003f40:	b002      	add	sp, #8
90003f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003f46:	f004 bbad 	b.w	900086a4 <HAL_NVIC_EnableIRQ>
90003f4a:	bf00      	nop
90003f4c:	52001000 	.word	0x52001000
90003f50:	58024400 	.word	0x58024400

90003f54 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003f54:	4b3f      	ldr	r3, [pc, #252]	@ (90004054 <HAL_JPEG_MspInit+0x100>)
90003f56:	6802      	ldr	r2, [r0, #0]
90003f58:	429a      	cmp	r2, r3
90003f5a:	d000      	beq.n	90003f5e <HAL_JPEG_MspInit+0xa>
90003f5c:	4770      	bx	lr
{
90003f5e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f60:	4b3d      	ldr	r3, [pc, #244]	@ (90004058 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003f62:	2211      	movs	r2, #17
90003f64:	4e3d      	ldr	r6, [pc, #244]	@ (9000405c <HAL_JPEG_MspInit+0x108>)
{
90003f66:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003f68:	4d3d      	ldr	r5, [pc, #244]	@ (90004060 <HAL_JPEG_MspInit+0x10c>)
90003f6a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003f6c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003f6e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f70:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003f74:	493b      	ldr	r1, [pc, #236]	@ (90004064 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f76:	f042 0220 	orr.w	r2, r2, #32
90003f7a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003f7e:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f80:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003f84:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f86:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003f8a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f8c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003f8e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003f90:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003f92:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003f94:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003f98:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003f9c:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003f9e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003fa0:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003fa4:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003fa8:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003faa:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003fae:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003fb2:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003fb6:	2313      	movs	r3, #19
90003fb8:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003fba:	2302      	movs	r3, #2
90003fbc:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003fbe:	f007 faa9 	bl	9000b514 <HAL_MDMA_Init>
90003fc2:	2800      	cmp	r0, #0
90003fc4:	d13a      	bne.n	9000403c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003fc6:	2200      	movs	r2, #0
90003fc8:	4824      	ldr	r0, [pc, #144]	@ (9000405c <HAL_JPEG_MspInit+0x108>)
90003fca:	4611      	mov	r1, r2
90003fcc:	f007 fb40 	bl	9000b650 <HAL_MDMA_ConfigPostRequestMask>
90003fd0:	2800      	cmp	r0, #0
90003fd2:	d13c      	bne.n	9000404e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003fd4:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003fd6:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003fd8:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003fda:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003fdc:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003fde:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003fe0:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003fe4:	4920      	ldr	r1, [pc, #128]	@ (90004068 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003fe6:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003fe8:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90003fea:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003fec:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003fee:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003ff2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003ff6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003ff8:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003ffa:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003ffe:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004000:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004004:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004008:	4815      	ldr	r0, [pc, #84]	@ (90004060 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000400a:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000400c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000400e:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004010:	f007 fa80 	bl	9000b514 <HAL_MDMA_Init>
90004014:	b9c0      	cbnz	r0, 90004048 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004016:	2200      	movs	r2, #0
90004018:	4811      	ldr	r0, [pc, #68]	@ (90004060 <HAL_JPEG_MspInit+0x10c>)
9000401a:	4611      	mov	r1, r2
9000401c:	f007 fb18 	bl	9000b650 <HAL_MDMA_ConfigPostRequestMask>
90004020:	b978      	cbnz	r0, 90004042 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004022:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004024:	2079      	movs	r0, #121	@ 0x79
90004026:	2200      	movs	r2, #0
90004028:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000402a:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000402c:	f004 fafe 	bl	9000862c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004030:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
90004032:	b002      	add	sp, #8
90004034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004038:	f004 bb34 	b.w	900086a4 <HAL_NVIC_EnableIRQ>
      Error_Handler();
9000403c:	f7ff ff32 	bl	90003ea4 <Error_Handler>
90004040:	e7c1      	b.n	90003fc6 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90004042:	f7ff ff2f 	bl	90003ea4 <Error_Handler>
90004046:	e7ec      	b.n	90004022 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004048:	f7ff ff2c 	bl	90003ea4 <Error_Handler>
9000404c:	e7e3      	b.n	90004016 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000404e:	f7ff ff29 	bl	90003ea4 <Error_Handler>
90004052:	e7bf      	b.n	90003fd4 <HAL_JPEG_MspInit+0x80>
90004054:	52003000 	.word	0x52003000
90004058:	58024400 	.word	0x58024400
9000405c:	2400925c 	.word	0x2400925c
90004060:	240091f0 	.word	0x240091f0
90004064:	52000200 	.word	0x52000200
90004068:	520001c0 	.word	0x520001c0

9000406c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000406c:	b570      	push	{r4, r5, r6, lr}
9000406e:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004070:	2100      	movs	r1, #0
{
90004072:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004074:	22c0      	movs	r2, #192	@ 0xc0
90004076:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004078:	9109      	str	r1, [sp, #36]	@ 0x24
9000407a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000407e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004082:	f026 fba1 	bl	9002a7c8 <memset>
  if(hltdc->Instance==LTDC)
90004086:	4b4a      	ldr	r3, [pc, #296]	@ (900041b0 <HAL_LTDC_MspInit+0x144>)
90004088:	6822      	ldr	r2, [r4, #0]
9000408a:	429a      	cmp	r2, r3
9000408c:	d001      	beq.n	90004092 <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
9000408e:	b03a      	add	sp, #232	@ 0xe8
90004090:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004092:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004094:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004096:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
9000409a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000409c:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000409e:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900040a0:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040a2:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
900040a4:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040a6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040aa:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900040ac:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900040ae:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040b2:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040b6:	f008 fb55 	bl	9000c764 <HAL_RCCEx_PeriphCLKConfig>
900040ba:	2800      	cmp	r0, #0
900040bc:	d174      	bne.n	900041a8 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900040be:	4b3d      	ldr	r3, [pc, #244]	@ (900041b4 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900040c0:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900040c2:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900040c4:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900040c6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900040ca:	a905      	add	r1, sp, #20
900040cc:	483a      	ldr	r0, [pc, #232]	@ (900041b8 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900040ce:	f042 0208 	orr.w	r2, r2, #8
900040d2:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
900040d6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
900040da:	f002 0208 	and.w	r2, r2, #8
900040de:	9200      	str	r2, [sp, #0]
900040e0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900040e2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040e6:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900040ea:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900040ee:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040f2:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900040f6:	9201      	str	r2, [sp, #4]
900040f8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900040fa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040fe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004102:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004106:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000410a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9000410e:	9202      	str	r2, [sp, #8]
90004110:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90004112:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004116:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
9000411a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000411e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004122:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004126:	9203      	str	r2, [sp, #12]
90004128:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000412a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000412e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90004132:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004136:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000413a:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000413c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004140:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004142:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004144:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004146:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004148:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000414a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000414e:	f004 fccf 	bl	90008af0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004152:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004156:	a905      	add	r1, sp, #20
90004158:	4818      	ldr	r0, [pc, #96]	@ (900041bc <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000415a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000415c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004160:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004164:	f004 fcc4 	bl	90008af0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004168:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000416c:	a905      	add	r1, sp, #20
9000416e:	4814      	ldr	r0, [pc, #80]	@ (900041c0 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004170:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004172:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004176:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000417a:	f004 fcb9 	bl	90008af0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000417e:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004182:	a905      	add	r1, sp, #20
90004184:	480f      	ldr	r0, [pc, #60]	@ (900041c4 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004186:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004188:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000418c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004190:	f004 fcae 	bl	90008af0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004194:	462a      	mov	r2, r5
90004196:	2105      	movs	r1, #5
90004198:	2058      	movs	r0, #88	@ 0x58
9000419a:	f004 fa47 	bl	9000862c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000419e:	2058      	movs	r0, #88	@ 0x58
900041a0:	f004 fa80 	bl	900086a4 <HAL_NVIC_EnableIRQ>
}
900041a4:	b03a      	add	sp, #232	@ 0xe8
900041a6:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
900041a8:	f7ff fe7c 	bl	90003ea4 <Error_Handler>
900041ac:	e787      	b.n	900040be <HAL_LTDC_MspInit+0x52>
900041ae:	bf00      	nop
900041b0:	50001000 	.word	0x50001000
900041b4:	58024400 	.word	0x58024400
900041b8:	58022800 	.word	0x58022800
900041bc:	58022000 	.word	0x58022000
900041c0:	58022400 	.word	0x58022400
900041c4:	58021c00 	.word	0x58021c00

900041c8 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900041c8:	4836      	ldr	r0, [pc, #216]	@ (900042a4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900041ca:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900041cc:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900041ce:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900041d0:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900041d2:	e9cd 3302 	strd	r3, r3, [sp, #8]
900041d6:	e9cd 3304 	strd	r3, r3, [sp, #16]
900041da:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900041dc:	b109      	cbz	r1, 900041e2 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900041de:	b038      	add	sp, #224	@ 0xe0
900041e0:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900041e2:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900041e4:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900041e6:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900041e8:	a80a      	add	r0, sp, #40	@ 0x28
900041ea:	f026 faed 	bl	9002a7c8 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900041ee:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900041f2:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900041f4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900041f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900041fa:	f008 fab3 	bl	9000c764 <HAL_RCCEx_PeriphCLKConfig>
900041fe:	2800      	cmp	r0, #0
90004200:	d14c      	bne.n	9000429c <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90004202:	4b29      	ldr	r3, [pc, #164]	@ (900042a8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004204:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004208:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000420a:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000420c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004210:	2600      	movs	r6, #0
90004212:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004214:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004218:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000421c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004220:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90004222:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004226:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
9000422a:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000422c:	a902      	add	r1, sp, #8
9000422e:	481f      	ldr	r0, [pc, #124]	@ (900042ac <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90004230:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004232:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004236:	f004 fc5b 	bl	90008af0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000423a:	f248 1233 	movw	r2, #33075	@ 0x8133
9000423e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90004240:	a902      	add	r1, sp, #8
90004242:	481b      	ldr	r0, [pc, #108]	@ (900042b0 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004244:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004246:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000424a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000424e:	f004 fc4f 	bl	90008af0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004252:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004256:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004258:	a902      	add	r1, sp, #8
9000425a:	4816      	ldr	r0, [pc, #88]	@ (900042b4 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000425c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000425e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004262:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004266:	f004 fc43 	bl	90008af0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000426a:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000426e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90004270:	a902      	add	r1, sp, #8
90004272:	4811      	ldr	r0, [pc, #68]	@ (900042b8 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004274:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004276:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000427a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000427e:	f004 fc37 	bl	90008af0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004282:	22e0      	movs	r2, #224	@ 0xe0
90004284:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004286:	a902      	add	r1, sp, #8
90004288:	480c      	ldr	r0, [pc, #48]	@ (900042bc <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000428a:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000428c:	e9cd 6704 	strd	r6, r7, [sp, #16]
90004290:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004294:	f004 fc2c 	bl	90008af0 <HAL_GPIO_Init>
}
90004298:	b038      	add	sp, #224	@ 0xe0
9000429a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000429c:	f7ff fe02 	bl	90003ea4 <Error_Handler>
900042a0:	e7af      	b.n	90004202 <HAL_SDRAM_MspInit+0x3a>
900042a2:	bf00      	nop
900042a4:	240093b0 	.word	0x240093b0
900042a8:	58024400 	.word	0x58024400
900042ac:	58021000 	.word	0x58021000
900042b0:	58021800 	.word	0x58021800
900042b4:	58020c00 	.word	0x58020c00
900042b8:	58021400 	.word	0x58021400
900042bc:	58021c00 	.word	0x58021c00

900042c0 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900042c0:	4b13      	ldr	r3, [pc, #76]	@ (90004310 <HAL_SDRAM_MspDeInit+0x50>)
900042c2:	681a      	ldr	r2, [r3, #0]
900042c4:	b102      	cbz	r2, 900042c8 <HAL_SDRAM_MspDeInit+0x8>
900042c6:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900042c8:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900042ca:	4a12      	ldr	r2, [pc, #72]	@ (90004314 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900042cc:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042ce:	f64f 7183 	movw	r1, #65411	@ 0xff83
900042d2:	4811      	ldr	r0, [pc, #68]	@ (90004318 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900042d4:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900042d6:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900042da:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900042de:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042e2:	f004 fd47 	bl	90008d74 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900042e6:	f248 1133 	movw	r1, #33075	@ 0x8133
900042ea:	480c      	ldr	r0, [pc, #48]	@ (9000431c <HAL_SDRAM_MspDeInit+0x5c>)
900042ec:	f004 fd42 	bl	90008d74 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900042f0:	f24c 7103 	movw	r1, #50947	@ 0xc703
900042f4:	480a      	ldr	r0, [pc, #40]	@ (90004320 <HAL_SDRAM_MspDeInit+0x60>)
900042f6:	f004 fd3d 	bl	90008d74 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900042fa:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900042fe:	4809      	ldr	r0, [pc, #36]	@ (90004324 <HAL_SDRAM_MspDeInit+0x64>)
90004300:	f004 fd38 	bl	90008d74 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004304:	21e0      	movs	r1, #224	@ 0xe0
90004306:	4808      	ldr	r0, [pc, #32]	@ (90004328 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004308:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000430c:	f004 bd32 	b.w	90008d74 <HAL_GPIO_DeInit>
90004310:	240093ac 	.word	0x240093ac
90004314:	58024400 	.word	0x58024400
90004318:	58021000 	.word	0x58021000
9000431c:	58021800 	.word	0x58021800
90004320:	58020c00 	.word	0x58020c00
90004324:	58021400 	.word	0x58021400
90004328:	58021c00 	.word	0x58021c00

9000432c <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
9000432c:	280f      	cmp	r0, #15
9000432e:	d901      	bls.n	90004334 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90004330:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90004332:	4770      	bx	lr
{
90004334:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004336:	4601      	mov	r1, r0
{
90004338:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
9000433a:	2200      	movs	r2, #0
9000433c:	4604      	mov	r4, r0
9000433e:	2036      	movs	r0, #54	@ 0x36
90004340:	f004 f974 	bl	9000862c <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004344:	2036      	movs	r0, #54	@ 0x36
90004346:	f004 f9ad 	bl	900086a4 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000434a:	4b1b      	ldr	r3, [pc, #108]	@ (900043b8 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
9000434c:	4a1b      	ldr	r2, [pc, #108]	@ (900043bc <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000434e:	4669      	mov	r1, sp
90004350:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
90004352:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004354:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004358:	f042 0210 	orr.w	r2, r2, #16
9000435c:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004360:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004364:	f003 0310 	and.w	r3, r3, #16
90004368:	9301      	str	r3, [sp, #4]
9000436a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000436c:	f008 f8ea 	bl	9000c544 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90004370:	9b07      	ldr	r3, [sp, #28]
90004372:	b9c3      	cbnz	r3, 900043a6 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004374:	f008 f856 	bl	9000c424 <HAL_RCC_GetPCLK1Freq>
90004378:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000437a:	4911      	ldr	r1, [pc, #68]	@ (900043c0 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
9000437c:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000437e:	4c11      	ldr	r4, [pc, #68]	@ (900043c4 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004380:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004384:	4d10      	ldr	r5, [pc, #64]	@ (900043c8 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004386:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000438a:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000438c:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000438e:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90004390:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004392:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004394:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004398:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000439a:	f009 f9af 	bl	9000d6fc <HAL_TIM_Base_Init>
9000439e:	b130      	cbz	r0, 900043ae <HAL_InitTick+0x82>
    return HAL_ERROR;
900043a0:	2001      	movs	r0, #1
}
900043a2:	b00b      	add	sp, #44	@ 0x2c
900043a4:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900043a6:	f008 f83d 	bl	9000c424 <HAL_RCC_GetPCLK1Freq>
900043aa:	0043      	lsls	r3, r0, #1
900043ac:	e7e5      	b.n	9000437a <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
900043ae:	4620      	mov	r0, r4
900043b0:	f009 fa46 	bl	9000d840 <HAL_TIM_Base_Start_IT>
900043b4:	e7f5      	b.n	900043a2 <HAL_InitTick+0x76>
900043b6:	bf00      	nop
900043b8:	58024400 	.word	0x58024400
900043bc:	24000080 	.word	0x24000080
900043c0:	431bde83 	.word	0x431bde83
900043c4:	240093b4 	.word	0x240093b4
900043c8:	40001000 	.word	0x40001000

900043cc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900043cc:	4770      	bx	lr
900043ce:	bf00      	nop

900043d0 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900043d0:	e7fe      	b.n	900043d0 <HardFault_Handler>
900043d2:	bf00      	nop

900043d4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900043d4:	e7fe      	b.n	900043d4 <MemManage_Handler>
900043d6:	bf00      	nop

900043d8 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900043d8:	e7fe      	b.n	900043d8 <BusFault_Handler>
900043da:	bf00      	nop

900043dc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900043dc:	e7fe      	b.n	900043dc <UsageFault_Handler>
900043de:	bf00      	nop

900043e0 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900043e0:	4770      	bx	lr
900043e2:	bf00      	nop

900043e4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900043e4:	4801      	ldr	r0, [pc, #4]	@ (900043ec <TIM6_DAC_IRQHandler+0x8>)
900043e6:	f009 ba85 	b.w	9000d8f4 <HAL_TIM_IRQHandler>
900043ea:	bf00      	nop
900043ec:	240093b4 	.word	0x240093b4

900043f0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900043f0:	4801      	ldr	r0, [pc, #4]	@ (900043f8 <LTDC_IRQHandler+0x8>)
900043f2:	f006 bf43 	b.w	9000b27c <HAL_LTDC_IRQHandler>
900043f6:	bf00      	nop
900043f8:	24009148 	.word	0x24009148

900043fc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900043fc:	4801      	ldr	r0, [pc, #4]	@ (90004404 <DMA2D_IRQHandler+0x8>)
900043fe:	f004 ba79 	b.w	900088f4 <HAL_DMA2D_IRQHandler>
90004402:	bf00      	nop
90004404:	24009320 	.word	0x24009320

90004408 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004408:	4801      	ldr	r0, [pc, #4]	@ (90004410 <JPEG_IRQHandler+0x8>)
9000440a:	f006 be3b 	b.w	9000b084 <HAL_JPEG_IRQHandler>
9000440e:	bf00      	nop
90004410:	240092c8 	.word	0x240092c8

90004414 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004414:	4804      	ldr	r0, [pc, #16]	@ (90004428 <MDMA_IRQHandler+0x14>)
{
90004416:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004418:	f007 fa06 	bl	9000b828 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000441c:	4803      	ldr	r0, [pc, #12]	@ (9000442c <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000441e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004422:	f007 ba01 	b.w	9000b828 <HAL_MDMA_IRQHandler>
90004426:	bf00      	nop
90004428:	240091f0 	.word	0x240091f0
9000442c:	2400925c 	.word	0x2400925c

90004430 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004430:	2001      	movs	r0, #1
90004432:	4770      	bx	lr

90004434 <_kill>:

int _kill(int pid, int sig)
{
90004434:	b508      	push	{r3, lr}
	errno = EINVAL;
90004436:	f026 fa7b 	bl	9002a930 <__errno>
9000443a:	2216      	movs	r2, #22
9000443c:	4603      	mov	r3, r0
	return -1;
}
9000443e:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90004442:	601a      	str	r2, [r3, #0]
}
90004444:	bd08      	pop	{r3, pc}
90004446:	bf00      	nop

90004448 <_exit>:

void _exit (int status)
{
90004448:	b508      	push	{r3, lr}
	errno = EINVAL;
9000444a:	f026 fa71 	bl	9002a930 <__errno>
9000444e:	2316      	movs	r3, #22
90004450:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90004452:	e7fe      	b.n	90004452 <_exit+0xa>

90004454 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004454:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004456:	1e16      	subs	r6, r2, #0
90004458:	dd07      	ble.n	9000446a <_read+0x16>
9000445a:	460c      	mov	r4, r1
9000445c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000445e:	f3af 8000 	nop.w
90004462:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004466:	42a5      	cmp	r5, r4
90004468:	d1f9      	bne.n	9000445e <_read+0xa>
	}

return len;
}
9000446a:	4630      	mov	r0, r6
9000446c:	bd70      	pop	{r4, r5, r6, pc}
9000446e:	bf00      	nop

90004470 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004470:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004472:	1e16      	subs	r6, r2, #0
90004474:	dd07      	ble.n	90004486 <_write+0x16>
90004476:	460c      	mov	r4, r1
90004478:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000447a:	f814 0b01 	ldrb.w	r0, [r4], #1
9000447e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004482:	42ac      	cmp	r4, r5
90004484:	d1f9      	bne.n	9000447a <_write+0xa>
	}
	return len;
}
90004486:	4630      	mov	r0, r6
90004488:	bd70      	pop	{r4, r5, r6, pc}
9000448a:	bf00      	nop

9000448c <_close>:

int _close(int file)
{
	return -1;
}
9000448c:	f04f 30ff 	mov.w	r0, #4294967295
90004490:	4770      	bx	lr
90004492:	bf00      	nop

90004494 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004494:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004498:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000449a:	604b      	str	r3, [r1, #4]
}
9000449c:	4770      	bx	lr
9000449e:	bf00      	nop

900044a0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
900044a0:	2001      	movs	r0, #1
900044a2:	4770      	bx	lr

900044a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900044a4:	2000      	movs	r0, #0
900044a6:	4770      	bx	lr

900044a8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
900044a8:	4a0c      	ldr	r2, [pc, #48]	@ (900044dc <_sbrk+0x34>)
{
900044aa:	b508      	push	{r3, lr}
900044ac:	4603      	mov	r3, r0
	if (heap_end == 0)
900044ae:	6810      	ldr	r0, [r2, #0]
900044b0:	b128      	cbz	r0, 900044be <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
900044b2:	4403      	add	r3, r0
900044b4:	4669      	mov	r1, sp
900044b6:	428b      	cmp	r3, r1
900044b8:	d808      	bhi.n	900044cc <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900044ba:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900044bc:	bd08      	pop	{r3, pc}
		heap_end = &end;
900044be:	4908      	ldr	r1, [pc, #32]	@ (900044e0 <_sbrk+0x38>)
900044c0:	4608      	mov	r0, r1
900044c2:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900044c4:	4669      	mov	r1, sp
900044c6:	4403      	add	r3, r0
900044c8:	428b      	cmp	r3, r1
900044ca:	d9f6      	bls.n	900044ba <_sbrk+0x12>
		errno = ENOMEM;
900044cc:	f026 fa30 	bl	9002a930 <__errno>
900044d0:	220c      	movs	r2, #12
900044d2:	4603      	mov	r3, r0
		return (caddr_t) -1;
900044d4:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900044d8:	601a      	str	r2, [r3, #0]
}
900044da:	bd08      	pop	{r3, pc}
900044dc:	24009400 	.word	0x24009400
900044e0:	24024200 	.word	0x24024200

900044e4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // arialbd_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900044e4:	4770      	bx	lr
900044e6:	bf00      	nop

900044e8 <_ZN23ApplicationFontProviderD0Ev>:
900044e8:	b510      	push	{r4, lr}
900044ea:	4604      	mov	r4, r0
900044ec:	2104      	movs	r1, #4
900044ee:	f025 fb56 	bl	90029b9e <_ZdlPvj>
900044f2:	4620      	mov	r0, r4
900044f4:	bd10      	pop	{r4, pc}
900044f6:	bf00      	nop

900044f8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900044f8:	2901      	cmp	r1, #1
{
900044fa:	b508      	push	{r3, lr}
    switch (typography)
900044fc:	d004      	beq.n	90004508 <_ZN23ApplicationFontProvider7getFontEt+0x10>
900044fe:	2902      	cmp	r1, #2
90004500:	d00a      	beq.n	90004518 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90004502:	b129      	cbz	r1, 90004510 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90004504:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90004506:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004508:	f002 fcf8 	bl	90006efc <_ZN17TypedTextDatabase8getFontsEv>
9000450c:	6840      	ldr	r0, [r0, #4]
}
9000450e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004510:	f002 fcf4 	bl	90006efc <_ZN17TypedTextDatabase8getFontsEv>
90004514:	6800      	ldr	r0, [r0, #0]
}
90004516:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004518:	f002 fcf0 	bl	90006efc <_ZN17TypedTextDatabase8getFontsEv>
9000451c:	6880      	ldr	r0, [r0, #8]
}
9000451e:	bd08      	pop	{r3, pc}

90004520 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004520:	4800      	ldr	r0, [pc, #0]	@ (90004524 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004522:	4770      	bx	lr
90004524:	9002cbec 	.word	0x9002cbec

90004528 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004528:	2005      	movs	r0, #5
9000452a:	4770      	bx	lr

9000452c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000452c:	b169      	cbz	r1, 9000454a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000452e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004530:	b530      	push	{r4, r5, lr}
90004532:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004534:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004536:	6895      	ldr	r5, [r2, #8]
90004538:	f10d 0303 	add.w	r3, sp, #3
9000453c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000453e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004540:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004544:	47a8      	blx	r5
        return glyph;
    }
90004546:	b003      	add	sp, #12
90004548:	bd30      	pop	{r4, r5, pc}
            return 0;
9000454a:	4608      	mov	r0, r1
    }
9000454c:	4770      	bx	lr
9000454e:	bf00      	nop

90004550 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004550:	89c0      	ldrh	r0, [r0, #14]
90004552:	4770      	bx	lr

90004554 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004554:	8a00      	ldrh	r0, [r0, #16]
90004556:	4770      	bx	lr

90004558 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004558:	88c0      	ldrh	r0, [r0, #6]
9000455a:	4770      	bx	lr

9000455c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000455c:	8880      	ldrh	r0, [r0, #4]
9000455e:	4770      	bx	lr

90004560 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004560:	7a80      	ldrb	r0, [r0, #10]
    }
90004562:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004566:	4770      	bx	lr

90004568 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004568:	7a80      	ldrb	r0, [r0, #10]
    }
9000456a:	09c0      	lsrs	r0, r0, #7
9000456c:	4770      	bx	lr
9000456e:	bf00      	nop

90004570 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004570:	2000      	movs	r0, #0
90004572:	4770      	bx	lr

90004574 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004574:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 9000457c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004578:	4770      	bx	lr
9000457a:	bf00      	nop
9000457c:	00000000 	.word	0x00000000

90004580 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004580:	4770      	bx	lr
90004582:	bf00      	nop

90004584 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004584:	b510      	push	{r4, lr}
90004586:	4604      	mov	r4, r0
    }
90004588:	2108      	movs	r1, #8
9000458a:	f025 fb08 	bl	90029b9e <_ZdlPvj>
9000458e:	4620      	mov	r0, r4
90004590:	bd10      	pop	{r4, pc}
90004592:	bf00      	nop

90004594 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004594:	4770      	bx	lr
90004596:	bf00      	nop

90004598 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004598:	f500 7398 	add.w	r3, r0, #304	@ 0x130
9000459c:	6808      	ldr	r0, [r1, #0]
9000459e:	6849      	ldr	r1, [r1, #4]
900045a0:	c303      	stmia	r3!, {r0, r1}
    }
900045a2:	4770      	bx	lr

900045a4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900045a4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900045a6:	4770      	bx	lr

900045a8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
900045a8:	4770      	bx	lr
900045aa:	bf00      	nop

900045ac <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
900045ac:	4770      	bx	lr
900045ae:	bf00      	nop

900045b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900045b0:	6041      	str	r1, [r0, #4]
    }
900045b2:	4770      	bx	lr

900045b4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900045b4:	4770      	bx	lr
900045b6:	bf00      	nop

900045b8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900045b8:	4905      	ldr	r1, [pc, #20]	@ (900045d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900045ba:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900045bc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900045c0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900045c4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900045c8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
900045cc:	4770      	bx	lr
900045ce:	bf00      	nop
900045d0:	900047f1 	.word	0x900047f1

900045d4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900045d4:	2301      	movs	r3, #1
900045d6:	7203      	strb	r3, [r0, #8]
    }
900045d8:	4770      	bx	lr
900045da:	bf00      	nop

900045dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
900045dc:	4770      	bx	lr
900045de:	bf00      	nop

900045e0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900045e0:	4770      	bx	lr
900045e2:	bf00      	nop

900045e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900045e4:	4770      	bx	lr
900045e6:	bf00      	nop

900045e8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900045e8:	1d01      	adds	r1, r0, #4
900045ea:	c90e      	ldmia	r1, {r1, r2, r3}
900045ec:	ea4f 0c63 	mov.w	ip, r3, asr #1
900045f0:	eb01 0063 	add.w	r0, r1, r3, asr #1
900045f4:	07db      	lsls	r3, r3, #31
900045f6:	d502      	bpl.n	900045fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900045f8:	f851 300c 	ldr.w	r3, [r1, ip]
900045fc:	589a      	ldr	r2, [r3, r2]
900045fe:	4710      	bx	r2

90004600 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004600:	6843      	ldr	r3, [r0, #4]
90004602:	b13b      	cbz	r3, 90004614 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004604:	6883      	ldr	r3, [r0, #8]
90004606:	b10b      	cbz	r3, 9000460c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004608:	2001      	movs	r0, #1
    }
9000460a:	4770      	bx	lr
9000460c:	68c0      	ldr	r0, [r0, #12]
9000460e:	f000 0001 	and.w	r0, r0, #1
90004612:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004614:	4618      	mov	r0, r3
90004616:	4770      	bx	lr

90004618 <_ZN8touchgfx12NoTransitionD0Ev>:
90004618:	b510      	push	{r4, lr}
9000461a:	4604      	mov	r4, r0
9000461c:	210c      	movs	r1, #12
9000461e:	f025 fabe 	bl	90029b9e <_ZdlPvj>
90004622:	4620      	mov	r0, r4
90004624:	bd10      	pop	{r4, pc}
90004626:	bf00      	nop

90004628 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004628:	b510      	push	{r4, lr}
9000462a:	4604      	mov	r4, r0
9000462c:	2110      	movs	r1, #16
9000462e:	f025 fab6 	bl	90029b9e <_ZdlPvj>
90004632:	4620      	mov	r0, r4
90004634:	bd10      	pop	{r4, pc}
90004636:	bf00      	nop

90004638 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004638:	b510      	push	{r4, lr}
9000463a:	4604      	mov	r4, r0
9000463c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004640:	f025 faad 	bl	90029b9e <_ZdlPvj>
90004644:	4620      	mov	r0, r4
90004646:	bd10      	pop	{r4, pc}

90004648 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90004648:	b510      	push	{r4, lr}
9000464a:	4604      	mov	r4, r0
9000464c:	2140      	movs	r1, #64	@ 0x40
9000464e:	f025 faa6 	bl	90029b9e <_ZdlPvj>
90004652:	4620      	mov	r0, r4
90004654:	bd10      	pop	{r4, pc}
90004656:	bf00      	nop

90004658 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004658:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000465a:	f012 fdf9 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
9000465e:	6803      	ldr	r3, [r0, #0]
    }
90004660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004664:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004666:	4718      	bx	r3

90004668 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90004668:	4b05      	ldr	r3, [pc, #20]	@ (90004680 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
9000466a:	781b      	ldrb	r3, [r3, #0]
9000466c:	b13b      	cbz	r3, 9000467e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
9000466e:	6843      	ldr	r3, [r0, #4]
90004670:	b12b      	cbz	r3, 9000467e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90004672:	681a      	ldr	r2, [r3, #0]
90004674:	f100 010c 	add.w	r1, r0, #12
90004678:	4618      	mov	r0, r3
9000467a:	6e53      	ldr	r3, [r2, #100]	@ 0x64
9000467c:	4718      	bx	r3
        }
    }
9000467e:	4770      	bx	lr
90004680:	240234bb 	.word	0x240234bb

90004684 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90004684:	b570      	push	{r4, r5, r6, lr}
90004686:	4605      	mov	r5, r0
        animationCounter++;
90004688:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
9000468c:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000468e:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
90004692:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90004694:	4298      	cmp	r0, r3
        animationCounter++;
90004696:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
9000469a:	d905      	bls.n	900046a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
9000469c:	2201      	movs	r2, #1
            animationCounter = 0;
9000469e:	2300      	movs	r3, #0
            done = true;
900046a0:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900046a2:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
900046a6:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900046a8:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
900046ac:	2100      	movs	r1, #0
900046ae:	f014 fe51 	bl	90019354 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900046b2:	07c2      	lsls	r2, r0, #31
900046b4:	b283      	uxth	r3, r0
900046b6:	d506      	bpl.n	900046c6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900046b8:	2800      	cmp	r0, #0
900046ba:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900046be:	bfc8      	it	gt
900046c0:	2201      	movgt	r2, #1
900046c2:	4413      	add	r3, r2
900046c4:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900046c6:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900046c8:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900046ca:	6802      	ldr	r2, [r0, #0]
900046cc:	4912      	ldr	r1, [pc, #72]	@ (90004718 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
900046ce:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
900046d0:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
900046d2:	87ab      	strh	r3, [r5, #60]	@ 0x3c
900046d4:	428a      	cmp	r2, r1
900046d6:	d11b      	bne.n	90004710 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8c>
        return firstChild;
900046d8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
900046da:	b164      	cbz	r4, 900046f6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
900046dc:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
900046de:	4e0f      	ldr	r6, [pc, #60]	@ (9000471c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
900046e0:	6823      	ldr	r3, [r4, #0]
900046e2:	88a1      	ldrh	r1, [r4, #4]
900046e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900046e6:	4411      	add	r1, r2
900046e8:	42b3      	cmp	r3, r6
900046ea:	b209      	sxth	r1, r1
        rect.x = x;
900046ec:	d109      	bne.n	90004702 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7e>
900046ee:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900046f0:	69a4      	ldr	r4, [r4, #24]
        while (d)
900046f2:	2c00      	cmp	r4, #0
900046f4:	d1f4      	bne.n	900046e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
900046f6:	6868      	ldr	r0, [r5, #4]
900046f8:	6803      	ldr	r3, [r0, #0]
    }
900046fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
900046fe:	695b      	ldr	r3, [r3, #20]
90004700:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90004702:	4620      	mov	r0, r4
90004704:	4798      	blx	r3
90004706:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004708:	2c00      	cmp	r4, #0
9000470a:	d0f4      	beq.n	900046f6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
9000470c:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
9000470e:	e7e7      	b.n	900046e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
90004710:	4790      	blx	r2
90004712:	4604      	mov	r4, r0
90004714:	e7e1      	b.n	900046da <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x56>
90004716:	bf00      	nop
90004718:	900045a5 	.word	0x900045a5
9000471c:	90002e15 	.word	0x90002e15

90004720 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90004720:	7a03      	ldrb	r3, [r0, #8]
90004722:	bb2b      	cbnz	r3, 90004770 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90004724:	4a14      	ldr	r2, [pc, #80]	@ (90004778 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90004726:	b570      	push	{r4, r5, r6, lr}
90004728:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
9000472a:	6840      	ldr	r0, [r0, #4]
9000472c:	6803      	ldr	r3, [r0, #0]
9000472e:	69db      	ldr	r3, [r3, #28]
90004730:	4293      	cmp	r3, r2
90004732:	d11e      	bne.n	90004772 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90004734:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004736:	b164      	cbz	r4, 90004752 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90004738:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000473a:	4e10      	ldr	r6, [pc, #64]	@ (9000477c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
9000473c:	6823      	ldr	r3, [r4, #0]
9000473e:	88a1      	ldrh	r1, [r4, #4]
90004740:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004742:	1a89      	subs	r1, r1, r2
90004744:	42b3      	cmp	r3, r6
90004746:	b209      	sxth	r1, r1
        rect.x = x;
90004748:	d10b      	bne.n	90004762 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
9000474a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000474c:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000474e:	2c00      	cmp	r4, #0
90004750:	d1f4      	bne.n	9000473c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90004752:	6868      	ldr	r0, [r5, #4]
90004754:	f105 010c 	add.w	r1, r5, #12
90004758:	6803      	ldr	r3, [r0, #0]
    }
9000475a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
9000475e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004760:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90004762:	4620      	mov	r0, r4
90004764:	4798      	blx	r3
90004766:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004768:	2c00      	cmp	r4, #0
9000476a:	d0f2      	beq.n	90004752 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
9000476c:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000476e:	e7e5      	b.n	9000473c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90004770:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90004772:	4798      	blx	r3
90004774:	4604      	mov	r4, r0
90004776:	e7de      	b.n	90004736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90004778:	900045a5 	.word	0x900045a5
9000477c:	90002e15 	.word	0x90002e15

90004780 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90004780:	b570      	push	{r4, r5, r6, lr}
90004782:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004784:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004788:	b1b8      	cbz	r0, 900047ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
9000478a:	6802      	ldr	r2, [r0, #0]
9000478c:	4916      	ldr	r1, [pc, #88]	@ (900047e8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
9000478e:	68d3      	ldr	r3, [r2, #12]
90004790:	428b      	cmp	r3, r1
90004792:	d11f      	bne.n	900047d4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004794:	6843      	ldr	r3, [r0, #4]
90004796:	b183      	cbz	r3, 900047ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004798:	6881      	ldr	r1, [r0, #8]
9000479a:	b179      	cbz	r1, 900047bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
        {
            pendingScreenTransitionCallback->execute();
9000479c:	6892      	ldr	r2, [r2, #8]
9000479e:	4b13      	ldr	r3, [pc, #76]	@ (900047ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900047a0:	429a      	cmp	r2, r3
900047a2:	d11e      	bne.n	900047e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900047a4:	68c2      	ldr	r2, [r0, #12]
900047a6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900047aa:	eb03 0062 	add.w	r0, r3, r2, asr #1
900047ae:	07d3      	lsls	r3, r2, #31
900047b0:	d40d      	bmi.n	900047ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
900047b2:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
900047b4:	2300      	movs	r3, #0
900047b6:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
900047ba:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
900047bc:	68c5      	ldr	r5, [r0, #12]
900047be:	07ee      	lsls	r6, r5, #31
900047c0:	d5fb      	bpl.n	900047ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
900047c2:	6892      	ldr	r2, [r2, #8]
900047c4:	4e09      	ldr	r6, [pc, #36]	@ (900047ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900047c6:	42b2      	cmp	r2, r6
900047c8:	d10b      	bne.n	900047e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900047ca:	eb03 0065 	add.w	r0, r3, r5, asr #1
900047ce:	6803      	ldr	r3, [r0, #0]
900047d0:	5859      	ldr	r1, [r3, r1]
900047d2:	e7ee      	b.n	900047b2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
900047d4:	4798      	blx	r3
900047d6:	2800      	cmp	r0, #0
900047d8:	d0ef      	beq.n	900047ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
900047da:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
900047de:	6802      	ldr	r2, [r0, #0]
900047e0:	e7dc      	b.n	9000479c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
900047e2:	4790      	blx	r2
900047e4:	e7e6      	b.n	900047b4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
900047e6:	bf00      	nop
900047e8:	90004601 	.word	0x90004601
900047ec:	900045e9 	.word	0x900045e9

900047f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
900047f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900047f4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
900047f8:	4607      	mov	r7, r0
900047fa:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900047fc:	68b0      	ldr	r0, [r6, #8]
900047fe:	6803      	ldr	r3, [r0, #0]
90004800:	6a1b      	ldr	r3, [r3, #32]
90004802:	4798      	blx	r3
90004804:	f240 5363 	movw	r3, #1379	@ 0x563
90004808:	4298      	cmp	r0, r3
9000480a:	f240 80a3 	bls.w	90004954 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x164>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000480e:	6870      	ldr	r0, [r6, #4]
90004810:	6803      	ldr	r3, [r0, #0]
90004812:	6a1b      	ldr	r3, [r3, #32]
90004814:	4798      	blx	r3
90004816:	280f      	cmp	r0, #15
90004818:	f240 8096 	bls.w	90004948 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x158>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000481c:	68f0      	ldr	r0, [r6, #12]
9000481e:	6803      	ldr	r3, [r0, #0]
90004820:	6a1b      	ldr	r3, [r3, #32]
90004822:	4798      	blx	r3
90004824:	280b      	cmp	r0, #11
90004826:	f240 8089 	bls.w	9000493c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
    if (*currentTrans)
9000482a:	f8df 9154 	ldr.w	r9, [pc, #340]	@ 90004980 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>
    Application::getInstance()->clearAllTimerWidgets();
9000482e:	f012 fd0f 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004832:	3004      	adds	r0, #4
90004834:	f012 fd31 	bl	9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004838:	f8d9 0000 	ldr.w	r0, [r9]
9000483c:	b140      	cbz	r0, 90004850 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x60>
        (*currentTrans)->tearDown();
9000483e:	6803      	ldr	r3, [r0, #0]
90004840:	68db      	ldr	r3, [r3, #12]
90004842:	4798      	blx	r3
    if (*currentTrans)
90004844:	f8d9 0000 	ldr.w	r0, [r9]
90004848:	b110      	cbz	r0, 90004850 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x60>
        (*currentTrans)->~Transition();
9000484a:	6803      	ldr	r3, [r0, #0]
9000484c:	681b      	ldr	r3, [r3, #0]
9000484e:	4798      	blx	r3
    if (*currentScreen)
90004850:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 90004984 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>
90004854:	f8d8 0000 	ldr.w	r0, [r8]
90004858:	2800      	cmp	r0, #0
9000485a:	d061      	beq.n	90004920 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>
        (*currentScreen)->tearDownScreen();
9000485c:	6803      	ldr	r3, [r0, #0]
9000485e:	695b      	ldr	r3, [r3, #20]
90004860:	4798      	blx	r3
    if (*currentPresenter)
90004862:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004866:	2800      	cmp	r0, #0
90004868:	d055      	beq.n	90004916 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x126>
        (*currentPresenter)->deactivate();
9000486a:	6803      	ldr	r3, [r0, #0]
9000486c:	685b      	ldr	r3, [r3, #4]
9000486e:	4798      	blx	r3
    if (*currentScreen)
90004870:	f8d8 0000 	ldr.w	r0, [r8]
90004874:	b110      	cbz	r0, 9000487c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->~Screen();
90004876:	6803      	ldr	r3, [r0, #0]
90004878:	681b      	ldr	r3, [r3, #0]
9000487a:	4798      	blx	r3
    if (*currentPresenter)
9000487c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004880:	b110      	cbz	r0, 90004888 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->~Presenter();
90004882:	6803      	ldr	r3, [r0, #0]
90004884:	689b      	ldr	r3, [r3, #8]
90004886:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004888:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000488a:	2100      	movs	r1, #0
9000488c:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000488e:	468b      	mov	fp, r1
90004890:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004892:	4798      	blx	r3
90004894:	4b32      	ldr	r3, [pc, #200]	@ (90004960 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x170>)
90004896:	4604      	mov	r4, r0
90004898:	f8c0 b004 	str.w	fp, [r0, #4]
9000489c:	f880 b008 	strb.w	fp, [r0, #8]
900048a0:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900048a2:	68b0      	ldr	r0, [r6, #8]
900048a4:	6023      	str	r3, [r4, #0]
900048a6:	6803      	ldr	r3, [r0, #0]
900048a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900048aa:	4798      	blx	r3
900048ac:	4605      	mov	r5, r0
900048ae:	f002 fbbf 	bl	90007030 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900048b2:	6870      	ldr	r0, [r6, #4]
900048b4:	4659      	mov	r1, fp
900048b6:	6803      	ldr	r3, [r0, #0]
900048b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900048ba:	4798      	blx	r3
900048bc:	4606      	mov	r6, r0
900048be:	4629      	mov	r1, r5
900048c0:	f002 fb74 	bl	90006fac <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
900048c4:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900048c6:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900048ca:	4628      	mov	r0, r5
    *currentTrans = newTransition;
900048cc:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
900048d0:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900048d4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
900048d8:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900048da:	f8c6 a008 	str.w	sl, [r6, #8]
900048de:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
900048e0:	63ee      	str	r6, [r5, #60]	@ 0x3c
900048e2:	4798      	blx	r3
    newPresenter->activate();
900048e4:	6833      	ldr	r3, [r6, #0]
900048e6:	4630      	mov	r0, r6
900048e8:	681b      	ldr	r3, [r3, #0]
900048ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900048ec:	4621      	mov	r1, r4
900048ee:	4628      	mov	r0, r5
900048f0:	f014 fd2a 	bl	90019348 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900048f4:	6823      	ldr	r3, [r4, #0]
900048f6:	491b      	ldr	r1, [pc, #108]	@ (90004964 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x174>)
900048f8:	691a      	ldr	r2, [r3, #16]
900048fa:	428a      	cmp	r2, r1
900048fc:	d11a      	bne.n	90004934 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
    newTransition->invalidate();
900048fe:	695b      	ldr	r3, [r3, #20]
90004900:	4a19      	ldr	r2, [pc, #100]	@ (90004968 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x178>)
90004902:	4293      	cmp	r3, r2
90004904:	d111      	bne.n	9000492a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13a>
        Application::getInstance()->invalidate();
90004906:	f012 fca3 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
9000490a:	6803      	ldr	r3, [r0, #0]
9000490c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
9000490e:	b001      	add	sp, #4
90004910:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004914:	4718      	bx	r3
    if (*currentScreen)
90004916:	f8d8 0000 	ldr.w	r0, [r8]
9000491a:	2800      	cmp	r0, #0
9000491c:	d1ab      	bne.n	90004876 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
9000491e:	e7b3      	b.n	90004888 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
    if (*currentPresenter)
90004920:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004924:	2800      	cmp	r0, #0
90004926:	d1a0      	bne.n	9000486a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x7a>
90004928:	e7ae      	b.n	90004888 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
    newTransition->invalidate();
9000492a:	4620      	mov	r0, r4
9000492c:	b001      	add	sp, #4
9000492e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004932:	4718      	bx	r3
    newTransition->init();
90004934:	4620      	mov	r0, r4
90004936:	4790      	blx	r2
    newTransition->invalidate();
90004938:	6823      	ldr	r3, [r4, #0]
9000493a:	e7e0      	b.n	900048fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x10e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000493c:	4b0b      	ldr	r3, [pc, #44]	@ (9000496c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
9000493e:	21a5      	movs	r1, #165	@ 0xa5
90004940:	4a0b      	ldr	r2, [pc, #44]	@ (90004970 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90004942:	480c      	ldr	r0, [pc, #48]	@ (90004974 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90004944:	f025 fca4 	bl	9002a290 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004948:	4b0b      	ldr	r3, [pc, #44]	@ (90004978 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
9000494a:	21a4      	movs	r1, #164	@ 0xa4
9000494c:	4a08      	ldr	r2, [pc, #32]	@ (90004970 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
9000494e:	4809      	ldr	r0, [pc, #36]	@ (90004974 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90004950:	f025 fc9e 	bl	9002a290 <__assert_func>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004954:	4b09      	ldr	r3, [pc, #36]	@ (9000497c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004956:	21a3      	movs	r1, #163	@ 0xa3
90004958:	4a05      	ldr	r2, [pc, #20]	@ (90004970 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
9000495a:	4806      	ldr	r0, [pc, #24]	@ (90004974 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
9000495c:	f025 fc98 	bl	9002a290 <__assert_func>
90004960:	9002d198 	.word	0x9002d198
90004964:	900045ad 	.word	0x900045ad
90004968:	90004659 	.word	0x90004659
9000496c:	9002ceb0 	.word	0x9002ceb0
90004970:	9002ccf0 	.word	0x9002ccf0
90004974:	9002cdc4 	.word	0x9002cdc4
90004978:	9002ce0c 	.word	0x9002ce0c
9000497c:	9002cc60 	.word	0x9002cc60
90004980:	24023504 	.word	0x24023504
90004984:	24023500 	.word	0x24023500

90004988 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen2ScreenSlideTransitionEastImpl()
{
90004988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000498c:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90004990:	4680      	mov	r8, r0
90004992:	b081      	sub	sp, #4
90004994:	68b8      	ldr	r0, [r7, #8]
90004996:	6803      	ldr	r3, [r0, #0]
90004998:	6a1b      	ldr	r3, [r3, #32]
9000499a:	4798      	blx	r3
9000499c:	f641 63d7 	movw	r3, #7895	@ 0x1ed7
900049a0:	4298      	cmp	r0, r3
900049a2:	f240 80dc 	bls.w	90004b5e <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1d6>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900049a6:	6878      	ldr	r0, [r7, #4]
900049a8:	6803      	ldr	r3, [r0, #0]
900049aa:	6a1b      	ldr	r3, [r3, #32]
900049ac:	4798      	blx	r3
900049ae:	280f      	cmp	r0, #15
900049b0:	f240 80e1 	bls.w	90004b76 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1ee>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900049b4:	68f8      	ldr	r0, [r7, #12]
900049b6:	6803      	ldr	r3, [r0, #0]
900049b8:	6a1b      	ldr	r3, [r3, #32]
900049ba:	4798      	blx	r3
900049bc:	283f      	cmp	r0, #63	@ 0x3f
900049be:	f240 80d4 	bls.w	90004b6a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1e2>
    if (*currentTrans)
900049c2:	f8df a1f4 	ldr.w	sl, [pc, #500]	@ 90004bb8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x230>
    Application::getInstance()->clearAllTimerWidgets();
900049c6:	f012 fc43 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
900049ca:	3004      	adds	r0, #4
900049cc:	f012 fc65 	bl	9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900049d0:	f8da 0000 	ldr.w	r0, [sl]
900049d4:	b140      	cbz	r0, 900049e8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
900049d6:	6803      	ldr	r3, [r0, #0]
900049d8:	68db      	ldr	r3, [r3, #12]
900049da:	4798      	blx	r3
    if (*currentTrans)
900049dc:	f8da 0000 	ldr.w	r0, [sl]
900049e0:	b110      	cbz	r0, 900049e8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
900049e2:	6803      	ldr	r3, [r0, #0]
900049e4:	681b      	ldr	r3, [r3, #0]
900049e6:	4798      	blx	r3
    if (*currentScreen)
900049e8:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90004bbc <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x234>
900049ec:	f8d9 0000 	ldr.w	r0, [r9]
900049f0:	2800      	cmp	r0, #0
900049f2:	f000 80a2 	beq.w	90004b3a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
900049f6:	6803      	ldr	r3, [r0, #0]
900049f8:	695b      	ldr	r3, [r3, #20]
900049fa:	4798      	blx	r3
    if (*currentPresenter)
900049fc:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004a00:	2800      	cmp	r0, #0
90004a02:	d07e      	beq.n	90004b02 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x17a>
        (*currentPresenter)->deactivate();
90004a04:	6803      	ldr	r3, [r0, #0]
90004a06:	685b      	ldr	r3, [r3, #4]
90004a08:	4798      	blx	r3
    if (*currentScreen)
90004a0a:	f8d9 0000 	ldr.w	r0, [r9]
90004a0e:	b110      	cbz	r0, 90004a16 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x8e>
        (*currentScreen)->~Screen();
90004a10:	6803      	ldr	r3, [r0, #0]
90004a12:	681b      	ldr	r3, [r3, #0]
90004a14:	4798      	blx	r3
    if (*currentPresenter)
90004a16:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004a1a:	b110      	cbz	r0, 90004a22 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90004a1c:	6803      	ldr	r3, [r0, #0]
90004a1e:	689b      	ldr	r3, [r3, #8]
90004a20:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004a22:	68f8      	ldr	r0, [r7, #12]
90004a24:	2100      	movs	r1, #0
90004a26:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004a28:	460c      	mov	r4, r1
90004a2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a2c:	4798      	blx	r3
          relativeValue(0)
90004a2e:	4b55      	ldr	r3, [pc, #340]	@ (90004b84 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1fc>)
90004a30:	4606      	mov	r6, r0
90004a32:	4605      	mov	r5, r0
90004a34:	6044      	str	r4, [r0, #4]
90004a36:	7204      	strb	r4, [r0, #8]
90004a38:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90004a3c:	4630      	mov	r0, r6
90004a3e:	f00f fb03 	bl	90014048 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90004a42:	4b51      	ldr	r3, [pc, #324]	@ (90004b88 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x200>)
          animationSteps(transitionSteps),
90004a44:	2214      	movs	r2, #20
          relativeValue(0)
90004a46:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90004a48:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90004a4a:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90004a4c:	2b00      	cmp	r3, #0
90004a4e:	d164      	bne.n	90004b1a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x192>
            done = true;
90004a50:	2301      	movs	r3, #1
90004a52:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004a54:	68b8      	ldr	r0, [r7, #8]
90004a56:	2100      	movs	r1, #0
90004a58:	6803      	ldr	r3, [r0, #0]
90004a5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a5c:	4798      	blx	r3
90004a5e:	4604      	mov	r4, r0
90004a60:	f002 fbec 	bl	9000723c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004a64:	6878      	ldr	r0, [r7, #4]
90004a66:	2100      	movs	r1, #0
90004a68:	6803      	ldr	r3, [r0, #0]
90004a6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a6c:	4798      	blx	r3
90004a6e:	4607      	mov	r7, r0
90004a70:	4621      	mov	r1, r4
90004a72:	f002 fb9b 	bl	900071ac <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
90004a76:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90004a78:	6823      	ldr	r3, [r4, #0]
90004a7a:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90004a7c:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90004a80:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90004a82:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90004a86:	f8c9 4000 	str.w	r4, [r9]
90004a8a:	f8cb 2000 	str.w	r2, [fp]
90004a8e:	f8c7 b008 	str.w	fp, [r7, #8]
90004a92:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90004a94:	4798      	blx	r3
    newPresenter->activate();
90004a96:	683b      	ldr	r3, [r7, #0]
90004a98:	4638      	mov	r0, r7
90004a9a:	681b      	ldr	r3, [r3, #0]
90004a9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004a9e:	4629      	mov	r1, r5
90004aa0:	4620      	mov	r0, r4
90004aa2:	f014 fc51 	bl	90019348 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004aa6:	682b      	ldr	r3, [r5, #0]
90004aa8:	4938      	ldr	r1, [pc, #224]	@ (90004b8c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x204>)
90004aaa:	691a      	ldr	r2, [r3, #16]
90004aac:	428a      	cmp	r2, r1
90004aae:	d152      	bne.n	90004b56 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1ce>
        if (done)
90004ab0:	7a2a      	ldrb	r2, [r5, #8]
90004ab2:	b9d2      	cbnz	r2, 90004aea <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x162>
        Drawable* d = screenContainer->getFirstChild();
90004ab4:	6868      	ldr	r0, [r5, #4]
90004ab6:	4a36      	ldr	r2, [pc, #216]	@ (90004b90 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x208>)
90004ab8:	6803      	ldr	r3, [r0, #0]
90004aba:	69db      	ldr	r3, [r3, #28]
90004abc:	4293      	cmp	r3, r2
90004abe:	d142      	bne.n	90004b46 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1be>
90004ac0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004ac2:	b164      	cbz	r4, 90004ade <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x156>
90004ac4:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004ac6:	4f33      	ldr	r7, [pc, #204]	@ (90004b94 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x20c>)
                d->setX(d->getX() - targetValue);
90004ac8:	6823      	ldr	r3, [r4, #0]
90004aca:	88a1      	ldrh	r1, [r4, #4]
90004acc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004ace:	1a89      	subs	r1, r1, r2
90004ad0:	42bb      	cmp	r3, r7
90004ad2:	b209      	sxth	r1, r1
90004ad4:	d11a      	bne.n	90004b0c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x184>
        rect.x = x;
90004ad6:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004ad8:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004ada:	2c00      	cmp	r4, #0
90004adc:	d1f4      	bne.n	90004ac8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x140>
        screenContainer->add(snapshot);
90004ade:	6868      	ldr	r0, [r5, #4]
90004ae0:	4631      	mov	r1, r6
90004ae2:	6803      	ldr	r3, [r0, #0]
90004ae4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004ae6:	4798      	blx	r3
    newTransition->invalidate();
90004ae8:	682b      	ldr	r3, [r5, #0]
90004aea:	695b      	ldr	r3, [r3, #20]
90004aec:	4a2a      	ldr	r2, [pc, #168]	@ (90004b98 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x210>)
90004aee:	4293      	cmp	r3, r2
90004af0:	d12c      	bne.n	90004b4c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1c4>
        Application::getInstance()->invalidate();
90004af2:	f012 fbad 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90004af6:	6803      	ldr	r3, [r0, #0]
90004af8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004afa:	b001      	add	sp, #4
90004afc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004b00:	4718      	bx	r3
    if (*currentScreen)
90004b02:	f8d9 0000 	ldr.w	r0, [r9]
90004b06:	2800      	cmp	r0, #0
90004b08:	d182      	bne.n	90004a10 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x88>
90004b0a:	e78a      	b.n	90004a22 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90004b0c:	4620      	mov	r0, r4
90004b0e:	4798      	blx	r3
90004b10:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004b12:	2c00      	cmp	r4, #0
90004b14:	d0e3      	beq.n	90004ade <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x156>
90004b16:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004b18:	e7d6      	b.n	90004ac8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x140>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004b1a:	4b20      	ldr	r3, [pc, #128]	@ (90004b9c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x214>)
        snapshot.makeSnapshot();
90004b1c:	4630      	mov	r0, r6
        rect.x = x;
90004b1e:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004b20:	f9b3 3000 	ldrsh.w	r3, [r3]
90004b24:	4c1e      	ldr	r4, [pc, #120]	@ (90004ba0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x218>)
        rect.height = height;
90004b26:	82eb      	strh	r3, [r5, #22]
90004b28:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.width = width;
90004b2c:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90004b2e:	f00f fa06 	bl	90013f3e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90004b32:	8823      	ldrh	r3, [r4, #0]
90004b34:	425b      	negs	r3, r3
90004b36:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
90004b38:	e78c      	b.n	90004a54 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0xcc>
    if (*currentPresenter)
90004b3a:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004b3e:	2800      	cmp	r0, #0
90004b40:	f47f af60 	bne.w	90004a04 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x7c>
90004b44:	e76d      	b.n	90004a22 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
        Drawable* d = screenContainer->getFirstChild();
90004b46:	4798      	blx	r3
90004b48:	4604      	mov	r4, r0
90004b4a:	e7ba      	b.n	90004ac2 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x13a>
    newTransition->invalidate();
90004b4c:	4628      	mov	r0, r5
90004b4e:	b001      	add	sp, #4
90004b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004b54:	4718      	bx	r3
    newTransition->init();
90004b56:	4628      	mov	r0, r5
90004b58:	4790      	blx	r2
    newTransition->invalidate();
90004b5a:	682b      	ldr	r3, [r5, #0]
90004b5c:	e7c5      	b.n	90004aea <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x162>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004b5e:	4b11      	ldr	r3, [pc, #68]	@ (90004ba4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x21c>)
90004b60:	21a3      	movs	r1, #163	@ 0xa3
90004b62:	4a11      	ldr	r2, [pc, #68]	@ (90004ba8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90004b64:	4811      	ldr	r0, [pc, #68]	@ (90004bac <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x224>)
90004b66:	f025 fb93 	bl	9002a290 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004b6a:	4b11      	ldr	r3, [pc, #68]	@ (90004bb0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x228>)
90004b6c:	21a5      	movs	r1, #165	@ 0xa5
90004b6e:	4a0e      	ldr	r2, [pc, #56]	@ (90004ba8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90004b70:	480e      	ldr	r0, [pc, #56]	@ (90004bac <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x224>)
90004b72:	f025 fb8d 	bl	9002a290 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004b76:	4b0f      	ldr	r3, [pc, #60]	@ (90004bb4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x22c>)
90004b78:	21a4      	movs	r1, #164	@ 0xa4
90004b7a:	4a0b      	ldr	r2, [pc, #44]	@ (90004ba8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90004b7c:	480b      	ldr	r0, [pc, #44]	@ (90004bac <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x224>)
90004b7e:	f025 fb87 	bl	9002a290 <__assert_func>
90004b82:	bf00      	nop
90004b84:	9002d1bc 	.word	0x9002d1bc
90004b88:	240234bb 	.word	0x240234bb
90004b8c:	90004721 	.word	0x90004721
90004b90:	900045a5 	.word	0x900045a5
90004b94:	90002e15 	.word	0x90002e15
90004b98:	90004659 	.word	0x90004659
90004b9c:	240234b2 	.word	0x240234b2
90004ba0:	240234b0 	.word	0x240234b0
90004ba4:	9002cc60 	.word	0x9002cc60
90004ba8:	9002cf54 	.word	0x9002cf54
90004bac:	9002cdc4 	.word	0x9002cdc4
90004bb0:	9002ceb0 	.word	0x9002ceb0
90004bb4:	9002ce0c 	.word	0x9002ce0c
90004bb8:	24023504 	.word	0x24023504
90004bbc:	24023500 	.word	0x24023500

90004bc0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv>:
{
90004bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004bc4:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90004bc8:	4680      	mov	r8, r0
90004bca:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004bcc:	68b8      	ldr	r0, [r7, #8]
90004bce:	6803      	ldr	r3, [r0, #0]
90004bd0:	6a1b      	ldr	r3, [r3, #32]
90004bd2:	4798      	blx	r3
90004bd4:	f240 5363 	movw	r3, #1379	@ 0x563
90004bd8:	4298      	cmp	r0, r3
90004bda:	f240 80dc 	bls.w	90004d96 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1d6>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004bde:	6878      	ldr	r0, [r7, #4]
90004be0:	6803      	ldr	r3, [r0, #0]
90004be2:	6a1b      	ldr	r3, [r3, #32]
90004be4:	4798      	blx	r3
90004be6:	280f      	cmp	r0, #15
90004be8:	f240 80e1 	bls.w	90004dae <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1ee>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004bec:	68f8      	ldr	r0, [r7, #12]
90004bee:	6803      	ldr	r3, [r0, #0]
90004bf0:	6a1b      	ldr	r3, [r3, #32]
90004bf2:	4798      	blx	r3
90004bf4:	283f      	cmp	r0, #63	@ 0x3f
90004bf6:	f240 80d4 	bls.w	90004da2 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1e2>
    if (*currentTrans)
90004bfa:	f8df a1f4 	ldr.w	sl, [pc, #500]	@ 90004df0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x230>
    Application::getInstance()->clearAllTimerWidgets();
90004bfe:	f012 fb27 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90004c02:	3004      	adds	r0, #4
90004c04:	f012 fb49 	bl	9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004c08:	f8da 0000 	ldr.w	r0, [sl]
90004c0c:	b140      	cbz	r0, 90004c20 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90004c0e:	6803      	ldr	r3, [r0, #0]
90004c10:	68db      	ldr	r3, [r3, #12]
90004c12:	4798      	blx	r3
    if (*currentTrans)
90004c14:	f8da 0000 	ldr.w	r0, [sl]
90004c18:	b110      	cbz	r0, 90004c20 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90004c1a:	6803      	ldr	r3, [r0, #0]
90004c1c:	681b      	ldr	r3, [r3, #0]
90004c1e:	4798      	blx	r3
    if (*currentScreen)
90004c20:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90004df4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x234>
90004c24:	f8d9 0000 	ldr.w	r0, [r9]
90004c28:	2800      	cmp	r0, #0
90004c2a:	f000 80a2 	beq.w	90004d72 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
90004c2e:	6803      	ldr	r3, [r0, #0]
90004c30:	695b      	ldr	r3, [r3, #20]
90004c32:	4798      	blx	r3
    if (*currentPresenter)
90004c34:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004c38:	2800      	cmp	r0, #0
90004c3a:	d07e      	beq.n	90004d3a <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x17a>
        (*currentPresenter)->deactivate();
90004c3c:	6803      	ldr	r3, [r0, #0]
90004c3e:	685b      	ldr	r3, [r3, #4]
90004c40:	4798      	blx	r3
    if (*currentScreen)
90004c42:	f8d9 0000 	ldr.w	r0, [r9]
90004c46:	b110      	cbz	r0, 90004c4e <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x8e>
        (*currentScreen)->~Screen();
90004c48:	6803      	ldr	r3, [r0, #0]
90004c4a:	681b      	ldr	r3, [r3, #0]
90004c4c:	4798      	blx	r3
    if (*currentPresenter)
90004c4e:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004c52:	b110      	cbz	r0, 90004c5a <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90004c54:	6803      	ldr	r3, [r0, #0]
90004c56:	689b      	ldr	r3, [r3, #8]
90004c58:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004c5a:	68f8      	ldr	r0, [r7, #12]
90004c5c:	2100      	movs	r1, #0
90004c5e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004c60:	460c      	mov	r4, r1
90004c62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004c64:	4798      	blx	r3
          relativeValue(0)
90004c66:	4b55      	ldr	r3, [pc, #340]	@ (90004dbc <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1fc>)
90004c68:	4606      	mov	r6, r0
90004c6a:	4605      	mov	r5, r0
90004c6c:	6044      	str	r4, [r0, #4]
90004c6e:	7204      	strb	r4, [r0, #8]
90004c70:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90004c74:	4630      	mov	r0, r6
90004c76:	f00f f9e7 	bl	90014048 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90004c7a:	4b51      	ldr	r3, [pc, #324]	@ (90004dc0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x200>)
          animationSteps(transitionSteps),
90004c7c:	2214      	movs	r2, #20
          relativeValue(0)
90004c7e:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90004c80:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90004c82:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90004c84:	2b00      	cmp	r3, #0
90004c86:	d164      	bne.n	90004d52 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x192>
            done = true;
90004c88:	2301      	movs	r3, #1
90004c8a:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004c8c:	68b8      	ldr	r0, [r7, #8]
90004c8e:	2100      	movs	r1, #0
90004c90:	6803      	ldr	r3, [r0, #0]
90004c92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004c94:	4798      	blx	r3
90004c96:	4604      	mov	r4, r0
90004c98:	f002 f9ca 	bl	90007030 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004c9c:	6878      	ldr	r0, [r7, #4]
90004c9e:	2100      	movs	r1, #0
90004ca0:	6803      	ldr	r3, [r0, #0]
90004ca2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004ca4:	4798      	blx	r3
90004ca6:	4607      	mov	r7, r0
90004ca8:	4621      	mov	r1, r4
90004caa:	f002 f97f 	bl	90006fac <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
90004cae:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90004cb0:	6823      	ldr	r3, [r4, #0]
90004cb2:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90004cb4:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90004cb8:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90004cba:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90004cbe:	f8c9 4000 	str.w	r4, [r9]
90004cc2:	f8cb 2000 	str.w	r2, [fp]
90004cc6:	f8c7 b008 	str.w	fp, [r7, #8]
90004cca:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90004ccc:	4798      	blx	r3
    newPresenter->activate();
90004cce:	683b      	ldr	r3, [r7, #0]
90004cd0:	4638      	mov	r0, r7
90004cd2:	681b      	ldr	r3, [r3, #0]
90004cd4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004cd6:	4629      	mov	r1, r5
90004cd8:	4620      	mov	r0, r4
90004cda:	f014 fb35 	bl	90019348 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004cde:	682b      	ldr	r3, [r5, #0]
90004ce0:	4938      	ldr	r1, [pc, #224]	@ (90004dc4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x204>)
90004ce2:	691a      	ldr	r2, [r3, #16]
90004ce4:	428a      	cmp	r2, r1
90004ce6:	d152      	bne.n	90004d8e <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1ce>
        if (done)
90004ce8:	7a2a      	ldrb	r2, [r5, #8]
90004cea:	b9d2      	cbnz	r2, 90004d22 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x162>
        Drawable* d = screenContainer->getFirstChild();
90004cec:	6868      	ldr	r0, [r5, #4]
90004cee:	4a36      	ldr	r2, [pc, #216]	@ (90004dc8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x208>)
90004cf0:	6803      	ldr	r3, [r0, #0]
90004cf2:	69db      	ldr	r3, [r3, #28]
90004cf4:	4293      	cmp	r3, r2
90004cf6:	d142      	bne.n	90004d7e <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1be>
90004cf8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004cfa:	b164      	cbz	r4, 90004d16 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x156>
90004cfc:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004cfe:	4f33      	ldr	r7, [pc, #204]	@ (90004dcc <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x20c>)
                d->setX(d->getX() - targetValue);
90004d00:	6823      	ldr	r3, [r4, #0]
90004d02:	88a1      	ldrh	r1, [r4, #4]
90004d04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004d06:	1a89      	subs	r1, r1, r2
90004d08:	42bb      	cmp	r3, r7
90004d0a:	b209      	sxth	r1, r1
90004d0c:	d11a      	bne.n	90004d44 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x184>
        rect.x = x;
90004d0e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004d10:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004d12:	2c00      	cmp	r4, #0
90004d14:	d1f4      	bne.n	90004d00 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x140>
        screenContainer->add(snapshot);
90004d16:	6868      	ldr	r0, [r5, #4]
90004d18:	4631      	mov	r1, r6
90004d1a:	6803      	ldr	r3, [r0, #0]
90004d1c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004d1e:	4798      	blx	r3
    newTransition->invalidate();
90004d20:	682b      	ldr	r3, [r5, #0]
90004d22:	695b      	ldr	r3, [r3, #20]
90004d24:	4a2a      	ldr	r2, [pc, #168]	@ (90004dd0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x210>)
90004d26:	4293      	cmp	r3, r2
90004d28:	d12c      	bne.n	90004d84 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1c4>
        Application::getInstance()->invalidate();
90004d2a:	f012 fa91 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90004d2e:	6803      	ldr	r3, [r0, #0]
90004d30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004d32:	b001      	add	sp, #4
90004d34:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d38:	4718      	bx	r3
    if (*currentScreen)
90004d3a:	f8d9 0000 	ldr.w	r0, [r9]
90004d3e:	2800      	cmp	r0, #0
90004d40:	d182      	bne.n	90004c48 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x88>
90004d42:	e78a      	b.n	90004c5a <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90004d44:	4620      	mov	r0, r4
90004d46:	4798      	blx	r3
90004d48:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004d4a:	2c00      	cmp	r4, #0
90004d4c:	d0e3      	beq.n	90004d16 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x156>
90004d4e:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004d50:	e7d6      	b.n	90004d00 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x140>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004d52:	4b20      	ldr	r3, [pc, #128]	@ (90004dd4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x214>)
        snapshot.makeSnapshot();
90004d54:	4630      	mov	r0, r6
        rect.x = x;
90004d56:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004d58:	f9b3 3000 	ldrsh.w	r3, [r3]
90004d5c:	4c1e      	ldr	r4, [pc, #120]	@ (90004dd8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x218>)
        rect.height = height;
90004d5e:	82eb      	strh	r3, [r5, #22]
90004d60:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.width = width;
90004d64:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90004d66:	f00f f8ea 	bl	90013f3e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90004d6a:	8823      	ldrh	r3, [r4, #0]
90004d6c:	425b      	negs	r3, r3
90004d6e:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
90004d70:	e78c      	b.n	90004c8c <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0xcc>
    if (*currentPresenter)
90004d72:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004d76:	2800      	cmp	r0, #0
90004d78:	f47f af60 	bne.w	90004c3c <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x7c>
90004d7c:	e76d      	b.n	90004c5a <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x9a>
        Drawable* d = screenContainer->getFirstChild();
90004d7e:	4798      	blx	r3
90004d80:	4604      	mov	r4, r0
90004d82:	e7ba      	b.n	90004cfa <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x13a>
    newTransition->invalidate();
90004d84:	4628      	mov	r0, r5
90004d86:	b001      	add	sp, #4
90004d88:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d8c:	4718      	bx	r3
    newTransition->init();
90004d8e:	4628      	mov	r0, r5
90004d90:	4790      	blx	r2
    newTransition->invalidate();
90004d92:	682b      	ldr	r3, [r5, #0]
90004d94:	e7c5      	b.n	90004d22 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x162>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d96:	4b11      	ldr	r3, [pc, #68]	@ (90004ddc <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x21c>)
90004d98:	21a3      	movs	r1, #163	@ 0xa3
90004d9a:	4a11      	ldr	r2, [pc, #68]	@ (90004de0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x220>)
90004d9c:	4811      	ldr	r0, [pc, #68]	@ (90004de4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x224>)
90004d9e:	f025 fa77 	bl	9002a290 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004da2:	4b11      	ldr	r3, [pc, #68]	@ (90004de8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x228>)
90004da4:	21a5      	movs	r1, #165	@ 0xa5
90004da6:	4a0e      	ldr	r2, [pc, #56]	@ (90004de0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x220>)
90004da8:	480e      	ldr	r0, [pc, #56]	@ (90004de4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x224>)
90004daa:	f025 fa71 	bl	9002a290 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004dae:	4b0f      	ldr	r3, [pc, #60]	@ (90004dec <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x22c>)
90004db0:	21a4      	movs	r1, #164	@ 0xa4
90004db2:	4a0b      	ldr	r2, [pc, #44]	@ (90004de0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x220>)
90004db4:	480b      	ldr	r0, [pc, #44]	@ (90004de4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x224>)
90004db6:	f025 fa6b 	bl	9002a290 <__assert_func>
90004dba:	bf00      	nop
90004dbc:	9002d1bc 	.word	0x9002d1bc
90004dc0:	240234bb 	.word	0x240234bb
90004dc4:	90004721 	.word	0x90004721
90004dc8:	900045a5 	.word	0x900045a5
90004dcc:	90002e15 	.word	0x90002e15
90004dd0:	90004659 	.word	0x90004659
90004dd4:	240234b2 	.word	0x240234b2
90004dd8:	240234b0 	.word	0x240234b0
90004ddc:	9002cc60 	.word	0x9002cc60
90004de0:	9002d03c 	.word	0x9002d03c
90004de4:	9002cdc4 	.word	0x9002cdc4
90004de8:	9002ceb0 	.word	0x9002ceb0
90004dec:	9002ce0c 	.word	0x9002ce0c
90004df0:	24023504 	.word	0x24023504
90004df4:	24023500 	.word	0x24023500

90004df8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004df8:	b570      	push	{r4, r5, r6, lr}
90004dfa:	4604      	mov	r4, r0
90004dfc:	4615      	mov	r5, r2
90004dfe:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004e00:	f012 faec 	bl	900173dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004e04:	4a22      	ldr	r2, [pc, #136]	@ (90004e90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004e06:	2300      	movs	r3, #0
      frontendHeap(heap),
90004e08:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004e0c:	6014      	str	r4, [r2, #0]
        return instance;
90004e0e:	4d21      	ldr	r5, [pc, #132]	@ (90004e94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004e10:	4a21      	ldr	r2, [pc, #132]	@ (90004e98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004e12:	6828      	ldr	r0, [r5, #0]
90004e14:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004e16:	4a21      	ldr	r2, [pc, #132]	@ (90004e9c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004e18:	4921      	ldr	r1, [pc, #132]	@ (90004ea0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004e1a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004e1e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004e22:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004e26:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004e2a:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004e2e:	6802      	ldr	r2, [r0, #0]
90004e30:	6892      	ldr	r2, [r2, #8]
90004e32:	428a      	cmp	r2, r1
90004e34:	d129      	bne.n	90004e8a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004e36:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004e3a:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004e3e:	2000      	movs	r0, #0
90004e40:	f002 f80e 	bl	90006e60 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004e44:	682b      	ldr	r3, [r5, #0]
90004e46:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e4a:	b1e2      	cbz	r2, 90004e86 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004e4c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e4e:	b1d0      	cbz	r0, 90004e86 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004e50:	f01c fdbd 	bl	900219ce <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004e54:	682b      	ldr	r3, [r5, #0]
90004e56:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e5a:	b192      	cbz	r2, 90004e82 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004e5c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e5e:	b180      	cbz	r0, 90004e82 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004e60:	f01c fe30 	bl	90021ac4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004e64:	682b      	ldr	r3, [r5, #0]
90004e66:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e6a:	b12a      	cbz	r2, 90004e78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004e6c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e6e:	b118      	cbz	r0, 90004e78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004e70:	f01c fe34 	bl	90021adc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e74:	4620      	mov	r0, r4
90004e76:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004e78:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004e7a:	f01c fe2f 	bl	90021adc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e7e:	4620      	mov	r0, r4
90004e80:	bd70      	pop	{r4, r5, r6, pc}
90004e82:	6898      	ldr	r0, [r3, #8]
90004e84:	e7ec      	b.n	90004e60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004e86:	6898      	ldr	r0, [r3, #8]
90004e88:	e7e2      	b.n	90004e50 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004e8a:	4619      	mov	r1, r3
90004e8c:	4790      	blx	r2
90004e8e:	e7d6      	b.n	90004e3e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004e90:	24023510 	.word	0x24023510
90004e94:	240234bc 	.word	0x240234bc
90004e98:	9002d144 	.word	0x9002d144
90004e9c:	9002d12c 	.word	0x9002d12c
90004ea0:	90000d5d 	.word	0x90000d5d

90004ea4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004ea4:	4905      	ldr	r1, [pc, #20]	@ (90004ebc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90004ea6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004ea8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004eac:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004eb0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004eb4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004eb8:	4770      	bx	lr
90004eba:	bf00      	nop
90004ebc:	900047f1 	.word	0x900047f1

90004ec0 <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv>:
90004ec0:	4905      	ldr	r1, [pc, #20]	@ (90004ed8 <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv+0x18>)
90004ec2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004ec4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004ec8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004ecc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ed0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004ed4:	4770      	bx	lr
90004ed6:	bf00      	nop
90004ed8:	90004bc1 	.word	0x90004bc1

90004edc <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>:
90004edc:	4905      	ldr	r1, [pc, #20]	@ (90004ef4 <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv+0x18>)
90004ede:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004ee0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004ee4:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004ee8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004eec:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004ef0:	4770      	bx	lr
90004ef2:	bf00      	nop
90004ef4:	90004989 	.word	0x90004989

90004ef8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004ef8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004efa:	4770      	bx	lr

90004efc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004efc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004efe:	4770      	bx	lr

90004f00 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004f00:	4770      	bx	lr
90004f02:	bf00      	nop

90004f04 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004f04:	888b      	ldrh	r3, [r1, #4]
90004f06:	69c0      	ldr	r0, [r0, #28]
90004f08:	0adb      	lsrs	r3, r3, #11
90004f0a:	680a      	ldr	r2, [r1, #0]
90004f0c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004f10:	4410      	add	r0, r2
90004f12:	4770      	bx	lr

90004f14 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004f14:	b1fa      	cbz	r2, 90004f56 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004f16:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004f18:	7b14      	ldrb	r4, [r2, #12]
90004f1a:	b1d4      	cbz	r4, 90004f52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004f1c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004f20:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004f24:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004f28:	6a03      	ldr	r3, [r0, #32]
90004f2a:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004f2e:	ea4e 0202 	orr.w	r2, lr, r2
90004f32:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004f36:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004f3a:	e004      	b.n	90004f46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004f3c:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004f40:	d807      	bhi.n	90004f52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004f42:	4283      	cmp	r3, r0
90004f44:	d005      	beq.n	90004f52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004f46:	881a      	ldrh	r2, [r3, #0]
90004f48:	428a      	cmp	r2, r1
90004f4a:	d1f7      	bne.n	90004f3c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004f4c:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004f50:	bd10      	pop	{r4, pc}
        return 0;
90004f52:	2000      	movs	r0, #0
}
90004f54:	bd10      	pop	{r4, pc}
        return 0;
90004f56:	4610      	mov	r0, r2
}
90004f58:	4770      	bx	lr
90004f5a:	bf00      	nop

90004f5c <_ZN8touchgfx13GeneratedFontD0Ev>:
90004f5c:	b510      	push	{r4, lr}
90004f5e:	4604      	mov	r4, r0
90004f60:	212c      	movs	r1, #44	@ 0x2c
90004f62:	f024 fe1c 	bl	90029b9e <_ZdlPvj>
90004f66:	4620      	mov	r0, r4
90004f68:	bd10      	pop	{r4, pc}
90004f6a:	bf00      	nop

90004f6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f6c:	b530      	push	{r4, r5, lr}
90004f6e:	b08b      	sub	sp, #44	@ 0x2c
90004f70:	4604      	mov	r4, r0
90004f72:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004f76:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f78:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004f7c:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f7e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004f82:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f84:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004f88:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f8a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004f8e:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f90:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004f94:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f96:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004f9a:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f9c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004fa0:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fa2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004fa6:	9508      	str	r5, [sp, #32]
90004fa8:	f013 fd9c 	bl	90018ae4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004fac:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004fae:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004fb0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004fb2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004fb4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004fb6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004fb8:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004fba:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004fbc:	62a3      	str	r3, [r4, #40]	@ 0x28
90004fbe:	4b02      	ldr	r3, [pc, #8]	@ (90004fc8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004fc0:	6023      	str	r3, [r4, #0]
}
90004fc2:	b00b      	add	sp, #44	@ 0x2c
90004fc4:	bd30      	pop	{r4, r5, pc}
90004fc6:	bf00      	nop
90004fc8:	9002d1e0 	.word	0x9002d1e0

90004fcc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004fcc:	4770      	bx	lr
90004fce:	bf00      	nop

90004fd0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004fd0:	4770      	bx	lr
90004fd2:	bf00      	nop

90004fd4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004fd4:	4770      	bx	lr
90004fd6:	bf00      	nop

90004fd8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004fd8:	4770      	bx	lr
90004fda:	bf00      	nop

90004fdc <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004fdc:	b530      	push	{r4, r5, lr}
90004fde:	b085      	sub	sp, #20
90004fe0:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004fe2:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004fe4:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004fe6:	466d      	mov	r5, sp
90004fe8:	4601      	mov	r1, r0
90004fea:	8102      	strh	r2, [r0, #8]
90004fec:	343c      	adds	r4, #60	@ 0x3c
90004fee:	4628      	mov	r0, r5
90004ff0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90004ff4:	4798      	blx	r3
90004ff6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004ffa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004ffe:	b005      	add	sp, #20
90005000:	bd30      	pop	{r4, r5, pc}
90005002:	bf00      	nop

90005004 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90005004:	b530      	push	{r4, r5, lr}
90005006:	b085      	sub	sp, #20
90005008:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
9000500a:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
9000500c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000500e:	466d      	mov	r5, sp
90005010:	4601      	mov	r1, r0
        rect.height = height;
90005012:	8142      	strh	r2, [r0, #10]
90005014:	343c      	adds	r4, #60	@ 0x3c
90005016:	4628      	mov	r0, r5
90005018:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000501c:	4798      	blx	r3
9000501e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005022:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005026:	b005      	add	sp, #20
90005028:	bd30      	pop	{r4, r5, pc}
9000502a:	bf00      	nop

9000502c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
9000502c:	2200      	movs	r2, #0
9000502e:	6002      	str	r2, [r0, #0]
90005030:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90005032:	4770      	bx	lr

90005034 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005034:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90005038:	4770      	bx	lr
9000503a:	bf00      	nop

9000503c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
9000503c:	2000      	movs	r0, #0
9000503e:	4770      	bx	lr

90005040 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90005040:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90005044:	b112      	cbz	r2, 9000504c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90005046:	6803      	ldr	r3, [r0, #0]
90005048:	695b      	ldr	r3, [r3, #20]
9000504a:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
9000504c:	4770      	bx	lr
9000504e:	bf00      	nop

90005050 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005050:	2200      	movs	r2, #0
90005052:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90005056:	6082      	str	r2, [r0, #8]
90005058:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
9000505c:	4770      	bx	lr
9000505e:	bf00      	nop

90005060 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90005060:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90005062:	4770      	bx	lr

90005064 <_ZN15Screen1ViewBase10incMinutesEv>:
     * Virtual Action Handlers
     */
    virtual void incMinutes()
    {
        // Override and implement this function in Screen1
    }
90005064:	4770      	bx	lr
90005066:	bf00      	nop

90005068 <_ZN15Screen1ViewBase10decMinutesEv>:
    virtual void decMinutes()
    {
        // Override and implement this function in Screen1
    }
90005068:	4770      	bx	lr
9000506a:	bf00      	nop

9000506c <_ZN15Screen1ViewBase11incSessionsEv>:
    virtual void incSessions()
    {
        // Override and implement this function in Screen1
    }
9000506c:	4770      	bx	lr
9000506e:	bf00      	nop

90005070 <_ZN15Screen1ViewBase11decSessionsEv>:
    virtual void decSessions()
    {
        // Override and implement this function in Screen1
    }
90005070:	4770      	bx	lr
90005072:	bf00      	nop

90005074 <_ZN15Screen1ViewBase10startTimerEv>:
    virtual void startTimer()
    {
        // Override and implement this function in Screen1
    }
90005074:	4770      	bx	lr
90005076:	bf00      	nop

90005078 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90005078:	4770      	bx	lr
9000507a:	bf00      	nop

9000507c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
9000507c:	4770      	bx	lr
9000507e:	bf00      	nop

90005080 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
90005080:	4770      	bx	lr
90005082:	bf00      	nop

90005084 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90005084:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90005088:	b133      	cbz	r3, 90005098 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
9000508a:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000508c:	f100 0374 	add.w	r3, r0, #116	@ 0x74
90005090:	65c2      	str	r2, [r0, #92]	@ 0x5c
90005092:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90005094:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
90005096:	4770      	bx	lr
90005098:	6e82      	ldr	r2, [r0, #104]	@ 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000509a:	f100 0370 	add.w	r3, r0, #112	@ 0x70
9000509e:	65c2      	str	r2, [r0, #92]	@ 0x5c
900050a0:	681b      	ldr	r3, [r3, #0]
900050a2:	6603      	str	r3, [r0, #96]	@ 0x60
    }
900050a4:	4770      	bx	lr
900050a6:	bf00      	nop

900050a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
900050a8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900050ac:	b153      	cbz	r3, 900050c4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
        color = newColor;
900050ae:	f8d0 10c4 	ldr.w	r1, [r0, #196]	@ 0xc4
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900050b2:	f100 0374 	add.w	r3, r0, #116	@ 0x74
900050b6:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
900050b8:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900050bc:	65c2      	str	r2, [r0, #92]	@ 0x5c
900050be:	681b      	ldr	r3, [r3, #0]
900050c0:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
900050c2:	4770      	bx	lr
900050c4:	f8d0 10c0 	ldr.w	r1, [r0, #192]	@ 0xc0
900050c8:	f100 0370 	add.w	r3, r0, #112	@ 0x70
900050cc:	6e82      	ldr	r2, [r0, #104]	@ 0x68
900050ce:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
900050d2:	65c2      	str	r2, [r0, #92]	@ 0x5c
900050d4:	681b      	ldr	r3, [r3, #0]
900050d6:	6603      	str	r3, [r0, #96]	@ 0x60
900050d8:	4770      	bx	lr
900050da:	bf00      	nop

900050dc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900050dc:	4770      	bx	lr
900050de:	bf00      	nop

900050e0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
900050e0:	4770      	bx	lr
900050e2:	bf00      	nop

900050e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
900050e4:	4770      	bx	lr
900050e6:	bf00      	nop

900050e8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900050e8:	4770      	bx	lr
900050ea:	bf00      	nop

900050ec <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900050ec:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900050ee:	68c3      	ldr	r3, [r0, #12]
900050f0:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900050f4:	f013 0f01 	tst.w	r3, #1
900050f8:	eb04 0063 	add.w	r0, r4, r3, asr #1
900050fc:	d004      	beq.n	90005108 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1c>
900050fe:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005102:	f854 300c 	ldr.w	r3, [r4, ip]
90005106:	589a      	ldr	r2, [r3, r2]
    }
90005108:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000510c:	4710      	bx	r2
9000510e:	bf00      	nop

90005110 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005110:	6843      	ldr	r3, [r0, #4]
90005112:	b13b      	cbz	r3, 90005124 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005114:	6883      	ldr	r3, [r0, #8]
90005116:	b10b      	cbz	r3, 9000511c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90005118:	2001      	movs	r0, #1
    }
9000511a:	4770      	bx	lr
9000511c:	68c0      	ldr	r0, [r0, #12]
9000511e:	f000 0001 	and.w	r0, r0, #1
90005122:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005124:	4618      	mov	r0, r3
90005126:	4770      	bx	lr

90005128 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
90005128:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
        alpha = newAlpha;
9000512c:	f880 30ae 	strb.w	r3, [r0, #174]	@ 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005130:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005134:	4770      	bx	lr
90005136:	bf00      	nop

90005138 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
90005138:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
9000513c:	f880 30a4 	strb.w	r3, [r0, #164]	@ 0xa4
90005140:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005144:	4770      	bx	lr
90005146:	bf00      	nop

90005148 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
90005148:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
9000514c:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005150:	4770      	bx	lr
90005152:	bf00      	nop

90005154 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005154:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    virtual void handlePressedUpdated()
90005158:	b510      	push	{r4, lr}
9000515a:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
9000515c:	307c      	adds	r0, #124	@ 0x7c
9000515e:	b16b      	cbz	r3, 9000517c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x28>
90005160:	f104 017a 	add.w	r1, r4, #122	@ 0x7a
90005164:	f00f fc74 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005168:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000516c:	b173      	cbz	r3, 9000518c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x38>
9000516e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005170:	f104 0374 	add.w	r3, r4, #116	@ 0x74
90005174:	65e2      	str	r2, [r4, #92]	@ 0x5c
90005176:	681b      	ldr	r3, [r3, #0]
90005178:	6623      	str	r3, [r4, #96]	@ 0x60
    }
9000517a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
9000517c:	f104 0178 	add.w	r1, r4, #120	@ 0x78
90005180:	f00f fc66 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005184:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90005188:	2b00      	cmp	r3, #0
9000518a:	d1f0      	bne.n	9000516e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1a>
9000518c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000518e:	f104 0370 	add.w	r3, r4, #112	@ 0x70
90005192:	65e2      	str	r2, [r4, #92]	@ 0x5c
90005194:	681b      	ldr	r3, [r3, #0]
90005196:	6623      	str	r3, [r4, #96]	@ 0x60
    }
90005198:	bd10      	pop	{r4, pc}
9000519a:	bf00      	nop

9000519c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
9000519c:	b510      	push	{r4, lr}
9000519e:	4604      	mov	r4, r0
900051a0:	214c      	movs	r1, #76	@ 0x4c
900051a2:	f024 fcfc 	bl	90029b9e <_ZdlPvj>
900051a6:	4620      	mov	r0, r4
900051a8:	bd10      	pop	{r4, pc}
900051aa:	bf00      	nop

900051ac <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
900051ac:	b510      	push	{r4, lr}
900051ae:	4604      	mov	r4, r0
900051b0:	2178      	movs	r1, #120	@ 0x78
900051b2:	f024 fcf4 	bl	90029b9e <_ZdlPvj>
900051b6:	4620      	mov	r0, r4
900051b8:	bd10      	pop	{r4, pc}
900051ba:	bf00      	nop

900051bc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
900051bc:	b510      	push	{r4, lr}
900051be:	4604      	mov	r4, r0
900051c0:	21a8      	movs	r1, #168	@ 0xa8
900051c2:	f024 fcec 	bl	90029b9e <_ZdlPvj>
900051c6:	4620      	mov	r0, r4
900051c8:	bd10      	pop	{r4, pc}
900051ca:	bf00      	nop

900051cc <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
900051cc:	b510      	push	{r4, lr}
900051ce:	4604      	mov	r4, r0
900051d0:	21c8      	movs	r1, #200	@ 0xc8
900051d2:	f024 fce4 	bl	90029b9e <_ZdlPvj>
900051d6:	4620      	mov	r0, r4
900051d8:	bd10      	pop	{r4, pc}
900051da:	bf00      	nop

900051dc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900051dc:	b510      	push	{r4, lr}
900051de:	4604      	mov	r4, r0
900051e0:	2110      	movs	r1, #16
900051e2:	f024 fcdc 	bl	90029b9e <_ZdlPvj>
900051e6:	4620      	mov	r0, r4
900051e8:	bd10      	pop	{r4, pc}
900051ea:	bf00      	nop

900051ec <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
900051ec:	b510      	push	{r4, lr}
900051ee:	4604      	mov	r4, r0
}
900051f0:	f44f 61ac 	mov.w	r1, #1376	@ 0x560
900051f4:	f024 fcd3 	bl	90029b9e <_ZdlPvj>
900051f8:	4620      	mov	r0, r4
900051fa:	bd10      	pop	{r4, pc}

900051fc <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
900051fc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &minutes_inc)
900051fe:	f100 0398 	add.w	r3, r0, #152	@ 0x98
{
90005202:	4604      	mov	r4, r0
90005204:	460d      	mov	r5, r1
    if (&src == &minutes_inc)
90005206:	4299      	cmp	r1, r3
90005208:	d010      	beq.n	9000522c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        //incMinutesInteraction
        //When minutes_inc clicked call virtual function
        //Call incMinutes
        incMinutes();
    }
    if (&src == &minutes_dec)
9000520a:	f504 73a0 	add.w	r3, r4, #320	@ 0x140
9000520e:	429d      	cmp	r5, r3
90005210:	d02e      	beq.n	90005270 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x74>
        //decMinutesInteraction
        //When minutes_dec clicked call virtual function
        //Call decMinutes
        decMinutes();
    }
    if (&src == &sessions_inc)
90005212:	f504 73f4 	add.w	r3, r4, #488	@ 0x1e8
90005216:	429d      	cmp	r5, r3
90005218:	d022      	beq.n	90005260 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x64>
        //incSessionsInteraction
        //When sessions_inc clicked call virtual function
        //Call incSessions
        incSessions();
    }
    if (&src == &sessions_dec)
9000521a:	f504 7324 	add.w	r3, r4, #656	@ 0x290
9000521e:	429d      	cmp	r5, r3
90005220:	d016      	beq.n	90005250 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x54>
        //decSessionsInteraction
        //When sessions_dec clicked call virtual function
        //Call decSessions
        decSessions();
    }
    if (&src == &start)
90005222:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
90005226:	429d      	cmp	r5, r3
90005228:	d007      	beq.n	9000523a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        //changeScreenInteraction
        //When start clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
9000522a:	bd38      	pop	{r3, r4, r5, pc}
        incMinutes();
9000522c:	6803      	ldr	r3, [r0, #0]
9000522e:	4a16      	ldr	r2, [pc, #88]	@ (90005288 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8c>)
90005230:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005232:	4293      	cmp	r3, r2
90005234:	d0e9      	beq.n	9000520a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90005236:	4798      	blx	r3
90005238:	e7e7      	b.n	9000520a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
        startTimer();
9000523a:	6823      	ldr	r3, [r4, #0]
9000523c:	4a13      	ldr	r2, [pc, #76]	@ (9000528c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>)
9000523e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90005240:	4293      	cmp	r3, r2
90005242:	d11d      	bne.n	90005280 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x84>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005244:	f012 f804 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
}
90005248:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen2ScreenSlideTransitionEast();
9000524c:	f7ff be46 	b.w	90004edc <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>
        decSessions();
90005250:	6823      	ldr	r3, [r4, #0]
90005252:	4a0f      	ldr	r2, [pc, #60]	@ (90005290 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x94>)
90005254:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90005256:	4293      	cmp	r3, r2
90005258:	d0e3      	beq.n	90005222 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
9000525a:	4620      	mov	r0, r4
9000525c:	4798      	blx	r3
9000525e:	e7e0      	b.n	90005222 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        incSessions();
90005260:	6823      	ldr	r3, [r4, #0]
90005262:	4a0c      	ldr	r2, [pc, #48]	@ (90005294 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x98>)
90005264:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90005266:	4293      	cmp	r3, r2
90005268:	d0d7      	beq.n	9000521a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
9000526a:	4620      	mov	r0, r4
9000526c:	4798      	blx	r3
9000526e:	e7d4      	b.n	9000521a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        decMinutes();
90005270:	6823      	ldr	r3, [r4, #0]
90005272:	4a09      	ldr	r2, [pc, #36]	@ (90005298 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9c>)
90005274:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005276:	4293      	cmp	r3, r2
90005278:	d0cb      	beq.n	90005212 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
9000527a:	4620      	mov	r0, r4
9000527c:	4798      	blx	r3
9000527e:	e7c8      	b.n	90005212 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        startTimer();
90005280:	4620      	mov	r0, r4
90005282:	4798      	blx	r3
90005284:	e7de      	b.n	90005244 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x48>
90005286:	bf00      	nop
90005288:	90005065 	.word	0x90005065
9000528c:	90005075 	.word	0x90005075
90005290:	90005071 	.word	0x90005071
90005294:	9000506d 	.word	0x9000506d
90005298:	90005069 	.word	0x90005069

9000529c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000529c:	4b1b      	ldr	r3, [pc, #108]	@ (9000530c <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000529e:	6802      	ldr	r2, [r0, #0]
900052a0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900052a2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900052a4:	6b55      	ldr	r5, [r2, #52]	@ 0x34
900052a6:	b323      	cbz	r3, 900052f2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
900052a8:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
900052aa:	4919      	ldr	r1, [pc, #100]	@ (90005310 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
900052ac:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900052ae:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900052b0:	8809      	ldrh	r1, [r1, #0]
900052b2:	4291      	cmp	r1, r2
900052b4:	d923      	bls.n	900052fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
900052b6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900052ba:	4b16      	ldr	r3, [pc, #88]	@ (90005314 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
900052bc:	681b      	ldr	r3, [r3, #0]
900052be:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900052c2:	4a15      	ldr	r2, [pc, #84]	@ (90005318 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
900052c4:	6803      	ldr	r3, [r0, #0]
900052c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900052c8:	4293      	cmp	r3, r2
900052ca:	d107      	bne.n	900052dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
900052cc:	88c0      	ldrh	r0, [r0, #6]
900052ce:	4b13      	ldr	r3, [pc, #76]	@ (9000531c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900052d0:	1a31      	subs	r1, r6, r0
900052d2:	429d      	cmp	r5, r3
900052d4:	b209      	sxth	r1, r1
900052d6:	d107      	bne.n	900052e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
900052d8:	80e1      	strh	r1, [r4, #6]
    }
900052da:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900052dc:	4798      	blx	r3
900052de:	4b0f      	ldr	r3, [pc, #60]	@ (9000531c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900052e0:	1a31      	subs	r1, r6, r0
900052e2:	429d      	cmp	r5, r3
900052e4:	b209      	sxth	r1, r1
900052e6:	d0f7      	beq.n	900052d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900052e8:	4620      	mov	r0, r4
900052ea:	462b      	mov	r3, r5
    }
900052ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900052f0:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900052f2:	4b0b      	ldr	r3, [pc, #44]	@ (90005320 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900052f4:	216c      	movs	r1, #108	@ 0x6c
900052f6:	4a0b      	ldr	r2, [pc, #44]	@ (90005324 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900052f8:	480b      	ldr	r0, [pc, #44]	@ (90005328 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900052fa:	f024 ffc9 	bl	9002a290 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900052fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000532c <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90005300:	216d      	movs	r1, #109	@ 0x6d
90005302:	4a08      	ldr	r2, [pc, #32]	@ (90005324 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005304:	4808      	ldr	r0, [pc, #32]	@ (90005328 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90005306:	f024 ffc3 	bl	9002a290 <__assert_func>
9000530a:	bf00      	nop
9000530c:	24023514 	.word	0x24023514
90005310:	24023518 	.word	0x24023518
90005314:	2402351c 	.word	0x2402351c
90005318:	90004559 	.word	0x90004559
9000531c:	90002e19 	.word	0x90002e19
90005320:	9002d240 	.word	0x9002d240
90005324:	9002d284 	.word	0x9002d284
90005328:	9002d2c0 	.word	0x9002d2c0
9000532c:	9002d308 	.word	0x9002d308

90005330 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
90005330:	b570      	push	{r4, r5, r6, lr}
90005332:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
90005334:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90005336:	b1c0      	cbz	r0, 9000536a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90005338:	6802      	ldr	r2, [r0, #0]
9000533a:	4919      	ldr	r1, [pc, #100]	@ (900053a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x70>)
9000533c:	68d3      	ldr	r3, [r2, #12]
9000533e:	428b      	cmp	r3, r1
90005340:	d124      	bne.n	9000538c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x5c>
        return (pobject != 0) && (pmemfun != 0);
90005342:	6843      	ldr	r3, [r0, #4]
90005344:	b18b      	cbz	r3, 9000536a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90005346:	6885      	ldr	r5, [r0, #8]
90005348:	b185      	cbz	r5, 9000536c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
        {
            action->execute(*this);
9000534a:	6892      	ldr	r2, [r2, #8]
9000534c:	4b15      	ldr	r3, [pc, #84]	@ (900053a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
9000534e:	429a      	cmp	r2, r3
90005350:	d122      	bne.n	90005398 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
90005352:	68c2      	ldr	r2, [r0, #12]
90005354:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
90005358:	eb03 0062 	add.w	r0, r3, r2, asr #1
9000535c:	07d3      	lsls	r3, r2, #31
9000535e:	d40e      	bmi.n	9000537e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4e>
90005360:	4621      	mov	r1, r4
90005362:	462b      	mov	r3, r5
        }
    }
90005364:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005368:	4718      	bx	r3
9000536a:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
9000536c:	68c1      	ldr	r1, [r0, #12]
9000536e:	07ce      	lsls	r6, r1, #31
90005370:	d5fb      	bpl.n	9000536a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
90005372:	6892      	ldr	r2, [r2, #8]
90005374:	4e0b      	ldr	r6, [pc, #44]	@ (900053a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
90005376:	42b2      	cmp	r2, r6
90005378:	d10e      	bne.n	90005398 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
9000537a:	eb03 0061 	add.w	r0, r3, r1, asr #1
9000537e:	6803      	ldr	r3, [r0, #0]
90005380:	4621      	mov	r1, r4
90005382:	595d      	ldr	r5, [r3, r5]
90005384:	462b      	mov	r3, r5
    }
90005386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000538a:	4718      	bx	r3
        if (action && action->isValid())
9000538c:	4798      	blx	r3
9000538e:	2800      	cmp	r0, #0
90005390:	d0eb      	beq.n	9000536a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
90005392:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90005394:	6802      	ldr	r2, [r0, #0]
90005396:	e7d8      	b.n	9000534a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
90005398:	4621      	mov	r1, r4
    }
9000539a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
9000539e:	4710      	bx	r2
900053a0:	90005111 	.word	0x90005111
900053a4:	900050ed 	.word	0x900050ed

900053a8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
900053a8:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
900053aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053ae:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
900053b2:	4604      	mov	r4, r0
        iconReleased = newIconReleased;
900053b4:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053b8:	f100 067c 	add.w	r6, r0, #124	@ 0x7c
        iconPressed = newIconPressed;
900053bc:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053be:	2f00      	cmp	r7, #0
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
900053c0:	4615      	mov	r5, r2
        iconPressed = newIconPressed;
900053c2:	f8a0 307a 	strh.w	r3, [r0, #122]	@ 0x7a
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053c6:	4610      	mov	r0, r2
900053c8:	bfb8      	it	lt
900053ca:	3701      	addlt	r7, #1
900053cc:	f015 fbb0 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
900053d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900053d4:	4680      	mov	r8, r0
900053d6:	4628      	mov	r0, r5
900053d8:	f3c7 074f 	ubfx	r7, r7, #1, #16
900053dc:	2b00      	cmp	r3, #0
900053de:	bfb8      	it	lt
900053e0:	3301      	addlt	r3, #1
900053e2:	f3c3 054f 	ubfx	r5, r3, #1, #16
900053e6:	f015 fbd7 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
900053ea:	f1b8 0f00 	cmp.w	r8, #0
        handlePressedUpdated();
900053ee:	6822      	ldr	r2, [r4, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053f0:	bfb8      	it	lt
900053f2:	f108 0801 	addlt.w	r8, r8, #1
900053f6:	2800      	cmp	r0, #0
        handlePressedUpdated();
900053f8:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
900053fc:	bfb8      	it	lt
900053fe:	3001      	addlt	r0, #1
90005400:	eba7 0768 	sub.w	r7, r7, r8, asr #1
90005404:	eba5 0360 	sub.w	r3, r5, r0, asr #1
        rect.x = x;
90005408:	f8a4 7080 	strh.w	r7, [r4, #128]	@ 0x80
        rect.y = y;
9000540c:	f8a4 3082 	strh.w	r3, [r4, #130]	@ 0x82
90005410:	4b15      	ldr	r3, [pc, #84]	@ (90005468 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0xc0>)
90005412:	429a      	cmp	r2, r3
90005414:	d123      	bne.n	9000545e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0xb6>
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005416:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000541a:	b97b      	cbnz	r3, 9000543c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x94>
9000541c:	f104 0178 	add.w	r1, r4, #120	@ 0x78
90005420:	4630      	mov	r0, r6
90005422:	f00f fb15 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005426:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000542a:	b183      	cbz	r3, 9000544e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0xa6>
9000542c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000542e:	f104 0374 	add.w	r3, r4, #116	@ 0x74
90005432:	65e2      	str	r2, [r4, #92]	@ 0x5c
90005434:	681b      	ldr	r3, [r3, #0]
90005436:	6623      	str	r3, [r4, #96]	@ 0x60
    }
90005438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
9000543c:	f104 017a 	add.w	r1, r4, #122	@ 0x7a
90005440:	4630      	mov	r0, r6
90005442:	f00f fb05 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005446:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000544a:	2b00      	cmp	r3, #0
9000544c:	d1ee      	bne.n	9000542c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x84>
9000544e:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005450:	f104 0370 	add.w	r3, r4, #112	@ 0x70
90005454:	65e2      	str	r2, [r4, #92]	@ 0x5c
90005456:	681b      	ldr	r3, [r3, #0]
90005458:	6623      	str	r3, [r4, #96]	@ 0x60
    }
9000545a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        handlePressedUpdated();
9000545e:	4620      	mov	r0, r4
    }
90005460:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
90005464:	4710      	bx	r2
90005466:	bf00      	nop
90005468:	90005155 	.word	0x90005155

9000546c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
9000546c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000546e:	b570      	push	{r4, r5, r6, lr}
90005470:	4614      	mov	r4, r2
90005472:	4e23      	ldr	r6, [pc, #140]	@ (90005500 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
90005474:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005476:	4605      	mov	r5, r0
90005478:	42b2      	cmp	r2, r6
9000547a:	d122      	bne.n	900054c2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
9000547c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
9000547e:	80a9      	strh	r1, [r5, #4]
90005480:	4920      	ldr	r1, [pc, #128]	@ (90005504 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005482:	428a      	cmp	r2, r1
90005484:	d123      	bne.n	900054ce <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005486:	4a20      	ldr	r2, [pc, #128]	@ (90005508 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005488:	b2a4      	uxth	r4, r4
9000548a:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000548c:	6813      	ldr	r3, [r2, #0]
9000548e:	2b00      	cmp	r3, #0
90005490:	d02f      	beq.n	900054f2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
90005492:	491e      	ldr	r1, [pc, #120]	@ (9000550c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90005494:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005496:	8809      	ldrh	r1, [r1, #0]
90005498:	4291      	cmp	r1, r2
9000549a:	d924      	bls.n	900054e6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
9000549c:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900054a0:	4b1b      	ldr	r3, [pc, #108]	@ (90005510 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900054a2:	681b      	ldr	r3, [r3, #0]
900054a4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900054a8:	4a1a      	ldr	r2, [pc, #104]	@ (90005514 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900054aa:	6803      	ldr	r3, [r0, #0]
900054ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900054ae:	4293      	cmp	r3, r2
900054b0:	d117      	bne.n	900054e2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
900054b2:	88c0      	ldrh	r0, [r0, #6]
900054b4:	4b18      	ldr	r3, [pc, #96]	@ (90005518 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900054b6:	1a24      	subs	r4, r4, r0
900054b8:	429e      	cmp	r6, r3
900054ba:	b221      	sxth	r1, r4
900054bc:	d10c      	bne.n	900054d8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
900054be:	80e9      	strh	r1, [r5, #6]
    }
900054c0:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
900054c2:	4790      	blx	r2
        setBaselineY(baselineY);
900054c4:	682b      	ldr	r3, [r5, #0]
900054c6:	490f      	ldr	r1, [pc, #60]	@ (90005504 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900054c8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
900054ca:	428a      	cmp	r2, r1
900054cc:	d0db      	beq.n	90005486 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
900054ce:	4621      	mov	r1, r4
900054d0:	4628      	mov	r0, r5
    }
900054d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
900054d6:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
900054d8:	4628      	mov	r0, r5
900054da:	4633      	mov	r3, r6
    }
900054dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900054e0:	4718      	bx	r3
900054e2:	4798      	blx	r3
900054e4:	e7e6      	b.n	900054b4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900054e6:	4b0d      	ldr	r3, [pc, #52]	@ (9000551c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900054e8:	216d      	movs	r1, #109	@ 0x6d
900054ea:	4a0d      	ldr	r2, [pc, #52]	@ (90005520 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900054ec:	480d      	ldr	r0, [pc, #52]	@ (90005524 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
900054ee:	f024 fecf 	bl	9002a290 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900054f2:	4b0d      	ldr	r3, [pc, #52]	@ (90005528 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
900054f4:	216c      	movs	r1, #108	@ 0x6c
900054f6:	4a0a      	ldr	r2, [pc, #40]	@ (90005520 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900054f8:	480a      	ldr	r0, [pc, #40]	@ (90005524 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
900054fa:	f024 fec9 	bl	9002a290 <__assert_func>
900054fe:	bf00      	nop
90005500:	90002e15 	.word	0x90002e15
90005504:	9000529d 	.word	0x9000529d
90005508:	24023514 	.word	0x24023514
9000550c:	24023518 	.word	0x24023518
90005510:	2402351c 	.word	0x2402351c
90005514:	90004559 	.word	0x90004559
90005518:	90002e19 	.word	0x90002e19
9000551c:	9002d308 	.word	0x9002d308
90005520:	9002d284 	.word	0x9002d284
90005524:	9002d2c0 	.word	0x9002d2c0
90005528:	9002d240 	.word	0x9002d240

9000552c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000552c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000552e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005530:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005532:	bf18      	it	ne
90005534:	2201      	movne	r2, #1
        return pressed;
90005536:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000553a:	460d      	mov	r5, r1
9000553c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000553e:	42b2      	cmp	r2, r6
90005540:	d004      	beq.n	9000554c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90005542:	b116      	cbz	r6, 9000554a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005544:	792b      	ldrb	r3, [r5, #4]
90005546:	2b01      	cmp	r3, #1
90005548:	d00e      	beq.n	90005568 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000554a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000554c:	fab3 f383 	clz	r3, r3
90005550:	095b      	lsrs	r3, r3, #5
90005552:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
        handlePressedUpdated();
90005556:	6803      	ldr	r3, [r0, #0]
90005558:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
9000555c:	4798      	blx	r3
            invalidate();
9000555e:	6823      	ldr	r3, [r4, #0]
90005560:	4620      	mov	r0, r4
90005562:	695b      	ldr	r3, [r3, #20]
90005564:	4798      	blx	r3
90005566:	e7ec      	b.n	90005542 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005568:	6823      	ldr	r3, [r4, #0]
9000556a:	4a1e      	ldr	r2, [pc, #120]	@ (900055e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb8>)
9000556c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
90005570:	4293      	cmp	r3, r2
90005572:	d128      	bne.n	900055c6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x9a>
        if (action && action->isValid())
90005574:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90005576:	2800      	cmp	r0, #0
90005578:	d0e7      	beq.n	9000554a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000557a:	6802      	ldr	r2, [r0, #0]
9000557c:	491a      	ldr	r1, [pc, #104]	@ (900055e8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xbc>)
9000557e:	68d3      	ldr	r3, [r2, #12]
90005580:	428b      	cmp	r3, r1
90005582:	d124      	bne.n	900055ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa2>
        return (pobject != 0) && (pmemfun != 0);
90005584:	6843      	ldr	r3, [r0, #4]
90005586:	2b00      	cmp	r3, #0
90005588:	d0df      	beq.n	9000554a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000558a:	6885      	ldr	r5, [r0, #8]
9000558c:	b17d      	cbz	r5, 900055ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x82>
            action->execute(*this);
9000558e:	6892      	ldr	r2, [r2, #8]
90005590:	4b16      	ldr	r3, [pc, #88]	@ (900055ec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005592:	429a      	cmp	r2, r3
90005594:	d121      	bne.n	900055da <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
90005596:	68c2      	ldr	r2, [r0, #12]
90005598:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
9000559c:	eb03 0062 	add.w	r0, r3, r2, asr #1
900055a0:	07d3      	lsls	r3, r2, #31
900055a2:	d40d      	bmi.n	900055c0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x94>
900055a4:	4621      	mov	r1, r4
900055a6:	462b      	mov	r3, r5
    }
900055a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900055ac:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
900055ae:	68c1      	ldr	r1, [r0, #12]
900055b0:	07ce      	lsls	r6, r1, #31
900055b2:	d5ca      	bpl.n	9000554a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900055b4:	6892      	ldr	r2, [r2, #8]
900055b6:	4e0d      	ldr	r6, [pc, #52]	@ (900055ec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
900055b8:	42b2      	cmp	r2, r6
900055ba:	d10e      	bne.n	900055da <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
900055bc:	eb03 0061 	add.w	r0, r3, r1, asr #1
900055c0:	6803      	ldr	r3, [r0, #0]
900055c2:	595d      	ldr	r5, [r3, r5]
900055c4:	e7ee      	b.n	900055a4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900055c6:	4620      	mov	r0, r4
    }
900055c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900055cc:	4718      	bx	r3
        if (action && action->isValid())
900055ce:	4798      	blx	r3
900055d0:	2800      	cmp	r0, #0
900055d2:	d0ba      	beq.n	9000554a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900055d4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900055d6:	6802      	ldr	r2, [r0, #0]
900055d8:	e7d9      	b.n	9000558e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900055da:	4621      	mov	r1, r4
    }
900055dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900055e0:	4710      	bx	r2
900055e2:	bf00      	nop
900055e4:	90005331 	.word	0x90005331
900055e8:	90005111 	.word	0x90005111
900055ec:	900050ed 	.word	0x900050ed

900055f0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
900055f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900055f4:	b093      	sub	sp, #76	@ 0x4c
900055f6:	4604      	mov	r4, r0
        : presenter(0)
900055f8:	f013 fcfa 	bl	90018ff0 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
900055fc:	4ae8      	ldr	r2, [pc, #928]	@ (900059a0 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : Widget(), alpha(255), color(0)
900055fe:	4be9      	ldr	r3, [pc, #932]	@ (900059a4 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
90005600:	2500      	movs	r5, #0
          touchable(false),
90005602:	f44f 7680 	mov.w	r6, #256	@ 0x100
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90005606:	f64f 7aff 	movw	sl, #65535	@ 0xffff
9000560a:	f04f 09ff 	mov.w	r9, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
9000560e:	f8df b3ac 	ldr.w	fp, [pc, #940]	@ 900059bc <_ZN15Screen1ViewBaseC1Ev+0x3cc>
90005612:	6022      	str	r2, [r4, #0]
90005614:	f104 026c 	add.w	r2, r4, #108	@ 0x6c
90005618:	6423      	str	r3, [r4, #64]	@ 0x40
9000561a:	f104 0398 	add.w	r3, r4, #152	@ 0x98
        Image::setBitmap(bmp);
9000561e:	4610      	mov	r0, r2
90005620:	a910      	add	r1, sp, #64	@ 0x40
90005622:	f8a4 6064 	strh.w	r6, [r4, #100]	@ 0x64
        touchable = touch;
90005626:	f240 1801 	movw	r8, #257	@ 0x101
          touchable(false),
9000562a:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
9000562e:	f04f 37ff 	mov.w	r7, #4294967295
        : Widget(), bitmap(bmp), alpha(255)
90005632:	f8a4 a092 	strh.w	sl, [r4, #146]	@ 0x92
90005636:	f884 a094 	strb.w	sl, [r4, #148]	@ 0x94
9000563a:	f8c4 b06c 	str.w	fp, [r4, #108]	@ 0x6c
9000563e:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
90005640:	6465      	str	r5, [r4, #68]	@ 0x44
          cachedAbsX(0),
90005642:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
90005644:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
90005646:	6725      	str	r5, [r4, #112]	@ 0x70
90005648:	f884 9066 	strb.w	r9, [r4, #102]	@ 0x66
9000564c:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
90005650:	f8ad a040 	strh.w	sl, [sp, #64]	@ 0x40
90005654:	9303      	str	r3, [sp, #12]
        Image::setBitmap(bmp);
90005656:	920a      	str	r2, [sp, #40]	@ 0x28
90005658:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
9000565c:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
90005660:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
90005664:	e9c4 551d 	strd	r5, r5, [r4, #116]	@ 0x74
          parent(0),
90005668:	e9c4 551f 	strd	r5, r5, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
9000566c:	e9c4 5521 	strd	r5, r5, [r4, #132]	@ 0x84
90005670:	f00f f9ee 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
90005674:	f64f 7100 	movw	r1, #65280	@ 0xff00
        : T(), up(), down()
90005678:	4bcb      	ldr	r3, [pc, #812]	@ (900059a8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        : Box(), borderColor(0), borderSize(0)
9000567a:	4acc      	ldr	r2, [pc, #816]	@ (900059ac <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
9000567c:	f8a4 10c4 	strh.w	r1, [r4, #196]	@ 0xc4
        : T()
90005680:	f504 718a 	add.w	r1, r4, #276	@ 0x114
90005684:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
90005688:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
        touchable = touch;
9000568c:	f8a4 80bc 	strh.w	r8, [r4, #188]	@ 0xbc
          touchable(false),
90005690:	f8a4 60f0 	strh.w	r6, [r4, #240]	@ 0xf0
90005694:	9102      	str	r1, [sp, #8]
        T::add(borderBox);
90005696:	f104 01cc 	add.w	r1, r4, #204	@ 0xcc
          firstChild(0)
9000569a:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
9000569e:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
900056a2:	f884 90f2 	strb.w	r9, [r4, #242]	@ 0xf2
        : color(col)
900056a6:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
900056aa:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
900056ae:	f8a4 50fc 	strh.w	r5, [r4, #252]	@ 0xfc
        : x(0), y(0), width(0), height(0)
900056b2:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900056b6:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900056ba:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
900056be:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
          nextSibling(0),
900056c2:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
          cachedAbsX(0),
900056c6:	e9c4 553a 	strd	r5, r5, [r4, #232]	@ 0xe8
        : color(0)
900056ca:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
900056ce:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
        rect.x = x;
900056d2:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
900056d6:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
900056da:	9803      	ldr	r0, [sp, #12]
900056dc:	f00b f998 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900056e0:	f504 7ea0 	add.w	lr, r4, #320	@ 0x140
900056e4:	49b2      	ldr	r1, [pc, #712]	@ (900059b0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
900056e6:	f8cd e010 	str.w	lr, [sp, #16]
900056ea:	f10d 0e40 	add.w	lr, sp, #64	@ 0x40
900056ee:	9802      	ldr	r0, [sp, #8]
900056f0:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
900056f4:	4671      	mov	r1, lr
          touchable(false),
900056f6:	f8a4 6138 	strh.w	r6, [r4, #312]	@ 0x138
        : Widget(), bitmap(bmp), alpha(255)
900056fa:	f8c4 b114 	str.w	fp, [r4, #276]	@ 0x114
900056fe:	f8a4 a13a 	strh.w	sl, [r4, #314]	@ 0x13a
90005702:	f8c4 7110 	str.w	r7, [r4, #272]	@ 0x110
90005706:	f884 713c 	strb.w	r7, [r4, #316]	@ 0x13c
9000570a:	f8ad 7040 	strh.w	r7, [sp, #64]	@ 0x40
        : x(0), y(0), width(0), height(0)
9000570e:	e9c4 5546 	strd	r5, r5, [r4, #280]	@ 0x118
90005712:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
          nextSibling(0),
90005716:	e9c4 554a 	strd	r5, r5, [r4, #296]	@ 0x128
          cachedAbsX(0),
9000571a:	e9c4 554c 	strd	r5, r5, [r4, #304]	@ 0x130
        Image::setBitmap(bmp);
9000571e:	f00f f997 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
90005722:	e9dd 1002 	ldrd	r1, r0, [sp, #8]
90005726:	f00b f973 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000572a:	f64f 7c00 	movw	ip, #65280	@ 0xff00
        : T(), up(), down()
9000572e:	4b9e      	ldr	r3, [pc, #632]	@ (900059a8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        : T()
90005730:	f504 70de 	add.w	r0, r4, #444	@ 0x1bc
90005734:	4a9d      	ldr	r2, [pc, #628]	@ (900059ac <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
        T::add(borderBox);
90005736:	f504 71ba 	add.w	r1, r4, #372	@ 0x174
9000573a:	f8a4 c16c 	strh.w	ip, [r4, #364]	@ 0x16c
        : T(), up(), down()
9000573e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
90005742:	f8c4 2174 	str.w	r2, [r4, #372]	@ 0x174
        touchable = touch;
90005746:	f8a4 8164 	strh.w	r8, [r4, #356]	@ 0x164
          touchable(false),
9000574a:	f8a4 6198 	strh.w	r6, [r4, #408]	@ 0x198
9000574e:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
90005752:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
90005756:	f884 919a 	strb.w	r9, [r4, #410]	@ 0x19a
        : color(col)
9000575a:	f8c4 519c 	str.w	r5, [r4, #412]	@ 0x19c
9000575e:	f8c4 51a0 	str.w	r5, [r4, #416]	@ 0x1a0
90005762:	f8a4 51a4 	strh.w	r5, [r4, #420]	@ 0x1a4
90005766:	9001      	str	r0, [sp, #4]
        : x(0), y(0), width(0), height(0)
90005768:	e9c4 5551 	strd	r5, r5, [r4, #324]	@ 0x144
9000576c:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
          nextSibling(0),
90005770:	e9c4 5555 	strd	r5, r5, [r4, #340]	@ 0x154
          cachedAbsX(0),
90005774:	e9c4 5557 	strd	r5, r5, [r4, #348]	@ 0x15c
          nextSibling(0),
90005778:	e9c4 5562 	strd	r5, r5, [r4, #392]	@ 0x188
          cachedAbsX(0),
9000577c:	e9c4 5564 	strd	r5, r5, [r4, #400]	@ 0x190
        : color(0)
90005780:	e9c4 556a 	strd	r5, r5, [r4, #424]	@ 0x1a8
90005784:	e9c4 556c 	strd	r5, r5, [r4, #432]	@ 0x1b0
        rect.x = x;
90005788:	e9c4 555e 	strd	r5, r5, [r4, #376]	@ 0x178
9000578c:	e9c4 5560 	strd	r5, r5, [r4, #384]	@ 0x180
        T::add(borderBox);
90005790:	9804      	ldr	r0, [sp, #16]
90005792:	f00b f93d 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005796:	f504 7ef4 	add.w	lr, r4, #488	@ 0x1e8
9000579a:	4985      	ldr	r1, [pc, #532]	@ (900059b0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
9000579c:	f8cd e014 	str.w	lr, [sp, #20]
900057a0:	f10d 0e40 	add.w	lr, sp, #64	@ 0x40
900057a4:	9801      	ldr	r0, [sp, #4]
900057a6:	f8c4 1140 	str.w	r1, [r4, #320]	@ 0x140
900057aa:	4671      	mov	r1, lr
          touchable(false),
900057ac:	f8a4 61e0 	strh.w	r6, [r4, #480]	@ 0x1e0
        : Widget(), bitmap(bmp), alpha(255)
900057b0:	f8c4 b1bc 	str.w	fp, [r4, #444]	@ 0x1bc
900057b4:	f8a4 a1e2 	strh.w	sl, [r4, #482]	@ 0x1e2
900057b8:	f8c4 71b8 	str.w	r7, [r4, #440]	@ 0x1b8
900057bc:	f884 91e4 	strb.w	r9, [r4, #484]	@ 0x1e4
900057c0:	f8ad a040 	strh.w	sl, [sp, #64]	@ 0x40
        : x(0), y(0), width(0), height(0)
900057c4:	e9c4 5570 	strd	r5, r5, [r4, #448]	@ 0x1c0
900057c8:	e9c4 5572 	strd	r5, r5, [r4, #456]	@ 0x1c8
          nextSibling(0),
900057cc:	e9c4 5574 	strd	r5, r5, [r4, #464]	@ 0x1d0
          cachedAbsX(0),
900057d0:	e9c4 5576 	strd	r5, r5, [r4, #472]	@ 0x1d8
        Image::setBitmap(bmp);
900057d4:	f00f f93c 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
900057d8:	9901      	ldr	r1, [sp, #4]
900057da:	9804      	ldr	r0, [sp, #16]
900057dc:	f00b f918 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057e0:	f64f 7c00 	movw	ip, #65280	@ 0xff00
        : T(), up(), down()
900057e4:	4b70      	ldr	r3, [pc, #448]	@ (900059a8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        : T()
900057e6:	f504 7019 	add.w	r0, r4, #612	@ 0x264
900057ea:	4a70      	ldr	r2, [pc, #448]	@ (900059ac <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
        T::add(borderBox);
900057ec:	f504 7107 	add.w	r1, r4, #540	@ 0x21c
900057f0:	f8a4 c214 	strh.w	ip, [r4, #532]	@ 0x214
        : T(), up(), down()
900057f4:	f8c4 31e8 	str.w	r3, [r4, #488]	@ 0x1e8
900057f8:	f8c4 221c 	str.w	r2, [r4, #540]	@ 0x21c
        touchable = touch;
900057fc:	f8a4 820c 	strh.w	r8, [r4, #524]	@ 0x20c
          touchable(false),
90005800:	f8a4 6240 	strh.w	r6, [r4, #576]	@ 0x240
90005804:	f8c4 5210 	str.w	r5, [r4, #528]	@ 0x210
90005808:	f8c4 5218 	str.w	r5, [r4, #536]	@ 0x218
9000580c:	f884 9242 	strb.w	r9, [r4, #578]	@ 0x242
        : color(col)
90005810:	f8c4 5244 	str.w	r5, [r4, #580]	@ 0x244
90005814:	f8c4 5248 	str.w	r5, [r4, #584]	@ 0x248
90005818:	f8a4 524c 	strh.w	r5, [r4, #588]	@ 0x24c
9000581c:	9000      	str	r0, [sp, #0]
        : x(0), y(0), width(0), height(0)
9000581e:	e9c4 557b 	strd	r5, r5, [r4, #492]	@ 0x1ec
90005822:	e9c4 557d 	strd	r5, r5, [r4, #500]	@ 0x1f4
          nextSibling(0),
90005826:	e9c4 557f 	strd	r5, r5, [r4, #508]	@ 0x1fc
          cachedAbsX(0),
9000582a:	e9c4 5581 	strd	r5, r5, [r4, #516]	@ 0x204
          nextSibling(0),
9000582e:	e9c4 558c 	strd	r5, r5, [r4, #560]	@ 0x230
          cachedAbsX(0),
90005832:	e9c4 558e 	strd	r5, r5, [r4, #568]	@ 0x238
        : color(0)
90005836:	e9c4 5594 	strd	r5, r5, [r4, #592]	@ 0x250
9000583a:	e9c4 5596 	strd	r5, r5, [r4, #600]	@ 0x258
        rect.x = x;
9000583e:	e9c4 5588 	strd	r5, r5, [r4, #544]	@ 0x220
90005842:	e9c4 558a 	strd	r5, r5, [r4, #552]	@ 0x228
        T::add(borderBox);
90005846:	9805      	ldr	r0, [sp, #20]
90005848:	f00b f8e2 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000584c:	f504 7e24 	add.w	lr, r4, #656	@ 0x290
90005850:	4957      	ldr	r1, [pc, #348]	@ (900059b0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
90005852:	f8cd e018 	str.w	lr, [sp, #24]
90005856:	f10d 0e40 	add.w	lr, sp, #64	@ 0x40
9000585a:	9800      	ldr	r0, [sp, #0]
9000585c:	f8c4 11e8 	str.w	r1, [r4, #488]	@ 0x1e8
90005860:	4671      	mov	r1, lr
          touchable(false),
90005862:	f8a4 6288 	strh.w	r6, [r4, #648]	@ 0x288
        : Widget(), bitmap(bmp), alpha(255)
90005866:	f8c4 b264 	str.w	fp, [r4, #612]	@ 0x264
9000586a:	f8a4 a28a 	strh.w	sl, [r4, #650]	@ 0x28a
9000586e:	f8c4 7260 	str.w	r7, [r4, #608]	@ 0x260
90005872:	f884 928c 	strb.w	r9, [r4, #652]	@ 0x28c
90005876:	f8ad a040 	strh.w	sl, [sp, #64]	@ 0x40
        : x(0), y(0), width(0), height(0)
9000587a:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
9000587e:	e9c4 559c 	strd	r5, r5, [r4, #624]	@ 0x270
          nextSibling(0),
90005882:	e9c4 559e 	strd	r5, r5, [r4, #632]	@ 0x278
          cachedAbsX(0),
90005886:	e9c4 55a0 	strd	r5, r5, [r4, #640]	@ 0x280
        Image::setBitmap(bmp);
9000588a:	f00f f8e1 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
9000588e:	9900      	ldr	r1, [sp, #0]
90005890:	9805      	ldr	r0, [sp, #20]
90005892:	f00b f8bd 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005896:	f64f 7c00 	movw	ip, #65280	@ 0xff00
        : T(), up(), down()
9000589a:	4b43      	ldr	r3, [pc, #268]	@ (900059a8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        : T()
9000589c:	f504 7043 	add.w	r0, r4, #780	@ 0x30c
900058a0:	4a42      	ldr	r2, [pc, #264]	@ (900059ac <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
        T::add(borderBox);
900058a2:	f504 7131 	add.w	r1, r4, #708	@ 0x2c4
900058a6:	f8a4 c2bc 	strh.w	ip, [r4, #700]	@ 0x2bc
        : T(), up(), down()
900058aa:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
900058ae:	f8c4 22c4 	str.w	r2, [r4, #708]	@ 0x2c4
        touchable = touch;
900058b2:	f8a4 82b4 	strh.w	r8, [r4, #692]	@ 0x2b4
          touchable(false),
900058b6:	f8a4 62e8 	strh.w	r6, [r4, #744]	@ 0x2e8
900058ba:	f8c4 52b8 	str.w	r5, [r4, #696]	@ 0x2b8
900058be:	f8c4 52c0 	str.w	r5, [r4, #704]	@ 0x2c0
900058c2:	f884 92ea 	strb.w	r9, [r4, #746]	@ 0x2ea
        : color(col)
900058c6:	f8c4 52ec 	str.w	r5, [r4, #748]	@ 0x2ec
900058ca:	f8c4 52f0 	str.w	r5, [r4, #752]	@ 0x2f0
900058ce:	f8a4 52f4 	strh.w	r5, [r4, #756]	@ 0x2f4
900058d2:	9007      	str	r0, [sp, #28]
        : x(0), y(0), width(0), height(0)
900058d4:	e9c4 55a5 	strd	r5, r5, [r4, #660]	@ 0x294
900058d8:	e9c4 55a7 	strd	r5, r5, [r4, #668]	@ 0x29c
          nextSibling(0),
900058dc:	e9c4 55a9 	strd	r5, r5, [r4, #676]	@ 0x2a4
          cachedAbsX(0),
900058e0:	e9c4 55ab 	strd	r5, r5, [r4, #684]	@ 0x2ac
          nextSibling(0),
900058e4:	e9c4 55b6 	strd	r5, r5, [r4, #728]	@ 0x2d8
          cachedAbsX(0),
900058e8:	e9c4 55b8 	strd	r5, r5, [r4, #736]	@ 0x2e0
        : color(0)
900058ec:	e9c4 55be 	strd	r5, r5, [r4, #760]	@ 0x2f8
900058f0:	e9c4 55c0 	strd	r5, r5, [r4, #768]	@ 0x300
        rect.x = x;
900058f4:	e9c4 55b2 	strd	r5, r5, [r4, #712]	@ 0x2c8
900058f8:	e9c4 55b4 	strd	r5, r5, [r4, #720]	@ 0x2d0
        T::add(borderBox);
900058fc:	9806      	ldr	r0, [sp, #24]
900058fe:	f00b f887 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005902:	492b      	ldr	r1, [pc, #172]	@ (900059b0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
          touchable(false),
90005904:	f8a4 6330 	strh.w	r6, [r4, #816]	@ 0x330
90005908:	f8c4 1290 	str.w	r1, [r4, #656]	@ 0x290
9000590c:	a910      	add	r1, sp, #64	@ 0x40
        : Widget(), bitmap(bmp), alpha(255)
9000590e:	f8a4 a332 	strh.w	sl, [r4, #818]	@ 0x332
90005912:	f884 9334 	strb.w	r9, [r4, #820]	@ 0x334
90005916:	f8ad a040 	strh.w	sl, [sp, #64]	@ 0x40
9000591a:	e9c4 7bc2 	strd	r7, fp, [r4, #776]	@ 0x308
        Image::setBitmap(bmp);
9000591e:	f8dd b01c 	ldr.w	fp, [sp, #28]
        : x(0), y(0), width(0), height(0)
90005922:	e9c4 55c4 	strd	r5, r5, [r4, #784]	@ 0x310
90005926:	4658      	mov	r0, fp
90005928:	e9c4 55c6 	strd	r5, r5, [r4, #792]	@ 0x318
          nextSibling(0),
9000592c:	e9c4 55c8 	strd	r5, r5, [r4, #800]	@ 0x320
          cachedAbsX(0),
90005930:	e9c4 55ca 	strd	r5, r5, [r4, #808]	@ 0x328
90005934:	f00f f88c 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
90005938:	4659      	mov	r1, fp
9000593a:	9806      	ldr	r0, [sp, #24]
9000593c:	f00b f868 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : typedTextId(id)
90005940:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 900059c0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>
        : TextAreaWithWildcardBase(), wc1(0)
90005944:	4b1b      	ldr	r3, [pc, #108]	@ (900059b4 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
90005946:	f64f 7c00 	movw	ip, #65280	@ 0xff00
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000594a:	4a1b      	ldr	r2, [pc, #108]	@ (900059b8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
9000594c:	f204 4194 	addw	r1, r4, #1172	@ 0x494
          touchable(false),
90005950:	f8a4 635c 	strh.w	r6, [r4, #860]	@ 0x35c
90005954:	f8a4 a364 	strh.w	sl, [r4, #868]	@ 0x364
90005958:	f8a4 63a8 	strh.w	r6, [r4, #936]	@ 0x3a8
9000595c:	f8a4 a3b0 	strh.w	sl, [r4, #944]	@ 0x3b0
90005960:	f8c4 3338 	str.w	r3, [r4, #824]	@ 0x338
        : color(col)
90005964:	f8c4 5368 	str.w	r5, [r4, #872]	@ 0x368
90005968:	f8a4 536c 	strh.w	r5, [r4, #876]	@ 0x36c
9000596c:	f8c4 936e 	str.w	r9, [r4, #878]	@ 0x36e
90005970:	f8c4 53b4 	str.w	r5, [r4, #948]	@ 0x3b4
90005974:	f8a4 53b8 	strh.w	r5, [r4, #952]	@ 0x3b8
90005978:	f8c4 b360 	str.w	fp, [r4, #864]	@ 0x360
9000597c:	f8c4 b3ac 	str.w	fp, [r4, #940]	@ 0x3ac
        : x(0), y(0), width(0), height(0)
90005980:	e9c4 55cf 	strd	r5, r5, [r4, #828]	@ 0x33c
90005984:	e9c4 55d1 	strd	r5, r5, [r4, #836]	@ 0x344
          nextSibling(0),
90005988:	e9c4 55d3 	strd	r5, r5, [r4, #844]	@ 0x34c
          cachedAbsX(0),
9000598c:	e9c4 55d5 	strd	r5, r5, [r4, #852]	@ 0x354
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005990:	e9c4 57dd 	strd	r5, r7, [r4, #884]	@ 0x374
90005994:	e9c4 55df 	strd	r5, r5, [r4, #892]	@ 0x37c
        : x(0), y(0), width(0), height(0)
90005998:	e9c4 55e2 	strd	r5, r5, [r4, #904]	@ 0x388
9000599c:	e012      	b.n	900059c4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
9000599e:	bf00      	nop
900059a0:	9002d620 	.word	0x9002d620
900059a4:	9002e58c 	.word	0x9002e58c
900059a8:	9002d430 	.word	0x9002d430
900059ac:	9002e5f4 	.word	0x9002e5f4
900059b0:	9002d4cc 	.word	0x9002d4cc
900059b4:	9002d3a0 	.word	0x9002d3a0
900059b8:	9002e4fc 	.word	0x9002e4fc
900059bc:	9002e65c 	.word	0x9002e65c
900059c0:	9002cc58 	.word	0x9002cc58
900059c4:	e9c4 55e4 	strd	r5, r5, [r4, #912]	@ 0x390
          nextSibling(0),
900059c8:	e9c4 55e6 	strd	r5, r5, [r4, #920]	@ 0x398
          cachedAbsX(0),
900059cc:	e9c4 55e8 	strd	r5, r5, [r4, #928]	@ 0x3a0
900059d0:	f8c4 93ba 	str.w	r9, [r4, #954]	@ 0x3ba
900059d4:	f8c4 3384 	str.w	r3, [r4, #900]	@ 0x384
        : T(), up(), down()
900059d8:	4bd3      	ldr	r3, [pc, #844]	@ (90005d28 <_ZN15Screen1ViewBaseC1Ev+0x738>)
          touchable(false),
900059da:	f8a4 63f4 	strh.w	r6, [r4, #1012]	@ 0x3f4
900059de:	f8c4 23d0 	str.w	r2, [r4, #976]	@ 0x3d0
900059e2:	f8a4 a3fc 	strh.w	sl, [r4, #1020]	@ 0x3fc
900059e6:	f8a4 643c 	strh.w	r6, [r4, #1084]	@ 0x43c
900059ea:	f8c4 b3f8 	str.w	fp, [r4, #1016]	@ 0x3f8
        : color(col)
900059ee:	f8c4 5400 	str.w	r5, [r4, #1024]	@ 0x400
900059f2:	f8a4 5404 	strh.w	r5, [r4, #1028]	@ 0x404
900059f6:	f8c4 9406 	str.w	r9, [r4, #1030]	@ 0x406
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900059fa:	f8c4 540c 	str.w	r5, [r4, #1036]	@ 0x40c
900059fe:	f8c4 7410 	str.w	r7, [r4, #1040]	@ 0x410
              text(0)
90005a02:	f8c4 5414 	str.w	r5, [r4, #1044]	@ 0x414
        : x(0), y(0), width(0), height(0)
90005a06:	f8c4 541c 	str.w	r5, [r4, #1052]	@ 0x41c
90005a0a:	f8c4 5420 	str.w	r5, [r4, #1056]	@ 0x420
90005a0e:	f8c4 5424 	str.w	r5, [r4, #1060]	@ 0x424
90005a12:	f8c4 5428 	str.w	r5, [r4, #1064]	@ 0x428
          parent(0),
90005a16:	f8c4 542c 	str.w	r5, [r4, #1068]	@ 0x42c
          nextSibling(0),
90005a1a:	f8c4 5430 	str.w	r5, [r4, #1072]	@ 0x430
          nextDrawChainElement(0),
90005a1e:	f8c4 5434 	str.w	r5, [r4, #1076]	@ 0x434
          cachedAbsX(0),
90005a22:	f8c4 5438 	str.w	r5, [r4, #1080]	@ 0x438
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a26:	e9c4 57f0 	strd	r5, r7, [r4, #960]	@ 0x3c0
90005a2a:	e9c4 55f2 	strd	r5, r5, [r4, #968]	@ 0x3c8
        : x(0), y(0), width(0), height(0)
90005a2e:	e9c4 55f5 	strd	r5, r5, [r4, #980]	@ 0x3d4
90005a32:	e9c4 55f7 	strd	r5, r5, [r4, #988]	@ 0x3dc
          nextSibling(0),
90005a36:	e9c4 55f9 	strd	r5, r5, [r4, #996]	@ 0x3e4
          cachedAbsX(0),
90005a3a:	e9c4 55fb 	strd	r5, r5, [r4, #1004]	@ 0x3ec
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a3e:	f8c4 2418 	str.w	r2, [r4, #1048]	@ 0x418
90005a42:	4aba      	ldr	r2, [pc, #744]	@ (90005d2c <_ZN15Screen1ViewBaseC1Ev+0x73c>)
90005a44:	f8c4 3460 	str.w	r3, [r4, #1120]	@ 0x460
90005a48:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
90005a4c:	f8c4 2494 	str.w	r2, [r4, #1172]	@ 0x494
        T::add(text);
90005a50:	f504 629b 	add.w	r2, r4, #1240	@ 0x4d8
90005a54:	f8a4 c48c 	strh.w	ip, [r4, #1164]	@ 0x48c
        T::add(borderBox);
90005a58:	4618      	mov	r0, r3
        touchable = touch;
90005a5a:	f8a4 8484 	strh.w	r8, [r4, #1156]	@ 0x484
    __background.setPosition(0, 0, 480, 272);
90005a5e:	f104 0840 	add.w	r8, r4, #64	@ 0x40
90005a62:	f8a4 a444 	strh.w	sl, [r4, #1092]	@ 0x444
          touchable(false),
90005a66:	f8a4 64b8 	strh.w	r6, [r4, #1208]	@ 0x4b8
90005a6a:	f8c4 b440 	str.w	fp, [r4, #1088]	@ 0x440
        : color(col)
90005a6e:	f8c4 5448 	str.w	r5, [r4, #1096]	@ 0x448
90005a72:	f8a4 544c 	strh.w	r5, [r4, #1100]	@ 0x44c
90005a76:	f8c4 944e 	str.w	r9, [r4, #1102]	@ 0x44e
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a7a:	f8c4 5454 	str.w	r5, [r4, #1108]	@ 0x454
90005a7e:	f8c4 7458 	str.w	r7, [r4, #1112]	@ 0x458
              text(0)
90005a82:	f8c4 545c 	str.w	r5, [r4, #1116]	@ 0x45c
        : x(0), y(0), width(0), height(0)
90005a86:	f8c4 5464 	str.w	r5, [r4, #1124]	@ 0x464
90005a8a:	f8c4 5468 	str.w	r5, [r4, #1128]	@ 0x468
90005a8e:	f8c4 546c 	str.w	r5, [r4, #1132]	@ 0x46c
90005a92:	f8c4 5470 	str.w	r5, [r4, #1136]	@ 0x470
          parent(0),
90005a96:	f8c4 5474 	str.w	r5, [r4, #1140]	@ 0x474
          nextSibling(0),
90005a9a:	f8c4 5478 	str.w	r5, [r4, #1144]	@ 0x478
          nextDrawChainElement(0),
90005a9e:	f8c4 547c 	str.w	r5, [r4, #1148]	@ 0x47c
          cachedAbsX(0),
90005aa2:	f8c4 5480 	str.w	r5, [r4, #1152]	@ 0x480
90005aa6:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
90005aaa:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
          parent(0),
90005aae:	f8c4 54a8 	str.w	r5, [r4, #1192]	@ 0x4a8
          nextSibling(0),
90005ab2:	f8c4 54ac 	str.w	r5, [r4, #1196]	@ 0x4ac
          nextDrawChainElement(0),
90005ab6:	f8c4 54b0 	str.w	r5, [r4, #1200]	@ 0x4b0
          cachedAbsX(0),
90005aba:	f8c4 54b4 	str.w	r5, [r4, #1204]	@ 0x4b4
90005abe:	f884 94ba 	strb.w	r9, [r4, #1210]	@ 0x4ba
        : color(col)
90005ac2:	f8c4 54bc 	str.w	r5, [r4, #1212]	@ 0x4bc
90005ac6:	f8c4 54c0 	str.w	r5, [r4, #1216]	@ 0x4c0
90005aca:	f8a4 54c4 	strh.w	r5, [r4, #1220]	@ 0x4c4
        : color(0)
90005ace:	f8c4 54c8 	str.w	r5, [r4, #1224]	@ 0x4c8
90005ad2:	f8c4 54cc 	str.w	r5, [r4, #1228]	@ 0x4cc
90005ad6:	f8c4 54d0 	str.w	r5, [r4, #1232]	@ 0x4d0
90005ada:	f8c4 54d4 	str.w	r5, [r4, #1236]	@ 0x4d4
        rect.x = x;
90005ade:	f8c4 5498 	str.w	r5, [r4, #1176]	@ 0x498
90005ae2:	f8c4 549c 	str.w	r5, [r4, #1180]	@ 0x49c
90005ae6:	f8c4 54a0 	str.w	r5, [r4, #1184]	@ 0x4a0
90005aea:	f8c4 54a4 	str.w	r5, [r4, #1188]	@ 0x4a4
90005aee:	9209      	str	r2, [sp, #36]	@ 0x24
90005af0:	9308      	str	r3, [sp, #32]
90005af2:	f00a ff8d 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005af6:	4a8e      	ldr	r2, [pc, #568]	@ (90005d30 <_ZN15Screen1ViewBaseC1Ev+0x740>)
        : T()
90005af8:	4b8e      	ldr	r3, [pc, #568]	@ (90005d34 <_ZN15Screen1ViewBaseC1Ev+0x744>)
90005afa:	f8c4 24d8 	str.w	r2, [r4, #1240]	@ 0x4d8
          touchable(false),
90005afe:	f8a4 64fc 	strh.w	r6, [r4, #1276]	@ 0x4fc
        color = newColor;
90005b02:	f04f 467f 	mov.w	r6, #4278190080	@ 0xff000000
90005b06:	f8a4 a504 	strh.w	sl, [r4, #1284]	@ 0x504
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90005b0a:	f104 0a04 	add.w	sl, r4, #4
90005b0e:	f8c4 3460 	str.w	r3, [r4, #1120]	@ 0x460
90005b12:	f8c4 950e 	str.w	r9, [r4, #1294]	@ 0x50e
        : x(0), y(0), width(0), height(0)
90005b16:	f8c4 54dc 	str.w	r5, [r4, #1244]	@ 0x4dc
90005b1a:	f8c4 54e0 	str.w	r5, [r4, #1248]	@ 0x4e0
90005b1e:	f8c4 54e4 	str.w	r5, [r4, #1252]	@ 0x4e4
90005b22:	f8c4 54e8 	str.w	r5, [r4, #1256]	@ 0x4e8
          parent(0),
90005b26:	f8c4 54ec 	str.w	r5, [r4, #1260]	@ 0x4ec
          nextSibling(0),
90005b2a:	f8c4 54f0 	str.w	r5, [r4, #1264]	@ 0x4f0
          nextDrawChainElement(0),
90005b2e:	f8c4 54f4 	str.w	r5, [r4, #1268]	@ 0x4f4
          cachedAbsX(0),
90005b32:	f8c4 54f8 	str.w	r5, [r4, #1272]	@ 0x4f8
90005b36:	f8c4 b500 	str.w	fp, [r4, #1280]	@ 0x500
        : color(col)
90005b3a:	f8c4 5508 	str.w	r5, [r4, #1288]	@ 0x508
90005b3e:	f8a4 550c 	strh.w	r5, [r4, #1292]	@ 0x50c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b42:	f8c4 5514 	str.w	r5, [r4, #1300]	@ 0x514
90005b46:	f8c4 7518 	str.w	r7, [r4, #1304]	@ 0x518
              text(0)
90005b4a:	f8c4 551c 	str.w	r5, [r4, #1308]	@ 0x51c
        : color(0)
90005b4e:	f8c4 5520 	str.w	r5, [r4, #1312]	@ 0x520
90005b52:	f8c4 5524 	str.w	r5, [r4, #1316]	@ 0x524
        T::add(text);
90005b56:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
90005b5a:	f00a ff59 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
90005b5e:	4b76      	ldr	r3, [pc, #472]	@ (90005d38 <_ZN15Screen1ViewBaseC1Ev+0x748>)
        setWidth(width);
90005b60:	4640      	mov	r0, r8
90005b62:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
90005b66:	f8c4 3550 	str.w	r3, [r4, #1360]	@ 0x550
90005b6a:	4b74      	ldr	r3, [pc, #464]	@ (90005d3c <_ZN15Screen1ViewBaseC1Ev+0x74c>)
90005b6c:	f8c4 4554 	str.w	r4, [r4, #1364]	@ 0x554
90005b70:	f8c4 3558 	str.w	r3, [r4, #1368]	@ 0x558
90005b74:	f8c4 555c 	str.w	r5, [r4, #1372]	@ 0x55c
        rect.x = x;
90005b78:	6465      	str	r5, [r4, #68]	@ 0x44
        setWidth(width);
90005b7a:	f7fd f94f 	bl	90002e1c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
90005b7e:	4640      	mov	r0, r8
90005b80:	f44f 7188 	mov.w	r1, #272	@ 0x110
90005b84:	f7fd f94c 	bl	90002e20 <_ZN8touchgfx8Drawable9setHeightEs>
90005b88:	4641      	mov	r1, r8
90005b8a:	4650      	mov	r0, sl
90005b8c:	66a6      	str	r6, [r4, #104]	@ 0x68
90005b8e:	f00a ff3f 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_IMAX_POSTER_GREEN_480X272_ID));
90005b92:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90005b96:	2304      	movs	r3, #4
90005b98:	a910      	add	r1, sp, #64	@ 0x40
90005b9a:	4640      	mov	r0, r8
        rect.x = x;
90005b9c:	6725      	str	r5, [r4, #112]	@ 0x70
90005b9e:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
90005ba2:	f00e ff55 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ba6:	4641      	mov	r1, r8
90005ba8:	4650      	mov	r0, sl
90005baa:	f00a ff31 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bae:	f04f 1232 	mov.w	r2, #3276850	@ 0x320032
        handlePressedUpdated();
90005bb2:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
90005bb6:	f8c4 50d0 	str.w	r5, [r4, #208]	@ 0xd0
90005bba:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90005bbe:	f8c4 20d4 	str.w	r2, [r4, #212]	@ 0xd4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005bc2:	2205      	movs	r2, #5
        up = colorReleased;
90005bc4:	f8c4 7100 	str.w	r7, [r4, #256]	@ 0x100
90005bc8:	f8a4 20fc 	strh.w	r2, [r4, #252]	@ 0xfc
        down = colorPressed;
90005bcc:	4a5c      	ldr	r2, [pc, #368]	@ (90005d40 <_ZN15Screen1ViewBaseC1Ev+0x750>)
        borderDown = borderColorPressed;
90005bce:	e9c4 6642 	strd	r6, r6, [r4, #264]	@ 0x108
        down = colorPressed;
90005bd2:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
90005bd6:	f504 7274 	add.w	r2, r4, #976	@ 0x3d0
90005bda:	4e5a      	ldr	r6, [pc, #360]	@ (90005d44 <_ZN15Screen1ViewBaseC1Ev+0x754>)
90005bdc:	920a      	str	r2, [sp, #40]	@ 0x28
90005bde:	f504 6283 	add.w	r2, r4, #1048	@ 0x418
90005be2:	42b3      	cmp	r3, r6
90005be4:	920b      	str	r2, [sp, #44]	@ 0x2c
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
90005be6:	f040 83e0 	bne.w	900063aa <_ZN15Screen1ViewBaseC1Ev+0xdba>
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005bea:	f894 30c4 	ldrb.w	r3, [r4, #196]	@ 0xc4
90005bee:	2b00      	cmp	r3, #0
90005bf0:	f040 837b 	bne.w	900062ea <_ZN15Screen1ViewBaseC1Ev+0xcfa>
90005bf4:	f504 7188 	add.w	r1, r4, #272	@ 0x110
90005bf8:	9802      	ldr	r0, [sp, #8]
90005bfa:	f00e ff29 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005bfe:	f894 30c4 	ldrb.w	r3, [r4, #196]	@ 0xc4
90005c02:	2b00      	cmp	r3, #0
90005c04:	f000 837b 	beq.w	900062fe <_ZN15Screen1ViewBaseC1Ev+0xd0e>
90005c08:	f8d4 2104 	ldr.w	r2, [r4, #260]	@ 0x104
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c0c:	f504 7386 	add.w	r3, r4, #268	@ 0x10c
90005c10:	f8c4 20f4 	str.w	r2, [r4, #244]	@ 0xf4
90005c14:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005c16:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
90005c1a:	2303      	movs	r3, #3
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005c1c:	f9b4 50a0 	ldrsh.w	r5, [r4, #160]	@ 0xa0
90005c20:	a810      	add	r0, sp, #64	@ 0x40
90005c22:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
90005c26:	2d00      	cmp	r5, #0
        iconPressed = newIconPressed;
90005c28:	f8a4 3112 	strh.w	r3, [r4, #274]	@ 0x112
        iconReleased = newIconReleased;
90005c2c:	f04f 0302 	mov.w	r3, #2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005c30:	bfb8      	it	lt
90005c32:	3501      	addlt	r5, #1
        iconReleased = newIconReleased;
90005c34:	f8a4 3110 	strh.w	r3, [r4, #272]	@ 0x110
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005c38:	f014 ff7a 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90005c3c:	f9b4 70a2 	ldrsh.w	r7, [r4, #162]	@ 0xa2
90005c40:	4680      	mov	r8, r0
90005c42:	a810      	add	r0, sp, #64	@ 0x40
90005c44:	2f00      	cmp	r7, #0
90005c46:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005c4a:	bfb8      	it	lt
90005c4c:	3701      	addlt	r7, #1
90005c4e:	f014 ffa3 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005c52:	f1b8 0f00 	cmp.w	r8, #0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005c56:	f894 30c4 	ldrb.w	r3, [r4, #196]	@ 0xc4
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005c5a:	f3c7 074f 	ubfx	r7, r7, #1, #16
90005c5e:	bfb8      	it	lt
90005c60:	f108 0801 	addlt.w	r8, r8, #1
90005c64:	2800      	cmp	r0, #0
90005c66:	bfb8      	it	lt
90005c68:	3001      	addlt	r0, #1
90005c6a:	eba5 0568 	sub.w	r5, r5, r8, asr #1
90005c6e:	eba7 0760 	sub.w	r7, r7, r0, asr #1
90005c72:	f8a4 5118 	strh.w	r5, [r4, #280]	@ 0x118
        rect.y = y;
90005c76:	f8a4 711a 	strh.w	r7, [r4, #282]	@ 0x11a
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005c7a:	2b00      	cmp	r3, #0
90005c7c:	f000 8361 	beq.w	90006342 <_ZN15Screen1ViewBaseC1Ev+0xd52>
90005c80:	f504 7189 	add.w	r1, r4, #274	@ 0x112
90005c84:	9802      	ldr	r0, [sp, #8]
90005c86:	f00e fee3 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005c8a:	f894 30c4 	ldrb.w	r3, [r4, #196]	@ 0xc4
90005c8e:	2b00      	cmp	r3, #0
90005c90:	f000 8352 	beq.w	90006338 <_ZN15Screen1ViewBaseC1Ev+0xd48>
90005c94:	f8d4 2104 	ldr.w	r2, [r4, #260]	@ 0x104
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c98:	f504 7386 	add.w	r3, r4, #268	@ 0x10c
90005c9c:	f8c4 20f4 	str.w	r2, [r4, #244]	@ 0xf4
        rect.x = x;
90005ca0:	f04f 1532 	mov.w	r5, #3276850	@ 0x320032
90005ca4:	681b      	ldr	r3, [r3, #0]
90005ca6:	2700      	movs	r7, #0
    minutes_inc.setAction(flexButtonCallback);
90005ca8:	f504 69aa 	add.w	r9, r4, #1360	@ 0x550
90005cac:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
90005cb0:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
90005cb4:	f04f 130a 	mov.w	r3, #655370	@ 0xa000a
90005cb8:	9903      	ldr	r1, [sp, #12]
90005cba:	4650      	mov	r0, sl
90005cbc:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005cc0:	f8c4 7118 	str.w	r7, [r4, #280]	@ 0x118
        action = &callback;
90005cc4:	f8c4 90c8 	str.w	r9, [r4, #200]	@ 0xc8
90005cc8:	f00a fea2 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        handlePressedUpdated();
90005ccc:	f8d4 3140 	ldr.w	r3, [r4, #320]	@ 0x140
90005cd0:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        borderUp = borderColorReleased;
90005cd4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        borderDown = borderColorPressed;
90005cd8:	e9c4 336c 	strd	r3, r3, [r4, #432]	@ 0x1b0
        borderSize = size;
90005cdc:	2305      	movs	r3, #5
90005cde:	42b2      	cmp	r2, r6
90005ce0:	e9c4 755e 	strd	r7, r5, [r4, #376]	@ 0x178
90005ce4:	f8a4 31a4 	strh.w	r3, [r4, #420]	@ 0x1a4
        down = colorPressed;
90005ce8:	f04f 35ff 	mov.w	r5, #4294967295
90005cec:	4b14      	ldr	r3, [pc, #80]	@ (90005d40 <_ZN15Screen1ViewBaseC1Ev+0x750>)
90005cee:	e9c4 536a 	strd	r5, r3, [r4, #424]	@ 0x1a8
90005cf2:	f040 835d 	bne.w	900063b0 <_ZN15Screen1ViewBaseC1Ev+0xdc0>
90005cf6:	f894 316c 	ldrb.w	r3, [r4, #364]	@ 0x16c
90005cfa:	2b00      	cmp	r3, #0
90005cfc:	f000 8336 	beq.w	9000636c <_ZN15Screen1ViewBaseC1Ev+0xd7c>
90005d00:	f504 71dd 	add.w	r1, r4, #442	@ 0x1ba
90005d04:	9801      	ldr	r0, [sp, #4]
90005d06:	f00e fea3 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005d0a:	f894 316c 	ldrb.w	r3, [r4, #364]	@ 0x16c
90005d0e:	2b00      	cmp	r3, #0
90005d10:	f000 8327 	beq.w	90006362 <_ZN15Screen1ViewBaseC1Ev+0xd72>
90005d14:	f8d4 21ac 	ldr.w	r2, [r4, #428]	@ 0x1ac
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005d18:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
90005d1c:	f8c4 219c 	str.w	r2, [r4, #412]	@ 0x19c
90005d20:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005d22:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
90005d26:	e00f      	b.n	90005d48 <_ZN15Screen1ViewBaseC1Ev+0x758>
90005d28:	9002d430 	.word	0x9002d430
90005d2c:	9002e5f4 	.word	0x9002e5f4
90005d30:	9002e4fc 	.word	0x9002e4fc
90005d34:	9002d56c 	.word	0x9002d56c
90005d38:	9002d608 	.word	0x9002d608
90005d3c:	900051fd 	.word	0x900051fd
90005d40:	ff9b9d9e 	.word	0xff9b9d9e
90005d44:	90005155 	.word	0x90005155
90005d48:	2301      	movs	r3, #1
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d4a:	f9b4 5148 	ldrsh.w	r5, [r4, #328]	@ 0x148
90005d4e:	a810      	add	r0, sp, #64	@ 0x40
90005d50:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
        iconPressed = newIconPressed;
90005d54:	f8a4 31ba 	strh.w	r3, [r4, #442]	@ 0x1ba
        iconReleased = newIconReleased;
90005d58:	2300      	movs	r3, #0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d5a:	429d      	cmp	r5, r3
        iconReleased = newIconReleased;
90005d5c:	f8a4 31b8 	strh.w	r3, [r4, #440]	@ 0x1b8
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d60:	bfb8      	it	lt
90005d62:	3501      	addlt	r5, #1
90005d64:	f014 fee4 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90005d68:	f9b4 714a 	ldrsh.w	r7, [r4, #330]	@ 0x14a
90005d6c:	4680      	mov	r8, r0
90005d6e:	a810      	add	r0, sp, #64	@ 0x40
90005d70:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005d74:	2f00      	cmp	r7, #0
90005d76:	bfb8      	it	lt
90005d78:	3701      	addlt	r7, #1
90005d7a:	f014 ff0d 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005d7e:	f1b8 0f00 	cmp.w	r8, #0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005d82:	f894 316c 	ldrb.w	r3, [r4, #364]	@ 0x16c
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d86:	f3c7 074f 	ubfx	r7, r7, #1, #16
90005d8a:	bfb8      	it	lt
90005d8c:	f108 0801 	addlt.w	r8, r8, #1
90005d90:	2800      	cmp	r0, #0
90005d92:	bfb8      	it	lt
90005d94:	3001      	addlt	r0, #1
90005d96:	eba5 0568 	sub.w	r5, r5, r8, asr #1
90005d9a:	eba7 0760 	sub.w	r7, r7, r0, asr #1
90005d9e:	f8a4 51c0 	strh.w	r5, [r4, #448]	@ 0x1c0
        rect.y = y;
90005da2:	f8a4 71c2 	strh.w	r7, [r4, #450]	@ 0x1c2
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005da6:	2b00      	cmp	r3, #0
90005da8:	f000 82c3 	beq.w	90006332 <_ZN15Screen1ViewBaseC1Ev+0xd42>
90005dac:	f504 71dd 	add.w	r1, r4, #442	@ 0x1ba
90005db0:	9801      	ldr	r0, [sp, #4]
90005db2:	f00e fe4d 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005db6:	f894 316c 	ldrb.w	r3, [r4, #364]	@ 0x16c
90005dba:	2b00      	cmp	r3, #0
90005dbc:	f000 82b4 	beq.w	90006328 <_ZN15Screen1ViewBaseC1Ev+0xd38>
90005dc0:	f8d4 21ac 	ldr.w	r2, [r4, #428]	@ 0x1ac
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005dc4:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
90005dc8:	f8c4 219c 	str.w	r2, [r4, #412]	@ 0x19c
        rect.x = x;
90005dcc:	2700      	movs	r7, #0
90005dce:	681b      	ldr	r3, [r3, #0]
90005dd0:	f04f 1532 	mov.w	r5, #3276850	@ 0x320032
90005dd4:	4650      	mov	r0, sl
90005dd6:	9904      	ldr	r1, [sp, #16]
90005dd8:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
90005ddc:	4bda      	ldr	r3, [pc, #872]	@ (90006148 <_ZN15Screen1ViewBaseC1Ev+0xb58>)
90005dde:	f8c4 9170 	str.w	r9, [r4, #368]	@ 0x170
90005de2:	f8c4 71c0 	str.w	r7, [r4, #448]	@ 0x1c0
90005de6:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
90005dea:	f00a fe11 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        handlePressedUpdated();
90005dee:	f8d4 31e8 	ldr.w	r3, [r4, #488]	@ 0x1e8
        down = colorPressed;
90005df2:	f04f 30ff 	mov.w	r0, #4294967295
        handlePressedUpdated();
90005df6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        borderUp = borderColorReleased;
90005dfa:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        borderDown = borderColorPressed;
90005dfe:	e9c4 3396 	strd	r3, r3, [r4, #600]	@ 0x258
        borderSize = size;
90005e02:	2305      	movs	r3, #5
90005e04:	42b2      	cmp	r2, r6
90005e06:	f8a4 324c 	strh.w	r3, [r4, #588]	@ 0x24c
        down = colorPressed;
90005e0a:	4bd0      	ldr	r3, [pc, #832]	@ (9000614c <_ZN15Screen1ViewBaseC1Ev+0xb5c>)
90005e0c:	e9c4 7588 	strd	r7, r5, [r4, #544]	@ 0x220
90005e10:	e9c4 0394 	strd	r0, r3, [r4, #592]	@ 0x250
90005e14:	f040 82c6 	bne.w	900063a4 <_ZN15Screen1ViewBaseC1Ev+0xdb4>
90005e18:	f894 3214 	ldrb.w	r3, [r4, #532]	@ 0x214
90005e1c:	2b00      	cmp	r3, #0
90005e1e:	f000 82ad 	beq.w	9000637c <_ZN15Screen1ViewBaseC1Ev+0xd8c>
90005e22:	f204 2162 	addw	r1, r4, #610	@ 0x262
90005e26:	9800      	ldr	r0, [sp, #0]
90005e28:	f00e fe12 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005e2c:	f894 3214 	ldrb.w	r3, [r4, #532]	@ 0x214
90005e30:	2b00      	cmp	r3, #0
90005e32:	f000 829e 	beq.w	90006372 <_ZN15Screen1ViewBaseC1Ev+0xd82>
90005e36:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e3a:	f504 7317 	add.w	r3, r4, #604	@ 0x25c
90005e3e:	f8c4 2244 	str.w	r2, [r4, #580]	@ 0x244
90005e42:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005e44:	f8c4 3248 	str.w	r3, [r4, #584]	@ 0x248
90005e48:	2303      	movs	r3, #3
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005e4a:	f9b4 51f0 	ldrsh.w	r5, [r4, #496]	@ 0x1f0
90005e4e:	a810      	add	r0, sp, #64	@ 0x40
90005e50:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
90005e54:	2d00      	cmp	r5, #0
        iconPressed = newIconPressed;
90005e56:	f8a4 3262 	strh.w	r3, [r4, #610]	@ 0x262
        iconReleased = newIconReleased;
90005e5a:	f04f 0302 	mov.w	r3, #2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005e5e:	bfb8      	it	lt
90005e60:	3501      	addlt	r5, #1
        iconReleased = newIconReleased;
90005e62:	f8a4 3260 	strh.w	r3, [r4, #608]	@ 0x260
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005e66:	f014 fe63 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90005e6a:	f9b4 71f2 	ldrsh.w	r7, [r4, #498]	@ 0x1f2
90005e6e:	4680      	mov	r8, r0
90005e70:	a810      	add	r0, sp, #64	@ 0x40
90005e72:	2f00      	cmp	r7, #0
90005e74:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005e78:	bfb8      	it	lt
90005e7a:	3701      	addlt	r7, #1
90005e7c:	f014 fe8c 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005e80:	f1b8 0f00 	cmp.w	r8, #0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005e84:	f894 3214 	ldrb.w	r3, [r4, #532]	@ 0x214
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005e88:	f3c7 074f 	ubfx	r7, r7, #1, #16
90005e8c:	bfb8      	it	lt
90005e8e:	f108 0801 	addlt.w	r8, r8, #1
90005e92:	2800      	cmp	r0, #0
90005e94:	bfb8      	it	lt
90005e96:	3001      	addlt	r0, #1
90005e98:	eba5 0568 	sub.w	r5, r5, r8, asr #1
90005e9c:	eba7 0760 	sub.w	r7, r7, r0, asr #1
90005ea0:	f8a4 5268 	strh.w	r5, [r4, #616]	@ 0x268
        rect.y = y;
90005ea4:	f8a4 726a 	strh.w	r7, [r4, #618]	@ 0x26a
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005ea8:	2b00      	cmp	r3, #0
90005eaa:	f000 823a 	beq.w	90006322 <_ZN15Screen1ViewBaseC1Ev+0xd32>
90005eae:	f204 2162 	addw	r1, r4, #610	@ 0x262
90005eb2:	9800      	ldr	r0, [sp, #0]
90005eb4:	f00e fdcc 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005eb8:	f894 3214 	ldrb.w	r3, [r4, #532]	@ 0x214
90005ebc:	2b00      	cmp	r3, #0
90005ebe:	f000 822b 	beq.w	90006318 <_ZN15Screen1ViewBaseC1Ev+0xd28>
90005ec2:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005ec6:	f504 7317 	add.w	r3, r4, #604	@ 0x25c
90005eca:	f8c4 2244 	str.w	r2, [r4, #580]	@ 0x244
        rect.x = x;
90005ece:	2700      	movs	r7, #0
90005ed0:	681b      	ldr	r3, [r3, #0]
90005ed2:	f04f 1532 	mov.w	r5, #3276850	@ 0x320032
90005ed6:	9905      	ldr	r1, [sp, #20]
90005ed8:	4650      	mov	r0, sl
90005eda:	f8c4 3248 	str.w	r3, [r4, #584]	@ 0x248
90005ede:	4b9c      	ldr	r3, [pc, #624]	@ (90006150 <_ZN15Screen1ViewBaseC1Ev+0xb60>)
90005ee0:	f8c4 9218 	str.w	r9, [r4, #536]	@ 0x218
90005ee4:	f8c4 7268 	str.w	r7, [r4, #616]	@ 0x268
90005ee8:	e9c4 357b 	strd	r3, r5, [r4, #492]	@ 0x1ec
90005eec:	f00a fd90 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        handlePressedUpdated();
90005ef0:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
        down = colorPressed;
90005ef4:	f04f 31ff 	mov.w	r1, #4294967295
        handlePressedUpdated();
90005ef8:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        borderUp = borderColorReleased;
90005efc:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        borderDown = borderColorPressed;
90005f00:	e9c4 33c0 	strd	r3, r3, [r4, #768]	@ 0x300
        borderSize = size;
90005f04:	2305      	movs	r3, #5
90005f06:	42b2      	cmp	r2, r6
90005f08:	f8a4 32f4 	strh.w	r3, [r4, #756]	@ 0x2f4
        down = colorPressed;
90005f0c:	4b8f      	ldr	r3, [pc, #572]	@ (9000614c <_ZN15Screen1ViewBaseC1Ev+0xb5c>)
90005f0e:	e9c4 75b2 	strd	r7, r5, [r4, #712]	@ 0x2c8
90005f12:	e9c4 13be 	strd	r1, r3, [r4, #760]	@ 0x2f8
90005f16:	f040 8242 	bne.w	9000639e <_ZN15Screen1ViewBaseC1Ev+0xdae>
90005f1a:	f894 32bc 	ldrb.w	r3, [r4, #700]	@ 0x2bc
90005f1e:	2b00      	cmp	r3, #0
90005f20:	f000 821c 	beq.w	9000635c <_ZN15Screen1ViewBaseC1Ev+0xd6c>
90005f24:	f204 310a 	addw	r1, r4, #778	@ 0x30a
90005f28:	9807      	ldr	r0, [sp, #28]
90005f2a:	f00e fd91 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005f2e:	f894 32bc 	ldrb.w	r3, [r4, #700]	@ 0x2bc
90005f32:	2b00      	cmp	r3, #0
90005f34:	f000 820d 	beq.w	90006352 <_ZN15Screen1ViewBaseC1Ev+0xd62>
90005f38:	f8d4 22fc 	ldr.w	r2, [r4, #764]	@ 0x2fc
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005f3c:	f504 7341 	add.w	r3, r4, #772	@ 0x304
90005f40:	f8c4 22ec 	str.w	r2, [r4, #748]	@ 0x2ec
90005f44:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005f46:	f8c4 32f0 	str.w	r3, [r4, #752]	@ 0x2f0
90005f4a:	2301      	movs	r3, #1
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005f4c:	f9b4 5298 	ldrsh.w	r5, [r4, #664]	@ 0x298
90005f50:	a810      	add	r0, sp, #64	@ 0x40
90005f52:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
        iconPressed = newIconPressed;
90005f56:	f8a4 330a 	strh.w	r3, [r4, #778]	@ 0x30a
        iconReleased = newIconReleased;
90005f5a:	2300      	movs	r3, #0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005f5c:	429d      	cmp	r5, r3
        iconReleased = newIconReleased;
90005f5e:	f8a4 3308 	strh.w	r3, [r4, #776]	@ 0x308
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005f62:	bfb8      	it	lt
90005f64:	3501      	addlt	r5, #1
90005f66:	f014 fde3 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90005f6a:	f9b4 629a 	ldrsh.w	r6, [r4, #666]	@ 0x29a
90005f6e:	4607      	mov	r7, r0
90005f70:	a810      	add	r0, sp, #64	@ 0x40
90005f72:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005f76:	2e00      	cmp	r6, #0
90005f78:	bfb8      	it	lt
90005f7a:	3601      	addlt	r6, #1
90005f7c:	f014 fe0c 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005f80:	2f00      	cmp	r7, #0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005f82:	f894 32bc 	ldrb.w	r3, [r4, #700]	@ 0x2bc
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005f86:	f3c6 064f 	ubfx	r6, r6, #1, #16
90005f8a:	bfb8      	it	lt
90005f8c:	3701      	addlt	r7, #1
90005f8e:	2800      	cmp	r0, #0
90005f90:	bfb8      	it	lt
90005f92:	3001      	addlt	r0, #1
90005f94:	eba5 0567 	sub.w	r5, r5, r7, asr #1
90005f98:	eba6 0660 	sub.w	r6, r6, r0, asr #1
90005f9c:	f8a4 5310 	strh.w	r5, [r4, #784]	@ 0x310
        rect.y = y;
90005fa0:	f8a4 6312 	strh.w	r6, [r4, #786]	@ 0x312
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005fa4:	2b00      	cmp	r3, #0
90005fa6:	f000 81b4 	beq.w	90006312 <_ZN15Screen1ViewBaseC1Ev+0xd22>
90005faa:	f204 310a 	addw	r1, r4, #778	@ 0x30a
90005fae:	9807      	ldr	r0, [sp, #28]
90005fb0:	f00e fd4e 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
90005fb4:	f894 32bc 	ldrb.w	r3, [r4, #700]	@ 0x2bc
90005fb8:	2b00      	cmp	r3, #0
90005fba:	f000 81a5 	beq.w	90006308 <_ZN15Screen1ViewBaseC1Ev+0xd18>
90005fbe:	f8d4 22fc 	ldr.w	r2, [r4, #764]	@ 0x2fc
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005fc2:	f504 7341 	add.w	r3, r4, #772	@ 0x304
90005fc6:	f8c4 22ec 	str.w	r2, [r4, #748]	@ 0x2ec
        rect.x = x;
90005fca:	2600      	movs	r6, #0
90005fcc:	681b      	ldr	r3, [r3, #0]
90005fce:	4650      	mov	r0, sl
90005fd0:	4a60      	ldr	r2, [pc, #384]	@ (90006154 <_ZN15Screen1ViewBaseC1Ev+0xb64>)
    minutes_set.setPosition(65, 10, 50, 50);
90005fd2:	f504 754e 	add.w	r5, r4, #824	@ 0x338
90005fd6:	f8c4 32f0 	str.w	r3, [r4, #752]	@ 0x2f0
90005fda:	f04f 1332 	mov.w	r3, #3276850	@ 0x320032
90005fde:	9906      	ldr	r1, [sp, #24]
90005fe0:	f8c4 92c0 	str.w	r9, [r4, #704]	@ 0x2c0
90005fe4:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
        setWidthHeight(width, height);
90005fe8:	f8df 8188 	ldr.w	r8, [pc, #392]	@ 90006174 <_ZN15Screen1ViewBaseC1Ev+0xb84>
        rect.x = x;
90005fec:	e9c4 23a5 	strd	r2, r3, [r4, #660]	@ 0x294
90005ff0:	f00a fd0e 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ff4:	4a58      	ldr	r2, [pc, #352]	@ (90006158 <_ZN15Screen1ViewBaseC1Ev+0xb68>)
        setX(x);
90005ff6:	f8d4 3338 	ldr.w	r3, [r4, #824]	@ 0x338
        setWidth(width);
90005ffa:	2132      	movs	r1, #50	@ 0x32
90005ffc:	4628      	mov	r0, r5
90005ffe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
90006000:	f8c4 233c 	str.w	r2, [r4, #828]	@ 0x33c
        setWidth(width);
90006004:	4798      	blx	r3
        setHeight(height);
90006006:	f8d4 3338 	ldr.w	r3, [r4, #824]	@ 0x338
9000600a:	2132      	movs	r1, #50	@ 0x32
9000600c:	4628      	mov	r0, r5
9000600e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90006010:	4798      	blx	r3
        boundingArea = calculateBoundingArea();
90006012:	f8d4 3338 	ldr.w	r3, [r4, #824]	@ 0x338
        color = newColor;
90006016:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        linespace = space;
9000601a:	f8a4 636c 	strh.w	r6, [r4, #876]	@ 0x36c
        boundingArea = calculateBoundingArea();
9000601e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
90006022:	f8c4 2368 	str.w	r2, [r4, #872]	@ 0x368
        boundingArea = calculateBoundingArea();
90006026:	4543      	cmp	r3, r8
90006028:	f040 81ae 	bne.w	90006388 <_ZN15Screen1ViewBaseC1Ev+0xd98>
9000602c:	f04f 33ff 	mov.w	r3, #4294967295
90006030:	f8c4 6374 	str.w	r6, [r4, #884]	@ 0x374
90006034:	f8c4 637c 	str.w	r6, [r4, #892]	@ 0x37c
90006038:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
    Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W0S3).getText());
9000603c:	f504 63a5 	add.w	r3, r4, #1320	@ 0x528
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006040:	4f46      	ldr	r7, [pc, #280]	@ (9000615c <_ZN15Screen1ViewBaseC1Ev+0xb6c>)
90006042:	9300      	str	r3, [sp, #0]
90006044:	683b      	ldr	r3, [r7, #0]
90006046:	2b00      	cmp	r3, #0
90006048:	f000 81c9 	beq.w	900063de <_ZN15Screen1ViewBaseC1Ev+0xdee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000604c:	4b44      	ldr	r3, [pc, #272]	@ (90006160 <_ZN15Screen1ViewBaseC1Ev+0xb70>)
9000604e:	881b      	ldrh	r3, [r3, #0]
90006050:	2b0b      	cmp	r3, #11
90006052:	f240 81be 	bls.w	900063d2 <_ZN15Screen1ViewBaseC1Ev+0xde2>
        return texts->getText(typedTextId);
90006056:	4b43      	ldr	r3, [pc, #268]	@ (90006164 <_ZN15Screen1ViewBaseC1Ev+0xb74>)
90006058:	210b      	movs	r1, #11
    sessions_set.setPosition(365, 10, 50, 50);
9000605a:	f504 7661 	add.w	r6, r4, #900	@ 0x384
9000605e:	6818      	ldr	r0, [r3, #0]
90006060:	f000 ff3c 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W0S3).getText());
90006064:	4a40      	ldr	r2, [pc, #256]	@ (90006168 <_ZN15Screen1ViewBaseC1Ev+0xb78>)
90006066:	4603      	mov	r3, r0
90006068:	210a      	movs	r1, #10
9000606a:	9800      	ldr	r0, [sp, #0]
9000606c:	f014 fca6 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
90006070:	9b00      	ldr	r3, [sp, #0]
    minutes_set.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TDHS));
90006072:	a910      	add	r1, sp, #64	@ 0x40
90006074:	4628      	mov	r0, r5
90006076:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
        : typedTextId(id)
9000607a:	230c      	movs	r3, #12
9000607c:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
90006080:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
90006084:	f00e fb88 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90006088:	4629      	mov	r1, r5
9000608a:	4650      	mov	r0, sl
9000608c:	f00a fcc0 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006090:	4a36      	ldr	r2, [pc, #216]	@ (9000616c <_ZN15Screen1ViewBaseC1Ev+0xb7c>)
        setX(x);
90006092:	f8d4 3384 	ldr.w	r3, [r4, #900]	@ 0x384
        setWidth(width);
90006096:	2132      	movs	r1, #50	@ 0x32
90006098:	4630      	mov	r0, r6
9000609a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
9000609c:	f8c4 2388 	str.w	r2, [r4, #904]	@ 0x388
        setWidth(width);
900060a0:	4798      	blx	r3
        setHeight(height);
900060a2:	f8d4 3384 	ldr.w	r3, [r4, #900]	@ 0x384
900060a6:	2132      	movs	r1, #50	@ 0x32
900060a8:	4630      	mov	r0, r6
900060aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900060ac:	4798      	blx	r3
900060ae:	f8d4 3384 	ldr.w	r3, [r4, #900]	@ 0x384
900060b2:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        color = newColor;
900060b6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900060ba:	4542      	cmp	r2, r8
900060bc:	f8c4 33b4 	str.w	r3, [r4, #948]	@ 0x3b4
        linespace = space;
900060c0:	f04f 0300 	mov.w	r3, #0
900060c4:	f8a4 33b8 	strh.w	r3, [r4, #952]	@ 0x3b8
        boundingArea = calculateBoundingArea();
900060c8:	f040 8175 	bne.w	900063b6 <_ZN15Screen1ViewBaseC1Ev+0xdc6>
900060cc:	f8c4 33c0 	str.w	r3, [r4, #960]	@ 0x3c0
900060d0:	f8c4 33c8 	str.w	r3, [r4, #968]	@ 0x3c8
900060d4:	f04f 33ff 	mov.w	r3, #4294967295
900060d8:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900060dc:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ODQZ).getText());
900060de:	f204 553c 	addw	r5, r4, #1340	@ 0x53c
900060e2:	2b00      	cmp	r3, #0
900060e4:	f000 817b 	beq.w	900063de <_ZN15Screen1ViewBaseC1Ev+0xdee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900060e8:	4b1d      	ldr	r3, [pc, #116]	@ (90006160 <_ZN15Screen1ViewBaseC1Ev+0xb70>)
900060ea:	881b      	ldrh	r3, [r3, #0]
900060ec:	2b09      	cmp	r3, #9
900060ee:	f240 8170 	bls.w	900063d2 <_ZN15Screen1ViewBaseC1Ev+0xde2>
        return texts->getText(typedTextId);
900060f2:	4b1c      	ldr	r3, [pc, #112]	@ (90006164 <_ZN15Screen1ViewBaseC1Ev+0xb74>)
900060f4:	2109      	movs	r1, #9
        linespace = space;
900060f6:	2700      	movs	r7, #0
900060f8:	6818      	ldr	r0, [r3, #0]
900060fa:	f000 feef 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900060fe:	4a1a      	ldr	r2, [pc, #104]	@ (90006168 <_ZN15Screen1ViewBaseC1Ev+0xb78>)
90006100:	4603      	mov	r3, r0
90006102:	210a      	movs	r1, #10
90006104:	4628      	mov	r0, r5
90006106:	f014 fc59 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
9000610a:	230a      	movs	r3, #10
    sessions_set.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZHRF));
9000610c:	4630      	mov	r0, r6
9000610e:	a910      	add	r1, sp, #64	@ 0x40
90006110:	f8c4 53cc 	str.w	r5, [r4, #972]	@ 0x3cc
        boundingArea = calculateBoundingArea();
90006114:	ad0c      	add	r5, sp, #48	@ 0x30
90006116:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9000611a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
9000611e:	f00e fb3b 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90006122:	4631      	mov	r1, r6
90006124:	4650      	mov	r0, sl
90006126:	f00a fc73 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
9000612a:	f04f 467f 	mov.w	r6, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
9000612e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90006132:	4628      	mov	r0, r5
        rect.x = x;
90006134:	4b0e      	ldr	r3, [pc, #56]	@ (90006170 <_ZN15Screen1ViewBaseC1Ev+0xb80>)
90006136:	4641      	mov	r1, r8
        color = newColor;
90006138:	f8c4 6400 	str.w	r6, [r4, #1024]	@ 0x400
9000613c:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
        linespace = space;
90006140:	f8a4 7404 	strh.w	r7, [r4, #1028]	@ 0x404
90006144:	e018      	b.n	90006178 <_ZN15Screen1ViewBaseC1Ev+0xb88>
90006146:	bf00      	nop
90006148:	000a0078 	.word	0x000a0078
9000614c:	ff9b9d9e 	.word	0xff9b9d9e
90006150:	000a0136 	.word	0x000a0136
90006154:	000a01a4 	.word	0x000a01a4
90006158:	000a0041 	.word	0x000a0041
9000615c:	24023514 	.word	0x24023514
90006160:	24023518 	.word	0x24023518
90006164:	24023520 	.word	0x24023520
90006168:	9002d394 	.word	0x9002d394
9000616c:	000a016d 	.word	0x000a016d
90006170:	003c000f 	.word	0x003c000f
90006174:	90005051 	.word	0x90005051
        boundingArea = calculateBoundingArea();
90006178:	f00e f866 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000617c:	4643      	mov	r3, r8
9000617e:	2208      	movs	r2, #8
90006180:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
90006184:	333c      	adds	r3, #60	@ 0x3c
90006186:	f8ad 2044 	strh.w	r2, [sp, #68]	@ 0x44
9000618a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000618e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BODE));
90006192:	4640      	mov	r0, r8
90006194:	a910      	add	r1, sp, #64	@ 0x40
90006196:	f00e faff 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000619a:	4641      	mov	r1, r8
9000619c:	4650      	mov	r0, sl
9000619e:	f00a fc37 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900061a2:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
900061a6:	4b91      	ldr	r3, [pc, #580]	@ (900063ec <_ZN15Screen1ViewBaseC1Ev+0xdfc>)
900061a8:	4628      	mov	r0, r5
900061aa:	4641      	mov	r1, r8
        color = newColor;
900061ac:	f8c4 6448 	str.w	r6, [r4, #1096]	@ 0x448
900061b0:	f8c4 341c 	str.w	r3, [r4, #1052]	@ 0x41c
        linespace = space;
900061b4:	f8a4 744c 	strh.w	r7, [r4, #1100]	@ 0x44c
        boundingArea = calculateBoundingArea();
900061b8:	f00e f846 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900061bc:	2207      	movs	r2, #7
900061be:	4643      	mov	r3, r8
900061c0:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
900061c4:	f8ad 2044 	strh.w	r2, [sp, #68]	@ 0x44
900061c8:	333c      	adds	r3, #60	@ 0x3c
900061ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900061ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GHFH));
900061d2:	a910      	add	r1, sp, #64	@ 0x40
900061d4:	4640      	mov	r0, r8
900061d6:	f00e fadf 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900061da:	4641      	mov	r1, r8
900061dc:	4650      	mov	r0, sl
900061de:	f00a fc17 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        handlePressedUpdated();
900061e2:	f8d4 3460 	ldr.w	r3, [r4, #1120]	@ 0x460
900061e6:	4882      	ldr	r0, [pc, #520]	@ (900063f0 <_ZN15Screen1ViewBaseC1Ev+0xe00>)
900061e8:	f8d3 108c 	ldr.w	r1, [r3, #140]	@ 0x8c
900061ec:	4b81      	ldr	r3, [pc, #516]	@ (900063f4 <_ZN15Screen1ViewBaseC1Ev+0xe04>)
        down = colorPressed;
900061ee:	4a82      	ldr	r2, [pc, #520]	@ (900063f8 <_ZN15Screen1ViewBaseC1Ev+0xe08>)
900061f0:	4281      	cmp	r1, r0
900061f2:	f8c4 349c 	str.w	r3, [r4, #1180]	@ 0x49c
        borderSize = size;
900061f6:	f04f 0305 	mov.w	r3, #5
900061fa:	f8c4 7498 	str.w	r7, [r4, #1176]	@ 0x498
900061fe:	f8a4 34c4 	strh.w	r3, [r4, #1220]	@ 0x4c4
        up = colorReleased;
90006202:	f04f 33ff 	mov.w	r3, #4294967295
        borderUp = borderColorReleased;
90006206:	f8c4 64d0 	str.w	r6, [r4, #1232]	@ 0x4d0
        borderDown = borderColorPressed;
9000620a:	f8c4 64d4 	str.w	r6, [r4, #1236]	@ 0x4d4
        up = colorReleased;
9000620e:	f8c4 34c8 	str.w	r3, [r4, #1224]	@ 0x4c8
        down = colorPressed;
90006212:	f8c4 24cc 	str.w	r2, [r4, #1228]	@ 0x4cc
90006216:	f040 80d9 	bne.w	900063cc <_ZN15Screen1ViewBaseC1Ev+0xddc>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
9000621a:	f894 148c 	ldrb.w	r1, [r4, #1164]	@ 0x48c
9000621e:	2900      	cmp	r1, #0
90006220:	f000 80af 	beq.w	90006382 <_ZN15Screen1ViewBaseC1Ev+0xd92>
90006224:	4613      	mov	r3, r2
90006226:	f8d4 2524 	ldr.w	r2, [r4, #1316]	@ 0x524
9000622a:	f8c4 34bc 	str.w	r3, [r4, #1212]	@ 0x4bc
        borderColor = colorBorder;
9000622e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        color = newColor;
90006232:	f8c4 2508 	str.w	r2, [r4, #1288]	@ 0x508
90006236:	f8c4 34c0 	str.w	r3, [r4, #1216]	@ 0x4c0
        text.setTypedText(t);
9000623a:	9e09      	ldr	r6, [sp, #36]	@ 0x24
9000623c:	2306      	movs	r3, #6
9000623e:	a910      	add	r1, sp, #64	@ 0x40
90006240:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
90006244:	4630      	mov	r0, r6
90006246:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9000624a:	f00e faa5 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.width = width;
9000624e:	f8b4 3468 	ldrh.w	r3, [r4, #1128]	@ 0x468
        boundingArea = calculateBoundingArea();
90006252:	4631      	mov	r1, r6
90006254:	4628      	mov	r0, r5
90006256:	f8a4 34e0 	strh.w	r3, [r4, #1248]	@ 0x4e0
        return rect.height;
9000625a:	f9b4 746a 	ldrsh.w	r7, [r4, #1130]	@ 0x46a
9000625e:	f00d fff3 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90006262:	4633      	mov	r3, r6
90006264:	363c      	adds	r6, #60	@ 0x3c
90006266:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000626a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000626e:	4619      	mov	r1, r3
90006270:	4628      	mov	r0, r5
        rect.height = height;
90006272:	f8a4 74e2 	strh.w	r7, [r4, #1250]	@ 0x4e2
90006276:	4698      	mov	r8, r3
        rect.x = x;
90006278:	2700      	movs	r7, #0
9000627a:	f00d ffe5 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        setX(x);
9000627e:	f8d4 34d8 	ldr.w	r3, [r4, #1240]	@ 0x4d8
90006282:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        setWidth(width);
90006286:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90006288:	e886 0007 	stmia.w	r6, {r0, r1, r2}
9000628c:	21b4      	movs	r1, #180	@ 0xb4
9000628e:	4640      	mov	r0, r8
        rect.x = x;
90006290:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
        setWidth(width);
90006294:	4798      	blx	r3
        setHeight(height);
90006296:	f8d4 34d8 	ldr.w	r3, [r4, #1240]	@ 0x4d8
9000629a:	4640      	mov	r0, r8
9000629c:	2132      	movs	r1, #50	@ 0x32
9000629e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900062a0:	4798      	blx	r3
        colorReleased = newColorReleased;
900062a2:	4b56      	ldr	r3, [pc, #344]	@ (900063fc <_ZN15Screen1ViewBaseC1Ev+0xe0c>)
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
900062a4:	f894 248c 	ldrb.w	r2, [r4, #1164]	@ 0x48c
        colorReleased = newColorReleased;
900062a8:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
        colorPressed = newColorPressed;
900062ac:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
        color = newColor;
900062b0:	f8c4 3508 	str.w	r3, [r4, #1288]	@ 0x508
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
900062b4:	2a00      	cmp	r2, #0
900062b6:	d047      	beq.n	90006348 <_ZN15Screen1ViewBaseC1Ev+0xd58>
    virtual void handlePressedUpdated()
900062b8:	f8d4 24cc 	ldr.w	r2, [r4, #1228]	@ 0x4cc
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900062bc:	f204 43d4 	addw	r3, r4, #1236	@ 0x4d4
900062c0:	f8c4 24bc 	str.w	r2, [r4, #1212]	@ 0x4bc
900062c4:	4650      	mov	r0, sl
900062c6:	681b      	ldr	r3, [r3, #0]
900062c8:	9908      	ldr	r1, [sp, #32]
900062ca:	f8c4 34c0 	str.w	r3, [r4, #1216]	@ 0x4c0
        rect.x = x;
900062ce:	4b4c      	ldr	r3, [pc, #304]	@ (90006400 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
900062d0:	f8c4 9490 	str.w	r9, [r4, #1168]	@ 0x490
900062d4:	f8c4 3464 	str.w	r3, [r4, #1124]	@ 0x464
900062d8:	4b46      	ldr	r3, [pc, #280]	@ (900063f4 <_ZN15Screen1ViewBaseC1Ev+0xe04>)
900062da:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
900062de:	f00a fb97 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900062e2:	4620      	mov	r0, r4
900062e4:	b013      	add	sp, #76	@ 0x4c
900062e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900062ea:	f504 7189 	add.w	r1, r4, #274	@ 0x112
900062ee:	9802      	ldr	r0, [sp, #8]
900062f0:	f00e fbae 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setColor(T::getPressed() ? down : up);
900062f4:	f894 30c4 	ldrb.w	r3, [r4, #196]	@ 0xc4
900062f8:	2b00      	cmp	r3, #0
900062fa:	f47f ac85 	bne.w	90005c08 <_ZN15Screen1ViewBaseC1Ev+0x618>
900062fe:	f8d4 2100 	ldr.w	r2, [r4, #256]	@ 0x100
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006302:	f504 7384 	add.w	r3, r4, #264	@ 0x108
90006306:	e483      	b.n	90005c10 <_ZN15Screen1ViewBaseC1Ev+0x620>
90006308:	f8d4 22f8 	ldr.w	r2, [r4, #760]	@ 0x2f8
9000630c:	f504 7340 	add.w	r3, r4, #768	@ 0x300
90006310:	e659      	b.n	90005fc6 <_ZN15Screen1ViewBaseC1Ev+0x9d6>
90006312:	f504 7142 	add.w	r1, r4, #776	@ 0x308
90006316:	e64a      	b.n	90005fae <_ZN15Screen1ViewBaseC1Ev+0x9be>
90006318:	f8d4 2250 	ldr.w	r2, [r4, #592]	@ 0x250
9000631c:	f504 7316 	add.w	r3, r4, #600	@ 0x258
90006320:	e5d3      	b.n	90005eca <_ZN15Screen1ViewBaseC1Ev+0x8da>
90006322:	f504 7118 	add.w	r1, r4, #608	@ 0x260
90006326:	e5c4      	b.n	90005eb2 <_ZN15Screen1ViewBaseC1Ev+0x8c2>
90006328:	f8d4 21a8 	ldr.w	r2, [r4, #424]	@ 0x1a8
9000632c:	f504 73d8 	add.w	r3, r4, #432	@ 0x1b0
90006330:	e54a      	b.n	90005dc8 <_ZN15Screen1ViewBaseC1Ev+0x7d8>
90006332:	f504 71dc 	add.w	r1, r4, #440	@ 0x1b8
90006336:	e53b      	b.n	90005db0 <_ZN15Screen1ViewBaseC1Ev+0x7c0>
90006338:	f8d4 2100 	ldr.w	r2, [r4, #256]	@ 0x100
9000633c:	f504 7384 	add.w	r3, r4, #264	@ 0x108
90006340:	e4ac      	b.n	90005c9c <_ZN15Screen1ViewBaseC1Ev+0x6ac>
90006342:	f504 7188 	add.w	r1, r4, #272	@ 0x110
90006346:	e49d      	b.n	90005c84 <_ZN15Screen1ViewBaseC1Ev+0x694>
    virtual void handlePressedUpdated()
90006348:	f8d4 24c8 	ldr.w	r2, [r4, #1224]	@ 0x4c8
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000634c:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
90006350:	e7b6      	b.n	900062c0 <_ZN15Screen1ViewBaseC1Ev+0xcd0>
90006352:	f8d4 22f8 	ldr.w	r2, [r4, #760]	@ 0x2f8
90006356:	f504 7340 	add.w	r3, r4, #768	@ 0x300
9000635a:	e5f1      	b.n	90005f40 <_ZN15Screen1ViewBaseC1Ev+0x950>
9000635c:	f504 7142 	add.w	r1, r4, #776	@ 0x308
90006360:	e5e2      	b.n	90005f28 <_ZN15Screen1ViewBaseC1Ev+0x938>
90006362:	f8d4 21a8 	ldr.w	r2, [r4, #424]	@ 0x1a8
90006366:	f504 73d8 	add.w	r3, r4, #432	@ 0x1b0
9000636a:	e4d7      	b.n	90005d1c <_ZN15Screen1ViewBaseC1Ev+0x72c>
9000636c:	f504 71dc 	add.w	r1, r4, #440	@ 0x1b8
90006370:	e4c8      	b.n	90005d04 <_ZN15Screen1ViewBaseC1Ev+0x714>
90006372:	f8d4 2250 	ldr.w	r2, [r4, #592]	@ 0x250
90006376:	f504 7316 	add.w	r3, r4, #600	@ 0x258
9000637a:	e560      	b.n	90005e3e <_ZN15Screen1ViewBaseC1Ev+0x84e>
9000637c:	f504 7118 	add.w	r1, r4, #608	@ 0x260
90006380:	e551      	b.n	90005e26 <_ZN15Screen1ViewBaseC1Ev+0x836>
90006382:	f8d4 2520 	ldr.w	r2, [r4, #1312]	@ 0x520
90006386:	e750      	b.n	9000622a <_ZN15Screen1ViewBaseC1Ev+0xc3a>
        boundingArea = calculateBoundingArea();
90006388:	ae0c      	add	r6, sp, #48	@ 0x30
9000638a:	4629      	mov	r1, r5
9000638c:	4630      	mov	r0, r6
9000638e:	4798      	blx	r3
90006390:	f504 735d 	add.w	r3, r4, #884	@ 0x374
90006394:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90006398:	e883 0007 	stmia.w	r3, {r0, r1, r2}
9000639c:	e64e      	b.n	9000603c <_ZN15Screen1ViewBaseC1Ev+0xa4c>
        handlePressedUpdated();
9000639e:	9806      	ldr	r0, [sp, #24]
900063a0:	4790      	blx	r2
900063a2:	e5d2      	b.n	90005f4a <_ZN15Screen1ViewBaseC1Ev+0x95a>
900063a4:	9805      	ldr	r0, [sp, #20]
900063a6:	4790      	blx	r2
900063a8:	e54e      	b.n	90005e48 <_ZN15Screen1ViewBaseC1Ev+0x858>
900063aa:	9803      	ldr	r0, [sp, #12]
900063ac:	4798      	blx	r3
900063ae:	e434      	b.n	90005c1a <_ZN15Screen1ViewBaseC1Ev+0x62a>
900063b0:	9804      	ldr	r0, [sp, #16]
900063b2:	4790      	blx	r2
900063b4:	e4c8      	b.n	90005d48 <_ZN15Screen1ViewBaseC1Ev+0x758>
900063b6:	ad0c      	add	r5, sp, #48	@ 0x30
900063b8:	4631      	mov	r1, r6
900063ba:	4628      	mov	r0, r5
900063bc:	4790      	blx	r2
900063be:	f504 7370 	add.w	r3, r4, #960	@ 0x3c0
900063c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900063c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900063ca:	e687      	b.n	900060dc <_ZN15Screen1ViewBaseC1Ev+0xaec>
900063cc:	9808      	ldr	r0, [sp, #32]
900063ce:	4788      	blx	r1
900063d0:	e733      	b.n	9000623a <_ZN15Screen1ViewBaseC1Ev+0xc4a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900063d2:	4b0c      	ldr	r3, [pc, #48]	@ (90006404 <_ZN15Screen1ViewBaseC1Ev+0xe14>)
900063d4:	2161      	movs	r1, #97	@ 0x61
900063d6:	4a0c      	ldr	r2, [pc, #48]	@ (90006408 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
900063d8:	480c      	ldr	r0, [pc, #48]	@ (9000640c <_ZN15Screen1ViewBaseC1Ev+0xe1c>)
900063da:	f023 ff59 	bl	9002a290 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900063de:	4b0c      	ldr	r3, [pc, #48]	@ (90006410 <_ZN15Screen1ViewBaseC1Ev+0xe20>)
900063e0:	2160      	movs	r1, #96	@ 0x60
900063e2:	4a09      	ldr	r2, [pc, #36]	@ (90006408 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
900063e4:	4809      	ldr	r0, [pc, #36]	@ (9000640c <_ZN15Screen1ViewBaseC1Ev+0xe1c>)
900063e6:	f023 ff53 	bl	9002a290 <__assert_func>
900063ea:	bf00      	nop
900063ec:	003c012f 	.word	0x003c012f
900063f0:	900050a9 	.word	0x900050a9
900063f4:	003200b4 	.word	0x003200b4
900063f8:	ff9b9d9e 	.word	0xff9b9d9e
900063fc:	ff0a0a0a 	.word	0xff0a0a0a
90006400:	00880096 	.word	0x00880096
90006404:	9002d308 	.word	0x9002d308
90006408:	9002d348 	.word	0x9002d348
9000640c:	9002d2c0 	.word	0x9002d2c0
90006410:	9002d240 	.word	0x9002d240

90006414 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90006414:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90006416:	4770      	bx	lr

90006418 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return wc2;
    }
90006418:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000641a:	4770      	bx	lr

9000641c <_ZN15Screen2ViewBase9stopTimerEv>:
     * Virtual Action Handlers
     */
    virtual void stopTimer()
    {
        // Override and implement this function in Screen2
    }
9000641c:	4770      	bx	lr
9000641e:	bf00      	nop

90006420 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
90006420:	4770      	bx	lr
90006422:	bf00      	nop

90006424 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006424:	4770      	bx	lr
90006426:	bf00      	nop

90006428 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
90006428:	4770      	bx	lr
9000642a:	bf00      	nop

9000642c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000642c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000642e:	68c3      	ldr	r3, [r0, #12]
90006430:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006434:	f013 0f01 	tst.w	r3, #1
90006438:	eb04 0063 	add.w	r0, r4, r3, asr #1
9000643c:	d004      	beq.n	90006448 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1c>
9000643e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90006442:	f854 300c 	ldr.w	r3, [r4, ip]
90006446:	589a      	ldr	r2, [r3, r2]
    }
90006448:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000644c:	4710      	bx	r2
9000644e:	bf00      	nop

90006450 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006450:	6843      	ldr	r3, [r0, #4]
90006452:	b13b      	cbz	r3, 90006464 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90006454:	6883      	ldr	r3, [r0, #8]
90006456:	b10b      	cbz	r3, 9000645c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90006458:	2001      	movs	r0, #1
    }
9000645a:	4770      	bx	lr
9000645c:	68c0      	ldr	r0, [r0, #12]
9000645e:	f000 0001 	and.w	r0, r0, #1
90006462:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006464:	4618      	mov	r0, r3
90006466:	4770      	bx	lr

90006468 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
90006468:	b510      	push	{r4, lr}
9000646a:	4604      	mov	r4, r0
9000646c:	2150      	movs	r1, #80	@ 0x50
9000646e:	f023 fb96 	bl	90029b9e <_ZdlPvj>
90006472:	4620      	mov	r0, r4
90006474:	bd10      	pop	{r4, pc}
90006476:	bf00      	nop

90006478 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006478:	b510      	push	{r4, lr}
9000647a:	4604      	mov	r4, r0
9000647c:	2110      	movs	r1, #16
9000647e:	f023 fb8e 	bl	90029b9e <_ZdlPvj>
90006482:	4620      	mov	r0, r4
90006484:	bd10      	pop	{r4, pc}
90006486:	bf00      	nop

90006488 <_ZN15Screen2ViewBaseD1Ev>:
Screen2ViewBase::~Screen2ViewBase()
90006488:	4b03      	ldr	r3, [pc, #12]	@ (90006498 <_ZN15Screen2ViewBaseD1Ev+0x10>)
9000648a:	b510      	push	{r4, lr}
9000648c:	4604      	mov	r4, r0
9000648e:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90006490:	f00f f9e4 	bl	9001585c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006494:	4620      	mov	r0, r4
90006496:	bd10      	pop	{r4, pc}
90006498:	9002d710 	.word	0x9002d710

9000649c <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
9000649c:	4b06      	ldr	r3, [pc, #24]	@ (900064b8 <_ZN15Screen2ViewBaseD0Ev+0x1c>)
9000649e:	b510      	push	{r4, lr}
900064a0:	4604      	mov	r4, r0
900064a2:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900064a4:	f00f f9da 	bl	9001585c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900064a8:	f641 61c4 	movw	r1, #7876	@ 0x1ec4
900064ac:	4620      	mov	r0, r4
900064ae:	f023 fb76 	bl	90029b9e <_ZdlPvj>
900064b2:	4620      	mov	r0, r4
900064b4:	bd10      	pop	{r4, pc}
900064b6:	bf00      	nop
900064b8:	9002d710 	.word	0x9002d710

900064bc <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &stop)
900064bc:	f500 72a2 	add.w	r2, r0, #324	@ 0x144
900064c0:	428a      	cmp	r2, r1
900064c2:	d000      	beq.n	900064c6 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa>
900064c4:	4770      	bx	lr
{
900064c6:	b508      	push	{r3, lr}
    {
        //stopTimerInteraction
        //When stop clicked call virtual function
        //Call stopTimer
        stopTimer();
900064c8:	6803      	ldr	r3, [r0, #0]
900064ca:	4a06      	ldr	r2, [pc, #24]	@ (900064e4 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>)
900064cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900064ce:	4293      	cmp	r3, r2
900064d0:	d105      	bne.n	900064de <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900064d2:	f010 febd 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
        //changeScreenInteraction
        //When stop clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenSlideTransitionEast();
    }
}
900064d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenSlideTransitionEast();
900064da:	f7fe bcf1 	b.w	90004ec0 <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv>
        stopTimer();
900064de:	4798      	blx	r3
900064e0:	e7f7      	b.n	900064d2 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
900064e2:	bf00      	nop
900064e4:	9000641d 	.word	0x9000641d

900064e8 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
900064e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900064ec:	b08b      	sub	sp, #44	@ 0x2c
900064ee:	4604      	mov	r4, r0
900064f0:	f012 fd7e 	bl	90018ff0 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
900064f4:	4931      	ldr	r1, [pc, #196]	@ (900065bc <_ZN15Screen2ViewBaseC1Ev+0xd4>)
          touchable(false),
900064f6:	f44f 7280 	mov.w	r2, #256	@ 0x100
900064fa:	2500      	movs	r5, #0
900064fc:	6021      	str	r1, [r4, #0]
900064fe:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : Widget(), alpha(255), color(0)
90006502:	492f      	ldr	r1, [pc, #188]	@ (900065c0 <_ZN15Screen2ViewBaseC1Ev+0xd8>)
90006504:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
90006508:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
9000650c:	f104 0798 	add.w	r7, r4, #152	@ 0x98
90006510:	6421      	str	r1, [r4, #64]	@ 0x40
90006512:	21ff      	movs	r1, #255	@ 0xff
90006514:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
        : Widget(), bitmap(bmp), alpha(255)
90006518:	4a2a      	ldr	r2, [pc, #168]	@ (900065c4 <_ZN15Screen2ViewBaseC1Ev+0xdc>)
9000651a:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
9000651e:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
90006522:	66e2      	str	r2, [r4, #108]	@ 0x6c
90006524:	f884 1066 	strb.w	r1, [r4, #102]	@ 0x66
        Image::setBitmap(bmp);
90006528:	a908      	add	r1, sp, #32
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000652a:	4e27      	ldr	r6, [pc, #156]	@ (900065c8 <_ZN15Screen2ViewBaseC1Ev+0xe0>)
9000652c:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
9000652e:	66a5      	str	r5, [r4, #104]	@ 0x68
90006530:	f8ad 3020 	strh.w	r3, [sp, #32]
90006534:	9001      	str	r0, [sp, #4]
90006536:	9702      	str	r7, [sp, #8]
        : x(0), y(0), width(0), height(0)
90006538:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
9000653c:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90006540:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90006544:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90006548:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
9000654c:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90006550:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90006554:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90006558:	f00e fa7a 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000655c:	4638      	mov	r0, r7
9000655e:	f00c ffb9 	bl	900134d4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainter()
90006562:	4a1a      	ldr	r2, [pc, #104]	@ (900065cc <_ZN15Screen2ViewBaseC1Ev+0xe4>)
90006564:	6833      	ldr	r3, [r6, #0]
90006566:	f104 01e0 	add.w	r1, r4, #224	@ 0xe0
9000656a:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
9000656e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90006572:	f8a4 50e4 	strh.w	r5, [r4, #228]	@ 0xe4
90006576:	9103      	str	r1, [sp, #12]
90006578:	2a00      	cmp	r2, #0
9000657a:	d031      	beq.n	900065e0 <_ZN15Screen2ViewBaseC1Ev+0xf8>
9000657c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000657e:	2800      	cmp	r0, #0
90006580:	f000 82c1 	beq.w	90006b06 <_ZN15Screen2ViewBaseC1Ev+0x61e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006584:	6803      	ldr	r3, [r0, #0]
90006586:	4d12      	ldr	r5, [pc, #72]	@ (900065d0 <_ZN15Screen2ViewBaseC1Ev+0xe8>)
90006588:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000658a:	42aa      	cmp	r2, r5
9000658c:	d035      	beq.n	900065fa <_ZN15Screen2ViewBaseC1Ev+0x112>
9000658e:	4790      	blx	r2
        return auxiliaryLCD;
90006590:	6833      	ldr	r3, [r6, #0]
90006592:	fab0 f680 	clz	r6, r0
90006596:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90006598:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000659a:	b140      	cbz	r0, 900065ae <_ZN15Screen2ViewBaseC1Ev+0xc6>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000659c:	6803      	ldr	r3, [r0, #0]
9000659e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900065a0:	42ab      	cmp	r3, r5
900065a2:	d02a      	beq.n	900065fa <_ZN15Screen2ViewBaseC1Ev+0x112>
900065a4:	4798      	blx	r3
900065a6:	2800      	cmp	r0, #0
900065a8:	bf08      	it	eq
900065aa:	f046 0601 	orreq.w	r6, r6, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900065ae:	bb26      	cbnz	r6, 900065fa <_ZN15Screen2ViewBaseC1Ev+0x112>
900065b0:	4b08      	ldr	r3, [pc, #32]	@ (900065d4 <_ZN15Screen2ViewBaseC1Ev+0xec>)
900065b2:	212c      	movs	r1, #44	@ 0x2c
900065b4:	4a08      	ldr	r2, [pc, #32]	@ (900065d8 <_ZN15Screen2ViewBaseC1Ev+0xf0>)
900065b6:	4809      	ldr	r0, [pc, #36]	@ (900065dc <_ZN15Screen2ViewBaseC1Ev+0xf4>)
900065b8:	f023 fe6a 	bl	9002a290 <__assert_func>
900065bc:	9002d710 	.word	0x9002d710
900065c0:	9002e58c 	.word	0x9002e58c
900065c4:	9002e65c 	.word	0x9002e65c
900065c8:	240234bc 	.word	0x240234bc
900065cc:	9002ca4c 	.word	0x9002ca4c
900065d0:	90002eb9 	.word	0x90002eb9
900065d4:	9002c944 	.word	0x9002c944
900065d8:	9002c9a4 	.word	0x9002c9a4
900065dc:	9002c9e0 	.word	0x9002c9e0
        return instance->lcdRef;
900065e0:	6898      	ldr	r0, [r3, #8]
900065e2:	4ddb      	ldr	r5, [pc, #876]	@ (90006950 <_ZN15Screen2ViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900065e4:	6802      	ldr	r2, [r0, #0]
900065e6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900065e8:	42aa      	cmp	r2, r5
900065ea:	d1d0      	bne.n	9000658e <_ZN15Screen2ViewBaseC1Ev+0xa6>
        return auxiliaryLCD;
900065ec:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900065ee:	b120      	cbz	r0, 900065fa <_ZN15Screen2ViewBaseC1Ev+0x112>
        bool compat = HAL::lcd().framebufferFormat() == format;
900065f0:	6803      	ldr	r3, [r0, #0]
900065f2:	2601      	movs	r6, #1
900065f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900065f6:	42ab      	cmp	r3, r5
900065f8:	d1d4      	bne.n	900065a4 <_ZN15Screen2ViewBaseC1Ev+0xbc>
900065fa:	4bd6      	ldr	r3, [pc, #856]	@ (90006954 <_ZN15Screen2ViewBaseC1Ev+0x46c>)
900065fc:	2500      	movs	r5, #0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900065fe:	f04f 37ff 	mov.w	r7, #4294967295
          touchable(false),
90006602:	f44f 7a80 	mov.w	sl, #256	@ 0x100
90006606:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
9000660a:	3324      	adds	r3, #36	@ 0x24
        : typedTextId(id)
9000660c:	f64f 78ff 	movw	r8, #65535	@ 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006610:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90006614:	4ed0      	ldr	r6, [pc, #832]	@ (90006958 <_ZN15Screen2ViewBaseC1Ev+0x470>)
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
90006616:	49d1      	ldr	r1, [pc, #836]	@ (9000695c <_ZN15Screen2ViewBaseC1Ev+0x474>)
90006618:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
9000661c:	f504 73a2 	add.w	r3, r4, #324	@ 0x144
90006620:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
90006624:	9300      	str	r3, [sp, #0]
        T::add(borderBox);
90006626:	4618      	mov	r0, r3
        : color(col)
90006628:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
9000662c:	469b      	mov	fp, r3
9000662e:	f8a4 5128 	strh.w	r5, [r4, #296]	@ 0x128
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006632:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90006636:	f8c4 5140 	str.w	r5, [r4, #320]	@ 0x140
9000663a:	f8c4 516c 	str.w	r5, [r4, #364]	@ 0x16c
9000663e:	f8c4 611c 	str.w	r6, [r4, #284]	@ 0x11c
90006642:	f8c4 912a 	str.w	r9, [r4, #298]	@ 0x12a
90006646:	f8c4 7134 	str.w	r7, [r4, #308]	@ 0x134
9000664a:	f8a4 a118 	strh.w	sl, [r4, #280]	@ 0x118
9000664e:	f8a4 8120 	strh.w	r8, [r4, #288]	@ 0x120
        : x(0), y(0), width(0), height(0)
90006652:	e9c4 553e 	strd	r5, r5, [r4, #248]	@ 0xf8
90006656:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
          nextSibling(0),
9000665a:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
          cachedAbsX(0),
9000665e:	e9c4 5544 	strd	r5, r5, [r4, #272]	@ 0x110
90006662:	e9c4 554e 	strd	r5, r5, [r4, #312]	@ 0x138
90006666:	e9c4 5552 	strd	r5, r5, [r4, #328]	@ 0x148
9000666a:	e9c4 5554 	strd	r5, r5, [r4, #336]	@ 0x150
          nextSibling(0),
9000666e:	e9c4 5556 	strd	r5, r5, [r4, #344]	@ 0x158
          cachedAbsX(0),
90006672:	e9c4 5558 	strd	r5, r5, [r4, #352]	@ 0x160
90006676:	f8c4 10f4 	str.w	r1, [r4, #244]	@ 0xf4
        : pressed(false), alpha(255), action(0)
9000667a:	f44f 417f 	mov.w	r1, #65280	@ 0xff00
9000667e:	f8c4 5174 	str.w	r5, [r4, #372]	@ 0x174
90006682:	f8a4 1170 	strh.w	r1, [r4, #368]	@ 0x170
        touchable = touch;
90006686:	f240 1101 	movw	r1, #257	@ 0x101
        : Box(), borderColor(0), borderSize(0)
9000668a:	f8a4 51a8 	strh.w	r5, [r4, #424]	@ 0x1a8
9000668e:	f8a4 1168 	strh.w	r1, [r4, #360]	@ 0x168
        : T(), up(), down()
90006692:	49b3      	ldr	r1, [pc, #716]	@ (90006960 <_ZN15Screen2ViewBaseC1Ev+0x478>)
          touchable(false),
90006694:	f8a4 a19c 	strh.w	sl, [r4, #412]	@ 0x19c
90006698:	f8c4 1144 	str.w	r1, [r4, #324]	@ 0x144
9000669c:	49b1      	ldr	r1, [pc, #708]	@ (90006964 <_ZN15Screen2ViewBaseC1Ev+0x47c>)
9000669e:	f884 819e 	strb.w	r8, [r4, #414]	@ 0x19e
900066a2:	f8c4 1178 	str.w	r1, [r4, #376]	@ 0x178
        T::add(borderBox);
900066a6:	f504 71bc 	add.w	r1, r4, #376	@ 0x178
          nextSibling(0),
900066aa:	e9c4 5563 	strd	r5, r5, [r4, #396]	@ 0x18c
          cachedAbsX(0),
900066ae:	e9c4 5565 	strd	r5, r5, [r4, #404]	@ 0x194
        : color(col)
900066b2:	e9c4 5568 	strd	r5, r5, [r4, #416]	@ 0x1a0
        : color(0)
900066b6:	e9c4 556b 	strd	r5, r5, [r4, #428]	@ 0x1ac
900066ba:	e9c4 556d 	strd	r5, r5, [r4, #436]	@ 0x1b4
        rect.x = x;
900066be:	e9c4 555f 	strd	r5, r5, [r4, #380]	@ 0x17c
900066c2:	e9c4 5561 	strd	r5, r5, [r4, #388]	@ 0x184
900066c6:	f00a f9a3 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
900066ca:	49a7      	ldr	r1, [pc, #668]	@ (90006968 <_ZN15Screen2ViewBaseC1Ev+0x480>)
900066cc:	f8c4 61e4 	str.w	r6, [r4, #484]	@ 0x1e4
        T::add(text);
900066d0:	f504 76de 	add.w	r6, r4, #444	@ 0x1bc
        : T()
900066d4:	f8c4 1144 	str.w	r1, [r4, #324]	@ 0x144
        T::add(text);
900066d8:	4658      	mov	r0, fp
900066da:	49a4      	ldr	r1, [pc, #656]	@ (9000696c <_ZN15Screen2ViewBaseC1Ev+0x484>)
900066dc:	f104 0b04 	add.w	fp, r4, #4
        : color(col)
900066e0:	f8c4 51ec 	str.w	r5, [r4, #492]	@ 0x1ec
900066e4:	f8a4 51f0 	strh.w	r5, [r4, #496]	@ 0x1f0
900066e8:	f8c4 91f2 	str.w	r9, [r4, #498]	@ 0x1f2
        : color(0)
900066ec:	f8c4 5208 	str.w	r5, [r4, #520]	@ 0x208
900066f0:	f8c4 11bc 	str.w	r1, [r4, #444]	@ 0x1bc
900066f4:	4631      	mov	r1, r6
          touchable(false),
900066f6:	f8a4 a1e0 	strh.w	sl, [r4, #480]	@ 0x1e0
900066fa:	f8a4 71e8 	strh.w	r7, [r4, #488]	@ 0x1e8
        : x(0), y(0), width(0), height(0)
900066fe:	e9c4 5570 	strd	r5, r5, [r4, #448]	@ 0x1c0
90006702:	e9c4 5572 	strd	r5, r5, [r4, #456]	@ 0x1c8
          nextSibling(0),
90006706:	e9c4 5574 	strd	r5, r5, [r4, #464]	@ 0x1d0
          cachedAbsX(0),
9000670a:	e9c4 5576 	strd	r5, r5, [r4, #472]	@ 0x1d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000670e:	e9c4 577e 	strd	r5, r7, [r4, #504]	@ 0x1f8
        : color(0)
90006712:	e9c4 5580 	strd	r5, r5, [r4, #512]	@ 0x200
90006716:	f00a f97b 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000671a:	4b8f      	ldr	r3, [pc, #572]	@ (90006958 <_ZN15Screen2ViewBaseC1Ev+0x470>)
        : TextAreaWithWildcardBase(), wc1(0)
9000671c:	4a94      	ldr	r2, [pc, #592]	@ (90006970 <_ZN15Screen2ViewBaseC1Ev+0x488>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
9000671e:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
90006722:	f8c4 3234 	str.w	r3, [r4, #564]	@ 0x234
        : pobject(pObject), pmemfun(pmemfun_1)
90006726:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
9000672a:	f8c4 220c 	str.w	r2, [r4, #524]	@ 0x20c
9000672e:	f504 7025 	add.w	r0, r4, #660	@ 0x294
90006732:	4a90      	ldr	r2, [pc, #576]	@ (90006974 <_ZN15Screen2ViewBaseC1Ev+0x48c>)
90006734:	f8c4 9242 	str.w	r9, [r4, #578]	@ 0x242
        : color(col)
90006738:	f8c4 523c 	str.w	r5, [r4, #572]	@ 0x23c
9000673c:	f8a4 5240 	strh.w	r5, [r4, #576]	@ 0x240
          touchable(false),
90006740:	f8a4 a230 	strh.w	sl, [r4, #560]	@ 0x230
90006744:	f8a4 8238 	strh.w	r8, [r4, #568]	@ 0x238
        : x(0), y(0), width(0), height(0)
90006748:	e9c4 5584 	strd	r5, r5, [r4, #528]	@ 0x210
9000674c:	e9c4 5586 	strd	r5, r5, [r4, #536]	@ 0x218
          nextSibling(0),
90006750:	e9c4 5588 	strd	r5, r5, [r4, #544]	@ 0x220
          cachedAbsX(0),
90006754:	e9c4 558a 	strd	r5, r5, [r4, #552]	@ 0x228
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006758:	e9c4 5792 	strd	r5, r7, [r4, #584]	@ 0x248
9000675c:	e9c4 5594 	strd	r5, r5, [r4, #592]	@ 0x250
90006760:	f8c3 2eb4 	str.w	r2, [r3, #3764]	@ 0xeb4
90006764:	4a84      	ldr	r2, [pc, #528]	@ (90006978 <_ZN15Screen2ViewBaseC1Ev+0x490>)
90006766:	f8c3 5ec0 	str.w	r5, [r3, #3776]	@ 0xec0
9000676a:	f8c3 2ebc 	str.w	r2, [r3, #3772]	@ 0xebc
9000676e:	f8c3 4eb8 	str.w	r4, [r3, #3768]	@ 0xeb8
90006772:	f00f f869 	bl	90015848 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90006776:	4b81      	ldr	r3, [pc, #516]	@ (9000697c <_ZN15Screen2ViewBaseC1Ev+0x494>)
90006778:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000677c:	4658      	mov	r0, fp
9000677e:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90006780:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90006784:	6465      	str	r5, [r4, #68]	@ 0x44
90006786:	66a3      	str	r3, [r4, #104]	@ 0x68
90006788:	f00a f942 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_IMAX_POSTER_GREEN_480X272_ID));
9000678c:	f8dd 9004 	ldr.w	r9, [sp, #4]
90006790:	2304      	movs	r3, #4
90006792:	a908      	add	r1, sp, #32
90006794:	4648      	mov	r0, r9
90006796:	6725      	str	r5, [r4, #112]	@ 0x70
90006798:	f8ad 3020 	strh.w	r3, [sp, #32]
9000679c:	f00e f958 	bl	90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900067a0:	4649      	mov	r1, r9
900067a2:	4658      	mov	r0, fp
900067a4:	f00a f934 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
900067a8:	f44f 6320 	mov.w	r3, #2560	@ 0xa00
     * @note    Angles are given in degrees, so a full circle is 360.
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
900067ac:	f8c4 50d0 	str.w	r5, [r4, #208]	@ 0xd0
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
900067b0:	f04f 0ea0 	mov.w	lr, #160	@ 0xa0
900067b4:	4d72      	ldr	r5, [pc, #456]	@ (90006980 <_ZN15Screen2ViewBaseC1Ev+0x498>)
    clockCircle.setCapPrecision(10);
900067b6:	210a      	movs	r1, #10
        this->circleCenterY = CWRUtil::toQ5(y);
900067b8:	e9c4 3331 	strd	r3, r3, [r4, #196]	@ 0xc4
900067bc:	f04f 13a0 	mov.w	r3, #10485920	@ 0xa000a0
900067c0:	e9c4 5327 	strd	r5, r3, [r4, #156]	@ 0x9c
        this->circleRadius = CWRUtil::toQ5(r);
900067c4:	f44f 6316 	mov.w	r3, #2400	@ 0x960
900067c8:	9d02      	ldr	r5, [sp, #8]
900067ca:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
900067ce:	f44f 53c3 	mov.w	r3, #6240	@ 0x1860
900067d2:	4628      	mov	r0, r5
900067d4:	e9c4 3e35 	strd	r3, lr, [r4, #212]	@ 0xd4
900067d8:	f00c fe94 	bl	90013504 <_ZN8touchgfx6Circle15setCapPrecisionEi>
        canvasPainter = &painter;
900067dc:	9b03      	ldr	r3, [sp, #12]
900067de:	4629      	mov	r1, r5
900067e0:	4658      	mov	r0, fp
900067e2:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    minutes_left.setPosition(190, 111, 100, 50);
900067e6:	f104 05f4 	add.w	r5, r4, #244	@ 0xf4
900067ea:	f8c4 70ec 	str.w	r7, [r4, #236]	@ 0xec
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
900067ee:	f8a4 80f0 	strh.w	r8, [r4, #240]	@ 0xf0
900067f2:	f00a f90d 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900067f6:	4a63      	ldr	r2, [pc, #396]	@ (90006984 <_ZN15Screen2ViewBaseC1Ev+0x49c>)
        setX(x);
900067f8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
900067fc:	4962      	ldr	r1, [pc, #392]	@ (90006988 <_ZN15Screen2ViewBaseC1Ev+0x4a0>)
        rect.x = x;
900067fe:	f8c4 20f8 	str.w	r2, [r4, #248]	@ 0xf8
        setWidth(width);
90006802:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90006804:	428a      	cmp	r2, r1
90006806:	f040 8192 	bne.w	90006b2e <_ZN15Screen2ViewBaseC1Ev+0x646>
        rect.width = width;
9000680a:	2264      	movs	r2, #100	@ 0x64
        boundingArea = calculateBoundingArea();
9000680c:	af04      	add	r7, sp, #16
9000680e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90006812:	4629      	mov	r1, r5
90006814:	4638      	mov	r0, r7
90006816:	f8a4 20fc 	strh.w	r2, [r4, #252]	@ 0xfc
9000681a:	4798      	blx	r3
9000681c:	f504 7398 	add.w	r3, r4, #304	@ 0x130
90006820:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
90006824:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90006828:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
9000682c:	4957      	ldr	r1, [pc, #348]	@ (9000698c <_ZN15Screen2ViewBaseC1Ev+0x4a4>)
9000682e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90006830:	428a      	cmp	r2, r1
90006832:	f040 8178 	bne.w	90006b26 <_ZN15Screen2ViewBaseC1Ev+0x63e>
        rect.height = height;
90006836:	2232      	movs	r2, #50	@ 0x32
        boundingArea = calculateBoundingArea();
90006838:	af04      	add	r7, sp, #16
9000683a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000683e:	4629      	mov	r1, r5
90006840:	4638      	mov	r0, r7
90006842:	f8a4 20fe 	strh.w	r2, [r4, #254]	@ 0xfe
90006846:	4798      	blx	r3
90006848:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
9000684c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
90006850:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90006854:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
        color = newColor;
90006858:	f04f 31ff 	mov.w	r1, #4294967295
9000685c:	484c      	ldr	r0, [pc, #304]	@ (90006990 <_ZN15Screen2ViewBaseC1Ev+0x4a8>)
        boundingArea = calculateBoundingArea();
9000685e:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        linespace = space;
90006862:	2300      	movs	r3, #0
        color = newColor;
90006864:	f8c4 1124 	str.w	r1, [r4, #292]	@ 0x124
        linespace = space;
90006868:	4282      	cmp	r2, r0
9000686a:	f8a4 3128 	strh.w	r3, [r4, #296]	@ 0x128
        boundingArea = calculateBoundingArea();
9000686e:	f040 8162 	bne.w	90006b36 <_ZN15Screen2ViewBaseC1Ev+0x64e>
90006872:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
90006876:	e9c4 314c 	strd	r3, r1, [r4, #304]	@ 0x130
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000687a:	4f46      	ldr	r7, [pc, #280]	@ (90006994 <_ZN15Screen2ViewBaseC1Ev+0x4ac>)
    touchgfx::Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DFE3).getText());
9000687c:	f504 7816 	add.w	r8, r4, #600	@ 0x258
90006880:	683b      	ldr	r3, [r7, #0]
90006882:	2b00      	cmp	r3, #0
90006884:	f000 817d 	beq.w	90006b82 <_ZN15Screen2ViewBaseC1Ev+0x69a>
        return typedTextId < numberOfTypedTexts;
90006888:	f8df a120 	ldr.w	sl, [pc, #288]	@ 900069ac <_ZN15Screen2ViewBaseC1Ev+0x4c4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000688c:	f8ba 3000 	ldrh.w	r3, [sl]
90006890:	2b04      	cmp	r3, #4
90006892:	f240 8170 	bls.w	90006b76 <_ZN15Screen2ViewBaseC1Ev+0x68e>
        return texts->getText(typedTextId);
90006896:	4b40      	ldr	r3, [pc, #256]	@ (90006998 <_ZN15Screen2ViewBaseC1Ev+0x4b0>)
90006898:	2104      	movs	r1, #4
    touchgfx::Unicode::snprintf(minutes_leftBuffer2, MINUTES_LEFTBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GRIV).getText());
9000689a:	f504 791b 	add.w	r9, r4, #620	@ 0x26c
9000689e:	6818      	ldr	r0, [r3, #0]
900068a0:	f000 fb1c 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DFE3).getText());
900068a4:	4a3d      	ldr	r2, [pc, #244]	@ (9000699c <_ZN15Screen2ViewBaseC1Ev+0x4b4>)
900068a6:	4603      	mov	r3, r0
900068a8:	210a      	movs	r1, #10
900068aa:	4640      	mov	r0, r8
900068ac:	f014 f886 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900068b0:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
900068b2:	f8c4 813c 	str.w	r8, [r4, #316]	@ 0x13c
900068b6:	2b00      	cmp	r3, #0
900068b8:	f000 8163 	beq.w	90006b82 <_ZN15Screen2ViewBaseC1Ev+0x69a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900068bc:	f8ba 3000 	ldrh.w	r3, [sl]
900068c0:	2b03      	cmp	r3, #3
900068c2:	f240 8158 	bls.w	90006b76 <_ZN15Screen2ViewBaseC1Ev+0x68e>
        return texts->getText(typedTextId);
900068c6:	4b34      	ldr	r3, [pc, #208]	@ (90006998 <_ZN15Screen2ViewBaseC1Ev+0x4b0>)
900068c8:	2103      	movs	r1, #3
        : typedTextId(id)
900068ca:	f04f 0805 	mov.w	r8, #5
        return texts->getText(typedTextId);
900068ce:	6818      	ldr	r0, [r3, #0]
900068d0:	f000 fb04 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(minutes_leftBuffer2, MINUTES_LEFTBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GRIV).getText());
900068d4:	4a31      	ldr	r2, [pc, #196]	@ (9000699c <_ZN15Screen2ViewBaseC1Ev+0x4b4>)
900068d6:	4603      	mov	r3, r0
900068d8:	210a      	movs	r1, #10
900068da:	4648      	mov	r0, r9
900068dc:	f014 f86e 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900068e0:	4b1d      	ldr	r3, [pc, #116]	@ (90006958 <_ZN15Screen2ViewBaseC1Ev+0x470>)
    minutes_left.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0U73));
900068e2:	a908      	add	r1, sp, #32
900068e4:	4628      	mov	r0, r5
        wc2 = value;
900068e6:	f8c4 9140 	str.w	r9, [r4, #320]	@ 0x140
900068ea:	9308      	str	r3, [sp, #32]
900068ec:	f8ad 8024 	strh.w	r8, [sp, #36]	@ 0x24
900068f0:	f00d ff52 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900068f4:	4629      	mov	r1, r5
900068f6:	4658      	mov	r0, fp
900068f8:	f00a f88a 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        handlePressedUpdated();
900068fc:	f8d4 3144 	ldr.w	r3, [r4, #324]	@ 0x144
        rect.x = x;
90006900:	2100      	movs	r1, #0
90006902:	4827      	ldr	r0, [pc, #156]	@ (900069a0 <_ZN15Screen2ViewBaseC1Ev+0x4b8>)
90006904:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        borderUp = borderColorReleased;
90006908:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        borderSize = size;
9000690c:	f8a4 81a8 	strh.w	r8, [r4, #424]	@ 0x1a8
90006910:	4282      	cmp	r2, r0
        borderDown = borderColorPressed;
90006912:	e9c4 336d 	strd	r3, r3, [r4, #436]	@ 0x1b4
90006916:	4b23      	ldr	r3, [pc, #140]	@ (900069a4 <_ZN15Screen2ViewBaseC1Ev+0x4bc>)
90006918:	e9c4 135f 	strd	r1, r3, [r4, #380]	@ 0x17c
        down = colorPressed;
9000691c:	f04f 33ff 	mov.w	r3, #4294967295
90006920:	4921      	ldr	r1, [pc, #132]	@ (900069a8 <_ZN15Screen2ViewBaseC1Ev+0x4c0>)
90006922:	e9c4 316b 	strd	r3, r1, [r4, #428]	@ 0x1ac
90006926:	f040 8111 	bne.w	90006b4c <_ZN15Screen2ViewBaseC1Ev+0x664>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
9000692a:	f894 2170 	ldrb.w	r2, [r4, #368]	@ 0x170
9000692e:	2a00      	cmp	r2, #0
90006930:	f000 80f6 	beq.w	90006b20 <_ZN15Screen2ViewBaseC1Ev+0x638>
90006934:	460b      	mov	r3, r1
90006936:	f8d4 2208 	ldr.w	r2, [r4, #520]	@ 0x208
9000693a:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
        borderColor = colorBorder;
9000693e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        color = newColor;
90006942:	f8c4 21ec 	str.w	r2, [r4, #492]	@ 0x1ec
90006946:	f8c4 31a4 	str.w	r3, [r4, #420]	@ 0x1a4
9000694a:	4b03      	ldr	r3, [pc, #12]	@ (90006958 <_ZN15Screen2ViewBaseC1Ev+0x470>)
        text.setTypedText(t);
9000694c:	a908      	add	r1, sp, #32
9000694e:	e02f      	b.n	900069b0 <_ZN15Screen2ViewBaseC1Ev+0x4c8>
90006950:	90002eb9 	.word	0x90002eb9
90006954:	9002e24c 	.word	0x9002e24c
90006958:	9002cc58 	.word	0x9002cc58
9000695c:	9002d668 	.word	0x9002d668
90006960:	9002d430 	.word	0x9002d430
90006964:	9002e5f4 	.word	0x9002e5f4
90006968:	9002d56c 	.word	0x9002d56c
9000696c:	9002e4fc 	.word	0x9002e4fc
90006970:	9002d3a0 	.word	0x9002d3a0
90006974:	9002d6f8 	.word	0x9002d6f8
90006978:	900064bd 	.word	0x900064bd
9000697c:	011001e0 	.word	0x011001e0
90006980:	003800a0 	.word	0x003800a0
90006984:	006f00be 	.word	0x006f00be
90006988:	90004fdd 	.word	0x90004fdd
9000698c:	90005005 	.word	0x90005005
90006990:	90005051 	.word	0x90005051
90006994:	24023514 	.word	0x24023514
90006998:	24023520 	.word	0x24023520
9000699c:	9002d394 	.word	0x9002d394
900069a0:	900050a9 	.word	0x900050a9
900069a4:	003000f0 	.word	0x003000f0
900069a8:	ff9b9d9e 	.word	0xff9b9d9e
900069ac:	24023518 	.word	0x24023518
900069b0:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
900069b2:	ad04      	add	r5, sp, #16
900069b4:	9308      	str	r3, [sp, #32]
900069b6:	2302      	movs	r3, #2
900069b8:	f106 083c 	add.w	r8, r6, #60	@ 0x3c
900069bc:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900069c0:	f00d feea 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.width = width;
900069c4:	f8b4 314c 	ldrh.w	r3, [r4, #332]	@ 0x14c
900069c8:	4631      	mov	r1, r6
900069ca:	4628      	mov	r0, r5
        return rect.height;
900069cc:	f9b4 914e 	ldrsh.w	r9, [r4, #334]	@ 0x14e
        rect.width = width;
900069d0:	f8a4 31c4 	strh.w	r3, [r4, #452]	@ 0x1c4
900069d4:	f00d fc38 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900069d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900069dc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900069e0:	4631      	mov	r1, r6
900069e2:	4628      	mov	r0, r5
        rect.height = height;
900069e4:	f8a4 91c6 	strh.w	r9, [r4, #454]	@ 0x1c6
900069e8:	f00d fc2e 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        setX(x);
900069ec:	f8d4 31bc 	ldr.w	r3, [r4, #444]	@ 0x1bc
        rect.x = x;
900069f0:	f04f 0c00 	mov.w	ip, #0
        setWidth(width);
900069f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900069f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900069fa:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        setY(y);
900069fe:	4a64      	ldr	r2, [pc, #400]	@ (90006b90 <_ZN15Screen2ViewBaseC1Ev+0x6a8>)
        rect.x = x;
90006a00:	f8c4 c1c0 	str.w	ip, [r4, #448]	@ 0x1c0
        setWidth(width);
90006a04:	4293      	cmp	r3, r2
90006a06:	f040 80a8 	bne.w	90006b5a <_ZN15Screen2ViewBaseC1Ev+0x672>
        rect.width = width;
90006a0a:	23f0      	movs	r3, #240	@ 0xf0
        boundingArea = calculateBoundingArea();
90006a0c:	4631      	mov	r1, r6
90006a0e:	4628      	mov	r0, r5
90006a10:	f8a4 31c4 	strh.w	r3, [r4, #452]	@ 0x1c4
90006a14:	f00d fc18 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90006a18:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006a1c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        setHeight(height);
90006a20:	f8d4 31bc 	ldr.w	r3, [r4, #444]	@ 0x1bc
90006a24:	4a5b      	ldr	r2, [pc, #364]	@ (90006b94 <_ZN15Screen2ViewBaseC1Ev+0x6ac>)
90006a26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90006a28:	4293      	cmp	r3, r2
90006a2a:	f040 8092 	bne.w	90006b52 <_ZN15Screen2ViewBaseC1Ev+0x66a>
        rect.height = height;
90006a2e:	2330      	movs	r3, #48	@ 0x30
        boundingArea = calculateBoundingArea();
90006a30:	4631      	mov	r1, r6
90006a32:	4628      	mov	r0, r5
90006a34:	f8a4 31c6 	strh.w	r3, [r4, #454]	@ 0x1c6
90006a38:	f00d fc06 	bl	90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90006a3c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006a40:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        colorReleased = newColorReleased;
90006a44:	4b54      	ldr	r3, [pc, #336]	@ (90006b98 <_ZN15Screen2ViewBaseC1Ev+0x6b0>)
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90006a46:	f894 2170 	ldrb.w	r2, [r4, #368]	@ 0x170
        color = newColor;
90006a4a:	f8c4 31ec 	str.w	r3, [r4, #492]	@ 0x1ec
        colorPressed = newColorPressed;
90006a4e:	e9c4 3381 	strd	r3, r3, [r4, #516]	@ 0x204
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90006a52:	2a00      	cmp	r2, #0
90006a54:	d05f      	beq.n	90006b16 <_ZN15Screen2ViewBaseC1Ev+0x62e>
    virtual void handlePressedUpdated()
90006a56:	f8d4 21b0 	ldr.w	r2, [r4, #432]	@ 0x1b0
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006a5a:	f504 73dc 	add.w	r3, r4, #440	@ 0x1b8
90006a5e:	f8c4 21a0 	str.w	r2, [r4, #416]	@ 0x1a0
90006a62:	4658      	mov	r0, fp
90006a64:	681b      	ldr	r3, [r3, #0]
    study_break.setXY(185, 5);
90006a66:	f504 7603 	add.w	r6, r4, #524	@ 0x20c
        rect.x = x;
90006a6a:	4a4c      	ldr	r2, [pc, #304]	@ (90006b9c <_ZN15Screen2ViewBaseC1Ev+0x6b4>)
90006a6c:	f8c4 31a4 	str.w	r3, [r4, #420]	@ 0x1a4
    stop.setAction(flexButtonCallback);
90006a70:	f641 63b4 	movw	r3, #7860	@ 0x1eb4
90006a74:	9900      	ldr	r1, [sp, #0]
90006a76:	4423      	add	r3, r4
        action = &callback;
90006a78:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
90006a7c:	4b48      	ldr	r3, [pc, #288]	@ (90006ba0 <_ZN15Screen2ViewBaseC1Ev+0x6b8>)
90006a7e:	e9c4 2352 	strd	r2, r3, [r4, #328]	@ 0x148
90006a82:	f009 ffc5 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90006a86:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
90006a8a:	4846      	ldr	r0, [pc, #280]	@ (90006ba4 <_ZN15Screen2ViewBaseC1Ev+0x6bc>)
90006a8c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
90006a90:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
90006a94:	4b44      	ldr	r3, [pc, #272]	@ (90006ba8 <_ZN15Screen2ViewBaseC1Ev+0x6c0>)
90006a96:	4282      	cmp	r2, r0
        color = newColor;
90006a98:	f8c4 123c 	str.w	r1, [r4, #572]	@ 0x23c
90006a9c:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        linespace = space;
90006aa0:	f04f 0300 	mov.w	r3, #0
90006aa4:	f8a4 3240 	strh.w	r3, [r4, #576]	@ 0x240
90006aa8:	d15b      	bne.n	90006b62 <_ZN15Screen2ViewBaseC1Ev+0x67a>
        boundingArea = calculateBoundingArea();
90006aaa:	f8c4 3250 	str.w	r3, [r4, #592]	@ 0x250
90006aae:	e9c4 3192 	strd	r3, r1, [r4, #584]	@ 0x248
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006ab2:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(study_breakBuffer, STUDY_BREAK_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMW).getText());
90006ab4:	f504 7520 	add.w	r5, r4, #640	@ 0x280
90006ab8:	2b00      	cmp	r3, #0
90006aba:	d062      	beq.n	90006b82 <_ZN15Screen2ViewBaseC1Ev+0x69a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006abc:	f8ba 3000 	ldrh.w	r3, [sl]
90006ac0:	2b00      	cmp	r3, #0
90006ac2:	d058      	beq.n	90006b76 <_ZN15Screen2ViewBaseC1Ev+0x68e>
        return texts->getText(typedTextId);
90006ac4:	4b39      	ldr	r3, [pc, #228]	@ (90006bac <_ZN15Screen2ViewBaseC1Ev+0x6c4>)
90006ac6:	2100      	movs	r1, #0
90006ac8:	6818      	ldr	r0, [r3, #0]
90006aca:	f000 fa07 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
90006ace:	4a38      	ldr	r2, [pc, #224]	@ (90006bb0 <_ZN15Screen2ViewBaseC1Ev+0x6c8>)
90006ad0:	4603      	mov	r3, r0
90006ad2:	210a      	movs	r1, #10
90006ad4:	4628      	mov	r0, r5
90006ad6:	f013 ff71 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    study_break.resizeToCurrentText();
90006ada:	4630      	mov	r0, r6
        wc1 = value;
90006adc:	f8c4 5254 	str.w	r5, [r4, #596]	@ 0x254
90006ae0:	f00d fe3a 	bl	90014758 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90006ae4:	4b33      	ldr	r3, [pc, #204]	@ (90006bb4 <_ZN15Screen2ViewBaseC1Ev+0x6cc>)
    study_break.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GEAN));
90006ae6:	a908      	add	r1, sp, #32
90006ae8:	4630      	mov	r0, r6
90006aea:	9308      	str	r3, [sp, #32]
90006aec:	2301      	movs	r3, #1
90006aee:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90006af2:	f00d fe51 	bl	90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90006af6:	4658      	mov	r0, fp
90006af8:	4631      	mov	r1, r6
90006afa:	f009 ff89 	bl	90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006afe:	4620      	mov	r0, r4
90006b00:	b00b      	add	sp, #44	@ 0x2c
90006b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
90006b06:	6898      	ldr	r0, [r3, #8]
90006b08:	4d2b      	ldr	r5, [pc, #172]	@ (90006bb8 <_ZN15Screen2ViewBaseC1Ev+0x6d0>)
90006b0a:	6803      	ldr	r3, [r0, #0]
90006b0c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90006b0e:	42aa      	cmp	r2, r5
90006b10:	f43f ad73 	beq.w	900065fa <_ZN15Screen2ViewBaseC1Ev+0x112>
90006b14:	e53b      	b.n	9000658e <_ZN15Screen2ViewBaseC1Ev+0xa6>
    virtual void handlePressedUpdated()
90006b16:	f8d4 21ac 	ldr.w	r2, [r4, #428]	@ 0x1ac
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006b1a:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
90006b1e:	e79e      	b.n	90006a5e <_ZN15Screen2ViewBaseC1Ev+0x576>
90006b20:	f8d4 2204 	ldr.w	r2, [r4, #516]	@ 0x204
90006b24:	e709      	b.n	9000693a <_ZN15Screen2ViewBaseC1Ev+0x452>
        setHeight(height);
90006b26:	2132      	movs	r1, #50	@ 0x32
90006b28:	4628      	mov	r0, r5
90006b2a:	4790      	blx	r2
90006b2c:	e692      	b.n	90006854 <_ZN15Screen2ViewBaseC1Ev+0x36c>
        setWidth(width);
90006b2e:	2164      	movs	r1, #100	@ 0x64
90006b30:	4628      	mov	r0, r5
90006b32:	4790      	blx	r2
90006b34:	e678      	b.n	90006828 <_ZN15Screen2ViewBaseC1Ev+0x340>
90006b36:	af04      	add	r7, sp, #16
90006b38:	4629      	mov	r1, r5
90006b3a:	4638      	mov	r0, r7
90006b3c:	4790      	blx	r2
90006b3e:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
90006b42:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
90006b46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90006b4a:	e696      	b.n	9000687a <_ZN15Screen2ViewBaseC1Ev+0x392>
        handlePressedUpdated();
90006b4c:	9800      	ldr	r0, [sp, #0]
90006b4e:	4790      	blx	r2
90006b50:	e6fb      	b.n	9000694a <_ZN15Screen2ViewBaseC1Ev+0x462>
        setHeight(height);
90006b52:	4630      	mov	r0, r6
90006b54:	2130      	movs	r1, #48	@ 0x30
90006b56:	4798      	blx	r3
90006b58:	e774      	b.n	90006a44 <_ZN15Screen2ViewBaseC1Ev+0x55c>
        setWidth(width);
90006b5a:	21f0      	movs	r1, #240	@ 0xf0
90006b5c:	4630      	mov	r0, r6
90006b5e:	4798      	blx	r3
90006b60:	e75e      	b.n	90006a20 <_ZN15Screen2ViewBaseC1Ev+0x538>
90006b62:	4631      	mov	r1, r6
90006b64:	4628      	mov	r0, r5
90006b66:	4790      	blx	r2
90006b68:	f504 7312 	add.w	r3, r4, #584	@ 0x248
90006b6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006b70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90006b74:	e79d      	b.n	90006ab2 <_ZN15Screen2ViewBaseC1Ev+0x5ca>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006b76:	4b11      	ldr	r3, [pc, #68]	@ (90006bbc <_ZN15Screen2ViewBaseC1Ev+0x6d4>)
90006b78:	2161      	movs	r1, #97	@ 0x61
90006b7a:	4a11      	ldr	r2, [pc, #68]	@ (90006bc0 <_ZN15Screen2ViewBaseC1Ev+0x6d8>)
90006b7c:	4811      	ldr	r0, [pc, #68]	@ (90006bc4 <_ZN15Screen2ViewBaseC1Ev+0x6dc>)
90006b7e:	f023 fb87 	bl	9002a290 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006b82:	4b11      	ldr	r3, [pc, #68]	@ (90006bc8 <_ZN15Screen2ViewBaseC1Ev+0x6e0>)
90006b84:	2160      	movs	r1, #96	@ 0x60
90006b86:	4a0e      	ldr	r2, [pc, #56]	@ (90006bc0 <_ZN15Screen2ViewBaseC1Ev+0x6d8>)
90006b88:	480e      	ldr	r0, [pc, #56]	@ (90006bc4 <_ZN15Screen2ViewBaseC1Ev+0x6dc>)
90006b8a:	f023 fb81 	bl	9002a290 <__assert_func>
90006b8e:	bf00      	nop
90006b90:	90004fdd 	.word	0x90004fdd
90006b94:	90005005 	.word	0x90005005
90006b98:	ff0a0a0a 	.word	0xff0a0a0a
90006b9c:	00d80078 	.word	0x00d80078
90006ba0:	003000f0 	.word	0x003000f0
90006ba4:	90005051 	.word	0x90005051
90006ba8:	000500b9 	.word	0x000500b9
90006bac:	24023520 	.word	0x24023520
90006bb0:	9002d394 	.word	0x9002d394
90006bb4:	9002cc58 	.word	0x9002cc58
90006bb8:	90002eb9 	.word	0x90002eb9
90006bbc:	9002d308 	.word	0x9002d308
90006bc0:	9002d348 	.word	0x9002d348
90006bc4:	9002d2c0 	.word	0x9002d2c0
90006bc8:	9002d240 	.word	0x9002d240

90006bcc <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_40_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_40_4bpp()
{
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 27, 49, 40, 0, 0, 4, 1, 0, 0, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
90006bcc:	4770      	bx	lr
90006bce:	bf00      	nop

90006bd0 <_Z23getFont_arialbd_40_4bppv>:
{
90006bd0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 27, 49, 40, 0, 0, 4, 1, 0, 0, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
90006bd2:	4d19      	ldr	r5, [pc, #100]	@ (90006c38 <_Z23getFont_arialbd_40_4bppv+0x68>)
{
90006bd4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 27, 49, 40, 0, 0, 4, 1, 0, 0, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
90006bd6:	682c      	ldr	r4, [r5, #0]
90006bd8:	f3bf 8f5b 	dmb	ish
90006bdc:	f014 0401 	ands.w	r4, r4, #1
90006be0:	d002      	beq.n	90006be8 <_Z23getFont_arialbd_40_4bppv+0x18>
    return arialbd_40_4bpp;
}
90006be2:	4816      	ldr	r0, [pc, #88]	@ (90006c3c <_Z23getFont_arialbd_40_4bppv+0x6c>)
90006be4:	b00f      	add	sp, #60	@ 0x3c
90006be6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 27, 49, 40, 0, 0, 4, 1, 0, 0, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
90006be8:	4628      	mov	r0, r5
90006bea:	f022 ffda 	bl	90029ba2 <__cxa_guard_acquire>
90006bee:	2800      	cmp	r0, #0
90006bf0:	d0f7      	beq.n	90006be2 <_Z23getFont_arialbd_40_4bppv+0x12>
90006bf2:	233f      	movs	r3, #63	@ 0x3f
90006bf4:	4a12      	ldr	r2, [pc, #72]	@ (90006c40 <_Z23getFont_arialbd_40_4bppv+0x70>)
90006bf6:	4913      	ldr	r1, [pc, #76]	@ (90006c44 <_Z23getFont_arialbd_40_4bppv+0x74>)
90006bf8:	4810      	ldr	r0, [pc, #64]	@ (90006c3c <_Z23getFont_arialbd_40_4bppv+0x6c>)
90006bfa:	e9cd 3409 	strd	r3, r4, [sp, #36]	@ 0x24
90006bfe:	4b12      	ldr	r3, [pc, #72]	@ (90006c48 <_Z23getFont_arialbd_40_4bppv+0x78>)
90006c00:	e9cd 420b 	strd	r4, r2, [sp, #44]	@ 0x2c
90006c04:	e9cd 3107 	strd	r3, r1, [sp, #28]
90006c08:	2201      	movs	r2, #1
90006c0a:	2304      	movs	r3, #4
90006c0c:	2128      	movs	r1, #40	@ 0x28
90006c0e:	e9cd 3203 	strd	r3, r2, [sp, #12]
90006c12:	9100      	str	r1, [sp, #0]
90006c14:	2331      	movs	r3, #49	@ 0x31
90006c16:	221b      	movs	r2, #27
90006c18:	490c      	ldr	r1, [pc, #48]	@ (90006c4c <_Z23getFont_arialbd_40_4bppv+0x7c>)
90006c1a:	e9cd 4405 	strd	r4, r4, [sp, #20]
90006c1e:	e9cd 4401 	strd	r4, r4, [sp, #4]
90006c22:	f7fe f9a3 	bl	90004f6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006c26:	480a      	ldr	r0, [pc, #40]	@ (90006c50 <_Z23getFont_arialbd_40_4bppv+0x80>)
90006c28:	f023 fb50 	bl	9002a2cc <atexit>
90006c2c:	4628      	mov	r0, r5
90006c2e:	f022 ffc4 	bl	90029bba <__cxa_guard_release>
}
90006c32:	4802      	ldr	r0, [pc, #8]	@ (90006c3c <_Z23getFont_arialbd_40_4bppv+0x6c>)
90006c34:	b00f      	add	sp, #60	@ 0x3c
90006c36:	bd30      	pop	{r4, r5, pc}
90006c38:	24009404 	.word	0x24009404
90006c3c:	24009408 	.word	0x24009408
90006c40:	9002d740 	.word	0x9002d740
90006c44:	9002ed04 	.word	0x9002ed04
90006c48:	9002ed10 	.word	0x9002ed10
90006c4c:	90201a20 	.word	0x90201a20
90006c50:	90006bcd 	.word	0x90006bcd

90006c54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006c54:	4770      	bx	lr
90006c56:	bf00      	nop

90006c58 <_Z23getFont_verdana_10_4bppv>:
{
90006c58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006c5a:	4d18      	ldr	r5, [pc, #96]	@ (90006cbc <_Z23getFont_verdana_10_4bppv+0x64>)
{
90006c5c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006c5e:	682c      	ldr	r4, [r5, #0]
90006c60:	f3bf 8f5b 	dmb	ish
90006c64:	f014 0401 	ands.w	r4, r4, #1
90006c68:	d002      	beq.n	90006c70 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90006c6a:	4815      	ldr	r0, [pc, #84]	@ (90006cc0 <_Z23getFont_verdana_10_4bppv+0x68>)
90006c6c:	b00f      	add	sp, #60	@ 0x3c
90006c6e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006c70:	4628      	mov	r0, r5
90006c72:	f022 ff96 	bl	90029ba2 <__cxa_guard_acquire>
90006c76:	2800      	cmp	r0, #0
90006c78:	d0f7      	beq.n	90006c6a <_Z23getFont_verdana_10_4bppv+0x12>
90006c7a:	213f      	movs	r1, #63	@ 0x3f
90006c7c:	2201      	movs	r2, #1
90006c7e:	230a      	movs	r3, #10
90006c80:	2004      	movs	r0, #4
90006c82:	9204      	str	r2, [sp, #16]
90006c84:	9300      	str	r3, [sp, #0]
90006c86:	9003      	str	r0, [sp, #12]
90006c88:	480d      	ldr	r0, [pc, #52]	@ (90006cc0 <_Z23getFont_verdana_10_4bppv+0x68>)
90006c8a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90006c8e:	490d      	ldr	r1, [pc, #52]	@ (90006cc4 <_Z23getFont_verdana_10_4bppv+0x6c>)
90006c90:	9108      	str	r1, [sp, #32]
90006c92:	490d      	ldr	r1, [pc, #52]	@ (90006cc8 <_Z23getFont_verdana_10_4bppv+0x70>)
90006c94:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006c98:	9107      	str	r1, [sp, #28]
90006c9a:	490c      	ldr	r1, [pc, #48]	@ (90006ccc <_Z23getFont_verdana_10_4bppv+0x74>)
90006c9c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90006ca0:	e9cd 4401 	strd	r4, r4, [sp, #4]
90006ca4:	f7fe f962 	bl	90004f6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006ca8:	4809      	ldr	r0, [pc, #36]	@ (90006cd0 <_Z23getFont_verdana_10_4bppv+0x78>)
90006caa:	f023 fb0f 	bl	9002a2cc <atexit>
90006cae:	4628      	mov	r0, r5
90006cb0:	f022 ff83 	bl	90029bba <__cxa_guard_release>
}
90006cb4:	4802      	ldr	r0, [pc, #8]	@ (90006cc0 <_Z23getFont_verdana_10_4bppv+0x68>)
90006cb6:	b00f      	add	sp, #60	@ 0x3c
90006cb8:	bd30      	pop	{r4, r5, pc}
90006cba:	bf00      	nop
90006cbc:	24009434 	.word	0x24009434
90006cc0:	24009438 	.word	0x24009438
90006cc4:	9002ed08 	.word	0x9002ed08
90006cc8:	9002ed14 	.word	0x9002ed14
90006ccc:	90201b9c 	.word	0x90201b9c
90006cd0:	90006c55 	.word	0x90006c55

90006cd4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006cd4:	4770      	bx	lr
90006cd6:	bf00      	nop

90006cd8 <_Z23getFont_verdana_20_4bppv>:
{
90006cd8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006cda:	4d18      	ldr	r5, [pc, #96]	@ (90006d3c <_Z23getFont_verdana_20_4bppv+0x64>)
{
90006cdc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006cde:	682c      	ldr	r4, [r5, #0]
90006ce0:	f3bf 8f5b 	dmb	ish
90006ce4:	f014 0401 	ands.w	r4, r4, #1
90006ce8:	d002      	beq.n	90006cf0 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90006cea:	4815      	ldr	r0, [pc, #84]	@ (90006d40 <_Z23getFont_verdana_20_4bppv+0x68>)
90006cec:	b00f      	add	sp, #60	@ 0x3c
90006cee:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006cf0:	4628      	mov	r0, r5
90006cf2:	f022 ff56 	bl	90029ba2 <__cxa_guard_acquire>
90006cf6:	2800      	cmp	r0, #0
90006cf8:	d0f7      	beq.n	90006cea <_Z23getFont_verdana_20_4bppv+0x12>
90006cfa:	213f      	movs	r1, #63	@ 0x3f
90006cfc:	2201      	movs	r2, #1
90006cfe:	2314      	movs	r3, #20
90006d00:	2004      	movs	r0, #4
90006d02:	9204      	str	r2, [sp, #16]
90006d04:	9300      	str	r3, [sp, #0]
90006d06:	9003      	str	r0, [sp, #12]
90006d08:	480d      	ldr	r0, [pc, #52]	@ (90006d40 <_Z23getFont_verdana_20_4bppv+0x68>)
90006d0a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90006d0e:	490d      	ldr	r1, [pc, #52]	@ (90006d44 <_Z23getFont_verdana_20_4bppv+0x6c>)
90006d10:	9108      	str	r1, [sp, #32]
90006d12:	490d      	ldr	r1, [pc, #52]	@ (90006d48 <_Z23getFont_verdana_20_4bppv+0x70>)
90006d14:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006d18:	9107      	str	r1, [sp, #28]
90006d1a:	490c      	ldr	r1, [pc, #48]	@ (90006d4c <_Z23getFont_verdana_20_4bppv+0x74>)
90006d1c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90006d20:	e9cd 4401 	strd	r4, r4, [sp, #4]
90006d24:	f7fe f922 	bl	90004f6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006d28:	4809      	ldr	r0, [pc, #36]	@ (90006d50 <_Z23getFont_verdana_20_4bppv+0x78>)
90006d2a:	f023 facf 	bl	9002a2cc <atexit>
90006d2e:	4628      	mov	r0, r5
90006d30:	f022 ff43 	bl	90029bba <__cxa_guard_release>
}
90006d34:	4802      	ldr	r0, [pc, #8]	@ (90006d40 <_Z23getFont_verdana_20_4bppv+0x68>)
90006d36:	b00f      	add	sp, #60	@ 0x3c
90006d38:	bd30      	pop	{r4, r5, pc}
90006d3a:	bf00      	nop
90006d3c:	24009464 	.word	0x24009464
90006d40:	24009468 	.word	0x24009468
90006d44:	9002ed0c 	.word	0x9002ed0c
90006d48:	9002ed18 	.word	0x9002ed18
90006d4c:	90201bac 	.word	0x90201bac
90006d50:	90006cd5 	.word	0x90006cd5

90006d54 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90006d54:	2000      	movs	r0, #0
90006d56:	4770      	bx	lr

90006d58 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90006d58:	2000      	movs	r0, #0
90006d5a:	4770      	bx	lr

90006d5c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006d5c:	b40e      	push	{r1, r2, r3}
90006d5e:	b500      	push	{lr}
90006d60:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90006d62:	2100      	movs	r1, #0
{
90006d64:	ab03      	add	r3, sp, #12
90006d66:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90006d6a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90006d6c:	f011 f9be 	bl	900180ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90006d70:	b002      	add	sp, #8
90006d72:	f85d eb04 	ldr.w	lr, [sp], #4
90006d76:	b003      	add	sp, #12
90006d78:	4770      	bx	lr
90006d7a:	bf00      	nop

90006d7c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006d7c:	b40c      	push	{r2, r3}
90006d7e:	b500      	push	{lr}
90006d80:	b083      	sub	sp, #12
90006d82:	ab04      	add	r3, sp, #16
90006d84:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90006d88:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90006d8a:	f011 f9af 	bl	900180ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90006d8e:	b003      	add	sp, #12
90006d90:	f85d eb04 	ldr.w	lr, [sp], #4
90006d94:	b002      	add	sp, #8
90006d96:	4770      	bx	lr

90006d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90006d98:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90006d9a:	b510      	push	{r4, lr}
90006d9c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90006d9e:	b133      	cbz	r3, 90006dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90006da0:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90006da2:	b39b      	cbz	r3, 90006e0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90006da4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90006da6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90006daa:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90006dac:	b923      	cbnz	r3, 90006db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90006dae:	4620      	mov	r0, r4
}
90006db0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90006db4:	f012 bf5c 	b.w	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90006db8:	f013 f858 	bl	90019e6c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90006dbc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90006dbe:	2b01      	cmp	r3, #1
90006dc0:	d92a      	bls.n	90006e18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90006dc2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90006dc4:	1c53      	adds	r3, r2, #1
90006dc6:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90006dc8:	2b09      	cmp	r3, #9
90006dca:	d812      	bhi.n	90006df2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90006dcc:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90006dd0:	f640 103f 	movw	r0, #2367	@ 0x93f
90006dd4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90006dd6:	4281      	cmp	r1, r0
90006dd8:	d1e9      	bne.n	90006dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006dda:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006dde:	0052      	lsls	r2, r2, #1
90006de0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90006de2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90006de6:	4422      	add	r2, r4
90006de8:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90006dec:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90006dee:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90006df0:	e7dd      	b.n	90006dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90006df2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90006df6:	f640 113f 	movw	r1, #2367	@ 0x93f
90006dfa:	89db      	ldrh	r3, [r3, #14]
90006dfc:	428b      	cmp	r3, r1
90006dfe:	d1d6      	bne.n	90006dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006e00:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006e04:	2300      	movs	r3, #0
90006e06:	0052      	lsls	r2, r2, #1
90006e08:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90006e0a:	e7ea      	b.n	90006de2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90006e0c:	4b05      	ldr	r3, [pc, #20]	@ (90006e24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90006e0e:	21c5      	movs	r1, #197	@ 0xc5
90006e10:	4a05      	ldr	r2, [pc, #20]	@ (90006e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90006e12:	4806      	ldr	r0, [pc, #24]	@ (90006e2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006e14:	f023 fa3c 	bl	9002a290 <__assert_func>
            assert(offset < used);
90006e18:	4b05      	ldr	r3, [pc, #20]	@ (90006e30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90006e1a:	21cb      	movs	r1, #203	@ 0xcb
90006e1c:	4a05      	ldr	r2, [pc, #20]	@ (90006e34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90006e1e:	4803      	ldr	r0, [pc, #12]	@ (90006e2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006e20:	f023 fa36 	bl	9002a290 <__assert_func>
90006e24:	9002db9c 	.word	0x9002db9c
90006e28:	9002dba8 	.word	0x9002dba8
90006e2c:	9002dc54 	.word	0x9002dc54
90006e30:	9002dca0 	.word	0x9002dca0
90006e34:	9002dcb0 	.word	0x9002dcb0

90006e38 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90006e38:	f012 bee3 	b.w	90019c02 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90006e3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90006e3c:	b510      	push	{r4, lr}
90006e3e:	b086      	sub	sp, #24
90006e40:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90006e44:	ac0a      	add	r4, sp, #40	@ 0x28
{
90006e46:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006e4a:	461a      	mov	r2, r3
90006e4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90006e4e:	4661      	mov	r1, ip
90006e50:	9401      	str	r4, [sp, #4]
90006e52:	9300      	str	r3, [sp, #0]
90006e54:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90006e56:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006e58:	f00f fd96 	bl	90016988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90006e5c:	b006      	add	sp, #24
90006e5e:	bd10      	pop	{r4, pc}

90006e60 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90006e60:	b9e0      	cbnz	r0, 90006e9c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90006e62:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90006e64:	4b13      	ldr	r3, [pc, #76]	@ (90006eb4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90006e66:	681b      	ldr	r3, [r3, #0]
90006e68:	b1cb      	cbz	r3, 90006e9e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006e6a:	4c13      	ldr	r4, [pc, #76]	@ (90006eb8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006e6c:	4813      	ldr	r0, [pc, #76]	@ (90006ebc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006e6e:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006e72:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006e74:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006e76:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006e78:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006e7a:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006e7c:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90006e7e:	4b10      	ldr	r3, [pc, #64]	@ (90006ec0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90006e80:	2200      	movs	r2, #0
90006e82:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90006e84:	f000 f83a 	bl	90006efc <_ZN17TypedTextDatabase8getFontsEv>
90006e88:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90006e8a:	f000 f835 	bl	90006ef8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90006e8e:	4b0d      	ldr	r3, [pc, #52]	@ (90006ec4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90006e90:	4a0d      	ldr	r2, [pc, #52]	@ (90006ec8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90006e92:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90006e94:	4b0d      	ldr	r3, [pc, #52]	@ (90006ecc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90006e96:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90006e98:	8018      	strh	r0, [r3, #0]
    }
}
90006e9a:	bd38      	pop	{r3, r4, r5, pc}
90006e9c:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006e9e:	4c0c      	ldr	r4, [pc, #48]	@ (90006ed0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90006ea0:	4905      	ldr	r1, [pc, #20]	@ (90006eb8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006ea2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90006ea4:	480b      	ldr	r0, [pc, #44]	@ (90006ed4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90006ea6:	4b05      	ldr	r3, [pc, #20]	@ (90006ebc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006ea8:	4a0b      	ldr	r2, [pc, #44]	@ (90006ed8 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90006eaa:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90006eac:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90006eae:	2c00      	cmp	r4, #0
90006eb0:	d1e5      	bne.n	90006e7e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90006eb2:	bd38      	pop	{r3, r4, r5, pc}
90006eb4:	240094a0 	.word	0x240094a0
90006eb8:	24009498 	.word	0x24009498
90006ebc:	24009494 	.word	0x24009494
90006ec0:	2400949c 	.word	0x2400949c
90006ec4:	24023514 	.word	0x24023514
90006ec8:	2402351c 	.word	0x2402351c
90006ecc:	24023518 	.word	0x24023518
90006ed0:	90201c50 	.word	0x90201c50
90006ed4:	90201bf0 	.word	0x90201bf0
90006ed8:	90201bbc 	.word	0x90201bbc

90006edc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90006edc:	4a04      	ldr	r2, [pc, #16]	@ (90006ef0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90006ede:	4b05      	ldr	r3, [pc, #20]	@ (90006ef4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90006ee0:	6812      	ldr	r2, [r2, #0]
90006ee2:	681b      	ldr	r3, [r3, #0]
90006ee4:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90006ee8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90006eec:	4770      	bx	lr
90006eee:	bf00      	nop
90006ef0:	24009494 	.word	0x24009494
90006ef4:	24009498 	.word	0x24009498

90006ef8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90006ef8:	200d      	movs	r0, #13
90006efa:	4770      	bx	lr

90006efc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90006efc:	4800      	ldr	r0, [pc, #0]	@ (90006f00 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90006efe:	4770      	bx	lr
90006f00:	240094a4 	.word	0x240094a4

90006f04 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90006f04:	b510      	push	{r4, lr}
};
90006f06:	4c05      	ldr	r4, [pc, #20]	@ (90006f1c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90006f08:	f7ff fee6 	bl	90006cd8 <_Z23getFont_verdana_20_4bppv>
};
90006f0c:	6020      	str	r0, [r4, #0]
    &(getFont_arialbd_40_4bpp()),
90006f0e:	f7ff fe5f 	bl	90006bd0 <_Z23getFont_arialbd_40_4bppv>
};
90006f12:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90006f14:	f7ff fea0 	bl	90006c58 <_Z23getFont_verdana_10_4bppv>
};
90006f18:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90006f1a:	bd10      	pop	{r4, pc}
90006f1c:	240094a4 	.word	0x240094a4

90006f20 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90006f20:	b410      	push	{r4}
    pointArray = 0;
90006f22:	2400      	movs	r4, #0
90006f24:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90006f26:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90006f28:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90006f2a:	601c      	str	r4, [r3, #0]
}
90006f2c:	f85d 4b04 	ldr.w	r4, [sp], #4
90006f30:	4770      	bx	lr
90006f32:	bf00      	nop

90006f34 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006f34:	4770      	bx	lr
90006f36:	bf00      	nop

90006f38 <_ZN19FrontendApplicationD0Ev>:
90006f38:	b510      	push	{r4, lr}
90006f3a:	4604      	mov	r4, r0
90006f3c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006f40:	f022 fe2d 	bl	90029b9e <_ZdlPvj>
90006f44:	4620      	mov	r0, r4
90006f46:	bd10      	pop	{r4, pc}

90006f48 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006f48:	b510      	push	{r4, lr}
90006f4a:	4604      	mov	r4, r0
    {
        model.tick();
90006f4c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006f50:	f000 f814 	bl	90006f7c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006f54:	4620      	mov	r0, r4
    }
90006f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006f5a:	f010 b9fb 	b.w	90017354 <_ZN8touchgfx11Application15handleTickEventEv>
90006f5e:	bf00      	nop

90006f60 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006f60:	b510      	push	{r4, lr}
90006f62:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006f64:	f7fd ff48 	bl	90004df8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006f68:	4b01      	ldr	r3, [pc, #4]	@ (90006f70 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006f6a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006f6c:	6023      	str	r3, [r4, #0]
}
90006f6e:	bd10      	pop	{r4, pc}
90006f70:	9002dd8c 	.word	0x9002dd8c

90006f74 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include <stdint.h>


Model::Model() : modelListener(0), minute(0), session(0)
90006f74:	2200      	movs	r2, #0
90006f76:	e9c0 2200 	strd	r2, r2, [r0]
{

}
90006f7a:	4770      	bx	lr

90006f7c <_ZN5Model4tickEv>:


void Model::tick()
{

}
90006f7c:	4770      	bx	lr
90006f7e:	bf00      	nop

90006f80 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
90006f80:	4770      	bx	lr
90006f82:	bf00      	nop

90006f84 <_ZThn4_N16Screen1PresenterD1Ev>:
90006f84:	3804      	subs	r0, #4
90006f86:	4770      	bx	lr

90006f88 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
90006f88:	4770      	bx	lr
90006f8a:	bf00      	nop

90006f8c <_ZN16Screen1PresenterD0Ev>:
90006f8c:	b510      	push	{r4, lr}
90006f8e:	4604      	mov	r4, r0
90006f90:	2110      	movs	r1, #16
90006f92:	f022 fe04 	bl	90029b9e <_ZdlPvj>
90006f96:	4620      	mov	r0, r4
90006f98:	bd10      	pop	{r4, pc}
90006f9a:	bf00      	nop

90006f9c <_ZThn4_N16Screen1PresenterD0Ev>:
90006f9c:	b510      	push	{r4, lr}
90006f9e:	1f04      	subs	r4, r0, #4
90006fa0:	2110      	movs	r1, #16
90006fa2:	4620      	mov	r0, r4
90006fa4:	f022 fdfb 	bl	90029b9e <_ZdlPvj>
90006fa8:	4620      	mov	r0, r4
90006faa:	bd10      	pop	{r4, pc}

90006fac <_ZN16Screen1PresenterC1ER11Screen1View>:
    : view(v)
90006fac:	4a05      	ldr	r2, [pc, #20]	@ (90006fc4 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
90006fae:	60c1      	str	r1, [r0, #12]
90006fb0:	6002      	str	r2, [r0, #0]
Screen1Presenter::Screen1Presenter(Screen1View& v)
90006fb2:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006fb4:	2400      	movs	r4, #0
90006fb6:	6084      	str	r4, [r0, #8]
    : view(v)
90006fb8:	f102 0418 	add.w	r4, r2, #24
90006fbc:	6044      	str	r4, [r0, #4]
}
90006fbe:	f85d 4b04 	ldr.w	r4, [sp], #4
90006fc2:	4770      	bx	lr
90006fc4:	9002dde0 	.word	0x9002dde0

90006fc8 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90006fc8:	4770      	bx	lr
90006fca:	bf00      	nop

90006fcc <_ZN11Screen1View10startTimerEv>:
	session = session - 1;
	Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
	sessions_set.invalidate();
}
void Screen1View::startTimer()
{
90006fcc:	b510      	push	{r4, lr}
90006fce:	4601      	mov	r1, r0
  // Send START_TIMER command with study time and sessions
    TimerCommand_t command;
    command.commandType = START_TIMER;
    command.studyTime = minute; // Selected study time
    command.sessions = session; // Selected sessions
    xQueueSend(xCommandQueue, &command, portMAX_DELAY);
90006fd0:	4c09      	ldr	r4, [pc, #36]	@ (90006ff8 <_ZN11Screen1View10startTimerEv+0x2c>)
{
90006fd2:	b082      	sub	sp, #8
    command.commandType = START_TIMER;
90006fd4:	2300      	movs	r3, #0
    xQueueSend(xCommandQueue, &command, portMAX_DELAY);
90006fd6:	6820      	ldr	r0, [r4, #0]
90006fd8:	f04f 32ff 	mov.w	r2, #4294967295


    void saveMinute(int16_t minute) {
    	model->saveMinute(minute);
90006fdc:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
  presenter->saveMinute(minute);
90006fde:	f8d1 1560 	ldr.w	r1, [r1, #1376]	@ 0x560
    }

    void tick();

    void saveMinute(int16_t saveMinute) {
    	minute = saveMinute;
90006fe2:	68a4      	ldr	r4, [r4, #8]
    command.commandType = START_TIMER;
90006fe4:	f88d 3000 	strb.w	r3, [sp]
90006fe8:	6061      	str	r1, [r4, #4]
    command.studyTime = minute; // Selected study time
90006fea:	f8cd 1002 	str.w	r1, [sp, #2]
    xQueueSend(xCommandQueue, &command, portMAX_DELAY);
90006fee:	4669      	mov	r1, sp
90006ff0:	f007 fcea 	bl	9000e9c8 <xQueueGenericSend>
}
90006ff4:	b002      	add	sp, #8
90006ff6:	bd10      	pop	{r4, pc}
90006ff8:	24009108 	.word	0x24009108

90006ffc <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
90006ffc:	4b03      	ldr	r3, [pc, #12]	@ (9000700c <_ZN11Screen1ViewD1Ev+0x10>)
90006ffe:	b510      	push	{r4, lr}
90007000:	4604      	mov	r4, r0
90007002:	6003      	str	r3, [r0, #0]
90007004:	f7fe f838 	bl	90005078 <_ZN15Screen1ViewBaseD1Ev>
90007008:	4620      	mov	r0, r4
9000700a:	bd10      	pop	{r4, pc}
9000700c:	9002de10 	.word	0x9002de10

90007010 <_ZN11Screen1ViewD0Ev>:
90007010:	4b06      	ldr	r3, [pc, #24]	@ (9000702c <_ZN11Screen1ViewD0Ev+0x1c>)
90007012:	b510      	push	{r4, lr}
90007014:	4604      	mov	r4, r0
90007016:	6003      	str	r3, [r0, #0]
90007018:	f7fe f82e 	bl	90005078 <_ZN15Screen1ViewBaseD1Ev>
9000701c:	f240 5164 	movw	r1, #1380	@ 0x564
90007020:	4620      	mov	r0, r4
90007022:	f022 fdbc 	bl	90029b9e <_ZdlPvj>
90007026:	4620      	mov	r0, r4
90007028:	bd10      	pop	{r4, pc}
9000702a:	bf00      	nop
9000702c:	9002de10 	.word	0x9002de10

90007030 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View() : minute(0), session(0)
90007030:	b510      	push	{r4, lr}
90007032:	4604      	mov	r4, r0
90007034:	f7fe fadc 	bl	900055f0 <_ZN15Screen1ViewBaseC1Ev>
90007038:	4a03      	ldr	r2, [pc, #12]	@ (90007048 <_ZN11Screen1ViewC1Ev+0x18>)
9000703a:	2300      	movs	r3, #0
}
9000703c:	4620      	mov	r0, r4
Screen1View::Screen1View() : minute(0), session(0)
9000703e:	6022      	str	r2, [r4, #0]
90007040:	f8c4 3560 	str.w	r3, [r4, #1376]	@ 0x560
}
90007044:	bd10      	pop	{r4, pc}
90007046:	bf00      	nop
90007048:	9002de10 	.word	0x9002de10

9000704c <_ZN11Screen1View11setupScreenEv>:
{
9000704c:	b538      	push	{r3, r4, r5, lr}
9000704e:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
90007050:	f7fe f814 	bl	9000507c <_ZN15Screen1ViewBase11setupScreenEv>
    Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
90007054:	4d0f      	ldr	r5, [pc, #60]	@ (90007094 <_ZN11Screen1View11setupScreenEv+0x48>)
90007056:	210a      	movs	r1, #10
    }
    void saveSession(int16_t session) {
    	model->saveSession(session);
    }
    int16_t getMinute() {
        return model->getMinute();
90007058:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000705a:	f504 60a5 	add.w	r0, r4, #1320	@ 0x528
9000705e:	462a      	mov	r2, r5
    }
    void saveSession(int16_t saveSession) {
    	session = saveSession;
    }
    int16_t getMinute() {
    	return minute;
90007060:	689b      	ldr	r3, [r3, #8]
90007062:	685b      	ldr	r3, [r3, #4]
    minute = presenter->getMinute();
90007064:	f8c4 3560 	str.w	r3, [r4, #1376]	@ 0x560
    Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
90007068:	b21b      	sxth	r3, r3
9000706a:	f013 fca7 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
9000706e:	f9b4 3562 	ldrsh.w	r3, [r4, #1378]	@ 0x562
90007072:	462a      	mov	r2, r5
90007074:	210a      	movs	r1, #10
90007076:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
9000707a:	f013 fc9f 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    minutes_set.invalidate();
9000707e:	f504 704e 	add.w	r0, r4, #824	@ 0x338
90007082:	f011 f95e 	bl	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
    sessions_set.invalidate();
90007086:	f504 7061 	add.w	r0, r4, #900	@ 0x384
}
9000708a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    sessions_set.invalidate();
9000708e:	f011 b958 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
90007092:	bf00      	nop
90007094:	9002de00 	.word	0x9002de00

90007098 <_ZN11Screen1View10incMinutesEv>:
void Screen1View::incMinutes() {
90007098:	b510      	push	{r4, lr}
9000709a:	4604      	mov	r4, r0
	minute = (minute + 1) % 60; // Keep new value in range 0..59
9000709c:	f9b0 0560 	ldrsh.w	r0, [r0, #1376]	@ 0x560
900070a0:	4b0d      	ldr	r3, [pc, #52]	@ (900070d8 <_ZN11Screen1View10incMinutesEv+0x40>)
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070a2:	210a      	movs	r1, #10
	minute = (minute + 1) % 60; // Keep new value in range 0..59
900070a4:	3001      	adds	r0, #1
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070a6:	4a0d      	ldr	r2, [pc, #52]	@ (900070dc <_ZN11Screen1View10incMinutesEv+0x44>)
	minute = (minute + 1) % 60; // Keep new value in range 0..59
900070a8:	fb83 c300 	smull	ip, r3, r3, r0
900070ac:	eb03 0c00 	add.w	ip, r3, r0
900070b0:	17c3      	asrs	r3, r0, #31
900070b2:	ebc3 136c 	rsb	r3, r3, ip, asr #5
900070b6:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
900070ba:	eba0 0383 	sub.w	r3, r0, r3, lsl #2
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070be:	f504 60a5 	add.w	r0, r4, #1320	@ 0x528
	minute = (minute + 1) % 60; // Keep new value in range 0..59
900070c2:	f8a4 3560 	strh.w	r3, [r4, #1376]	@ 0x560
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070c6:	f013 fc79 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	minutes_set.invalidate();
900070ca:	f504 704e 	add.w	r0, r4, #824	@ 0x338
}
900070ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	minutes_set.invalidate();
900070d2:	f011 b936 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
900070d6:	bf00      	nop
900070d8:	88888889 	.word	0x88888889
900070dc:	9002de00 	.word	0x9002de00

900070e0 <_ZN11Screen1View10decMinutesEv>:
void Screen1View::decMinutes() {
900070e0:	b510      	push	{r4, lr}
900070e2:	4604      	mov	r4, r0
	minute = (minute + 60 - 1) % 60; // Keep new value in range 0..59
900070e4:	f9b0 0560 	ldrsh.w	r0, [r0, #1376]	@ 0x560
900070e8:	4b0d      	ldr	r3, [pc, #52]	@ (90007120 <_ZN11Screen1View10decMinutesEv+0x40>)
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070ea:	210a      	movs	r1, #10
	minute = (minute + 60 - 1) % 60; // Keep new value in range 0..59
900070ec:	303b      	adds	r0, #59	@ 0x3b
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
900070ee:	4a0d      	ldr	r2, [pc, #52]	@ (90007124 <_ZN11Screen1View10decMinutesEv+0x44>)
	minute = (minute + 60 - 1) % 60; // Keep new value in range 0..59
900070f0:	fb83 c300 	smull	ip, r3, r3, r0
900070f4:	eb03 0c00 	add.w	ip, r3, r0
900070f8:	17c3      	asrs	r3, r0, #31
900070fa:	ebc3 136c 	rsb	r3, r3, ip, asr #5
900070fe:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
90007102:	eba0 0383 	sub.w	r3, r0, r3, lsl #2
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
90007106:	f504 60a5 	add.w	r0, r4, #1320	@ 0x528
	minute = (minute + 60 - 1) % 60; // Keep new value in range 0..59
9000710a:	f8a4 3560 	strh.w	r3, [r4, #1376]	@ 0x560
	Unicode::snprintf(minutes_setBuffer, MINUTES_SET_SIZE, "%02d", minute);
9000710e:	f013 fc55 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	minutes_set.invalidate();
90007112:	f504 704e 	add.w	r0, r4, #824	@ 0x338
}
90007116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	minutes_set.invalidate();
9000711a:	f011 b912 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
9000711e:	bf00      	nop
90007120:	88888889 	.word	0x88888889
90007124:	9002de00 	.word	0x9002de00

90007128 <_ZN11Screen1View11incSessionsEv>:
	session = session + 1;
90007128:	f8b0 3562 	ldrh.w	r3, [r0, #1378]	@ 0x562
	Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
9000712c:	210a      	movs	r1, #10
9000712e:	4a08      	ldr	r2, [pc, #32]	@ (90007150 <_ZN11Screen1View11incSessionsEv+0x28>)
	session = session + 1;
90007130:	3301      	adds	r3, #1
90007132:	b21b      	sxth	r3, r3
void Screen1View::incSessions() {
90007134:	b510      	push	{r4, lr}
90007136:	4604      	mov	r4, r0
	session = session + 1;
90007138:	f8a0 3562 	strh.w	r3, [r0, #1378]	@ 0x562
	Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
9000713c:	f200 503c 	addw	r0, r0, #1340	@ 0x53c
90007140:	f013 fc3c 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sessions_set.invalidate();
90007144:	f504 7061 	add.w	r0, r4, #900	@ 0x384
}
90007148:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sessions_set.invalidate();
9000714c:	f011 b8f9 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
90007150:	9002de00 	.word	0x9002de00

90007154 <_ZN11Screen1View11decSessionsEv>:
	session = session - 1;
90007154:	f8b0 3562 	ldrh.w	r3, [r0, #1378]	@ 0x562
	Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
90007158:	210a      	movs	r1, #10
9000715a:	4a08      	ldr	r2, [pc, #32]	@ (9000717c <_ZN11Screen1View11decSessionsEv+0x28>)
	session = session - 1;
9000715c:	3b01      	subs	r3, #1
9000715e:	b21b      	sxth	r3, r3
void Screen1View::decSessions() {
90007160:	b510      	push	{r4, lr}
90007162:	4604      	mov	r4, r0
	session = session - 1;
90007164:	f8a0 3562 	strh.w	r3, [r0, #1378]	@ 0x562
	Unicode::snprintf(sessions_setBuffer, SESSIONS_SET_SIZE, "%02d", session);
90007168:	f200 503c 	addw	r0, r0, #1340	@ 0x53c
9000716c:	f013 fc26 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sessions_set.invalidate();
90007170:	f504 7061 	add.w	r0, r4, #900	@ 0x384
}
90007174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sessions_set.invalidate();
90007178:	f011 b8e3 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
9000717c:	9002de00 	.word	0x9002de00

90007180 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
90007180:	4770      	bx	lr
90007182:	bf00      	nop

90007184 <_ZThn4_N16Screen2PresenterD1Ev>:
90007184:	3804      	subs	r0, #4
90007186:	4770      	bx	lr

90007188 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
90007188:	4770      	bx	lr
9000718a:	bf00      	nop

9000718c <_ZN16Screen2PresenterD0Ev>:
9000718c:	b510      	push	{r4, lr}
9000718e:	4604      	mov	r4, r0
90007190:	2110      	movs	r1, #16
90007192:	f022 fd04 	bl	90029b9e <_ZdlPvj>
90007196:	4620      	mov	r0, r4
90007198:	bd10      	pop	{r4, pc}
9000719a:	bf00      	nop

9000719c <_ZThn4_N16Screen2PresenterD0Ev>:
9000719c:	b510      	push	{r4, lr}
9000719e:	1f04      	subs	r4, r0, #4
900071a0:	2110      	movs	r1, #16
900071a2:	4620      	mov	r0, r4
900071a4:	f022 fcfb 	bl	90029b9e <_ZdlPvj>
900071a8:	4620      	mov	r0, r4
900071aa:	bd10      	pop	{r4, pc}

900071ac <_ZN16Screen2PresenterC1ER11Screen2View>:
    : view(v)
900071ac:	4a05      	ldr	r2, [pc, #20]	@ (900071c4 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
900071ae:	60c1      	str	r1, [r0, #12]
900071b0:	6002      	str	r2, [r0, #0]
Screen2Presenter::Screen2Presenter(Screen2View& v)
900071b2:	b410      	push	{r4}
900071b4:	2400      	movs	r4, #0
900071b6:	6084      	str	r4, [r0, #8]
    : view(v)
900071b8:	f102 0418 	add.w	r4, r2, #24
900071bc:	6044      	str	r4, [r0, #4]
}
900071be:	f85d 4b04 	ldr.w	r4, [sp], #4
900071c2:	4770      	bx	lr
900071c4:	9002de58 	.word	0x9002de58

900071c8 <_ZN11Screen2View14tearDownScreenEv>:
void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();


}
900071c8:	4770      	bx	lr
900071ca:	bf00      	nop

900071cc <_ZN11Screen2View9stopTimerEv>:
//        minutes_left.invalidate();
//    }
//}

void Screen2View::stopTimer()
{
900071cc:	b530      	push	{r4, r5, lr}


	// Send STOP_TIMER command to TimerTask
	  TimerCommand_t command;
	  command.commandType = STOP_TIMER;
900071ce:	2101      	movs	r1, #1
{
900071d0:	b083      	sub	sp, #12
	  xQueueSend(xCommandQueue, &command, portMAX_DELAY);
900071d2:	4d0c      	ldr	r5, [pc, #48]	@ (90007204 <_ZN11Screen2View9stopTimerEv+0x38>)
{
900071d4:	4604      	mov	r4, r0
	  command.commandType = STOP_TIMER;
900071d6:	f88d 1000 	strb.w	r1, [sp]
	  xQueueSend(xCommandQueue, &command, portMAX_DELAY);
900071da:	2300      	movs	r3, #0
900071dc:	f04f 32ff 	mov.w	r2, #4294967295
900071e0:	6828      	ldr	r0, [r5, #0]
900071e2:	4669      	mov	r1, sp
900071e4:	f007 fbf0 	bl	9000e9c8 <xQueueGenericSend>

    void saveMinute(int16_t minute) {
        	model->saveMinute(minute);
900071e8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
    	minute = saveMinute;
900071ea:	2300      	movs	r3, #0

	  // Reset values in the presenter/model
	  presenter->saveMinute(0);    // Reset minutes to 0
	  presenter->saveSession(0);   // Reset sessions to 0

    minute = 0;
900071ec:	f504 5080 	add.w	r0, r4, #4096	@ 0x1000
900071f0:	6892      	ldr	r2, [r2, #8]
900071f2:	6053      	str	r3, [r2, #4]
900071f4:	f8c0 3ec4 	str.w	r3, [r0, #3780]	@ 0xec4
    second = 0;
    currentSession = 0;
900071f8:	f8a0 3eca 	strh.w	r3, [r0, #3786]	@ 0xeca
    isBreakSession = false;
900071fc:	f880 3ecc 	strb.w	r3, [r0, #3788]	@ 0xecc



}
90007200:	b003      	add	sp, #12
90007202:	bd30      	pop	{r4, r5, pc}
90007204:	24009108 	.word	0x24009108

90007208 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
90007208:	4b03      	ldr	r3, [pc, #12]	@ (90007218 <_ZN11Screen2ViewD1Ev+0x10>)
9000720a:	b510      	push	{r4, lr}
9000720c:	4604      	mov	r4, r0
9000720e:	6003      	str	r3, [r0, #0]
90007210:	f7ff f93a 	bl	90006488 <_ZN15Screen2ViewBaseD1Ev>
90007214:	4620      	mov	r0, r4
90007216:	bd10      	pop	{r4, pc}
90007218:	9002de80 	.word	0x9002de80

9000721c <_ZN11Screen2ViewD0Ev>:
9000721c:	4b06      	ldr	r3, [pc, #24]	@ (90007238 <_ZN11Screen2ViewD0Ev+0x1c>)
9000721e:	b510      	push	{r4, lr}
90007220:	4604      	mov	r4, r0
90007222:	6003      	str	r3, [r0, #0]
90007224:	f7ff f930 	bl	90006488 <_ZN15Screen2ViewBaseD1Ev>
90007228:	f641 61d8 	movw	r1, #7896	@ 0x1ed8
9000722c:	4620      	mov	r0, r4
9000722e:	f022 fcb6 	bl	90029b9e <_ZdlPvj>
90007232:	4620      	mov	r0, r4
90007234:	bd10      	pop	{r4, pc}
90007236:	bf00      	nop
90007238:	9002de80 	.word	0x9002de80

9000723c <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View():  minute(0), second(0), session(0),currentSession(0),
9000723c:	b510      	push	{r4, lr}
9000723e:	4604      	mov	r4, r0
isBreakSession(false), tickCount( 0), addStart(1), addEnd(2)
90007240:	f7ff f952 	bl	900064e8 <_ZN15Screen2ViewBaseC1Ev>
Screen2View::Screen2View():  minute(0), second(0), session(0),currentSession(0),
90007244:	2200      	movs	r2, #0
isBreakSession(false), tickCount( 0), addStart(1), addEnd(2)
90007246:	4809      	ldr	r0, [pc, #36]	@ (9000726c <_ZN11Screen2ViewC1Ev+0x30>)
Screen2View::Screen2View():  minute(0), second(0), session(0),currentSession(0),
90007248:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
isBreakSession(false), tickCount( 0), addStart(1), addEnd(2)
9000724c:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
90007250:	6020      	str	r0, [r4, #0]
}
90007252:	4620      	mov	r0, r4
Screen2View::Screen2View():  minute(0), second(0), session(0),currentSession(0),
90007254:	f8c3 2ec4 	str.w	r2, [r3, #3780]	@ 0xec4
90007258:	f8c3 2ec8 	str.w	r2, [r3, #3784]	@ 0xec8
isBreakSession(false), tickCount( 0), addStart(1), addEnd(2)
9000725c:	f883 2ecc 	strb.w	r2, [r3, #3788]	@ 0xecc
90007260:	2202      	movs	r2, #2
90007262:	f8c3 1ed2 	str.w	r1, [r3, #3794]	@ 0xed2
90007266:	f8a3 2ed6 	strh.w	r2, [r3, #3798]	@ 0xed6
}
9000726a:	bd10      	pop	{r4, pc}
9000726c:	9002de80 	.word	0x9002de80

90007270 <_ZN11Screen2View11setupScreenEv>:
{
90007270:	b570      	push	{r4, r5, r6, lr}
90007272:	4604      	mov	r4, r0
    Screen2ViewBase::setupScreen();
90007274:	f7ff f8d4 	bl	90006420 <_ZN15Screen2ViewBase11setupScreenEv>
       Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
90007278:	4e11      	ldr	r6, [pc, #68]	@ (900072c0 <_ZN11Screen2View11setupScreenEv+0x50>)
9000727a:	210a      	movs	r1, #10
        }
        int16_t getMinute() {
            return model->getMinute();
        }
        int16_t getSession() {
        	return model->getSession();
9000727c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    session = presenter->getSession();
9000727e:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
       Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
90007282:	f504 7016 	add.w	r0, r4, #600	@ 0x258
90007286:	689b      	ldr	r3, [r3, #8]
    }
    int16_t getSession() {
    	return session;
90007288:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
    session = presenter->getSession();
9000728c:	f8a5 2ec8 	strh.w	r2, [r5, #3784]	@ 0xec8
       Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
90007290:	4632      	mov	r2, r6
    	return minute;
90007292:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
    studyTime = presenter->getMinute();
90007296:	f8a5 3ece 	strh.w	r3, [r5, #3790]	@ 0xece
       Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
9000729a:	f9b5 3ec4 	ldrsh.w	r3, [r5, #3780]	@ 0xec4
9000729e:	f013 fb8d 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
       Unicode::snprintf(minutes_leftBuffer2, MINUTES_LEFTBUFFER2_SIZE,"%02d" , second);
900072a2:	f9b5 3ec6 	ldrsh.w	r3, [r5, #3782]	@ 0xec6
900072a6:	4632      	mov	r2, r6
900072a8:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
900072ac:	210a      	movs	r1, #10
900072ae:	f013 fb85 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
       minutes_left.invalidate();
900072b2:	f104 00f4 	add.w	r0, r4, #244	@ 0xf4
}
900072b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
       minutes_left.invalidate();
900072ba:	f011 b842 	b.w	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
900072be:	bf00      	nop
900072c0:	9002de00 	.word	0x9002de00

900072c4 <_ZN11Screen2View15handleTickEventEv>:
void Screen2View::handleTickEvent() {
900072c4:	b530      	push	{r4, r5, lr}
  if (xQueueReceive(xTimeQueue, &timeUpdate, 0) == pdPASS) {
900072c6:	4c15      	ldr	r4, [pc, #84]	@ (9000731c <_ZN11Screen2View15handleTickEventEv+0x58>)
void Screen2View::handleTickEvent() {
900072c8:	b083      	sub	sp, #12
900072ca:	4603      	mov	r3, r0
  if (xQueueReceive(xTimeQueue, &timeUpdate, 0) == pdPASS) {
900072cc:	2200      	movs	r2, #0
900072ce:	6820      	ldr	r0, [r4, #0]
900072d0:	4669      	mov	r1, sp
void Screen2View::handleTickEvent() {
900072d2:	461c      	mov	r4, r3
  if (xQueueReceive(xTimeQueue, &timeUpdate, 0) == pdPASS) {
900072d4:	f007 fdb6 	bl	9000ee44 <xQueueReceive>
900072d8:	2801      	cmp	r0, #1
900072da:	d001      	beq.n	900072e0 <_ZN11Screen2View15handleTickEventEv+0x1c>
}
900072dc:	b003      	add	sp, #12
900072de:	bd30      	pop	{r4, r5, pc}
    minute = timeUpdate.minutes;   // Mirror FreeRTOS state
900072e0:	9900      	ldr	r1, [sp, #0]
900072e2:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    isBreakSession = timeUpdate.isBreak;
900072e6:	f89d 0004 	ldrb.w	r0, [sp, #4]
    Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
900072ea:	b20b      	sxth	r3, r1
    minute = timeUpdate.minutes;   // Mirror FreeRTOS state
900072ec:	f8c5 1ec4 	str.w	r1, [r5, #3780]	@ 0xec4
    isBreakSession = timeUpdate.isBreak;
900072f0:	f885 0ecc 	strb.w	r0, [r5, #3788]	@ 0xecc
    Unicode::snprintf(minutes_leftBuffer1, MINUTES_LEFTBUFFER1_SIZE, "%02d", minute);
900072f4:	210a      	movs	r1, #10
900072f6:	4a0a      	ldr	r2, [pc, #40]	@ (90007320 <_ZN11Screen2View15handleTickEventEv+0x5c>)
900072f8:	f504 7016 	add.w	r0, r4, #600	@ 0x258
900072fc:	f013 fb5e 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(minutes_leftBuffer2, MINUTES_LEFTBUFFER2_SIZE, "%02d", second);
90007300:	f9b5 3ec6 	ldrsh.w	r3, [r5, #3782]	@ 0xec6
90007304:	4a06      	ldr	r2, [pc, #24]	@ (90007320 <_ZN11Screen2View15handleTickEventEv+0x5c>)
90007306:	210a      	movs	r1, #10
90007308:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
9000730c:	f013 fb56 	bl	9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    minutes_left.invalidate();
90007310:	f104 00f4 	add.w	r0, r4, #244	@ 0xf4
90007314:	f011 f815 	bl	90018342 <_ZNK8touchgfx8Drawable10invalidateEv>
}
90007318:	b003      	add	sp, #12
9000731a:	bd30      	pop	{r4, r5, pc}
9000731c:	24009104 	.word	0x24009104
90007320:	9002de00 	.word	0x9002de00

90007324 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90007324:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007328:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
9000732a:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
9000732e:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007332:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90007334:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90007336:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
9000733a:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
9000733e:	4770      	bx	lr

90007340 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90007340:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90007344:	2b01      	cmp	r3, #1
90007346:	d102      	bne.n	9000734e <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90007348:	2300      	movs	r3, #0
9000734a:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
9000734e:	2000      	movs	r0, #0
90007350:	4770      	bx	lr
90007352:	bf00      	nop

90007354 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90007354:	2000      	movs	r0, #0
90007356:	4770      	bx	lr

90007358 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007358:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000735a:	6904      	ldr	r4, [r0, #16]
9000735c:	8900      	ldrh	r0, [r0, #8]
9000735e:	46a4      	mov	ip, r4
}
90007360:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90007364:	4760      	bx	ip
90007366:	bf00      	nop

90007368 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007368:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000736a:	68c4      	ldr	r4, [r0, #12]
9000736c:	8900      	ldrh	r0, [r0, #8]
9000736e:	46a4      	mov	ip, r4
}
90007370:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90007374:	4760      	bx	ip
90007376:	bf00      	nop

90007378 <FT5336_GestureConfig>:
{
90007378:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000737a:	f100 0518 	add.w	r5, r0, #24
{
9000737e:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90007380:	7809      	ldrb	r1, [r1, #0]
90007382:	4628      	mov	r0, r5
90007384:	f000 f96c 	bl	90007660 <ft5336_radian_value>
90007388:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000738a:	7931      	ldrb	r1, [r6, #4]
9000738c:	4628      	mov	r0, r5
9000738e:	f000 f975 	bl	9000767c <ft5336_offset_left_right>
90007392:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90007394:	7a31      	ldrb	r1, [r6, #8]
90007396:	4628      	mov	r0, r5
90007398:	f000 f97e 	bl	90007698 <ft5336_offset_up_down>
9000739c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000739e:	7b31      	ldrb	r1, [r6, #12]
900073a0:	4628      	mov	r0, r5
900073a2:	f000 f987 	bl	900076b4 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900073a6:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900073a8:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900073aa:	4628      	mov	r0, r5
900073ac:	f000 f990 	bl	900076d0 <ft5336_distance_up_down>
900073b0:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900073b2:	7d31      	ldrb	r1, [r6, #20]
900073b4:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900073b6:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900073b8:	f000 f998 	bl	900076ec <ft5336_distance_zoom>
  if(ret != FT5336_OK)
900073bc:	42c4      	cmn	r4, r0
}
900073be:	bf14      	ite	ne
900073c0:	f04f 30ff 	movne.w	r0, #4294967295
900073c4:	2000      	moveq	r0, #0
900073c6:	bd70      	pop	{r4, r5, r6, pc}

900073c8 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
900073c8:	3018      	adds	r0, #24
900073ca:	f000 b9ab 	b.w	90007724 <ft5336_chip_id>
900073ce:	bf00      	nop

900073d0 <FT5336_GetState>:
{
900073d0:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900073d2:	f100 0518 	add.w	r5, r0, #24
{
900073d6:	b083      	sub	sp, #12
900073d8:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900073da:	4628      	mov	r0, r5
900073dc:	a901      	add	r1, sp, #4
900073de:	f000 f931 	bl	90007644 <ft5336_td_status>
900073e2:	bb10      	cbnz	r0, 9000742a <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900073e4:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900073e8:	2b05      	cmp	r3, #5
900073ea:	bf94      	ite	ls
900073ec:	4619      	movls	r1, r3
900073ee:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900073f0:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900073f2:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900073f4:	4628      	mov	r0, r5
900073f6:	2103      	movs	r1, #3
900073f8:	eb0d 0203 	add.w	r2, sp, r3
900073fc:	f000 f910 	bl	90007620 <ft5336_read_reg>
90007400:	b9b0      	cbnz	r0, 90007430 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007402:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007406:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000740a:	0212      	lsls	r2, r2, #8
9000740c:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007410:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007412:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007416:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000741a:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000741c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90007420:	430b      	orrs	r3, r1
90007422:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90007426:	b003      	add	sp, #12
90007428:	bd30      	pop	{r4, r5, pc}
9000742a:	f04f 31ff 	mov.w	r1, #4294967295
9000742e:	e7df      	b.n	900073f0 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90007430:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007434:	e7f7      	b.n	90007426 <FT5336_GetState+0x56>
90007436:	bf00      	nop

90007438 <FT5336_GetMultiTouchState>:
{
90007438:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000743a:	f100 0518 	add.w	r5, r0, #24
{
9000743e:	b088      	sub	sp, #32
90007440:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007442:	4628      	mov	r0, r5
90007444:	4669      	mov	r1, sp
90007446:	f000 f8fd 	bl	90007644 <ft5336_td_status>
9000744a:	2800      	cmp	r0, #0
9000744c:	f040 809a 	bne.w	90007584 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90007450:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90007454:	2b05      	cmp	r3, #5
90007456:	bf94      	ite	ls
90007458:	4619      	movls	r1, r3
9000745a:	2100      	movhi	r1, #0
9000745c:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000745e:	231e      	movs	r3, #30
90007460:	466a      	mov	r2, sp
90007462:	4628      	mov	r0, r5
90007464:	2103      	movs	r1, #3
90007466:	f000 f8db 	bl	90007620 <ft5336_read_reg>
9000746a:	2800      	cmp	r0, #0
9000746c:	f040 808d 	bne.w	9000758a <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007470:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007474:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007478:	020a      	lsls	r2, r1, #8
9000747a:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000747e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007480:	f89d c007 	ldrb.w	ip, [sp, #7]
90007484:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007488:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000748a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000748e:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007492:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007494:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007498:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000749a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000749c:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000749e:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074a0:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074a4:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074a6:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074aa:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074ae:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074b0:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074b2:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074b6:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074b8:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900074ba:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074bc:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074c0:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900074c2:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074c4:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074c8:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900074cc:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074ce:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074d0:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074d2:	ea45 050c 	orr.w	r5, r5, ip
900074d6:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074da:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900074de:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074e0:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074e2:	0212      	lsls	r2, r2, #8
900074e4:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900074e8:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074ea:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074ee:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074f2:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900074f4:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900074f6:	f89d 300e 	ldrb.w	r3, [sp, #14]
900074fa:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900074fc:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007500:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007502:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007504:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007508:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000750a:	f89d 200f 	ldrb.w	r2, [sp, #15]
9000750e:	4313      	orrs	r3, r2
90007510:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007512:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007514:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007518:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000751c:	020a      	lsls	r2, r1, #8
9000751e:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007522:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007524:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007528:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000752a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000752e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007530:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007534:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007536:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007538:	f89d 1018 	ldrb.w	r1, [sp, #24]
9000753c:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000753e:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007540:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007542:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007546:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007548:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000754c:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000754e:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007552:	f89d 301d 	ldrb.w	r3, [sp, #29]
90007556:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007558:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000755a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000755c:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007560:	6625      	str	r5, [r4, #96]	@ 0x60
90007562:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007564:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007568:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000756a:	021b      	lsls	r3, r3, #8
9000756c:	f89d 101b 	ldrb.w	r1, [sp, #27]
90007570:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90007574:	430b      	orrs	r3, r1
90007576:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007578:	f89d 3019 	ldrb.w	r3, [sp, #25]
9000757c:	4313      	orrs	r3, r2
9000757e:	6163      	str	r3, [r4, #20]
}
90007580:	b008      	add	sp, #32
90007582:	bd70      	pop	{r4, r5, r6, pc}
90007584:	f04f 31ff 	mov.w	r1, #4294967295
90007588:	e768      	b.n	9000745c <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000758a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000758e:	e7f7      	b.n	90007580 <FT5336_GetMultiTouchState+0x148>

90007590 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007590:	3018      	adds	r0, #24
90007592:	f000 b84d 	b.w	90007630 <ft5336_gest_id>
90007596:	bf00      	nop

90007598 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90007598:	2101      	movs	r1, #1
9000759a:	3018      	adds	r0, #24
9000759c:	f000 b8b4 	b.w	90007708 <ft5336_g_mode>

900075a0 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900075a0:	2100      	movs	r1, #0
900075a2:	3018      	adds	r0, #24
900075a4:	f000 b8b0 	b.w	90007708 <ft5336_g_mode>

900075a8 <FT5336_Init>:
{
900075a8:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
900075aa:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
900075ae:	b98d      	cbnz	r5, 900075d4 <FT5336_Init+0x2c>
    pObj->IO.Init();
900075b0:	4606      	mov	r6, r0
900075b2:	4604      	mov	r4, r0
900075b4:	f856 3b18 	ldr.w	r3, [r6], #24
900075b8:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900075ba:	4629      	mov	r1, r5
900075bc:	4630      	mov	r0, r6
900075be:	f000 f8a3 	bl	90007708 <ft5336_g_mode>
  if(ret != FT5336_OK)
900075c2:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
900075c4:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
900075c8:	bf18      	it	ne
900075ca:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900075cc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
900075d0:	4240      	negs	r0, r0
}
900075d2:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
900075d4:	2000      	movs	r0, #0
}
900075d6:	bd70      	pop	{r4, r5, r6, pc}

900075d8 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
900075d8:	2000      	movs	r0, #0
900075da:	4770      	bx	lr

900075dc <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900075dc:	b1c0      	cbz	r0, 90007610 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900075de:	890a      	ldrh	r2, [r1, #8]
{
900075e0:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900075e2:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900075e6:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900075e8:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900075ec:	694a      	ldr	r2, [r1, #20]
900075ee:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900075f2:	4909      	ldr	r1, [pc, #36]	@ (90007618 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900075f4:	60c5      	str	r5, [r0, #12]
900075f6:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900075fa:	4a08      	ldr	r2, [pc, #32]	@ (9000761c <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900075fc:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007600:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90007602:	b10b      	cbz	r3, 90007608 <FT5336_RegisterBusIO+0x2c>
}
90007604:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90007606:	4718      	bx	r3
}
90007608:	f04f 30ff 	mov.w	r0, #4294967295
9000760c:	bc30      	pop	{r4, r5}
9000760e:	4770      	bx	lr
90007610:	f04f 30ff 	mov.w	r0, #4294967295
90007614:	4770      	bx	lr
90007616:	bf00      	nop
90007618:	90007359 	.word	0x90007359
9000761c:	90007369 	.word	0x90007369

90007620 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90007620:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007622:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90007626:	46a4      	mov	ip, r4
}
90007628:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000762c:	4760      	bx	ip
9000762e:	bf00      	nop

90007630 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007630:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007632:	2301      	movs	r3, #1
{
90007634:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007636:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
9000763a:	4619      	mov	r1, r3
9000763c:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000763e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007642:	4760      	bx	ip

90007644 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90007644:	b538      	push	{r3, r4, r5, lr}
90007646:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007648:	2301      	movs	r3, #1
9000764a:	2102      	movs	r1, #2
9000764c:	4622      	mov	r2, r4
9000764e:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90007652:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90007654:	b918      	cbnz	r0, 9000765e <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90007656:	7823      	ldrb	r3, [r4, #0]
90007658:	f003 030f 	and.w	r3, r3, #15
9000765c:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000765e:	bd38      	pop	{r3, r4, r5, pc}

90007660 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90007660:	b510      	push	{r4, lr}
90007662:	460c      	mov	r4, r1
90007664:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007666:	2301      	movs	r3, #1
90007668:	2191      	movs	r1, #145	@ 0x91
{
9000766a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000766e:	f10d 0207 	add.w	r2, sp, #7
90007672:	6804      	ldr	r4, [r0, #0]
90007674:	6880      	ldr	r0, [r0, #8]
90007676:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90007678:	b002      	add	sp, #8
9000767a:	bd10      	pop	{r4, pc}

9000767c <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
9000767c:	b510      	push	{r4, lr}
9000767e:	460c      	mov	r4, r1
90007680:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007682:	2301      	movs	r3, #1
90007684:	2192      	movs	r1, #146	@ 0x92
{
90007686:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000768a:	f10d 0207 	add.w	r2, sp, #7
9000768e:	6804      	ldr	r4, [r0, #0]
90007690:	6880      	ldr	r0, [r0, #8]
90007692:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90007694:	b002      	add	sp, #8
90007696:	bd10      	pop	{r4, pc}

90007698 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007698:	b510      	push	{r4, lr}
9000769a:	460c      	mov	r4, r1
9000769c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000769e:	2301      	movs	r3, #1
900076a0:	2193      	movs	r1, #147	@ 0x93
{
900076a2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076a6:	f10d 0207 	add.w	r2, sp, #7
900076aa:	6804      	ldr	r4, [r0, #0]
900076ac:	6880      	ldr	r0, [r0, #8]
900076ae:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
900076b0:	b002      	add	sp, #8
900076b2:	bd10      	pop	{r4, pc}

900076b4 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900076b4:	b510      	push	{r4, lr}
900076b6:	460c      	mov	r4, r1
900076b8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076ba:	2301      	movs	r3, #1
900076bc:	2194      	movs	r1, #148	@ 0x94
{
900076be:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076c2:	f10d 0207 	add.w	r2, sp, #7
900076c6:	6804      	ldr	r4, [r0, #0]
900076c8:	6880      	ldr	r0, [r0, #8]
900076ca:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
900076cc:	b002      	add	sp, #8
900076ce:	bd10      	pop	{r4, pc}

900076d0 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900076d0:	b510      	push	{r4, lr}
900076d2:	460c      	mov	r4, r1
900076d4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076d6:	2301      	movs	r3, #1
900076d8:	2195      	movs	r1, #149	@ 0x95
{
900076da:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076de:	f10d 0207 	add.w	r2, sp, #7
900076e2:	6804      	ldr	r4, [r0, #0]
900076e4:	6880      	ldr	r0, [r0, #8]
900076e6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900076e8:	b002      	add	sp, #8
900076ea:	bd10      	pop	{r4, pc}

900076ec <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900076ec:	b510      	push	{r4, lr}
900076ee:	460c      	mov	r4, r1
900076f0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076f2:	2301      	movs	r3, #1
900076f4:	2196      	movs	r1, #150	@ 0x96
{
900076f6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900076fa:	f10d 0207 	add.w	r2, sp, #7
900076fe:	6804      	ldr	r4, [r0, #0]
90007700:	6880      	ldr	r0, [r0, #8]
90007702:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007704:	b002      	add	sp, #8
90007706:	bd10      	pop	{r4, pc}

90007708 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007708:	b510      	push	{r4, lr}
9000770a:	460c      	mov	r4, r1
9000770c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000770e:	2301      	movs	r3, #1
90007710:	21a4      	movs	r1, #164	@ 0xa4
{
90007712:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007716:	f10d 0207 	add.w	r2, sp, #7
9000771a:	6804      	ldr	r4, [r0, #0]
9000771c:	6880      	ldr	r0, [r0, #8]
9000771e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90007720:	b002      	add	sp, #8
90007722:	bd10      	pop	{r4, pc}

90007724 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007724:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007726:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
9000772a:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000772c:	2301      	movs	r3, #1
9000772e:	46a4      	mov	ip, r4
90007730:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90007732:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007736:	4760      	bx	ip

90007738 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90007738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
9000773a:	680b      	ldr	r3, [r1, #0]
{
9000773c:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000773e:	4c2a      	ldr	r4, [pc, #168]	@ (900077e8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007740:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90007744:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90007746:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90007748:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000774a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
9000774c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000774e:	2301      	movs	r3, #1
90007750:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90007752:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007754:	f005 ff98 	bl	9000d688 <HAL_SDRAM_SendCommand>
90007758:	2800      	cmp	r0, #0
9000775a:	d142      	bne.n	900077e2 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
9000775c:	f000 ff48 	bl	900085f0 <HAL_GetTick>
90007760:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90007762:	f000 ff45 	bl	900085f0 <HAL_GetTick>
90007766:	4286      	cmp	r6, r0
90007768:	d0fb      	beq.n	90007762 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000776a:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
9000776c:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000776e:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007770:	491d      	ldr	r1, [pc, #116]	@ (900077e8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007772:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90007774:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90007776:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007778:	4638      	mov	r0, r7
9000777a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
9000777e:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90007780:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007782:	f005 ff81 	bl	9000d688 <HAL_SDRAM_SendCommand>
90007786:	bb60      	cbnz	r0, 900077e2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007788:	4917      	ldr	r1, [pc, #92]	@ (900077e8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000778a:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000778e:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007790:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90007792:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90007796:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007798:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
9000779c:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000779e:	f005 ff73 	bl	9000d688 <HAL_SDRAM_SendCommand>
900077a2:	b9f0      	cbnz	r0, 900077e2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900077a4:	4910      	ldr	r1, [pc, #64]	@ (900077e8 <MT48LC4M32B2_Init+0xb0>)
900077a6:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900077a8:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
900077ac:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900077ae:	696a      	ldr	r2, [r5, #20]
900077b0:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900077b2:	69aa      	ldr	r2, [r5, #24]
900077b4:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900077b6:	69ea      	ldr	r2, [r5, #28]
900077b8:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
900077ba:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
900077bc:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900077be:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
900077c0:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900077c4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900077c8:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900077ca:	f005 ff5d 	bl	9000d688 <HAL_SDRAM_SendCommand>
900077ce:	b940      	cbnz	r0, 900077e2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
900077d0:	68a9      	ldr	r1, [r5, #8]
900077d2:	4638      	mov	r0, r7
900077d4:	f005 ff78 	bl	9000d6c8 <HAL_SDRAM_ProgramRefreshRate>
900077d8:	3800      	subs	r0, #0
900077da:	bf18      	it	ne
900077dc:	2001      	movne	r0, #1
900077de:	4240      	negs	r0, r0
}
900077e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900077e2:	f04f 30ff 	mov.w	r0, #4294967295
}
900077e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900077e8:	240094b0 	.word	0x240094b0

900077ec <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900077ec:	4a10      	ldr	r2, [pc, #64]	@ (90007830 <BSP_I2C4_DeInit+0x44>)
{
900077ee:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900077f0:	6813      	ldr	r3, [r2, #0]
900077f2:	3b01      	subs	r3, #1
900077f4:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900077f6:	b10b      	cbz	r3, 900077fc <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900077f8:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900077fa:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900077fc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90007800:	480c      	ldr	r0, [pc, #48]	@ (90007834 <BSP_I2C4_DeInit+0x48>)
90007802:	f001 fab7 	bl	90008d74 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007806:	480b      	ldr	r0, [pc, #44]	@ (90007834 <BSP_I2C4_DeInit+0x48>)
90007808:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000780c:	f001 fab2 	bl	90008d74 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007810:	4a09      	ldr	r2, [pc, #36]	@ (90007838 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007812:	480a      	ldr	r0, [pc, #40]	@ (9000783c <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007814:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90007818:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000781c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007820:	f001 feb4 	bl	9000958c <HAL_I2C_DeInit>
90007824:	2800      	cmp	r0, #0
90007826:	d0e7      	beq.n	900077f8 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90007828:	f06f 0007 	mvn.w	r0, #7
}
9000782c:	bd08      	pop	{r3, pc}
9000782e:	bf00      	nop
90007830:	24009f18 	.word	0x24009f18
90007834:	58020c00 	.word	0x58020c00
90007838:	58024400 	.word	0x58024400
9000783c:	240094c0 	.word	0x240094c0

90007840 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90007840:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90007842:	2201      	movs	r2, #1
{
90007844:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90007846:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
9000784a:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000784e:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90007852:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90007856:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90007858:	f001 fe3c 	bl	900094d4 <HAL_I2C_Init>
9000785c:	b108      	cbz	r0, 90007862 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000785e:	2001      	movs	r0, #1
}
90007860:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90007862:	4601      	mov	r1, r0
90007864:	4620      	mov	r0, r4
90007866:	f002 f8af 	bl	900099c8 <HAL_I2CEx_ConfigAnalogFilter>
9000786a:	2800      	cmp	r0, #0
9000786c:	d1f7      	bne.n	9000785e <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000786e:	4601      	mov	r1, r0
90007870:	4620      	mov	r0, r4
90007872:	f002 f8d3 	bl	90009a1c <HAL_I2CEx_ConfigDigitalFilter>
90007876:	3800      	subs	r0, #0
90007878:	bf18      	it	ne
9000787a:	2001      	movne	r0, #1
}
9000787c:	bd10      	pop	{r4, pc}
9000787e:	bf00      	nop

90007880 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90007880:	4b9a      	ldr	r3, [pc, #616]	@ (90007aec <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
90007882:	489b      	ldr	r0, [pc, #620]	@ (90007af0 <BSP_I2C4_Init+0x270>)
90007884:	4a9b      	ldr	r2, [pc, #620]	@ (90007af4 <BSP_I2C4_Init+0x274>)
{
90007886:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
9000788a:	681c      	ldr	r4, [r3, #0]
{
9000788c:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
9000788e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90007890:	b11c      	cbz	r4, 9000789a <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90007892:	2000      	movs	r0, #0
}
90007894:	b01d      	add	sp, #116	@ 0x74
90007896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
9000789a:	2201      	movs	r2, #1
9000789c:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000789e:	f002 f88d 	bl	900099bc <HAL_I2C_GetState>
900078a2:	2800      	cmp	r0, #0
900078a4:	d1f5      	bne.n	90007892 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900078a6:	4d94      	ldr	r5, [pc, #592]	@ (90007af8 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900078a8:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900078ac:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900078ae:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900078b0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900078b4:	f04f 0800 	mov.w	r8, #0
900078b8:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900078bc:	f043 0308 	orr.w	r3, r3, #8
900078c0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900078c4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900078c8:	f003 0308 	and.w	r3, r3, #8
900078cc:	9313      	str	r3, [sp, #76]	@ 0x4c
900078ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900078d0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900078d4:	f043 0308 	orr.w	r3, r3, #8
900078d8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900078dc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900078e0:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900078e2:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900078e6:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900078ea:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900078ec:	a916      	add	r1, sp, #88	@ 0x58
900078ee:	4883      	ldr	r0, [pc, #524]	@ (90007afc <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900078f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900078f2:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900078f6:	f001 f8fb 	bl	90008af0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900078fa:	2312      	movs	r3, #18
900078fc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007900:	a916      	add	r1, sp, #88	@ 0x58
90007902:	487e      	ldr	r0, [pc, #504]	@ (90007afc <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007904:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007906:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
9000790a:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000790e:	f001 f8ef 	bl	90008af0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007912:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007916:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000791a:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000791e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007922:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90007926:	9315      	str	r3, [sp, #84]	@ 0x54
90007928:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
9000792a:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000792e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007932:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90007936:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000793a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000793e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007942:	f004 fdb7 	bl	9000c4b4 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007946:	2800      	cmp	r0, #0
90007948:	f000 81fd 	beq.w	90007d46 <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000794c:	4b6c      	ldr	r3, [pc, #432]	@ (90007b00 <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
9000794e:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90007950:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007954:	4e6b      	ldr	r6, [pc, #428]	@ (90007b04 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007956:	eb03 0350 	add.w	r3, r3, r0, lsr #1
9000795a:	9401      	str	r4, [sp, #4]
9000795c:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90007960:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007962:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007964:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007968:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
9000796c:	4b66      	ldr	r3, [pc, #408]	@ (90007b08 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000796e:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90007970:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
90007974:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
90007976:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
9000797a:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
9000797c:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
90007980:	4689      	mov	r9, r1
90007982:	4622      	mov	r2, r4
90007984:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007986:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
9000798a:	46b8      	mov	r8, r7
9000798c:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90007990:	bf2c      	ite	cs
90007992:	2001      	movcs	r0, #1
90007994:	2000      	movcc	r0, #0
90007996:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
9000799a:	f000 0001 	and.w	r0, r0, #1
9000799e:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900079a2:	bf88      	it	hi
900079a4:	2000      	movhi	r0, #0
900079a6:	459e      	cmp	lr, r3
900079a8:	eb07 0483 	add.w	r4, r7, r3, lsl #2
900079ac:	9004      	str	r0, [sp, #16]
900079ae:	bf8c      	ite	hi
900079b0:	2000      	movhi	r0, #0
900079b2:	2001      	movls	r0, #1
900079b4:	459c      	cmp	ip, r3
900079b6:	940f      	str	r4, [sp, #60]	@ 0x3c
900079b8:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
900079bc:	bf38      	it	cc
900079be:	2000      	movcc	r0, #0
900079c0:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
900079c4:	9006      	str	r0, [sp, #24]
900079c6:	eb07 0041 	add.w	r0, r7, r1, lsl #1
900079ca:	9005      	str	r0, [sp, #20]
900079cc:	bf94      	ite	ls
900079ce:	2001      	movls	r0, #1
900079d0:	2000      	movhi	r0, #0
900079d2:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
900079d6:	f000 0401 	and.w	r4, r0, #1
900079da:	bf38      	it	cc
900079dc:	2400      	movcc	r4, #0
900079de:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900079e0:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900079e4:	9407      	str	r4, [sp, #28]
900079e6:	bf8c      	ite	hi
900079e8:	2400      	movhi	r4, #0
900079ea:	2401      	movls	r4, #1
900079ec:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900079ee:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900079f0:	bf38      	it	cc
900079f2:	2400      	movcc	r4, #0
900079f4:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
900079f8:	bf98      	it	ls
900079fa:	2001      	movls	r0, #1
900079fc:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007a00:	9408      	str	r4, [sp, #32]
90007a02:	465c      	mov	r4, fp
90007a04:	f000 0001 	and.w	r0, r0, #1
90007a08:	bf38      	it	cc
90007a0a:	2000      	movcc	r0, #0
90007a0c:	45de      	cmp	lr, fp
90007a0e:	9009      	str	r0, [sp, #36]	@ 0x24
90007a10:	4658      	mov	r0, fp
90007a12:	bf8c      	ite	hi
90007a14:	2000      	movhi	r0, #0
90007a16:	2001      	movls	r0, #1
90007a18:	45dc      	cmp	ip, fp
90007a1a:	bf38      	it	cc
90007a1c:	2000      	movcc	r0, #0
90007a1e:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
90007a22:	4683      	mov	fp, r0
90007a24:	bf94      	ite	ls
90007a26:	f04f 0b01 	movls.w	fp, #1
90007a2a:	f04f 0b00 	movhi.w	fp, #0
90007a2e:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90007a32:	900a      	str	r0, [sp, #40]	@ 0x28
90007a34:	f00b 0b01 	and.w	fp, fp, #1
90007a38:	bf38      	it	cc
90007a3a:	f04f 0b00 	movcc.w	fp, #0
90007a3e:	4658      	mov	r0, fp
90007a40:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90007a44:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90007a48:	45de      	cmp	lr, fp
90007a4a:	bf8c      	ite	hi
90007a4c:	2000      	movhi	r0, #0
90007a4e:	2001      	movls	r0, #1
90007a50:	45dc      	cmp	ip, fp
90007a52:	bf38      	it	cc
90007a54:	2000      	movcc	r0, #0
90007a56:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90007a5a:	900c      	str	r0, [sp, #48]	@ 0x30
90007a5c:	bf98      	it	ls
90007a5e:	f04f 0b01 	movls.w	fp, #1
90007a62:	9805      	ldr	r0, [sp, #20]
90007a64:	bf88      	it	hi
90007a66:	f04f 0b00 	movhi.w	fp, #0
90007a6a:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90007a6e:	f00b 0b01 	and.w	fp, fp, #1
90007a72:	4601      	mov	r1, r0
90007a74:	bf38      	it	cc
90007a76:	f04f 0b00 	movcc.w	fp, #0
90007a7a:	4586      	cmp	lr, r0
90007a7c:	bf8c      	ite	hi
90007a7e:	2100      	movhi	r1, #0
90007a80:	2101      	movls	r1, #1
90007a82:	4584      	cmp	ip, r0
90007a84:	4620      	mov	r0, r4
90007a86:	bf38      	it	cc
90007a88:	2100      	movcc	r1, #0
90007a8a:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
90007a8e:	910d      	str	r1, [sp, #52]	@ 0x34
90007a90:	bf94      	ite	ls
90007a92:	2101      	movls	r1, #1
90007a94:	2100      	movhi	r1, #0
90007a96:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90007a9a:	f001 0101 	and.w	r1, r1, #1
90007a9e:	bf38      	it	cc
90007aa0:	2100      	movcc	r1, #0
90007aa2:	910e      	str	r1, [sp, #56]	@ 0x38
90007aa4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90007aa6:	4571      	cmp	r1, lr
90007aa8:	460b      	mov	r3, r1
90007aaa:	bf34      	ite	cc
90007aac:	2300      	movcc	r3, #0
90007aae:	2301      	movcs	r3, #1
90007ab0:	4561      	cmp	r1, ip
90007ab2:	bf88      	it	hi
90007ab4:	2300      	movhi	r3, #0
90007ab6:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90007aba:	930f      	str	r3, [sp, #60]	@ 0x3c
90007abc:	bf94      	ite	ls
90007abe:	2301      	movls	r3, #1
90007ac0:	2300      	movhi	r3, #0
90007ac2:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90007ac6:	f04f 0400 	mov.w	r4, #0
90007aca:	f003 0301 	and.w	r3, r3, #1
90007ace:	bf38      	it	cc
90007ad0:	2300      	movcc	r3, #0
90007ad2:	9310      	str	r3, [sp, #64]	@ 0x40
90007ad4:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90007ad8:	459e      	cmp	lr, r3
90007ada:	bf8c      	ite	hi
90007adc:	2100      	movhi	r1, #0
90007ade:	2101      	movls	r1, #1
90007ae0:	459c      	cmp	ip, r3
90007ae2:	bf38      	it	cc
90007ae4:	2100      	movcc	r1, #0
90007ae6:	9105      	str	r1, [sp, #20]
90007ae8:	e014      	b.n	90007b14 <BSP_I2C4_Init+0x294>
90007aea:	bf00      	nop
90007aec:	24009f18 	.word	0x24009f18
90007af0:	240094c0 	.word	0x240094c0
90007af4:	58001c00 	.word	0x58001c00
90007af8:	58024400 	.word	0x58024400
90007afc:	58020c00 	.word	0x58020c00
90007b00:	3b9aca00 	.word	0x3b9aca00
90007b04:	24009518 	.word	0x24009518
90007b08:	24009514 	.word	0x24009514
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007b0c:	2c10      	cmp	r4, #16
90007b0e:	44b8      	add	r8, r7
90007b10:	f000 8273 	beq.w	90007ffa <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90007b14:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90007b18:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007b1a:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90007b1e:	d3f5      	bcc.n	90007b0c <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90007b20:	ebba 0105 	subs.w	r1, sl, r5
90007b24:	bf18      	it	ne
90007b26:	2101      	movne	r1, #1
90007b28:	f1be 0f00 	cmp.w	lr, #0
90007b2c:	bf18      	it	ne
90007b2e:	2100      	movne	r1, #0
90007b30:	2900      	cmp	r1, #0
90007b32:	f040 8250 	bne.w	90007fd6 <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007b36:	45bc      	cmp	ip, r7
90007b38:	bf34      	ite	cc
90007b3a:	2100      	movcc	r1, #0
90007b3c:	2101      	movcs	r1, #1
90007b3e:	45be      	cmp	lr, r7
90007b40:	bf88      	it	hi
90007b42:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90007b44:	45aa      	cmp	sl, r5
90007b46:	bf0c      	ite	eq
90007b48:	2100      	moveq	r1, #0
90007b4a:	f001 0101 	andne.w	r1, r1, #1
90007b4e:	2900      	cmp	r1, #0
90007b50:	f000 8103 	beq.w	90007d5a <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b54:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007b58:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b5c:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b5e:	46b2      	mov	sl, r6
90007b60:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b64:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b68:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007b6c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b6e:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b70:	f200 81aa 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007b74:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007b76:	9a06      	ldr	r2, [sp, #24]
90007b78:	45aa      	cmp	sl, r5
90007b7a:	bf0c      	ite	eq
90007b7c:	2200      	moveq	r2, #0
90007b7e:	f002 0201 	andne.w	r2, r2, #1
90007b82:	2a00      	cmp	r2, #0
90007b84:	f000 8105 	beq.w	90007d92 <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b88:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007b8c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b90:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b92:	46b2      	mov	sl, r6
90007b94:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b98:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b9c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007ba0:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ba2:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007ba4:	f200 8190 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007ba8:	4611      	mov	r1, r2
90007baa:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007bac:	9a08      	ldr	r2, [sp, #32]
90007bae:	45aa      	cmp	sl, r5
90007bb0:	bf0c      	ite	eq
90007bb2:	2200      	moveq	r2, #0
90007bb4:	f002 0201 	andne.w	r2, r2, #1
90007bb8:	2a00      	cmp	r2, #0
90007bba:	f000 8105 	beq.w	90007dc8 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007bbe:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007bc2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007bc6:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007bc8:	46b2      	mov	sl, r6
90007bca:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007bce:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007bd2:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007bd6:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007bd8:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007bda:	f200 8175 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007bde:	4611      	mov	r1, r2
90007be0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007be2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90007be4:	45aa      	cmp	sl, r5
90007be6:	bf0c      	ite	eq
90007be8:	2200      	moveq	r2, #0
90007bea:	f002 0201 	andne.w	r2, r2, #1
90007bee:	2a00      	cmp	r2, #0
90007bf0:	f000 8104 	beq.w	90007dfc <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007bf4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007bf8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007bfc:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007bfe:	46b2      	mov	sl, r6
90007c00:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c04:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c08:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007c0c:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c0e:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c10:	f200 815a 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007c14:	4611      	mov	r1, r2
90007c16:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007c18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90007c1a:	45aa      	cmp	sl, r5
90007c1c:	bf0c      	ite	eq
90007c1e:	2200      	moveq	r2, #0
90007c20:	f002 0201 	andne.w	r2, r2, #1
90007c24:	2a00      	cmp	r2, #0
90007c26:	f000 8103 	beq.w	90007e30 <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c2a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007c2e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c32:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c34:	46b2      	mov	sl, r6
90007c36:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c3a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c3e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007c42:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c44:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c46:	f200 813f 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007c4a:	4611      	mov	r1, r2
90007c4c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007c4e:	980d      	ldr	r0, [sp, #52]	@ 0x34
90007c50:	4555      	cmp	r5, sl
90007c52:	bf0c      	ite	eq
90007c54:	2000      	moveq	r0, #0
90007c56:	f000 0001 	andne.w	r0, r0, #1
90007c5a:	2800      	cmp	r0, #0
90007c5c:	f000 8101 	beq.w	90007e62 <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c60:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007c64:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c68:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c6a:	46b2      	mov	sl, r6
90007c6c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c70:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c74:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007c78:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c7a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007c7c:	f200 8124 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007c80:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007c82:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90007c84:	4555      	cmp	r5, sl
90007c86:	bf0c      	ite	eq
90007c88:	2200      	moveq	r2, #0
90007c8a:	f002 0201 	andne.w	r2, r2, #1
90007c8e:	2a00      	cmp	r2, #0
90007c90:	f000 8100 	beq.w	90007e94 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c94:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007c98:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007c9c:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007c9e:	46b2      	mov	sl, r6
90007ca0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007ca4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ca8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007cac:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007cae:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007cb0:	f200 810a 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007cb4:	4610      	mov	r0, r2
90007cb6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007cb8:	9a05      	ldr	r2, [sp, #20]
90007cba:	4555      	cmp	r5, sl
90007cbc:	bf0c      	ite	eq
90007cbe:	2200      	moveq	r2, #0
90007cc0:	f002 0201 	andne.w	r2, r2, #1
90007cc4:	2a00      	cmp	r2, #0
90007cc6:	f000 8182 	beq.w	90007fce <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007cca:	eb09 0189 	add.w	r1, r9, r9, lsl #2
90007cce:	f8df a360 	ldr.w	sl, [pc, #864]	@ 90008030 <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
90007cd2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007cd6:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
90007cda:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007cde:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007ce2:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ce4:	f04f 030f 	mov.w	r3, #15
90007ce8:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007cea:	f200 80ed 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007cee:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007cf0:	e70c      	b.n	90007b0c <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007cf2:	9a06      	ldr	r2, [sp, #24]
90007cf4:	4661      	mov	r1, ip
90007cf6:	f109 0914 	add.w	r9, r9, #20
90007cfa:	3201      	adds	r2, #1
90007cfc:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90007d00:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90007d04:	4572      	cmp	r2, lr
90007d06:	9206      	str	r2, [sp, #24]
90007d08:	f040 8103 	bne.w	90007f12 <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
90007d0c:	9b01      	ldr	r3, [sp, #4]
90007d0e:	2b7f      	cmp	r3, #127	@ 0x7f
90007d10:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90007d14:	d817      	bhi.n	90007d46 <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007d16:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90007d1a:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90007d1e:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007d22:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90007d24:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007d26:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007d28:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007d2c:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007d30:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007d34:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007d36:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007d38:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007d3a:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007d3e:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007d40:	430b      	orrs	r3, r1
90007d42:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007d46:	4621      	mov	r1, r4
90007d48:	48b7      	ldr	r0, [pc, #732]	@ (90008028 <BSP_I2C4_Init+0x7a8>)
90007d4a:	f7ff fd79 	bl	90007840 <MX_I2C4_Init>
90007d4e:	2800      	cmp	r0, #0
90007d50:	f43f ad9f 	beq.w	90007892 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90007d54:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007d58:	e59c      	b.n	90007894 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90007d5a:	4611      	mov	r1, r2
90007d5c:	9a04      	ldr	r2, [sp, #16]
90007d5e:	45aa      	cmp	sl, r5
90007d60:	bf0c      	ite	eq
90007d62:	2200      	moveq	r2, #0
90007d64:	f002 0201 	andne.w	r2, r2, #1
90007d68:	2a00      	cmp	r2, #0
90007d6a:	f43f af04 	beq.w	90007b76 <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007d6e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007d72:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007d76:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007d78:	46b2      	mov	sl, r6
90007d7a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007d7e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007d82:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007d86:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007d88:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007d8a:	f200 809d 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007d8e:	4611      	mov	r1, r2
90007d90:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007d92:	9a07      	ldr	r2, [sp, #28]
90007d94:	45aa      	cmp	sl, r5
90007d96:	bf0c      	ite	eq
90007d98:	2200      	moveq	r2, #0
90007d9a:	f002 0201 	andne.w	r2, r2, #1
90007d9e:	2a00      	cmp	r2, #0
90007da0:	f43f af04 	beq.w	90007bac <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007da4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007da8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007dac:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007dae:	46b2      	mov	sl, r6
90007db0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007db4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007db8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007dbc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007dbe:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007dc0:	f200 8082 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007dc4:	4611      	mov	r1, r2
90007dc6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007dc8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90007dca:	45aa      	cmp	sl, r5
90007dcc:	bf0c      	ite	eq
90007dce:	2200      	moveq	r2, #0
90007dd0:	f002 0201 	andne.w	r2, r2, #1
90007dd4:	2a00      	cmp	r2, #0
90007dd6:	f43f af04 	beq.w	90007be2 <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007dda:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007dde:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007de2:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007de4:	46b2      	mov	sl, r6
90007de6:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007dea:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007dee:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007df2:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007df4:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007df6:	d867      	bhi.n	90007ec8 <BSP_I2C4_Init+0x648>
90007df8:	4611      	mov	r1, r2
90007dfa:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007dfc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90007dfe:	45aa      	cmp	sl, r5
90007e00:	bf0c      	ite	eq
90007e02:	2200      	moveq	r2, #0
90007e04:	f002 0201 	andne.w	r2, r2, #1
90007e08:	2a00      	cmp	r2, #0
90007e0a:	f43f af05 	beq.w	90007c18 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e0e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007e12:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e16:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e18:	46b2      	mov	sl, r6
90007e1a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e1e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e22:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007e26:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e28:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e2a:	d84d      	bhi.n	90007ec8 <BSP_I2C4_Init+0x648>
90007e2c:	4611      	mov	r1, r2
90007e2e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007e30:	45aa      	cmp	sl, r5
90007e32:	bf0c      	ite	eq
90007e34:	2200      	moveq	r2, #0
90007e36:	f00b 0201 	andne.w	r2, fp, #1
90007e3a:	2a00      	cmp	r2, #0
90007e3c:	f43f af07 	beq.w	90007c4e <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e40:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007e44:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e48:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e4a:	46b2      	mov	sl, r6
90007e4c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e50:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e54:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007e58:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e5a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e5c:	d834      	bhi.n	90007ec8 <BSP_I2C4_Init+0x648>
90007e5e:	4611      	mov	r1, r2
90007e60:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007e62:	980e      	ldr	r0, [sp, #56]	@ 0x38
90007e64:	4555      	cmp	r5, sl
90007e66:	bf0c      	ite	eq
90007e68:	2000      	moveq	r0, #0
90007e6a:	f000 0001 	andne.w	r0, r0, #1
90007e6e:	2800      	cmp	r0, #0
90007e70:	f000 80af 	beq.w	90007fd2 <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e74:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007e78:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e7c:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e7e:	46b2      	mov	sl, r6
90007e80:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e84:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007e88:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007e8c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007e8e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007e90:	d81a      	bhi.n	90007ec8 <BSP_I2C4_Init+0x648>
90007e92:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007e94:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90007e96:	4555      	cmp	r5, sl
90007e98:	bf0c      	ite	eq
90007e9a:	2200      	moveq	r2, #0
90007e9c:	f002 0201 	andne.w	r2, r2, #1
90007ea0:	2a00      	cmp	r2, #0
90007ea2:	f43f af09 	beq.w	90007cb8 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ea6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007eaa:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007eae:	46b2      	mov	sl, r6
90007eb0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
90007eb4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007eb8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007ebc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ebe:	f04f 030e 	mov.w	r3, #14
90007ec2:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007ec4:	f67f af13 	bls.w	90007cee <BSP_I2C4_Init+0x46e>
90007ec8:	4b58      	ldr	r3, [pc, #352]	@ (9000802c <BSP_I2C4_Init+0x7ac>)
90007eca:	4650      	mov	r0, sl
90007ecc:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
90007ece:	4649      	mov	r1, r9
90007ed0:	9a02      	ldr	r2, [sp, #8]
90007ed2:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007ed6:	2500      	movs	r5, #0
90007ed8:	9f00      	ldr	r7, [sp, #0]
90007eda:	f240 2657 	movw	r6, #599	@ 0x257
90007ede:	f240 4301 	movw	r3, #1025	@ 0x401
90007ee2:	9506      	str	r5, [sp, #24]
90007ee4:	f04f 35ff 	mov.w	r5, #4294967295
90007ee8:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007eea:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007eec:	9501      	str	r5, [sp, #4]
90007eee:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007ef2:	9408      	str	r4, [sp, #32]
90007ef4:	eba3 0302 	sub.w	r3, r3, r2
90007ef8:	bf38      	it	cc
90007efa:	463e      	movcc	r6, r7
90007efc:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 90008030 <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007f00:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90007f04:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007f08:	f240 4a12 	movw	sl, #1042	@ 0x412
90007f0c:	4639      	mov	r1, r7
90007f0e:	462c      	mov	r4, r5
90007f10:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007f12:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007f16:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007f18:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007f1c:	1a1a      	subs	r2, r3, r0
90007f1e:	1827      	adds	r7, r4, r0
90007f20:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007f24:	eb0c 0200 	add.w	r2, ip, r0
90007f28:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
90007f2c:	9207      	str	r2, [sp, #28]
90007f2e:	468c      	mov	ip, r1
90007f30:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90007f34:	e006      	b.n	90007f44 <BSP_I2C4_Init+0x6c4>
90007f36:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90007f3a:	4407      	add	r7, r0
90007f3c:	eba8 0800 	sub.w	r8, r8, r0
90007f40:	f43f aed7 	beq.w	90007cf2 <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007f44:	f240 5314 	movw	r3, #1300	@ 0x514
90007f48:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007f4a:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007f4c:	429f      	cmp	r7, r3
90007f4e:	d9f2      	bls.n	90007f36 <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007f50:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007f54:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90007f58:	d2ed      	bcs.n	90007f36 <BSP_I2C4_Init+0x6b6>
90007f5a:	f640 0e34 	movw	lr, #2100	@ 0x834
90007f5e:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007f60:	2200      	movs	r2, #0
90007f62:	ebae 0e03 	sub.w	lr, lr, r3
90007f66:	9b07      	ldr	r3, [sp, #28]
90007f68:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007f6c:	e9cd 7804 	strd	r7, r8, [sp, #16]
90007f70:	443b      	add	r3, r7
90007f72:	f8dd c004 	ldr.w	ip, [sp, #4]
90007f76:	f8dd 8018 	ldr.w	r8, [sp, #24]
90007f7a:	e005      	b.n	90007f88 <BSP_I2C4_Init+0x708>
90007f7c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90007f80:	4403      	add	r3, r0
90007f82:	eba4 0400 	sub.w	r4, r4, r0
90007f86:	d01a      	beq.n	90007fbe <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007f88:	eb0e 0103 	add.w	r1, lr, r3
90007f8c:	4617      	mov	r7, r2
90007f8e:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90007f92:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007f94:	42b1      	cmp	r1, r6
90007f96:	d9f1      	bls.n	90007f7c <BSP_I2C4_Init+0x6fc>
90007f98:	4555      	cmp	r5, sl
90007f9a:	d8ef      	bhi.n	90007f7c <BSP_I2C4_Init+0x6fc>
            if (error < 0)
90007f9c:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007fa0:	bf28      	it	cs
90007fa2:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90007fa4:	458b      	cmp	fp, r1
90007fa6:	d9e9      	bls.n	90007f7c <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
90007fa8:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007faa:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
90007fae:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
90007fb0:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007fb2:	4403      	add	r3, r0
90007fb4:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90007fb8:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007fbc:	d1e4      	bne.n	90007f88 <BSP_I2C4_Init+0x708>
90007fbe:	f8cd c004 	str.w	ip, [sp, #4]
90007fc2:	9d02      	ldr	r5, [sp, #8]
90007fc4:	f8dd 8014 	ldr.w	r8, [sp, #20]
90007fc8:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90007fcc:	e7b3      	b.n	90007f36 <BSP_I2C4_Init+0x6b6>
90007fce:	4602      	mov	r2, r0
90007fd0:	e59c      	b.n	90007b0c <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90007fd2:	4608      	mov	r0, r1
90007fd4:	e655      	b.n	90007c82 <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fd6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007fda:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007fde:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fe0:	46b2      	mov	sl, r6
90007fe2:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007fe6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fea:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007fee:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ff0:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007ff2:	f63f af69 	bhi.w	90007ec8 <BSP_I2C4_Init+0x648>
90007ff6:	46aa      	mov	sl, r5
90007ff8:	e6b0      	b.n	90007d5c <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007ffa:	3501      	adds	r5, #1
90007ffc:	9b00      	ldr	r3, [sp, #0]
90007ffe:	2d10      	cmp	r5, #16
90008000:	441f      	add	r7, r3
90008002:	f47f acc0 	bne.w	90007986 <BSP_I2C4_Init+0x106>
90008006:	4693      	mov	fp, r2
90008008:	9c01      	ldr	r4, [sp, #4]
9000800a:	9911      	ldr	r1, [sp, #68]	@ 0x44
9000800c:	9a02      	ldr	r2, [sp, #8]
9000800e:	f1bb 0f00 	cmp.w	fp, #0
90008012:	d003      	beq.n	9000801c <BSP_I2C4_Init+0x79c>
90008014:	4b05      	ldr	r3, [pc, #20]	@ (9000802c <BSP_I2C4_Init+0x7ac>)
90008016:	4649      	mov	r1, r9
90008018:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000801c:	2900      	cmp	r1, #0
9000801e:	f43f ae92 	beq.w	90007d46 <BSP_I2C4_Init+0x4c6>
90008022:	4803      	ldr	r0, [pc, #12]	@ (90008030 <BSP_I2C4_Init+0x7b0>)
90008024:	e757      	b.n	90007ed6 <BSP_I2C4_Init+0x656>
90008026:	bf00      	nop
90008028:	240094c0 	.word	0x240094c0
9000802c:	24009514 	.word	0x24009514
90008030:	24009518 	.word	0x24009518

90008034 <BSP_I2C4_WriteReg>:
{
90008034:	b530      	push	{r4, r5, lr}
90008036:	4614      	mov	r4, r2
90008038:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000803a:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000803e:	460a      	mov	r2, r1
90008040:	9301      	str	r3, [sp, #4]
90008042:	4601      	mov	r1, r0
90008044:	2301      	movs	r3, #1
90008046:	4809      	ldr	r0, [pc, #36]	@ (9000806c <BSP_I2C4_WriteReg+0x38>)
90008048:	9502      	str	r5, [sp, #8]
9000804a:	9400      	str	r4, [sp, #0]
9000804c:	f001 fab8 	bl	900095c0 <HAL_I2C_Mem_Write>
90008050:	b908      	cbnz	r0, 90008056 <BSP_I2C4_WriteReg+0x22>
}
90008052:	b005      	add	sp, #20
90008054:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008056:	4805      	ldr	r0, [pc, #20]	@ (9000806c <BSP_I2C4_WriteReg+0x38>)
90008058:	f001 fcb4 	bl	900099c4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000805c:	2804      	cmp	r0, #4
9000805e:	bf14      	ite	ne
90008060:	f06f 0003 	mvnne.w	r0, #3
90008064:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90008068:	e7f3      	b.n	90008052 <BSP_I2C4_WriteReg+0x1e>
9000806a:	bf00      	nop
9000806c:	240094c0 	.word	0x240094c0

90008070 <BSP_I2C4_ReadReg>:
{
90008070:	b530      	push	{r4, r5, lr}
90008072:	4614      	mov	r4, r2
90008074:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90008076:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000807a:	460a      	mov	r2, r1
9000807c:	9301      	str	r3, [sp, #4]
9000807e:	4601      	mov	r1, r0
90008080:	2301      	movs	r3, #1
90008082:	4809      	ldr	r0, [pc, #36]	@ (900080a8 <BSP_I2C4_ReadReg+0x38>)
90008084:	9502      	str	r5, [sp, #8]
90008086:	9400      	str	r4, [sp, #0]
90008088:	f001 fb98 	bl	900097bc <HAL_I2C_Mem_Read>
9000808c:	b908      	cbnz	r0, 90008092 <BSP_I2C4_ReadReg+0x22>
}
9000808e:	b005      	add	sp, #20
90008090:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008092:	4805      	ldr	r0, [pc, #20]	@ (900080a8 <BSP_I2C4_ReadReg+0x38>)
90008094:	f001 fc96 	bl	900099c4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90008098:	2804      	cmp	r0, #4
9000809a:	bf14      	ite	ne
9000809c:	f06f 0003 	mvnne.w	r0, #3
900080a0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900080a4:	e7f3      	b.n	9000808e <BSP_I2C4_ReadReg+0x1e>
900080a6:	bf00      	nop
900080a8:	240094c0 	.word	0x240094c0

900080ac <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900080ac:	f000 baa0 	b.w	900085f0 <HAL_GetTick>

900080b0 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900080b0:	b970      	cbnz	r0, 900080d0 <BSP_SDRAM_DeInit+0x20>
{
900080b2:	b510      	push	{r4, lr}
900080b4:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
900080b6:	4808      	ldr	r0, [pc, #32]	@ (900080d8 <BSP_SDRAM_DeInit+0x28>)
900080b8:	f005 fad8 	bl	9000d66c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
900080bc:	207a      	movs	r0, #122	@ 0x7a
900080be:	f000 faff 	bl	900086c0 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900080c2:	4b06      	ldr	r3, [pc, #24]	@ (900080dc <BSP_SDRAM_DeInit+0x2c>)
900080c4:	4806      	ldr	r0, [pc, #24]	@ (900080e0 <BSP_SDRAM_DeInit+0x30>)
900080c6:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
900080c8:	f003 fa9e 	bl	9000b608 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
900080cc:	4620      	mov	r0, r4
}
900080ce:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900080d0:	f06f 0001 	mvn.w	r0, #1
}
900080d4:	4770      	bx	lr
900080d6:	bf00      	nop
900080d8:	2400a014 	.word	0x2400a014
900080dc:	52000040 	.word	0x52000040
900080e0:	24009f1c 	.word	0x24009f1c

900080e4 <MX_SDRAM_BANK2_Init>:
{
900080e4:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900080e6:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900080e8:	2200      	movs	r2, #0
{
900080ea:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
900080ec:	4c13      	ldr	r4, [pc, #76]	@ (9000813c <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900080ee:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900080f0:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900080f2:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
900080f4:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900080f6:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900080f8:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900080fa:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900080fc:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90008100:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90008102:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008104:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90008106:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008108:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000810a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000810e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008110:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008114:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008116:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008118:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000811c:	2204      	movs	r2, #4
9000811e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90008122:	2202      	movs	r2, #2
90008124:	2302      	movs	r3, #2
90008126:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000812a:	4b05      	ldr	r3, [pc, #20]	@ (90008140 <MX_SDRAM_BANK2_Init+0x5c>)
9000812c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000812e:	f005 fa73 	bl	9000d618 <HAL_SDRAM_Init>
}
90008132:	3800      	subs	r0, #0
90008134:	bf18      	it	ne
90008136:	2001      	movne	r0, #1
90008138:	b009      	add	sp, #36	@ 0x24
9000813a:	bd30      	pop	{r4, r5, pc}
9000813c:	2400a014 	.word	0x2400a014
90008140:	52004140 	.word	0x52004140

90008144 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90008144:	2800      	cmp	r0, #0
90008146:	f040 80cd 	bne.w	900082e4 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
9000814a:	4b69      	ldr	r3, [pc, #420]	@ (900082f0 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000814c:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
9000814e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90008152:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90008156:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90008158:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
9000815c:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
9000815e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90008162:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90008164:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90008166:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90008168:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000816c:	4c61      	ldr	r4, [pc, #388]	@ (900082f4 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000816e:	4e62      	ldr	r6, [pc, #392]	@ (900082f8 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008170:	9200      	str	r2, [sp, #0]
90008172:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90008174:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90008178:	430a      	orrs	r2, r1
9000817a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000817e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90008182:	400a      	ands	r2, r1
90008184:	9201      	str	r2, [sp, #4]
90008186:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90008188:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000818c:	f042 0208 	orr.w	r2, r2, #8
90008190:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90008194:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90008198:	f002 0208 	and.w	r2, r2, #8
9000819c:	9202      	str	r2, [sp, #8]
9000819e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900081a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081a4:	f042 0210 	orr.w	r2, r2, #16
900081a8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900081ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081b0:	f002 0210 	and.w	r2, r2, #16
900081b4:	9203      	str	r2, [sp, #12]
900081b6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900081b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081bc:	f042 0220 	orr.w	r2, r2, #32
900081c0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900081c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081c8:	f002 0220 	and.w	r2, r2, #32
900081cc:	9204      	str	r2, [sp, #16]
900081ce:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900081d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081d4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900081d8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900081dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081e0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
900081e4:	9205      	str	r2, [sp, #20]
900081e6:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900081e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900081ec:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900081f0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900081f4:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
900081f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900081fa:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900081fc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90008200:	483e      	ldr	r0, [pc, #248]	@ (900082fc <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90008202:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008204:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008206:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000820a:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000820c:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000820e:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90008210:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90008214:	f000 fc6c 	bl	90008af0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008218:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000821c:	a907      	add	r1, sp, #28
9000821e:	4838      	ldr	r0, [pc, #224]	@ (90008300 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008220:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008222:	f000 fc65 	bl	90008af0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008226:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000822a:	a907      	add	r1, sp, #28
9000822c:	4835      	ldr	r0, [pc, #212]	@ (90008304 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000822e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008230:	f000 fc5e 	bl	90008af0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008234:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008238:	a907      	add	r1, sp, #28
9000823a:	4833      	ldr	r0, [pc, #204]	@ (90008308 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000823c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000823e:	f000 fc57 	bl	90008af0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008242:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008244:	a907      	add	r1, sp, #28
90008246:	4831      	ldr	r0, [pc, #196]	@ (9000830c <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008248:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000824a:	f000 fc51 	bl	90008af0 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000824e:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008250:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008254:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90008258:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000825a:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000825c:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000825e:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008260:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008264:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008266:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008268:	4a29      	ldr	r2, [pc, #164]	@ (90008310 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000826a:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000826c:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000826e:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008270:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90008274:	f640 0308 	movw	r3, #2056	@ 0x808
90008278:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000827a:	2320      	movs	r3, #32
9000827c:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000827e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90008282:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90008286:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90008288:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000828c:	f003 f9bc 	bl	9000b608 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90008290:	4620      	mov	r0, r4
90008292:	f003 f93f 	bl	9000b514 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90008296:	462a      	mov	r2, r5
90008298:	210f      	movs	r1, #15
9000829a:	207a      	movs	r0, #122	@ 0x7a
9000829c:	f000 f9c6 	bl	9000862c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
900082a0:	207a      	movs	r0, #122	@ 0x7a
900082a2:	f000 f9ff 	bl	900086a4 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
900082a6:	2210      	movs	r2, #16
900082a8:	2104      	movs	r1, #4
900082aa:	4630      	mov	r0, r6
900082ac:	f7ff ff1a 	bl	900080e4 <MX_SDRAM_BANK2_Init>
900082b0:	4603      	mov	r3, r0
900082b2:	b9d0      	cbnz	r0, 900082ea <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900082b4:	4917      	ldr	r1, [pc, #92]	@ (90008314 <BSP_SDRAM_Init+0x1d0>)
900082b6:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
900082b8:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900082ba:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900082bc:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
900082be:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
900082c2:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
900082c4:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
900082c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
900082cc:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
900082d0:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900082d4:	f7ff fa30 	bl	90007738 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
900082d8:	2800      	cmp	r0, #0
900082da:	bf18      	it	ne
900082dc:	f06f 0004 	mvnne.w	r0, #4
}
900082e0:	b00d      	add	sp, #52	@ 0x34
900082e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900082e4:	f06f 0001 	mvn.w	r0, #1
}
900082e8:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900082ea:	f04f 30ff 	mov.w	r0, #4294967295
900082ee:	e7f7      	b.n	900082e0 <BSP_SDRAM_Init+0x19c>
900082f0:	58024400 	.word	0x58024400
900082f4:	24009f88 	.word	0x24009f88
900082f8:	2400a014 	.word	0x2400a014
900082fc:	58020c00 	.word	0x58020c00
90008300:	58021000 	.word	0x58021000
90008304:	58021400 	.word	0x58021400
90008308:	58021800 	.word	0x58021800
9000830c:	58021c00 	.word	0x58021c00
90008310:	52000040 	.word	0x52000040
90008314:	24009ff4 	.word	0x24009ff4

90008318 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000831c:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000831e:	2800      	cmp	r0, #0
90008320:	d16b      	bne.n	900083fa <BSP_TS_Init+0xe2>
90008322:	680b      	ldr	r3, [r1, #0]
90008324:	460d      	mov	r5, r1
90008326:	1e5a      	subs	r2, r3, #1
90008328:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
9000832c:	d265      	bcs.n	900083fa <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000832e:	684a      	ldr	r2, [r1, #4]
90008330:	1e51      	subs	r1, r2, #1
90008332:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90008336:	d260      	bcs.n	900083fa <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90008338:	4293      	cmp	r3, r2
9000833a:	bf28      	it	cs
9000833c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000833e:	68ea      	ldr	r2, [r5, #12]
90008340:	429a      	cmp	r2, r3
90008342:	d85a      	bhi.n	900083fa <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90008344:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90008346:	4b31      	ldr	r3, [pc, #196]	@ (9000840c <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008348:	4c31      	ldr	r4, [pc, #196]	@ (90008410 <BSP_TS_Init+0xf8>)
9000834a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000834c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90008350:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90008352:	4a30      	ldr	r2, [pc, #192]	@ (90008414 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008354:	4b30      	ldr	r3, [pc, #192]	@ (90008418 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90008356:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008358:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000835a:	4a30      	ldr	r2, [pc, #192]	@ (9000841c <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000835c:	4b30      	ldr	r3, [pc, #192]	@ (90008420 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000835e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008360:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90008362:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90008364:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008366:	f7ff f939 	bl	900075dc <FT5336_RegisterBusIO>
9000836a:	2800      	cmp	r0, #0
9000836c:	d14b      	bne.n	90008406 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000836e:	a901      	add	r1, sp, #4
90008370:	4620      	mov	r0, r4
90008372:	f7ff f829 	bl	900073c8 <FT5336_ReadID>
90008376:	2800      	cmp	r0, #0
90008378:	d145      	bne.n	90008406 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000837a:	9b01      	ldr	r3, [sp, #4]
9000837c:	2b51      	cmp	r3, #81	@ 0x51
9000837e:	d142      	bne.n	90008406 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008380:	4b28      	ldr	r3, [pc, #160]	@ (90008424 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90008382:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90008384:	4f28      	ldr	r7, [pc, #160]	@ (90008428 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008386:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90008430 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000838a:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000838c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90008390:	681b      	ldr	r3, [r3, #0]
90008392:	4798      	blx	r3
90008394:	4606      	mov	r6, r0
90008396:	2800      	cmp	r0, #0
90008398:	d135      	bne.n	90008406 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000839a:	4c24      	ldr	r4, [pc, #144]	@ (9000842c <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000839c:	a902      	add	r1, sp, #8
9000839e:	6838      	ldr	r0, [r7, #0]
900083a0:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900083a4:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900083a8:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900083aa:	e9c4 7200 	strd	r7, r2, [r4]
900083ae:	68aa      	ldr	r2, [r5, #8]
900083b0:	60a2      	str	r2, [r4, #8]
900083b2:	68ea      	ldr	r2, [r5, #12]
900083b4:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900083b6:	4798      	blx	r3
900083b8:	2800      	cmp	r0, #0
900083ba:	db18      	blt.n	900083ee <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
900083bc:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
900083c0:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083c4:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083c6:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083ca:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083cc:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083ce:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083d0:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083d2:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083d6:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083da:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083de:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900083e2:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900083e4:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
900083e6:	4630      	mov	r0, r6
900083e8:	b008      	add	sp, #32
900083ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900083ee:	f06f 0604 	mvn.w	r6, #4
}
900083f2:	4630      	mov	r0, r6
900083f4:	b008      	add	sp, #32
900083f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900083fa:	f06f 0601 	mvn.w	r6, #1
}
900083fe:	4630      	mov	r0, r6
90008400:	b008      	add	sp, #32
90008402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90008406:	f04f 36ff 	mov.w	r6, #4294967295
9000840a:	e7ec      	b.n	900083e6 <BSP_TS_Init+0xce>
9000840c:	90007881 	.word	0x90007881
90008410:	2400a048 	.word	0x2400a048
90008414:	900077ed 	.word	0x900077ed
90008418:	90008071 	.word	0x90008071
9000841c:	90008035 	.word	0x90008035
90008420:	900080ad 	.word	0x900080ad
90008424:	24000044 	.word	0x24000044
90008428:	2400a0b0 	.word	0x2400a0b0
9000842c:	2400a070 	.word	0x2400a070
90008430:	2400a0b4 	.word	0x2400a0b4

90008434 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90008434:	2800      	cmp	r0, #0
90008436:	d154      	bne.n	900084e2 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008438:	4b2b      	ldr	r3, [pc, #172]	@ (900084e8 <BSP_TS_GetState+0xb4>)
9000843a:	4a2c      	ldr	r2, [pc, #176]	@ (900084ec <BSP_TS_GetState+0xb8>)
9000843c:	681b      	ldr	r3, [r3, #0]
9000843e:	6810      	ldr	r0, [r2, #0]
90008440:	691b      	ldr	r3, [r3, #16]
{
90008442:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008446:	b084      	sub	sp, #16
90008448:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000844a:	a901      	add	r1, sp, #4
9000844c:	4798      	blx	r3
9000844e:	2800      	cmp	r0, #0
90008450:	db3f      	blt.n	900084d2 <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90008452:	4b27      	ldr	r3, [pc, #156]	@ (900084f0 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90008454:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90008456:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90008458:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
9000845a:	b930      	cbnz	r0, 9000846a <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
9000845c:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000845e:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90008462:	2000      	movs	r0, #0
}
90008464:	b004      	add	sp, #16
90008466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000846a:	689f      	ldr	r7, [r3, #8]
9000846c:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
9000846e:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008472:	d433      	bmi.n	900084dc <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90008474:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90008476:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008478:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000847c:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008480:	d003      	beq.n	9000848a <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008482:	f10e 32ff 	add.w	r2, lr, #4294967295
90008486:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000848a:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000848e:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008490:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90008492:	bf48      	it	mi
90008494:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008498:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000849c:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000849e:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900084a0:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900084a4:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900084a8:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
900084ac:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900084ae:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900084b0:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
900084b2:	bf8c      	ite	hi
900084b4:	1b90      	subhi	r0, r2, r6
900084b6:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
900084b8:	42a9      	cmp	r1, r5
900084ba:	bf8c      	ite	hi
900084bc:	1b4f      	subhi	r7, r1, r5
900084be:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
900084c0:	42b8      	cmp	r0, r7
900084c2:	bf38      	it	cc
900084c4:	4638      	movcc	r0, r7
900084c6:	68df      	ldr	r7, [r3, #12]
900084c8:	4287      	cmp	r7, r0
900084ca:	d2c8      	bcs.n	9000845e <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
900084cc:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
900084ce:	62d9      	str	r1, [r3, #44]	@ 0x2c
900084d0:	e7c7      	b.n	90008462 <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
900084d2:	f06f 0004 	mvn.w	r0, #4
}
900084d6:	b004      	add	sp, #16
900084d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
900084dc:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
900084de:	4642      	mov	r2, r8
900084e0:	e7ca      	b.n	90008478 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
900084e2:	f06f 0001 	mvn.w	r0, #1
}
900084e6:	4770      	bx	lr
900084e8:	2400a0b4 	.word	0x2400a0b4
900084ec:	2400a0b0 	.word	0x2400a0b0
900084f0:	2400a070 	.word	0x2400a070

900084f4 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900084f4:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900084f6:	4c19      	ldr	r4, [pc, #100]	@ (9000855c <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900084f8:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900084fa:	4b19      	ldr	r3, [pc, #100]	@ (90008560 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900084fc:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90008500:	4818      	ldr	r0, [pc, #96]	@ (90008564 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008502:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90008506:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
9000850a:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000850c:	4c16      	ldr	r4, [pc, #88]	@ (90008568 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000850e:	f041 0101 	orr.w	r1, r1, #1
90008512:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90008514:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90008516:	6819      	ldr	r1, [r3, #0]
90008518:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000851a:	4914      	ldr	r1, [pc, #80]	@ (9000856c <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000851c:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000851e:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90008520:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90008522:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90008524:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90008526:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90008528:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
9000852a:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
9000852c:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
9000852e:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90008530:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90008532:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90008534:	6818      	ldr	r0, [r3, #0]
90008536:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
9000853a:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
9000853c:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000853e:	6823      	ldr	r3, [r4, #0]
90008540:	4019      	ands	r1, r3
90008542:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90008546:	d203      	bcs.n	90008550 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90008548:	4b09      	ldr	r3, [pc, #36]	@ (90008570 <SystemInit+0x7c>)
9000854a:	2201      	movs	r2, #1
9000854c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008550:	4a08      	ldr	r2, [pc, #32]	@ (90008574 <SystemInit+0x80>)
90008552:	4b02      	ldr	r3, [pc, #8]	@ (9000855c <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90008554:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008558:	609a      	str	r2, [r3, #8]
}
9000855a:	4770      	bx	lr
9000855c:	e000ed00 	.word	0xe000ed00
90008560:	58024400 	.word	0x58024400
90008564:	eaf6ed7f 	.word	0xeaf6ed7f
90008568:	5c001000 	.word	0x5c001000
9000856c:	ffff0000 	.word	0xffff0000
90008570:	51008000 	.word	0x51008000
90008574:	90000000 	.word	0x90000000

90008578 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90008578:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000857a:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000857c:	4c12      	ldr	r4, [pc, #72]	@ (900085c8 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000857e:	f000 f843 	bl	90008608 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008582:	f003 fd97 	bl	9000c0b4 <HAL_RCC_GetSysClockFreq>
90008586:	4b11      	ldr	r3, [pc, #68]	@ (900085cc <HAL_Init+0x54>)
90008588:	4911      	ldr	r1, [pc, #68]	@ (900085d0 <HAL_Init+0x58>)
9000858a:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000858c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000858e:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008592:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008596:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008598:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000859a:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000859e:	490d      	ldr	r1, [pc, #52]	@ (900085d4 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900085a0:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900085a4:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900085a6:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
900085aa:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900085ac:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900085ae:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900085b0:	f7fb febc 	bl	9000432c <HAL_InitTick>
900085b4:	b110      	cbz	r0, 900085bc <HAL_Init+0x44>
  {
    return HAL_ERROR;
900085b6:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
900085b8:	4620      	mov	r0, r4
900085ba:	bd10      	pop	{r4, pc}
900085bc:	4604      	mov	r4, r0
  HAL_MspInit();
900085be:	f7fb fc73 	bl	90003ea8 <HAL_MspInit>
}
900085c2:	4620      	mov	r0, r4
900085c4:	bd10      	pop	{r4, pc}
900085c6:	bf00      	nop
900085c8:	24000074 	.word	0x24000074
900085cc:	58024400 	.word	0x58024400
900085d0:	9002deb0 	.word	0x9002deb0
900085d4:	24000078 	.word	0x24000078

900085d8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
900085d8:	4a03      	ldr	r2, [pc, #12]	@ (900085e8 <HAL_IncTick+0x10>)
900085da:	4b04      	ldr	r3, [pc, #16]	@ (900085ec <HAL_IncTick+0x14>)
900085dc:	6811      	ldr	r1, [r2, #0]
900085de:	781b      	ldrb	r3, [r3, #0]
900085e0:	440b      	add	r3, r1
900085e2:	6013      	str	r3, [r2, #0]
}
900085e4:	4770      	bx	lr
900085e6:	bf00      	nop
900085e8:	2400a0b8 	.word	0x2400a0b8
900085ec:	2400007c 	.word	0x2400007c

900085f0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900085f0:	4b01      	ldr	r3, [pc, #4]	@ (900085f8 <HAL_GetTick+0x8>)
900085f2:	6818      	ldr	r0, [r3, #0]
}
900085f4:	4770      	bx	lr
900085f6:	bf00      	nop
900085f8:	2400a0b8 	.word	0x2400a0b8

900085fc <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900085fc:	4b01      	ldr	r3, [pc, #4]	@ (90008604 <HAL_GetREVID+0x8>)
900085fe:	6818      	ldr	r0, [r3, #0]
}
90008600:	0c00      	lsrs	r0, r0, #16
90008602:	4770      	bx	lr
90008604:	5c001000 	.word	0x5c001000

90008608 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008608:	4906      	ldr	r1, [pc, #24]	@ (90008624 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000860a:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000860e:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90008610:	4b05      	ldr	r3, [pc, #20]	@ (90008628 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008612:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008614:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008618:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000861c:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000861e:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90008620:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90008622:	4770      	bx	lr
90008624:	e000ed00 	.word	0xe000ed00
90008628:	05fa0000 	.word	0x05fa0000

9000862c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000862c:	4b1a      	ldr	r3, [pc, #104]	@ (90008698 <HAL_NVIC_SetPriority+0x6c>)
9000862e:	68db      	ldr	r3, [r3, #12]
90008630:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90008634:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008636:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000863a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000863e:	f1be 0f04 	cmp.w	lr, #4
90008642:	bf28      	it	cs
90008644:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008648:	f1bc 0f06 	cmp.w	ip, #6
9000864c:	d91a      	bls.n	90008684 <HAL_NVIC_SetPriority+0x58>
9000864e:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90008652:	f04f 33ff 	mov.w	r3, #4294967295
90008656:	fa03 f30c 	lsl.w	r3, r3, ip
9000865a:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000865e:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90008662:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008664:	fa03 f30e 	lsl.w	r3, r3, lr
90008668:	ea21 0303 	bic.w	r3, r1, r3
9000866c:	fa03 f30c 	lsl.w	r3, r3, ip
90008670:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008674:	ea4f 1303 	mov.w	r3, r3, lsl #4
90008678:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
9000867a:	db06      	blt.n	9000868a <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000867c:	4a07      	ldr	r2, [pc, #28]	@ (9000869c <HAL_NVIC_SetPriority+0x70>)
9000867e:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008680:	f85d fb04 	ldr.w	pc, [sp], #4
90008684:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008686:	4694      	mov	ip, r2
90008688:	e7e9      	b.n	9000865e <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000868a:	f000 000f 	and.w	r0, r0, #15
9000868e:	4a04      	ldr	r2, [pc, #16]	@ (900086a0 <HAL_NVIC_SetPriority+0x74>)
90008690:	5413      	strb	r3, [r2, r0]
90008692:	f85d fb04 	ldr.w	pc, [sp], #4
90008696:	bf00      	nop
90008698:	e000ed00 	.word	0xe000ed00
9000869c:	e000e400 	.word	0xe000e400
900086a0:	e000ed14 	.word	0xe000ed14

900086a4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
900086a4:	2800      	cmp	r0, #0
900086a6:	db07      	blt.n	900086b8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900086a8:	2301      	movs	r3, #1
900086aa:	f000 011f 	and.w	r1, r0, #31
900086ae:	4a03      	ldr	r2, [pc, #12]	@ (900086bc <HAL_NVIC_EnableIRQ+0x18>)
900086b0:	0940      	lsrs	r0, r0, #5
900086b2:	408b      	lsls	r3, r1
900086b4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
900086b8:	4770      	bx	lr
900086ba:	bf00      	nop
900086bc:	e000e100 	.word	0xe000e100

900086c0 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
900086c0:	2800      	cmp	r0, #0
900086c2:	db0c      	blt.n	900086de <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900086c4:	0943      	lsrs	r3, r0, #5
900086c6:	2201      	movs	r2, #1
900086c8:	f000 001f 	and.w	r0, r0, #31
900086cc:	4904      	ldr	r1, [pc, #16]	@ (900086e0 <HAL_NVIC_DisableIRQ+0x20>)
900086ce:	3320      	adds	r3, #32
900086d0:	4082      	lsls	r2, r0
900086d2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
900086d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900086da:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
900086de:	4770      	bx	lr
900086e0:	e000e100 	.word	0xe000e100

900086e4 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
900086e4:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900086e8:	4b04      	ldr	r3, [pc, #16]	@ (900086fc <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
900086ea:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900086ec:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900086ee:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
900086f2:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
900086f4:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
900086f8:	4770      	bx	lr
900086fa:	bf00      	nop
900086fc:	e000ed00 	.word	0xe000ed00

90008700 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008700:	4b06      	ldr	r3, [pc, #24]	@ (9000871c <HAL_MPU_Enable+0x1c>)
90008702:	f040 0001 	orr.w	r0, r0, #1
90008706:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000870a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000870c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90008710:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008712:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008716:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000871a:	4770      	bx	lr
9000871c:	e000ed00 	.word	0xe000ed00

90008720 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008720:	4a16      	ldr	r2, [pc, #88]	@ (9000877c <HAL_MPU_ConfigRegion+0x5c>)
90008722:	7843      	ldrb	r3, [r0, #1]
90008724:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90008728:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
9000872c:	f023 0301 	bic.w	r3, r3, #1
90008730:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90008734:	6843      	ldr	r3, [r0, #4]
90008736:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000873a:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000873c:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008740:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90008742:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008744:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008748:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000874c:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000874e:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008750:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90008754:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008758:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000875c:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000875e:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90008762:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008766:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000876a:	7a01      	ldrb	r1, [r0, #8]
9000876c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008770:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008774:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90008778:	4770      	bx	lr
9000877a:	bf00      	nop
9000877c:	e000ed00 	.word	0xe000ed00

90008780 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008780:	2800      	cmp	r0, #0
90008782:	d036      	beq.n	900087f2 <HAL_CRC_Init+0x72>
{
90008784:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90008786:	7f43      	ldrb	r3, [r0, #29]
90008788:	4604      	mov	r4, r0
9000878a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000878e:	b363      	cbz	r3, 900087ea <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008790:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008792:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008794:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008796:	b9f3      	cbnz	r3, 900087d6 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008798:	6823      	ldr	r3, [r4, #0]
9000879a:	4a17      	ldr	r2, [pc, #92]	@ (900087f8 <HAL_CRC_Init+0x78>)
9000879c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000879e:	689a      	ldr	r2, [r3, #8]
900087a0:	f022 0218 	bic.w	r2, r2, #24
900087a4:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
900087a6:	7962      	ldrb	r2, [r4, #5]
900087a8:	b18a      	cbz	r2, 900087ce <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
900087aa:	6922      	ldr	r2, [r4, #16]
900087ac:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900087ae:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900087b0:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900087b4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900087b8:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
900087ba:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900087bc:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900087be:	689a      	ldr	r2, [r3, #8]
900087c0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
900087c4:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
900087c6:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900087c8:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
900087ca:	7761      	strb	r1, [r4, #29]
}
900087cc:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900087ce:	f04f 32ff 	mov.w	r2, #4294967295
900087d2:	611a      	str	r2, [r3, #16]
900087d4:	e7eb      	b.n	900087ae <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
900087d6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
900087da:	4620      	mov	r0, r4
900087dc:	f000 f80e 	bl	900087fc <HAL_CRCEx_Polynomial_Set>
900087e0:	b908      	cbnz	r0, 900087e6 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900087e2:	6823      	ldr	r3, [r4, #0]
900087e4:	e7df      	b.n	900087a6 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
900087e6:	2001      	movs	r0, #1
}
900087e8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
900087ea:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
900087ec:	f7fb fb76 	bl	90003edc <HAL_CRC_MspInit>
900087f0:	e7ce      	b.n	90008790 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900087f2:	2001      	movs	r0, #1
}
900087f4:	4770      	bx	lr
900087f6:	bf00      	nop
900087f8:	04c11db7 	.word	0x04c11db7

900087fc <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900087fc:	07cb      	lsls	r3, r1, #31
900087fe:	d51a      	bpl.n	90008836 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90008800:	231f      	movs	r3, #31
{
90008802:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008804:	3b01      	subs	r3, #1
90008806:	1c5c      	adds	r4, r3, #1
90008808:	fa21 fc03 	lsr.w	ip, r1, r3
9000880c:	d015      	beq.n	9000883a <HAL_CRCEx_Polynomial_Set+0x3e>
9000880e:	f01c 0f01 	tst.w	ip, #1
90008812:	d0f7      	beq.n	90008804 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90008814:	2a18      	cmp	r2, #24
90008816:	d811      	bhi.n	9000883c <HAL_CRCEx_Polynomial_Set+0x40>
90008818:	e8df f002 	tbb	[pc, r2]
9000881c:	10101016 	.word	0x10101016
90008820:	10101010 	.word	0x10101010
90008824:	10101024 	.word	0x10101024
90008828:	10101010 	.word	0x10101010
9000882c:	10101021 	.word	0x10101021
90008830:	10101010 	.word	0x10101010
90008834:	14          	.byte	0x14
90008835:	00          	.byte	0x00
90008836:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90008838:	4770      	bx	lr
    switch (PolyLength)
9000883a:	b12a      	cbz	r2, 90008848 <HAL_CRCEx_Polynomial_Set+0x4c>
9000883c:	2001      	movs	r0, #1
}
9000883e:	f85d 4b04 	ldr.w	r4, [sp], #4
90008842:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90008844:	2b06      	cmp	r3, #6
90008846:	d8f9      	bhi.n	9000883c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008848:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000884a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000884c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000884e:	68a3      	ldr	r3, [r4, #8]
90008850:	f023 0318 	bic.w	r3, r3, #24
90008854:	4313      	orrs	r3, r2
90008856:	60a3      	str	r3, [r4, #8]
}
90008858:	f85d 4b04 	ldr.w	r4, [sp], #4
9000885c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000885e:	2b07      	cmp	r3, #7
90008860:	d9f2      	bls.n	90008848 <HAL_CRCEx_Polynomial_Set+0x4c>
90008862:	e7eb      	b.n	9000883c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90008864:	2b0f      	cmp	r3, #15
90008866:	d9ef      	bls.n	90008848 <HAL_CRCEx_Polynomial_Set+0x4c>
90008868:	e7e8      	b.n	9000883c <HAL_CRCEx_Polynomial_Set+0x40>
9000886a:	bf00      	nop

9000886c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000886c:	2800      	cmp	r0, #0
9000886e:	d035      	beq.n	900088dc <HAL_DMA2D_Init+0x70>
{
90008870:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90008872:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90008876:	4604      	mov	r4, r0
90008878:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000887c:	b34b      	cbz	r3, 900088d2 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000887e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008880:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008882:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008884:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008888:	69e1      	ldr	r1, [r4, #28]
9000888a:	681d      	ldr	r5, [r3, #0]
9000888c:	4814      	ldr	r0, [pc, #80]	@ (900088e0 <HAL_DMA2D_Init+0x74>)
9000888e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008890:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008892:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008894:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008896:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008898:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000889a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000889c:	4302      	orrs	r2, r0
9000889e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900088a0:	4810      	ldr	r0, [pc, #64]	@ (900088e4 <HAL_DMA2D_Init+0x78>)
900088a2:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900088a4:	4910      	ldr	r1, [pc, #64]	@ (900088e8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900088a6:	4302      	orrs	r2, r0
900088a8:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900088aa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
900088ac:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900088ae:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900088b2:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900088b4:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900088b6:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900088b8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900088ba:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900088be:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900088c0:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
900088c4:	430a      	orrs	r2, r1
900088c6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900088c8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900088ca:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900088cc:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
900088d0:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
900088d2:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
900088d6:	f7fb fb19 	bl	90003f0c <HAL_DMA2D_MspInit>
900088da:	e7d0      	b.n	9000887e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
900088dc:	2001      	movs	r0, #1
}
900088de:	4770      	bx	lr
900088e0:	fff8ffbf 	.word	0xfff8ffbf
900088e4:	fffffef8 	.word	0xfffffef8
900088e8:	ffff0000 	.word	0xffff0000

900088ec <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
900088ec:	4770      	bx	lr
900088ee:	bf00      	nop

900088f0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
900088f0:	4770      	bx	lr
900088f2:	bf00      	nop

900088f4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900088f4:	6803      	ldr	r3, [r0, #0]
{
900088f6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900088f8:	685d      	ldr	r5, [r3, #4]
{
900088fa:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
900088fc:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
900088fe:	07ea      	lsls	r2, r5, #31
90008900:	d501      	bpl.n	90008906 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90008902:	05f1      	lsls	r1, r6, #23
90008904:	d456      	bmi.n	900089b4 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90008906:	06aa      	lsls	r2, r5, #26
90008908:	d501      	bpl.n	9000890e <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000890a:	04b3      	lsls	r3, r6, #18
9000890c:	d43b      	bmi.n	90008986 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000890e:	0728      	lsls	r0, r5, #28
90008910:	d501      	bpl.n	90008916 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008912:	0531      	lsls	r1, r6, #20
90008914:	d421      	bmi.n	9000895a <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90008916:	076a      	lsls	r2, r5, #29
90008918:	d501      	bpl.n	9000891e <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000891a:	0573      	lsls	r3, r6, #21
9000891c:	d472      	bmi.n	90008a04 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000891e:	07a8      	lsls	r0, r5, #30
90008920:	d501      	bpl.n	90008926 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90008922:	05b1      	lsls	r1, r6, #22
90008924:	d404      	bmi.n	90008930 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90008926:	06ea      	lsls	r2, r5, #27
90008928:	d501      	bpl.n	9000892e <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000892a:	04f3      	lsls	r3, r6, #19
9000892c:	d457      	bmi.n	900089de <HAL_DMA2D_IRQHandler+0xea>
}
9000892e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008930:	6823      	ldr	r3, [r4, #0]
90008932:	681a      	ldr	r2, [r3, #0]
90008934:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90008938:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000893a:	2202      	movs	r2, #2
9000893c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000893e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008940:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008942:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008944:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008946:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000894a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000894e:	6a23      	ldr	r3, [r4, #32]
90008950:	2b00      	cmp	r3, #0
90008952:	d0e8      	beq.n	90008926 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008954:	4620      	mov	r0, r4
90008956:	4798      	blx	r3
90008958:	e7e5      	b.n	90008926 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000895a:	6823      	ldr	r3, [r4, #0]
9000895c:	681a      	ldr	r2, [r3, #0]
9000895e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008962:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008964:	2208      	movs	r2, #8
90008966:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008968:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000896a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000896c:	4313      	orrs	r3, r2
9000896e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008970:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008974:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008976:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90008978:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000897c:	2b00      	cmp	r3, #0
9000897e:	d0ca      	beq.n	90008916 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008980:	4620      	mov	r0, r4
90008982:	4798      	blx	r3
90008984:	e7c7      	b.n	90008916 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90008986:	6823      	ldr	r3, [r4, #0]
90008988:	681a      	ldr	r2, [r3, #0]
9000898a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000898e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008990:	2220      	movs	r2, #32
90008992:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008994:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90008996:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008998:	f043 0302 	orr.w	r3, r3, #2
9000899c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000899e:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900089a2:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900089a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900089a6:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900089aa:	2b00      	cmp	r3, #0
900089ac:	d0af      	beq.n	9000890e <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
900089ae:	4620      	mov	r0, r4
900089b0:	4798      	blx	r3
900089b2:	e7ac      	b.n	9000890e <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
900089b4:	681a      	ldr	r2, [r3, #0]
900089b6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900089ba:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
900089bc:	6e42      	ldr	r2, [r0, #100]	@ 0x64
900089be:	f042 0201 	orr.w	r2, r2, #1
900089c2:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
900089c4:	2201      	movs	r2, #1
900089c6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900089c8:	2304      	movs	r3, #4
900089ca:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900089ce:	2300      	movs	r3, #0
900089d0:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900089d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900089d6:	2b00      	cmp	r3, #0
900089d8:	d095      	beq.n	90008906 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
900089da:	4798      	blx	r3
900089dc:	e793      	b.n	90008906 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900089de:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900089e0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
900089e2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
900089e4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900089e6:	681a      	ldr	r2, [r3, #0]
900089e8:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
900089ec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900089ee:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900089f0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900089f2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900089f4:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900089f8:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
900089fa:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900089fe:	f7ff ff77 	bl	900088f0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008a02:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008a04:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008a06:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008a08:	681a      	ldr	r2, [r3, #0]
90008a0a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90008a0e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008a10:	2204      	movs	r2, #4
90008a12:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008a14:	f7ff ff6a 	bl	900088ec <HAL_DMA2D_LineEventCallback>
90008a18:	e781      	b.n	9000891e <HAL_DMA2D_IRQHandler+0x2a>
90008a1a:	bf00      	nop

90008a1c <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008a1c:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008a20:	2a01      	cmp	r2, #1
90008a22:	d05f      	beq.n	90008ae4 <HAL_DMA2D_ConfigLayer+0xc8>
90008a24:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a26:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008a2a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a2c:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008a30:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008a34:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90008a36:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008a38:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90008a3c:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008a40:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a42:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90008a44:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008a46:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008a48:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a4a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008a4e:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008a52:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a54:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008a56:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008a5a:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008a5e:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008a60:	d923      	bls.n	90008aaa <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008a62:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008a66:	b971      	cbnz	r1, 90008a86 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008a68:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008a6a:	491f      	ldr	r1, [pc, #124]	@ (90008ae8 <HAL_DMA2D_ConfigLayer+0xcc>)
90008a6c:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008a6e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008a70:	4311      	orrs	r1, r2
90008a72:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008a74:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008a76:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008a78:	2101      	movs	r1, #1

  return HAL_OK;
90008a7a:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008a7c:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90008a80:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90008a84:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008a86:	2d0b      	cmp	r5, #11
90008a88:	d12a      	bne.n	90008ae0 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008a8a:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90008a8c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90008a90:	4816      	ldr	r0, [pc, #88]	@ (90008aec <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008a92:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008a96:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008a98:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008a9c:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008a9e:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008aa2:	430a      	orrs	r2, r1
90008aa4:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008aa6:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008aa8:	e7e5      	b.n	90008a76 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008aaa:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008aae:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008ab0:	b959      	cbnz	r1, 90008aca <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008ab2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008ab4:	490c      	ldr	r1, [pc, #48]	@ (90008ae8 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008ab6:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008ab8:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008aba:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008abc:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008abe:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008ac2:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008ac4:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008ac6:	62a0      	str	r0, [r4, #40]	@ 0x28
90008ac8:	e7d5      	b.n	90008a76 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008aca:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008acc:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ad0:	4905      	ldr	r1, [pc, #20]	@ (90008ae8 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ad2:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ad4:	4029      	ands	r1, r5
90008ad6:	4311      	orrs	r1, r2
90008ad8:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ada:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008adc:	6226      	str	r6, [r4, #32]
90008ade:	e7ca      	b.n	90008a76 <HAL_DMA2D_ConfigLayer+0x5a>
90008ae0:	4801      	ldr	r0, [pc, #4]	@ (90008ae8 <HAL_DMA2D_ConfigLayer+0xcc>)
90008ae2:	e7d6      	b.n	90008a92 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008ae4:	2002      	movs	r0, #2
}
90008ae6:	4770      	bx	lr
90008ae8:	00ccfff0 	.word	0x00ccfff0
90008aec:	00c0fff0 	.word	0x00c0fff0

90008af0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *GPIO_Init)
{
90008af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008af4:	680c      	ldr	r4, [r1, #0]
{
90008af6:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008af8:	2c00      	cmp	r4, #0
90008afa:	f000 80a5 	beq.w	90008c48 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90008afe:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008b00:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008b04:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008b08:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008b0a:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
90008b0e:	ea1c 0a04 	ands.w	sl, ip, r4
90008b12:	f000 8094 	beq.w	90008c3e <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008b16:	9900      	ldr	r1, [sp, #0]
90008b18:	005f      	lsls	r7, r3, #1
90008b1a:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008b1c:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008b1e:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008b22:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008b26:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008b2a:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008b2c:	f1b8 0f01 	cmp.w	r8, #1
90008b30:	f240 808d 	bls.w	90008c4e <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008b34:	2a03      	cmp	r2, #3
90008b36:	f040 80cb 	bne.w	90008cd0 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008b3a:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
90008b3c:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008b3e:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008b42:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008b46:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008b4a:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008b4c:	d077      	beq.n	90008c3e <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008b4e:	4e7f      	ldr	r6, [pc, #508]	@ (90008d4c <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008b50:	f003 0703 	and.w	r7, r3, #3
90008b54:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008b56:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008b5a:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008b5c:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008b60:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008b64:	497a      	ldr	r1, [pc, #488]	@ (90008d50 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008b66:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
90008b6a:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
90008b6e:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008b72:	4288      	cmp	r0, r1
90008b74:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008b78:	f002 0202 	and.w	r2, r2, #2
90008b7c:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90008b80:	9203      	str	r2, [sp, #12]
90008b82:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008b84:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008b86:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008b8a:	d031      	beq.n	90008bf0 <HAL_GPIO_Init+0x100>
90008b8c:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
90008b90:	4288      	cmp	r0, r1
90008b92:	f000 80b0 	beq.w	90008cf6 <HAL_GPIO_Init+0x206>
90008b96:	496f      	ldr	r1, [pc, #444]	@ (90008d54 <HAL_GPIO_Init+0x264>)
90008b98:	4288      	cmp	r0, r1
90008b9a:	f000 80b2 	beq.w	90008d02 <HAL_GPIO_Init+0x212>
90008b9e:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 90008d58 <HAL_GPIO_Init+0x268>
90008ba2:	4560      	cmp	r0, ip
90008ba4:	f000 80a1 	beq.w	90008cea <HAL_GPIO_Init+0x1fa>
90008ba8:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 90008d5c <HAL_GPIO_Init+0x26c>
90008bac:	4560      	cmp	r0, ip
90008bae:	f000 80b4 	beq.w	90008d1a <HAL_GPIO_Init+0x22a>
90008bb2:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 90008d60 <HAL_GPIO_Init+0x270>
90008bb6:	4560      	cmp	r0, ip
90008bb8:	f000 80b5 	beq.w	90008d26 <HAL_GPIO_Init+0x236>
90008bbc:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 90008d64 <HAL_GPIO_Init+0x274>
90008bc0:	4560      	cmp	r0, ip
90008bc2:	f000 80a4 	beq.w	90008d0e <HAL_GPIO_Init+0x21e>
90008bc6:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 90008d68 <HAL_GPIO_Init+0x278>
90008bca:	4560      	cmp	r0, ip
90008bcc:	f000 80b1 	beq.w	90008d32 <HAL_GPIO_Init+0x242>
90008bd0:	f8df c198 	ldr.w	ip, [pc, #408]	@ 90008d6c <HAL_GPIO_Init+0x27c>
90008bd4:	4560      	cmp	r0, ip
90008bd6:	f000 80b2 	beq.w	90008d3e <HAL_GPIO_Init+0x24e>
90008bda:	f8df c194 	ldr.w	ip, [pc, #404]	@ 90008d70 <HAL_GPIO_Init+0x280>
90008bde:	4560      	cmp	r0, ip
90008be0:	bf0c      	ite	eq
90008be2:	f04f 0c09 	moveq.w	ip, #9
90008be6:	f04f 0c0a 	movne.w	ip, #10
90008bea:	fa0c f707 	lsl.w	r7, ip, r7
90008bee:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90008bf0:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008bf2:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90008bf4:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
90008bf8:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
90008bfc:	bf4c      	ite	mi
90008bfe:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90008c02:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008c04:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
90008c06:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
90008c0a:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
90008c0e:	bf54      	ite	pl
90008c10:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008c12:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008c16:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90008c18:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90008c1c:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90008c20:	bf54      	ite	pl
90008c22:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008c24:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008c28:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90008c2a:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008c2e:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90008c32:	bf54      	ite	pl
90008c34:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008c36:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
90008c3a:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
90008c3e:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008c40:	fa34 f203 	lsrs.w	r2, r4, r3
90008c44:	f47f af61 	bne.w	90008b0a <HAL_GPIO_Init+0x1a>
  }
}
90008c48:	b005      	add	sp, #20
90008c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
90008c4e:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008c50:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
90008c52:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008c56:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008c58:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90008c5c:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008c60:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008c62:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008c66:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
90008c68:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008c6c:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90008c70:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008c74:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008c78:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008c7c:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
90008c80:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008c84:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
90008c88:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008c8c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008c90:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008c94:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008c98:	f47f af4f 	bne.w	90008b3a <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008c9c:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008ca0:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
90008ca2:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008ca6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008caa:	6909      	ldr	r1, [r1, #16]
90008cac:	eb00 0888 	add.w	r8, r0, r8, lsl #2
90008cb0:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90008cb4:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008cb8:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008cba:	210f      	movs	r1, #15
90008cbc:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008cc0:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008cc2:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008cc6:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
90008cca:	f8c8 c020 	str.w	ip, [r8, #32]
90008cce:	e734      	b.n	90008b3a <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008cd0:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90008cd2:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008cd6:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008cd8:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008cdc:	fa01 fc07 	lsl.w	ip, r1, r7
90008ce0:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008ce4:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008ce8:	e727      	b.n	90008b3a <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008cea:	f04f 0c03 	mov.w	ip, #3
90008cee:	fa0c f707 	lsl.w	r7, ip, r7
90008cf2:	433a      	orrs	r2, r7
90008cf4:	e77c      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008cf6:	f04f 0c01 	mov.w	ip, #1
90008cfa:	fa0c f707 	lsl.w	r7, ip, r7
90008cfe:	433a      	orrs	r2, r7
90008d00:	e776      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d02:	f04f 0c02 	mov.w	ip, #2
90008d06:	fa0c f707 	lsl.w	r7, ip, r7
90008d0a:	433a      	orrs	r2, r7
90008d0c:	e770      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d0e:	f04f 0c06 	mov.w	ip, #6
90008d12:	fa0c f707 	lsl.w	r7, ip, r7
90008d16:	433a      	orrs	r2, r7
90008d18:	e76a      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d1a:	f04f 0c04 	mov.w	ip, #4
90008d1e:	fa0c f707 	lsl.w	r7, ip, r7
90008d22:	433a      	orrs	r2, r7
90008d24:	e764      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d26:	f04f 0c05 	mov.w	ip, #5
90008d2a:	fa0c f707 	lsl.w	r7, ip, r7
90008d2e:	433a      	orrs	r2, r7
90008d30:	e75e      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d32:	f04f 0c07 	mov.w	ip, #7
90008d36:	fa0c f707 	lsl.w	r7, ip, r7
90008d3a:	433a      	orrs	r2, r7
90008d3c:	e758      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d3e:	f04f 0c08 	mov.w	ip, #8
90008d42:	fa0c f707 	lsl.w	r7, ip, r7
90008d46:	433a      	orrs	r2, r7
90008d48:	e752      	b.n	90008bf0 <HAL_GPIO_Init+0x100>
90008d4a:	bf00      	nop
90008d4c:	58024400 	.word	0x58024400
90008d50:	58020000 	.word	0x58020000
90008d54:	58020800 	.word	0x58020800
90008d58:	58020c00 	.word	0x58020c00
90008d5c:	58021000 	.word	0x58021000
90008d60:	58021400 	.word	0x58021400
90008d64:	58021800 	.word	0x58021800
90008d68:	58021c00 	.word	0x58021c00
90008d6c:	58022000 	.word	0x58022000
90008d70:	58022400 	.word	0x58022400

90008d74 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008d74:	2900      	cmp	r1, #0
90008d76:	f000 80ac 	beq.w	90008ed2 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
90008d7a:	2300      	movs	r3, #0
{
90008d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
90008d80:	2601      	movs	r6, #1
{
90008d82:	b083      	sub	sp, #12
90008d84:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90008ef0 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008d88:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008d8c:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90008d90:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
90008d94:	ea12 0c01 	ands.w	ip, r2, r1
90008d98:	d073      	beq.n	90008e82 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008d9a:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008d9e:	f003 0403 	and.w	r4, r3, #3
90008da2:	4455      	add	r5, sl
90008da4:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90008da6:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008da8:	fa08 fe04 	lsl.w	lr, r8, r4
90008dac:	ea0e 0707 	and.w	r7, lr, r7
90008db0:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008db2:	4f4b      	ldr	r7, [pc, #300]	@ (90008ee0 <HAL_GPIO_DeInit+0x16c>)
90008db4:	42b8      	cmp	r0, r7
90008db6:	d027      	beq.n	90008e08 <HAL_GPIO_DeInit+0x94>
90008db8:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008dbc:	42b8      	cmp	r0, r7
90008dbe:	d067      	beq.n	90008e90 <HAL_GPIO_DeInit+0x11c>
90008dc0:	4f48      	ldr	r7, [pc, #288]	@ (90008ee4 <HAL_GPIO_DeInit+0x170>)
90008dc2:	42b8      	cmp	r0, r7
90008dc4:	d067      	beq.n	90008e96 <HAL_GPIO_DeInit+0x122>
90008dc6:	4f48      	ldr	r7, [pc, #288]	@ (90008ee8 <HAL_GPIO_DeInit+0x174>)
90008dc8:	42b8      	cmp	r0, r7
90008dca:	d06e      	beq.n	90008eaa <HAL_GPIO_DeInit+0x136>
90008dcc:	4f47      	ldr	r7, [pc, #284]	@ (90008eec <HAL_GPIO_DeInit+0x178>)
90008dce:	42b8      	cmp	r0, r7
90008dd0:	d070      	beq.n	90008eb4 <HAL_GPIO_DeInit+0x140>
90008dd2:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90008ef4 <HAL_GPIO_DeInit+0x180>
90008dd6:	4558      	cmp	r0, fp
90008dd8:	d062      	beq.n	90008ea0 <HAL_GPIO_DeInit+0x12c>
90008dda:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 90008ef8 <HAL_GPIO_DeInit+0x184>
90008dde:	4558      	cmp	r0, fp
90008de0:	d072      	beq.n	90008ec8 <HAL_GPIO_DeInit+0x154>
90008de2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90008efc <HAL_GPIO_DeInit+0x188>
90008de6:	4558      	cmp	r0, fp
90008de8:	d074      	beq.n	90008ed4 <HAL_GPIO_DeInit+0x160>
90008dea:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90008f00 <HAL_GPIO_DeInit+0x18c>
90008dee:	4558      	cmp	r0, fp
90008df0:	d065      	beq.n	90008ebe <HAL_GPIO_DeInit+0x14a>
90008df2:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90008f04 <HAL_GPIO_DeInit+0x190>
90008df6:	4558      	cmp	r0, fp
90008df8:	bf14      	ite	ne
90008dfa:	f04f 0b0a 	movne.w	fp, #10
90008dfe:	f04f 0b09 	moveq.w	fp, #9
90008e02:	fa0b f404 	lsl.w	r4, fp, r4
90008e06:	e000      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008e08:	2400      	movs	r4, #0
90008e0a:	9f01      	ldr	r7, [sp, #4]
90008e0c:	42a7      	cmp	r7, r4
90008e0e:	d119      	bne.n	90008e44 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008e10:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90008e14:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
90008e18:	ea27 070c 	bic.w	r7, r7, ip
90008e1c:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008e20:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90008e24:	ea27 070c 	bic.w	r7, r7, ip
90008e28:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90008e2c:	6867      	ldr	r7, [r4, #4]
90008e2e:	ea27 070c 	bic.w	r7, r7, ip
90008e32:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008e34:	6827      	ldr	r7, [r4, #0]
90008e36:	ea27 070c 	bic.w	r7, r7, ip
90008e3a:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90008e3c:	68ac      	ldr	r4, [r5, #8]
90008e3e:	ea24 040e 	bic.w	r4, r4, lr
90008e42:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008e44:	005d      	lsls	r5, r3, #1
90008e46:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008e48:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008e4a:	fa09 f505 	lsl.w	r5, r9, r5
90008e4e:	eb00 0787 	add.w	r7, r0, r7, lsl #2
90008e52:	432c      	orrs	r4, r5
90008e54:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008e56:	f003 0407 	and.w	r4, r3, #7
90008e5a:	f8d7 c020 	ldr.w	ip, [r7, #32]
90008e5e:	00a4      	lsls	r4, r4, #2
90008e60:	fa08 f404 	lsl.w	r4, r8, r4
90008e64:	ea2c 0404 	bic.w	r4, ip, r4
90008e68:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008e6a:	68c4      	ldr	r4, [r0, #12]
90008e6c:	ea24 0405 	bic.w	r4, r4, r5
90008e70:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90008e72:	6844      	ldr	r4, [r0, #4]
90008e74:	ea24 0202 	bic.w	r2, r4, r2
90008e78:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008e7a:	6882      	ldr	r2, [r0, #8]
90008e7c:	ea22 0205 	bic.w	r2, r2, r5
90008e80:	6082      	str	r2, [r0, #8]
    }

    position++;
90008e82:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008e84:	fa31 f203 	lsrs.w	r2, r1, r3
90008e88:	d182      	bne.n	90008d90 <HAL_GPIO_DeInit+0x1c>
  }
}
90008e8a:	b003      	add	sp, #12
90008e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008e90:	fa06 f404 	lsl.w	r4, r6, r4
90008e94:	e7b9      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008e96:	f04f 0b02 	mov.w	fp, #2
90008e9a:	fa0b f404 	lsl.w	r4, fp, r4
90008e9e:	e7b4      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008ea0:	f04f 0b05 	mov.w	fp, #5
90008ea4:	fa0b f404 	lsl.w	r4, fp, r4
90008ea8:	e7af      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008eaa:	f04f 0b03 	mov.w	fp, #3
90008eae:	fa0b f404 	lsl.w	r4, fp, r4
90008eb2:	e7aa      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008eb4:	f04f 0b04 	mov.w	fp, #4
90008eb8:	fa0b f404 	lsl.w	r4, fp, r4
90008ebc:	e7a5      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008ebe:	f04f 0b08 	mov.w	fp, #8
90008ec2:	fa0b f404 	lsl.w	r4, fp, r4
90008ec6:	e7a0      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008ec8:	f04f 0b06 	mov.w	fp, #6
90008ecc:	fa0b f404 	lsl.w	r4, fp, r4
90008ed0:	e79b      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008ed2:	4770      	bx	lr
90008ed4:	f04f 0b07 	mov.w	fp, #7
90008ed8:	fa0b f404 	lsl.w	r4, fp, r4
90008edc:	e795      	b.n	90008e0a <HAL_GPIO_DeInit+0x96>
90008ede:	bf00      	nop
90008ee0:	58020000 	.word	0x58020000
90008ee4:	58020800 	.word	0x58020800
90008ee8:	58020c00 	.word	0x58020c00
90008eec:	58021000 	.word	0x58021000
90008ef0:	58000400 	.word	0x58000400
90008ef4:	58021400 	.word	0x58021400
90008ef8:	58021800 	.word	0x58021800
90008efc:	58021c00 	.word	0x58021c00
90008f00:	58022000 	.word	0x58022000
90008f04:	58022400 	.word	0x58022400

90008f08 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90008f08:	6903      	ldr	r3, [r0, #16]
90008f0a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90008f0c:	bf14      	ite	ne
90008f0e:	2001      	movne	r0, #1
90008f10:	2000      	moveq	r0, #0
90008f12:	4770      	bx	lr

90008f14 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008f14:	b902      	cbnz	r2, 90008f18 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90008f16:	0409      	lsls	r1, r1, #16
90008f18:	6181      	str	r1, [r0, #24]
  }
}
90008f1a:	4770      	bx	lr

90008f1c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90008f1c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90008f1e:	ea01 0203 	and.w	r2, r1, r3
90008f22:	ea21 0103 	bic.w	r1, r1, r3
90008f26:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90008f2a:	6181      	str	r1, [r0, #24]
}
90008f2c:	4770      	bx	lr
90008f2e:	bf00      	nop

90008f30 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90008f30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008f34:	6803      	ldr	r3, [r0, #0]
90008f36:	699a      	ldr	r2, [r3, #24]
90008f38:	0414      	lsls	r4, r2, #16
90008f3a:	f140 8088 	bpl.w	9000904e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
90008f3e:	4604      	mov	r4, r0
90008f40:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008f42:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008f46:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008f48:	f016 0610 	ands.w	r6, r6, #16
90008f4c:	f000 8082 	beq.w	90009054 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
90008f50:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
90008f52:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008f54:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008f58:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008f5a:	699a      	ldr	r2, [r3, #24]
90008f5c:	0692      	lsls	r2, r2, #26
90008f5e:	d427      	bmi.n	90008fb0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
90008f60:	bb4f      	cbnz	r7, 90008fb6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008f62:	f7ff fb45 	bl	900085f0 <HAL_GetTick>
90008f66:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008f68:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008f6a:	2819      	cmp	r0, #25
90008f6c:	d9f5      	bls.n	90008f5a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008f6e:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008f70:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008f74:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008f76:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008f78:	0409      	lsls	r1, r1, #16
90008f7a:	d50b      	bpl.n	90008f94 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
90008f7c:	0440      	lsls	r0, r0, #17
90008f7e:	d409      	bmi.n	90008f94 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
90008f80:	2a20      	cmp	r2, #32
90008f82:	d007      	beq.n	90008f94 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008f84:	685a      	ldr	r2, [r3, #4]
90008f86:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008f8a:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
90008f8c:	f7ff fb30 	bl	900085f0 <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f90:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90008f92:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f94:	699a      	ldr	r2, [r3, #24]
90008f96:	0691      	lsls	r1, r2, #26
90008f98:	d4df      	bmi.n	90008f5a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008f9a:	f7ff fb29 	bl	900085f0 <HAL_GetTick>
90008f9e:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008fa0:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008fa2:	2819      	cmp	r0, #25
90008fa4:	d9f6      	bls.n	90008f94 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008fa6:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008fa8:	2620      	movs	r6, #32

              status = HAL_ERROR;
90008faa:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008fac:	0692      	lsls	r2, r2, #26
90008fae:	d5d7      	bpl.n	90008f60 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90008fb0:	b90f      	cbnz	r7, 90008fb6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008fb2:	2220      	movs	r2, #32
90008fb4:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008fb6:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
90008fba:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008fbc:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008fbe:	05d7      	lsls	r7, r2, #23
90008fc0:	d531      	bpl.n	90009026 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008fc2:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008fc6:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008fc8:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008fcc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008fce:	d504      	bpl.n	90008fda <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008fd0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008fd4:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008fd8:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008fda:	0592      	lsls	r2, r2, #22
90008fdc:	d504      	bpl.n	90008fe8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008fde:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008fe2:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008fe6:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008fe8:	699a      	ldr	r2, [r3, #24]
90008fea:	0795      	lsls	r5, r2, #30
90008fec:	d501      	bpl.n	90008ff2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
90008fee:	2200      	movs	r2, #0
90008ff0:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008ff2:	699a      	ldr	r2, [r3, #24]
90008ff4:	07d0      	lsls	r0, r2, #31
90008ff6:	d403      	bmi.n	90009000 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008ff8:	699a      	ldr	r2, [r3, #24]
90008ffa:	f042 0201 	orr.w	r2, r2, #1
90008ffe:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009000:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90009002:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009004:	4d19      	ldr	r5, [pc, #100]	@ (9000906c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009006:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009008:	402a      	ands	r2, r5
9000900a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000900c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000900e:	4333      	orrs	r3, r6
90009010:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009012:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009016:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000901a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000901c:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000901e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90009022:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009026:	0551      	lsls	r1, r2, #21
90009028:	d4d2      	bmi.n	90008fd0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000902a:	0597      	lsls	r7, r2, #22
9000902c:	d4d7      	bmi.n	90008fde <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
9000902e:	2d00      	cmp	r5, #0
90009030:	d1da      	bne.n	90008fe8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009032:	f7ff fadd 	bl	900085f0 <HAL_GetTick>
90009036:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000903a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000903c:	2819      	cmp	r0, #25
9000903e:	d902      	bls.n	90009046 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009040:	699a      	ldr	r2, [r3, #24]
90009042:	0411      	lsls	r1, r2, #16
90009044:	d408      	bmi.n	90009058 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009046:	699a      	ldr	r2, [r3, #24]
90009048:	0412      	lsls	r2, r2, #16
9000904a:	f53f af7c 	bmi.w	90008f46 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
9000904e:	2000      	movs	r0, #0
}
90009050:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009054:	4635      	mov	r5, r6
90009056:	e7b1      	b.n	90008fbc <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009058:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000905a:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000905c:	4313      	orrs	r3, r2
9000905e:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009060:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009064:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90009068:	e7d7      	b.n	9000901a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
9000906a:	bf00      	nop
9000906c:	fe00e800 	.word	0xfe00e800

90009070 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90009070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009074:	6803      	ldr	r3, [r0, #0]
{
90009076:	4680      	mov	r8, r0
90009078:	460d      	mov	r5, r1
9000907a:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000907c:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000907e:	699c      	ldr	r4, [r3, #24]
90009080:	f014 0402 	ands.w	r4, r4, #2
90009084:	f040 80a5 	bne.w	900091d2 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90009088:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000908a:	f012 0c10 	ands.w	ip, r2, #16
9000908e:	d078      	beq.n	90009182 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
90009090:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
90009092:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009094:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009096:	1c68      	adds	r0, r5, #1
90009098:	d001      	beq.n	9000909e <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
9000909a:	e041      	b.n	90009120 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
9000909c:	b92e      	cbnz	r6, 900090aa <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
9000909e:	699a      	ldr	r2, [r3, #24]
900090a0:	0691      	lsls	r1, r2, #26
900090a2:	d5fb      	bpl.n	9000909c <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
900090a4:	b90e      	cbnz	r6, 900090aa <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090a6:	2220      	movs	r2, #32
900090a8:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
900090aa:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
900090ac:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900090b0:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900090b2:	05d0      	lsls	r0, r2, #23
900090b4:	d569      	bpl.n	9000918a <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900090b6:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900090ba:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900090bc:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900090c0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900090c2:	d504      	bpl.n	900090ce <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900090c4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900090c8:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900090cc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900090ce:	0595      	lsls	r5, r2, #22
900090d0:	d504      	bpl.n	900090dc <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900090d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900090d6:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900090da:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900090dc:	699a      	ldr	r2, [r3, #24]
900090de:	0790      	lsls	r0, r2, #30
900090e0:	d501      	bpl.n	900090e6 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
900090e2:	2200      	movs	r2, #0
900090e4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900090e6:	699a      	ldr	r2, [r3, #24]
900090e8:	07d1      	lsls	r1, r2, #31
900090ea:	d403      	bmi.n	900090f4 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900090ec:	699a      	ldr	r2, [r3, #24]
900090ee:	f042 0201 	orr.w	r2, r2, #1
900090f2:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900090f4:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900090f6:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900090f8:	4c37      	ldr	r4, [pc, #220]	@ (900091d8 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900090fa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900090fc:	4022      	ands	r2, r4
900090fe:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009100:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90009104:	ea43 030c 	orr.w	r3, r3, ip
90009108:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000910c:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009110:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90009114:	2300      	movs	r3, #0
      return HAL_ERROR;
90009116:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009118:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
9000911c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009120:	699a      	ldr	r2, [r3, #24]
90009122:	0692      	lsls	r2, r2, #26
90009124:	d4be      	bmi.n	900090a4 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90009126:	2e00      	cmp	r6, #0
90009128:	d1bf      	bne.n	900090aa <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000912a:	f7ff fa61 	bl	900085f0 <HAL_GetTick>
9000912e:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009132:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009136:	4285      	cmp	r5, r0
90009138:	d301      	bcc.n	9000913e <I2C_WaitOnTXISFlagUntilTimeout+0xce>
9000913a:	2d00      	cmp	r5, #0
9000913c:	d1f0      	bne.n	90009120 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000913e:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009140:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009144:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009146:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009148:	0409      	lsls	r1, r1, #16
9000914a:	d50c      	bpl.n	90009166 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
9000914c:	0441      	lsls	r1, r0, #17
9000914e:	d40a      	bmi.n	90009166 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90009150:	2a20      	cmp	r2, #32
90009152:	d008      	beq.n	90009166 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009154:	685a      	ldr	r2, [r3, #4]
90009156:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000915a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000915c:	f7ff fa48 	bl	900085f0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009160:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90009164:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009166:	699a      	ldr	r2, [r3, #24]
90009168:	0692      	lsls	r2, r2, #26
9000916a:	d494      	bmi.n	90009096 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000916c:	f7ff fa40 	bl	900085f0 <HAL_GetTick>
90009170:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009174:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009178:	2819      	cmp	r0, #25
9000917a:	d9f4      	bls.n	90009166 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000917c:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000917e:	2601      	movs	r6, #1
90009180:	e789      	b.n	90009096 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90009182:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90009184:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009186:	05d0      	lsls	r0, r2, #23
90009188:	d495      	bmi.n	900090b6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000918a:	0556      	lsls	r6, r2, #21
9000918c:	d49a      	bmi.n	900090c4 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000918e:	0594      	lsls	r4, r2, #22
90009190:	d49f      	bmi.n	900090d2 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
90009192:	2900      	cmp	r1, #0
90009194:	d1a2      	bne.n	900090dc <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90009196:	1c6a      	adds	r2, r5, #1
90009198:	f43f af71 	beq.w	9000907e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000919c:	f7ff fa28 	bl	900085f0 <HAL_GetTick>
900091a0:	eba0 030a 	sub.w	r3, r0, sl
900091a4:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900091a6:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900091aa:	d802      	bhi.n	900091b2 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
900091ac:	2d00      	cmp	r5, #0
900091ae:	f47f af65 	bne.w	9000907c <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900091b2:	699a      	ldr	r2, [r3, #24]
900091b4:	f012 0202 	ands.w	r2, r2, #2
900091b8:	f47f af60 	bne.w	9000907c <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900091bc:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900091c0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900091c2:	430b      	orrs	r3, r1
900091c4:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900091c8:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900091cc:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
900091d0:	e7a0      	b.n	90009114 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
900091d2:	2000      	movs	r0, #0
}
900091d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900091d8:	fe00e800 	.word	0xfe00e800

900091dc <I2C_WaitOnFlagUntilTimeout>:
{
900091dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900091e0:	461c      	mov	r4, r3
900091e2:	4683      	mov	fp, r0
900091e4:	460e      	mov	r6, r1
900091e6:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900091e8:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900091ea:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900091ee:	699a      	ldr	r2, [r3, #24]
900091f0:	ea36 0202 	bics.w	r2, r6, r2
900091f4:	bf0c      	ite	eq
900091f6:	2201      	moveq	r2, #1
900091f8:	2200      	movne	r2, #0
900091fa:	42aa      	cmp	r2, r5
900091fc:	f040 80af 	bne.w	9000935e <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90009200:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009202:	f012 0c10 	ands.w	ip, r2, #16
90009206:	d07d      	beq.n	90009304 <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90009208:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
9000920c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009210:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90009214:	464f      	mov	r7, r9
90009216:	1c60      	adds	r0, r4, #1
90009218:	d001      	beq.n	9000921e <I2C_WaitOnFlagUntilTimeout+0x42>
9000921a:	e041      	b.n	900092a0 <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000921c:	b92f      	cbnz	r7, 9000922a <I2C_WaitOnFlagUntilTimeout+0x4e>
9000921e:	699a      	ldr	r2, [r3, #24]
90009220:	0691      	lsls	r1, r2, #26
90009222:	d5fb      	bpl.n	9000921c <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90009224:	b90f      	cbnz	r7, 9000922a <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009226:	2220      	movs	r2, #32
90009228:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
9000922a:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
9000922c:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90009230:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009232:	05d7      	lsls	r7, r2, #23
90009234:	d56a      	bpl.n	9000930c <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009236:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000923a:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000923c:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009240:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009242:	d504      	bpl.n	9000924e <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009244:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009248:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000924c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000924e:	0592      	lsls	r2, r2, #22
90009250:	d504      	bpl.n	9000925c <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009252:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009256:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000925a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000925c:	699a      	ldr	r2, [r3, #24]
9000925e:	0790      	lsls	r0, r2, #30
90009260:	d501      	bpl.n	90009266 <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
90009262:	2200      	movs	r2, #0
90009264:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009266:	699a      	ldr	r2, [r3, #24]
90009268:	07d1      	lsls	r1, r2, #31
9000926a:	d403      	bmi.n	90009274 <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000926c:	699a      	ldr	r2, [r3, #24]
9000926e:	f042 0201 	orr.w	r2, r2, #1
90009272:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90009274:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009276:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009278:	4c3a      	ldr	r4, [pc, #232]	@ (90009364 <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000927a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000927c:	4022      	ands	r2, r4
9000927e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009280:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90009284:	ea43 030c 	orr.w	r3, r3, ip
90009288:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000928c:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009290:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90009294:	2300      	movs	r3, #0
      return HAL_ERROR;
90009296:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009298:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
9000929c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900092a0:	699a      	ldr	r2, [r3, #24]
900092a2:	0692      	lsls	r2, r2, #26
900092a4:	d4be      	bmi.n	90009224 <I2C_WaitOnFlagUntilTimeout+0x48>
900092a6:	2f00      	cmp	r7, #0
900092a8:	d1bf      	bne.n	9000922a <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900092aa:	f7ff f9a1 	bl	900085f0 <HAL_GetTick>
900092ae:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900092b2:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900092b6:	4284      	cmp	r4, r0
900092b8:	d301      	bcc.n	900092be <I2C_WaitOnFlagUntilTimeout+0xe2>
900092ba:	2c00      	cmp	r4, #0
900092bc:	d1f0      	bne.n	900092a0 <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900092be:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
900092c0:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900092c4:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
900092c6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900092c8:	0400      	lsls	r0, r0, #16
900092ca:	d50c      	bpl.n	900092e6 <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
900092cc:	0449      	lsls	r1, r1, #17
900092ce:	d40a      	bmi.n	900092e6 <I2C_WaitOnFlagUntilTimeout+0x10a>
900092d0:	2a20      	cmp	r2, #32
900092d2:	d008      	beq.n	900092e6 <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900092d4:	685a      	ldr	r2, [r3, #4]
900092d6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900092da:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900092dc:	f7ff f988 	bl	900085f0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900092e0:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
900092e4:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900092e6:	699a      	ldr	r2, [r3, #24]
900092e8:	0692      	lsls	r2, r2, #26
900092ea:	d494      	bmi.n	90009216 <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900092ec:	f7ff f980 	bl	900085f0 <HAL_GetTick>
900092f0:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900092f4:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900092f8:	2819      	cmp	r0, #25
900092fa:	d9f4      	bls.n	900092e6 <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900092fc:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90009300:	2701      	movs	r7, #1
90009302:	e788      	b.n	90009216 <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
90009304:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90009306:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009308:	05d7      	lsls	r7, r2, #23
9000930a:	d494      	bmi.n	90009236 <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000930c:	0550      	lsls	r0, r2, #21
9000930e:	d499      	bmi.n	90009244 <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009310:	0597      	lsls	r7, r2, #22
90009312:	d49e      	bmi.n	90009252 <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
90009314:	2900      	cmp	r1, #0
90009316:	d1a1      	bne.n	9000925c <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90009318:	1c62      	adds	r2, r4, #1
9000931a:	f43f af68 	beq.w	900091ee <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000931e:	f7ff f967 	bl	900085f0 <HAL_GetTick>
90009322:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90009324:	1ac3      	subs	r3, r0, r3
90009326:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009328:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000932c:	d802      	bhi.n	90009334 <I2C_WaitOnFlagUntilTimeout+0x158>
9000932e:	2c00      	cmp	r4, #0
90009330:	f47f af5d 	bne.w	900091ee <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009334:	699a      	ldr	r2, [r3, #24]
90009336:	ea36 0202 	bics.w	r2, r6, r2
9000933a:	bf0c      	ite	eq
9000933c:	2201      	moveq	r2, #1
9000933e:	2200      	movne	r2, #0
90009340:	42aa      	cmp	r2, r5
90009342:	f47f af54 	bne.w	900091ee <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009346:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000934a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000934c:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000934e:	430b      	orrs	r3, r1
90009350:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009354:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009358:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
9000935c:	e79a      	b.n	90009294 <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
9000935e:	2000      	movs	r0, #0
}
90009360:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009364:	fe00e800 	.word	0xfe00e800

90009368 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009368:	6803      	ldr	r3, [r0, #0]
{
9000936a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000936e:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009370:	699a      	ldr	r2, [r3, #24]
90009372:	0694      	lsls	r4, r2, #26
90009374:	f100 8092 	bmi.w	9000949c <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90009378:	4605      	mov	r5, r0
9000937a:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000937c:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009380:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009382:	f012 0c10 	ands.w	ip, r2, #16
90009386:	f000 808c 	beq.w	900094a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
9000938a:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
9000938c:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000938e:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90009392:	46a2      	mov	sl, r4
90009394:	1c70      	adds	r0, r6, #1
90009396:	d003      	beq.n	900093a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90009398:	e043      	b.n	90009422 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000939a:	f1ba 0f00 	cmp.w	sl, #0
9000939e:	d107      	bne.n	900093b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
900093a0:	699a      	ldr	r2, [r3, #24]
900093a2:	0691      	lsls	r1, r2, #26
900093a4:	d5f9      	bpl.n	9000939a <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
900093a6:	f1ba 0f00 	cmp.w	sl, #0
900093aa:	d101      	bne.n	900093b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900093ac:	2220      	movs	r2, #32
900093ae:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900093b0:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900093b4:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900093b6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900093b8:	05d0      	lsls	r0, r2, #23
900093ba:	d55a      	bpl.n	90009472 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093bc:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093c0:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900093c2:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093c6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093c8:	d504      	bpl.n	900093d4 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093ca:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900093ce:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093d2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900093d4:	0596      	lsls	r6, r2, #22
900093d6:	d504      	bpl.n	900093e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093d8:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900093dc:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093e0:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900093e2:	699a      	ldr	r2, [r3, #24]
900093e4:	0790      	lsls	r0, r2, #30
900093e6:	d501      	bpl.n	900093ec <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
900093e8:	2200      	movs	r2, #0
900093ea:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900093ec:	699a      	ldr	r2, [r3, #24]
900093ee:	07d1      	lsls	r1, r2, #31
900093f0:	d403      	bmi.n	900093fa <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900093f2:	699a      	ldr	r2, [r3, #24]
900093f4:	f042 0201 	orr.w	r2, r2, #1
900093f8:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900093fa:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900093fc:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900093fe:	4c33      	ldr	r4, [pc, #204]	@ (900094cc <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009400:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009402:	4022      	ands	r2, r4
90009404:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009406:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90009408:	ea43 030c 	orr.w	r3, r3, ip
9000940c:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000940e:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009412:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90009416:	2300      	movs	r3, #0
      return HAL_ERROR;
90009418:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
9000941a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000941e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009422:	699a      	ldr	r2, [r3, #24]
90009424:	0692      	lsls	r2, r2, #26
90009426:	d4be      	bmi.n	900093a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90009428:	f1ba 0f00 	cmp.w	sl, #0
9000942c:	d1c0      	bne.n	900093b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000942e:	f7ff f8df 	bl	900085f0 <HAL_GetTick>
90009432:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009436:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009438:	4286      	cmp	r6, r0
9000943a:	d301      	bcc.n	90009440 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
9000943c:	2e00      	cmp	r6, #0
9000943e:	d1f0      	bne.n	90009422 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009440:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009442:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009446:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009448:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000944a:	0409      	lsls	r1, r1, #16
9000944c:	d503      	bpl.n	90009456 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
9000944e:	0441      	lsls	r1, r0, #17
90009450:	d401      	bmi.n	90009456 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90009452:	2a20      	cmp	r2, #32
90009454:	d130      	bne.n	900094b8 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009456:	699a      	ldr	r2, [r3, #24]
90009458:	0692      	lsls	r2, r2, #26
9000945a:	d49b      	bmi.n	90009394 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000945c:	f7ff f8c8 	bl	900085f0 <HAL_GetTick>
90009460:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009464:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009466:	2819      	cmp	r0, #25
90009468:	d9f5      	bls.n	90009456 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000946a:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000946c:	f04f 0a01 	mov.w	sl, #1
90009470:	e790      	b.n	90009394 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009472:	0550      	lsls	r0, r2, #21
90009474:	d4a9      	bmi.n	900093ca <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009476:	0594      	lsls	r4, r2, #22
90009478:	d4ae      	bmi.n	900093d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000947a:	2900      	cmp	r1, #0
9000947c:	d1b1      	bne.n	900093e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000947e:	f7ff f8b7 	bl	900085f0 <HAL_GetTick>
90009482:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009484:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009486:	42b0      	cmp	r0, r6
90009488:	d800      	bhi.n	9000948c <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
9000948a:	b91e      	cbnz	r6, 90009494 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000948c:	699a      	ldr	r2, [r3, #24]
9000948e:	f012 0220 	ands.w	r2, r2, #32
90009492:	d008      	beq.n	900094a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009494:	699a      	ldr	r2, [r3, #24]
90009496:	0692      	lsls	r2, r2, #26
90009498:	f57f af72 	bpl.w	90009380 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000949c:	2000      	movs	r0, #0
}
9000949e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
900094a2:	4661      	mov	r1, ip
900094a4:	e787      	b.n	900093b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900094a6:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
900094a8:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900094aa:	430b      	orrs	r3, r1
900094ac:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
900094ae:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
900094b2:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
900094b6:	e7ae      	b.n	90009416 <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900094b8:	685a      	ldr	r2, [r3, #4]
900094ba:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900094be:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900094c0:	f7ff f896 	bl	900085f0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900094c4:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900094c6:	4681      	mov	r9, r0
900094c8:	e7c5      	b.n	90009456 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900094ca:	bf00      	nop
900094cc:	fe00e800 	.word	0xfe00e800

900094d0 <HAL_I2C_MspInit>:
}
900094d0:	4770      	bx	lr
900094d2:	bf00      	nop

900094d4 <HAL_I2C_Init>:
  if (hi2c == NULL)
900094d4:	2800      	cmp	r0, #0
900094d6:	d053      	beq.n	90009580 <HAL_I2C_Init+0xac>
{
900094d8:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900094da:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
900094de:	4604      	mov	r4, r0
900094e0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900094e4:	2b00      	cmp	r3, #0
900094e6:	d046      	beq.n	90009576 <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
900094e8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900094ea:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900094ec:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900094ee:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
900094f2:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900094f4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900094f8:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900094fa:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900094fe:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009500:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009502:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009504:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009506:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009508:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000950c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000950e:	d009      	beq.n	90009524 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009510:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009514:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009516:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009518:	d107      	bne.n	9000952a <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
9000951a:	685a      	ldr	r2, [r3, #4]
9000951c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90009520:	605a      	str	r2, [r3, #4]
90009522:	e006      	b.n	90009532 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009524:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90009528:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
9000952a:	685a      	ldr	r2, [r3, #4]
9000952c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90009530:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009532:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90009534:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009538:	4912      	ldr	r1, [pc, #72]	@ (90009584 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000953a:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000953c:	4301      	orrs	r1, r0
9000953e:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90009540:	68d9      	ldr	r1, [r3, #12]
90009542:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90009546:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90009548:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000954c:	4302      	orrs	r2, r0
9000954e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009552:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009556:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009558:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000955a:	4301      	orrs	r1, r0
  return HAL_OK;
9000955c:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000955e:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90009560:	6819      	ldr	r1, [r3, #0]
90009562:	f041 0101 	orr.w	r1, r1, #1
90009566:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009568:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000956a:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000956e:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009570:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90009574:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90009576:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
9000957a:	f7ff ffa9 	bl	900094d0 <HAL_I2C_MspInit>
9000957e:	e7b3      	b.n	900094e8 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90009580:	2001      	movs	r0, #1
}
90009582:	4770      	bx	lr
90009584:	02008000 	.word	0x02008000

90009588 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90009588:	4770      	bx	lr
9000958a:	bf00      	nop

9000958c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000958c:	b1b0      	cbz	r0, 900095bc <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000958e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009590:	2324      	movs	r3, #36	@ 0x24
{
90009592:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009594:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90009598:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000959a:	6813      	ldr	r3, [r2, #0]
9000959c:	f023 0301 	bic.w	r3, r3, #1
900095a0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900095a2:	f7ff fff1 	bl	90009588 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900095a6:	2300      	movs	r3, #0
900095a8:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
900095aa:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
900095ac:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
900095b0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
900095b4:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900095b6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
900095ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900095bc:	2001      	movs	r0, #1
}
900095be:	4770      	bx	lr

900095c0 <HAL_I2C_Mem_Write>:
{
900095c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900095c4:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900095c6:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900095ca:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
900095cc:	2820      	cmp	r0, #32
{
900095ce:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
900095d2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
900095d4:	d11e      	bne.n	90009614 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
900095d6:	4698      	mov	r8, r3
900095d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900095da:	b1bb      	cbz	r3, 9000960c <HAL_I2C_Mem_Write+0x4c>
900095dc:	f1ba 0f00 	cmp.w	sl, #0
900095e0:	d014      	beq.n	9000960c <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
900095e2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900095e6:	2b01      	cmp	r3, #1
900095e8:	d014      	beq.n	90009614 <HAL_I2C_Mem_Write+0x54>
900095ea:	2301      	movs	r3, #1
900095ec:	460d      	mov	r5, r1
900095ee:	4691      	mov	r9, r2
900095f0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900095f4:	f7fe fffc 	bl	900085f0 <HAL_GetTick>
900095f8:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900095fa:	4620      	mov	r0, r4
900095fc:	4631      	mov	r1, r6
900095fe:	f7ff fc97 	bl	90008f30 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90009602:	b158      	cbz	r0, 9000961c <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90009604:	2001      	movs	r0, #1
}
90009606:	b003      	add	sp, #12
90009608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000960c:	f44f 7300 	mov.w	r3, #512	@ 0x200
90009610:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90009612:	e7f7      	b.n	90009604 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90009614:	2002      	movs	r0, #2
}
90009616:	b003      	add	sp, #12
90009618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000961c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000961e:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90009622:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90009624:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90009626:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90009628:	4a5f      	ldr	r2, [pc, #380]	@ (900097a8 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000962a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000962e:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90009630:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009632:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009636:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009638:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
9000963a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000963e:	684b      	ldr	r3, [r1, #4]
90009640:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009642:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009646:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000964a:	4a58      	ldr	r2, [pc, #352]	@ (900097ac <HAL_I2C_Mem_Write+0x1ec>)
9000964c:	ea43 030b 	orr.w	r3, r3, fp
90009650:	431a      	orrs	r2, r3
90009652:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009654:	4632      	mov	r2, r6
90009656:	4639      	mov	r1, r7
90009658:	f7ff fd0a 	bl	90009070 <I2C_WaitOnTXISFlagUntilTimeout>
9000965c:	2800      	cmp	r0, #0
9000965e:	d176      	bne.n	9000974e <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009660:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009664:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009666:	d169      	bne.n	9000973c <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009668:	fa5f f289 	uxtb.w	r2, r9
9000966c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
9000966e:	463b      	mov	r3, r7
90009670:	2200      	movs	r2, #0
90009672:	2180      	movs	r1, #128	@ 0x80
90009674:	4620      	mov	r0, r4
90009676:	9600      	str	r6, [sp, #0]
90009678:	f7ff fdb0 	bl	900091dc <I2C_WaitOnFlagUntilTimeout>
9000967c:	2800      	cmp	r0, #0
9000967e:	d166      	bne.n	9000974e <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009680:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009682:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009684:	b29b      	uxth	r3, r3
90009686:	2bff      	cmp	r3, #255	@ 0xff
90009688:	d965      	bls.n	90009756 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
9000968a:	6853      	ldr	r3, [r2, #4]
9000968c:	4948      	ldr	r1, [pc, #288]	@ (900097b0 <HAL_I2C_Mem_Write+0x1f0>)
9000968e:	400b      	ands	r3, r1
90009690:	4948      	ldr	r1, [pc, #288]	@ (900097b4 <HAL_I2C_Mem_Write+0x1f4>)
90009692:	ea43 030b 	orr.w	r3, r3, fp
90009696:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009698:	23ff      	movs	r3, #255	@ 0xff
9000969a:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000969c:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000969e:	e003      	b.n	900096a8 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
900096a0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900096a2:	b29b      	uxth	r3, r3
900096a4:	2b00      	cmp	r3, #0
900096a6:	d069      	beq.n	9000977c <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900096a8:	4632      	mov	r2, r6
900096aa:	4639      	mov	r1, r7
900096ac:	4620      	mov	r0, r4
900096ae:	f7ff fcdf 	bl	90009070 <I2C_WaitOnTXISFlagUntilTimeout>
900096b2:	4602      	mov	r2, r0
900096b4:	2800      	cmp	r0, #0
900096b6:	d1a5      	bne.n	90009604 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900096b8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900096ba:	6825      	ldr	r5, [r4, #0]
900096bc:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
900096c0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900096c2:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
900096c4:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900096c8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900096ca:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900096cc:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900096d0:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900096d2:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900096d6:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
900096d8:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900096dc:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
900096de:	b289      	uxth	r1, r1
900096e0:	2b00      	cmp	r3, #0
900096e2:	d1dd      	bne.n	900096a0 <HAL_I2C_Mem_Write+0xe0>
900096e4:	2900      	cmp	r1, #0
900096e6:	d0db      	beq.n	900096a0 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900096e8:	463b      	mov	r3, r7
900096ea:	2180      	movs	r1, #128	@ 0x80
900096ec:	4620      	mov	r0, r4
900096ee:	9600      	str	r6, [sp, #0]
900096f0:	f7ff fd74 	bl	900091dc <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900096f4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900096f8:	2800      	cmp	r0, #0
900096fa:	d183      	bne.n	90009604 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900096fc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900096fe:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 900097b0 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009702:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009704:	492b      	ldr	r1, [pc, #172]	@ (900097b4 <HAL_I2C_Mem_Write+0x1f4>)
90009706:	4670      	mov	r0, lr
90009708:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000970a:	4563      	cmp	r3, ip
9000970c:	d909      	bls.n	90009722 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000970e:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009710:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009714:	ea03 030e 	and.w	r3, r3, lr
90009718:	ea43 030b 	orr.w	r3, r3, fp
9000971c:	4319      	orrs	r1, r3
9000971e:	6051      	str	r1, [r2, #4]
}
90009720:	e7be      	b.n	900096a0 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90009722:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009724:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009726:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009728:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000972a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000972c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000972e:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009732:	430b      	orrs	r3, r1
90009734:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009738:	6053      	str	r3, [r2, #4]
}
9000973a:	e7b1      	b.n	900096a0 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000973c:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009740:	4639      	mov	r1, r7
90009742:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009744:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009746:	4632      	mov	r2, r6
90009748:	f7ff fc92 	bl	90009070 <I2C_WaitOnTXISFlagUntilTimeout>
9000974c:	b188      	cbz	r0, 90009772 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
9000974e:	2300      	movs	r3, #0
90009750:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009754:	e756      	b.n	90009604 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009756:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009758:	4815      	ldr	r0, [pc, #84]	@ (900097b0 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
9000975a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000975c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000975e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009760:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009762:	4001      	ands	r1, r0
90009764:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009768:	430b      	orrs	r3, r1
9000976a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000976e:	6053      	str	r3, [r2, #4]
}
90009770:	e79a      	b.n	900096a8 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009772:	fa5f f289 	uxtb.w	r2, r9
90009776:	6823      	ldr	r3, [r4, #0]
90009778:	629a      	str	r2, [r3, #40]	@ 0x28
9000977a:	e778      	b.n	9000966e <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000977c:	4632      	mov	r2, r6
9000977e:	4639      	mov	r1, r7
90009780:	4620      	mov	r0, r4
90009782:	f7ff fdf1 	bl	90009368 <I2C_WaitOnSTOPFlagUntilTimeout>
90009786:	2800      	cmp	r0, #0
90009788:	f47f af3c 	bne.w	90009604 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000978c:	6823      	ldr	r3, [r4, #0]
9000978e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009790:	4d09      	ldr	r5, [pc, #36]	@ (900097b8 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009792:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009794:	685a      	ldr	r2, [r3, #4]
90009796:	402a      	ands	r2, r5
90009798:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000979a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000979e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900097a2:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900097a6:	e72e      	b.n	90009606 <HAL_I2C_Mem_Write+0x46>
900097a8:	fc009800 	.word	0xfc009800
900097ac:	01002000 	.word	0x01002000
900097b0:	fc009c00 	.word	0xfc009c00
900097b4:	01ff0000 	.word	0x01ff0000
900097b8:	fe00e800 	.word	0xfe00e800

900097bc <HAL_I2C_Mem_Read>:
{
900097bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900097c0:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900097c2:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900097c6:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
900097c8:	2820      	cmp	r0, #32
{
900097ca:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900097ce:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
900097d0:	d11e      	bne.n	90009810 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
900097d2:	4698      	mov	r8, r3
900097d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900097d6:	b1bb      	cbz	r3, 90009808 <HAL_I2C_Mem_Read+0x4c>
900097d8:	f1ba 0f00 	cmp.w	sl, #0
900097dc:	d014      	beq.n	90009808 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
900097de:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900097e2:	2b01      	cmp	r3, #1
900097e4:	d014      	beq.n	90009810 <HAL_I2C_Mem_Read+0x54>
900097e6:	2301      	movs	r3, #1
900097e8:	460d      	mov	r5, r1
900097ea:	4691      	mov	r9, r2
900097ec:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900097f0:	f7fe fefe 	bl	900085f0 <HAL_GetTick>
900097f4:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900097f6:	4620      	mov	r0, r4
900097f8:	4631      	mov	r1, r6
900097fa:	f7ff fb99 	bl	90008f30 <I2C_WaitOnFlagUntilTimeout.constprop.0>
900097fe:	b158      	cbz	r0, 90009818 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90009800:	2001      	movs	r0, #1
}
90009802:	b002      	add	sp, #8
90009804:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009808:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000980c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000980e:	e7f7      	b.n	90009800 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90009810:	2002      	movs	r0, #2
}
90009812:	b002      	add	sp, #8
90009814:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009818:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000981a:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
9000981e:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90009820:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009822:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90009824:	495f      	ldr	r1, [pc, #380]	@ (900099a4 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009826:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000982a:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
9000982c:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000982e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009832:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009834:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90009836:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000983a:	6853      	ldr	r3, [r2, #4]
9000983c:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000983e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009842:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009846:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90009848:	432b      	orrs	r3, r5
9000984a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000984e:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009850:	4632      	mov	r2, r6
90009852:	f7ff fc0d 	bl	90009070 <I2C_WaitOnTXISFlagUntilTimeout>
90009856:	2800      	cmp	r0, #0
90009858:	d177      	bne.n	9000994a <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000985a:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000985e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009860:	d16a      	bne.n	90009938 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009862:	fa5f f289 	uxtb.w	r2, r9
90009866:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90009868:	463b      	mov	r3, r7
9000986a:	2200      	movs	r2, #0
9000986c:	2140      	movs	r1, #64	@ 0x40
9000986e:	4620      	mov	r0, r4
90009870:	9600      	str	r6, [sp, #0]
90009872:	f7ff fcb3 	bl	900091dc <I2C_WaitOnFlagUntilTimeout>
90009876:	2800      	cmp	r0, #0
90009878:	d167      	bne.n	9000994a <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000987a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000987c:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000987e:	b29b      	uxth	r3, r3
90009880:	2bff      	cmp	r3, #255	@ 0xff
90009882:	d966      	bls.n	90009952 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90009884:	6853      	ldr	r3, [r2, #4]
90009886:	4947      	ldr	r1, [pc, #284]	@ (900099a4 <HAL_I2C_Mem_Read+0x1e8>)
90009888:	400b      	ands	r3, r1
9000988a:	4947      	ldr	r1, [pc, #284]	@ (900099a8 <HAL_I2C_Mem_Read+0x1ec>)
9000988c:	432b      	orrs	r3, r5
9000988e:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009890:	23ff      	movs	r3, #255	@ 0xff
90009892:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009894:	6051      	str	r1, [r2, #4]
}
90009896:	e003      	b.n	900098a0 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
90009898:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000989a:	b29b      	uxth	r3, r3
9000989c:	2b00      	cmp	r3, #0
9000989e:	d06b      	beq.n	90009978 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900098a0:	463b      	mov	r3, r7
900098a2:	2200      	movs	r2, #0
900098a4:	2104      	movs	r1, #4
900098a6:	4620      	mov	r0, r4
900098a8:	9600      	str	r6, [sp, #0]
900098aa:	f7ff fc97 	bl	900091dc <I2C_WaitOnFlagUntilTimeout>
900098ae:	2800      	cmp	r0, #0
900098b0:	d1a6      	bne.n	90009800 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
900098b2:	6821      	ldr	r1, [r4, #0]
900098b4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900098b6:	6a49      	ldr	r1, [r1, #36]	@ 0x24
900098b8:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
900098ba:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900098be:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
900098c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900098c2:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900098c6:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900098c8:	3101      	adds	r1, #1
      hi2c->XferCount--;
900098ca:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900098ce:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
900098d0:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900098d2:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900098d6:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900098d8:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900098da:	b289      	uxth	r1, r1
900098dc:	2b00      	cmp	r3, #0
900098de:	d1db      	bne.n	90009898 <HAL_I2C_Mem_Read+0xdc>
900098e0:	2900      	cmp	r1, #0
900098e2:	d0d9      	beq.n	90009898 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900098e4:	4602      	mov	r2, r0
900098e6:	463b      	mov	r3, r7
900098e8:	2180      	movs	r1, #128	@ 0x80
900098ea:	4620      	mov	r0, r4
900098ec:	9600      	str	r6, [sp, #0]
900098ee:	f7ff fc75 	bl	900091dc <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900098f2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900098f6:	2800      	cmp	r0, #0
900098f8:	d182      	bne.n	90009800 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900098fa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900098fc:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 900099b8 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009900:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009902:	492a      	ldr	r1, [pc, #168]	@ (900099ac <HAL_I2C_Mem_Read+0x1f0>)
90009904:	4670      	mov	r0, lr
90009906:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009908:	4563      	cmp	r3, ip
9000990a:	d908      	bls.n	9000991e <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000990c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000990e:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009912:	ea03 030e 	and.w	r3, r3, lr
90009916:	432b      	orrs	r3, r5
90009918:	4319      	orrs	r1, r3
9000991a:	6051      	str	r1, [r2, #4]
}
9000991c:	e7bc      	b.n	90009898 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
9000991e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009920:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009922:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009924:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90009926:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009928:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000992a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000992e:	430b      	orrs	r3, r1
90009930:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009934:	6053      	str	r3, [r2, #4]
}
90009936:	e7af      	b.n	90009898 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009938:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000993c:	4639      	mov	r1, r7
9000993e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009940:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009942:	4632      	mov	r2, r6
90009944:	f7ff fb94 	bl	90009070 <I2C_WaitOnTXISFlagUntilTimeout>
90009948:	b188      	cbz	r0, 9000996e <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
9000994a:	2300      	movs	r3, #0
9000994c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009950:	e756      	b.n	90009800 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009952:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009954:	4813      	ldr	r0, [pc, #76]	@ (900099a4 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90009956:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009958:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000995a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000995c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000995e:	4001      	ands	r1, r0
90009960:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009964:	430b      	orrs	r3, r1
90009966:	4912      	ldr	r1, [pc, #72]	@ (900099b0 <HAL_I2C_Mem_Read+0x1f4>)
90009968:	4319      	orrs	r1, r3
9000996a:	6051      	str	r1, [r2, #4]
}
9000996c:	e798      	b.n	900098a0 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000996e:	fa5f f289 	uxtb.w	r2, r9
90009972:	6823      	ldr	r3, [r4, #0]
90009974:	629a      	str	r2, [r3, #40]	@ 0x28
90009976:	e777      	b.n	90009868 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009978:	4632      	mov	r2, r6
9000997a:	4639      	mov	r1, r7
9000997c:	4620      	mov	r0, r4
9000997e:	f7ff fcf3 	bl	90009368 <I2C_WaitOnSTOPFlagUntilTimeout>
90009982:	2800      	cmp	r0, #0
90009984:	f47f af3c 	bne.w	90009800 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009988:	6823      	ldr	r3, [r4, #0]
9000998a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000998c:	4d09      	ldr	r5, [pc, #36]	@ (900099b4 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000998e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009990:	685a      	ldr	r2, [r3, #4]
90009992:	402a      	ands	r2, r5
90009994:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009996:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000999a:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000999e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900099a2:	e72e      	b.n	90009802 <HAL_I2C_Mem_Read+0x46>
900099a4:	fc009800 	.word	0xfc009800
900099a8:	01ff2400 	.word	0x01ff2400
900099ac:	01ff0000 	.word	0x01ff0000
900099b0:	02002400 	.word	0x02002400
900099b4:	fe00e800 	.word	0xfe00e800
900099b8:	fc009c00 	.word	0xfc009c00

900099bc <HAL_I2C_GetState>:
  return hi2c->State;
900099bc:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
900099c0:	4770      	bx	lr
900099c2:	bf00      	nop

900099c4 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900099c4:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
900099c6:	4770      	bx	lr

900099c8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900099c8:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900099cc:	2a20      	cmp	r2, #32
900099ce:	d123      	bne.n	90009a18 <HAL_I2CEx_ConfigAnalogFilter+0x50>
900099d0:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900099d4:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900099d8:	4603      	mov	r3, r0
900099da:	2a01      	cmp	r2, #1
900099dc:	d01c      	beq.n	90009a18 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900099de:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900099e0:	2024      	movs	r0, #36	@ 0x24
{
900099e2:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900099e4:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900099e8:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
900099ec:	6810      	ldr	r0, [r2, #0]
900099ee:	f020 0001 	bic.w	r0, r0, #1
900099f2:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
900099f4:	6810      	ldr	r0, [r2, #0]
900099f6:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
900099fa:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
900099fc:	6810      	ldr	r0, [r2, #0]
900099fe:	4301      	orrs	r1, r0

    return HAL_OK;
90009a00:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009a02:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009a04:	6811      	ldr	r1, [r2, #0]
90009a06:	f041 0101 	orr.w	r1, r1, #1
90009a0a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009a0c:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009a10:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009a14:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009a18:	2002      	movs	r0, #2
}
90009a1a:	4770      	bx	lr

90009a1c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009a1c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009a20:	2a20      	cmp	r2, #32
90009a22:	d122      	bne.n	90009a6a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009a24:	4603      	mov	r3, r0
{
90009a26:	b500      	push	{lr}
90009a28:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009a2c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009a30:	2a01      	cmp	r2, #1
90009a32:	d01c      	beq.n	90009a6e <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009a34:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009a36:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009a38:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009a3c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90009a40:	6810      	ldr	r0, [r2, #0]
90009a42:	f020 0001 	bic.w	r0, r0, #1
90009a46:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009a48:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90009a4a:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90009a4e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009a52:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009a54:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009a56:	6811      	ldr	r1, [r2, #0]
90009a58:	f041 0101 	orr.w	r1, r1, #1
90009a5c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009a5e:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009a62:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009a66:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009a6a:	2002      	movs	r0, #2
}
90009a6c:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009a6e:	2002      	movs	r0, #2
}
90009a70:	f85d fb04 	ldr.w	pc, [sp], #4

90009a74 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90009a78:	4699      	mov	r9, r3
90009a7a:	4680      	mov	r8, r0
90009a7c:	460d      	mov	r5, r1
90009a7e:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009a80:	7803      	ldrb	r3, [r0, #0]
90009a82:	2601      	movs	r6, #1
  p = 0;
90009a84:	2700      	movs	r7, #0
90009a86:	e005      	b.n	90009a94 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
90009a88:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
90009a8c:	19da      	adds	r2, r3, r7
90009a8e:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90009a92:	d83a      	bhi.n	90009b0a <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009a94:	19e8      	adds	r0, r5, r7
90009a96:	461a      	mov	r2, r3
90009a98:	4631      	mov	r1, r6
    while (i != 0UL)
90009a9a:	b113      	cbz	r3, 90009aa2 <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
90009a9c:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
90009a9e:	f020 fe93 	bl	9002a7c8 <memset>
  for (l = 0; l < 16UL; l++)
90009aa2:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
90009aa4:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
90009aa8:	d1ee      	bne.n	90009a88 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
90009aaa:	2300      	movs	r3, #0
90009aac:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90009aae:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009ab2:	7829      	ldrb	r1, [r5, #0]
90009ab4:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90009ab6:	b329      	cbz	r1, 90009b04 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
90009ab8:	4699      	mov	r9, r3
90009aba:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009abe:	2701      	movs	r7, #1
  p = 0;
90009ac0:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009ac2:	4291      	cmp	r1, r2
90009ac4:	d124      	bne.n	90009b10 <JPEG_Bits_To_SizeCodes+0x9c>
90009ac6:	eb06 0008 	add.w	r0, r6, r8
90009aca:	eb05 0c06 	add.w	ip, r5, r6
90009ace:	464b      	mov	r3, r9
90009ad0:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009ad4:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90009ad8:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90009ada:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009ade:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009ae0:	4596      	cmp	lr, r2
90009ae2:	d0f7      	beq.n	90009ad4 <JPEG_Bits_To_SizeCodes+0x60>
90009ae4:	3601      	adds	r6, #1
90009ae6:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90009aea:	440e      	add	r6, r1
    if(si > 31UL)
90009aec:	2a1f      	cmp	r2, #31
90009aee:	d80c      	bhi.n	90009b0a <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009af0:	fa07 f102 	lsl.w	r1, r7, r2
90009af4:	4299      	cmp	r1, r3
90009af6:	d908      	bls.n	90009b0a <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90009af8:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009afa:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90009afe:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009b00:	2900      	cmp	r1, #0
90009b02:	d1de      	bne.n	90009ac2 <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90009b04:	2000      	movs	r0, #0
}
90009b06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
90009b0a:	2001      	movs	r0, #1
}
90009b0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90009b10:	464b      	mov	r3, r9
90009b12:	e7eb      	b.n	90009aec <JPEG_Bits_To_SizeCodes+0x78>

90009b14 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009b14:	b5f0      	push	{r4, r5, r6, r7, lr}
90009b16:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90009b1a:	460d      	mov	r5, r1
90009b1c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009b1e:	ab01      	add	r3, sp, #4
90009b20:	aa43      	add	r2, sp, #268	@ 0x10c
90009b22:	a902      	add	r1, sp, #8
90009b24:	f7ff ffa6 	bl	90009a74 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009b28:	b9d0      	cbnz	r0, 90009b60 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009b2a:	9f01      	ldr	r7, [sp, #4]
90009b2c:	b1c7      	cbz	r7, 90009b60 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009b2e:	370f      	adds	r7, #15
90009b30:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009b34:	a902      	add	r1, sp, #8
90009b36:	f104 0c0f 	add.w	ip, r4, #15
90009b3a:	4427      	add	r7, r4
90009b3c:	e009      	b.n	90009b52 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009b3e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009b42:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009b44:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009b48:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009b4c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009b4e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009b50:	d006      	beq.n	90009b60 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009b52:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009b56:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009b58:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009b5c:	d9ef      	bls.n	90009b3e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009b5e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009b60:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009b66:	bf00      	nop

90009b68 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009b6c:	6804      	ldr	r4, [r0, #0]
{
90009b6e:	b093      	sub	sp, #76	@ 0x4c
90009b70:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009b72:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90009b76:	429a      	cmp	r2, r3
90009b78:	f000 809d 	beq.w	90009cb6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009b7c:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90009b80:	429a      	cmp	r2, r3
90009b82:	d003      	beq.n	90009b8c <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009b84:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009b86:	b013      	add	sp, #76	@ 0x4c
90009b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009b8c:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009b90:	a903      	add	r1, sp, #12
90009b92:	f7ff ffbf 	bl	90009b14 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009b96:	2800      	cmp	r0, #0
90009b98:	d1f5      	bne.n	90009b86 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009b9a:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009b9e:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ba2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009ba6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ba8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009bac:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bae:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009bb2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bb6:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90009bba:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bbe:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90009bc2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bc4:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009bc8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bcc:	f89d c014 	ldrb.w	ip, [sp, #20]
90009bd0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bd4:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bd8:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bdc:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009be0:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009be2:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009be6:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90009bea:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90009bee:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bf2:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bf6:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009bfa:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009bfe:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c02:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009c04:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c08:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009c0c:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c10:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009c12:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c16:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c18:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90009c1c:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c20:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c24:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009c28:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c2c:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c30:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c32:	9b01      	ldr	r3, [sp, #4]
90009c34:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c38:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009c3c:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c40:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009c44:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c48:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90009c4a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c4e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c52:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90009c56:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c5a:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c5e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c62:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009c66:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009c6a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009c6e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c72:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90009c76:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c78:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009c7c:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90009c7e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90009c82:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c86:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90009c8a:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c8c:	f89d 2020 	ldrb.w	r2, [sp, #32]
90009c90:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90009c92:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009c96:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009c9a:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009c9e:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ca0:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009ca4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009ca8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009cac:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009cb0:	b013      	add	sp, #76	@ 0x4c
90009cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009cb6:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90009cba:	e769      	b.n	90009b90 <JPEG_Set_HuffDC_Mem+0x28>

90009cbc <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009cbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009cc0:	6804      	ldr	r4, [r0, #0]
{
90009cc2:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90009cc6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009cc8:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009ccc:	429a      	cmp	r2, r3
90009cce:	d041      	beq.n	90009d54 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009cd0:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009cd4:	429a      	cmp	r2, r3
90009cd6:	d004      	beq.n	90009ce2 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009cd8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009cda:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009cde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009ce2:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009ce6:	4628      	mov	r0, r5
90009ce8:	466b      	mov	r3, sp
90009cea:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90009cee:	a901      	add	r1, sp, #4
90009cf0:	f7ff fec0 	bl	90009a74 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009cf4:	2800      	cmp	r0, #0
90009cf6:	d1f0      	bne.n	90009cda <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009cf8:	9b00      	ldr	r3, [sp, #0]
90009cfa:	b373      	cbz	r3, 90009d5a <JPEG_Set_HuffAC_Mem+0x9e>
90009cfc:	330f      	adds	r3, #15
90009cfe:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90009d02:	af01      	add	r7, sp, #4
90009d04:	f105 020f 	add.w	r2, r5, #15
90009d08:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d0c:	ae42      	add	r6, sp, #264	@ 0x108
90009d0e:	e011      	b.n	90009d34 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90009d10:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009d14:	2ba1      	cmp	r3, #161	@ 0xa1
90009d16:	d8df      	bhi.n	90009cd8 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d18:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d1c:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009d20:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90009d24:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d26:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d2a:	46b1      	mov	r9, r6
90009d2c:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d30:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009d32:	d014      	beq.n	90009d5e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009d34:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009d38:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90009d3a:	2900      	cmp	r1, #0
90009d3c:	d0ec      	beq.n	90009d18 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
90009d3e:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009d40:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009d44:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90009d46:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009d4a:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009d4e:	d1df      	bne.n	90009d10 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90009d50:	23a1      	movs	r3, #161	@ 0xa1
90009d52:	e7e1      	b.n	90009d18 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009d54:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90009d58:	e7c5      	b.n	90009ce6 <JPEG_Set_HuffAC_Mem+0x2a>
90009d5a:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90009d5e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
90009d62:	4a1a      	ldr	r2, [pc, #104]	@ (90009dcc <JPEG_Set_HuffAC_Mem+0x110>)
90009d64:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009d68:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90009d6a:	6023      	str	r3, [r4, #0]
90009d6c:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90009d70:	6063      	str	r3, [r4, #4]
90009d72:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90009d76:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009d78:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009d7c:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009d7e:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90009d82:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90009d86:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90009d88:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009d8c:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009d8e:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009d92:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009d94:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009d98:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009d9c:	0212      	lsls	r2, r2, #8
90009d9e:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009da2:	021b      	lsls	r3, r3, #8
90009da4:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009da8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90009dac:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009dae:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009db2:	433a      	orrs	r2, r7
    while (i > 1UL)
90009db4:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009db6:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90009dba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009dbe:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90009dc2:	d1e7      	bne.n	90009d94 <JPEG_Set_HuffAC_Mem+0xd8>
}
90009dc4:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009dc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009dcc:	0fd10fd0 	.word	0x0fd10fd0

90009dd0 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009dd0:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009dd2:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009dd4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90009dd8:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009dda:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009ddc:	f002 0203 	and.w	r2, r2, #3
90009de0:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009de2:	685a      	ldr	r2, [r3, #4]
90009de4:	bf0c      	ite	eq
90009de6:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90009dea:	f022 0208 	bicne.w	r2, r2, #8
90009dee:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009df0:	681a      	ldr	r2, [r3, #0]
90009df2:	f022 0201 	bic.w	r2, r2, #1
90009df6:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009df8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009dfa:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009dfe:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009e00:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e02:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009e06:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009e08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e0a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009e0e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009e10:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009e12:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009e16:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90009e18:	681a      	ldr	r2, [r3, #0]
90009e1a:	f042 0201 	orr.w	r2, r2, #1
90009e1e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009e20:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009e22:	f002 020c 	and.w	r2, r2, #12
90009e26:	2a08      	cmp	r2, #8
90009e28:	d00a      	beq.n	90009e40 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009e2a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009e2c:	f002 020c 	and.w	r2, r2, #12
90009e30:	2a0c      	cmp	r2, #12
90009e32:	d000      	beq.n	90009e36 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009e34:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009e36:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e38:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009e3c:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009e3e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009e40:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e42:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90009e46:	631a      	str	r2, [r3, #48]	@ 0x30
90009e48:	4770      	bx	lr
90009e4a:	bf00      	nop

90009e4c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e4c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009e4e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90009e50:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e52:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90009e54:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009e56:	42aa      	cmp	r2, r5
90009e58:	d32a      	bcc.n	90009eb0 <JPEG_DMA_StartProcess+0x64>
90009e5a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009e5c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009e5e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009e60:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009e62:	42b3      	cmp	r3, r6
90009e64:	d324      	bcc.n	90009eb0 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009e66:	4f19      	ldr	r7, [pc, #100]	@ (90009ecc <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009e68:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90009ed8 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009e6c:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009e6e:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009e72:	4917      	ldr	r1, [pc, #92]	@ (90009ed0 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009e74:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009e76:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90009e78:	4916      	ldr	r1, [pc, #88]	@ (90009ed4 <JPEG_DMA_StartProcess+0x88>)
90009e7a:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009e7c:	b1a5      	cbz	r5, 90009ea8 <JPEG_DMA_StartProcess+0x5c>
90009e7e:	b19e      	cbz	r6, 90009ea8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e80:	fbb2 f1f5 	udiv	r1, r2, r5
90009e84:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e88:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e8a:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e8c:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e8e:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e90:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90009e92:	fbb3 f2f6 	udiv	r2, r3, r6
90009e96:	fb06 3212 	mls	r2, r6, r2, r3
90009e9a:	1a9b      	subs	r3, r3, r2
90009e9c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e9e:	9500      	str	r5, [sp, #0]
90009ea0:	69e2      	ldr	r2, [r4, #28]
90009ea2:	f001 fc01 	bl	9000b6a8 <HAL_MDMA_Start_IT>
90009ea6:	b130      	cbz	r0, 90009eb6 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ea8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009eaa:	f043 0304 	orr.w	r3, r3, #4
90009eae:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90009eb0:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90009eb2:	b003      	add	sp, #12
90009eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009eb6:	6822      	ldr	r2, [r4, #0]
90009eb8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009eba:	69a1      	ldr	r1, [r4, #24]
90009ebc:	3240      	adds	r2, #64	@ 0x40
90009ebe:	9500      	str	r5, [sp, #0]
90009ec0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009ec2:	f001 fbf1 	bl	9000b6a8 <HAL_MDMA_Start_IT>
90009ec6:	2800      	cmp	r0, #0
90009ec8:	d0f3      	beq.n	90009eb2 <JPEG_DMA_StartProcess+0x66>
90009eca:	e7ed      	b.n	90009ea8 <JPEG_DMA_StartProcess+0x5c>
90009ecc:	9000a4b9 	.word	0x9000a4b9
90009ed0:	9000a72d 	.word	0x9000a72d
90009ed4:	9000a7ad 	.word	0x9000a7ad
90009ed8:	9000a4e5 	.word	0x9000a4e5

90009edc <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009edc:	6803      	ldr	r3, [r0, #0]
90009ede:	685a      	ldr	r2, [r3, #4]
90009ee0:	f002 0203 	and.w	r2, r2, #3
90009ee4:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90009ee6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90009eea:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009eec:	d018      	beq.n	90009f20 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009eee:	685a      	ldr	r2, [r3, #4]
90009ef0:	f012 0203 	ands.w	r2, r2, #3
90009ef4:	d10b      	bne.n	90009f0e <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009ef6:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009ef8:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009efc:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009efe:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009f00:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009f02:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009f06:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009f0a:	2100      	movs	r1, #0
90009f0c:	e02f      	b.n	90009f6e <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90009f0e:	685a      	ldr	r2, [r3, #4]
90009f10:	f002 0203 	and.w	r2, r2, #3
90009f14:	2a03      	cmp	r2, #3
90009f16:	f000 8097 	beq.w	9000a048 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
90009f1a:	2001      	movs	r0, #1
}
90009f1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009f20:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009f22:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009f24:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009f28:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009f2a:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009f2c:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009f30:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009f32:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009f34:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009f36:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009f3a:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009f3c:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009f3e:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009f42:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009f46:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009f4a:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009f4e:	d105      	bne.n	90009f5c <HAL_JPEG_GetInfo.part.0+0x80>
90009f50:	2a01      	cmp	r2, #1
90009f52:	d103      	bne.n	90009f5c <HAL_JPEG_GetInfo.part.0+0x80>
90009f54:	070d      	lsls	r5, r1, #28
90009f56:	d1d8      	bne.n	90009f0a <HAL_JPEG_GetInfo.part.0+0x2e>
90009f58:	2102      	movs	r1, #2
90009f5a:	e008      	b.n	90009f6e <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009f5c:	433e      	orrs	r6, r7
90009f5e:	0734      	lsls	r4, r6, #28
90009f60:	d0d3      	beq.n	90009f0a <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009f62:	430f      	orrs	r7, r1
90009f64:	0739      	lsls	r1, r7, #28
90009f66:	d1d0      	bne.n	90009f0a <HAL_JPEG_GetInfo.part.0+0x2e>
90009f68:	2a03      	cmp	r2, #3
90009f6a:	d1ce      	bne.n	90009f0a <HAL_JPEG_GetInfo.part.0+0x2e>
90009f6c:	2101      	movs	r1, #1
90009f6e:	4a42      	ldr	r2, [pc, #264]	@ (9000a078 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009f70:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009f74:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90009f78:	2600      	movs	r6, #0
90009f7a:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009f7e:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90009f82:	f241 3188 	movw	r1, #5000	@ 0x1388
90009f86:	e033      	b.n	90009ff0 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009f88:	f892 8001 	ldrb.w	r8, [r2, #1]
90009f8c:	fb0e f707 	mul.w	r7, lr, r7
90009f90:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009f92:	f815 8008 	ldrb.w	r8, [r5, r8]
90009f96:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009f9a:	2f64      	cmp	r7, #100	@ 0x64
90009f9c:	d958      	bls.n	9000a050 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90009f9e:	fbb1 f7f7 	udiv	r7, r1, r7
90009fa2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009fa4:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90009fa8:	2f01      	cmp	r7, #1
90009faa:	d03d      	beq.n	9000a028 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009fac:	f892 8002 	ldrb.w	r8, [r2, #2]
90009fb0:	fb0e f707 	mul.w	r7, lr, r7
90009fb4:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009fb6:	f815 8008 	ldrb.w	r8, [r5, r8]
90009fba:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009fbe:	2f64      	cmp	r7, #100	@ 0x64
90009fc0:	d955      	bls.n	9000a06e <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
90009fc2:	fbb1 f7f7 	udiv	r7, r1, r7
90009fc6:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009fc8:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90009fca:	2b01      	cmp	r3, #1
90009fcc:	d030      	beq.n	9000a030 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009fce:	78d7      	ldrb	r7, [r2, #3]
90009fd0:	fb0e f303 	mul.w	r3, lr, r3
90009fd4:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009fd6:	5def      	ldrb	r7, [r5, r7]
90009fd8:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009fdc:	2b64      	cmp	r3, #100	@ 0x64
90009fde:	d93c      	bls.n	9000a05a <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90009fe0:	fbb1 f3f3 	udiv	r3, r1, r3
90009fe4:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009fe6:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90009fe8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009fec:	4294      	cmp	r4, r2
90009fee:	d025      	beq.n	9000a03c <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90009ff0:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009ff4:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90009ff6:	2f01      	cmp	r7, #1
90009ff8:	d028      	beq.n	9000a04c <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009ffa:	f892 8000 	ldrb.w	r8, [r2]
90009ffe:	fb0e f707 	mul.w	r7, lr, r7
9000a002:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a004:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a008:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a00c:	2f64      	cmp	r7, #100	@ 0x64
9000a00e:	d929      	bls.n	9000a064 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
9000a010:	fbb1 f7f7 	udiv	r7, r1, r7
9000a014:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a016:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a01a:	2f01      	cmp	r7, #1
9000a01c:	d1b4      	bne.n	90009f88 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a01e:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a022:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a024:	2f01      	cmp	r7, #1
9000a026:	d1c1      	bne.n	90009fac <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a028:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a02a:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a02c:	2b01      	cmp	r3, #1
9000a02e:	d1ce      	bne.n	90009fce <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a030:	3204      	adds	r2, #4
        quality += 100UL;
9000a032:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
9000a034:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a038:	4294      	cmp	r4, r2
9000a03a:	d1d9      	bne.n	90009ff0 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
9000a03c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a03e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a040:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a044:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a048:	2130      	movs	r1, #48	@ 0x30
9000a04a:	e76a      	b.n	90009f22 <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
9000a04c:	3664      	adds	r6, #100	@ 0x64
9000a04e:	e7e2      	b.n	9000a016 <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
9000a050:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a054:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a058:	e7a4      	b.n	90009fa4 <HAL_JPEG_GetInfo.part.0+0xc8>
9000a05a:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
9000a05e:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a062:	e7c0      	b.n	90009fe6 <HAL_JPEG_GetInfo.part.0+0x10a>
9000a064:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a068:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a06c:	e7d3      	b.n	9000a016 <HAL_JPEG_GetInfo.part.0+0x13a>
9000a06e:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a072:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a076:	e7a7      	b.n	90009fc8 <HAL_JPEG_GetInfo.part.0+0xec>
9000a078:	9002df40 	.word	0x9002df40

9000a07c <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a07c:	2800      	cmp	r0, #0
9000a07e:	f000 8107 	beq.w	9000a290 <HAL_JPEG_Init+0x214>
{
9000a082:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a084:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a088:	4605      	mov	r5, r0
9000a08a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a08e:	2b00      	cmp	r3, #0
9000a090:	f000 80f9 	beq.w	9000a286 <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
9000a094:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a096:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
9000a098:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a09a:	497e      	ldr	r1, [pc, #504]	@ (9000a294 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a09c:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a0a0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a0a2:	f042 0201 	orr.w	r2, r2, #1
9000a0a6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a0a8:	6822      	ldr	r2, [r4, #0]
9000a0aa:	f022 0201 	bic.w	r2, r2, #1
9000a0ae:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a0b0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a0b2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a0b6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a0b8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a0ba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a0be:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a0c0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a0c2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a0c6:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a0c8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a0ca:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a0ce:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a0d0:	4a71      	ldr	r2, [pc, #452]	@ (9000a298 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a0d2:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a0d4:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000a0d6:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a0d8:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a0dc:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
9000a0e0:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000a0e4:	4b6d      	ldr	r3, [pc, #436]	@ (9000a29c <HAL_JPEG_Init+0x220>)
9000a0e6:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
9000a0ea:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a0ee:	496c      	ldr	r1, [pc, #432]	@ (9000a2a0 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a0f0:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a0f4:	4b6b      	ldr	r3, [pc, #428]	@ (9000a2a4 <HAL_JPEG_Init+0x228>)
9000a0f6:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
9000a0fa:	4a6b      	ldr	r2, [pc, #428]	@ (9000a2a8 <HAL_JPEG_Init+0x22c>)
9000a0fc:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a100:	4b6a      	ldr	r3, [pc, #424]	@ (9000a2ac <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a102:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a106:	496a      	ldr	r1, [pc, #424]	@ (9000a2b0 <HAL_JPEG_Init+0x234>)
9000a108:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
9000a10c:	4a69      	ldr	r2, [pc, #420]	@ (9000a2b4 <HAL_JPEG_Init+0x238>)
9000a10e:	4b6a      	ldr	r3, [pc, #424]	@ (9000a2b8 <HAL_JPEG_Init+0x23c>)
9000a110:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
9000a114:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
9000a118:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a11c:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
9000a120:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
9000a124:	4a65      	ldr	r2, [pc, #404]	@ (9000a2bc <HAL_JPEG_Init+0x240>)
9000a126:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a128:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a12c:	4313      	orrs	r3, r2
  *address = value;
9000a12e:	4a64      	ldr	r2, [pc, #400]	@ (9000a2c0 <HAL_JPEG_Init+0x244>)
9000a130:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000a134:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a138:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
9000a13c:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a13e:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a142:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a144:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a148:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
9000a14c:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a14e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a152:	ea43 030c 	orr.w	r3, r3, ip
9000a156:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a15a:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a15e:	d1eb      	bne.n	9000a138 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000a160:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a164:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
9000a168:	4954      	ldr	r1, [pc, #336]	@ (9000a2bc <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a16a:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
9000a16c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a16e:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000a172:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
9000a176:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a17a:	400b      	ands	r3, r1
  *address = value;
9000a17c:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a180:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
9000a184:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
9000a188:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a18c:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
9000a190:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a194:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a196:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a19a:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
9000a19e:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a1a2:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a1a4:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a1a6:	4b47      	ldr	r3, [pc, #284]	@ (9000a2c4 <HAL_JPEG_Init+0x248>)
  *address = value;
9000a1a8:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a1ac:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a1b0:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000a1b4:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
9000a1b8:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
9000a1bc:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a1c0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000a1c2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000a1c6:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
9000a1ca:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
9000a1ce:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a1d0:	493d      	ldr	r1, [pc, #244]	@ (9000a2c8 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a1d2:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a1d4:	4b3d      	ldr	r3, [pc, #244]	@ (9000a2cc <HAL_JPEG_Init+0x250>)
  *address = value;
9000a1d6:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a1da:	4a3d      	ldr	r2, [pc, #244]	@ (9000a2d0 <HAL_JPEG_Init+0x254>)
9000a1dc:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000a1e0:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a1e4:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
9000a1e8:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
9000a1ec:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a1f0:	4a38      	ldr	r2, [pc, #224]	@ (9000a2d4 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
9000a1f2:	b29b      	uxth	r3, r3
9000a1f4:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a1f8:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a1fc:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a200:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
9000a204:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a206:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a20a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000a20c:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a210:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
9000a214:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a216:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a21a:	ea43 030c 	orr.w	r3, r3, ip
9000a21e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a222:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a226:	d1eb      	bne.n	9000a200 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000a228:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
9000a22c:	4924      	ldr	r1, [pc, #144]	@ (9000a2c0 <HAL_JPEG_Init+0x244>)
9000a22e:	4628      	mov	r0, r5
9000a230:	f7ff fd44 	bl	90009cbc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a234:	b118      	cbz	r0, 9000a23e <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a236:	2301      	movs	r3, #1
    return HAL_ERROR;
9000a238:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a23a:	652b      	str	r3, [r5, #80]	@ 0x50
}
9000a23c:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000a23e:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000a242:	4924      	ldr	r1, [pc, #144]	@ (9000a2d4 <HAL_JPEG_Init+0x258>)
9000a244:	4628      	mov	r0, r5
9000a246:	f7ff fd39 	bl	90009cbc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a24a:	2800      	cmp	r0, #0
9000a24c:	d1f3      	bne.n	9000a236 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000a24e:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
9000a252:	4921      	ldr	r1, [pc, #132]	@ (9000a2d8 <HAL_JPEG_Init+0x25c>)
9000a254:	4628      	mov	r0, r5
9000a256:	f7ff fc87 	bl	90009b68 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000a25a:	2800      	cmp	r0, #0
9000a25c:	d1eb      	bne.n	9000a236 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000a25e:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
9000a262:	491e      	ldr	r1, [pc, #120]	@ (9000a2dc <HAL_JPEG_Init+0x260>)
9000a264:	4628      	mov	r0, r5
9000a266:	f7ff fc7f 	bl	90009b68 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000a26a:	2800      	cmp	r0, #0
9000a26c:	d1e3      	bne.n	9000a236 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a26e:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a270:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a272:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a276:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
9000a278:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
9000a27a:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a27c:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000a280:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
9000a282:	6568      	str	r0, [r5, #84]	@ 0x54
}
9000a284:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000a286:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000a28a:	f7f9 fe63 	bl	90003f54 <HAL_JPEG_MspInit>
9000a28e:	e701      	b.n	9000a094 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000a290:	2001      	movs	r0, #1
}
9000a292:	4770      	bx	lr
9000a294:	9002df00 	.word	0x9002df00
9000a298:	9002dec0 	.word	0x9002dec0
9000a29c:	01050100 	.word	0x01050100
9000a2a0:	0b0a0908 	.word	0x0b0a0908
9000a2a4:	07060504 	.word	0x07060504
9000a2a8:	03020100 	.word	0x03020100
9000a2ac:	7d010000 	.word	0x7d010000
9000a2b0:	04040505 	.word	0x04040505
9000a2b4:	03040203 	.word	0x03040203
9000a2b8:	03010200 	.word	0x03010200
9000a2bc:	ffff0000 	.word	0xffff0000
9000a2c0:	9002e034 	.word	0x9002e034
9000a2c4:	09080706 	.word	0x09080706
9000a2c8:	01000404 	.word	0x01000404
9000a2cc:	04040201 	.word	0x04040201
9000a2d0:	05070403 	.word	0x05070403
9000a2d4:	9002df80 	.word	0x9002df80
9000a2d8:	9002e104 	.word	0x9002e104
9000a2dc:	9002e0e8 	.word	0x9002e0e8

9000a2e0 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a2e0:	2b00      	cmp	r3, #0
9000a2e2:	bf18      	it	ne
9000a2e4:	2900      	cmpne	r1, #0
9000a2e6:	d036      	beq.n	9000a356 <HAL_JPEG_Decode_DMA+0x76>
{
9000a2e8:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a2ea:	fab0 f580 	clz	r5, r0
9000a2ee:	4604      	mov	r4, r0
9000a2f0:	096d      	lsrs	r5, r5, #5
9000a2f2:	b370      	cbz	r0, 9000a352 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
9000a2f4:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
9000a2f8:	f1bc 0f01 	cmp.w	ip, #1
9000a2fc:	d022      	beq.n	9000a344 <HAL_JPEG_Decode_DMA+0x64>
9000a2fe:	f04f 0c01 	mov.w	ip, #1
9000a302:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a306:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
9000a30a:	f1bc 0f01 	cmp.w	ip, #1
9000a30e:	d117      	bne.n	9000a340 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
9000a310:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000a312:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000a316:	9b04      	ldr	r3, [sp, #16]
9000a318:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000a31a:	2304      	movs	r3, #4
9000a31c:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000a320:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a322:	f023 030f 	bic.w	r3, r3, #15
9000a326:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000a328:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a32a:	f043 030e 	orr.w	r3, r3, #14
9000a32e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
9000a330:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000a332:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
9000a334:	f7ff fd4c 	bl	90009dd0 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000a338:	f7ff fd88 	bl	90009e4c <JPEG_DMA_StartProcess>
9000a33c:	b920      	cbnz	r0, 9000a348 <HAL_JPEG_Decode_DMA+0x68>
}
9000a33e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
9000a340:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000a344:	2002      	movs	r0, #2
}
9000a346:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a348:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
9000a34a:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a34e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a352:	2001      	movs	r0, #1
}
9000a354:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a356:	2001      	movs	r0, #1
}
9000a358:	4770      	bx	lr
9000a35a:	bf00      	nop

9000a35c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a35c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a35e:	f003 030c 	and.w	r3, r3, #12
9000a362:	2b0c      	cmp	r3, #12
9000a364:	d01a      	beq.n	9000a39c <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a366:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a368:	f003 030c 	and.w	r3, r3, #12
9000a36c:	2b08      	cmp	r3, #8
9000a36e:	d001      	beq.n	9000a374 <HAL_JPEG_Pause+0x18>
}
9000a370:	2000      	movs	r0, #0
9000a372:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a374:	07ca      	lsls	r2, r1, #31
9000a376:	d41f      	bmi.n	9000a3b8 <HAL_JPEG_Pause+0x5c>
9000a378:	f04f 3cff 	mov.w	ip, #4294967295
9000a37c:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a380:	078b      	lsls	r3, r1, #30
9000a382:	d504      	bpl.n	9000a38e <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a384:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a386:	4694      	mov	ip, r2
9000a388:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a38c:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a38e:	6802      	ldr	r2, [r0, #0]
}
9000a390:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a392:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a394:	ea03 030c 	and.w	r3, r3, ip
9000a398:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a39a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a39c:	07cb      	lsls	r3, r1, #31
9000a39e:	d503      	bpl.n	9000a3a8 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a3a0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a3a2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a3a6:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a3a8:	0789      	lsls	r1, r1, #30
9000a3aa:	d5e1      	bpl.n	9000a370 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a3ac:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a3ae:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a3b2:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000a3b4:	2000      	movs	r0, #0
9000a3b6:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a3b8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a3ba:	f06f 0c06 	mvn.w	ip, #6
9000a3be:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000a3c2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a3c6:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a3c8:	e7da      	b.n	9000a380 <HAL_JPEG_Pause+0x24>
9000a3ca:	bf00      	nop

9000a3cc <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a3cc:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a3ce:	6282      	str	r2, [r0, #40]	@ 0x28
}
9000a3d0:	4770      	bx	lr
9000a3d2:	bf00      	nop

9000a3d4 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a3d4:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a3d6:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
9000a3d8:	4770      	bx	lr
9000a3da:	bf00      	nop

9000a3dc <HAL_JPEG_Abort>:
{
9000a3dc:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
9000a3de:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
9000a3e0:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a3e2:	6d41      	ldr	r1, [r0, #84]	@ 0x54
9000a3e4:	4a32      	ldr	r2, [pc, #200]	@ (9000a4b0 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a3e6:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a3ea:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a3ec:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a3ee:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a3f0:	d043      	beq.n	9000a47a <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a3f2:	6822      	ldr	r2, [r4, #0]
9000a3f4:	6813      	ldr	r3, [r2, #0]
9000a3f6:	f023 0301 	bic.w	r3, r3, #1
9000a3fa:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
9000a3fc:	f7fe f8f8 	bl	900085f0 <HAL_GetTick>
9000a400:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a402:	e005      	b.n	9000a410 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
9000a404:	f7fe f8f4 	bl	900085f0 <HAL_GetTick>
9000a408:	1b40      	subs	r0, r0, r5
9000a40a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a40e:	d82b      	bhi.n	9000a468 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a410:	6823      	ldr	r3, [r4, #0]
9000a412:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a414:	0612      	lsls	r2, r2, #24
9000a416:	d4f5      	bmi.n	9000a404 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a418:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
9000a41a:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a41c:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a420:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a422:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a424:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a428:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a42a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a42c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a430:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a432:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a434:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a438:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
9000a43a:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a43c:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
9000a43e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a440:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000a444:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000a446:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000a448:	b138      	cbz	r0, 9000a45a <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a44a:	2306      	movs	r3, #6
    return HAL_ERROR;
9000a44c:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a44e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a452:	2300      	movs	r3, #0
9000a454:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a458:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a45a:	2301      	movs	r3, #1
9000a45c:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
9000a460:	2300      	movs	r3, #0
9000a462:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a466:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a468:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a46a:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a46c:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a46e:	f042 0208 	orr.w	r2, r2, #8
9000a472:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a474:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
9000a478:	e7ce      	b.n	9000a418 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
9000a47a:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9000a47c:	f001 f986 	bl	9000b78c <HAL_MDMA_Abort>
9000a480:	b118      	cbz	r0, 9000a48a <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a482:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a484:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a486:	2b40      	cmp	r3, #64	@ 0x40
9000a488:	d00d      	beq.n	9000a4a6 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
9000a48a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a48c:	f001 f97e 	bl	9000b78c <HAL_MDMA_Abort>
9000a490:	2800      	cmp	r0, #0
9000a492:	d0ae      	beq.n	9000a3f2 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a494:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000a496:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a498:	2b40      	cmp	r3, #64	@ 0x40
9000a49a:	d1aa      	bne.n	9000a3f2 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a49c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a49e:	f043 0304 	orr.w	r3, r3, #4
9000a4a2:	6523      	str	r3, [r4, #80]	@ 0x50
9000a4a4:	e7a5      	b.n	9000a3f2 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a4a6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a4a8:	f043 0304 	orr.w	r3, r3, #4
9000a4ac:	6523      	str	r3, [r4, #80]	@ 0x50
9000a4ae:	e7ec      	b.n	9000a48a <HAL_JPEG_Abort+0xae>
9000a4b0:	ffff7ff0 	.word	0xffff7ff0

9000a4b4 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000a4b4:	4770      	bx	lr
9000a4b6:	bf00      	nop

9000a4b8 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a4b8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4ba:	2101      	movs	r1, #1
{
9000a4bc:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a4be:	6803      	ldr	r3, [r0, #0]
9000a4c0:	681a      	ldr	r2, [r3, #0]
9000a4c2:	f022 0201 	bic.w	r2, r2, #1
9000a4c6:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a4c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a4ca:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a4ce:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4d0:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a4d4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a4d6:	f043 0304 	orr.w	r3, r3, #4
9000a4da:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a4dc:	f7f7 fe0a 	bl	900020f4 <HAL_JPEG_ErrorCallback>
}
9000a4e0:	bd08      	pop	{r3, pc}
9000a4e2:	bf00      	nop

9000a4e4 <JPEG_MDMAInCpltCallback>:
{
9000a4e4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a4e6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a4e8:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a4ec:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a4ee:	6822      	ldr	r2, [r4, #0]
9000a4f0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a4f2:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000a4f6:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a4f8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a4fa:	400b      	ands	r3, r1
9000a4fc:	2b0c      	cmp	r3, #12
9000a4fe:	d001      	beq.n	9000a504 <JPEG_MDMAInCpltCallback+0x20>
}
9000a500:	b003      	add	sp, #12
9000a502:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a504:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a506:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a508:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a50a:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a50c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a50e:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a512:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a514:	1a9b      	subs	r3, r3, r2
9000a516:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a518:	6a21      	ldr	r1, [r4, #32]
9000a51a:	f7f7 fd1f 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a51e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a520:	42ab      	cmp	r3, r5
9000a522:	d311      	bcc.n	9000a548 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a524:	b305      	cbz	r5, 9000a568 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a526:	fbb3 f2f5 	udiv	r2, r3, r5
9000a52a:	fb05 3212 	mls	r2, r5, r2, r3
9000a52e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a530:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a532:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a534:	04d1      	lsls	r1, r2, #19
9000a536:	d400      	bmi.n	9000a53a <JPEG_MDMAInCpltCallback+0x56>
9000a538:	b963      	cbnz	r3, 9000a554 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a53a:	6822      	ldr	r2, [r4, #0]
9000a53c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a53e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000a542:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a544:	b003      	add	sp, #12
9000a546:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a548:	b1cb      	cbz	r3, 9000a57e <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a54a:	0798      	lsls	r0, r3, #30
9000a54c:	d119      	bne.n	9000a582 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a54e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a550:	04d2      	lsls	r2, r2, #19
9000a552:	d4f2      	bmi.n	9000a53a <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a554:	6822      	ldr	r2, [r4, #0]
9000a556:	2501      	movs	r5, #1
9000a558:	69a1      	ldr	r1, [r4, #24]
9000a55a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a55c:	3240      	adds	r2, #64	@ 0x40
9000a55e:	9500      	str	r5, [sp, #0]
9000a560:	f001 f8a2 	bl	9000b6a8 <HAL_MDMA_Start_IT>
9000a564:	2800      	cmp	r0, #0
9000a566:	d0e8      	beq.n	9000a53a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a568:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a56a:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a56c:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a56e:	f043 0304 	orr.w	r3, r3, #4
9000a572:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a574:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a578:	f7f7 fdbc 	bl	900020f4 <HAL_JPEG_ErrorCallback>
        return;
9000a57c:	e7c0      	b.n	9000a500 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a57e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a580:	e7db      	b.n	9000a53a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a582:	f023 0303 	bic.w	r3, r3, #3
9000a586:	3304      	adds	r3, #4
9000a588:	e7d2      	b.n	9000a530 <JPEG_MDMAInCpltCallback+0x4c>
9000a58a:	bf00      	nop

9000a58c <JPEG_DMA_PollResidualData>:
{
9000a58c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a58e:	6802      	ldr	r2, [r0, #0]
9000a590:	2610      	movs	r6, #16
{
9000a592:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a594:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a596:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a59a:	d11d      	bne.n	9000a5d8 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a59c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a59e:	06df      	lsls	r7, r3, #27
9000a5a0:	d51a      	bpl.n	9000a5d8 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a5a2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a5a4:	69e7      	ldr	r7, [r4, #28]
9000a5a6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a5a8:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a5aa:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a5ac:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a5ae:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a5b0:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000a5b2:	69e2      	ldr	r2, [r4, #28]
9000a5b4:	443a      	add	r2, r7
9000a5b6:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a5b8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a5ba:	69e2      	ldr	r2, [r4, #28]
9000a5bc:	4402      	add	r2, r0
9000a5be:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a5c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5c2:	69e2      	ldr	r2, [r4, #28]
9000a5c4:	440a      	add	r2, r1
9000a5c6:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a5c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a5ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a5cc:	3304      	adds	r3, #4
9000a5ce:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a5d0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a5d2:	4293      	cmp	r3, r2
9000a5d4:	d021      	beq.n	9000a61a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a5d6:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a5d8:	3e01      	subs	r6, #1
9000a5da:	d1db      	bne.n	9000a594 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a5dc:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a5de:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a5e0:	06d8      	lsls	r0, r3, #27
9000a5e2:	d501      	bpl.n	9000a5e8 <JPEG_DMA_PollResidualData+0x5c>
9000a5e4:	048b      	lsls	r3, r1, #18
9000a5e6:	d417      	bmi.n	9000a618 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a5e8:	6813      	ldr	r3, [r2, #0]
9000a5ea:	f023 0301 	bic.w	r3, r3, #1
9000a5ee:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a5f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a5f2:	b9eb      	cbnz	r3, 9000a630 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a5f4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a5f6:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a5f8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a5fa:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a5fc:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a600:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a604:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a608:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a60a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a60c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a60e:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a612:	d00a      	beq.n	9000a62a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a614:	f7ff ff4e 	bl	9000a4b4 <HAL_JPEG_EncodeCpltCallback>
}
9000a618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a61a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a61c:	4620      	mov	r0, r4
9000a61e:	69e1      	ldr	r1, [r4, #28]
9000a620:	f7f7 fcbc 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a624:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a626:	6265      	str	r5, [r4, #36]	@ 0x24
9000a628:	e7d6      	b.n	9000a5d8 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a62a:	f7f7 fd65 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000a62e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a630:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a632:	4620      	mov	r0, r4
9000a634:	69e1      	ldr	r1, [r4, #28]
9000a636:	f7f7 fcb1 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a63a:	2300      	movs	r3, #0
9000a63c:	6263      	str	r3, [r4, #36]	@ 0x24
9000a63e:	e7d9      	b.n	9000a5f4 <JPEG_DMA_PollResidualData+0x68>

9000a640 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a640:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a642:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000a646:	d06f      	beq.n	9000a728 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a648:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a64a:	f003 030c 	and.w	r3, r3, #12
9000a64e:	2b0c      	cmp	r3, #12
{
9000a650:	b530      	push	{r4, r5, lr}
9000a652:	4604      	mov	r4, r0
9000a654:	b083      	sub	sp, #12
9000a656:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a658:	d007      	beq.n	9000a66a <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a65a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a65c:	f003 030c 	and.w	r3, r3, #12
9000a660:	2b08      	cmp	r3, #8
9000a662:	d035      	beq.n	9000a6d0 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000a664:	2000      	movs	r0, #0
}
9000a666:	b003      	add	sp, #12
9000a668:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a66a:	07c8      	lsls	r0, r1, #31
9000a66c:	d415      	bmi.n	9000a69a <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a66e:	07a9      	lsls	r1, r5, #30
9000a670:	d5f8      	bpl.n	9000a664 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a672:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a674:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a678:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a67a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a67c:	041a      	lsls	r2, r3, #16
9000a67e:	d44f      	bmi.n	9000a720 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a680:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a682:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000a684:	2a00      	cmp	r2, #0
9000a686:	d13a      	bne.n	9000a6fe <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a688:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a68a:	2206      	movs	r2, #6
    return HAL_ERROR;
9000a68c:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a68e:	f043 0304 	orr.w	r3, r3, #4
9000a692:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a694:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000a698:	e7e5      	b.n	9000a666 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a69a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a69c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a69e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a6a2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a6a4:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a6a6:	2a00      	cmp	r2, #0
9000a6a8:	d0ee      	beq.n	9000a688 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a6aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a6ac:	fbb3 f1f2 	udiv	r1, r3, r2
9000a6b0:	fb02 3211 	mls	r2, r2, r1, r3
9000a6b4:	1a9b      	subs	r3, r3, r2
9000a6b6:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a6b8:	2b00      	cmp	r3, #0
9000a6ba:	d0d8      	beq.n	9000a66e <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a6bc:	6822      	ldr	r2, [r4, #0]
9000a6be:	2101      	movs	r1, #1
9000a6c0:	3240      	adds	r2, #64	@ 0x40
9000a6c2:	9100      	str	r1, [sp, #0]
9000a6c4:	69a1      	ldr	r1, [r4, #24]
9000a6c6:	f000 ffef 	bl	9000b6a8 <HAL_MDMA_Start_IT>
9000a6ca:	2800      	cmp	r0, #0
9000a6cc:	d0cf      	beq.n	9000a66e <HAL_JPEG_Resume+0x2e>
9000a6ce:	e7db      	b.n	9000a688 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a6d0:	f011 0101 	ands.w	r1, r1, #1
9000a6d4:	d011      	beq.n	9000a6fa <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a6d6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a6d8:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a6da:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a6dc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a6e0:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a6e2:	07ab      	lsls	r3, r5, #30
9000a6e4:	d504      	bpl.n	9000a6f0 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a6e6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a6e8:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a6ea:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a6ee:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a6f0:	6822      	ldr	r2, [r4, #0]
9000a6f2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a6f4:	430b      	orrs	r3, r1
9000a6f6:	6313      	str	r3, [r2, #48]	@ 0x30
9000a6f8:	e7b4      	b.n	9000a664 <HAL_JPEG_Resume+0x24>
9000a6fa:	2228      	movs	r2, #40	@ 0x28
9000a6fc:	e7f1      	b.n	9000a6e2 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a6fe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a700:	fbb3 f1f2 	udiv	r1, r3, r2
9000a704:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a708:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a70a:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a70c:	2201      	movs	r2, #1
9000a70e:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a710:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a712:	9200      	str	r2, [sp, #0]
9000a714:	69e2      	ldr	r2, [r4, #28]
9000a716:	f000 ffc7 	bl	9000b6a8 <HAL_MDMA_Start_IT>
9000a71a:	2800      	cmp	r0, #0
9000a71c:	d0a2      	beq.n	9000a664 <HAL_JPEG_Resume+0x24>
9000a71e:	e7b3      	b.n	9000a688 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a720:	4620      	mov	r0, r4
9000a722:	f7ff ff33 	bl	9000a58c <JPEG_DMA_PollResidualData>
9000a726:	e79d      	b.n	9000a664 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a728:	2001      	movs	r0, #1
}
9000a72a:	4770      	bx	lr

9000a72c <JPEG_MDMAOutCpltCallback>:
{
9000a72c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a72e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a730:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a734:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a736:	6823      	ldr	r3, [r4, #0]
9000a738:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a73a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a73e:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a740:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a742:	400a      	ands	r2, r1
9000a744:	2a0c      	cmp	r2, #12
9000a746:	d001      	beq.n	9000a74c <JPEG_MDMAOutCpltCallback+0x20>
}
9000a748:	b003      	add	sp, #12
9000a74a:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a74c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a74e:	0692      	lsls	r2, r2, #26
9000a750:	d505      	bpl.n	9000a75e <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a752:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a754:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a758:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a75a:	b003      	add	sp, #12
9000a75c:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a75e:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a760:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a762:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a764:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a766:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a768:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a76c:	1a9b      	subs	r3, r3, r2
9000a76e:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a770:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a772:	f7f7 fc13 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a776:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a778:	049b      	lsls	r3, r3, #18
9000a77a:	d501      	bpl.n	9000a780 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a77c:	6823      	ldr	r3, [r4, #0]
9000a77e:	e7e8      	b.n	9000a752 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a780:	6821      	ldr	r1, [r4, #0]
9000a782:	2501      	movs	r5, #1
9000a784:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a786:	69e2      	ldr	r2, [r4, #28]
9000a788:	3144      	adds	r1, #68	@ 0x44
9000a78a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a78c:	9500      	str	r5, [sp, #0]
9000a78e:	f000 ff8b 	bl	9000b6a8 <HAL_MDMA_Start_IT>
9000a792:	2800      	cmp	r0, #0
9000a794:	d0f2      	beq.n	9000a77c <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a796:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a798:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a79a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a79c:	f043 0304 	orr.w	r3, r3, #4
9000a7a0:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a7a2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a7a6:	f7f7 fca5 	bl	900020f4 <HAL_JPEG_ErrorCallback>
          return;
9000a7aa:	e7cd      	b.n	9000a748 <JPEG_MDMAOutCpltCallback+0x1c>

9000a7ac <JPEG_MDMAOutAbortCallback>:
{
9000a7ac:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a7ae:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a7b0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a7b2:	041a      	lsls	r2, r3, #16
9000a7b4:	d400      	bmi.n	9000a7b8 <JPEG_MDMAOutAbortCallback+0xc>
}
9000a7b6:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a7b8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a7ba:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a7bc:	681b      	ldr	r3, [r3, #0]
9000a7be:	695b      	ldr	r3, [r3, #20]
9000a7c0:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a7c4:	1ad3      	subs	r3, r2, r3
9000a7c6:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a7c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7ca:	429a      	cmp	r2, r3
9000a7cc:	d025      	beq.n	9000a81a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a7ce:	6822      	ldr	r2, [r4, #0]
9000a7d0:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a7d2:	f015 0510 	ands.w	r5, r5, #16
9000a7d6:	d118      	bne.n	9000a80a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a7d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7da:	bb4b      	cbnz	r3, 9000a830 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a7dc:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a7de:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a7e0:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a7e2:	f023 0301 	bic.w	r3, r3, #1
9000a7e6:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a7e8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a7ea:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a7ec:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a7f0:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a7f4:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a7f8:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a7fa:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a7fc:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a7fe:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a802:	d012      	beq.n	9000a82a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a804:	f7ff fe56 	bl	9000a4b4 <HAL_JPEG_EncodeCpltCallback>
}
9000a808:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a80a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a80c:	049b      	lsls	r3, r3, #18
9000a80e:	d4d2      	bmi.n	9000a7b6 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a810:	4620      	mov	r0, r4
}
9000a812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a816:	f7ff beb9 	b.w	9000a58c <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a81a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a81c:	4620      	mov	r0, r4
9000a81e:	69e1      	ldr	r1, [r4, #28]
9000a820:	f7f7 fbbc 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a824:	2300      	movs	r3, #0
9000a826:	6263      	str	r3, [r4, #36]	@ 0x24
9000a828:	e7d1      	b.n	9000a7ce <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a82a:	f7f7 fc65 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000a82e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a830:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a832:	4620      	mov	r0, r4
9000a834:	69e1      	ldr	r1, [r4, #28]
9000a836:	f7f7 fbb1 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a83a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a83c:	6265      	str	r5, [r4, #36]	@ 0x24
9000a83e:	e7cd      	b.n	9000a7dc <JPEG_MDMAOutAbortCallback+0x30>

9000a840 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a840:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a842:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a844:	f002 0203 	and.w	r2, r2, #3
9000a848:	2a02      	cmp	r2, #2
{
9000a84a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a84e:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a850:	d01e      	beq.n	9000a890 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a852:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a854:	04d7      	lsls	r7, r2, #19
9000a856:	d407      	bmi.n	9000a868 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a858:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a85a:	0796      	lsls	r6, r2, #30
9000a85c:	f100 811b 	bmi.w	9000aa96 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a860:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a862:	0750      	lsls	r0, r2, #29
9000a864:	f100 81cc 	bmi.w	9000ac00 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a868:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a86a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a86e:	d107      	bne.n	9000a880 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a870:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000a872:	f016 0608 	ands.w	r6, r6, #8
9000a876:	d14a      	bne.n	9000a90e <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a878:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a87a:	06d2      	lsls	r2, r2, #27
9000a87c:	f100 81fe 	bmi.w	9000ac7c <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a880:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a882:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a886:	2a20      	cmp	r2, #32
9000a888:	d019      	beq.n	9000a8be <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000a88a:	2000      	movs	r0, #0
}
9000a88c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a890:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a892:	0652      	lsls	r2, r2, #25
9000a894:	d5dd      	bpl.n	9000a852 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a896:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a898:	4629      	mov	r1, r5
9000a89a:	f7ff fb1f 	bl	90009edc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a89e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a8a0:	4629      	mov	r1, r5
9000a8a2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a8a4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a8a6:	f7f7 fb2b 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a8aa:	6823      	ldr	r3, [r4, #0]
9000a8ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a8ae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a8b2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a8b4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a8b6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a8ba:	639a      	str	r2, [r3, #56]	@ 0x38
9000a8bc:	e7c9      	b.n	9000a852 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a8be:	681a      	ldr	r2, [r3, #0]
9000a8c0:	f022 0201 	bic.w	r2, r2, #1
9000a8c4:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a8c6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a8c8:	f002 020c 	and.w	r2, r2, #12
9000a8cc:	2a08      	cmp	r2, #8
9000a8ce:	f000 8201 	beq.w	9000acd4 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a8d2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a8d4:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a8d8:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a8da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a8dc:	2b00      	cmp	r3, #0
9000a8de:	f040 81fe 	bne.w	9000acde <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a8e2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a8e4:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a8e6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a8e8:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a8ea:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a8ee:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a8f2:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a8f6:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a8f8:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a8fa:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a8fc:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a900:	f000 81e5 	beq.w	9000acce <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a904:	f7ff fdd6 	bl	9000a4b4 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a908:	2001      	movs	r0, #1
}
9000a90a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a90e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a910:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a912:	3220      	adds	r2, #32
9000a914:	4296      	cmp	r6, r2
9000a916:	f0c0 8200 	bcc.w	9000ad1a <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a91a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a91c:	69e1      	ldr	r1, [r4, #28]
9000a91e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a920:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a922:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a924:	69e2      	ldr	r2, [r4, #28]
9000a926:	440a      	add	r2, r1
9000a928:	0a19      	lsrs	r1, r3, #8
9000a92a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a92c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a92e:	69e2      	ldr	r2, [r4, #28]
9000a930:	440a      	add	r2, r1
9000a932:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a934:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a936:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a938:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a93a:	69e2      	ldr	r2, [r4, #28]
9000a93c:	440a      	add	r2, r1
9000a93e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a940:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a942:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a944:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a946:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a948:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a94a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a94c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a94e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a950:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a952:	69e2      	ldr	r2, [r4, #28]
9000a954:	440a      	add	r2, r1
9000a956:	0a19      	lsrs	r1, r3, #8
9000a958:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a95a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a95c:	69e2      	ldr	r2, [r4, #28]
9000a95e:	440a      	add	r2, r1
9000a960:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a962:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a964:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a966:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a968:	69e2      	ldr	r2, [r4, #28]
9000a96a:	440a      	add	r2, r1
9000a96c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a96e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a970:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a972:	3304      	adds	r3, #4
9000a974:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a976:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a978:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a97a:	69e1      	ldr	r1, [r4, #28]
9000a97c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a97e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a980:	69e2      	ldr	r2, [r4, #28]
9000a982:	440a      	add	r2, r1
9000a984:	0a19      	lsrs	r1, r3, #8
9000a986:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a988:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a98a:	69e2      	ldr	r2, [r4, #28]
9000a98c:	440a      	add	r2, r1
9000a98e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a990:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a992:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a994:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a996:	69e2      	ldr	r2, [r4, #28]
9000a998:	440a      	add	r2, r1
9000a99a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a99c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a99e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a9a0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9a2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a9a4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a9a6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9a8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9aa:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a9ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9ae:	69e2      	ldr	r2, [r4, #28]
9000a9b0:	440a      	add	r2, r1
9000a9b2:	0a19      	lsrs	r1, r3, #8
9000a9b4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a9b6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9b8:	69e2      	ldr	r2, [r4, #28]
9000a9ba:	440a      	add	r2, r1
9000a9bc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a9be:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a9c0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a9c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9c4:	69e2      	ldr	r2, [r4, #28]
9000a9c6:	440a      	add	r2, r1
9000a9c8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a9ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a9cc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a9ce:	3304      	adds	r3, #4
9000a9d0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a9d2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9d6:	69e1      	ldr	r1, [r4, #28]
9000a9d8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a9da:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9dc:	69e2      	ldr	r2, [r4, #28]
9000a9de:	440a      	add	r2, r1
9000a9e0:	0a19      	lsrs	r1, r3, #8
9000a9e2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a9e4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9e6:	69e2      	ldr	r2, [r4, #28]
9000a9e8:	440a      	add	r2, r1
9000a9ea:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a9ec:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a9ee:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a9f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a9f2:	69e2      	ldr	r2, [r4, #28]
9000a9f4:	440a      	add	r2, r1
9000a9f6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a9f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a9fa:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a9fc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9fe:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000aa00:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aa02:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aa04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa06:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aa08:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa0a:	69e2      	ldr	r2, [r4, #28]
9000aa0c:	440a      	add	r2, r1
9000aa0e:	0a19      	lsrs	r1, r3, #8
9000aa10:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa12:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa14:	69e2      	ldr	r2, [r4, #28]
9000aa16:	440a      	add	r2, r1
9000aa18:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa1a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa1c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa1e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa20:	69e2      	ldr	r2, [r4, #28]
9000aa22:	440a      	add	r2, r1
9000aa24:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aa26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aa28:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000aa2a:	3304      	adds	r3, #4
9000aa2c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aa2e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aa30:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa32:	69e1      	ldr	r1, [r4, #28]
9000aa34:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aa36:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa38:	69e2      	ldr	r2, [r4, #28]
9000aa3a:	440a      	add	r2, r1
9000aa3c:	0a19      	lsrs	r1, r3, #8
9000aa3e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa40:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa42:	69e2      	ldr	r2, [r4, #28]
9000aa44:	440a      	add	r2, r1
9000aa46:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa48:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa4a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa4c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa4e:	69e2      	ldr	r2, [r4, #28]
9000aa50:	440a      	add	r2, r1
9000aa52:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aa54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aa56:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000aa58:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aa5a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000aa5c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aa5e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aa60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa62:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aa64:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa66:	69e2      	ldr	r2, [r4, #28]
9000aa68:	440a      	add	r2, r1
9000aa6a:	0a19      	lsrs	r1, r3, #8
9000aa6c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa6e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa70:	69e2      	ldr	r2, [r4, #28]
9000aa72:	440a      	add	r2, r1
9000aa74:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa76:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa78:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa7a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa7c:	69e2      	ldr	r2, [r4, #28]
9000aa7e:	440a      	add	r2, r1
9000aa80:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aa82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa84:	3304      	adds	r3, #4
9000aa86:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000aa88:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa8a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa8c:	429a      	cmp	r2, r3
9000aa8e:	f000 8258 	beq.w	9000af42 <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aa92:	6823      	ldr	r3, [r4, #0]
9000aa94:	e6f4      	b.n	9000a880 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000aa96:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000aa98:	2a00      	cmp	r2, #0
9000aa9a:	f000 8128 	beq.w	9000acee <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000aa9e:	6a21      	ldr	r1, [r4, #32]
9000aaa0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000aaa2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000aaa4:	f240 81b9 	bls.w	9000ae1a <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000aaa8:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000aaaa:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000aaac:	04cd      	lsls	r5, r1, #19
9000aaae:	f53f aedb 	bmi.w	9000a868 <JPEG_Process+0x28>
9000aab2:	2a00      	cmp	r2, #0
9000aab4:	f43f aed8 	beq.w	9000a868 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000aab8:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000aaba:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000aabe:	f200 8248 	bhi.w	9000af52 <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000aac2:	2a03      	cmp	r2, #3
9000aac4:	f240 82c0 	bls.w	9000b048 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000aac8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aaca:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aacc:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aace:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aad2:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aad4:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aad6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aad8:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aadc:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aade:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000aae2:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aae6:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aaea:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000aaec:	6a21      	ldr	r1, [r4, #32]
9000aaee:	f101 0104 	add.w	r1, r1, #4
9000aaf2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aaf4:	f43f aeb8 	beq.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000aaf8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aafa:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aafc:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab00:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab02:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab04:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab06:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ab0a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab0c:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ab10:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab14:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab18:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ab1a:	6a21      	ldr	r1, [r4, #32]
9000ab1c:	f101 0104 	add.w	r1, r1, #4
9000ab20:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab22:	f43f aea1 	beq.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ab26:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab28:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab2a:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab2e:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab30:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab32:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab34:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ab38:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab3a:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ab3e:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab42:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab46:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ab48:	6a21      	ldr	r1, [r4, #32]
9000ab4a:	f101 0104 	add.w	r1, r1, #4
9000ab4e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab50:	f43f ae8a 	beq.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ab54:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab56:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab58:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab5c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab5e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab60:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab62:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ab66:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab68:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ab6c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab70:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab74:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ab76:	6a21      	ldr	r1, [r4, #32]
9000ab78:	f101 0104 	add.w	r1, r1, #4
9000ab7c:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab7e:	f43f ae73 	beq.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ab82:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ab84:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab86:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ab8a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab8c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab8e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab90:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ab94:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ab96:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ab9a:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ab9e:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aba2:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000aba4:	6a21      	ldr	r1, [r4, #32]
9000aba6:	f101 0104 	add.w	r1, r1, #4
9000abaa:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000abac:	f43f ae5c 	beq.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000abb0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000abb2:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abb4:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abb8:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abba:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abbc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abbe:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000abc2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abc4:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000abc8:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abcc:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abd0:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000abd2:	6a21      	ldr	r1, [r4, #32]
9000abd4:	f101 0104 	add.w	r1, r1, #4
9000abd8:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000abda:	f47f ae45 	bne.w	9000a868 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000abde:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abe0:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abe2:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abe4:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000abe6:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abe8:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abea:	7849      	ldrb	r1, [r1, #1]
9000abec:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000abf0:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abf2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abf6:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000abf8:	6a22      	ldr	r2, [r4, #32]
9000abfa:	3204      	adds	r2, #4
9000abfc:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000abfe:	e633      	b.n	9000a868 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ac00:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ac02:	2a00      	cmp	r2, #0
9000ac04:	d073      	beq.n	9000acee <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ac06:	6a21      	ldr	r1, [r4, #32]
9000ac08:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ac0a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ac0c:	f200 8182 	bhi.w	9000af14 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ac10:	428a      	cmp	r2, r1
9000ac12:	f040 8104 	bne.w	9000ae1e <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ac16:	6a21      	ldr	r1, [r4, #32]
9000ac18:	4620      	mov	r0, r4
9000ac1a:	f7f7 f99f 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ac1e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ac20:	2a04      	cmp	r2, #4
9000ac22:	d902      	bls.n	9000ac2a <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ac24:	f022 0203 	bic.w	r2, r2, #3
9000ac28:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000ac2a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac2c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ac2e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ac30:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000ac32:	04c9      	lsls	r1, r1, #19
9000ac34:	f53f ae18 	bmi.w	9000a868 <JPEG_Process+0x28>
9000ac38:	2a00      	cmp	r2, #0
9000ac3a:	f43f ae15 	beq.w	9000a868 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000ac3e:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac40:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000ac42:	f040 8177 	bne.w	9000af34 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac46:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ac48:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000ac4a:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac4c:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000ac4e:	f105 0501 	add.w	r5, r5, #1
9000ac52:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ac54:	d010      	beq.n	9000ac78 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac56:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ac58:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac5a:	5d45      	ldrb	r5, [r0, r5]
9000ac5c:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000ac60:	6a25      	ldr	r5, [r4, #32]
9000ac62:	f105 0501 	add.w	r5, r5, #1
9000ac66:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ac68:	d106      	bne.n	9000ac78 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac6a:	6a22      	ldr	r2, [r4, #32]
9000ac6c:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000ac6e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ac70:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000ac74:	3201      	adds	r2, #1
9000ac76:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000ac78:	6419      	str	r1, [r3, #64]	@ 0x40
9000ac7a:	e5f5      	b.n	9000a868 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000ac7c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac7e:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000ac80:	3204      	adds	r2, #4
9000ac82:	4295      	cmp	r5, r2
9000ac84:	f0c0 80cd 	bcc.w	9000ae22 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000ac88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac8a:	69e1      	ldr	r1, [r4, #28]
9000ac8c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac8e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac90:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac92:	69e2      	ldr	r2, [r4, #28]
9000ac94:	440a      	add	r2, r1
9000ac96:	0a19      	lsrs	r1, r3, #8
9000ac98:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac9a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac9c:	69e2      	ldr	r2, [r4, #28]
9000ac9e:	440a      	add	r2, r1
9000aca0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aca2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aca4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aca6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aca8:	69e2      	ldr	r2, [r4, #28]
9000acaa:	440a      	add	r2, r1
9000acac:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000acb0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000acb2:	3304      	adds	r3, #4
9000acb4:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000acb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000acb8:	429a      	cmp	r2, r3
9000acba:	f47f aeea 	bne.w	9000aa92 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000acbe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000acc0:	4620      	mov	r0, r4
9000acc2:	69e1      	ldr	r1, [r4, #28]
9000acc4:	f7f7 f96a 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acc8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000acca:	6266      	str	r6, [r4, #36]	@ 0x24
9000accc:	e5d8      	b.n	9000a880 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000acce:	f7f7 fa13 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
9000acd2:	e619      	b.n	9000a908 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000acd4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000acd6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000acda:	631a      	str	r2, [r3, #48]	@ 0x30
9000acdc:	e5f9      	b.n	9000a8d2 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000acde:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ace0:	4620      	mov	r0, r4
9000ace2:	69e1      	ldr	r1, [r4, #28]
9000ace4:	f7f7 f95a 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ace8:	2300      	movs	r3, #0
9000acea:	6263      	str	r3, [r4, #36]	@ 0x24
9000acec:	e5f9      	b.n	9000a8e2 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000acee:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000acf0:	f002 020c 	and.w	r2, r2, #12
9000acf4:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000acf6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000acf8:	f000 811e 	beq.w	9000af38 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000acfc:	f002 020c 	and.w	r2, r2, #12
9000ad00:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ad02:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ad04:	f47f adb0 	bne.w	9000a868 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ad08:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000ad0c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000ad0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ad10:	f022 0206 	bic.w	r2, r2, #6
9000ad14:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ad16:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000ad18:	e5a6      	b.n	9000a868 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000ad1a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad1c:	4296      	cmp	r6, r2
9000ad1e:	f67f adaf 	bls.w	9000a880 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000ad22:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000ad24:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000ad26:	0880      	lsrs	r0, r0, #2
9000ad28:	d020      	beq.n	9000ad6c <JPEG_Process+0x52c>
9000ad2a:	4629      	mov	r1, r5
9000ad2c:	e000      	b.n	9000ad30 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000ad2e:	6823      	ldr	r3, [r4, #0]
9000ad30:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000ad32:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad34:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad36:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000ad38:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad3a:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad3c:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000ad3e:	69e2      	ldr	r2, [r4, #28]
9000ad40:	4432      	add	r2, r6
9000ad42:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000ad46:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad48:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000ad4a:	69e2      	ldr	r2, [r4, #28]
9000ad4c:	4432      	add	r2, r6
9000ad4e:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad52:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad56:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad58:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000ad5a:	69e2      	ldr	r2, [r4, #28]
9000ad5c:	4432      	add	r2, r6
9000ad5e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad60:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ad62:	f103 0304 	add.w	r3, r3, #4
9000ad66:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000ad68:	d1e1      	bne.n	9000ad2e <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ad6a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000ad6c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ad6e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ad70:	429e      	cmp	r6, r3
9000ad72:	f000 8161 	beq.w	9000b038 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ad76:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ad7a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ad7c:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000ad80:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000ad82:	d00e      	beq.n	9000ada2 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ad84:	f005 0303 	and.w	r3, r5, #3
9000ad88:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000ad8a:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ad8c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000ad8e:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ad90:	fa27 f303 	lsr.w	r3, r7, r3
9000ad94:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ad96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ad98:	69e1      	ldr	r1, [r4, #28]
9000ad9a:	f103 0301 	add.w	r3, r3, #1
9000ad9e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000ada0:	d1f0      	bne.n	9000ad84 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000ada2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ada6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ada8:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000adaa:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000adae:	f7f7 f8f5 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000adb2:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000adb4:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000adb6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000adb8:	f63f ae6b 	bhi.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000adbc:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000adc0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000adc2:	69e0      	ldr	r0, [r4, #28]
9000adc4:	fa27 f502 	lsr.w	r5, r7, r2
9000adc8:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000adca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000adcc:	f101 0101 	add.w	r1, r1, #1
9000add0:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000add2:	f43f ae5e 	beq.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000add6:	f102 0108 	add.w	r1, r2, #8
9000adda:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000addc:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000adde:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ade0:	fa27 f101 	lsr.w	r1, r7, r1
9000ade4:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000ade6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ade8:	f101 0101 	add.w	r1, r1, #1
9000adec:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000adee:	f43f ae50 	beq.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000adf2:	3210      	adds	r2, #16
9000adf4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000adf6:	69e0      	ldr	r0, [r4, #28]
9000adf8:	fa27 f202 	lsr.w	r2, r7, r2
9000adfc:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000adfe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ae00:	3201      	adds	r2, #1
9000ae02:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ae04:	2e00      	cmp	r6, #0
9000ae06:	f47f ae44 	bne.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ae0a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ae0c:	0e3f      	lsrs	r7, r7, #24
9000ae0e:	69e2      	ldr	r2, [r4, #28]
9000ae10:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000ae12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ae14:	3301      	adds	r3, #1
9000ae16:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ae18:	e63b      	b.n	9000aa92 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ae1a:	428a      	cmp	r2, r1
9000ae1c:	d07c      	beq.n	9000af18 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ae1e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000ae20:	e522      	b.n	9000a868 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000ae22:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ae24:	4295      	cmp	r5, r2
9000ae26:	f67f ad2b 	bls.w	9000a880 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000ae2a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000ae2c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000ae2e:	0880      	lsrs	r0, r0, #2
9000ae30:	d020      	beq.n	9000ae74 <JPEG_Process+0x634>
9000ae32:	4631      	mov	r1, r6
9000ae34:	e000      	b.n	9000ae38 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000ae36:	6823      	ldr	r3, [r4, #0]
9000ae38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000ae3a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ae3c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ae3e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000ae40:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ae42:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ae44:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ae46:	69e2      	ldr	r2, [r4, #28]
9000ae48:	442a      	add	r2, r5
9000ae4a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000ae4e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ae50:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ae52:	69e2      	ldr	r2, [r4, #28]
9000ae54:	442a      	add	r2, r5
9000ae56:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ae5a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ae5e:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ae60:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ae62:	69e2      	ldr	r2, [r4, #28]
9000ae64:	442a      	add	r2, r5
9000ae66:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ae68:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ae6a:	f103 0304 	add.w	r3, r3, #4
9000ae6e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000ae70:	d1e1      	bne.n	9000ae36 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ae72:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000ae74:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ae76:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ae78:	429d      	cmp	r5, r3
9000ae7a:	f000 80dd 	beq.w	9000b038 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ae7e:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ae82:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ae84:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000ae88:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000ae8a:	d00e      	beq.n	9000aeaa <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ae8c:	f006 0303 	and.w	r3, r6, #3
9000ae90:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000ae92:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ae94:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000ae96:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ae98:	fa27 f303 	lsr.w	r3, r7, r3
9000ae9c:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ae9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aea0:	69e1      	ldr	r1, [r4, #28]
9000aea2:	f103 0301 	add.w	r3, r3, #1
9000aea6:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000aea8:	d1f0      	bne.n	9000ae8c <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000aeaa:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aeae:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aeb0:	4620      	mov	r0, r4
9000aeb2:	f7f7 f873 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000aeb6:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000aeba:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000aebc:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000aebe:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aec0:	f63f ade7 	bhi.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aec4:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000aec8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aeca:	69e0      	ldr	r0, [r4, #28]
9000aecc:	fa27 f502 	lsr.w	r5, r7, r2
9000aed0:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000aed2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aed4:	f101 0101 	add.w	r1, r1, #1
9000aed8:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aeda:	f43f adda 	beq.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aede:	f102 0108 	add.w	r1, r2, #8
9000aee2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000aee4:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000aee6:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aee8:	fa27 f101 	lsr.w	r1, r7, r1
9000aeec:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000aeee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aef0:	f101 0101 	add.w	r1, r1, #1
9000aef4:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aef6:	f43f adcc 	beq.w	9000aa92 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aefa:	3210      	adds	r2, #16
9000aefc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aefe:	69e0      	ldr	r0, [r4, #28]
9000af00:	fa27 f202 	lsr.w	r2, r7, r2
9000af04:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000af06:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af08:	3201      	adds	r2, #1
9000af0a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af0c:	2b00      	cmp	r3, #0
9000af0e:	f43f af7c 	beq.w	9000ae0a <JPEG_Process+0x5ca>
9000af12:	e5be      	b.n	9000aa92 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000af14:	1a52      	subs	r2, r2, r1
9000af16:	e68b      	b.n	9000ac30 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000af18:	6a21      	ldr	r1, [r4, #32]
9000af1a:	4620      	mov	r0, r4
9000af1c:	f7f7 f81e 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000af20:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000af22:	2a04      	cmp	r2, #4
9000af24:	d902      	bls.n	9000af2c <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000af26:	f022 0203 	bic.w	r2, r2, #3
9000af2a:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000af2c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af2e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000af30:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000af32:	e5ba      	b.n	9000aaaa <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000af34:	6a22      	ldr	r2, [r4, #32]
9000af36:	e653      	b.n	9000abe0 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000af38:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000af3c:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000af3e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000af40:	e492      	b.n	9000a868 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000af42:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af44:	4620      	mov	r0, r4
9000af46:	69e1      	ldr	r1, [r4, #28]
9000af48:	f7f7 f828 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000af4c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000af4e:	6265      	str	r5, [r4, #36]	@ 0x24
9000af50:	e496      	b.n	9000a880 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af52:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000af54:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af56:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af58:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af5a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af5c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af5e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000af60:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af62:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000af66:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af68:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af6c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000af6e:	6a21      	ldr	r1, [r4, #32]
9000af70:	3104      	adds	r1, #4
9000af72:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000af74:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af76:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af78:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af7a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af7c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af7e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000af80:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af82:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000af86:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af88:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af8c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000af8e:	6a21      	ldr	r1, [r4, #32]
9000af90:	3104      	adds	r1, #4
9000af92:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000af94:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af96:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af98:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af9a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af9c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af9e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000afa0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afa2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000afa6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afa8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000afac:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000afae:	6a21      	ldr	r1, [r4, #32]
9000afb0:	3104      	adds	r1, #4
9000afb2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000afb4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afb6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000afb8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afba:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afbc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afbe:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000afc0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afc2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000afc6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afc8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000afcc:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000afce:	6a21      	ldr	r1, [r4, #32]
9000afd0:	3104      	adds	r1, #4
9000afd2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000afd4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afd6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000afd8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afda:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afdc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afde:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000afe0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000afe2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000afe6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000afe8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000afec:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000afee:	6a21      	ldr	r1, [r4, #32]
9000aff0:	3104      	adds	r1, #4
9000aff2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aff4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aff6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aff8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000affa:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000affc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000affe:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b000:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b002:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b006:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b008:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b00c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b00e:	6a21      	ldr	r1, [r4, #32]
9000b010:	3104      	adds	r1, #4
9000b012:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b014:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b016:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b018:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b01a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b01c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b01e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b020:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b022:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b026:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b028:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b02c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b02e:	6a21      	ldr	r1, [r4, #32]
9000b030:	3104      	adds	r1, #4
9000b032:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b034:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b036:	e5d3      	b.n	9000abe0 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b038:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b03a:	4620      	mov	r0, r4
9000b03c:	f7f6 ffae 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b040:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b042:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b044:	6262      	str	r2, [r4, #36]	@ 0x24
9000b046:	e41b      	b.n	9000a880 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b048:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b04a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b04c:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b04e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b050:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b054:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000b056:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b058:	f43f ae0e 	beq.w	9000ac78 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b05c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b05e:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b060:	5c28      	ldrb	r0, [r5, r0]
9000b062:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000b066:	6a20      	ldr	r0, [r4, #32]
9000b068:	f100 0001 	add.w	r0, r0, #1
9000b06c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b06e:	f47f ae03 	bne.w	9000ac78 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b072:	6a22      	ldr	r2, [r4, #32]
9000b074:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000b076:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b078:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000b07c:	3201      	adds	r2, #1
9000b07e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b080:	e5fa      	b.n	9000ac78 <JPEG_Process+0x438>
9000b082:	bf00      	nop

9000b084 <HAL_JPEG_IRQHandler>:
{
9000b084:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000b086:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000b08a:	3b03      	subs	r3, #3
9000b08c:	2b01      	cmp	r3, #1
9000b08e:	d900      	bls.n	9000b092 <HAL_JPEG_IRQHandler+0xe>
}
9000b090:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b092:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b094:	4604      	mov	r4, r0
9000b096:	f003 030c 	and.w	r3, r3, #12
9000b09a:	2b08      	cmp	r3, #8
9000b09c:	d050      	beq.n	9000b140 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b09e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b0a0:	f003 030c 	and.w	r3, r3, #12
9000b0a4:	2b0c      	cmp	r3, #12
9000b0a6:	d1f3      	bne.n	9000b090 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b0a8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b0aa:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b0ac:	f002 0203 	and.w	r2, r2, #3
9000b0b0:	2a02      	cmp	r2, #2
9000b0b2:	d049      	beq.n	9000b148 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b0b4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b0b6:	0692      	lsls	r2, r2, #26
9000b0b8:	d5ea      	bpl.n	9000b090 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b0ba:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b0bc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b0be:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000b0c2:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b0c4:	681a      	ldr	r2, [r3, #0]
9000b0c6:	f022 0201 	bic.w	r2, r2, #1
9000b0ca:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b0cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b0ce:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000b0d2:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b0d4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b0d6:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000b0da:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b0dc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b0e0:	2b02      	cmp	r3, #2
9000b0e2:	d054      	beq.n	9000b18e <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b0e4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000b0e6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b0ea:	2b02      	cmp	r3, #2
9000b0ec:	d043      	beq.n	9000b176 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b0ee:	6803      	ldr	r3, [r0, #0]
9000b0f0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b0f2:	695b      	ldr	r3, [r3, #20]
9000b0f4:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b0f8:	1ad3      	subs	r3, r2, r3
9000b0fa:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b0fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b0fe:	429a      	cmp	r2, r3
9000b100:	d048      	beq.n	9000b194 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b102:	6822      	ldr	r2, [r4, #0]
9000b104:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000b106:	f015 0510 	ands.w	r5, r5, #16
9000b10a:	d138      	bne.n	9000b17e <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000b10c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b10e:	2b00      	cmp	r3, #0
9000b110:	d14b      	bne.n	9000b1aa <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b112:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b114:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b116:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b118:	f023 0301 	bic.w	r3, r3, #1
9000b11c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b11e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b120:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b122:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b126:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b12a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b12e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b130:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b132:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b134:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b138:	d034      	beq.n	9000b1a4 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b13a:	f7ff f9bb 	bl	9000a4b4 <HAL_JPEG_EncodeCpltCallback>
}
9000b13e:	bd38      	pop	{r3, r4, r5, pc}
9000b140:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b144:	f7ff bb7c 	b.w	9000a840 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b148:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b14a:	0651      	lsls	r1, r2, #25
9000b14c:	d5b2      	bpl.n	9000b0b4 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b14e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b150:	4629      	mov	r1, r5
9000b152:	f7fe fec3 	bl	90009edc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b156:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b158:	4629      	mov	r1, r5
9000b15a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b15c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b15e:	f7f6 fecf 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b162:	6823      	ldr	r3, [r4, #0]
9000b164:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b166:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000b16a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b16c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b16e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000b172:	639a      	str	r2, [r3, #56]	@ 0x38
9000b174:	e79e      	b.n	9000b0b4 <HAL_JPEG_IRQHandler+0x30>
}
9000b176:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b17a:	f000 bb41 	b.w	9000b800 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b17e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b180:	049b      	lsls	r3, r3, #18
9000b182:	d485      	bmi.n	9000b090 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000b184:	4620      	mov	r0, r4
}
9000b186:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b18a:	f7ff b9ff 	b.w	9000a58c <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b18e:	f000 fb37 	bl	9000b800 <HAL_MDMA_Abort_IT>
9000b192:	e7a7      	b.n	9000b0e4 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b194:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b196:	4620      	mov	r0, r4
9000b198:	69e1      	ldr	r1, [r4, #28]
9000b19a:	f7f6 feff 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b19e:	2300      	movs	r3, #0
9000b1a0:	6263      	str	r3, [r4, #36]	@ 0x24
9000b1a2:	e7ae      	b.n	9000b102 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b1a4:	f7f6 ffa8 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000b1a8:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b1aa:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b1ac:	4620      	mov	r0, r4
9000b1ae:	69e1      	ldr	r1, [r4, #28]
9000b1b0:	f7f6 fef4 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b1b4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b1b6:	6265      	str	r5, [r4, #36]	@ 0x24
9000b1b8:	e7ab      	b.n	9000b112 <HAL_JPEG_IRQHandler+0x8e>
9000b1ba:	bf00      	nop

9000b1bc <HAL_JPEG_GetState>:
  return hjpeg->State;
9000b1bc:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000b1c0:	4770      	bx	lr
9000b1c2:	bf00      	nop

9000b1c4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b1c4:	2800      	cmp	r0, #0
9000b1c6:	d052      	beq.n	9000b26e <HAL_LTDC_Init+0xaa>
{
9000b1c8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b1ca:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000b1ce:	4604      	mov	r4, r0
9000b1d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b1d4:	2b00      	cmp	r3, #0
9000b1d6:	d045      	beq.n	9000b264 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1d8:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b1da:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1dc:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b1e0:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1e4:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b1e6:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1e8:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b1ea:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1ee:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b1f0:	6920      	ldr	r0, [r4, #16]
9000b1f2:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b1f4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b1f6:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b1f8:	6999      	ldr	r1, [r3, #24]
9000b1fa:	430a      	orrs	r2, r1
9000b1fc:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b1fe:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
9000b202:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b206:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b208:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
9000b20c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b210:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b212:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
9000b216:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b21a:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
9000b21c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000b21e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b222:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b224:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b226:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b22a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b22e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b232:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b234:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000b236:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000b23a:	432a      	orrs	r2, r5
9000b23c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b240:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b242:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b246:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b248:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b24a:	f042 0206 	orr.w	r2, r2, #6
9000b24e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b250:	699a      	ldr	r2, [r3, #24]
9000b252:	f042 0201 	orr.w	r2, r2, #1
9000b256:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b258:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b25a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b25e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000b262:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b264:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b268:	f7f8 ff00 	bl	9000406c <HAL_LTDC_MspInit>
9000b26c:	e7b4      	b.n	9000b1d8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b26e:	2001      	movs	r0, #1
}
9000b270:	4770      	bx	lr
9000b272:	bf00      	nop

9000b274 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000b274:	4770      	bx	lr
9000b276:	bf00      	nop

9000b278 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000b278:	4770      	bx	lr
9000b27a:	bf00      	nop

9000b27c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b27c:	6803      	ldr	r3, [r0, #0]
{
9000b27e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b280:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000b282:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000b284:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000b286:	076a      	lsls	r2, r5, #29
9000b288:	d501      	bpl.n	9000b28e <HAL_LTDC_IRQHandler+0x12>
9000b28a:	0771      	lsls	r1, r6, #29
9000b28c:	d41d      	bmi.n	9000b2ca <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000b28e:	07aa      	lsls	r2, r5, #30
9000b290:	d501      	bpl.n	9000b296 <HAL_LTDC_IRQHandler+0x1a>
9000b292:	07b3      	lsls	r3, r6, #30
9000b294:	d42d      	bmi.n	9000b2f2 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000b296:	07e8      	lsls	r0, r5, #31
9000b298:	d501      	bpl.n	9000b29e <HAL_LTDC_IRQHandler+0x22>
9000b29a:	07f1      	lsls	r1, r6, #31
9000b29c:	d440      	bmi.n	9000b320 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000b29e:	072a      	lsls	r2, r5, #28
9000b2a0:	d501      	bpl.n	9000b2a6 <HAL_LTDC_IRQHandler+0x2a>
9000b2a2:	0733      	lsls	r3, r6, #28
9000b2a4:	d400      	bmi.n	9000b2a8 <HAL_LTDC_IRQHandler+0x2c>
}
9000b2a6:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b2a8:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b2aa:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000b2ac:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000b2ae:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b2b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b2b2:	f022 0208 	bic.w	r2, r2, #8
9000b2b6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b2b8:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b2ba:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000b2bc:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b2c0:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b2c4:	f7ff ffd8 	bl	9000b278 <HAL_LTDC_ReloadEventCallback>
}
9000b2c8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000b2ca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b2cc:	f022 0204 	bic.w	r2, r2, #4
9000b2d0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000b2d2:	2204      	movs	r2, #4
9000b2d4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000b2d6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000b2da:	f043 0301 	orr.w	r3, r3, #1
9000b2de:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b2e2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b2e4:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b2e8:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b2ec:	f7ff ffc2 	bl	9000b274 <HAL_LTDC_ErrorCallback>
9000b2f0:	e7cd      	b.n	9000b28e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b2f2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000b2f4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b2f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b2f8:	f022 0202 	bic.w	r2, r2, #2
9000b2fc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000b2fe:	2202      	movs	r2, #2
9000b300:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b302:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000b304:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000b308:	f043 0302 	orr.w	r3, r3, #2
9000b30c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b310:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b312:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b316:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b31a:	f7ff ffab 	bl	9000b274 <HAL_LTDC_ErrorCallback>
9000b31e:	e7ba      	b.n	9000b296 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b320:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000b322:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b324:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b326:	f022 0201 	bic.w	r2, r2, #1
9000b32a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000b32c:	2201      	movs	r2, #1
9000b32e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000b330:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000b332:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b336:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000b33a:	f7f8 f989 	bl	90003650 <HAL_LTDC_LineEventCallback>
9000b33e:	e7ae      	b.n	9000b29e <HAL_LTDC_IRQHandler+0x22>

9000b340 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b340:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000b344:	2b01      	cmp	r3, #1
9000b346:	f000 80bb 	beq.w	9000b4c0 <HAL_LTDC_ConfigLayer+0x180>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b34a:	2302      	movs	r3, #2
{
9000b34c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b350:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b354:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b358:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000b35c:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b35e:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b362:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b364:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b368:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b36a:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000b36e:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b370:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b374:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b376:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b37a:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b37e:	f8df a14c 	ldr.w	sl, [pc, #332]	@ 9000b4cc <HAL_LTDC_ConfigLayer+0x18c>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b382:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b386:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000b38a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b38c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b38e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b392:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b394:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b396:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b39a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b39c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b3a0:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b3a2:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b3a4:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b3a8:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b3aa:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b3ac:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b3b0:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b3b4:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b3b6:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b3b8:	f3c3 430b 	ubfx	r3, r3, #16, #12
9000b3bc:	440b      	add	r3, r1
9000b3be:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b3c2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b3c6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b3ca:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b3ce:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b3d2:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b3d6:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b3d8:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b3dc:	68ab      	ldr	r3, [r5, #8]
9000b3de:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b3e2:	3301      	adds	r3, #1
9000b3e4:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b3e8:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b3ea:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b3ec:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b3f0:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b3f2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b3f6:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b3fa:	f023 0307 	bic.w	r3, r3, #7
9000b3fe:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b402:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b406:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000b40a:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b40e:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b412:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b416:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b41a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b41e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b422:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b426:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000b42a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b42e:	696b      	ldr	r3, [r5, #20]
9000b430:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b434:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b438:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b43a:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b43e:	6a28      	ldr	r0, [r5, #32]
9000b440:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b442:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b446:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000b44a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000b44c:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b450:	b3a1      	cbz	r1, 9000b4bc <HAL_LTDC_ConfigLayer+0x17c>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000b452:	2901      	cmp	r1, #1
9000b454:	d036      	beq.n	9000b4c4 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000b456:	1e8b      	subs	r3, r1, #2
9000b458:	2907      	cmp	r1, #7
9000b45a:	bf18      	it	ne
9000b45c:	2b02      	cmpne	r3, #2
9000b45e:	bf94      	ite	ls
9000b460:	2301      	movls	r3, #1
9000b462:	2300      	movhi	r3, #0
9000b464:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b466:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b468:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b46a:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b46e:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b472:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b474:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b476:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b47a:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000b47e:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000b482:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b486:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b48a:	4b0f      	ldr	r3, [pc, #60]	@ (9000b4c8 <HAL_LTDC_ConfigLayer+0x188>)
9000b48c:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000b490:	400b      	ands	r3, r1
9000b492:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b496:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b49a:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b49c:	f859 3006 	ldr.w	r3, [r9, r6]
9000b4a0:	4313      	orrs	r3, r2
9000b4a2:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b4a6:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b4a8:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000b4ac:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b4ae:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000b4b2:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000b4b6:	b003      	add	sp, #12
9000b4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000b4bc:	2304      	movs	r3, #4
9000b4be:	e7d2      	b.n	9000b466 <HAL_LTDC_ConfigLayer+0x126>
  __HAL_LOCK(hltdc);
9000b4c0:	2002      	movs	r0, #2
}
9000b4c2:	4770      	bx	lr
    tmp = 3U;
9000b4c4:	2303      	movs	r3, #3
9000b4c6:	e7ce      	b.n	9000b466 <HAL_LTDC_ConfigLayer+0x126>
9000b4c8:	fffff800 	.word	0xfffff800
9000b4cc:	fffff8f8 	.word	0xfffff8f8

9000b4d0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b4d0:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000b4d4:	2a01      	cmp	r2, #1
9000b4d6:	d019      	beq.n	9000b50c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b4d8:	6802      	ldr	r2, [r0, #0]
9000b4da:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4dc:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b4de:	f04f 0c00 	mov.w	ip, #0
{
9000b4e2:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4e4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b4e8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b4ea:	4c09      	ldr	r4, [pc, #36]	@ (9000b510 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b4ec:	f020 0001 	bic.w	r0, r0, #1
9000b4f0:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b4f2:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b4f4:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b4f6:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000b4f8:	4301      	orrs	r1, r0
9000b4fa:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b4fc:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000b500:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b502:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000b506:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b50a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b50c:	2002      	movs	r0, #2
}
9000b50e:	4770      	bx	lr
9000b510:	50001000 	.word	0x50001000

9000b514 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b514:	b538      	push	{r3, r4, r5, lr}
9000b516:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b518:	f7fd f86a 	bl	900085f0 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b51c:	2c00      	cmp	r4, #0
9000b51e:	d058      	beq.n	9000b5d2 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b520:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b522:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b524:	2100      	movs	r1, #0
9000b526:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b528:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000b52c:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b530:	68da      	ldr	r2, [r3, #12]
9000b532:	f022 0201 	bic.w	r2, r2, #1
9000b536:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b538:	e005      	b.n	9000b546 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b53a:	f7fd f859 	bl	900085f0 <HAL_GetTick>
9000b53e:	1b43      	subs	r3, r0, r5
9000b540:	2b05      	cmp	r3, #5
9000b542:	d841      	bhi.n	9000b5c8 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b544:	6823      	ldr	r3, [r4, #0]
9000b546:	68da      	ldr	r2, [r3, #12]
9000b548:	07d2      	lsls	r2, r2, #31
9000b54a:	d4f6      	bmi.n	9000b53a <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b54c:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b550:	69e0      	ldr	r0, [r4, #28]
9000b552:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b554:	68e1      	ldr	r1, [r4, #12]
9000b556:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b558:	4302      	orrs	r2, r0
9000b55a:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b55c:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b55e:	4302      	orrs	r2, r0
9000b560:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b562:	4302      	orrs	r2, r0
9000b564:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000b566:	4302      	orrs	r2, r0
9000b568:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000b56a:	4302      	orrs	r2, r0
9000b56c:	68a0      	ldr	r0, [r4, #8]
9000b56e:	4302      	orrs	r2, r0
9000b570:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b572:	3801      	subs	r0, #1
9000b574:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b578:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b57a:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b57c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b580:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b582:	d103      	bne.n	9000b58c <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b584:	691a      	ldr	r2, [r3, #16]
9000b586:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000b58a:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b58c:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b58e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000b590:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b592:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b594:	db1f      	blt.n	9000b5d6 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b596:	b292      	uxth	r2, r2
9000b598:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b59a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b59c:	2a00      	cmp	r2, #0
9000b59e:	db24      	blt.n	9000b5ea <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b5a0:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b5a2:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b5a6:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b5aa:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b5ac:	d029      	beq.n	9000b602 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b5ae:	b2c0      	uxtb	r0, r0
9000b5b0:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b5b2:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b5b4:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b5b6:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000b5b8:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b5ba:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b5bc:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b5be:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b5c2:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000b5c6:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b5c8:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b5ca:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b5cc:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b5ce:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000b5d2:	2001      	movs	r0, #1
}
9000b5d4:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b5d6:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b5d8:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b5da:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b5de:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b5e0:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b5e2:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b5e4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b5e6:	2a00      	cmp	r2, #0
9000b5e8:	dada      	bge.n	9000b5a0 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b5ea:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b5ec:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b5ee:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b5f2:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000b5f6:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b5f8:	6a19      	ldr	r1, [r3, #32]
9000b5fa:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b5fe:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b600:	d1d5      	bne.n	9000b5ae <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b602:	2200      	movs	r2, #0
9000b604:	629a      	str	r2, [r3, #40]	@ 0x28
9000b606:	e7d4      	b.n	9000b5b2 <HAL_MDMA_Init+0x9e>

9000b608 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b608:	b1f8      	cbz	r0, 9000b64a <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b60a:	6802      	ldr	r2, [r0, #0]
9000b60c:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b60e:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b610:	68d0      	ldr	r0, [r2, #12]
{
9000b612:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b614:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b618:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b61a:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b61c:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b61e:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b620:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b622:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b624:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b626:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b628:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b62a:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000b62c:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000b62e:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000b630:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b632:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b634:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000b636:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b63a:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000b63e:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b642:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b644:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000b648:	4770      	bx	lr
    return HAL_ERROR;
9000b64a:	2001      	movs	r0, #1
}
9000b64c:	4770      	bx	lr
9000b64e:	bf00      	nop

9000b650 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b650:	b308      	cbz	r0, 9000b696 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000b652:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b654:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b658:	2801      	cmp	r0, #1
9000b65a:	d01e      	beq.n	9000b69a <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b65c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b65e:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b662:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b666:	45f4      	cmp	ip, lr
9000b668:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b66c:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b670:	d004      	beq.n	9000b67c <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b672:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b674:	2200      	movs	r2, #0
9000b676:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b67a:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b67c:	681c      	ldr	r4, [r3, #0]
9000b67e:	6925      	ldr	r5, [r4, #16]
9000b680:	006d      	lsls	r5, r5, #1
9000b682:	d4f7      	bmi.n	9000b674 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b684:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b686:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b688:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b68a:	b941      	cbnz	r1, 9000b69e <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b68c:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b690:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b692:	2000      	movs	r0, #0
9000b694:	e7ee      	b.n	9000b674 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b696:	2001      	movs	r0, #1
9000b698:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b69a:	2002      	movs	r0, #2
}
9000b69c:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b69e:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b6a2:	6122      	str	r2, [r4, #16]
9000b6a4:	e7f5      	b.n	9000b692 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b6a6:	bf00      	nop

9000b6a8 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b6a8:	2800      	cmp	r0, #0
9000b6aa:	d06b      	beq.n	9000b784 <HAL_MDMA_Start_IT+0xdc>
{
9000b6ac:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b6ae:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b6b2:	2c01      	cmp	r4, #1
9000b6b4:	d009      	beq.n	9000b6ca <HAL_MDMA_Start_IT+0x22>
9000b6b6:	2401      	movs	r4, #1
9000b6b8:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b6bc:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b6c0:	2c01      	cmp	r4, #1
9000b6c2:	d005      	beq.n	9000b6d0 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b6c4:	2300      	movs	r3, #0
9000b6c6:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b6ca:	2002      	movs	r0, #2
}
9000b6cc:	bc70      	pop	{r4, r5, r6}
9000b6ce:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b6d0:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b6d2:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b6d4:	4d2c      	ldr	r5, [pc, #176]	@ (9000b788 <HAL_MDMA_Start_IT+0xe0>)
9000b6d6:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b6da:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b6de:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b6e0:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b6e4:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b6e8:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b6ea:	6804      	ldr	r4, [r0, #0]
9000b6ec:	68e6      	ldr	r6, [r4, #12]
9000b6ee:	f026 0601 	bic.w	r6, r6, #1
9000b6f2:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b6f4:	6966      	ldr	r6, [r4, #20]
9000b6f6:	ea05 0506 	and.w	r5, r5, r6
9000b6fa:	ea45 0503 	orr.w	r5, r5, r3
9000b6fe:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b700:	6963      	ldr	r3, [r4, #20]
9000b702:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b706:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b70a:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b70c:	f04f 031f 	mov.w	r3, #31
9000b710:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b712:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b714:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b716:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b718:	bf0c      	ite	eq
9000b71a:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b71e:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b722:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b726:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b728:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b72a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b72c:	bf0c      	ite	eq
9000b72e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b732:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b736:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b738:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b73a:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b73c:	68e3      	ldr	r3, [r4, #12]
9000b73e:	f043 0306 	orr.w	r3, r3, #6
9000b742:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b744:	b11a      	cbz	r2, 9000b74e <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b746:	68e3      	ldr	r3, [r4, #12]
9000b748:	f043 0310 	orr.w	r3, r3, #16
9000b74c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b74e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b750:	b11b      	cbz	r3, 9000b75a <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b752:	68e3      	ldr	r3, [r4, #12]
9000b754:	f043 0308 	orr.w	r3, r3, #8
9000b758:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b75a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b75c:	b11b      	cbz	r3, 9000b766 <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b75e:	68e3      	ldr	r3, [r4, #12]
9000b760:	f043 0320 	orr.w	r3, r3, #32
9000b764:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b766:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b768:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b76a:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b76e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b772:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b774:	d103      	bne.n	9000b77e <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b776:	68e3      	ldr	r3, [r4, #12]
9000b778:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b77c:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000b77e:	2000      	movs	r0, #0
}
9000b780:	bc70      	pop	{r4, r5, r6}
9000b782:	4770      	bx	lr
    return HAL_ERROR;
9000b784:	2001      	movs	r0, #1
}
9000b786:	4770      	bx	lr
9000b788:	fffe0000 	.word	0xfffe0000

9000b78c <HAL_MDMA_Abort>:
{
9000b78c:	b538      	push	{r3, r4, r5, lr}
9000b78e:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000b790:	f7fc ff2e 	bl	900085f0 <HAL_GetTick>
  if(hmdma == NULL)
9000b794:	b334      	cbz	r4, 9000b7e4 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b796:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000b79a:	2b02      	cmp	r3, #2
9000b79c:	d11d      	bne.n	9000b7da <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b79e:	6822      	ldr	r2, [r4, #0]
9000b7a0:	4605      	mov	r5, r0
9000b7a2:	68d3      	ldr	r3, [r2, #12]
9000b7a4:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000b7a8:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000b7aa:	68d3      	ldr	r3, [r2, #12]
9000b7ac:	f023 0301 	bic.w	r3, r3, #1
9000b7b0:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b7b2:	e005      	b.n	9000b7c0 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b7b4:	f7fc ff1c 	bl	900085f0 <HAL_GetTick>
9000b7b8:	1b43      	subs	r3, r0, r5
9000b7ba:	2b05      	cmp	r3, #5
9000b7bc:	d814      	bhi.n	9000b7e8 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b7be:	6822      	ldr	r2, [r4, #0]
9000b7c0:	68d3      	ldr	r3, [r2, #12]
9000b7c2:	f013 0301 	ands.w	r3, r3, #1
9000b7c6:	d1f5      	bne.n	9000b7b4 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b7c8:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000b7ca:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b7cc:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000b7ce:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000b7d0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000b7d4:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000b7d8:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b7da:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000b7dc:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b7de:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000b7e0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000b7e4:	2001      	movs	r0, #1
}
9000b7e6:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b7e8:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000b7ea:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b7ec:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b7ee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000b7f2:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b7f6:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b7f8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000b7fc:	e7f2      	b.n	9000b7e4 <HAL_MDMA_Abort+0x58>
9000b7fe:	bf00      	nop

9000b800 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b800:	4603      	mov	r3, r0
9000b802:	b128      	cbz	r0, 9000b810 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b804:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000b808:	2a02      	cmp	r2, #2
9000b80a:	d003      	beq.n	9000b814 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b80c:	2280      	movs	r2, #128	@ 0x80
9000b80e:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000b810:	2001      	movs	r0, #1
9000b812:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b814:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b816:	2104      	movs	r1, #4
  return HAL_OK;
9000b818:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b81a:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b81e:	68d3      	ldr	r3, [r2, #12]
9000b820:	f023 0301 	bic.w	r3, r3, #1
9000b824:	60d3      	str	r3, [r2, #12]
}
9000b826:	4770      	bx	lr

9000b828 <HAL_MDMA_IRQHandler>:
{
9000b828:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b82a:	2300      	movs	r3, #0
{
9000b82c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b82e:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000b832:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b834:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b836:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b838:	4b57      	ldr	r3, [pc, #348]	@ (9000b998 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b83a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b83c:	4a57      	ldr	r2, [pc, #348]	@ (9000b99c <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b83e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b840:	6823      	ldr	r3, [r4, #0]
9000b842:	441a      	add	r2, r3
9000b844:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b848:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b84c:	4202      	tst	r2, r0
9000b84e:	f000 80a0 	beq.w	9000b992 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b852:	681a      	ldr	r2, [r3, #0]
9000b854:	07d1      	lsls	r1, r2, #31
9000b856:	d529      	bpl.n	9000b8ac <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b858:	68da      	ldr	r2, [r3, #12]
9000b85a:	0792      	lsls	r2, r2, #30
9000b85c:	d526      	bpl.n	9000b8ac <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b85e:	68da      	ldr	r2, [r3, #12]
9000b860:	f022 0202 	bic.w	r2, r2, #2
9000b864:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b866:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b868:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b86a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b86c:	bf54      	ite	pl
9000b86e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b872:	f041 0102 	orrmi.w	r1, r1, #2
9000b876:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b878:	0591      	lsls	r1, r2, #22
9000b87a:	d503      	bpl.n	9000b884 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b87c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b87e:	f041 0104 	orr.w	r1, r1, #4
9000b882:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b884:	05d0      	lsls	r0, r2, #23
9000b886:	d503      	bpl.n	9000b890 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b888:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b88a:	f041 0108 	orr.w	r1, r1, #8
9000b88e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b890:	0551      	lsls	r1, r2, #21
9000b892:	d503      	bpl.n	9000b89c <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b894:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b896:	f041 0110 	orr.w	r1, r1, #16
9000b89a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b89c:	0510      	lsls	r0, r2, #20
9000b89e:	d503      	bpl.n	9000b8a8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b8a0:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000b8a2:	f042 0220 	orr.w	r2, r2, #32
9000b8a6:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b8a8:	2201      	movs	r2, #1
9000b8aa:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b8ac:	681a      	ldr	r2, [r3, #0]
9000b8ae:	06d1      	lsls	r1, r2, #27
9000b8b0:	d509      	bpl.n	9000b8c6 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b8b2:	68da      	ldr	r2, [r3, #12]
9000b8b4:	0692      	lsls	r2, r2, #26
9000b8b6:	d506      	bpl.n	9000b8c6 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b8b8:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000b8ba:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b8bc:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000b8be:	b112      	cbz	r2, 9000b8c6 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000b8c0:	4620      	mov	r0, r4
9000b8c2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000b8c4:	6823      	ldr	r3, [r4, #0]
9000b8c6:	681a      	ldr	r2, [r3, #0]
9000b8c8:	0710      	lsls	r0, r2, #28
9000b8ca:	d509      	bpl.n	9000b8e0 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000b8cc:	68da      	ldr	r2, [r3, #12]
9000b8ce:	06d1      	lsls	r1, r2, #27
9000b8d0:	d506      	bpl.n	9000b8e0 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b8d2:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b8d4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b8d6:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b8d8:	b112      	cbz	r2, 9000b8e0 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b8da:	4620      	mov	r0, r4
9000b8dc:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b8de:	6823      	ldr	r3, [r4, #0]
9000b8e0:	681a      	ldr	r2, [r3, #0]
9000b8e2:	0752      	lsls	r2, r2, #29
9000b8e4:	d509      	bpl.n	9000b8fa <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b8e6:	68da      	ldr	r2, [r3, #12]
9000b8e8:	0710      	lsls	r0, r2, #28
9000b8ea:	d506      	bpl.n	9000b8fa <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b8ec:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b8ee:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b8f0:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b8f2:	b112      	cbz	r2, 9000b8fa <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b8f4:	4620      	mov	r0, r4
9000b8f6:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b8f8:	6823      	ldr	r3, [r4, #0]
9000b8fa:	681a      	ldr	r2, [r3, #0]
9000b8fc:	0791      	lsls	r1, r2, #30
9000b8fe:	d516      	bpl.n	9000b92e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b900:	68da      	ldr	r2, [r3, #12]
9000b902:	0752      	lsls	r2, r2, #29
9000b904:	d513      	bpl.n	9000b92e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b906:	68da      	ldr	r2, [r3, #12]
9000b908:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b90c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b90e:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b912:	2a04      	cmp	r2, #4
9000b914:	d034      	beq.n	9000b980 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b916:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b918:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b91a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b91c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b91e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b920:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b924:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b928:	b10b      	cbz	r3, 9000b92e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b92a:	4620      	mov	r0, r4
9000b92c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b92e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b930:	2b00      	cmp	r3, #0
9000b932:	d02e      	beq.n	9000b992 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b934:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b936:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b938:	4b19      	ldr	r3, [pc, #100]	@ (9000b9a0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b93a:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b93e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b942:	68cb      	ldr	r3, [r1, #12]
9000b944:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b948:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b94a:	60cb      	str	r3, [r1, #12]
9000b94c:	e002      	b.n	9000b954 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b94e:	68cb      	ldr	r3, [r1, #12]
9000b950:	07d8      	lsls	r0, r3, #31
9000b952:	d504      	bpl.n	9000b95e <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b954:	9b01      	ldr	r3, [sp, #4]
9000b956:	3301      	adds	r3, #1
9000b958:	4293      	cmp	r3, r2
9000b95a:	9301      	str	r3, [sp, #4]
9000b95c:	d9f7      	bls.n	9000b94e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b95e:	2300      	movs	r3, #0
9000b960:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b964:	68cb      	ldr	r3, [r1, #12]
9000b966:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b968:	bf4c      	ite	mi
9000b96a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b96c:	2301      	movpl	r3, #1
9000b96e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b972:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b974:	b16b      	cbz	r3, 9000b992 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b976:	4620      	mov	r0, r4
}
9000b978:	b003      	add	sp, #12
9000b97a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b97e:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b980:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b982:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b984:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b986:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b98a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b98e:	2b00      	cmp	r3, #0
9000b990:	d1f1      	bne.n	9000b976 <HAL_MDMA_IRQHandler+0x14e>
}
9000b992:	b003      	add	sp, #12
9000b994:	bd30      	pop	{r4, r5, pc}
9000b996:	bf00      	nop
9000b998:	24000078 	.word	0x24000078
9000b99c:	adffffc0 	.word	0xadffffc0
9000b9a0:	1b4e81b5 	.word	0x1b4e81b5

9000b9a4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000b9a4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b9a6:	4c10      	ldr	r4, [pc, #64]	@ (9000b9e8 <HAL_PWREx_ConfigSupply+0x44>)
9000b9a8:	68e3      	ldr	r3, [r4, #12]
9000b9aa:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b9ae:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b9b0:	d105      	bne.n	9000b9be <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b9b2:	f003 0307 	and.w	r3, r3, #7
9000b9b6:	1a18      	subs	r0, r3, r0
9000b9b8:	bf18      	it	ne
9000b9ba:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000b9bc:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000b9be:	f023 0307 	bic.w	r3, r3, #7
9000b9c2:	4303      	orrs	r3, r0
9000b9c4:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000b9c6:	f7fc fe13 	bl	900085f0 <HAL_GetTick>
9000b9ca:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b9cc:	e005      	b.n	9000b9da <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000b9ce:	f7fc fe0f 	bl	900085f0 <HAL_GetTick>
9000b9d2:	1b40      	subs	r0, r0, r5
9000b9d4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000b9d8:	d804      	bhi.n	9000b9e4 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b9da:	6863      	ldr	r3, [r4, #4]
9000b9dc:	049b      	lsls	r3, r3, #18
9000b9de:	d5f6      	bpl.n	9000b9ce <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000b9e0:	2000      	movs	r0, #0
}
9000b9e2:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000b9e4:	2001      	movs	r0, #1
}
9000b9e6:	bd38      	pop	{r3, r4, r5, pc}
9000b9e8:	58024800 	.word	0x58024800

9000b9ec <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b9ec:	4b33      	ldr	r3, [pc, #204]	@ (9000babc <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000b9ee:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b9f0:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b9f2:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b9f4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000b9f6:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b9fa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b9fc:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ba00:	d036      	beq.n	9000ba70 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ba02:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ba06:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ba0a:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba0e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ba12:	fb05 f202 	mul.w	r2, r5, r2
9000ba16:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba18:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000ba1c:	ee06 2a90 	vmov	s13, r2
9000ba20:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ba24:	d002      	beq.n	9000ba2c <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000ba26:	2902      	cmp	r1, #2
9000ba28:	d042      	beq.n	9000bab0 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000ba2a:	b319      	cbz	r1, 9000ba74 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba2c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000bac0 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000ba30:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000ba34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ba36:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ba3a:	ee07 3a90 	vmov	s15, r3
9000ba3e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ba42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ba46:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000ba4a:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000ba4e:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ba52:	4b1a      	ldr	r3, [pc, #104]	@ (9000babc <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000ba54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ba56:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ba5a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ba5c:	ee07 3a10 	vmov	s14, r3
9000ba60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000ba64:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000ba68:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000ba6c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000ba70:	bc30      	pop	{r4, r5}
9000ba72:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ba74:	681a      	ldr	r2, [r3, #0]
9000ba76:	0692      	lsls	r2, r2, #26
9000ba78:	d51d      	bpl.n	9000bab6 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ba7a:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba7c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ba80:	4a10      	ldr	r2, [pc, #64]	@ (9000bac4 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ba84:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba88:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ba8c:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ba8e:	ee07 3a90 	vmov	s15, r3
9000ba92:	ee06 2a10 	vmov	s12, r2
9000ba96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ba9a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ba9e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000baa2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000baa6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000baaa:	ee67 7a87 	vmul.f32	s15, s15, s14
9000baae:	e7d0      	b.n	9000ba52 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bab0:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bac8 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000bab4:	e7bc      	b.n	9000ba30 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bab6:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bacc <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000baba:	e7b9      	b.n	9000ba30 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000babc:	58024400 	.word	0x58024400
9000bac0:	4a742400 	.word	0x4a742400
9000bac4:	03d09000 	.word	0x03d09000
9000bac8:	4bbebc20 	.word	0x4bbebc20
9000bacc:	4c742400 	.word	0x4c742400

9000bad0 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000bad0:	2800      	cmp	r0, #0
9000bad2:	f000 82e9 	beq.w	9000c0a8 <HAL_RCC_OscConfig+0x5d8>
{
9000bad6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000bad8:	6803      	ldr	r3, [r0, #0]
9000bada:	4604      	mov	r4, r0
9000badc:	07d9      	lsls	r1, r3, #31
9000bade:	d52e      	bpl.n	9000bb3e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bae0:	4997      	ldr	r1, [pc, #604]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bae2:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bae4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bae6:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000baea:	2a10      	cmp	r2, #16
9000baec:	f000 80ee 	beq.w	9000bccc <HAL_RCC_OscConfig+0x1fc>
9000baf0:	2a18      	cmp	r2, #24
9000baf2:	f000 80e6 	beq.w	9000bcc2 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000baf6:	6863      	ldr	r3, [r4, #4]
9000baf8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000bafc:	f000 8111 	beq.w	9000bd22 <HAL_RCC_OscConfig+0x252>
9000bb00:	2b00      	cmp	r3, #0
9000bb02:	f000 8167 	beq.w	9000bdd4 <HAL_RCC_OscConfig+0x304>
9000bb06:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000bb0a:	4b8d      	ldr	r3, [pc, #564]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bb0c:	681a      	ldr	r2, [r3, #0]
9000bb0e:	f000 828a 	beq.w	9000c026 <HAL_RCC_OscConfig+0x556>
9000bb12:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000bb16:	601a      	str	r2, [r3, #0]
9000bb18:	681a      	ldr	r2, [r3, #0]
9000bb1a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000bb1e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000bb20:	f7fc fd66 	bl	900085f0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bb24:	4e86      	ldr	r6, [pc, #536]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000bb26:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bb28:	e005      	b.n	9000bb36 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000bb2a:	f7fc fd61 	bl	900085f0 <HAL_GetTick>
9000bb2e:	1b40      	subs	r0, r0, r5
9000bb30:	2864      	cmp	r0, #100	@ 0x64
9000bb32:	f200 814d 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bb36:	6833      	ldr	r3, [r6, #0]
9000bb38:	039b      	lsls	r3, r3, #14
9000bb3a:	d5f6      	bpl.n	9000bb2a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000bb3c:	6823      	ldr	r3, [r4, #0]
9000bb3e:	079d      	lsls	r5, r3, #30
9000bb40:	d470      	bmi.n	9000bc24 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bb42:	06d9      	lsls	r1, r3, #27
9000bb44:	d533      	bpl.n	9000bbae <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bb46:	4a7e      	ldr	r2, [pc, #504]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bb48:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bb4a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bb4c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000bb50:	2b08      	cmp	r3, #8
9000bb52:	f000 80cb 	beq.w	9000bcec <HAL_RCC_OscConfig+0x21c>
9000bb56:	2b18      	cmp	r3, #24
9000bb58:	f000 80c3 	beq.w	9000bce2 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000bb5c:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000bb5e:	4d78      	ldr	r5, [pc, #480]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000bb60:	2b00      	cmp	r3, #0
9000bb62:	f000 816f 	beq.w	9000be44 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000bb66:	682b      	ldr	r3, [r5, #0]
9000bb68:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000bb6c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bb6e:	f7fc fd3f 	bl	900085f0 <HAL_GetTick>
9000bb72:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bb74:	e005      	b.n	9000bb82 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000bb76:	f7fc fd3b 	bl	900085f0 <HAL_GetTick>
9000bb7a:	1b80      	subs	r0, r0, r6
9000bb7c:	2802      	cmp	r0, #2
9000bb7e:	f200 8127 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bb82:	682b      	ldr	r3, [r5, #0]
9000bb84:	05db      	lsls	r3, r3, #23
9000bb86:	d5f6      	bpl.n	9000bb76 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bb88:	f7fc fd38 	bl	900085fc <HAL_GetREVID>
9000bb8c:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bb90:	4298      	cmp	r0, r3
9000bb92:	f200 8269 	bhi.w	9000c068 <HAL_RCC_OscConfig+0x598>
9000bb96:	6a22      	ldr	r2, [r4, #32]
9000bb98:	686b      	ldr	r3, [r5, #4]
9000bb9a:	2a20      	cmp	r2, #32
9000bb9c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bba0:	bf0c      	ite	eq
9000bba2:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000bba6:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000bbaa:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bbac:	6823      	ldr	r3, [r4, #0]
9000bbae:	071d      	lsls	r5, r3, #28
9000bbb0:	d516      	bpl.n	9000bbe0 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bbb2:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000bbb4:	4d62      	ldr	r5, [pc, #392]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bbb6:	2b00      	cmp	r3, #0
9000bbb8:	f000 8122 	beq.w	9000be00 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000bbbc:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000bbbe:	f043 0301 	orr.w	r3, r3, #1
9000bbc2:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000bbc4:	f7fc fd14 	bl	900085f0 <HAL_GetTick>
9000bbc8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bbca:	e005      	b.n	9000bbd8 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000bbcc:	f7fc fd10 	bl	900085f0 <HAL_GetTick>
9000bbd0:	1b80      	subs	r0, r0, r6
9000bbd2:	2802      	cmp	r0, #2
9000bbd4:	f200 80fc 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bbd8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000bbda:	0798      	lsls	r0, r3, #30
9000bbdc:	d5f6      	bpl.n	9000bbcc <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000bbde:	6823      	ldr	r3, [r4, #0]
9000bbe0:	069a      	lsls	r2, r3, #26
9000bbe2:	d516      	bpl.n	9000bc12 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bbe4:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000bbe6:	4d56      	ldr	r5, [pc, #344]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bbe8:	2b00      	cmp	r3, #0
9000bbea:	f000 811a 	beq.w	9000be22 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000bbee:	682b      	ldr	r3, [r5, #0]
9000bbf0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000bbf4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bbf6:	f7fc fcfb 	bl	900085f0 <HAL_GetTick>
9000bbfa:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bbfc:	e005      	b.n	9000bc0a <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000bbfe:	f7fc fcf7 	bl	900085f0 <HAL_GetTick>
9000bc02:	1b80      	subs	r0, r0, r6
9000bc04:	2802      	cmp	r0, #2
9000bc06:	f200 80e3 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bc0a:	682b      	ldr	r3, [r5, #0]
9000bc0c:	049f      	lsls	r7, r3, #18
9000bc0e:	d5f6      	bpl.n	9000bbfe <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000bc10:	6823      	ldr	r3, [r4, #0]
9000bc12:	0759      	lsls	r1, r3, #29
9000bc14:	f100 808b 	bmi.w	9000bd2e <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000bc18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000bc1a:	2b00      	cmp	r3, #0
9000bc1c:	f040 80bf 	bne.w	9000bd9e <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000bc20:	2000      	movs	r0, #0
}
9000bc22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bc24:	4a46      	ldr	r2, [pc, #280]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bc26:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bc28:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bc2a:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000bc2e:	d12d      	bne.n	9000bc8c <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bc30:	4b43      	ldr	r3, [pc, #268]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bc32:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bc34:	681b      	ldr	r3, [r3, #0]
9000bc36:	0759      	lsls	r1, r3, #29
9000bc38:	d501      	bpl.n	9000bc3e <HAL_RCC_OscConfig+0x16e>
9000bc3a:	2a00      	cmp	r2, #0
9000bc3c:	d04f      	beq.n	9000bcde <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bc3e:	4d40      	ldr	r5, [pc, #256]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bc40:	682b      	ldr	r3, [r5, #0]
9000bc42:	f023 0319 	bic.w	r3, r3, #25
9000bc46:	4313      	orrs	r3, r2
9000bc48:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bc4a:	f7fc fcd1 	bl	900085f0 <HAL_GetTick>
9000bc4e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bc50:	e005      	b.n	9000bc5e <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bc52:	f7fc fccd 	bl	900085f0 <HAL_GetTick>
9000bc56:	1b80      	subs	r0, r0, r6
9000bc58:	2802      	cmp	r0, #2
9000bc5a:	f200 80b9 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bc5e:	682b      	ldr	r3, [r5, #0]
9000bc60:	075b      	lsls	r3, r3, #29
9000bc62:	d5f6      	bpl.n	9000bc52 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000bc64:	f7fc fcca 	bl	900085fc <HAL_GetREVID>
9000bc68:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bc6c:	4298      	cmp	r0, r3
9000bc6e:	f200 8110 	bhi.w	9000be92 <HAL_RCC_OscConfig+0x3c2>
9000bc72:	6922      	ldr	r2, [r4, #16]
9000bc74:	686b      	ldr	r3, [r5, #4]
9000bc76:	2a40      	cmp	r2, #64	@ 0x40
9000bc78:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000bc7c:	bf0c      	ite	eq
9000bc7e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000bc82:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000bc86:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bc88:	6823      	ldr	r3, [r4, #0]
9000bc8a:	e75a      	b.n	9000bb42 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bc8c:	2b18      	cmp	r3, #24
9000bc8e:	f000 80fc 	beq.w	9000be8a <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bc92:	4d2b      	ldr	r5, [pc, #172]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bc94:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bc96:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bc98:	2a00      	cmp	r2, #0
9000bc9a:	f000 80e5 	beq.w	9000be68 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bc9e:	f023 0319 	bic.w	r3, r3, #25
9000bca2:	4313      	orrs	r3, r2
9000bca4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bca6:	f7fc fca3 	bl	900085f0 <HAL_GetTick>
9000bcaa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bcac:	e005      	b.n	9000bcba <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bcae:	f7fc fc9f 	bl	900085f0 <HAL_GetTick>
9000bcb2:	1b80      	subs	r0, r0, r6
9000bcb4:	2802      	cmp	r0, #2
9000bcb6:	f200 808b 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bcba:	682b      	ldr	r3, [r5, #0]
9000bcbc:	075f      	lsls	r7, r3, #29
9000bcbe:	d5f6      	bpl.n	9000bcae <HAL_RCC_OscConfig+0x1de>
9000bcc0:	e7d0      	b.n	9000bc64 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bcc2:	f001 0103 	and.w	r1, r1, #3
9000bcc6:	2902      	cmp	r1, #2
9000bcc8:	f47f af15 	bne.w	9000baf6 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000bccc:	4a1c      	ldr	r2, [pc, #112]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bcce:	6812      	ldr	r2, [r2, #0]
9000bcd0:	0392      	lsls	r2, r2, #14
9000bcd2:	f57f af34 	bpl.w	9000bb3e <HAL_RCC_OscConfig+0x6e>
9000bcd6:	6862      	ldr	r2, [r4, #4]
9000bcd8:	2a00      	cmp	r2, #0
9000bcda:	f47f af30 	bne.w	9000bb3e <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000bcde:	2001      	movs	r0, #1
}
9000bce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000bce2:	f002 0203 	and.w	r2, r2, #3
9000bce6:	2a01      	cmp	r2, #1
9000bce8:	f47f af38 	bne.w	9000bb5c <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000bcec:	4b14      	ldr	r3, [pc, #80]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bcee:	681b      	ldr	r3, [r3, #0]
9000bcf0:	05da      	lsls	r2, r3, #23
9000bcf2:	d502      	bpl.n	9000bcfa <HAL_RCC_OscConfig+0x22a>
9000bcf4:	69e3      	ldr	r3, [r4, #28]
9000bcf6:	2b80      	cmp	r3, #128	@ 0x80
9000bcf8:	d1f1      	bne.n	9000bcde <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bcfa:	f7fc fc7f 	bl	900085fc <HAL_GetREVID>
9000bcfe:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bd02:	4298      	cmp	r0, r3
9000bd04:	f200 80ce 	bhi.w	9000bea4 <HAL_RCC_OscConfig+0x3d4>
9000bd08:	6a22      	ldr	r2, [r4, #32]
9000bd0a:	2a20      	cmp	r2, #32
9000bd0c:	f000 81bb 	beq.w	9000c086 <HAL_RCC_OscConfig+0x5b6>
9000bd10:	490b      	ldr	r1, [pc, #44]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bd12:	684b      	ldr	r3, [r1, #4]
9000bd14:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bd18:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000bd1c:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bd1e:	6823      	ldr	r3, [r4, #0]
9000bd20:	e745      	b.n	9000bbae <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bd22:	4a07      	ldr	r2, [pc, #28]	@ (9000bd40 <HAL_RCC_OscConfig+0x270>)
9000bd24:	6813      	ldr	r3, [r2, #0]
9000bd26:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000bd2a:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000bd2c:	e6f8      	b.n	9000bb20 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000bd2e:	4d05      	ldr	r5, [pc, #20]	@ (9000bd44 <HAL_RCC_OscConfig+0x274>)
9000bd30:	682b      	ldr	r3, [r5, #0]
9000bd32:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bd36:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000bd38:	f7fc fc5a 	bl	900085f0 <HAL_GetTick>
9000bd3c:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bd3e:	e008      	b.n	9000bd52 <HAL_RCC_OscConfig+0x282>
9000bd40:	58024400 	.word	0x58024400
9000bd44:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bd48:	f7fc fc52 	bl	900085f0 <HAL_GetTick>
9000bd4c:	1b80      	subs	r0, r0, r6
9000bd4e:	2864      	cmp	r0, #100	@ 0x64
9000bd50:	d83e      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bd52:	682b      	ldr	r3, [r5, #0]
9000bd54:	05da      	lsls	r2, r3, #23
9000bd56:	d5f7      	bpl.n	9000bd48 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bd58:	68a3      	ldr	r3, [r4, #8]
9000bd5a:	2b01      	cmp	r3, #1
9000bd5c:	f000 818d 	beq.w	9000c07a <HAL_RCC_OscConfig+0x5aa>
9000bd60:	2b00      	cmp	r3, #0
9000bd62:	f000 8168 	beq.w	9000c036 <HAL_RCC_OscConfig+0x566>
9000bd66:	2b05      	cmp	r3, #5
9000bd68:	4b85      	ldr	r3, [pc, #532]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
9000bd6a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000bd6c:	f000 8194 	beq.w	9000c098 <HAL_RCC_OscConfig+0x5c8>
9000bd70:	f022 0201 	bic.w	r2, r2, #1
9000bd74:	671a      	str	r2, [r3, #112]	@ 0x70
9000bd76:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000bd78:	f022 0204 	bic.w	r2, r2, #4
9000bd7c:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000bd7e:	f7fc fc37 	bl	900085f0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bd82:	4e7f      	ldr	r6, [pc, #508]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bd84:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000bd88:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bd8a:	e004      	b.n	9000bd96 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bd8c:	f7fc fc30 	bl	900085f0 <HAL_GetTick>
9000bd90:	1b40      	subs	r0, r0, r5
9000bd92:	42b8      	cmp	r0, r7
9000bd94:	d81c      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bd96:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000bd98:	079b      	lsls	r3, r3, #30
9000bd9a:	d5f7      	bpl.n	9000bd8c <HAL_RCC_OscConfig+0x2bc>
9000bd9c:	e73c      	b.n	9000bc18 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000bd9e:	4d78      	ldr	r5, [pc, #480]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
9000bda0:	692a      	ldr	r2, [r5, #16]
9000bda2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000bda6:	2a18      	cmp	r2, #24
9000bda8:	f000 80f0 	beq.w	9000bf8c <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bdac:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000bdae:	682b      	ldr	r3, [r5, #0]
9000bdb0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000bdb4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bdb6:	d07f      	beq.n	9000beb8 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000bdb8:	f7fc fc1a 	bl	900085f0 <HAL_GetTick>
9000bdbc:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bdbe:	682b      	ldr	r3, [r5, #0]
9000bdc0:	019b      	lsls	r3, r3, #6
9000bdc2:	f57f af2d 	bpl.w	9000bc20 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bdc6:	f7fc fc13 	bl	900085f0 <HAL_GetTick>
9000bdca:	1b00      	subs	r0, r0, r4
9000bdcc:	2802      	cmp	r0, #2
9000bdce:	d9f6      	bls.n	9000bdbe <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000bdd0:	2003      	movs	r0, #3
}
9000bdd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bdd4:	4d6a      	ldr	r5, [pc, #424]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
9000bdd6:	682b      	ldr	r3, [r5, #0]
9000bdd8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000bddc:	602b      	str	r3, [r5, #0]
9000bdde:	682b      	ldr	r3, [r5, #0]
9000bde0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000bde4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bde6:	f7fc fc03 	bl	900085f0 <HAL_GetTick>
9000bdea:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000bdec:	e004      	b.n	9000bdf8 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000bdee:	f7fc fbff 	bl	900085f0 <HAL_GetTick>
9000bdf2:	1b80      	subs	r0, r0, r6
9000bdf4:	2864      	cmp	r0, #100	@ 0x64
9000bdf6:	d8eb      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000bdf8:	682b      	ldr	r3, [r5, #0]
9000bdfa:	039f      	lsls	r7, r3, #14
9000bdfc:	d4f7      	bmi.n	9000bdee <HAL_RCC_OscConfig+0x31e>
9000bdfe:	e69d      	b.n	9000bb3c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000be00:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000be02:	f023 0301 	bic.w	r3, r3, #1
9000be06:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000be08:	f7fc fbf2 	bl	900085f0 <HAL_GetTick>
9000be0c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000be0e:	e004      	b.n	9000be1a <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000be10:	f7fc fbee 	bl	900085f0 <HAL_GetTick>
9000be14:	1b80      	subs	r0, r0, r6
9000be16:	2802      	cmp	r0, #2
9000be18:	d8da      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000be1a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000be1c:	0799      	lsls	r1, r3, #30
9000be1e:	d4f7      	bmi.n	9000be10 <HAL_RCC_OscConfig+0x340>
9000be20:	e6dd      	b.n	9000bbde <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000be22:	682b      	ldr	r3, [r5, #0]
9000be24:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000be28:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000be2a:	f7fc fbe1 	bl	900085f0 <HAL_GetTick>
9000be2e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000be30:	e004      	b.n	9000be3c <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000be32:	f7fc fbdd 	bl	900085f0 <HAL_GetTick>
9000be36:	1b80      	subs	r0, r0, r6
9000be38:	2802      	cmp	r0, #2
9000be3a:	d8c9      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000be3c:	682b      	ldr	r3, [r5, #0]
9000be3e:	0498      	lsls	r0, r3, #18
9000be40:	d4f7      	bmi.n	9000be32 <HAL_RCC_OscConfig+0x362>
9000be42:	e6e5      	b.n	9000bc10 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000be44:	682b      	ldr	r3, [r5, #0]
9000be46:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000be4a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be4c:	f7fc fbd0 	bl	900085f0 <HAL_GetTick>
9000be50:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000be52:	e004      	b.n	9000be5e <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000be54:	f7fc fbcc 	bl	900085f0 <HAL_GetTick>
9000be58:	1b80      	subs	r0, r0, r6
9000be5a:	2802      	cmp	r0, #2
9000be5c:	d8b8      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000be5e:	682b      	ldr	r3, [r5, #0]
9000be60:	05df      	lsls	r7, r3, #23
9000be62:	d4f7      	bmi.n	9000be54 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000be64:	6823      	ldr	r3, [r4, #0]
9000be66:	e6a2      	b.n	9000bbae <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000be68:	f023 0301 	bic.w	r3, r3, #1
9000be6c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be6e:	f7fc fbbf 	bl	900085f0 <HAL_GetTick>
9000be72:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000be74:	e004      	b.n	9000be80 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000be76:	f7fc fbbb 	bl	900085f0 <HAL_GetTick>
9000be7a:	1b80      	subs	r0, r0, r6
9000be7c:	2802      	cmp	r0, #2
9000be7e:	d8a7      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000be80:	682b      	ldr	r3, [r5, #0]
9000be82:	0758      	lsls	r0, r3, #29
9000be84:	d4f7      	bmi.n	9000be76 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000be86:	6823      	ldr	r3, [r4, #0]
9000be88:	e65b      	b.n	9000bb42 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000be8a:	0790      	lsls	r0, r2, #30
9000be8c:	f47f af01 	bne.w	9000bc92 <HAL_RCC_OscConfig+0x1c2>
9000be90:	e6ce      	b.n	9000bc30 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000be92:	686b      	ldr	r3, [r5, #4]
9000be94:	6922      	ldr	r2, [r4, #16]
9000be96:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000be9a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000be9e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bea0:	6823      	ldr	r3, [r4, #0]
9000bea2:	e64e      	b.n	9000bb42 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bea4:	4a36      	ldr	r2, [pc, #216]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
9000bea6:	6a21      	ldr	r1, [r4, #32]
9000bea8:	68d3      	ldr	r3, [r2, #12]
9000beaa:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000beae:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000beb2:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000beb4:	6823      	ldr	r3, [r4, #0]
9000beb6:	e67a      	b.n	9000bbae <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000beb8:	f7fc fb9a 	bl	900085f0 <HAL_GetTick>
9000bebc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bebe:	e004      	b.n	9000beca <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bec0:	f7fc fb96 	bl	900085f0 <HAL_GetTick>
9000bec4:	1b80      	subs	r0, r0, r6
9000bec6:	2802      	cmp	r0, #2
9000bec8:	d882      	bhi.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000beca:	682b      	ldr	r3, [r5, #0]
9000becc:	0199      	lsls	r1, r3, #6
9000bece:	d4f7      	bmi.n	9000bec0 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000bed0:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000bed2:	4b2c      	ldr	r3, [pc, #176]	@ (9000bf84 <HAL_RCC_OscConfig+0x4b4>)
9000bed4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000bed6:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000bed8:	492b      	ldr	r1, [pc, #172]	@ (9000bf88 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000beda:	4e29      	ldr	r6, [pc, #164]	@ (9000bf80 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000bedc:	4313      	orrs	r3, r2
9000bede:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000bee0:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000bee4:	62ab      	str	r3, [r5, #40]	@ 0x28
9000bee6:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000beea:	3b01      	subs	r3, #1
9000beec:	3a01      	subs	r2, #1
9000beee:	025b      	lsls	r3, r3, #9
9000bef0:	0412      	lsls	r2, r2, #16
9000bef2:	b29b      	uxth	r3, r3
9000bef4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000bef8:	4313      	orrs	r3, r2
9000befa:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000befc:	3a01      	subs	r2, #1
9000befe:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000bf02:	4313      	orrs	r3, r2
9000bf04:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000bf06:	3a01      	subs	r2, #1
9000bf08:	0612      	lsls	r2, r2, #24
9000bf0a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000bf0e:	4313      	orrs	r3, r2
9000bf10:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000bf12:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf14:	f023 0301 	bic.w	r3, r3, #1
9000bf18:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000bf1a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000bf1c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000bf1e:	4011      	ands	r1, r2
9000bf20:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000bf24:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000bf26:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf28:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000bf2a:	f023 030c 	bic.w	r3, r3, #12
9000bf2e:	4313      	orrs	r3, r2
9000bf30:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000bf32:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf34:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000bf36:	f023 0302 	bic.w	r3, r3, #2
9000bf3a:	4313      	orrs	r3, r2
9000bf3c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000bf3e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf40:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000bf44:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf46:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf48:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000bf4c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000bf4e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf50:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000bf54:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000bf56:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bf58:	f043 0301 	orr.w	r3, r3, #1
9000bf5c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000bf5e:	682b      	ldr	r3, [r5, #0]
9000bf60:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000bf64:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bf66:	f7fc fb43 	bl	900085f0 <HAL_GetTick>
9000bf6a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000bf6c:	6833      	ldr	r3, [r6, #0]
9000bf6e:	019a      	lsls	r2, r3, #6
9000bf70:	f53f ae56 	bmi.w	9000bc20 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bf74:	f7fc fb3c 	bl	900085f0 <HAL_GetTick>
9000bf78:	1b00      	subs	r0, r0, r4
9000bf7a:	2802      	cmp	r0, #2
9000bf7c:	d9f6      	bls.n	9000bf6c <HAL_RCC_OscConfig+0x49c>
9000bf7e:	e727      	b.n	9000bdd0 <HAL_RCC_OscConfig+0x300>
9000bf80:	58024400 	.word	0x58024400
9000bf84:	fffffc0c 	.word	0xfffffc0c
9000bf88:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bf8c:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000bf8e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000bf90:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bf92:	f43f aea4 	beq.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000bf96:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bf9a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000bf9c:	428b      	cmp	r3, r1
9000bf9e:	f47f ae9e 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000bfa2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000bfa6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bfa8:	429a      	cmp	r2, r3
9000bfaa:	f47f ae98 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000bfae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000bfb0:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000bfb4:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000bfb6:	429a      	cmp	r2, r3
9000bfb8:	f47f ae91 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000bfbc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000bfbe:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000bfc2:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000bfc4:	429a      	cmp	r2, r3
9000bfc6:	f47f ae8a 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000bfca:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000bfcc:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000bfd0:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000bfd2:	429a      	cmp	r2, r3
9000bfd4:	f47f ae83 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000bfd8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000bfda:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000bfde:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000bfe0:	4298      	cmp	r0, r3
9000bfe2:	f47f ae7c 	bne.w	9000bcde <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000bfe6:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bfe8:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000bfea:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bfee:	429a      	cmp	r2, r3
9000bff0:	f43f ae16 	beq.w	9000bc20 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000bff4:	4a2d      	ldr	r2, [pc, #180]	@ (9000c0ac <HAL_RCC_OscConfig+0x5dc>)
9000bff6:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000bff8:	f023 0301 	bic.w	r3, r3, #1
9000bffc:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000bffe:	f7fc faf7 	bl	900085f0 <HAL_GetTick>
9000c002:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c004:	f7fc faf4 	bl	900085f0 <HAL_GetTick>
9000c008:	42a8      	cmp	r0, r5
9000c00a:	d0fb      	beq.n	9000c004 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c00c:	4a27      	ldr	r2, [pc, #156]	@ (9000c0ac <HAL_RCC_OscConfig+0x5dc>)
9000c00e:	4b28      	ldr	r3, [pc, #160]	@ (9000c0b0 <HAL_RCC_OscConfig+0x5e0>)
9000c010:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000c012:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c014:	4003      	ands	r3, r0
9000c016:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c01a:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c01c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000c01e:	f043 0301 	orr.w	r3, r3, #1
9000c022:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000c024:	e5fc      	b.n	9000bc20 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c026:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000c02a:	601a      	str	r2, [r3, #0]
9000c02c:	681a      	ldr	r2, [r3, #0]
9000c02e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000c032:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c034:	e574      	b.n	9000bb20 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c036:	4d1d      	ldr	r5, [pc, #116]	@ (9000c0ac <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c038:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c03c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c03e:	f023 0301 	bic.w	r3, r3, #1
9000c042:	672b      	str	r3, [r5, #112]	@ 0x70
9000c044:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c046:	f023 0304 	bic.w	r3, r3, #4
9000c04a:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000c04c:	f7fc fad0 	bl	900085f0 <HAL_GetTick>
9000c050:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c052:	e005      	b.n	9000c060 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c054:	f7fc facc 	bl	900085f0 <HAL_GetTick>
9000c058:	1b80      	subs	r0, r0, r6
9000c05a:	42b8      	cmp	r0, r7
9000c05c:	f63f aeb8 	bhi.w	9000bdd0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c060:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c062:	0798      	lsls	r0, r3, #30
9000c064:	d4f6      	bmi.n	9000c054 <HAL_RCC_OscConfig+0x584>
9000c066:	e5d7      	b.n	9000bc18 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c068:	68eb      	ldr	r3, [r5, #12]
9000c06a:	6a22      	ldr	r2, [r4, #32]
9000c06c:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000c070:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c074:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c076:	6823      	ldr	r3, [r4, #0]
9000c078:	e599      	b.n	9000bbae <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c07a:	4a0c      	ldr	r2, [pc, #48]	@ (9000c0ac <HAL_RCC_OscConfig+0x5dc>)
9000c07c:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000c07e:	f043 0301 	orr.w	r3, r3, #1
9000c082:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c084:	e67b      	b.n	9000bd7e <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c086:	4a09      	ldr	r2, [pc, #36]	@ (9000c0ac <HAL_RCC_OscConfig+0x5dc>)
9000c088:	6853      	ldr	r3, [r2, #4]
9000c08a:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c08e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000c092:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c094:	6823      	ldr	r3, [r4, #0]
9000c096:	e58a      	b.n	9000bbae <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c098:	f042 0204 	orr.w	r2, r2, #4
9000c09c:	671a      	str	r2, [r3, #112]	@ 0x70
9000c09e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c0a0:	f042 0201 	orr.w	r2, r2, #1
9000c0a4:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c0a6:	e66a      	b.n	9000bd7e <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000c0a8:	2001      	movs	r0, #1
}
9000c0aa:	4770      	bx	lr
9000c0ac:	58024400 	.word	0x58024400
9000c0b0:	ffff0007 	.word	0xffff0007

9000c0b4 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c0b4:	4a3f      	ldr	r2, [pc, #252]	@ (9000c1b4 <HAL_RCC_GetSysClockFreq+0x100>)
9000c0b6:	6913      	ldr	r3, [r2, #16]
9000c0b8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c0bc:	2b10      	cmp	r3, #16
9000c0be:	d004      	beq.n	9000c0ca <HAL_RCC_GetSysClockFreq+0x16>
9000c0c0:	2b18      	cmp	r3, #24
9000c0c2:	d00d      	beq.n	9000c0e0 <HAL_RCC_GetSysClockFreq+0x2c>
9000c0c4:	b11b      	cbz	r3, 9000c0ce <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000c0c6:	483c      	ldr	r0, [pc, #240]	@ (9000c1b8 <HAL_RCC_GetSysClockFreq+0x104>)
9000c0c8:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c0ca:	483c      	ldr	r0, [pc, #240]	@ (9000c1bc <HAL_RCC_GetSysClockFreq+0x108>)
9000c0cc:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c0ce:	6813      	ldr	r3, [r2, #0]
9000c0d0:	0699      	lsls	r1, r3, #26
9000c0d2:	d548      	bpl.n	9000c166 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c0d4:	6813      	ldr	r3, [r2, #0]
9000c0d6:	483a      	ldr	r0, [pc, #232]	@ (9000c1c0 <HAL_RCC_GetSysClockFreq+0x10c>)
9000c0d8:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c0dc:	40d8      	lsrs	r0, r3
9000c0de:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c0e0:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000c0e2:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c0e4:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c0e6:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000c0e8:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c0ec:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c0ee:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c0f2:	d036      	beq.n	9000c162 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c0f4:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c0f8:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c0fc:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c100:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c104:	fb05 f303 	mul.w	r3, r5, r3
9000c108:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c10a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c10e:	ee06 3a90 	vmov	s13, r3
9000c112:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000c116:	d002      	beq.n	9000c11e <HAL_RCC_GetSysClockFreq+0x6a>
9000c118:	2902      	cmp	r1, #2
9000c11a:	d026      	beq.n	9000c16a <HAL_RCC_GetSysClockFreq+0xb6>
9000c11c:	b341      	cbz	r1, 9000c170 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c11e:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000c1c4 <HAL_RCC_GetSysClockFreq+0x110>
9000c122:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000c126:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000c128:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c12c:	ee07 3a10 	vmov	s14, r3
9000c130:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c134:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c138:	ee37 7a26 	vadd.f32	s14, s14, s13
9000c13c:	ee37 7a25 	vadd.f32	s14, s14, s11
9000c140:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c144:	4b1b      	ldr	r3, [pc, #108]	@ (9000c1b4 <HAL_RCC_GetSysClockFreq+0x100>)
9000c146:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c148:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c14c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c14e:	ee07 3a90 	vmov	s15, r3
9000c152:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000c156:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000c15a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c15e:	ee17 0a90 	vmov	r0, s15
}
9000c162:	bc30      	pop	{r4, r5}
9000c164:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c166:	4816      	ldr	r0, [pc, #88]	@ (9000c1c0 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000c168:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c16a:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000c1c8 <HAL_RCC_GetSysClockFreq+0x114>
9000c16e:	e7d8      	b.n	9000c122 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c170:	6813      	ldr	r3, [r2, #0]
9000c172:	069b      	lsls	r3, r3, #26
9000c174:	d51a      	bpl.n	9000c1ac <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c176:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c178:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c17c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c17e:	4910      	ldr	r1, [pc, #64]	@ (9000c1c0 <HAL_RCC_GetSysClockFreq+0x10c>)
9000c180:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c184:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c188:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c18a:	ee07 3a10 	vmov	s14, r3
9000c18e:	ee06 1a10 	vmov	s12, r1
9000c192:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c196:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c19a:	ee77 6a26 	vadd.f32	s13, s14, s13
9000c19e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c1a2:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000c1a6:	ee27 7a27 	vmul.f32	s14, s14, s15
9000c1aa:	e7cb      	b.n	9000c144 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c1ac:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000c1cc <HAL_RCC_GetSysClockFreq+0x118>
9000c1b0:	e7b7      	b.n	9000c122 <HAL_RCC_GetSysClockFreq+0x6e>
9000c1b2:	bf00      	nop
9000c1b4:	58024400 	.word	0x58024400
9000c1b8:	003d0900 	.word	0x003d0900
9000c1bc:	017d7840 	.word	0x017d7840
9000c1c0:	03d09000 	.word	0x03d09000
9000c1c4:	4a742400 	.word	0x4a742400
9000c1c8:	4bbebc20 	.word	0x4bbebc20
9000c1cc:	4c742400 	.word	0x4c742400

9000c1d0 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c1d0:	2800      	cmp	r0, #0
9000c1d2:	f000 810e 	beq.w	9000c3f2 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c1d6:	4a8d      	ldr	r2, [pc, #564]	@ (9000c40c <HAL_RCC_ClockConfig+0x23c>)
9000c1d8:	6813      	ldr	r3, [r2, #0]
9000c1da:	f003 030f 	and.w	r3, r3, #15
9000c1de:	428b      	cmp	r3, r1
{
9000c1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c1e4:	4604      	mov	r4, r0
9000c1e6:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c1e8:	d20c      	bcs.n	9000c204 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c1ea:	6813      	ldr	r3, [r2, #0]
9000c1ec:	f023 030f 	bic.w	r3, r3, #15
9000c1f0:	430b      	orrs	r3, r1
9000c1f2:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c1f4:	6813      	ldr	r3, [r2, #0]
9000c1f6:	f003 030f 	and.w	r3, r3, #15
9000c1fa:	428b      	cmp	r3, r1
9000c1fc:	d002      	beq.n	9000c204 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c1fe:	2001      	movs	r0, #1
}
9000c200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c204:	6823      	ldr	r3, [r4, #0]
9000c206:	0758      	lsls	r0, r3, #29
9000c208:	d50b      	bpl.n	9000c222 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c20a:	4981      	ldr	r1, [pc, #516]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c20c:	6920      	ldr	r0, [r4, #16]
9000c20e:	698a      	ldr	r2, [r1, #24]
9000c210:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c214:	4290      	cmp	r0, r2
9000c216:	d904      	bls.n	9000c222 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c218:	698a      	ldr	r2, [r1, #24]
9000c21a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c21e:	4302      	orrs	r2, r0
9000c220:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c222:	0719      	lsls	r1, r3, #28
9000c224:	d50b      	bpl.n	9000c23e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c226:	497a      	ldr	r1, [pc, #488]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c228:	6960      	ldr	r0, [r4, #20]
9000c22a:	69ca      	ldr	r2, [r1, #28]
9000c22c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c230:	4290      	cmp	r0, r2
9000c232:	d904      	bls.n	9000c23e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c234:	69ca      	ldr	r2, [r1, #28]
9000c236:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c23a:	4302      	orrs	r2, r0
9000c23c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c23e:	06da      	lsls	r2, r3, #27
9000c240:	d50b      	bpl.n	9000c25a <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c242:	4973      	ldr	r1, [pc, #460]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c244:	69a0      	ldr	r0, [r4, #24]
9000c246:	69ca      	ldr	r2, [r1, #28]
9000c248:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c24c:	4290      	cmp	r0, r2
9000c24e:	d904      	bls.n	9000c25a <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c250:	69ca      	ldr	r2, [r1, #28]
9000c252:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c256:	4302      	orrs	r2, r0
9000c258:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c25a:	069f      	lsls	r7, r3, #26
9000c25c:	d50b      	bpl.n	9000c276 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c25e:	496c      	ldr	r1, [pc, #432]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c260:	69e0      	ldr	r0, [r4, #28]
9000c262:	6a0a      	ldr	r2, [r1, #32]
9000c264:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c268:	4290      	cmp	r0, r2
9000c26a:	d904      	bls.n	9000c276 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c26c:	6a0a      	ldr	r2, [r1, #32]
9000c26e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c272:	4302      	orrs	r2, r0
9000c274:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c276:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c278:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c27c:	f140 80ab 	bpl.w	9000c3d6 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c280:	4e63      	ldr	r6, [pc, #396]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c282:	68e0      	ldr	r0, [r4, #12]
9000c284:	69b1      	ldr	r1, [r6, #24]
9000c286:	f001 010f 	and.w	r1, r1, #15
9000c28a:	4288      	cmp	r0, r1
9000c28c:	d904      	bls.n	9000c298 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c28e:	69b1      	ldr	r1, [r6, #24]
9000c290:	f021 010f 	bic.w	r1, r1, #15
9000c294:	4301      	orrs	r1, r0
9000c296:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c298:	2a00      	cmp	r2, #0
9000c29a:	d030      	beq.n	9000c2fe <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000c29c:	4a5c      	ldr	r2, [pc, #368]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c29e:	68a1      	ldr	r1, [r4, #8]
9000c2a0:	6993      	ldr	r3, [r2, #24]
9000c2a2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000c2a6:	430b      	orrs	r3, r1
9000c2a8:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c2aa:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c2ac:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c2ae:	2902      	cmp	r1, #2
9000c2b0:	f000 80a1 	beq.w	9000c3f6 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000c2b4:	2903      	cmp	r1, #3
9000c2b6:	f000 8098 	beq.w	9000c3ea <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000c2ba:	2901      	cmp	r1, #1
9000c2bc:	f000 80a1 	beq.w	9000c402 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c2c0:	075f      	lsls	r7, r3, #29
9000c2c2:	d59c      	bpl.n	9000c1fe <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c2c4:	4e52      	ldr	r6, [pc, #328]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c2c6:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c2ca:	6933      	ldr	r3, [r6, #16]
9000c2cc:	f023 0307 	bic.w	r3, r3, #7
9000c2d0:	430b      	orrs	r3, r1
9000c2d2:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000c2d4:	f7fc f98c 	bl	900085f0 <HAL_GetTick>
9000c2d8:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c2da:	e005      	b.n	9000c2e8 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c2dc:	f7fc f988 	bl	900085f0 <HAL_GetTick>
9000c2e0:	1bc0      	subs	r0, r0, r7
9000c2e2:	4540      	cmp	r0, r8
9000c2e4:	f200 808b 	bhi.w	9000c3fe <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c2e8:	6933      	ldr	r3, [r6, #16]
9000c2ea:	6862      	ldr	r2, [r4, #4]
9000c2ec:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c2f0:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000c2f4:	d1f2      	bne.n	9000c2dc <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c2f6:	6823      	ldr	r3, [r4, #0]
9000c2f8:	079e      	lsls	r6, r3, #30
9000c2fa:	d506      	bpl.n	9000c30a <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c2fc:	68e0      	ldr	r0, [r4, #12]
9000c2fe:	4944      	ldr	r1, [pc, #272]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c300:	698a      	ldr	r2, [r1, #24]
9000c302:	f002 020f 	and.w	r2, r2, #15
9000c306:	4282      	cmp	r2, r0
9000c308:	d869      	bhi.n	9000c3de <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000c30a:	4940      	ldr	r1, [pc, #256]	@ (9000c40c <HAL_RCC_ClockConfig+0x23c>)
9000c30c:	680a      	ldr	r2, [r1, #0]
9000c30e:	f002 020f 	and.w	r2, r2, #15
9000c312:	42aa      	cmp	r2, r5
9000c314:	d90a      	bls.n	9000c32c <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c316:	680a      	ldr	r2, [r1, #0]
9000c318:	f022 020f 	bic.w	r2, r2, #15
9000c31c:	432a      	orrs	r2, r5
9000c31e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c320:	680a      	ldr	r2, [r1, #0]
9000c322:	f002 020f 	and.w	r2, r2, #15
9000c326:	42aa      	cmp	r2, r5
9000c328:	f47f af69 	bne.w	9000c1fe <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c32c:	0758      	lsls	r0, r3, #29
9000c32e:	d50b      	bpl.n	9000c348 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c330:	4937      	ldr	r1, [pc, #220]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c332:	6920      	ldr	r0, [r4, #16]
9000c334:	698a      	ldr	r2, [r1, #24]
9000c336:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c33a:	4290      	cmp	r0, r2
9000c33c:	d204      	bcs.n	9000c348 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c33e:	698a      	ldr	r2, [r1, #24]
9000c340:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c344:	4302      	orrs	r2, r0
9000c346:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c348:	0719      	lsls	r1, r3, #28
9000c34a:	d50b      	bpl.n	9000c364 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c34c:	4930      	ldr	r1, [pc, #192]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c34e:	6960      	ldr	r0, [r4, #20]
9000c350:	69ca      	ldr	r2, [r1, #28]
9000c352:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c356:	4290      	cmp	r0, r2
9000c358:	d204      	bcs.n	9000c364 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c35a:	69ca      	ldr	r2, [r1, #28]
9000c35c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c360:	4302      	orrs	r2, r0
9000c362:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c364:	06da      	lsls	r2, r3, #27
9000c366:	d50b      	bpl.n	9000c380 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c368:	4929      	ldr	r1, [pc, #164]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c36a:	69a0      	ldr	r0, [r4, #24]
9000c36c:	69ca      	ldr	r2, [r1, #28]
9000c36e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c372:	4290      	cmp	r0, r2
9000c374:	d204      	bcs.n	9000c380 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c376:	69ca      	ldr	r2, [r1, #28]
9000c378:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c37c:	4302      	orrs	r2, r0
9000c37e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c380:	069b      	lsls	r3, r3, #26
9000c382:	d50b      	bpl.n	9000c39c <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c384:	4a22      	ldr	r2, [pc, #136]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c386:	69e1      	ldr	r1, [r4, #28]
9000c388:	6a13      	ldr	r3, [r2, #32]
9000c38a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c38e:	4299      	cmp	r1, r3
9000c390:	d204      	bcs.n	9000c39c <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c392:	6a13      	ldr	r3, [r2, #32]
9000c394:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000c398:	430b      	orrs	r3, r1
9000c39a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c39c:	f7ff fe8a 	bl	9000c0b4 <HAL_RCC_GetSysClockFreq>
9000c3a0:	4a1b      	ldr	r2, [pc, #108]	@ (9000c410 <HAL_RCC_ClockConfig+0x240>)
9000c3a2:	4603      	mov	r3, r0
9000c3a4:	481b      	ldr	r0, [pc, #108]	@ (9000c414 <HAL_RCC_ClockConfig+0x244>)
9000c3a6:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c3a8:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c3aa:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c3ae:	4d1a      	ldr	r5, [pc, #104]	@ (9000c418 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c3b0:	f002 020f 	and.w	r2, r2, #15
9000c3b4:	4c19      	ldr	r4, [pc, #100]	@ (9000c41c <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c3b6:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c3b8:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c3ba:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c3be:	4818      	ldr	r0, [pc, #96]	@ (9000c420 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c3c0:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c3c4:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c3c6:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c3c8:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c3ca:	40d3      	lsrs	r3, r2
9000c3cc:	6023      	str	r3, [r4, #0]
}
9000c3ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c3d2:	f7f7 bfab 	b.w	9000432c <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c3d6:	2a00      	cmp	r2, #0
9000c3d8:	f47f af60 	bne.w	9000c29c <HAL_RCC_ClockConfig+0xcc>
9000c3dc:	e795      	b.n	9000c30a <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c3de:	698a      	ldr	r2, [r1, #24]
9000c3e0:	f022 020f 	bic.w	r2, r2, #15
9000c3e4:	4302      	orrs	r2, r0
9000c3e6:	618a      	str	r2, [r1, #24]
9000c3e8:	e78f      	b.n	9000c30a <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c3ea:	019a      	lsls	r2, r3, #6
9000c3ec:	f53f af6a 	bmi.w	9000c2c4 <HAL_RCC_ClockConfig+0xf4>
9000c3f0:	e705      	b.n	9000c1fe <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c3f2:	2001      	movs	r0, #1
}
9000c3f4:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c3f6:	0398      	lsls	r0, r3, #14
9000c3f8:	f53f af64 	bmi.w	9000c2c4 <HAL_RCC_ClockConfig+0xf4>
9000c3fc:	e6ff      	b.n	9000c1fe <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c3fe:	2003      	movs	r0, #3
9000c400:	e6fe      	b.n	9000c200 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c402:	05db      	lsls	r3, r3, #23
9000c404:	f53f af5e 	bmi.w	9000c2c4 <HAL_RCC_ClockConfig+0xf4>
9000c408:	e6f9      	b.n	9000c1fe <HAL_RCC_ClockConfig+0x2e>
9000c40a:	bf00      	nop
9000c40c:	52002000 	.word	0x52002000
9000c410:	58024400 	.word	0x58024400
9000c414:	9002deb0 	.word	0x9002deb0
9000c418:	24000078 	.word	0x24000078
9000c41c:	24000074 	.word	0x24000074
9000c420:	24000080 	.word	0x24000080

9000c424 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c424:	4a1c      	ldr	r2, [pc, #112]	@ (9000c498 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c426:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c428:	6913      	ldr	r3, [r2, #16]
9000c42a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c42e:	2b10      	cmp	r3, #16
9000c430:	d020      	beq.n	9000c474 <HAL_RCC_GetPCLK1Freq+0x50>
9000c432:	2b18      	cmp	r3, #24
9000c434:	d029      	beq.n	9000c48a <HAL_RCC_GetPCLK1Freq+0x66>
9000c436:	b1fb      	cbz	r3, 9000c478 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000c438:	4b18      	ldr	r3, [pc, #96]	@ (9000c49c <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c43a:	4a17      	ldr	r2, [pc, #92]	@ (9000c498 <HAL_RCC_GetPCLK1Freq+0x74>)
9000c43c:	4918      	ldr	r1, [pc, #96]	@ (9000c4a0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c43e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c440:	4d18      	ldr	r5, [pc, #96]	@ (9000c4a4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c442:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c446:	4c18      	ldr	r4, [pc, #96]	@ (9000c4a8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c448:	5c08      	ldrb	r0, [r1, r0]
9000c44a:	f000 001f 	and.w	r0, r0, #31
9000c44e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c450:	6990      	ldr	r0, [r2, #24]
9000c452:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c456:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c458:	5c08      	ldrb	r0, [r1, r0]
9000c45a:	f000 001f 	and.w	r0, r0, #31
9000c45e:	40c3      	lsrs	r3, r0
9000c460:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c462:	69d2      	ldr	r2, [r2, #28]
9000c464:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c468:	5c88      	ldrb	r0, [r1, r2]
9000c46a:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c46e:	fa23 f000 	lsr.w	r0, r3, r0
9000c472:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c474:	4b0d      	ldr	r3, [pc, #52]	@ (9000c4ac <HAL_RCC_GetPCLK1Freq+0x88>)
9000c476:	e7e0      	b.n	9000c43a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c478:	6813      	ldr	r3, [r2, #0]
9000c47a:	069b      	lsls	r3, r3, #26
9000c47c:	d509      	bpl.n	9000c492 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c47e:	6812      	ldr	r2, [r2, #0]
9000c480:	4b0b      	ldr	r3, [pc, #44]	@ (9000c4b0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c482:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c486:	40d3      	lsrs	r3, r2
9000c488:	e7d7      	b.n	9000c43a <HAL_RCC_GetPCLK1Freq+0x16>
9000c48a:	f7ff faaf 	bl	9000b9ec <HAL_RCC_GetSysClockFreq.part.0>
9000c48e:	4603      	mov	r3, r0
9000c490:	e7d3      	b.n	9000c43a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c492:	4b07      	ldr	r3, [pc, #28]	@ (9000c4b0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c494:	e7d1      	b.n	9000c43a <HAL_RCC_GetPCLK1Freq+0x16>
9000c496:	bf00      	nop
9000c498:	58024400 	.word	0x58024400
9000c49c:	003d0900 	.word	0x003d0900
9000c4a0:	9002deb0 	.word	0x9002deb0
9000c4a4:	24000078 	.word	0x24000078
9000c4a8:	24000074 	.word	0x24000074
9000c4ac:	017d7840 	.word	0x017d7840
9000c4b0:	03d09000 	.word	0x03d09000

9000c4b4 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c4b4:	4a1c      	ldr	r2, [pc, #112]	@ (9000c528 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c4b6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c4b8:	6913      	ldr	r3, [r2, #16]
9000c4ba:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c4be:	2b10      	cmp	r3, #16
9000c4c0:	d020      	beq.n	9000c504 <HAL_RCC_GetPCLK2Freq+0x50>
9000c4c2:	2b18      	cmp	r3, #24
9000c4c4:	d029      	beq.n	9000c51a <HAL_RCC_GetPCLK2Freq+0x66>
9000c4c6:	b1fb      	cbz	r3, 9000c508 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000c4c8:	4b18      	ldr	r3, [pc, #96]	@ (9000c52c <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c4ca:	4a17      	ldr	r2, [pc, #92]	@ (9000c528 <HAL_RCC_GetPCLK2Freq+0x74>)
9000c4cc:	4918      	ldr	r1, [pc, #96]	@ (9000c530 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c4ce:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c4d0:	4d18      	ldr	r5, [pc, #96]	@ (9000c534 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c4d2:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c4d6:	4c18      	ldr	r4, [pc, #96]	@ (9000c538 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c4d8:	5c08      	ldrb	r0, [r1, r0]
9000c4da:	f000 001f 	and.w	r0, r0, #31
9000c4de:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c4e0:	6990      	ldr	r0, [r2, #24]
9000c4e2:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c4e6:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c4e8:	5c08      	ldrb	r0, [r1, r0]
9000c4ea:	f000 001f 	and.w	r0, r0, #31
9000c4ee:	40c3      	lsrs	r3, r0
9000c4f0:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c4f2:	69d2      	ldr	r2, [r2, #28]
9000c4f4:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c4f8:	5c88      	ldrb	r0, [r1, r2]
9000c4fa:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c4fe:	fa23 f000 	lsr.w	r0, r3, r0
9000c502:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c504:	4b0d      	ldr	r3, [pc, #52]	@ (9000c53c <HAL_RCC_GetPCLK2Freq+0x88>)
9000c506:	e7e0      	b.n	9000c4ca <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c508:	6813      	ldr	r3, [r2, #0]
9000c50a:	069b      	lsls	r3, r3, #26
9000c50c:	d509      	bpl.n	9000c522 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c50e:	6812      	ldr	r2, [r2, #0]
9000c510:	4b0b      	ldr	r3, [pc, #44]	@ (9000c540 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c512:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c516:	40d3      	lsrs	r3, r2
9000c518:	e7d7      	b.n	9000c4ca <HAL_RCC_GetPCLK2Freq+0x16>
9000c51a:	f7ff fa67 	bl	9000b9ec <HAL_RCC_GetSysClockFreq.part.0>
9000c51e:	4603      	mov	r3, r0
9000c520:	e7d3      	b.n	9000c4ca <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c522:	4b07      	ldr	r3, [pc, #28]	@ (9000c540 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c524:	e7d1      	b.n	9000c4ca <HAL_RCC_GetPCLK2Freq+0x16>
9000c526:	bf00      	nop
9000c528:	58024400 	.word	0x58024400
9000c52c:	003d0900 	.word	0x003d0900
9000c530:	9002deb0 	.word	0x9002deb0
9000c534:	24000078 	.word	0x24000078
9000c538:	24000074 	.word	0x24000074
9000c53c:	017d7840 	.word	0x017d7840
9000c540:	03d09000 	.word	0x03d09000

9000c544 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c544:	4b13      	ldr	r3, [pc, #76]	@ (9000c594 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c546:	223f      	movs	r2, #63	@ 0x3f
9000c548:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c54a:	691a      	ldr	r2, [r3, #16]
9000c54c:	f002 0207 	and.w	r2, r2, #7
9000c550:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c552:	699a      	ldr	r2, [r3, #24]
9000c554:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000c558:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c55a:	699a      	ldr	r2, [r3, #24]
9000c55c:	f002 020f 	and.w	r2, r2, #15
9000c560:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c562:	699a      	ldr	r2, [r3, #24]
9000c564:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c568:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c56a:	69da      	ldr	r2, [r3, #28]
9000c56c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c570:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c572:	69da      	ldr	r2, [r3, #28]
9000c574:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c578:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c57a:	6a1b      	ldr	r3, [r3, #32]
{
9000c57c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c57e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c582:	4c05      	ldr	r4, [pc, #20]	@ (9000c598 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c584:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c586:	6823      	ldr	r3, [r4, #0]
}
9000c588:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c58c:	f003 030f 	and.w	r3, r3, #15
9000c590:	600b      	str	r3, [r1, #0]
}
9000c592:	4770      	bx	lr
9000c594:	58024400 	.word	0x58024400
9000c598:	52002000 	.word	0x52002000

9000c59c <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c59c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c59e:	4c36      	ldr	r4, [pc, #216]	@ (9000c678 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c5a0:	4606      	mov	r6, r0
9000c5a2:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000c5a4:	6823      	ldr	r3, [r4, #0]
9000c5a6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000c5aa:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c5ac:	f7fc f820 	bl	900085f0 <HAL_GetTick>
9000c5b0:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c5b2:	e004      	b.n	9000c5be <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c5b4:	f7fc f81c 	bl	900085f0 <HAL_GetTick>
9000c5b8:	1b40      	subs	r0, r0, r5
9000c5ba:	2802      	cmp	r0, #2
9000c5bc:	d856      	bhi.n	9000c66c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c5be:	6823      	ldr	r3, [r4, #0]
9000c5c0:	011a      	lsls	r2, r3, #4
9000c5c2:	d4f7      	bmi.n	9000c5b4 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c5c4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c5c6:	6832      	ldr	r2, [r6, #0]
9000c5c8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000c5cc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c5d0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c5d2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c5d6:	3b01      	subs	r3, #1
9000c5d8:	3a01      	subs	r2, #1
9000c5da:	025b      	lsls	r3, r3, #9
9000c5dc:	0412      	lsls	r2, r2, #16
9000c5de:	b29b      	uxth	r3, r3
9000c5e0:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c5e4:	4313      	orrs	r3, r2
9000c5e6:	6872      	ldr	r2, [r6, #4]
9000c5e8:	3a01      	subs	r2, #1
9000c5ea:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c5ee:	4313      	orrs	r3, r2
9000c5f0:	6932      	ldr	r2, [r6, #16]
9000c5f2:	3a01      	subs	r2, #1
9000c5f4:	0612      	lsls	r2, r2, #24
9000c5f6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c5fa:	4313      	orrs	r3, r2
9000c5fc:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c5fe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c600:	6972      	ldr	r2, [r6, #20]
9000c602:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000c606:	4313      	orrs	r3, r2
9000c608:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c60a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c60c:	69b3      	ldr	r3, [r6, #24]
9000c60e:	f022 0220 	bic.w	r2, r2, #32
9000c612:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c614:	4b19      	ldr	r3, [pc, #100]	@ (9000c67c <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c616:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c618:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c61a:	f022 0210 	bic.w	r2, r2, #16
9000c61e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c620:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000c622:	69f2      	ldr	r2, [r6, #28]
9000c624:	400b      	ands	r3, r1
9000c626:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c62a:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c62c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c62e:	f043 0310 	orr.w	r3, r3, #16
9000c632:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c634:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c636:	b1df      	cbz	r7, 9000c670 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c638:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c63a:	bf0c      	ite	eq
9000c63c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c640:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000c644:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c646:	4c0c      	ldr	r4, [pc, #48]	@ (9000c678 <RCCEx_PLL2_Config.part.0+0xdc>)
9000c648:	6823      	ldr	r3, [r4, #0]
9000c64a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000c64e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c650:	f7fb ffce 	bl	900085f0 <HAL_GetTick>
9000c654:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c656:	e004      	b.n	9000c662 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c658:	f7fb ffca 	bl	900085f0 <HAL_GetTick>
9000c65c:	1b40      	subs	r0, r0, r5
9000c65e:	2802      	cmp	r0, #2
9000c660:	d804      	bhi.n	9000c66c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c662:	6823      	ldr	r3, [r4, #0]
9000c664:	011b      	lsls	r3, r3, #4
9000c666:	d5f7      	bpl.n	9000c658 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000c668:	2000      	movs	r0, #0
}
9000c66a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c66c:	2003      	movs	r0, #3
}
9000c66e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c670:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000c674:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c676:	e7e6      	b.n	9000c646 <RCCEx_PLL2_Config.part.0+0xaa>
9000c678:	58024400 	.word	0x58024400
9000c67c:	ffff0007 	.word	0xffff0007

9000c680 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c682:	4c36      	ldr	r4, [pc, #216]	@ (9000c75c <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c684:	4606      	mov	r6, r0
9000c686:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000c688:	6823      	ldr	r3, [r4, #0]
9000c68a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000c68e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c690:	f7fb ffae 	bl	900085f0 <HAL_GetTick>
9000c694:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c696:	e004      	b.n	9000c6a2 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c698:	f7fb ffaa 	bl	900085f0 <HAL_GetTick>
9000c69c:	1b40      	subs	r0, r0, r5
9000c69e:	2802      	cmp	r0, #2
9000c6a0:	d856      	bhi.n	9000c750 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c6a2:	6823      	ldr	r3, [r4, #0]
9000c6a4:	009a      	lsls	r2, r3, #2
9000c6a6:	d4f7      	bmi.n	9000c698 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c6a8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c6aa:	6832      	ldr	r2, [r6, #0]
9000c6ac:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000c6b0:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c6b4:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c6b6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c6ba:	3b01      	subs	r3, #1
9000c6bc:	3a01      	subs	r2, #1
9000c6be:	025b      	lsls	r3, r3, #9
9000c6c0:	0412      	lsls	r2, r2, #16
9000c6c2:	b29b      	uxth	r3, r3
9000c6c4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c6c8:	4313      	orrs	r3, r2
9000c6ca:	6872      	ldr	r2, [r6, #4]
9000c6cc:	3a01      	subs	r2, #1
9000c6ce:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c6d2:	4313      	orrs	r3, r2
9000c6d4:	6932      	ldr	r2, [r6, #16]
9000c6d6:	3a01      	subs	r2, #1
9000c6d8:	0612      	lsls	r2, r2, #24
9000c6da:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c6de:	4313      	orrs	r3, r2
9000c6e0:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000c6e2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c6e4:	6972      	ldr	r2, [r6, #20]
9000c6e6:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000c6ea:	4313      	orrs	r3, r2
9000c6ec:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c6ee:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c6f0:	69b3      	ldr	r3, [r6, #24]
9000c6f2:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000c6f6:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c6f8:	4b19      	ldr	r3, [pc, #100]	@ (9000c760 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c6fa:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000c6fc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c6fe:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000c702:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c704:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000c706:	69f2      	ldr	r2, [r6, #28]
9000c708:	400b      	ands	r3, r1
9000c70a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c70e:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000c710:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c712:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c716:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c718:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c71a:	b1df      	cbz	r7, 9000c754 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c71c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000c71e:	bf0c      	ite	eq
9000c720:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000c724:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000c728:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000c72a:	4c0c      	ldr	r4, [pc, #48]	@ (9000c75c <RCCEx_PLL3_Config.part.0+0xdc>)
9000c72c:	6823      	ldr	r3, [r4, #0]
9000c72e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000c732:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c734:	f7fb ff5c 	bl	900085f0 <HAL_GetTick>
9000c738:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c73a:	e004      	b.n	9000c746 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c73c:	f7fb ff58 	bl	900085f0 <HAL_GetTick>
9000c740:	1b40      	subs	r0, r0, r5
9000c742:	2802      	cmp	r0, #2
9000c744:	d804      	bhi.n	9000c750 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c746:	6823      	ldr	r3, [r4, #0]
9000c748:	009b      	lsls	r3, r3, #2
9000c74a:	d5f7      	bpl.n	9000c73c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000c74c:	2000      	movs	r0, #0
}
9000c74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c750:	2003      	movs	r0, #3
}
9000c752:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c754:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000c758:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c75a:	e7e6      	b.n	9000c72a <RCCEx_PLL3_Config.part.0+0xaa>
9000c75c:	58024400 	.word	0x58024400
9000c760:	ffff0007 	.word	0xffff0007

9000c764 <HAL_RCCEx_PeriphCLKConfig>:
{
9000c764:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c768:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000c76c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c76e:	011d      	lsls	r5, r3, #4
9000c770:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000c774:	d525      	bpl.n	9000c7c2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c776:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000c778:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c77c:	f000 8660 	beq.w	9000d440 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000c780:	d814      	bhi.n	9000c7ac <HAL_RCCEx_PeriphCLKConfig+0x48>
9000c782:	2900      	cmp	r1, #0
9000c784:	f000 86fa 	beq.w	9000d57c <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000c788:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c78c:	f040 8466 	bne.w	9000d05c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c790:	49ad      	ldr	r1, [pc, #692]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c792:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c794:	f001 0103 	and.w	r1, r1, #3
9000c798:	2903      	cmp	r1, #3
9000c79a:	f000 845f 	beq.w	9000d05c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000c79e:	2102      	movs	r1, #2
9000c7a0:	3008      	adds	r0, #8
9000c7a2:	f7ff fefb 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c7a6:	4606      	mov	r6, r0
        break;
9000c7a8:	f000 be56 	b.w	9000d458 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c7ac:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c7b0:	f040 8454 	bne.w	9000d05c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c7b4:	4da4      	ldr	r5, [pc, #656]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000c7b6:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c7b8:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000c7ba:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000c7be:	4301      	orrs	r1, r0
9000c7c0:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c7c2:	05d8      	lsls	r0, r3, #23
9000c7c4:	d50a      	bpl.n	9000c7dc <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c7c6:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000c7c8:	2904      	cmp	r1, #4
9000c7ca:	d806      	bhi.n	9000c7da <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c7cc:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c7d0:	064c04a8 	.word	0x064c04a8
9000c7d4:	04ad0661 	.word	0x04ad0661
9000c7d8:	04ad      	.short	0x04ad
9000c7da:	2601      	movs	r6, #1
9000c7dc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c7de:	0599      	lsls	r1, r3, #22
9000c7e0:	d524      	bpl.n	9000c82c <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c7e2:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000c7e4:	2980      	cmp	r1, #128	@ 0x80
9000c7e6:	f000 8664 	beq.w	9000d4b2 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000c7ea:	f200 8122 	bhi.w	9000ca32 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000c7ee:	2900      	cmp	r1, #0
9000c7f0:	f000 84ac 	beq.w	9000d14c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000c7f4:	2940      	cmp	r1, #64	@ 0x40
9000c7f6:	f040 8123 	bne.w	9000ca40 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c7fa:	4993      	ldr	r1, [pc, #588]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c7fc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7fe:	f001 0103 	and.w	r1, r1, #3
9000c802:	2903      	cmp	r1, #3
9000c804:	f000 811c 	beq.w	9000ca40 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000c808:	2100      	movs	r1, #0
9000c80a:	f104 0008 	add.w	r0, r4, #8
9000c80e:	f7ff fec5 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c812:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c814:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c818:	2d00      	cmp	r5, #0
9000c81a:	f040 851b 	bne.w	9000d254 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000c81e:	4f8a      	ldr	r7, [pc, #552]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c820:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000c822:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c824:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000c828:	4301      	orrs	r1, r0
9000c82a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c82c:	055f      	lsls	r7, r3, #21
9000c82e:	d528      	bpl.n	9000c882 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c830:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000c834:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000c838:	f000 864f 	beq.w	9000d4da <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000c83c:	f200 8106 	bhi.w	9000ca4c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000c840:	2900      	cmp	r1, #0
9000c842:	f000 8463 	beq.w	9000d10c <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000c846:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c84a:	f040 8107 	bne.w	9000ca5c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c84e:	497e      	ldr	r1, [pc, #504]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c850:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c852:	f001 0103 	and.w	r1, r1, #3
9000c856:	2903      	cmp	r1, #3
9000c858:	f000 8100 	beq.w	9000ca5c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000c85c:	2100      	movs	r1, #0
9000c85e:	f104 0008 	add.w	r0, r4, #8
9000c862:	f7ff fe9b 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c866:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c868:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c86c:	2d00      	cmp	r5, #0
9000c86e:	f040 84f4 	bne.w	9000d25a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000c872:	4f75      	ldr	r7, [pc, #468]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c874:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000c878:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c87a:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000c87e:	4301      	orrs	r1, r0
9000c880:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c882:	0518      	lsls	r0, r3, #20
9000c884:	d528      	bpl.n	9000c8d8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c886:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000c88a:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000c88e:	f000 85ac 	beq.w	9000d3ea <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000c892:	f200 80e6 	bhi.w	9000ca62 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000c896:	2900      	cmp	r1, #0
9000c898:	f000 8425 	beq.w	9000d0e6 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000c89c:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000c8a0:	f040 80e7 	bne.w	9000ca72 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c8a4:	4968      	ldr	r1, [pc, #416]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c8a6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c8a8:	f001 0103 	and.w	r1, r1, #3
9000c8ac:	2903      	cmp	r1, #3
9000c8ae:	f000 80e0 	beq.w	9000ca72 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000c8b2:	2100      	movs	r1, #0
9000c8b4:	f104 0008 	add.w	r0, r4, #8
9000c8b8:	f7ff fe70 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c8bc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c8be:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c8c2:	2d00      	cmp	r5, #0
9000c8c4:	f040 84cc 	bne.w	9000d260 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000c8c8:	4f5f      	ldr	r7, [pc, #380]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c8ca:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000c8ce:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c8d0:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000c8d4:	4301      	orrs	r1, r0
9000c8d6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c8d8:	0199      	lsls	r1, r3, #6
9000c8da:	d518      	bpl.n	9000c90e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000c8dc:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000c8de:	2920      	cmp	r1, #32
9000c8e0:	f000 84ff 	beq.w	9000d2e2 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000c8e4:	f200 80c8 	bhi.w	9000ca78 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000c8e8:	b139      	cbz	r1, 9000c8fa <HAL_RCCEx_PeriphCLKConfig+0x196>
9000c8ea:	2910      	cmp	r1, #16
9000c8ec:	f040 80c7 	bne.w	9000ca7e <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c8f0:	4855      	ldr	r0, [pc, #340]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c8f2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c8f4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c8f8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c8fa:	2d00      	cmp	r5, #0
9000c8fc:	f040 849f 	bne.w	9000d23e <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000c900:	4f51      	ldr	r7, [pc, #324]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c902:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000c904:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c906:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000c90a:	4301      	orrs	r1, r0
9000c90c:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c90e:	04df      	lsls	r7, r3, #19
9000c910:	d526      	bpl.n	9000c960 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c912:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000c914:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c918:	f000 857b 	beq.w	9000d412 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000c91c:	f200 80b2 	bhi.w	9000ca84 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000c920:	2900      	cmp	r1, #0
9000c922:	f000 83ea 	beq.w	9000d0fa <HAL_RCCEx_PeriphCLKConfig+0x996>
9000c926:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000c92a:	f040 80b3 	bne.w	9000ca94 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c92e:	4946      	ldr	r1, [pc, #280]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c930:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c932:	f001 0103 	and.w	r1, r1, #3
9000c936:	2903      	cmp	r1, #3
9000c938:	f000 80ac 	beq.w	9000ca94 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000c93c:	2100      	movs	r1, #0
9000c93e:	f104 0008 	add.w	r0, r4, #8
9000c942:	f7ff fe2b 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c946:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c948:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c94c:	2d00      	cmp	r5, #0
9000c94e:	f040 848a 	bne.w	9000d266 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000c952:	4f3d      	ldr	r7, [pc, #244]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c954:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000c956:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c958:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000c95c:	4301      	orrs	r1, r0
9000c95e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c960:	0498      	lsls	r0, r3, #18
9000c962:	d524      	bpl.n	9000c9ae <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c964:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000c966:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c96a:	f000 8516 	beq.w	9000d39a <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000c96e:	f200 8094 	bhi.w	9000ca9a <HAL_RCCEx_PeriphCLKConfig+0x336>
9000c972:	b191      	cbz	r1, 9000c99a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000c974:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c978:	f040 8099 	bne.w	9000caae <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c97c:	4932      	ldr	r1, [pc, #200]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c97e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c980:	f001 0103 	and.w	r1, r1, #3
9000c984:	2903      	cmp	r1, #3
9000c986:	f000 8092 	beq.w	9000caae <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000c98a:	2101      	movs	r1, #1
9000c98c:	f104 0008 	add.w	r0, r4, #8
9000c990:	f7ff fe04 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c994:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c996:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c99a:	2d00      	cmp	r5, #0
9000c99c:	f040 8476 	bne.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000c9a0:	4f29      	ldr	r7, [pc, #164]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c9a2:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000c9a4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c9a6:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000c9aa:	4301      	orrs	r1, r0
9000c9ac:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c9ae:	0459      	lsls	r1, r3, #17
9000c9b0:	d523      	bpl.n	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c9b2:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000c9b6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c9ba:	f000 8502 	beq.w	9000d3c2 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000c9be:	d879      	bhi.n	9000cab4 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c9c0:	b181      	cbz	r1, 9000c9e4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000c9c2:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c9c6:	d17d      	bne.n	9000cac4 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9c8:	491f      	ldr	r1, [pc, #124]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c9ca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c9cc:	f001 0103 	and.w	r1, r1, #3
9000c9d0:	2903      	cmp	r1, #3
9000c9d2:	d077      	beq.n	9000cac4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000c9d4:	2101      	movs	r1, #1
9000c9d6:	f104 0008 	add.w	r0, r4, #8
9000c9da:	f7ff fddf 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000c9de:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c9e0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c9e4:	2d00      	cmp	r5, #0
9000c9e6:	f040 8454 	bne.w	9000d292 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000c9ea:	4f17      	ldr	r7, [pc, #92]	@ (9000ca48 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c9ec:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000c9f0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c9f2:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c9f6:	4301      	orrs	r1, r0
9000c9f8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c9fa:	041f      	lsls	r7, r3, #16
9000c9fc:	d50d      	bpl.n	9000ca1a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000c9fe:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000ca00:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000ca04:	f000 82e2 	beq.w	9000cfcc <HAL_RCCEx_PeriphCLKConfig+0x868>
9000ca08:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000ca0c:	f000 83f0 	beq.w	9000d1f0 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000ca10:	2900      	cmp	r1, #0
9000ca12:	f000 82e0 	beq.w	9000cfd6 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000ca16:	2601      	movs	r6, #1
9000ca18:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ca1a:	01d8      	lsls	r0, r3, #7
9000ca1c:	d55e      	bpl.n	9000cadc <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000ca1e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000ca20:	2903      	cmp	r1, #3
9000ca22:	f200 85cd 	bhi.w	9000d5c0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000ca26:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ca2a:	0055      	.short	0x0055
9000ca2c:	04930050 	.word	0x04930050
9000ca30:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000ca32:	29c0      	cmp	r1, #192	@ 0xc0
9000ca34:	f43f aef0 	beq.w	9000c818 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000ca38:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000ca3c:	f43f aeec 	beq.w	9000c818 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000ca40:	2601      	movs	r6, #1
9000ca42:	4635      	mov	r5, r6
9000ca44:	e6f2      	b.n	9000c82c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000ca46:	bf00      	nop
9000ca48:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000ca4c:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000ca50:	f43f af0c 	beq.w	9000c86c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000ca54:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000ca58:	f43f af08 	beq.w	9000c86c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000ca5c:	2601      	movs	r6, #1
9000ca5e:	4635      	mov	r5, r6
9000ca60:	e70f      	b.n	9000c882 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000ca62:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000ca66:	f43f af2c 	beq.w	9000c8c2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000ca6a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000ca6e:	f43f af28 	beq.w	9000c8c2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000ca72:	2601      	movs	r6, #1
9000ca74:	4635      	mov	r5, r6
9000ca76:	e72f      	b.n	9000c8d8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000ca78:	2930      	cmp	r1, #48	@ 0x30
9000ca7a:	f43f af3e 	beq.w	9000c8fa <HAL_RCCEx_PeriphCLKConfig+0x196>
9000ca7e:	2601      	movs	r6, #1
9000ca80:	4635      	mov	r5, r6
9000ca82:	e744      	b.n	9000c90e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ca84:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000ca88:	f43f af60 	beq.w	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000ca8c:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000ca90:	f43f af5c 	beq.w	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000ca94:	2601      	movs	r6, #1
9000ca96:	4635      	mov	r5, r6
9000ca98:	e762      	b.n	9000c960 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000ca9a:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000ca9e:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000caa2:	f43f af7a 	beq.w	9000c99a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000caa6:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000caaa:	f43f af76 	beq.w	9000c99a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000caae:	2601      	movs	r6, #1
9000cab0:	4635      	mov	r5, r6
9000cab2:	e77c      	b.n	9000c9ae <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cab4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000cab8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000cabc:	d092      	beq.n	9000c9e4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000cabe:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000cac2:	d08f      	beq.n	9000c9e4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000cac4:	2601      	movs	r6, #1
9000cac6:	4635      	mov	r5, r6
9000cac8:	e797      	b.n	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000caca:	4837      	ldr	r0, [pc, #220]	@ (9000cba8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000cacc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cace:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cad2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cad4:	2d00      	cmp	r5, #0
9000cad6:	f000 83b5 	beq.w	9000d244 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000cada:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cadc:	0259      	lsls	r1, r3, #9
9000cade:	f100 82c0 	bmi.w	9000d062 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cae2:	07df      	lsls	r7, r3, #31
9000cae4:	d52f      	bpl.n	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000cae6:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000cae8:	2928      	cmp	r1, #40	@ 0x28
9000caea:	d82a      	bhi.n	9000cb42 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000caec:	e8df f011 	tbh	[pc, r1, lsl #1]
9000caf0:	002902ab 	.word	0x002902ab
9000caf4:	00290029 	.word	0x00290029
9000caf8:	00290029 	.word	0x00290029
9000cafc:	00290029 	.word	0x00290029
9000cb00:	0029029c 	.word	0x0029029c
9000cb04:	00290029 	.word	0x00290029
9000cb08:	00290029 	.word	0x00290029
9000cb0c:	00290029 	.word	0x00290029
9000cb10:	0029052d 	.word	0x0029052d
9000cb14:	00290029 	.word	0x00290029
9000cb18:	00290029 	.word	0x00290029
9000cb1c:	00290029 	.word	0x00290029
9000cb20:	002902ab 	.word	0x002902ab
9000cb24:	00290029 	.word	0x00290029
9000cb28:	00290029 	.word	0x00290029
9000cb2c:	00290029 	.word	0x00290029
9000cb30:	002902ab 	.word	0x002902ab
9000cb34:	00290029 	.word	0x00290029
9000cb38:	00290029 	.word	0x00290029
9000cb3c:	00290029 	.word	0x00290029
9000cb40:	02ab      	.short	0x02ab
9000cb42:	2601      	movs	r6, #1
9000cb44:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000cb46:	0798      	lsls	r0, r3, #30
9000cb48:	d51e      	bpl.n	9000cb88 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000cb4a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000cb4c:	2905      	cmp	r1, #5
9000cb4e:	f200 851c 	bhi.w	9000d58a <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000cb52:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cb56:	0015      	.short	0x0015
9000cb58:	04e80006 	.word	0x04e80006
9000cb5c:	00150015 	.word	0x00150015
9000cb60:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb62:	4911      	ldr	r1, [pc, #68]	@ (9000cba8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000cb64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb66:	f001 0103 	and.w	r1, r1, #3
9000cb6a:	2903      	cmp	r1, #3
9000cb6c:	f000 850d 	beq.w	9000d58a <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000cb70:	2101      	movs	r1, #1
9000cb72:	f104 0008 	add.w	r0, r4, #8
9000cb76:	f7ff fd11 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000cb7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000cb7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb80:	2d00      	cmp	r5, #0
9000cb82:	f000 837b 	beq.w	9000d27c <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000cb86:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000cb88:	0759      	lsls	r1, r3, #29
9000cb8a:	d522      	bpl.n	9000cbd2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000cb8c:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000cb90:	2905      	cmp	r1, #5
9000cb92:	f200 84fe 	bhi.w	9000d592 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000cb96:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cb9a:	0018      	.short	0x0018
9000cb9c:	04b40009 	.word	0x04b40009
9000cba0:	00180018 	.word	0x00180018
9000cba4:	0018      	.short	0x0018
9000cba6:	bf00      	nop
9000cba8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cbac:	49b0      	ldr	r1, [pc, #704]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cbae:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cbb0:	f001 0103 	and.w	r1, r1, #3
9000cbb4:	2903      	cmp	r1, #3
9000cbb6:	f000 84ec 	beq.w	9000d592 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000cbba:	2101      	movs	r1, #1
9000cbbc:	f104 0008 	add.w	r0, r4, #8
9000cbc0:	f7ff fcec 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000cbc4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cbc6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cbca:	2d00      	cmp	r5, #0
9000cbcc:	f000 8364 	beq.w	9000d298 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000cbd0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cbd2:	069f      	lsls	r7, r3, #26
9000cbd4:	d526      	bpl.n	9000cc24 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cbd6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000cbda:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000cbde:	f000 836e 	beq.w	9000d2be <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000cbe2:	f200 8194 	bhi.w	9000cf0e <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000cbe6:	b191      	cbz	r1, 9000cc0e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000cbe8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cbec:	f040 8199 	bne.w	9000cf22 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cbf0:	499f      	ldr	r1, [pc, #636]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cbf2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cbf4:	f001 0103 	and.w	r1, r1, #3
9000cbf8:	2903      	cmp	r1, #3
9000cbfa:	f000 8192 	beq.w	9000cf22 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000cbfe:	2100      	movs	r1, #0
9000cc00:	f104 0008 	add.w	r0, r4, #8
9000cc04:	f7ff fcca 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000cc08:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cc0a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc0e:	2d00      	cmp	r5, #0
9000cc10:	f040 834b 	bne.w	9000d2aa <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000cc14:	4f96      	ldr	r7, [pc, #600]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cc16:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cc1a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cc1c:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000cc20:	4301      	orrs	r1, r0
9000cc22:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cc24:	0658      	lsls	r0, r3, #25
9000cc26:	d526      	bpl.n	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cc28:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000cc2c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000cc30:	f000 83a1 	beq.w	9000d376 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000cc34:	f200 8178 	bhi.w	9000cf28 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000cc38:	b191      	cbz	r1, 9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000cc3a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000cc3e:	f040 817d 	bne.w	9000cf3c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc42:	498b      	ldr	r1, [pc, #556]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cc44:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc46:	f001 0103 	and.w	r1, r1, #3
9000cc4a:	2903      	cmp	r1, #3
9000cc4c:	f000 8176 	beq.w	9000cf3c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000cc50:	2100      	movs	r1, #0
9000cc52:	f104 0008 	add.w	r0, r4, #8
9000cc56:	f7ff fca1 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000cc5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cc5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc60:	2d00      	cmp	r5, #0
9000cc62:	f040 8328 	bne.w	9000d2b6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000cc66:	4f82      	ldr	r7, [pc, #520]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cc68:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000cc6c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cc6e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000cc72:	4301      	orrs	r1, r0
9000cc74:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cc76:	0619      	lsls	r1, r3, #24
9000cc78:	d526      	bpl.n	9000ccc8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cc7a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000cc7e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000cc82:	f000 8353 	beq.w	9000d32c <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000cc86:	f200 815c 	bhi.w	9000cf42 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000cc8a:	b191      	cbz	r1, 9000ccb2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000cc8c:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000cc90:	f040 8161 	bne.w	9000cf56 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc94:	4976      	ldr	r1, [pc, #472]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cc96:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc98:	f001 0103 	and.w	r1, r1, #3
9000cc9c:	2903      	cmp	r1, #3
9000cc9e:	f000 815a 	beq.w	9000cf56 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000cca2:	2100      	movs	r1, #0
9000cca4:	f104 0008 	add.w	r0, r4, #8
9000cca8:	f7ff fc78 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000ccac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ccae:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccb2:	2d00      	cmp	r5, #0
9000ccb4:	f040 82fb 	bne.w	9000d2ae <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000ccb8:	4f6d      	ldr	r7, [pc, #436]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ccba:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000ccbe:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000ccc0:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000ccc4:	4301      	orrs	r1, r0
9000ccc6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ccc8:	071f      	lsls	r7, r3, #28
9000ccca:	d50b      	bpl.n	9000cce4 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000cccc:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000ccd0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000ccd4:	f000 8250 	beq.w	9000d178 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ccd8:	4f65      	ldr	r7, [pc, #404]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ccda:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000ccdc:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000cce0:	4301      	orrs	r1, r0
9000cce2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cce4:	06d8      	lsls	r0, r3, #27
9000cce6:	d50b      	bpl.n	9000cd00 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000cce8:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000ccec:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000ccf0:	f000 8257 	beq.w	9000d1a2 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000ccf4:	4f5e      	ldr	r7, [pc, #376]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ccf6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000ccf8:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000ccfc:	4301      	orrs	r1, r0
9000ccfe:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000cd00:	0319      	lsls	r1, r3, #12
9000cd02:	d50e      	bpl.n	9000cd22 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000cd04:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000cd08:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000cd0c:	f000 816e 	beq.w	9000cfec <HAL_RCCEx_PeriphCLKConfig+0x888>
9000cd10:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000cd14:	f000 8179 	beq.w	9000d00a <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000cd18:	2900      	cmp	r1, #0
9000cd1a:	f000 827a 	beq.w	9000d212 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000cd1e:	2601      	movs	r6, #1
9000cd20:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000cd22:	035f      	lsls	r7, r3, #13
9000cd24:	d50f      	bpl.n	9000cd46 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000cd26:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000cd2a:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000cd2e:	f000 82eb 	beq.w	9000d308 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000cd32:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000cd36:	f000 813d 	beq.w	9000cfb4 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000cd3a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000cd3e:	f000 8134 	beq.w	9000cfaa <HAL_RCCEx_PeriphCLKConfig+0x846>
9000cd42:	2601      	movs	r6, #1
9000cd44:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000cd46:	03d8      	lsls	r0, r3, #15
9000cd48:	d520      	bpl.n	9000cd8c <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000cd4a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000cd4c:	2900      	cmp	r1, #0
9000cd4e:	f000 8245 	beq.w	9000d1dc <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000cd52:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000cd56:	f040 8125 	bne.w	9000cfa4 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd5a:	4945      	ldr	r1, [pc, #276]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cd5c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd5e:	f001 0103 	and.w	r1, r1, #3
9000cd62:	2903      	cmp	r1, #3
9000cd64:	f000 811e 	beq.w	9000cfa4 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000cd68:	2102      	movs	r1, #2
9000cd6a:	f104 0008 	add.w	r0, r4, #8
9000cd6e:	f7ff fc15 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000cd72:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000cd74:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd78:	2d00      	cmp	r5, #0
9000cd7a:	f040 8237 	bne.w	9000d1ec <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000cd7e:	4f3c      	ldr	r7, [pc, #240]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cd80:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000cd82:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000cd84:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000cd88:	4301      	orrs	r1, r0
9000cd8a:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000cd8c:	0099      	lsls	r1, r3, #2
9000cd8e:	d50e      	bpl.n	9000cdae <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd90:	4937      	ldr	r1, [pc, #220]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cd92:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd94:	f001 0103 	and.w	r1, r1, #3
9000cd98:	2903      	cmp	r1, #3
9000cd9a:	d007      	beq.n	9000cdac <HAL_RCCEx_PeriphCLKConfig+0x648>
9000cd9c:	2102      	movs	r1, #2
9000cd9e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cda2:	f7ff fc6d 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000cda6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000cdaa:	b100      	cbz	r0, 9000cdae <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000cdac:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000cdae:	039f      	lsls	r7, r3, #14
9000cdb0:	f140 80e0 	bpl.w	9000cf74 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000cdb4:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000cdb8:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000cdbc:	f000 8205 	beq.w	9000d1ca <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000cdc0:	f240 80cc 	bls.w	9000cf5c <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000cdc4:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000cdc8:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000cdcc:	f000 80c9 	beq.w	9000cf62 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000cdd0:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000cdd2:	02d8      	lsls	r0, r3, #11
9000cdd4:	d506      	bpl.n	9000cde4 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000cdd6:	4826      	ldr	r0, [pc, #152]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cdd8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000cdda:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000cddc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000cde0:	4331      	orrs	r1, r6
9000cde2:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000cde4:	00d9      	lsls	r1, r3, #3
9000cde6:	d507      	bpl.n	9000cdf8 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000cde8:	4821      	ldr	r0, [pc, #132]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cdea:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000cdee:	6901      	ldr	r1, [r0, #16]
9000cdf0:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000cdf4:	4331      	orrs	r1, r6
9000cdf6:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000cdf8:	029f      	lsls	r7, r3, #10
9000cdfa:	d506      	bpl.n	9000ce0a <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000cdfc:	481c      	ldr	r0, [pc, #112]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cdfe:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000ce00:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000ce02:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000ce06:	4331      	orrs	r1, r6
9000ce08:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000ce0a:	005e      	lsls	r6, r3, #1
9000ce0c:	d509      	bpl.n	9000ce22 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000ce0e:	4918      	ldr	r1, [pc, #96]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ce10:	6908      	ldr	r0, [r1, #16]
9000ce12:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000ce16:	6108      	str	r0, [r1, #16]
9000ce18:	6908      	ldr	r0, [r1, #16]
9000ce1a:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000ce1e:	4330      	orrs	r0, r6
9000ce20:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000ce22:	2b00      	cmp	r3, #0
9000ce24:	da06      	bge.n	9000ce34 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000ce26:	4812      	ldr	r0, [pc, #72]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ce28:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000ce2a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000ce2c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000ce30:	4331      	orrs	r1, r6
9000ce32:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000ce34:	0218      	lsls	r0, r3, #8
9000ce36:	d507      	bpl.n	9000ce48 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000ce38:	490d      	ldr	r1, [pc, #52]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ce3a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000ce3e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000ce40:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000ce44:	4303      	orrs	r3, r0
9000ce46:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000ce48:	07d1      	lsls	r1, r2, #31
9000ce4a:	d513      	bpl.n	9000ce74 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce4c:	4b08      	ldr	r3, [pc, #32]	@ (9000ce70 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000ce4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ce50:	f003 0303 	and.w	r3, r3, #3
9000ce54:	2b03      	cmp	r3, #3
9000ce56:	f000 818d 	beq.w	9000d174 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000ce5a:	2100      	movs	r1, #0
9000ce5c:	f104 0008 	add.w	r0, r4, #8
9000ce60:	f7ff fb9c 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ce64:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ce66:	2800      	cmp	r0, #0
9000ce68:	f040 8204 	bne.w	9000d274 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000ce6c:	e002      	b.n	9000ce74 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000ce6e:	bf00      	nop
9000ce70:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ce74:	0793      	lsls	r3, r2, #30
9000ce76:	d50f      	bpl.n	9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce78:	4bb2      	ldr	r3, [pc, #712]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ce7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ce7c:	f003 0303 	and.w	r3, r3, #3
9000ce80:	2b03      	cmp	r3, #3
9000ce82:	f000 816c 	beq.w	9000d15e <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000ce86:	2101      	movs	r1, #1
9000ce88:	f104 0008 	add.w	r0, r4, #8
9000ce8c:	f7ff fb86 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ce90:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ce92:	2800      	cmp	r0, #0
9000ce94:	f040 81f0 	bne.w	9000d278 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ce98:	0757      	lsls	r7, r2, #29
9000ce9a:	d50f      	bpl.n	9000cebc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce9c:	4ba9      	ldr	r3, [pc, #676]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ce9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cea0:	f003 0303 	and.w	r3, r3, #3
9000cea4:	2b03      	cmp	r3, #3
9000cea6:	f000 815c 	beq.w	9000d162 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000ceaa:	2102      	movs	r1, #2
9000ceac:	f104 0008 	add.w	r0, r4, #8
9000ceb0:	f7ff fb74 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ceb4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ceb6:	2800      	cmp	r0, #0
9000ceb8:	f040 81d8 	bne.w	9000d26c <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000cebc:	0716      	lsls	r6, r2, #28
9000cebe:	d50f      	bpl.n	9000cee0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cec0:	4ba0      	ldr	r3, [pc, #640]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cec2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cec4:	f003 0303 	and.w	r3, r3, #3
9000cec8:	2b03      	cmp	r3, #3
9000ceca:	f000 814c 	beq.w	9000d166 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000cece:	2100      	movs	r1, #0
9000ced0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ced4:	f7ff fbd4 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ced8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ceda:	2800      	cmp	r0, #0
9000cedc:	f040 81c8 	bne.w	9000d270 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000cee0:	06d0      	lsls	r0, r2, #27
9000cee2:	d54a      	bpl.n	9000cf7a <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cee4:	4b97      	ldr	r3, [pc, #604]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000cee6:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ceea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ceec:	f003 0303 	and.w	r3, r3, #3
9000cef0:	2b03      	cmp	r3, #3
9000cef2:	f000 813a 	beq.w	9000d16a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000cef6:	2101      	movs	r1, #1
9000cef8:	4630      	mov	r0, r6
9000cefa:	f7ff fbc1 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000cefe:	2800      	cmp	r0, #0
9000cf00:	d03a      	beq.n	9000cf78 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cf02:	6863      	ldr	r3, [r4, #4]
9000cf04:	069a      	lsls	r2, r3, #26
9000cf06:	f140 808c 	bpl.w	9000d022 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000cf0a:	4605      	mov	r5, r0
9000cf0c:	e039      	b.n	9000cf82 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cf0e:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000cf12:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000cf16:	f43f ae7a 	beq.w	9000cc0e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000cf1a:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000cf1e:	f43f ae76 	beq.w	9000cc0e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000cf22:	2601      	movs	r6, #1
9000cf24:	4635      	mov	r5, r6
9000cf26:	e67d      	b.n	9000cc24 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cf28:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000cf2c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000cf30:	f43f ae96 	beq.w	9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000cf34:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000cf38:	f43f ae92 	beq.w	9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000cf3c:	2601      	movs	r6, #1
9000cf3e:	4635      	mov	r5, r6
9000cf40:	e699      	b.n	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cf42:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000cf46:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000cf4a:	f43f aeb2 	beq.w	9000ccb2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000cf4e:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000cf52:	f43f aeae 	beq.w	9000ccb2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000cf56:	2601      	movs	r6, #1
9000cf58:	4635      	mov	r5, r6
9000cf5a:	e6b5      	b.n	9000ccc8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000cf5c:	2900      	cmp	r1, #0
9000cf5e:	f47f af37 	bne.w	9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000cf62:	2d00      	cmp	r5, #0
9000cf64:	f47f af35 	bne.w	9000cdd2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000cf68:	4d76      	ldr	r5, [pc, #472]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cf6a:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000cf6c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000cf70:	4301      	orrs	r1, r0
9000cf72:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000cf74:	4635      	mov	r5, r6
9000cf76:	e72c      	b.n	9000cdd2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cf78:	6862      	ldr	r2, [r4, #4]
9000cf7a:	0693      	lsls	r3, r2, #26
9000cf7c:	d50d      	bpl.n	9000cf9a <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000cf7e:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf82:	4b70      	ldr	r3, [pc, #448]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cf84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cf86:	f003 0303 	and.w	r3, r3, #3
9000cf8a:	2b03      	cmp	r3, #3
9000cf8c:	d049      	beq.n	9000d022 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000cf8e:	2102      	movs	r1, #2
9000cf90:	4630      	mov	r0, r6
9000cf92:	f7ff fb75 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000cf96:	2800      	cmp	r0, #0
9000cf98:	d143      	bne.n	9000d022 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000cf9a:	1e28      	subs	r0, r5, #0
9000cf9c:	bf18      	it	ne
9000cf9e:	2001      	movne	r0, #1
}
9000cfa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000cfa4:	2601      	movs	r6, #1
9000cfa6:	4635      	mov	r5, r6
9000cfa8:	e6f0      	b.n	9000cd8c <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cfaa:	4866      	ldr	r0, [pc, #408]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cfac:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cfae:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cfb2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cfb4:	2d00      	cmp	r5, #0
9000cfb6:	f040 8140 	bne.w	9000d23a <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000cfba:	4f62      	ldr	r7, [pc, #392]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cfbc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000cfc0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cfc2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000cfc6:	4301      	orrs	r1, r0
9000cfc8:	6579      	str	r1, [r7, #84]	@ 0x54
9000cfca:	e6bc      	b.n	9000cd46 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cfcc:	485d      	ldr	r0, [pc, #372]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cfce:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cfd0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cfd4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cfd6:	2d00      	cmp	r5, #0
9000cfd8:	f040 812c 	bne.w	9000d234 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000cfdc:	4f59      	ldr	r7, [pc, #356]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cfde:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000cfe0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cfe2:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000cfe6:	4301      	orrs	r1, r0
9000cfe8:	6539      	str	r1, [r7, #80]	@ 0x50
9000cfea:	e516      	b.n	9000ca1a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfec:	4955      	ldr	r1, [pc, #340]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cfee:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cff0:	f001 0103 	and.w	r1, r1, #3
9000cff4:	2903      	cmp	r1, #3
9000cff6:	f43f ae92 	beq.w	9000cd1e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000cffa:	2102      	movs	r1, #2
9000cffc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d000:	f7ff fb3e 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d004:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d006:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d00a:	2d00      	cmp	r5, #0
9000d00c:	f040 8151 	bne.w	9000d2b2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d010:	4f4c      	ldr	r7, [pc, #304]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d012:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000d016:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d018:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000d01c:	4301      	orrs	r1, r0
9000d01e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000d020:	e67f      	b.n	9000cd22 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000d022:	2001      	movs	r0, #1
}
9000d024:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d028:	4946      	ldr	r1, [pc, #280]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d02a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d02c:	f001 0103 	and.w	r1, r1, #3
9000d030:	2903      	cmp	r1, #3
9000d032:	f43f ad86 	beq.w	9000cb42 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d036:	2101      	movs	r1, #1
9000d038:	f104 0008 	add.w	r0, r4, #8
9000d03c:	f7ff faae 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d040:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d042:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d046:	2d00      	cmp	r5, #0
9000d048:	f040 8137 	bne.w	9000d2ba <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d04c:	4f3d      	ldr	r7, [pc, #244]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d04e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000d050:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d052:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000d056:	4301      	orrs	r1, r0
9000d058:	6579      	str	r1, [r7, #84]	@ 0x54
9000d05a:	e574      	b.n	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000d05c:	2601      	movs	r6, #1
9000d05e:	f7ff bbb0 	b.w	9000c7c2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d062:	4f39      	ldr	r7, [pc, #228]	@ (9000d148 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000d064:	683b      	ldr	r3, [r7, #0]
9000d066:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000d06a:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d06c:	f7fb fac0 	bl	900085f0 <HAL_GetTick>
9000d070:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d072:	e006      	b.n	9000d082 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d074:	f7fb fabc 	bl	900085f0 <HAL_GetTick>
9000d078:	eba0 0008 	sub.w	r0, r0, r8
9000d07c:	2864      	cmp	r0, #100	@ 0x64
9000d07e:	f200 8277 	bhi.w	9000d570 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d082:	683b      	ldr	r3, [r7, #0]
9000d084:	05da      	lsls	r2, r3, #23
9000d086:	d5f5      	bpl.n	9000d074 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000d088:	2d00      	cmp	r5, #0
9000d08a:	f040 8272 	bne.w	9000d572 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d08e:	4a2d      	ldr	r2, [pc, #180]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d090:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d094:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000d096:	4059      	eors	r1, r3
9000d098:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000d09c:	d00b      	beq.n	9000d0b6 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d09e:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d0a0:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d0a2:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d0a6:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000d0aa:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d0ac:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000d0ae:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000d0b2:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000d0b4:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d0b6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000d0ba:	f000 8285 	beq.w	9000d5c8 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d0be:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000d0c2:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000d0c6:	f000 8293 	beq.w	9000d5f0 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000d0ca:	491e      	ldr	r1, [pc, #120]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d0cc:	690a      	ldr	r2, [r1, #16]
9000d0ce:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000d0d2:	610a      	str	r2, [r1, #16]
9000d0d4:	481b      	ldr	r0, [pc, #108]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d0d6:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d0da:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000d0dc:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d0de:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d0e2:	6701      	str	r1, [r0, #112]	@ 0x70
9000d0e4:	e4fd      	b.n	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d0e6:	4817      	ldr	r0, [pc, #92]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d0e8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d0ea:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d0ee:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d0f0:	2d00      	cmp	r5, #0
9000d0f2:	f040 80b5 	bne.w	9000d260 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000d0f6:	f7ff bbe7 	b.w	9000c8c8 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d0fa:	4812      	ldr	r0, [pc, #72]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d0fc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d0fe:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d102:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d104:	2d00      	cmp	r5, #0
9000d106:	f040 80ae 	bne.w	9000d266 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000d10a:	e422      	b.n	9000c952 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d10c:	480d      	ldr	r0, [pc, #52]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d10e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d110:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d114:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d116:	2d00      	cmp	r5, #0
9000d118:	f040 809f 	bne.w	9000d25a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000d11c:	f7ff bba9 	b.w	9000c872 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d120:	4808      	ldr	r0, [pc, #32]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d122:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d124:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d128:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d12a:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d12c:	2d00      	cmp	r5, #0
9000d12e:	f040 81ad 	bne.w	9000d48c <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d132:	4f04      	ldr	r7, [pc, #16]	@ (9000d144 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d134:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000d136:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d138:	f021 0107 	bic.w	r1, r1, #7
9000d13c:	4301      	orrs	r1, r0
9000d13e:	6539      	str	r1, [r7, #80]	@ 0x50
9000d140:	f7ff bb4d 	b.w	9000c7de <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000d144:	58024400 	.word	0x58024400
9000d148:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d14c:	48bb      	ldr	r0, [pc, #748]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d14e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d150:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d154:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d156:	2d00      	cmp	r5, #0
9000d158:	d17c      	bne.n	9000d254 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000d15a:	f7ff bb60 	b.w	9000c81e <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000d15e:	2501      	movs	r5, #1
9000d160:	e69a      	b.n	9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000d162:	2501      	movs	r5, #1
9000d164:	e6aa      	b.n	9000cebc <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000d166:	2501      	movs	r5, #1
9000d168:	e6ba      	b.n	9000cee0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d16a:	0691      	lsls	r1, r2, #26
9000d16c:	f57f af59 	bpl.w	9000d022 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000d170:	2501      	movs	r5, #1
9000d172:	e706      	b.n	9000cf82 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000d174:	2501      	movs	r5, #1
9000d176:	e67d      	b.n	9000ce74 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d178:	49b0      	ldr	r1, [pc, #704]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d17a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d17c:	f001 0103 	and.w	r1, r1, #3
9000d180:	2903      	cmp	r1, #3
9000d182:	f000 820a 	beq.w	9000d59a <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000d186:	2102      	movs	r1, #2
9000d188:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d18c:	f7ff fa78 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d190:	2800      	cmp	r0, #0
9000d192:	f000 820f 	beq.w	9000d5b4 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d196:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000d19a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d19c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d1a0:	e59a      	b.n	9000ccd8 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1a2:	49a6      	ldr	r1, [pc, #664]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d1a4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d1a6:	f001 0103 	and.w	r1, r1, #3
9000d1aa:	2903      	cmp	r1, #3
9000d1ac:	f000 81f8 	beq.w	9000d5a0 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000d1b0:	2102      	movs	r1, #2
9000d1b2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d1b6:	f7ff fa63 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d1ba:	2800      	cmp	r0, #0
9000d1bc:	f040 81f3 	bne.w	9000d5a6 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d1c0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d1c4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d1c8:	e594      	b.n	9000ccf4 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d1ca:	4f9c      	ldr	r7, [pc, #624]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d1cc:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000d1ce:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d1d2:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d1d4:	2d00      	cmp	r5, #0
9000d1d6:	f47f adfc 	bne.w	9000cdd2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000d1da:	e6c5      	b.n	9000cf68 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d1dc:	4897      	ldr	r0, [pc, #604]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d1de:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d1e0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d1e4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d1e6:	2d00      	cmp	r5, #0
9000d1e8:	f43f adc9 	beq.w	9000cd7e <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000d1ec:	462e      	mov	r6, r5
9000d1ee:	e5cd      	b.n	9000cd8c <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1f0:	4992      	ldr	r1, [pc, #584]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d1f2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d1f4:	f001 0103 	and.w	r1, r1, #3
9000d1f8:	2903      	cmp	r1, #3
9000d1fa:	f43f ac0c 	beq.w	9000ca16 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000d1fe:	2101      	movs	r1, #1
9000d200:	f104 0008 	add.w	r0, r4, #8
9000d204:	f7ff f9ca 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d208:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d20a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d20e:	b98d      	cbnz	r5, 9000d234 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000d210:	e6e4      	b.n	9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d212:	488a      	ldr	r0, [pc, #552]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d214:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000d216:	f000 0003 	and.w	r0, r0, #3
9000d21a:	2803      	cmp	r0, #3
9000d21c:	f43f ad7f 	beq.w	9000cd1e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000d220:	f104 0008 	add.w	r0, r4, #8
9000d224:	f7ff f9ba 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d228:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d22a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d22e:	2d00      	cmp	r5, #0
9000d230:	d13f      	bne.n	9000d2b2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000d232:	e6ed      	b.n	9000d010 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000d234:	462e      	mov	r6, r5
9000d236:	f7ff bbf0 	b.w	9000ca1a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000d23a:	462e      	mov	r6, r5
9000d23c:	e583      	b.n	9000cd46 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000d23e:	462e      	mov	r6, r5
9000d240:	f7ff bb65 	b.w	9000c90e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000d244:	4f7d      	ldr	r7, [pc, #500]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d246:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000d248:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d24a:	f021 0103 	bic.w	r1, r1, #3
9000d24e:	4301      	orrs	r1, r0
9000d250:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000d252:	e443      	b.n	9000cadc <HAL_RCCEx_PeriphCLKConfig+0x378>
9000d254:	462e      	mov	r6, r5
9000d256:	f7ff bae9 	b.w	9000c82c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000d25a:	462e      	mov	r6, r5
9000d25c:	f7ff bb11 	b.w	9000c882 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000d260:	462e      	mov	r6, r5
9000d262:	f7ff bb39 	b.w	9000c8d8 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000d266:	462e      	mov	r6, r5
9000d268:	f7ff bb7a 	b.w	9000c960 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d26c:	4605      	mov	r5, r0
9000d26e:	e625      	b.n	9000cebc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d270:	4605      	mov	r5, r0
9000d272:	e635      	b.n	9000cee0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d274:	4605      	mov	r5, r0
9000d276:	e5fd      	b.n	9000ce74 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d278:	4605      	mov	r5, r0
9000d27a:	e60d      	b.n	9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000d27c:	4f6f      	ldr	r7, [pc, #444]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d27e:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000d280:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d282:	f021 0107 	bic.w	r1, r1, #7
9000d286:	4301      	orrs	r1, r0
9000d288:	6579      	str	r1, [r7, #84]	@ 0x54
9000d28a:	e47d      	b.n	9000cb88 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000d28c:	462e      	mov	r6, r5
9000d28e:	f7ff bb8e 	b.w	9000c9ae <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000d292:	462e      	mov	r6, r5
9000d294:	f7ff bbb1 	b.w	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000d298:	4f68      	ldr	r7, [pc, #416]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d29a:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000d29e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d2a0:	f021 0107 	bic.w	r1, r1, #7
9000d2a4:	4301      	orrs	r1, r0
9000d2a6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000d2a8:	e493      	b.n	9000cbd2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000d2aa:	462e      	mov	r6, r5
9000d2ac:	e4ba      	b.n	9000cc24 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000d2ae:	462e      	mov	r6, r5
9000d2b0:	e50a      	b.n	9000ccc8 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000d2b2:	462e      	mov	r6, r5
9000d2b4:	e535      	b.n	9000cd22 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000d2b6:	462e      	mov	r6, r5
9000d2b8:	e4dd      	b.n	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000d2ba:	462e      	mov	r6, r5
9000d2bc:	e443      	b.n	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d2be:	495f      	ldr	r1, [pc, #380]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d2c0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d2c2:	f001 0103 	and.w	r1, r1, #3
9000d2c6:	2903      	cmp	r1, #3
9000d2c8:	f43f ae2b 	beq.w	9000cf22 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000d2cc:	2102      	movs	r1, #2
9000d2ce:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d2d2:	f7ff f9d5 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d2d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d2d8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2dc:	2d00      	cmp	r5, #0
9000d2de:	d1e4      	bne.n	9000d2aa <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000d2e0:	e498      	b.n	9000cc14 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d2e2:	4956      	ldr	r1, [pc, #344]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d2e4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d2e6:	f001 0103 	and.w	r1, r1, #3
9000d2ea:	2903      	cmp	r1, #3
9000d2ec:	f43f abc7 	beq.w	9000ca7e <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000d2f0:	2102      	movs	r1, #2
9000d2f2:	f104 0008 	add.w	r0, r4, #8
9000d2f6:	f7ff f951 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d2fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d2fc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d300:	2d00      	cmp	r5, #0
9000d302:	d19c      	bne.n	9000d23e <HAL_RCCEx_PeriphCLKConfig+0xada>
9000d304:	f7ff bafc 	b.w	9000c900 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d308:	494c      	ldr	r1, [pc, #304]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d30a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d30c:	f001 0103 	and.w	r1, r1, #3
9000d310:	2903      	cmp	r1, #3
9000d312:	f43f ad16 	beq.w	9000cd42 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000d316:	2101      	movs	r1, #1
9000d318:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d31c:	f7ff f9b0 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d320:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d322:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d326:	2d00      	cmp	r5, #0
9000d328:	d187      	bne.n	9000d23a <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000d32a:	e646      	b.n	9000cfba <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d32c:	4943      	ldr	r1, [pc, #268]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d32e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d330:	f001 0103 	and.w	r1, r1, #3
9000d334:	2903      	cmp	r1, #3
9000d336:	f43f ae0e 	beq.w	9000cf56 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000d33a:	2102      	movs	r1, #2
9000d33c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d340:	f7ff f99e 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d344:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d346:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d34a:	2d00      	cmp	r5, #0
9000d34c:	d1af      	bne.n	9000d2ae <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000d34e:	e4b3      	b.n	9000ccb8 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d350:	493a      	ldr	r1, [pc, #232]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d352:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d354:	f001 0103 	and.w	r1, r1, #3
9000d358:	2903      	cmp	r1, #3
9000d35a:	f000 8131 	beq.w	9000d5c0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000d35e:	2102      	movs	r1, #2
9000d360:	f104 0008 	add.w	r0, r4, #8
9000d364:	f7ff f91a 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d368:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d36a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d36e:	2d00      	cmp	r5, #0
9000d370:	f47f abb3 	bne.w	9000cada <HAL_RCCEx_PeriphCLKConfig+0x376>
9000d374:	e766      	b.n	9000d244 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d376:	4931      	ldr	r1, [pc, #196]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d378:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d37a:	f001 0103 	and.w	r1, r1, #3
9000d37e:	2903      	cmp	r1, #3
9000d380:	f43f addc 	beq.w	9000cf3c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000d384:	2102      	movs	r1, #2
9000d386:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d38a:	f7ff f979 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d38e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d390:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d394:	2d00      	cmp	r5, #0
9000d396:	d18e      	bne.n	9000d2b6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000d398:	e465      	b.n	9000cc66 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d39a:	4928      	ldr	r1, [pc, #160]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d39c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d39e:	f001 0103 	and.w	r1, r1, #3
9000d3a2:	2903      	cmp	r1, #3
9000d3a4:	f43f ab83 	beq.w	9000caae <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000d3a8:	2101      	movs	r1, #1
9000d3aa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d3ae:	f7ff f967 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d3b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d3b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d3b8:	2d00      	cmp	r5, #0
9000d3ba:	f47f af67 	bne.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000d3be:	f7ff baef 	b.w	9000c9a0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d3c2:	491e      	ldr	r1, [pc, #120]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d3c4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d3c6:	f001 0103 	and.w	r1, r1, #3
9000d3ca:	2903      	cmp	r1, #3
9000d3cc:	f43f ab7a 	beq.w	9000cac4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000d3d0:	2101      	movs	r1, #1
9000d3d2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d3d6:	f7ff f953 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d3da:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d3dc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d3e0:	2d00      	cmp	r5, #0
9000d3e2:	f47f af56 	bne.w	9000d292 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000d3e6:	f7ff bb00 	b.w	9000c9ea <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d3ea:	4914      	ldr	r1, [pc, #80]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d3ec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d3ee:	f001 0103 	and.w	r1, r1, #3
9000d3f2:	2903      	cmp	r1, #3
9000d3f4:	f43f ab3d 	beq.w	9000ca72 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000d3f8:	2100      	movs	r1, #0
9000d3fa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d3fe:	f7ff f93f 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d402:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d404:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d408:	2d00      	cmp	r5, #0
9000d40a:	f47f af29 	bne.w	9000d260 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000d40e:	f7ff ba5b 	b.w	9000c8c8 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d412:	490a      	ldr	r1, [pc, #40]	@ (9000d43c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d414:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d416:	f001 0103 	and.w	r1, r1, #3
9000d41a:	2903      	cmp	r1, #3
9000d41c:	f43f ab3a 	beq.w	9000ca94 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000d420:	2100      	movs	r1, #0
9000d422:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d426:	f7ff f92b 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d42a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d42c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d430:	2d00      	cmp	r5, #0
9000d432:	f47f af18 	bne.w	9000d266 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000d436:	f7ff ba8c 	b.w	9000c952 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000d43a:	bf00      	nop
9000d43c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d440:	4973      	ldr	r1, [pc, #460]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d442:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d444:	f001 0103 	and.w	r1, r1, #3
9000d448:	2903      	cmp	r1, #3
9000d44a:	f43f ae07 	beq.w	9000d05c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000d44e:	2102      	movs	r1, #2
9000d450:	3028      	adds	r0, #40	@ 0x28
9000d452:	f7ff f915 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d456:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d458:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d45c:	2e00      	cmp	r6, #0
9000d45e:	f47f a9b0 	bne.w	9000c7c2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d462:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000d464:	f7ff b9a6 	b.w	9000c7b4 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d468:	4969      	ldr	r1, [pc, #420]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d46a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d46c:	f001 0103 	and.w	r1, r1, #3
9000d470:	2903      	cmp	r1, #3
9000d472:	f43f a9b2 	beq.w	9000c7da <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d476:	2100      	movs	r1, #0
9000d478:	f104 0008 	add.w	r0, r4, #8
9000d47c:	f7ff f88e 	bl	9000c59c <RCCEx_PLL2_Config.part.0>
9000d480:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d482:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d486:	2d00      	cmp	r5, #0
9000d488:	f43f ae53 	beq.w	9000d132 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000d48c:	462e      	mov	r6, r5
9000d48e:	f7ff b9a6 	b.w	9000c7de <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d492:	495f      	ldr	r1, [pc, #380]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d494:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d496:	f001 0103 	and.w	r1, r1, #3
9000d49a:	2903      	cmp	r1, #3
9000d49c:	f43f a99d 	beq.w	9000c7da <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d4a0:	2100      	movs	r1, #0
9000d4a2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4a6:	f7ff f8eb 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d4aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d4ac:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d4b0:	e63c      	b.n	9000d12c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4b2:	4957      	ldr	r1, [pc, #348]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d4b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4b6:	f001 0103 	and.w	r1, r1, #3
9000d4ba:	2903      	cmp	r1, #3
9000d4bc:	f43f aac0 	beq.w	9000ca40 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000d4c0:	2100      	movs	r1, #0
9000d4c2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4c6:	f7ff f8db 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d4ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d4cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4d0:	2d00      	cmp	r5, #0
9000d4d2:	f47f aebf 	bne.w	9000d254 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000d4d6:	f7ff b9a2 	b.w	9000c81e <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4da:	494d      	ldr	r1, [pc, #308]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d4dc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4de:	f001 0103 	and.w	r1, r1, #3
9000d4e2:	2903      	cmp	r1, #3
9000d4e4:	f43f aaba 	beq.w	9000ca5c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000d4e8:	2100      	movs	r1, #0
9000d4ea:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4ee:	f7ff f8c7 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d4f2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d4f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4f8:	2d00      	cmp	r5, #0
9000d4fa:	f47f aeae 	bne.w	9000d25a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000d4fe:	f7ff b9b8 	b.w	9000c872 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d502:	4943      	ldr	r1, [pc, #268]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d504:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d506:	f001 0103 	and.w	r1, r1, #3
9000d50a:	2903      	cmp	r1, #3
9000d50c:	d041      	beq.n	9000d592 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d50e:	2101      	movs	r1, #1
9000d510:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d514:	f7ff f8b4 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d518:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d51a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d51e:	2d00      	cmp	r5, #0
9000d520:	f47f ab56 	bne.w	9000cbd0 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000d524:	e6b8      	b.n	9000d298 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d526:	493a      	ldr	r1, [pc, #232]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d528:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d52a:	f001 0103 	and.w	r1, r1, #3
9000d52e:	2903      	cmp	r1, #3
9000d530:	d02b      	beq.n	9000d58a <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d532:	2101      	movs	r1, #1
9000d534:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d538:	f7ff f8a2 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d53c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d53e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d542:	2d00      	cmp	r5, #0
9000d544:	f47f ab1f 	bne.w	9000cb86 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000d548:	e698      	b.n	9000d27c <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d54a:	4931      	ldr	r1, [pc, #196]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d54c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d54e:	f001 0103 	and.w	r1, r1, #3
9000d552:	2903      	cmp	r1, #3
9000d554:	f43f aaf5 	beq.w	9000cb42 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d558:	2101      	movs	r1, #1
9000d55a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d55e:	f7ff f88f 	bl	9000c680 <RCCEx_PLL3_Config.part.0>
9000d562:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d564:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d568:	2d00      	cmp	r5, #0
9000d56a:	f47f aea6 	bne.w	9000d2ba <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000d56e:	e56d      	b.n	9000d04c <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000d570:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d572:	462e      	mov	r6, r5
9000d574:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d578:	f7ff bab3 	b.w	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d57c:	4d24      	ldr	r5, [pc, #144]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d57e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000d580:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d584:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d586:	f7ff b915 	b.w	9000c7b4 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000d58a:	2601      	movs	r6, #1
9000d58c:	4635      	mov	r5, r6
9000d58e:	f7ff bafb 	b.w	9000cb88 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000d592:	2601      	movs	r6, #1
9000d594:	4635      	mov	r5, r6
9000d596:	f7ff bb1c 	b.w	9000cbd2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000d59a:	2601      	movs	r6, #1
9000d59c:	f7ff bb9c 	b.w	9000ccd8 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000d5a0:	2601      	movs	r6, #1
9000d5a2:	f7ff bba7 	b.w	9000ccf4 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d5a6:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000d5aa:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d5ac:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d5b0:	f7ff bba0 	b.w	9000ccf4 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d5b4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d5b8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d5bc:	f7ff bb8c 	b.w	9000ccd8 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000d5c0:	2601      	movs	r6, #1
9000d5c2:	4635      	mov	r5, r6
9000d5c4:	f7ff ba8a 	b.w	9000cadc <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000d5c8:	f7fb f812 	bl	900085f0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d5cc:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000d5d0:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d5d2:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d5d6:	e004      	b.n	9000d5e2 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d5d8:	f7fb f80a 	bl	900085f0 <HAL_GetTick>
9000d5dc:	1bc0      	subs	r0, r0, r7
9000d5de:	4548      	cmp	r0, r9
9000d5e0:	d810      	bhi.n	9000d604 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d5e2:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000d5e6:	079b      	lsls	r3, r3, #30
9000d5e8:	d5f6      	bpl.n	9000d5d8 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d5ea:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d5ee:	e566      	b.n	9000d0be <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000d5f0:	4807      	ldr	r0, [pc, #28]	@ (9000d610 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d5f2:	4a08      	ldr	r2, [pc, #32]	@ (9000d614 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000d5f4:	6901      	ldr	r1, [r0, #16]
9000d5f6:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d5fa:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000d5fe:	430a      	orrs	r2, r1
9000d600:	6102      	str	r2, [r0, #16]
9000d602:	e567      	b.n	9000d0d4 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000d604:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d606:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d60a:	4635      	mov	r5, r6
9000d60c:	f7ff ba69 	b.w	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000d610:	58024400 	.word	0x58024400
9000d614:	00ffffcf 	.word	0x00ffffcf

9000d618 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d618:	b318      	cbz	r0, 9000d662 <HAL_SDRAM_Init+0x4a>
{
9000d61a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d61c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000d620:	4604      	mov	r4, r0
9000d622:	460d      	mov	r5, r1
9000d624:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d628:	b1b3      	cbz	r3, 9000d658 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d62a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d62c:	2302      	movs	r3, #2
9000d62e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d632:	f851 0b04 	ldr.w	r0, [r1], #4
9000d636:	f000 fa0f 	bl	9000da58 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d63a:	6862      	ldr	r2, [r4, #4]
9000d63c:	4629      	mov	r1, r5
9000d63e:	6820      	ldr	r0, [r4, #0]
9000d640:	f000 fa42 	bl	9000dac8 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d644:	4a08      	ldr	r2, [pc, #32]	@ (9000d668 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d646:	2101      	movs	r1, #1

  return HAL_OK;
9000d648:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d64a:	6813      	ldr	r3, [r2, #0]
9000d64c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000d650:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d652:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000d656:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d658:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d65c:	f7f6 fdb4 	bl	900041c8 <HAL_SDRAM_MspInit>
9000d660:	e7e3      	b.n	9000d62a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d662:	2001      	movs	r0, #1
}
9000d664:	4770      	bx	lr
9000d666:	bf00      	nop
9000d668:	52004000 	.word	0x52004000

9000d66c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d66c:	b510      	push	{r4, lr}
9000d66e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d670:	f7f6 fe26 	bl	900042c0 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d674:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d678:	f000 fa64 	bl	9000db44 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d67c:	2000      	movs	r0, #0
9000d67e:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d682:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000d686:	bd10      	pop	{r4, pc}

9000d688 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d688:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d68a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d68e:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d690:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d692:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d694:	d004      	beq.n	9000d6a0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d696:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000d69a:	2c01      	cmp	r4, #1
9000d69c:	d001      	beq.n	9000d6a2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d69e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d6a0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d6a2:	2302      	movs	r3, #2
9000d6a4:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d6a6:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d6a8:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d6ac:	f000 fa5e 	bl	9000db6c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d6b0:	6833      	ldr	r3, [r6, #0]
9000d6b2:	2b02      	cmp	r3, #2
9000d6b4:	d003      	beq.n	9000d6be <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d6b6:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000d6ba:	2000      	movs	r0, #0
}
9000d6bc:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d6be:	2305      	movs	r3, #5
9000d6c0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000d6c4:	e7f9      	b.n	9000d6ba <HAL_SDRAM_SendCommand+0x32>
9000d6c6:	bf00      	nop

9000d6c8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d6c8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d6ca:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d6ce:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d6d0:	2b02      	cmp	r3, #2
9000d6d2:	b2d8      	uxtb	r0, r3
9000d6d4:	d005      	beq.n	9000d6e2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d6d6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000d6da:	2b01      	cmp	r3, #1
9000d6dc:	b2dd      	uxtb	r5, r3
9000d6de:	d001      	beq.n	9000d6e4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d6e0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d6e2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d6e4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d6e6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d6e8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d6ec:	f000 fa56 	bl	9000db9c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d6f0:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d6f2:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000d6f6:	bd38      	pop	{r3, r4, r5, pc}

9000d6f8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d6f8:	4770      	bx	lr
9000d6fa:	bf00      	nop

9000d6fc <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d6fc:	2800      	cmp	r0, #0
9000d6fe:	f000 8090 	beq.w	9000d822 <HAL_TIM_Base_Init+0x126>
{
9000d702:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d704:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d708:	4604      	mov	r4, r0
9000d70a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d70e:	2b00      	cmp	r3, #0
9000d710:	d078      	beq.n	9000d804 <HAL_TIM_Base_Init+0x108>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d712:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d714:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d716:	4944      	ldr	r1, [pc, #272]	@ (9000d828 <HAL_TIM_Base_Init+0x12c>)
9000d718:	4d44      	ldr	r5, [pc, #272]	@ (9000d82c <HAL_TIM_Base_Init+0x130>)
9000d71a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000d71e:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000d722:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d726:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000d72a:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d72c:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d730:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d732:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d736:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d738:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d73c:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d73e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000d742:	d01f      	beq.n	9000d784 <HAL_TIM_Base_Init+0x88>
9000d744:	b9f1      	cbnz	r1, 9000d784 <HAL_TIM_Base_Init+0x88>
9000d746:	f8df c0f4 	ldr.w	ip, [pc, #244]	@ 9000d83c <HAL_TIM_Base_Init+0x140>
9000d74a:	4563      	cmp	r3, ip
9000d74c:	d01a      	beq.n	9000d784 <HAL_TIM_Base_Init+0x88>
9000d74e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d752:	4563      	cmp	r3, ip
9000d754:	d016      	beq.n	9000d784 <HAL_TIM_Base_Init+0x88>
9000d756:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d75a:	4563      	cmp	r3, ip
9000d75c:	d012      	beq.n	9000d784 <HAL_TIM_Base_Init+0x88>
9000d75e:	f1be 0f00 	cmp.w	lr, #0
9000d762:	d10f      	bne.n	9000d784 <HAL_TIM_Base_Init+0x88>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d764:	4d32      	ldr	r5, [pc, #200]	@ (9000d830 <HAL_TIM_Base_Init+0x134>)
9000d766:	4933      	ldr	r1, [pc, #204]	@ (9000d834 <HAL_TIM_Base_Init+0x138>)
9000d768:	428b      	cmp	r3, r1
9000d76a:	bf18      	it	ne
9000d76c:	42ab      	cmpne	r3, r5
9000d76e:	d04e      	beq.n	9000d80e <HAL_TIM_Base_Init+0x112>
9000d770:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000d774:	428b      	cmp	r3, r1
9000d776:	d04a      	beq.n	9000d80e <HAL_TIM_Base_Init+0x112>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d778:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d77c:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d77e:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d780:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d782:	e01e      	b.n	9000d7c2 <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000d784:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d786:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d78a:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000d78e:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d790:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d792:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000d794:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d798:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d79c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d7a0:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d7a2:	b961      	cbnz	r1, 9000d7be <HAL_TIM_Base_Init+0xc2>
9000d7a4:	f1be 0f00 	cmp.w	lr, #0
9000d7a8:	d109      	bne.n	9000d7be <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d7aa:	4923      	ldr	r1, [pc, #140]	@ (9000d838 <HAL_TIM_Base_Init+0x13c>)
9000d7ac:	4a20      	ldr	r2, [pc, #128]	@ (9000d830 <HAL_TIM_Base_Init+0x134>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d7ae:	4293      	cmp	r3, r2
9000d7b0:	bf18      	it	ne
9000d7b2:	428b      	cmpne	r3, r1
9000d7b4:	d003      	beq.n	9000d7be <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d7b6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d7ba:	4293      	cmp	r3, r2
9000d7bc:	d101      	bne.n	9000d7c2 <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d7be:	6962      	ldr	r2, [r4, #20]
9000d7c0:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d7c2:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d7c4:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d7c6:	f041 0104 	orr.w	r1, r1, #4
9000d7ca:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000d7cc:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000d7ce:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000d7d0:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d7d2:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d7d6:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000d7da:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000d7de:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000d7e2:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000d7e6:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000d7ea:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d7ee:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000d7f2:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000d7f6:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000d7fa:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d7fe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000d802:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000d804:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d808:	f7ff ff76 	bl	9000d6f8 <HAL_TIM_Base_MspInit>
9000d80c:	e781      	b.n	9000d712 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d80e:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d810:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d814:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d816:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000d818:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d81a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d81e:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d820:	e7c3      	b.n	9000d7aa <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000d822:	2001      	movs	r0, #1
}
9000d824:	4770      	bx	lr
9000d826:	bf00      	nop
9000d828:	40010000 	.word	0x40010000
9000d82c:	40010400 	.word	0x40010400
9000d830:	40014000 	.word	0x40014000
9000d834:	40014400 	.word	0x40014400
9000d838:	40014800 	.word	0x40014800
9000d83c:	40000400 	.word	0x40000400

9000d840 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d840:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d844:	2b01      	cmp	r3, #1
9000d846:	d13d      	bne.n	9000d8c4 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d848:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d84a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d84c:	4b1e      	ldr	r3, [pc, #120]	@ (9000d8c8 <HAL_TIM_Base_Start_IT+0x88>)
9000d84e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000d852:	bf18      	it	ne
9000d854:	429a      	cmpne	r2, r3
{
9000d856:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d858:	bf0c      	ite	eq
9000d85a:	2301      	moveq	r3, #1
9000d85c:	2300      	movne	r3, #0
9000d85e:	4d1b      	ldr	r5, [pc, #108]	@ (9000d8cc <HAL_TIM_Base_Start_IT+0x8c>)
9000d860:	4c1b      	ldr	r4, [pc, #108]	@ (9000d8d0 <HAL_TIM_Base_Start_IT+0x90>)
9000d862:	42aa      	cmp	r2, r5
9000d864:	bf08      	it	eq
9000d866:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d86a:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d86e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d870:	42a2      	cmp	r2, r4
9000d872:	bf08      	it	eq
9000d874:	f043 0301 	orreq.w	r3, r3, #1
9000d878:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d87c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d880:	4814      	ldr	r0, [pc, #80]	@ (9000d8d4 <HAL_TIM_Base_Start_IT+0x94>)
9000d882:	42a2      	cmp	r2, r4
9000d884:	bf08      	it	eq
9000d886:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d88a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d88c:	4282      	cmp	r2, r0
9000d88e:	bf08      	it	eq
9000d890:	f043 0301 	orreq.w	r3, r3, #1
9000d894:	4910      	ldr	r1, [pc, #64]	@ (9000d8d8 <HAL_TIM_Base_Start_IT+0x98>)
9000d896:	428a      	cmp	r2, r1
9000d898:	bf08      	it	eq
9000d89a:	f043 0301 	orreq.w	r3, r3, #1
9000d89e:	b913      	cbnz	r3, 9000d8a6 <HAL_TIM_Base_Start_IT+0x66>
9000d8a0:	4b0e      	ldr	r3, [pc, #56]	@ (9000d8dc <HAL_TIM_Base_Start_IT+0x9c>)
9000d8a2:	429a      	cmp	r2, r3
9000d8a4:	d107      	bne.n	9000d8b6 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d8a6:	6891      	ldr	r1, [r2, #8]
9000d8a8:	4b0d      	ldr	r3, [pc, #52]	@ (9000d8e0 <HAL_TIM_Base_Start_IT+0xa0>)
9000d8aa:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d8ac:	2b06      	cmp	r3, #6
9000d8ae:	d006      	beq.n	9000d8be <HAL_TIM_Base_Start_IT+0x7e>
9000d8b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000d8b4:	d003      	beq.n	9000d8be <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000d8b6:	6813      	ldr	r3, [r2, #0]
9000d8b8:	f043 0301 	orr.w	r3, r3, #1
9000d8bc:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000d8be:	2000      	movs	r0, #0
}
9000d8c0:	bc30      	pop	{r4, r5}
9000d8c2:	4770      	bx	lr
    return HAL_ERROR;
9000d8c4:	2001      	movs	r0, #1
}
9000d8c6:	4770      	bx	lr
9000d8c8:	40010000 	.word	0x40010000
9000d8cc:	40000400 	.word	0x40000400
9000d8d0:	40000800 	.word	0x40000800
9000d8d4:	40010400 	.word	0x40010400
9000d8d8:	40001800 	.word	0x40001800
9000d8dc:	40014000 	.word	0x40014000
9000d8e0:	00010007 	.word	0x00010007

9000d8e4 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000d8e4:	4770      	bx	lr
9000d8e6:	bf00      	nop

9000d8e8 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000d8e8:	4770      	bx	lr
9000d8ea:	bf00      	nop

9000d8ec <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000d8ec:	4770      	bx	lr
9000d8ee:	bf00      	nop

9000d8f0 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000d8f0:	4770      	bx	lr
9000d8f2:	bf00      	nop

9000d8f4 <HAL_TIM_IRQHandler>:
{
9000d8f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000d8f6:	6803      	ldr	r3, [r0, #0]
{
9000d8f8:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000d8fa:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000d8fc:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000d8fe:	07a1      	lsls	r1, r4, #30
9000d900:	d501      	bpl.n	9000d906 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000d902:	07b2      	lsls	r2, r6, #30
9000d904:	d457      	bmi.n	9000d9b6 <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000d906:	0767      	lsls	r7, r4, #29
9000d908:	d501      	bpl.n	9000d90e <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000d90a:	0770      	lsls	r0, r6, #29
9000d90c:	d440      	bmi.n	9000d990 <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000d90e:	0721      	lsls	r1, r4, #28
9000d910:	d501      	bpl.n	9000d916 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000d912:	0732      	lsls	r2, r6, #28
9000d914:	d42a      	bmi.n	9000d96c <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000d916:	06e7      	lsls	r7, r4, #27
9000d918:	d501      	bpl.n	9000d91e <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000d91a:	06f0      	lsls	r0, r6, #27
9000d91c:	d413      	bmi.n	9000d946 <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000d91e:	07e1      	lsls	r1, r4, #31
9000d920:	d501      	bpl.n	9000d926 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000d922:	07f2      	lsls	r2, r6, #31
9000d924:	d465      	bmi.n	9000d9f2 <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d926:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d92a:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d92e:	d052      	beq.n	9000d9d6 <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d930:	0633      	lsls	r3, r6, #24
9000d932:	d466      	bmi.n	9000da02 <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000d934:	0660      	lsls	r0, r4, #25
9000d936:	d501      	bpl.n	9000d93c <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000d938:	0671      	lsls	r1, r6, #25
9000d93a:	d473      	bmi.n	9000da24 <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000d93c:	06a2      	lsls	r2, r4, #26
9000d93e:	d501      	bpl.n	9000d944 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000d940:	06b3      	lsls	r3, r6, #26
9000d942:	d44d      	bmi.n	9000d9e0 <HAL_TIM_IRQHandler+0xec>
}
9000d944:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d946:	682b      	ldr	r3, [r5, #0]
9000d948:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000d94c:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d94e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d950:	2208      	movs	r2, #8
9000d952:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000d954:	69db      	ldr	r3, [r3, #28]
9000d956:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d95a:	d174      	bne.n	9000da46 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d95c:	f7ff ffc2 	bl	9000d8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d960:	4628      	mov	r0, r5
9000d962:	f7ff ffc3 	bl	9000d8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d966:	2300      	movs	r3, #0
9000d968:	772b      	strb	r3, [r5, #28]
9000d96a:	e7d8      	b.n	9000d91e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d96c:	682b      	ldr	r3, [r5, #0]
9000d96e:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000d972:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d974:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d976:	2204      	movs	r2, #4
9000d978:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000d97a:	69db      	ldr	r3, [r3, #28]
9000d97c:	079b      	lsls	r3, r3, #30
9000d97e:	d15f      	bne.n	9000da40 <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d980:	f7ff ffb0 	bl	9000d8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d984:	4628      	mov	r0, r5
9000d986:	f7ff ffb1 	bl	9000d8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d98a:	2300      	movs	r3, #0
9000d98c:	772b      	strb	r3, [r5, #28]
9000d98e:	e7c2      	b.n	9000d916 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d990:	682b      	ldr	r3, [r5, #0]
9000d992:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000d996:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d998:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d99a:	2202      	movs	r2, #2
9000d99c:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000d99e:	699b      	ldr	r3, [r3, #24]
9000d9a0:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d9a4:	d149      	bne.n	9000da3a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d9a6:	f7ff ff9d 	bl	9000d8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d9aa:	4628      	mov	r0, r5
9000d9ac:	f7ff ff9e 	bl	9000d8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d9b0:	2300      	movs	r3, #0
9000d9b2:	772b      	strb	r3, [r5, #28]
9000d9b4:	e7ab      	b.n	9000d90e <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000d9b6:	f06f 0202 	mvn.w	r2, #2
9000d9ba:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d9bc:	2201      	movs	r2, #1
9000d9be:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000d9c0:	699b      	ldr	r3, [r3, #24]
9000d9c2:	079b      	lsls	r3, r3, #30
9000d9c4:	d136      	bne.n	9000da34 <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000d9c6:	f7ff ff8d 	bl	9000d8e4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d9ca:	4628      	mov	r0, r5
9000d9cc:	f7ff ff8e 	bl	9000d8ec <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d9d0:	2300      	movs	r3, #0
9000d9d2:	772b      	strb	r3, [r5, #28]
9000d9d4:	e797      	b.n	9000d906 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d9d6:	2f00      	cmp	r7, #0
9000d9d8:	d0ac      	beq.n	9000d934 <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d9da:	0637      	lsls	r7, r6, #24
9000d9dc:	d41a      	bmi.n	9000da14 <HAL_TIM_IRQHandler+0x120>
9000d9de:	e7a9      	b.n	9000d934 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d9e0:	682b      	ldr	r3, [r5, #0]
9000d9e2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000d9e6:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d9e8:	611a      	str	r2, [r3, #16]
}
9000d9ea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000d9ee:	f000 b82d 	b.w	9000da4c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d9f2:	682b      	ldr	r3, [r5, #0]
9000d9f4:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000d9f8:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d9fa:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000d9fc:	f7f6 fa48 	bl	90003e90 <HAL_TIM_PeriodElapsedCallback>
9000da00:	e791      	b.n	9000d926 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000da02:	682b      	ldr	r3, [r5, #0]
9000da04:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000da08:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000da0a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000da0c:	f000 f820 	bl	9000da50 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000da10:	2f00      	cmp	r7, #0
9000da12:	d08f      	beq.n	9000d934 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000da14:	682b      	ldr	r3, [r5, #0]
9000da16:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000da1a:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000da1c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000da1e:	f000 f819 	bl	9000da54 <HAL_TIMEx_Break2Callback>
9000da22:	e787      	b.n	9000d934 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000da24:	682b      	ldr	r3, [r5, #0]
9000da26:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000da2a:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000da2c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000da2e:	f7ff ff5f 	bl	9000d8f0 <HAL_TIM_TriggerCallback>
9000da32:	e783      	b.n	9000d93c <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000da34:	f7ff ff58 	bl	9000d8e8 <HAL_TIM_IC_CaptureCallback>
9000da38:	e7ca      	b.n	9000d9d0 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000da3a:	f7ff ff55 	bl	9000d8e8 <HAL_TIM_IC_CaptureCallback>
9000da3e:	e7b7      	b.n	9000d9b0 <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000da40:	f7ff ff52 	bl	9000d8e8 <HAL_TIM_IC_CaptureCallback>
9000da44:	e7a1      	b.n	9000d98a <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000da46:	f7ff ff4f 	bl	9000d8e8 <HAL_TIM_IC_CaptureCallback>
9000da4a:	e78c      	b.n	9000d966 <HAL_TIM_IRQHandler+0x72>

9000da4c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000da4c:	4770      	bx	lr
9000da4e:	bf00      	nop

9000da50 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000da50:	4770      	bx	lr
9000da52:	bf00      	nop

9000da54 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000da54:	4770      	bx	lr
9000da56:	bf00      	nop

9000da58 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000da58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000da5c:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000da60:	e9d1 8200 	ldrd	r8, r2, [r1]
9000da64:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000da66:	ea43 030e 	orr.w	r3, r3, lr
9000da6a:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000da6e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000da72:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000da74:	f1b8 0f00 	cmp.w	r8, #0
9000da78:	d10f      	bne.n	9000da9a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000da7a:	433b      	orrs	r3, r7
9000da7c:	4313      	orrs	r3, r2
9000da7e:	4a11      	ldr	r2, [pc, #68]	@ (9000dac4 <FMC_SDRAM_Init+0x6c>)
9000da80:	ea43 030c 	orr.w	r3, r3, ip
9000da84:	4333      	orrs	r3, r6
9000da86:	432b      	orrs	r3, r5
9000da88:	4323      	orrs	r3, r4
9000da8a:	430b      	orrs	r3, r1
9000da8c:	6801      	ldr	r1, [r0, #0]
9000da8e:	400a      	ands	r2, r1
9000da90:	4313      	orrs	r3, r2
9000da92:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000da94:	2000      	movs	r0, #0
9000da96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000da9a:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000da9e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000daa0:	4332      	orrs	r2, r6
9000daa2:	432a      	orrs	r2, r5
9000daa4:	4322      	orrs	r2, r4
9000daa6:	4c07      	ldr	r4, [pc, #28]	@ (9000dac4 <FMC_SDRAM_Init+0x6c>)
9000daa8:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000daaa:	6801      	ldr	r1, [r0, #0]
9000daac:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000dab0:	430b      	orrs	r3, r1
9000dab2:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dab4:	6843      	ldr	r3, [r0, #4]
9000dab6:	401c      	ands	r4, r3
9000dab8:	4322      	orrs	r2, r4
9000daba:	6042      	str	r2, [r0, #4]
}
9000dabc:	2000      	movs	r0, #0
9000dabe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000dac2:	bf00      	nop
9000dac4:	ffff8000 	.word	0xffff8000

9000dac8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000dac8:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000daca:	68cc      	ldr	r4, [r1, #12]
9000dacc:	694b      	ldr	r3, [r1, #20]
9000dace:	3c01      	subs	r4, #1
9000dad0:	688d      	ldr	r5, [r1, #8]
9000dad2:	698f      	ldr	r7, [r1, #24]
9000dad4:	3b01      	subs	r3, #1
9000dad6:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000dada:	684c      	ldr	r4, [r1, #4]
9000dadc:	680e      	ldr	r6, [r1, #0]
9000dade:	3d01      	subs	r5, #1
9000dae0:	3c01      	subs	r4, #1
9000dae2:	051b      	lsls	r3, r3, #20
9000dae4:	022d      	lsls	r5, r5, #8
9000dae6:	3e01      	subs	r6, #1
9000dae8:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000daec:	690c      	ldr	r4, [r1, #16]
9000daee:	1e79      	subs	r1, r7, #1
9000daf0:	3c01      	subs	r4, #1
9000daf2:	0609      	lsls	r1, r1, #24
9000daf4:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000daf6:	b972      	cbnz	r2, 9000db16 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000daf8:	ea4e 0303 	orr.w	r3, lr, r3
9000dafc:	6882      	ldr	r2, [r0, #8]
9000dafe:	4333      	orrs	r3, r6
9000db00:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000db04:	ea43 030c 	orr.w	r3, r3, ip
9000db08:	432b      	orrs	r3, r5
9000db0a:	4323      	orrs	r3, r4
9000db0c:	430b      	orrs	r3, r1
9000db0e:	4313      	orrs	r3, r2
9000db10:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000db12:	2000      	movs	r0, #0
9000db14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000db16:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000db1a:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000db1e:	4a08      	ldr	r2, [pc, #32]	@ (9000db40 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000db20:	4333      	orrs	r3, r6
9000db22:	4323      	orrs	r3, r4
9000db24:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000db26:	6881      	ldr	r1, [r0, #8]
9000db28:	400a      	ands	r2, r1
9000db2a:	ea42 020e 	orr.w	r2, r2, lr
9000db2e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000db30:	68c2      	ldr	r2, [r0, #12]
9000db32:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000db36:	4313      	orrs	r3, r2
9000db38:	60c3      	str	r3, [r0, #12]
}
9000db3a:	2000      	movs	r0, #0
9000db3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000db3e:	bf00      	nop
9000db40:	ff0f0fff 	.word	0xff0f0fff

9000db44 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000db44:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000db46:	2200      	movs	r2, #0
{
9000db48:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000db4a:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000db4e:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000db52:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000db56:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000db5a:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000db5c:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000db60:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000db62:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000db64:	619a      	str	r2, [r3, #24]
}
9000db66:	bc30      	pop	{r4, r5}
9000db68:	4770      	bx	lr
9000db6a:	bf00      	nop

9000db6c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000db6c:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db6e:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000db72:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db74:	6900      	ldr	r0, [r0, #16]
9000db76:	4323      	orrs	r3, r4
9000db78:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000db7c:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000db80:	4c05      	ldr	r4, [pc, #20]	@ (9000db98 <FMC_SDRAM_SendCommand+0x2c>)
9000db82:	3901      	subs	r1, #1
9000db84:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000db86:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db88:	4323      	orrs	r3, r4
}
9000db8a:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db8e:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000db92:	6113      	str	r3, [r2, #16]
}
9000db94:	4770      	bx	lr
9000db96:	bf00      	nop
9000db98:	ffc00000 	.word	0xffc00000

9000db9c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000db9c:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000db9e:	4b05      	ldr	r3, [pc, #20]	@ (9000dbb4 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000dba0:	2000      	movs	r0, #0
{
9000dba2:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000dba4:	6954      	ldr	r4, [r2, #20]
9000dba6:	4023      	ands	r3, r4
}
9000dba8:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000dbac:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000dbb0:	6153      	str	r3, [r2, #20]
}
9000dbb2:	4770      	bx	lr
9000dbb4:	ffffc001 	.word	0xffffc001

9000dbb8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000dbb8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000dbba:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dbbe:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000dbc0:	f002 fc0c 	bl	900103dc <xTaskGetSchedulerState>
9000dbc4:	2801      	cmp	r0, #1
9000dbc6:	d100      	bne.n	9000dbca <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000dbc8:	bd08      	pop	{r3, pc}
9000dbca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000dbce:	f000 bc31 	b.w	9000e434 <xPortSysTickHandler>
9000dbd2:	bf00      	nop

9000dbd4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000dbd4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000dbd8:	b92b      	cbnz	r3, 9000dbe6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000dbda:	4b06      	ldr	r3, [pc, #24]	@ (9000dbf4 <osKernelInitialize+0x20>)
9000dbdc:	6818      	ldr	r0, [r3, #0]
9000dbde:	b928      	cbnz	r0, 9000dbec <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000dbe0:	2201      	movs	r2, #1
9000dbe2:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000dbe4:	4770      	bx	lr
    stat = osErrorISR;
9000dbe6:	f06f 0005 	mvn.w	r0, #5
9000dbea:	4770      	bx	lr
    } else {
      stat = osError;
9000dbec:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000dbf0:	4770      	bx	lr
9000dbf2:	bf00      	nop
9000dbf4:	2400a77c 	.word	0x2400a77c

9000dbf8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000dbf8:	b510      	push	{r4, lr}
9000dbfa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000dbfe:	b974      	cbnz	r4, 9000dc1e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000dc00:	4b08      	ldr	r3, [pc, #32]	@ (9000dc24 <osKernelStart+0x2c>)
9000dc02:	681a      	ldr	r2, [r3, #0]
9000dc04:	2a01      	cmp	r2, #1
9000dc06:	d107      	bne.n	9000dc18 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000dc08:	4907      	ldr	r1, [pc, #28]	@ (9000dc28 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000dc0a:	2202      	movs	r2, #2
9000dc0c:	77cc      	strb	r4, [r1, #31]
9000dc0e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000dc10:	f002 f982 	bl	9000ff18 <vTaskStartScheduler>
      stat = osOK;
9000dc14:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000dc16:	bd10      	pop	{r4, pc}
      stat = osError;
9000dc18:	f04f 30ff 	mov.w	r0, #4294967295
}
9000dc1c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dc1e:	f06f 0005 	mvn.w	r0, #5
}
9000dc22:	bd10      	pop	{r4, pc}
9000dc24:	2400a77c 	.word	0x2400a77c
9000dc28:	e000ed00 	.word	0xe000ed00

9000dc2c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dc2c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000dc2e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dc30:	b087      	sub	sp, #28
  hTask = NULL;
9000dc32:	9505      	str	r5, [sp, #20]
9000dc34:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000dc38:	b300      	cbz	r0, 9000dc7c <osThreadNew+0x50>
9000dc3a:	b9fb      	cbnz	r3, 9000dc7c <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000dc3c:	4614      	mov	r4, r2
9000dc3e:	b302      	cbz	r2, 9000dc82 <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000dc40:	6996      	ldr	r6, [r2, #24]
9000dc42:	b9c6      	cbnz	r6, 9000dc76 <osThreadNew+0x4a>
9000dc44:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dc46:	6863      	ldr	r3, [r4, #4]
9000dc48:	07db      	lsls	r3, r3, #31
9000dc4a:	d417      	bmi.n	9000dc7c <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000dc4c:	6963      	ldr	r3, [r4, #20]
9000dc4e:	b32b      	cbz	r3, 9000dc9c <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000dc50:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dc52:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000dc54:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dc58:	68e7      	ldr	r7, [r4, #12]
9000dc5a:	b30d      	cbz	r5, 9000dca0 <osThreadNew+0x74>
9000dc5c:	2f5f      	cmp	r7, #95	@ 0x5f
9000dc5e:	d90d      	bls.n	9000dc7c <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000dc60:	6924      	ldr	r4, [r4, #16]
9000dc62:	b15b      	cbz	r3, 9000dc7c <osThreadNew+0x50>
9000dc64:	b154      	cbz	r4, 9000dc7c <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000dc66:	460b      	mov	r3, r1
9000dc68:	9600      	str	r6, [sp, #0]
9000dc6a:	4661      	mov	r1, ip
9000dc6c:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000dc70:	f001 ff42 	bl	9000faf8 <xTaskCreateStatic>
9000dc74:	e003      	b.n	9000dc7e <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dc76:	1e72      	subs	r2, r6, #1
9000dc78:	2a37      	cmp	r2, #55	@ 0x37
9000dc7a:	d9e4      	bls.n	9000dc46 <osThreadNew+0x1a>
        return (NULL);
9000dc7c:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000dc7e:	b007      	add	sp, #28
9000dc80:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000dc82:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000dc84:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dc86:	460b      	mov	r3, r1
9000dc88:	4621      	mov	r1, r4
9000dc8a:	ac05      	add	r4, sp, #20
9000dc8c:	9600      	str	r6, [sp, #0]
9000dc8e:	9401      	str	r4, [sp, #4]
9000dc90:	f001 ffdc 	bl	9000fc4c <xTaskCreate>
9000dc94:	2801      	cmp	r0, #1
9000dc96:	d1f1      	bne.n	9000dc7c <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000dc98:	9805      	ldr	r0, [sp, #20]
9000dc9a:	e7f0      	b.n	9000dc7e <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000dc9c:	2280      	movs	r2, #128	@ 0x80
9000dc9e:	e7d8      	b.n	9000dc52 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000dca0:	2f00      	cmp	r7, #0
9000dca2:	d1eb      	bne.n	9000dc7c <osThreadNew+0x50>
9000dca4:	6923      	ldr	r3, [r4, #16]
9000dca6:	2b00      	cmp	r3, #0
9000dca8:	d1e8      	bne.n	9000dc7c <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dcaa:	b292      	uxth	r2, r2
9000dcac:	4664      	mov	r4, ip
9000dcae:	e7ea      	b.n	9000dc86 <osThreadNew+0x5a>

9000dcb0 <osDelay>:
9000dcb0:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000dcb4:	b93a      	cbnz	r2, 9000dcc6 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000dcb6:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000dcb8:	b908      	cbnz	r0, 9000dcbe <osDelay+0xe>
    stat = osOK;
9000dcba:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000dcbc:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000dcbe:	f002 f8d5 	bl	9000fe6c <vTaskDelay>
    stat = osOK;
9000dcc2:	2000      	movs	r0, #0
}
9000dcc4:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000dcc6:	f06f 0005 	mvn.w	r0, #5
}
9000dcca:	4770      	bx	lr

9000dccc <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000dccc:	b5f0      	push	{r4, r5, r6, r7, lr}
9000dcce:	b083      	sub	sp, #12
9000dcd0:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000dcd4:	b98e      	cbnz	r6, 9000dcfa <osSemaphoreNew+0x2e>
9000dcd6:	4605      	mov	r5, r0
9000dcd8:	b178      	cbz	r0, 9000dcfa <osSemaphoreNew+0x2e>
9000dcda:	4288      	cmp	r0, r1
9000dcdc:	460f      	mov	r7, r1
9000dcde:	d30c      	bcc.n	9000dcfa <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000dce0:	4614      	mov	r4, r2
9000dce2:	b172      	cbz	r2, 9000dd02 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000dce4:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000dce8:	b14a      	cbz	r2, 9000dcfe <osSemaphoreNew+0x32>
9000dcea:	2b4f      	cmp	r3, #79	@ 0x4f
9000dcec:	d905      	bls.n	9000dcfa <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000dcee:	2801      	cmp	r0, #1
9000dcf0:	d02f      	beq.n	9000dd52 <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000dcf2:	f000 fdc3 	bl	9000e87c <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000dcf6:	4605      	mov	r5, r0
9000dcf8:	b968      	cbnz	r0, 9000dd16 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000dcfa:	2500      	movs	r5, #0
9000dcfc:	e010      	b.n	9000dd20 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000dcfe:	2b00      	cmp	r3, #0
9000dd00:	d1fb      	bne.n	9000dcfa <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000dd02:	2d01      	cmp	r5, #1
9000dd04:	d00f      	beq.n	9000dd26 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000dd06:	4628      	mov	r0, r5
9000dd08:	4639      	mov	r1, r7
9000dd0a:	f000 fe17 	bl	9000e93c <xQueueCreateCountingSemaphore>
9000dd0e:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000dd10:	2d00      	cmp	r5, #0
9000dd12:	d0f2      	beq.n	9000dcfa <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000dd14:	b104      	cbz	r4, 9000dd18 <osSemaphoreNew+0x4c>
          name = attr->name;
9000dd16:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000dd18:	4621      	mov	r1, r4
9000dd1a:	4628      	mov	r0, r5
9000dd1c:	f001 fc46 	bl	9000f5ac <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000dd20:	4628      	mov	r0, r5
9000dd22:	b003      	add	sp, #12
9000dd24:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000dd26:	4628      	mov	r0, r5
9000dd28:	2203      	movs	r2, #3
9000dd2a:	2100      	movs	r1, #0
9000dd2c:	f000 fd64 	bl	9000e7f8 <xQueueGenericCreate>
9000dd30:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000dd32:	2d00      	cmp	r5, #0
9000dd34:	d0e1      	beq.n	9000dcfa <osSemaphoreNew+0x2e>
9000dd36:	2f00      	cmp	r7, #0
9000dd38:	d0ea      	beq.n	9000dd10 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000dd3a:	2300      	movs	r3, #0
9000dd3c:	4628      	mov	r0, r5
9000dd3e:	461a      	mov	r2, r3
9000dd40:	4619      	mov	r1, r3
9000dd42:	f000 fe41 	bl	9000e9c8 <xQueueGenericSend>
9000dd46:	2801      	cmp	r0, #1
9000dd48:	d0e4      	beq.n	9000dd14 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000dd4a:	4628      	mov	r0, r5
9000dd4c:	f001 fbe8 	bl	9000f520 <vQueueDelete>
      if (hSemaphore != NULL) {
9000dd50:	e7d3      	b.n	9000dcfa <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000dd52:	4613      	mov	r3, r2
9000dd54:	2203      	movs	r2, #3
9000dd56:	4631      	mov	r1, r6
9000dd58:	9200      	str	r2, [sp, #0]
9000dd5a:	4632      	mov	r2, r6
9000dd5c:	f000 fce0 	bl	9000e720 <xQueueGenericCreateStatic>
9000dd60:	4605      	mov	r5, r0
9000dd62:	e7e6      	b.n	9000dd32 <osSemaphoreNew+0x66>

9000dd64 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000dd64:	b360      	cbz	r0, 9000ddc0 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000dd66:	b510      	push	{r4, lr}
9000dd68:	460c      	mov	r4, r1
9000dd6a:	b082      	sub	sp, #8
9000dd6c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000dd70:	b1b3      	cbz	r3, 9000dda0 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000dd72:	bb11      	cbnz	r1, 9000ddba <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dd74:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000dd76:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dd78:	f001 fb76 	bl	9000f468 <xQueueReceiveFromISR>
9000dd7c:	2801      	cmp	r0, #1
9000dd7e:	d118      	bne.n	9000ddb2 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000dd80:	9b01      	ldr	r3, [sp, #4]
9000dd82:	b913      	cbnz	r3, 9000dd8a <osSemaphoreAcquire+0x26>
  stat = osOK;
9000dd84:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000dd86:	b002      	add	sp, #8
9000dd88:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000dd8a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dd8e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000dd92:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000dd96:	f3bf 8f4f 	dsb	sy
9000dd9a:	f3bf 8f6f 	isb	sy
9000dd9e:	e7f1      	b.n	9000dd84 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000dda0:	f001 f9d6 	bl	9000f150 <xQueueSemaphoreTake>
9000dda4:	2801      	cmp	r0, #1
9000dda6:	d0ed      	beq.n	9000dd84 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000dda8:	b11c      	cbz	r4, 9000ddb2 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000ddaa:	f06f 0001 	mvn.w	r0, #1
}
9000ddae:	b002      	add	sp, #8
9000ddb0:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000ddb2:	f06f 0002 	mvn.w	r0, #2
}
9000ddb6:	b002      	add	sp, #8
9000ddb8:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000ddba:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000ddbe:	e7e2      	b.n	9000dd86 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000ddc0:	f06f 0003 	mvn.w	r0, #3
}
9000ddc4:	4770      	bx	lr
9000ddc6:	bf00      	nop

9000ddc8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000ddc8:	b328      	cbz	r0, 9000de16 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000ddca:	b500      	push	{lr}
9000ddcc:	b083      	sub	sp, #12
9000ddce:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000ddd2:	b19b      	cbz	r3, 9000ddfc <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000ddd4:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000ddd6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000ddd8:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000ddda:	f000 ffdd 	bl	9000ed98 <xQueueGiveFromISR>
9000ddde:	2801      	cmp	r0, #1
9000dde0:	d116      	bne.n	9000de10 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000dde2:	9b01      	ldr	r3, [sp, #4]
9000dde4:	b183      	cbz	r3, 9000de08 <osSemaphoreRelease+0x40>
9000dde6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ddea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ddee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ddf2:	f3bf 8f4f 	dsb	sy
9000ddf6:	f3bf 8f6f 	isb	sy
9000ddfa:	e005      	b.n	9000de08 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000ddfc:	461a      	mov	r2, r3
9000ddfe:	4619      	mov	r1, r3
9000de00:	f000 fde2 	bl	9000e9c8 <xQueueGenericSend>
9000de04:	2801      	cmp	r0, #1
9000de06:	d103      	bne.n	9000de10 <osSemaphoreRelease+0x48>
  stat = osOK;
9000de08:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000de0a:	b003      	add	sp, #12
9000de0c:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000de10:	f06f 0002 	mvn.w	r0, #2
9000de14:	e7f9      	b.n	9000de0a <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000de16:	f06f 0003 	mvn.w	r0, #3
}
9000de1a:	4770      	bx	lr

9000de1c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000de1c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000de1e:	b083      	sub	sp, #12
9000de20:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000de24:	b987      	cbnz	r7, 9000de48 <osMessageQueueNew+0x2c>
9000de26:	4605      	mov	r5, r0
9000de28:	b170      	cbz	r0, 9000de48 <osMessageQueueNew+0x2c>
9000de2a:	b169      	cbz	r1, 9000de48 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000de2c:	4614      	mov	r4, r2
9000de2e:	b17a      	cbz	r2, 9000de50 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000de30:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000de34:	b1c3      	cbz	r3, 9000de68 <osMessageQueueNew+0x4c>
9000de36:	2a4f      	cmp	r2, #79	@ 0x4f
9000de38:	d906      	bls.n	9000de48 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000de3a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000de3c:	b122      	cbz	r2, 9000de48 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000de3e:	fb01 f505 	mul.w	r5, r1, r5
9000de42:	6966      	ldr	r6, [r4, #20]
9000de44:	42ae      	cmp	r6, r5
9000de46:	d21e      	bcs.n	9000de86 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000de48:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000de4a:	4628      	mov	r0, r5
9000de4c:	b003      	add	sp, #12
9000de4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000de50:	f000 fcd2 	bl	9000e7f8 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000de54:	4605      	mov	r5, r0
9000de56:	2800      	cmp	r0, #0
9000de58:	d0f6      	beq.n	9000de48 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000de5a:	4628      	mov	r0, r5
9000de5c:	4621      	mov	r1, r4
9000de5e:	f001 fba5 	bl	9000f5ac <vQueueAddToRegistry>
}
9000de62:	4628      	mov	r0, r5
9000de64:	b003      	add	sp, #12
9000de66:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000de68:	2a00      	cmp	r2, #0
9000de6a:	d1ed      	bne.n	9000de48 <osMessageQueueNew+0x2c>
9000de6c:	6923      	ldr	r3, [r4, #16]
9000de6e:	2b00      	cmp	r3, #0
9000de70:	d1ea      	bne.n	9000de48 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000de72:	6962      	ldr	r2, [r4, #20]
9000de74:	2a00      	cmp	r2, #0
9000de76:	d1e7      	bne.n	9000de48 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000de78:	f000 fcbe 	bl	9000e7f8 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000de7c:	4605      	mov	r5, r0
9000de7e:	2800      	cmp	r0, #0
9000de80:	d0e2      	beq.n	9000de48 <osMessageQueueNew+0x2c>
        name = attr->name;
9000de82:	6824      	ldr	r4, [r4, #0]
9000de84:	e7e9      	b.n	9000de5a <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000de86:	9700      	str	r7, [sp, #0]
9000de88:	f000 fc4a 	bl	9000e720 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000de8c:	4605      	mov	r5, r0
9000de8e:	2800      	cmp	r0, #0
9000de90:	d1f7      	bne.n	9000de82 <osMessageQueueNew+0x66>
9000de92:	e7d9      	b.n	9000de48 <osMessageQueueNew+0x2c>

9000de94 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000de94:	b560      	push	{r5, r6, lr}
9000de96:	461e      	mov	r6, r3
9000de98:	b083      	sub	sp, #12
9000de9a:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000de9e:	fab0 f580 	clz	r5, r0
9000dea2:	fab1 f381 	clz	r3, r1
9000dea6:	096d      	lsrs	r5, r5, #5
9000dea8:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000deaa:	b1da      	cbz	r2, 9000dee4 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000deac:	2e00      	cmp	r6, #0
9000deae:	bf18      	it	ne
9000deb0:	f043 0301 	orrne.w	r3, r3, #1
9000deb4:	bb33      	cbnz	r3, 9000df04 <osMessageQueuePut+0x70>
9000deb6:	bb2d      	cbnz	r5, 9000df04 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000deb8:	462b      	mov	r3, r5
9000deba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000debc:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000debe:	f000 ff05 	bl	9000eccc <xQueueGenericSendFromISR>
9000dec2:	2801      	cmp	r0, #1
9000dec4:	d11a      	bne.n	9000defc <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000dec6:	9b01      	ldr	r3, [sp, #4]
9000dec8:	b14b      	cbz	r3, 9000dede <osMessageQueuePut+0x4a>
9000deca:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dece:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ded2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ded6:	f3bf 8f4f 	dsb	sy
9000deda:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000dede:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000dee0:	b003      	add	sp, #12
9000dee2:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000dee4:	b975      	cbnz	r5, 9000df04 <osMessageQueuePut+0x70>
9000dee6:	b96b      	cbnz	r3, 9000df04 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000dee8:	4632      	mov	r2, r6
9000deea:	f000 fd6d 	bl	9000e9c8 <xQueueGenericSend>
9000deee:	2801      	cmp	r0, #1
9000def0:	d0f5      	beq.n	9000dede <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000def2:	b11e      	cbz	r6, 9000defc <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000def4:	f06f 0001 	mvn.w	r0, #1
}
9000def8:	b003      	add	sp, #12
9000defa:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000defc:	f06f 0002 	mvn.w	r0, #2
}
9000df00:	b003      	add	sp, #12
9000df02:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000df04:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000df08:	e7ea      	b.n	9000dee0 <osMessageQueuePut+0x4c>
9000df0a:	bf00      	nop

9000df0c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000df0c:	b570      	push	{r4, r5, r6, lr}
9000df0e:	461e      	mov	r6, r3
9000df10:	b082      	sub	sp, #8
9000df12:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000df16:	fab0 f580 	clz	r5, r0
9000df1a:	fab1 f481 	clz	r4, r1
9000df1e:	096d      	lsrs	r5, r5, #5
9000df20:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000df22:	b1d3      	cbz	r3, 9000df5a <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000df24:	2e00      	cmp	r6, #0
9000df26:	bf18      	it	ne
9000df28:	f044 0401 	orrne.w	r4, r4, #1
9000df2c:	bb2c      	cbnz	r4, 9000df7a <osMessageQueueGet+0x6e>
9000df2e:	bb25      	cbnz	r5, 9000df7a <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000df30:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000df32:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000df34:	f001 fa98 	bl	9000f468 <xQueueReceiveFromISR>
9000df38:	2801      	cmp	r0, #1
9000df3a:	d11a      	bne.n	9000df72 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000df3c:	9b01      	ldr	r3, [sp, #4]
9000df3e:	b14b      	cbz	r3, 9000df54 <osMessageQueueGet+0x48>
9000df40:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000df44:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000df48:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000df4c:	f3bf 8f4f 	dsb	sy
9000df50:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000df54:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000df56:	b002      	add	sp, #8
9000df58:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000df5a:	b975      	cbnz	r5, 9000df7a <osMessageQueueGet+0x6e>
9000df5c:	b96c      	cbnz	r4, 9000df7a <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000df5e:	4632      	mov	r2, r6
9000df60:	f000 ff70 	bl	9000ee44 <xQueueReceive>
9000df64:	2801      	cmp	r0, #1
9000df66:	d0f5      	beq.n	9000df54 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000df68:	b11e      	cbz	r6, 9000df72 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000df6a:	f06f 0001 	mvn.w	r0, #1
}
9000df6e:	b002      	add	sp, #8
9000df70:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000df72:	f06f 0002 	mvn.w	r0, #2
}
9000df76:	b002      	add	sp, #8
9000df78:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000df7a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000df7e:	e7ea      	b.n	9000df56 <osMessageQueueGet+0x4a>

9000df80 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000df80:	4b04      	ldr	r3, [pc, #16]	@ (9000df94 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000df82:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000df84:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000df86:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000df88:	4c03      	ldr	r4, [pc, #12]	@ (9000df98 <vApplicationGetIdleTaskMemory+0x18>)
9000df8a:	600c      	str	r4, [r1, #0]
}
9000df8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000df90:	6013      	str	r3, [r2, #0]
}
9000df92:	4770      	bx	lr
9000df94:	2400a71c 	.word	0x2400a71c
9000df98:	2400a51c 	.word	0x2400a51c

9000df9c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000df9c:	4b05      	ldr	r3, [pc, #20]	@ (9000dfb4 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000df9e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000dfa0:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000dfa2:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000dfa6:	4c04      	ldr	r4, [pc, #16]	@ (9000dfb8 <vApplicationGetTimerTaskMemory+0x1c>)
9000dfa8:	600c      	str	r4, [r1, #0]
}
9000dfaa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000dfae:	6013      	str	r3, [r2, #0]
}
9000dfb0:	4770      	bx	lr
9000dfb2:	bf00      	nop
9000dfb4:	2400a4bc 	.word	0x2400a4bc
9000dfb8:	2400a0bc 	.word	0x2400a0bc

9000dfbc <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000dfbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000dfc0:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000dfc2:	f002 f845 	bl	90010050 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000dfc6:	4a53      	ldr	r2, [pc, #332]	@ (9000e114 <pvPortMalloc+0x158>)
9000dfc8:	6815      	ldr	r5, [r2, #0]
9000dfca:	2d00      	cmp	r5, #0
9000dfcc:	d035      	beq.n	9000e03a <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000dfce:	4b52      	ldr	r3, [pc, #328]	@ (9000e118 <pvPortMalloc+0x15c>)
9000dfd0:	681e      	ldr	r6, [r3, #0]
9000dfd2:	4234      	tst	r4, r6
9000dfd4:	d12b      	bne.n	9000e02e <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000dfd6:	b354      	cbz	r4, 9000e02e <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000dfd8:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000dfdc:	0764      	lsls	r4, r4, #29
9000dfde:	d002      	beq.n	9000dfe6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000dfe0:	f020 0007 	bic.w	r0, r0, #7
9000dfe4:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000dfe6:	b310      	cbz	r0, 9000e02e <pvPortMalloc+0x72>
9000dfe8:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000e12c <pvPortMalloc+0x170>
9000dfec:	f8de c000 	ldr.w	ip, [lr]
9000dff0:	4584      	cmp	ip, r0
9000dff2:	d31c      	bcc.n	9000e02e <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000dff4:	4c49      	ldr	r4, [pc, #292]	@ (9000e11c <pvPortMalloc+0x160>)
9000dff6:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000dff8:	e003      	b.n	9000e002 <pvPortMalloc+0x46>
9000dffa:	681a      	ldr	r2, [r3, #0]
9000dffc:	b122      	cbz	r2, 9000e008 <pvPortMalloc+0x4c>
9000dffe:	461c      	mov	r4, r3
9000e000:	4613      	mov	r3, r2
9000e002:	6859      	ldr	r1, [r3, #4]
9000e004:	4281      	cmp	r1, r0
9000e006:	d3f8      	bcc.n	9000dffa <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e008:	42ab      	cmp	r3, r5
9000e00a:	d010      	beq.n	9000e02e <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e00c:	681a      	ldr	r2, [r3, #0]
9000e00e:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e010:	1a0a      	subs	r2, r1, r0
9000e012:	2a10      	cmp	r2, #16
9000e014:	d947      	bls.n	9000e0a6 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e016:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e018:	0761      	lsls	r1, r4, #29
9000e01a:	d02d      	beq.n	9000e078 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e01c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e020:	f383 8811 	msr	BASEPRI, r3
9000e024:	f3bf 8f6f 	isb	sy
9000e028:	f3bf 8f4f 	dsb	sy
9000e02c:	e7fe      	b.n	9000e02c <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000e02e:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e030:	f002 f816 	bl	90010060 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e034:	4620      	mov	r0, r4
9000e036:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000e03a:	4b39      	ldr	r3, [pc, #228]	@ (9000e120 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e03c:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e040:	4e36      	ldr	r6, [pc, #216]	@ (9000e11c <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e042:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000e044:	4d37      	ldr	r5, [pc, #220]	@ (9000e124 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e046:	bf18      	it	ne
9000e048:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e04a:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e04e:	bf18      	it	ne
9000e050:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000e054:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e056:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e058:	6033      	str	r3, [r6, #0]
9000e05a:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000e05c:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e05e:	1aeb      	subs	r3, r5, r3
}
9000e060:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000e062:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e066:	4a30      	ldr	r2, [pc, #192]	@ (9000e128 <pvPortMalloc+0x16c>)
9000e068:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e06a:	4a30      	ldr	r2, [pc, #192]	@ (9000e12c <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e06c:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e070:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e072:	4b29      	ldr	r3, [pc, #164]	@ (9000e118 <pvPortMalloc+0x15c>)
9000e074:	6018      	str	r0, [r3, #0]
}
9000e076:	e7ac      	b.n	9000dfd2 <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e078:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e07a:	4a28      	ldr	r2, [pc, #160]	@ (9000e11c <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000e07c:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e07e:	4617      	mov	r7, r2
9000e080:	6812      	ldr	r2, [r2, #0]
9000e082:	4294      	cmp	r4, r2
9000e084:	d8fb      	bhi.n	9000e07e <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e086:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e088:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e08c:	eb07 0901 	add.w	r9, r7, r1
9000e090:	454c      	cmp	r4, r9
9000e092:	d028      	beq.n	9000e0e6 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e094:	eb04 0108 	add.w	r1, r4, r8
9000e098:	428a      	cmp	r2, r1
9000e09a:	d02e      	beq.n	9000e0fa <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000e09c:	4601      	mov	r1, r0
9000e09e:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e0a0:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e0a2:	bf18      	it	ne
9000e0a4:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e0a6:	4820      	ldr	r0, [pc, #128]	@ (9000e128 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e0a8:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000e0ac:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e0ae:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e0b0:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e0b2:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e0b6:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e0b8:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e0bc:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e0be:	bf38      	it	cc
9000e0c0:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000e0c2:	481b      	ldr	r0, [pc, #108]	@ (9000e130 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000e0c4:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000e0c6:	6802      	ldr	r2, [r0, #0]
9000e0c8:	3201      	adds	r2, #1
9000e0ca:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000e0cc:	f001 ffc8 	bl	90010060 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e0d0:	0763      	lsls	r3, r4, #29
9000e0d2:	d0af      	beq.n	9000e034 <pvPortMalloc+0x78>
9000e0d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0d8:	f383 8811 	msr	BASEPRI, r3
9000e0dc:	f3bf 8f6f 	isb	sy
9000e0e0:	f3bf 8f4f 	dsb	sy
9000e0e4:	e7fe      	b.n	9000e0e4 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e0e6:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e0e8:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e0ec:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e0f0:	428a      	cmp	r2, r1
9000e0f2:	d001      	beq.n	9000e0f8 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e0f4:	6859      	ldr	r1, [r3, #4]
9000e0f6:	e7d6      	b.n	9000e0a6 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e0f8:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e0fa:	42aa      	cmp	r2, r5
9000e0fc:	d006      	beq.n	9000e10c <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e0fe:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e100:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e102:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e104:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e106:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e108:	6859      	ldr	r1, [r3, #4]
9000e10a:	e7c9      	b.n	9000e0a0 <pvPortMalloc+0xe4>
9000e10c:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000e10e:	6022      	str	r2, [r4, #0]
9000e110:	e7c6      	b.n	9000e0a0 <pvPortMalloc+0xe4>
9000e112:	bf00      	nop
9000e114:	2400a794 	.word	0x2400a794
9000e118:	2400a780 	.word	0x2400a780
9000e11c:	2400a798 	.word	0x2400a798
9000e120:	2400a7a0 	.word	0x2400a7a0
9000e124:	24022e38 	.word	0x24022e38
9000e128:	2400a78c 	.word	0x2400a78c
9000e12c:	2400a790 	.word	0x2400a790
9000e130:	2400a788 	.word	0x2400a788

9000e134 <vPortFree>:
	if( pv != NULL )
9000e134:	b1d0      	cbz	r0, 9000e16c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e136:	4a2d      	ldr	r2, [pc, #180]	@ (9000e1ec <vPortFree+0xb8>)
9000e138:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e13c:	6812      	ldr	r2, [r2, #0]
9000e13e:	4213      	tst	r3, r2
9000e140:	d00b      	beq.n	9000e15a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e142:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e146:	b191      	cbz	r1, 9000e16e <vPortFree+0x3a>
9000e148:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e14c:	f383 8811 	msr	BASEPRI, r3
9000e150:	f3bf 8f6f 	isb	sy
9000e154:	f3bf 8f4f 	dsb	sy
9000e158:	e7fe      	b.n	9000e158 <vPortFree+0x24>
9000e15a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e15e:	f383 8811 	msr	BASEPRI, r3
9000e162:	f3bf 8f6f 	isb	sy
9000e166:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e16a:	e7fe      	b.n	9000e16a <vPortFree+0x36>
9000e16c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e16e:	ea23 0302 	bic.w	r3, r3, r2
{
9000e172:	b530      	push	{r4, r5, lr}
9000e174:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e176:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e17a:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e17e:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e180:	f001 ff66 	bl	90010050 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e184:	4a1a      	ldr	r2, [pc, #104]	@ (9000e1f0 <vPortFree+0xbc>)
9000e186:	9801      	ldr	r0, [sp, #4]
9000e188:	6813      	ldr	r3, [r2, #0]
9000e18a:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000e18e:	440b      	add	r3, r1
9000e190:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e192:	4b18      	ldr	r3, [pc, #96]	@ (9000e1f4 <vPortFree+0xc0>)
9000e194:	461a      	mov	r2, r3
9000e196:	681b      	ldr	r3, [r3, #0]
9000e198:	429c      	cmp	r4, r3
9000e19a:	d8fb      	bhi.n	9000e194 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e19c:	6855      	ldr	r5, [r2, #4]
9000e19e:	eb02 0e05 	add.w	lr, r2, r5
9000e1a2:	4574      	cmp	r4, lr
9000e1a4:	d011      	beq.n	9000e1ca <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1a6:	eb04 0c01 	add.w	ip, r4, r1
9000e1aa:	4563      	cmp	r3, ip
9000e1ac:	d013      	beq.n	9000e1d6 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000e1ae:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000e1b2:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e1b4:	bf18      	it	ne
9000e1b6:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e1b8:	4a0f      	ldr	r2, [pc, #60]	@ (9000e1f8 <vPortFree+0xc4>)
9000e1ba:	6813      	ldr	r3, [r2, #0]
9000e1bc:	3301      	adds	r3, #1
9000e1be:	6013      	str	r3, [r2, #0]
}
9000e1c0:	b003      	add	sp, #12
9000e1c2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e1c6:	f001 bf4b 	b.w	90010060 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e1ca:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1cc:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e1ce:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1d0:	4283      	cmp	r3, r0
9000e1d2:	d1f1      	bne.n	9000e1b8 <vPortFree+0x84>
9000e1d4:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e1d6:	4809      	ldr	r0, [pc, #36]	@ (9000e1fc <vPortFree+0xc8>)
9000e1d8:	6800      	ldr	r0, [r0, #0]
9000e1da:	4283      	cmp	r3, r0
9000e1dc:	d003      	beq.n	9000e1e6 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e1de:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e1e2:	4429      	add	r1, r5
9000e1e4:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e1e6:	6020      	str	r0, [r4, #0]
9000e1e8:	e7e3      	b.n	9000e1b2 <vPortFree+0x7e>
9000e1ea:	bf00      	nop
9000e1ec:	2400a780 	.word	0x2400a780
9000e1f0:	2400a790 	.word	0x2400a790
9000e1f4:	2400a798 	.word	0x2400a798
9000e1f8:	2400a784 	.word	0x2400a784
9000e1fc:	2400a794 	.word	0x2400a794

9000e200 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e200:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e204:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e208:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e20a:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e20c:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e20e:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e210:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e214:	4770      	bx	lr
9000e216:	bf00      	nop

9000e218 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e218:	2300      	movs	r3, #0
9000e21a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e21c:	4770      	bx	lr
9000e21e:	bf00      	nop

9000e220 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e220:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000e222:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000e224:	3301      	adds	r3, #1
{
9000e226:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e228:	6894      	ldr	r4, [r2, #8]
9000e22a:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e22e:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e230:	6091      	str	r1, [r2, #8]
}
9000e232:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e236:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e238:	6003      	str	r3, [r0, #0]
}
9000e23a:	4770      	bx	lr

9000e23c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e23c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e23e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e240:	1c6b      	adds	r3, r5, #1
9000e242:	d010      	beq.n	9000e266 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e244:	f100 0308 	add.w	r3, r0, #8
9000e248:	461c      	mov	r4, r3
9000e24a:	685b      	ldr	r3, [r3, #4]
9000e24c:	681a      	ldr	r2, [r3, #0]
9000e24e:	42aa      	cmp	r2, r5
9000e250:	d9fa      	bls.n	9000e248 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e252:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e254:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e256:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e258:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e25a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e25c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e25e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e260:	6002      	str	r2, [r0, #0]
}
9000e262:	bc30      	pop	{r4, r5}
9000e264:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e266:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e268:	6863      	ldr	r3, [r4, #4]
9000e26a:	e7f2      	b.n	9000e252 <vListInsert+0x16>

9000e26c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e26c:	6903      	ldr	r3, [r0, #16]
{
9000e26e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e270:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e272:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e276:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e278:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e27c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e27e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e280:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e284:	bf08      	it	eq
9000e286:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e288:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e28a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e28c:	3a01      	subs	r2, #1
9000e28e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e290:	6818      	ldr	r0, [r3, #0]
}
9000e292:	4770      	bx	lr

9000e294 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e294:	4808      	ldr	r0, [pc, #32]	@ (9000e2b8 <prvPortStartFirstTask+0x24>)
9000e296:	6800      	ldr	r0, [r0, #0]
9000e298:	6800      	ldr	r0, [r0, #0]
9000e29a:	f380 8808 	msr	MSP, r0
9000e29e:	f04f 0000 	mov.w	r0, #0
9000e2a2:	f380 8814 	msr	CONTROL, r0
9000e2a6:	b662      	cpsie	i
9000e2a8:	b661      	cpsie	f
9000e2aa:	f3bf 8f4f 	dsb	sy
9000e2ae:	f3bf 8f6f 	isb	sy
9000e2b2:	df00      	svc	0
9000e2b4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e2b6:	0000      	.short	0x0000
9000e2b8:	e000ed08 	.word	0xe000ed08

9000e2bc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e2bc:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000e2cc <vPortEnableVFP+0x10>
9000e2c0:	6801      	ldr	r1, [r0, #0]
9000e2c2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000e2c6:	6001      	str	r1, [r0, #0]
9000e2c8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e2ca:	0000      	.short	0x0000
9000e2cc:	e000ed88 	.word	0xe000ed88

9000e2d0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e2d0:	4b0e      	ldr	r3, [pc, #56]	@ (9000e30c <prvTaskExitError+0x3c>)
{
9000e2d2:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e2d4:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e2d6:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e2d8:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e2da:	3301      	adds	r3, #1
9000e2dc:	d008      	beq.n	9000e2f0 <prvTaskExitError+0x20>
9000e2de:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2e2:	f383 8811 	msr	BASEPRI, r3
9000e2e6:	f3bf 8f6f 	isb	sy
9000e2ea:	f3bf 8f4f 	dsb	sy
9000e2ee:	e7fe      	b.n	9000e2ee <prvTaskExitError+0x1e>
9000e2f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2f4:	f383 8811 	msr	BASEPRI, r3
9000e2f8:	f3bf 8f6f 	isb	sy
9000e2fc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e300:	9b01      	ldr	r3, [sp, #4]
9000e302:	2b00      	cmp	r3, #0
9000e304:	d0fc      	beq.n	9000e300 <prvTaskExitError+0x30>
}
9000e306:	b002      	add	sp, #8
9000e308:	4770      	bx	lr
9000e30a:	bf00      	nop
9000e30c:	24000084 	.word	0x24000084

9000e310 <pxPortInitialiseStack>:
{
9000e310:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e312:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e316:	4809      	ldr	r0, [pc, #36]	@ (9000e33c <pxPortInitialiseStack+0x2c>)
{
9000e318:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e31a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e31e:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e322:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e326:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e32a:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e32e:	f06f 0102 	mvn.w	r1, #2
}
9000e332:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e336:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000e33a:	4770      	bx	lr
9000e33c:	9000e2d1 	.word	0x9000e2d1

9000e340 <SVC_Handler>:
	__asm volatile (
9000e340:	4b07      	ldr	r3, [pc, #28]	@ (9000e360 <pxCurrentTCBConst2>)
9000e342:	6819      	ldr	r1, [r3, #0]
9000e344:	6808      	ldr	r0, [r1, #0]
9000e346:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e34a:	f380 8809 	msr	PSP, r0
9000e34e:	f3bf 8f6f 	isb	sy
9000e352:	f04f 0000 	mov.w	r0, #0
9000e356:	f380 8811 	msr	BASEPRI, r0
9000e35a:	4770      	bx	lr
9000e35c:	f3af 8000 	nop.w

9000e360 <pxCurrentTCBConst2>:
9000e360:	24023380 	.word	0x24023380

9000e364 <vPortEnterCritical>:
9000e364:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e368:	f383 8811 	msr	BASEPRI, r3
9000e36c:	f3bf 8f6f 	isb	sy
9000e370:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000e374:	4a0b      	ldr	r2, [pc, #44]	@ (9000e3a4 <vPortEnterCritical+0x40>)
9000e376:	6813      	ldr	r3, [r2, #0]
9000e378:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000e37a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000e37c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000e37e:	d000      	beq.n	9000e382 <vPortEnterCritical+0x1e>
}
9000e380:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000e382:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e386:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000e38a:	b2db      	uxtb	r3, r3
9000e38c:	2b00      	cmp	r3, #0
9000e38e:	d0f7      	beq.n	9000e380 <vPortEnterCritical+0x1c>
9000e390:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e394:	f383 8811 	msr	BASEPRI, r3
9000e398:	f3bf 8f6f 	isb	sy
9000e39c:	f3bf 8f4f 	dsb	sy
9000e3a0:	e7fe      	b.n	9000e3a0 <vPortEnterCritical+0x3c>
9000e3a2:	bf00      	nop
9000e3a4:	24000084 	.word	0x24000084

9000e3a8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000e3a8:	4a08      	ldr	r2, [pc, #32]	@ (9000e3cc <vPortExitCritical+0x24>)
9000e3aa:	6813      	ldr	r3, [r2, #0]
9000e3ac:	b943      	cbnz	r3, 9000e3c0 <vPortExitCritical+0x18>
9000e3ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3b2:	f383 8811 	msr	BASEPRI, r3
9000e3b6:	f3bf 8f6f 	isb	sy
9000e3ba:	f3bf 8f4f 	dsb	sy
9000e3be:	e7fe      	b.n	9000e3be <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000e3c0:	3b01      	subs	r3, #1
9000e3c2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000e3c4:	b90b      	cbnz	r3, 9000e3ca <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000e3c6:	f383 8811 	msr	BASEPRI, r3
}
9000e3ca:	4770      	bx	lr
9000e3cc:	24000084 	.word	0x24000084

9000e3d0 <PendSV_Handler>:
	__asm volatile
9000e3d0:	f3ef 8009 	mrs	r0, PSP
9000e3d4:	f3bf 8f6f 	isb	sy
9000e3d8:	4b15      	ldr	r3, [pc, #84]	@ (9000e430 <pxCurrentTCBConst>)
9000e3da:	681a      	ldr	r2, [r3, #0]
9000e3dc:	f01e 0f10 	tst.w	lr, #16
9000e3e0:	bf08      	it	eq
9000e3e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000e3e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e3ea:	6010      	str	r0, [r2, #0]
9000e3ec:	e92d 0009 	stmdb	sp!, {r0, r3}
9000e3f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000e3f4:	f380 8811 	msr	BASEPRI, r0
9000e3f8:	f3bf 8f4f 	dsb	sy
9000e3fc:	f3bf 8f6f 	isb	sy
9000e400:	f001 fe6a 	bl	900100d8 <vTaskSwitchContext>
9000e404:	f04f 0000 	mov.w	r0, #0
9000e408:	f380 8811 	msr	BASEPRI, r0
9000e40c:	bc09      	pop	{r0, r3}
9000e40e:	6819      	ldr	r1, [r3, #0]
9000e410:	6808      	ldr	r0, [r1, #0]
9000e412:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e416:	f01e 0f10 	tst.w	lr, #16
9000e41a:	bf08      	it	eq
9000e41c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000e420:	f380 8809 	msr	PSP, r0
9000e424:	f3bf 8f6f 	isb	sy
9000e428:	4770      	bx	lr
9000e42a:	bf00      	nop
9000e42c:	f3af 8000 	nop.w

9000e430 <pxCurrentTCBConst>:
9000e430:	24023380 	.word	0x24023380

9000e434 <xPortSysTickHandler>:
{
9000e434:	b508      	push	{r3, lr}
	__asm volatile
9000e436:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e43a:	f383 8811 	msr	BASEPRI, r3
9000e43e:	f3bf 8f6f 	isb	sy
9000e442:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000e446:	f001 fe21 	bl	9001008c <xTaskIncrementTick>
9000e44a:	b128      	cbz	r0, 9000e458 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000e44c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e450:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e454:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000e458:	2300      	movs	r3, #0
9000e45a:	f383 8811 	msr	BASEPRI, r3
}
9000e45e:	bd08      	pop	{r3, pc}

9000e460 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e460:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000e464:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e466:	4806      	ldr	r0, [pc, #24]	@ (9000e480 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e468:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e46a:	4906      	ldr	r1, [pc, #24]	@ (9000e484 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000e46c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e46e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e470:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e472:	fba1 1303 	umull	r1, r3, r1, r3
9000e476:	099b      	lsrs	r3, r3, #6
9000e478:	3b01      	subs	r3, #1
9000e47a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e47c:	6110      	str	r0, [r2, #16]
}
9000e47e:	4770      	bx	lr
9000e480:	24000078 	.word	0x24000078
9000e484:	10624dd3 	.word	0x10624dd3

9000e488 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e488:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e48c:	4a48      	ldr	r2, [pc, #288]	@ (9000e5b0 <xPortStartScheduler+0x128>)
9000e48e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000e492:	4291      	cmp	r1, r2
9000e494:	d041      	beq.n	9000e51a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e496:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000e49a:	4b46      	ldr	r3, [pc, #280]	@ (9000e5b4 <xPortStartScheduler+0x12c>)
9000e49c:	429a      	cmp	r2, r3
9000e49e:	d033      	beq.n	9000e508 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e4a0:	4b45      	ldr	r3, [pc, #276]	@ (9000e5b8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e4a2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e4a6:	4845      	ldr	r0, [pc, #276]	@ (9000e5bc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e4a8:	4945      	ldr	r1, [pc, #276]	@ (9000e5c0 <xPortStartScheduler+0x138>)
{
9000e4aa:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e4ac:	781a      	ldrb	r2, [r3, #0]
{
9000e4ae:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e4b0:	b2d2      	uxtb	r2, r2
9000e4b2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e4b4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e4b6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e4ba:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e4bc:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e4be:	b2db      	uxtb	r3, r3
9000e4c0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e4c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e4c8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e4cc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e4d0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e4d2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e4d4:	d50f      	bpl.n	9000e4f6 <xPortStartScheduler+0x6e>
9000e4d6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e4d8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e4dc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e4de:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e4e0:	005b      	lsls	r3, r3, #1
9000e4e2:	b2db      	uxtb	r3, r3
9000e4e4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e4e8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e4ec:	061b      	lsls	r3, r3, #24
9000e4ee:	d4f3      	bmi.n	9000e4d8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000e4f0:	2903      	cmp	r1, #3
9000e4f2:	d01b      	beq.n	9000e52c <xPortStartScheduler+0xa4>
9000e4f4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000e4f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4fa:	f383 8811 	msr	BASEPRI, r3
9000e4fe:	f3bf 8f6f 	isb	sy
9000e502:	f3bf 8f4f 	dsb	sy
9000e506:	e7fe      	b.n	9000e506 <xPortStartScheduler+0x7e>
9000e508:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e50c:	f383 8811 	msr	BASEPRI, r3
9000e510:	f3bf 8f6f 	isb	sy
9000e514:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e518:	e7fe      	b.n	9000e518 <xPortStartScheduler+0x90>
9000e51a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e51e:	f383 8811 	msr	BASEPRI, r3
9000e522:	f3bf 8f6f 	isb	sy
9000e526:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e52a:	e7fe      	b.n	9000e52a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e52c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e52e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e532:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e536:	4a20      	ldr	r2, [pc, #128]	@ (9000e5b8 <xPortStartScheduler+0x130>)
9000e538:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000e53a:	4e22      	ldr	r6, [pc, #136]	@ (9000e5c4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e53c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000e53e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e540:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e542:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e546:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000e54a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000e54e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e552:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000e556:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000e55a:	f7ff ff81 	bl	9000e460 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000e55e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000e560:	f7ff feac 	bl	9000e2bc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000e564:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000e568:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000e56c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000e570:	f7ff fe90 	bl	9000e294 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000e574:	f001 fdb0 	bl	900100d8 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000e578:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000e57a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000e57c:	3301      	adds	r3, #1
9000e57e:	d008      	beq.n	9000e592 <xPortStartScheduler+0x10a>
9000e580:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e584:	f383 8811 	msr	BASEPRI, r3
9000e588:	f3bf 8f6f 	isb	sy
9000e58c:	f3bf 8f4f 	dsb	sy
9000e590:	e7fe      	b.n	9000e590 <xPortStartScheduler+0x108>
9000e592:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e596:	f383 8811 	msr	BASEPRI, r3
9000e59a:	f3bf 8f6f 	isb	sy
9000e59e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e5a2:	9b03      	ldr	r3, [sp, #12]
9000e5a4:	2b00      	cmp	r3, #0
9000e5a6:	d0fc      	beq.n	9000e5a2 <xPortStartScheduler+0x11a>
}
9000e5a8:	2000      	movs	r0, #0
9000e5aa:	b004      	add	sp, #16
9000e5ac:	bd70      	pop	{r4, r5, r6, pc}
9000e5ae:	bf00      	nop
9000e5b0:	410fc271 	.word	0x410fc271
9000e5b4:	410fc270 	.word	0x410fc270
9000e5b8:	e000e400 	.word	0xe000e400
9000e5bc:	24022e40 	.word	0x24022e40
9000e5c0:	24022e44 	.word	0x24022e44
9000e5c4:	24000084 	.word	0x24000084

9000e5c8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000e5c8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000e5cc:	2b0f      	cmp	r3, #15
9000e5ce:	d90e      	bls.n	9000e5ee <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e5d0:	4911      	ldr	r1, [pc, #68]	@ (9000e618 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e5d2:	4a12      	ldr	r2, [pc, #72]	@ (9000e61c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e5d4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e5d6:	7812      	ldrb	r2, [r2, #0]
9000e5d8:	429a      	cmp	r2, r3
9000e5da:	d908      	bls.n	9000e5ee <vPortValidateInterruptPriority+0x26>
9000e5dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5e0:	f383 8811 	msr	BASEPRI, r3
9000e5e4:	f3bf 8f6f 	isb	sy
9000e5e8:	f3bf 8f4f 	dsb	sy
9000e5ec:	e7fe      	b.n	9000e5ec <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000e5ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e5f2:	4a0b      	ldr	r2, [pc, #44]	@ (9000e620 <vPortValidateInterruptPriority+0x58>)
9000e5f4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000e5f8:	6812      	ldr	r2, [r2, #0]
9000e5fa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000e5fe:	4293      	cmp	r3, r2
9000e600:	d908      	bls.n	9000e614 <vPortValidateInterruptPriority+0x4c>
9000e602:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e606:	f383 8811 	msr	BASEPRI, r3
9000e60a:	f3bf 8f6f 	isb	sy
9000e60e:	f3bf 8f4f 	dsb	sy
9000e612:	e7fe      	b.n	9000e612 <vPortValidateInterruptPriority+0x4a>
	}
9000e614:	4770      	bx	lr
9000e616:	bf00      	nop
9000e618:	e000e3f0 	.word	0xe000e3f0
9000e61c:	24022e44 	.word	0x24022e44
9000e620:	24022e40 	.word	0x24022e40

9000e624 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000e624:	b570      	push	{r4, r5, r6, lr}
9000e626:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e628:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000e62a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e62c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e62e:	b92a      	cbnz	r2, 9000e63c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e630:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e632:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e634:	b34e      	cbz	r6, 9000e68a <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000e636:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e638:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000e63a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000e63c:	b97e      	cbnz	r6, 9000e65e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e63e:	6840      	ldr	r0, [r0, #4]
9000e640:	f01c f9a3 	bl	9002a98a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e644:	6863      	ldr	r3, [r4, #4]
9000e646:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e648:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e64a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e64c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e64e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e650:	bf24      	itt	cs
9000e652:	6823      	ldrcs	r3, [r4, #0]
9000e654:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e656:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000e658:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e65a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000e65c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000e65e:	68c0      	ldr	r0, [r0, #12]
9000e660:	f01c f993 	bl	9002a98a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e664:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e666:	68e3      	ldr	r3, [r4, #12]
9000e668:	4251      	negs	r1, r2
9000e66a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e66c:	6822      	ldr	r2, [r4, #0]
9000e66e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e670:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e672:	d202      	bcs.n	9000e67a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000e674:	68a3      	ldr	r3, [r4, #8]
9000e676:	440b      	add	r3, r1
9000e678:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000e67a:	2e02      	cmp	r6, #2
9000e67c:	d1eb      	bne.n	9000e656 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e67e:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000e680:	f04f 0000 	mov.w	r0, #0
9000e684:	bf38      	it	cc
9000e686:	2501      	movcc	r5, #1
9000e688:	e7d6      	b.n	9000e638 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e68a:	6880      	ldr	r0, [r0, #8]
9000e68c:	f001 fef6 	bl	9001047c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000e690:	60a6      	str	r6, [r4, #8]
9000e692:	e7d1      	b.n	9000e638 <prvCopyDataToQueue+0x14>

9000e694 <xQueueGenericReset>:
{
9000e694:	b538      	push	{r3, r4, r5, lr}
	configASSERT( pxQueue );
9000e696:	b1e0      	cbz	r0, 9000e6d2 <xQueueGenericReset+0x3e>
	taskENTER_CRITICAL();
9000e698:	4604      	mov	r4, r0
9000e69a:	460d      	mov	r5, r1
9000e69c:	f7ff fe62 	bl	9000e364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6a0:	6822      	ldr	r2, [r4, #0]
9000e6a2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e6a6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6a8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6ac:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6ae:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6b0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6b2:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e6b4:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e6b6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e6b8:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e6ba:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e6bc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e6c0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
9000e6c4:	b975      	cbnz	r5, 9000e6e4 <xQueueGenericReset+0x50>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6c6:	6923      	ldr	r3, [r4, #16]
9000e6c8:	b9c3      	cbnz	r3, 9000e6fc <xQueueGenericReset+0x68>
	taskEXIT_CRITICAL();
9000e6ca:	f7ff fe6d 	bl	9000e3a8 <vPortExitCritical>
}
9000e6ce:	2001      	movs	r0, #1
9000e6d0:	bd38      	pop	{r3, r4, r5, pc}
9000e6d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e6d6:	f383 8811 	msr	BASEPRI, r3
9000e6da:	f3bf 8f6f 	isb	sy
9000e6de:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e6e2:	e7fe      	b.n	9000e6e2 <xQueueGenericReset+0x4e>
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e6e4:	f104 0010 	add.w	r0, r4, #16
9000e6e8:	f7ff fd8a 	bl	9000e200 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e6ec:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e6f0:	f7ff fd86 	bl	9000e200 <vListInitialise>
	taskEXIT_CRITICAL();
9000e6f4:	f7ff fe58 	bl	9000e3a8 <vPortExitCritical>
}
9000e6f8:	2001      	movs	r0, #1
9000e6fa:	bd38      	pop	{r3, r4, r5, pc}
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6fc:	f104 0010 	add.w	r0, r4, #16
9000e700:	f001 fdd2 	bl	900102a8 <xTaskRemoveFromEventList>
9000e704:	2800      	cmp	r0, #0
9000e706:	d0e0      	beq.n	9000e6ca <xQueueGenericReset+0x36>
					queueYIELD_IF_USING_PREEMPTION();
9000e708:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e70c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e710:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e714:	f3bf 8f4f 	dsb	sy
9000e718:	f3bf 8f6f 	isb	sy
9000e71c:	e7d5      	b.n	9000e6ca <xQueueGenericReset+0x36>
9000e71e:	bf00      	nop

9000e720 <xQueueGenericCreateStatic>:
	{
9000e720:	b530      	push	{r4, r5, lr}
9000e722:	b083      	sub	sp, #12
9000e724:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e728:	b940      	cbnz	r0, 9000e73c <xQueueGenericCreateStatic+0x1c>
9000e72a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e72e:	f383 8811 	msr	BASEPRI, r3
9000e732:	f3bf 8f6f 	isb	sy
9000e736:	f3bf 8f4f 	dsb	sy
9000e73a:	e7fe      	b.n	9000e73a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000e73c:	461c      	mov	r4, r3
9000e73e:	b153      	cbz	r3, 9000e756 <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000e740:	b30a      	cbz	r2, 9000e786 <xQueueGenericCreateStatic+0x66>
9000e742:	b989      	cbnz	r1, 9000e768 <xQueueGenericCreateStatic+0x48>
9000e744:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e748:	f383 8811 	msr	BASEPRI, r3
9000e74c:	f3bf 8f6f 	isb	sy
9000e750:	f3bf 8f4f 	dsb	sy
9000e754:	e7fe      	b.n	9000e754 <xQueueGenericCreateStatic+0x34>
9000e756:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e75a:	f383 8811 	msr	BASEPRI, r3
9000e75e:	f3bf 8f6f 	isb	sy
9000e762:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e766:	e7fe      	b.n	9000e766 <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e768:	b16a      	cbz	r2, 9000e786 <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e76a:	2350      	movs	r3, #80	@ 0x50
9000e76c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e76e:	9b01      	ldr	r3, [sp, #4]
9000e770:	2b50      	cmp	r3, #80	@ 0x50
9000e772:	d013      	beq.n	9000e79c <xQueueGenericCreateStatic+0x7c>
9000e774:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e778:	f383 8811 	msr	BASEPRI, r3
9000e77c:	f3bf 8f6f 	isb	sy
9000e780:	f3bf 8f4f 	dsb	sy
9000e784:	e7fe      	b.n	9000e784 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e786:	2900      	cmp	r1, #0
9000e788:	d0ef      	beq.n	9000e76a <xQueueGenericCreateStatic+0x4a>
9000e78a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e78e:	f383 8811 	msr	BASEPRI, r3
9000e792:	f3bf 8f6f 	isb	sy
9000e796:	f3bf 8f4f 	dsb	sy
9000e79a:	e7fe      	b.n	9000e79a <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e79c:	2900      	cmp	r1, #0
9000e79e:	bf08      	it	eq
9000e7a0:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e7a2:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e7a4:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000e7a6:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000e7a8:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e7aa:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e7ac:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000e7b0:	f7ff fdd8 	bl	9000e364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7b4:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e7b6:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e7ba:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7bc:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000e7c0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7c4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7c6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7c8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7ca:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e7cc:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e7ce:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e7d0:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e7d2:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e7d4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e7d8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e7dc:	f7ff fd10 	bl	9000e200 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e7e0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e7e4:	f7ff fd0c 	bl	9000e200 <vListInitialise>
	taskEXIT_CRITICAL();
9000e7e8:	f7ff fdde 	bl	9000e3a8 <vPortExitCritical>
	}
9000e7ec:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e7ee:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000e7f2:	b003      	add	sp, #12
9000e7f4:	bd30      	pop	{r4, r5, pc}
9000e7f6:	bf00      	nop

9000e7f8 <xQueueGenericCreate>:
	{
9000e7f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e7fa:	b940      	cbnz	r0, 9000e80e <xQueueGenericCreate+0x16>
9000e7fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e800:	f383 8811 	msr	BASEPRI, r3
9000e804:	f3bf 8f6f 	isb	sy
9000e808:	f3bf 8f4f 	dsb	sy
9000e80c:	e7fe      	b.n	9000e80c <xQueueGenericCreate+0x14>
9000e80e:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e810:	fb01 f000 	mul.w	r0, r1, r0
9000e814:	460e      	mov	r6, r1
9000e816:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e818:	3050      	adds	r0, #80	@ 0x50
9000e81a:	f7ff fbcf 	bl	9000dfbc <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e81e:	4604      	mov	r4, r0
9000e820:	b340      	cbz	r0, 9000e874 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e822:	2300      	movs	r3, #0
9000e824:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000e828:	b336      	cbz	r6, 9000e878 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e82a:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000e82e:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e830:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000e834:	f7ff fd96 	bl	9000e364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e838:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e83a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e83e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e840:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000e844:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e848:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e84a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e84c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e84e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e850:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e852:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e854:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e856:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e858:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e85c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e860:	f7ff fcce 	bl	9000e200 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e864:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e868:	f7ff fcca 	bl	9000e200 <vListInitialise>
	taskEXIT_CRITICAL();
9000e86c:	f7ff fd9c 	bl	9000e3a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e870:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000e874:	4620      	mov	r0, r4
9000e876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e878:	4603      	mov	r3, r0
9000e87a:	e7d8      	b.n	9000e82e <xQueueGenericCreate+0x36>

9000e87c <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000e87c:	b940      	cbnz	r0, 9000e890 <xQueueCreateCountingSemaphoreStatic+0x14>
9000e87e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e882:	f383 8811 	msr	BASEPRI, r3
9000e886:	f3bf 8f6f 	isb	sy
9000e88a:	f3bf 8f4f 	dsb	sy
9000e88e:	e7fe      	b.n	9000e88e <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e890:	4288      	cmp	r0, r1
9000e892:	d208      	bcs.n	9000e8a6 <xQueueCreateCountingSemaphoreStatic+0x2a>
9000e894:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e898:	f383 8811 	msr	BASEPRI, r3
9000e89c:	f3bf 8f6f 	isb	sy
9000e8a0:	f3bf 8f4f 	dsb	sy
9000e8a4:	e7fe      	b.n	9000e8a4 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000e8a6:	b530      	push	{r4, r5, lr}
9000e8a8:	4614      	mov	r4, r2
9000e8aa:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000e8ac:	2a00      	cmp	r2, #0
9000e8ae:	d03b      	beq.n	9000e928 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e8b0:	2350      	movs	r3, #80	@ 0x50
9000e8b2:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e8b4:	9b03      	ldr	r3, [sp, #12]
9000e8b6:	2b50      	cmp	r3, #80	@ 0x50
9000e8b8:	d008      	beq.n	9000e8cc <xQueueCreateCountingSemaphoreStatic+0x50>
9000e8ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8be:	f383 8811 	msr	BASEPRI, r3
9000e8c2:	f3bf 8f6f 	isb	sy
9000e8c6:	f3bf 8f4f 	dsb	sy
9000e8ca:	e7fe      	b.n	9000e8ca <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000e8cc:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e8ce:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e8d0:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e8d2:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e8d4:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e8d8:	6415      	str	r5, [r2, #64]	@ 0x40
9000e8da:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e8dc:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000e8de:	f7ff fd41 	bl	9000e364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8e2:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e8e4:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e8e6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8e8:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000e8ec:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8f0:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8f2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8f4:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8f6:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e8f8:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e8fa:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8fe:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e900:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e904:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e908:	f7ff fc7a 	bl	9000e200 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e90c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e910:	f7ff fc76 	bl	9000e200 <vListInitialise>
	taskEXIT_CRITICAL();
9000e914:	f7ff fd48 	bl	9000e3a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e918:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e91a:	9901      	ldr	r1, [sp, #4]
	}
9000e91c:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e91e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e922:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000e924:	b005      	add	sp, #20
9000e926:	bd30      	pop	{r4, r5, pc}
9000e928:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e92c:	f383 8811 	msr	BASEPRI, r3
9000e930:	f3bf 8f6f 	isb	sy
9000e934:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e938:	e7fe      	b.n	9000e938 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000e93a:	bf00      	nop

9000e93c <xQueueCreateCountingSemaphore>:
	{
9000e93c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000e93e:	b940      	cbnz	r0, 9000e952 <xQueueCreateCountingSemaphore+0x16>
9000e940:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e944:	f383 8811 	msr	BASEPRI, r3
9000e948:	f3bf 8f6f 	isb	sy
9000e94c:	f3bf 8f4f 	dsb	sy
9000e950:	e7fe      	b.n	9000e950 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e952:	4288      	cmp	r0, r1
9000e954:	4604      	mov	r4, r0
9000e956:	460e      	mov	r6, r1
9000e958:	d208      	bcs.n	9000e96c <xQueueCreateCountingSemaphore+0x30>
9000e95a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e95e:	f383 8811 	msr	BASEPRI, r3
9000e962:	f3bf 8f6f 	isb	sy
9000e966:	f3bf 8f4f 	dsb	sy
9000e96a:	e7fe      	b.n	9000e96a <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e96c:	2050      	movs	r0, #80	@ 0x50
9000e96e:	f7ff fb25 	bl	9000dfbc <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e972:	4605      	mov	r5, r0
9000e974:	b330      	cbz	r0, 9000e9c4 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e976:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e978:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e97a:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e97c:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e980:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000e982:	f7ff fcef 	bl	9000e364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e986:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e988:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e98a:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e98e:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e990:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000e994:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e998:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e99a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e99c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e99e:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e9a0:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9a2:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e9a4:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e9a8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e9ac:	f7ff fc28 	bl	9000e200 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e9b0:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000e9b4:	f7ff fc24 	bl	9000e200 <vListInitialise>
	taskEXIT_CRITICAL();
9000e9b8:	f7ff fcf6 	bl	9000e3a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e9bc:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e9be:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000e9c0:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000e9c4:	4628      	mov	r0, r5
9000e9c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000e9c8 <xQueueGenericSend>:
{
9000e9c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e9cc:	b084      	sub	sp, #16
9000e9ce:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000e9d0:	2800      	cmp	r0, #0
9000e9d2:	f000 8103 	beq.w	9000ebdc <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e9d6:	4688      	mov	r8, r1
9000e9d8:	4604      	mov	r4, r0
9000e9da:	461f      	mov	r7, r3
9000e9dc:	2900      	cmp	r1, #0
9000e9de:	f000 8097 	beq.w	9000eb10 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e9e2:	2f02      	cmp	r7, #2
9000e9e4:	d10b      	bne.n	9000e9fe <xQueueGenericSend+0x36>
9000e9e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e9e8:	2b01      	cmp	r3, #1
9000e9ea:	d008      	beq.n	9000e9fe <xQueueGenericSend+0x36>
9000e9ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9f0:	f383 8811 	msr	BASEPRI, r3
9000e9f4:	f3bf 8f6f 	isb	sy
9000e9f8:	f3bf 8f4f 	dsb	sy
9000e9fc:	e7fe      	b.n	9000e9fc <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e9fe:	f001 fced 	bl	900103dc <xTaskGetSchedulerState>
9000ea02:	2800      	cmp	r0, #0
9000ea04:	f000 80f3 	beq.w	9000ebee <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea08:	f1a7 0902 	sub.w	r9, r7, #2
9000ea0c:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ea0e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea12:	fab9 f989 	clz	r9, r9
9000ea16:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000ea1a:	f7ff fca3 	bl	9000e364 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea1e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ea20:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ea22:	429a      	cmp	r2, r3
9000ea24:	f0c0 80f0 	bcc.w	9000ec08 <xQueueGenericSend+0x240>
9000ea28:	f1b9 0f00 	cmp.w	r9, #0
9000ea2c:	f040 80ec 	bne.w	9000ec08 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ea30:	9b01      	ldr	r3, [sp, #4]
9000ea32:	2b00      	cmp	r3, #0
9000ea34:	f000 8101 	beq.w	9000ec3a <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000ea38:	2d00      	cmp	r5, #0
9000ea3a:	f000 80cb 	beq.w	9000ebd4 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000ea3e:	f7ff fcb3 	bl	9000e3a8 <vPortExitCritical>
		vTaskSuspendAll();
9000ea42:	f001 fb05 	bl	90010050 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ea46:	f7ff fc8d 	bl	9000e364 <vPortEnterCritical>
9000ea4a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ea4e:	2bff      	cmp	r3, #255	@ 0xff
9000ea50:	d102      	bne.n	9000ea58 <xQueueGenericSend+0x90>
9000ea52:	2300      	movs	r3, #0
9000ea54:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000ea58:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ea5c:	2bff      	cmp	r3, #255	@ 0xff
9000ea5e:	d102      	bne.n	9000ea66 <xQueueGenericSend+0x9e>
9000ea60:	2300      	movs	r3, #0
9000ea62:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000ea66:	f7ff fc9f 	bl	9000e3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000ea6a:	a901      	add	r1, sp, #4
9000ea6c:	a802      	add	r0, sp, #8
9000ea6e:	f001 fc6d 	bl	9001034c <xTaskCheckForTimeOut>
9000ea72:	2800      	cmp	r0, #0
9000ea74:	f040 80e5 	bne.w	9000ec42 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000ea78:	f7ff fc74 	bl	9000e364 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000ea7c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ea7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ea80:	429a      	cmp	r2, r3
9000ea82:	d052      	beq.n	9000eb2a <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000ea84:	f7ff fc90 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ea88:	f7ff fc6c 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ea8c:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000ea90:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea92:	2d00      	cmp	r5, #0
9000ea94:	dc04      	bgt.n	9000eaa0 <xQueueGenericSend+0xd8>
9000ea96:	e011      	b.n	9000eabc <xQueueGenericSend+0xf4>
			--cTxLock;
9000ea98:	1e6a      	subs	r2, r5, #1
9000ea9a:	b2d3      	uxtb	r3, r2
9000ea9c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea9e:	b16b      	cbz	r3, 9000eabc <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eaa0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eaa2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eaa4:	b153      	cbz	r3, 9000eabc <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eaa6:	f001 fbff 	bl	900102a8 <xTaskRemoveFromEventList>
9000eaaa:	2800      	cmp	r0, #0
9000eaac:	d0f4      	beq.n	9000ea98 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000eaae:	f001 fc8f 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000eab2:	1e6a      	subs	r2, r5, #1
9000eab4:	b2d3      	uxtb	r3, r2
9000eab6:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eab8:	2b00      	cmp	r3, #0
9000eaba:	d1f1      	bne.n	9000eaa0 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000eabc:	23ff      	movs	r3, #255	@ 0xff
9000eabe:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eac2:	f7ff fc71 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eac6:	f7ff fc4d 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eaca:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000eace:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ead0:	2d00      	cmp	r5, #0
9000ead2:	dd14      	ble.n	9000eafe <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ead4:	f104 0a10 	add.w	sl, r4, #16
9000ead8:	e003      	b.n	9000eae2 <xQueueGenericSend+0x11a>
				--cRxLock;
9000eada:	1e6a      	subs	r2, r5, #1
9000eadc:	b2d3      	uxtb	r3, r2
9000eade:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eae0:	b16b      	cbz	r3, 9000eafe <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eae2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eae4:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eae6:	b153      	cbz	r3, 9000eafe <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eae8:	f001 fbde 	bl	900102a8 <xTaskRemoveFromEventList>
9000eaec:	2800      	cmp	r0, #0
9000eaee:	d0f4      	beq.n	9000eada <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000eaf0:	f001 fc6e 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000eaf4:	1e6a      	subs	r2, r5, #1
9000eaf6:	b2d3      	uxtb	r3, r2
9000eaf8:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eafa:	2b00      	cmp	r3, #0
9000eafc:	d1f1      	bne.n	9000eae2 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000eafe:	23ff      	movs	r3, #255	@ 0xff
9000eb00:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000eb04:	f7ff fc50 	bl	9000e3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000eb08:	f001 faaa 	bl	90010060 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000eb0c:	2501      	movs	r5, #1
9000eb0e:	e784      	b.n	9000ea1a <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eb10:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000eb12:	2b00      	cmp	r3, #0
9000eb14:	f43f af65 	beq.w	9000e9e2 <xQueueGenericSend+0x1a>
9000eb18:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb1c:	f383 8811 	msr	BASEPRI, r3
9000eb20:	f3bf 8f6f 	isb	sy
9000eb24:	f3bf 8f4f 	dsb	sy
9000eb28:	e7fe      	b.n	9000eb28 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000eb2a:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000eb2e:	f7ff fc3b 	bl	9000e3a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000eb32:	9901      	ldr	r1, [sp, #4]
9000eb34:	4650      	mov	r0, sl
9000eb36:	f001 fb29 	bl	9001018c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000eb3a:	f7ff fc13 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eb3e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eb42:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb44:	2d00      	cmp	r5, #0
9000eb46:	dc04      	bgt.n	9000eb52 <xQueueGenericSend+0x18a>
9000eb48:	e011      	b.n	9000eb6e <xQueueGenericSend+0x1a6>
			--cTxLock;
9000eb4a:	1e6b      	subs	r3, r5, #1
9000eb4c:	b2da      	uxtb	r2, r3
9000eb4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb50:	b16a      	cbz	r2, 9000eb6e <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eb52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb54:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eb56:	b153      	cbz	r3, 9000eb6e <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb58:	f001 fba6 	bl	900102a8 <xTaskRemoveFromEventList>
9000eb5c:	2800      	cmp	r0, #0
9000eb5e:	d0f4      	beq.n	9000eb4a <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000eb60:	f001 fc36 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000eb64:	1e6b      	subs	r3, r5, #1
9000eb66:	b2da      	uxtb	r2, r3
9000eb68:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb6a:	2a00      	cmp	r2, #0
9000eb6c:	d1f1      	bne.n	9000eb52 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000eb6e:	23ff      	movs	r3, #255	@ 0xff
9000eb70:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eb74:	f7ff fc18 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eb78:	f7ff fbf4 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eb7c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000eb80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb82:	2d00      	cmp	r5, #0
9000eb84:	dc04      	bgt.n	9000eb90 <xQueueGenericSend+0x1c8>
9000eb86:	e011      	b.n	9000ebac <xQueueGenericSend+0x1e4>
				--cRxLock;
9000eb88:	1e6b      	subs	r3, r5, #1
9000eb8a:	b2da      	uxtb	r2, r3
9000eb8c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb8e:	b16a      	cbz	r2, 9000ebac <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb90:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb92:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb94:	b153      	cbz	r3, 9000ebac <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb96:	f001 fb87 	bl	900102a8 <xTaskRemoveFromEventList>
9000eb9a:	2800      	cmp	r0, #0
9000eb9c:	d0f4      	beq.n	9000eb88 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000eb9e:	f001 fc17 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000eba2:	1e6b      	subs	r3, r5, #1
9000eba4:	b2da      	uxtb	r2, r3
9000eba6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eba8:	2a00      	cmp	r2, #0
9000ebaa:	d1f1      	bne.n	9000eb90 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ebac:	23ff      	movs	r3, #255	@ 0xff
9000ebae:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ebb2:	f7ff fbf9 	bl	9000e3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000ebb6:	f001 fa53 	bl	90010060 <xTaskResumeAll>
9000ebba:	2800      	cmp	r0, #0
9000ebbc:	d1a6      	bne.n	9000eb0c <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000ebbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ebc2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ebc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ebca:	f3bf 8f4f 	dsb	sy
9000ebce:	f3bf 8f6f 	isb	sy
9000ebd2:	e79b      	b.n	9000eb0c <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ebd4:	a802      	add	r0, sp, #8
9000ebd6:	f001 fbad 	bl	90010334 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000ebda:	e730      	b.n	9000ea3e <xQueueGenericSend+0x76>
9000ebdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebe0:	f383 8811 	msr	BASEPRI, r3
9000ebe4:	f3bf 8f6f 	isb	sy
9000ebe8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ebec:	e7fe      	b.n	9000ebec <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ebee:	9b01      	ldr	r3, [sp, #4]
9000ebf0:	2b00      	cmp	r3, #0
9000ebf2:	f43f af09 	beq.w	9000ea08 <xQueueGenericSend+0x40>
9000ebf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebfa:	f383 8811 	msr	BASEPRI, r3
9000ebfe:	f3bf 8f6f 	isb	sy
9000ec02:	f3bf 8f4f 	dsb	sy
9000ec06:	e7fe      	b.n	9000ec06 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ec08:	463a      	mov	r2, r7
9000ec0a:	4641      	mov	r1, r8
9000ec0c:	4620      	mov	r0, r4
9000ec0e:	f7ff fd09 	bl	9000e624 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ec14:	2b00      	cmp	r3, #0
9000ec16:	d151      	bne.n	9000ecbc <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000ec18:	b148      	cbz	r0, 9000ec2e <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000ec1a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ec1e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ec22:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ec26:	f3bf 8f4f 	dsb	sy
9000ec2a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000ec2e:	f7ff fbbb 	bl	9000e3a8 <vPortExitCritical>
				return pdPASS;
9000ec32:	2001      	movs	r0, #1
}
9000ec34:	b004      	add	sp, #16
9000ec36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000ec3a:	f7ff fbb5 	bl	9000e3a8 <vPortExitCritical>
					return errQUEUE_FULL;
9000ec3e:	2000      	movs	r0, #0
9000ec40:	e7f8      	b.n	9000ec34 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000ec42:	f7ff fb8f 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ec46:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ec4a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec4c:	2d00      	cmp	r5, #0
9000ec4e:	dd10      	ble.n	9000ec72 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec50:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000ec54:	e003      	b.n	9000ec5e <xQueueGenericSend+0x296>
			--cTxLock;
9000ec56:	1e6b      	subs	r3, r5, #1
9000ec58:	b2da      	uxtb	r2, r3
9000ec5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec5c:	b14a      	cbz	r2, 9000ec72 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec5e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec60:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec62:	b133      	cbz	r3, 9000ec72 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec64:	f001 fb20 	bl	900102a8 <xTaskRemoveFromEventList>
9000ec68:	2800      	cmp	r0, #0
9000ec6a:	d0f4      	beq.n	9000ec56 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000ec6c:	f001 fbb0 	bl	900103d0 <vTaskMissedYield>
9000ec70:	e7f1      	b.n	9000ec56 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ec72:	23ff      	movs	r3, #255	@ 0xff
9000ec74:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ec78:	f7ff fb96 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ec7c:	f7ff fb72 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ec80:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ec84:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ec86:	2d00      	cmp	r5, #0
9000ec88:	dd10      	ble.n	9000ecac <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ec8a:	f104 0610 	add.w	r6, r4, #16
9000ec8e:	e003      	b.n	9000ec98 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000ec90:	1e6b      	subs	r3, r5, #1
9000ec92:	b2da      	uxtb	r2, r3
9000ec94:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ec96:	b14a      	cbz	r2, 9000ecac <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ec98:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ec9a:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ec9c:	b133      	cbz	r3, 9000ecac <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ec9e:	f001 fb03 	bl	900102a8 <xTaskRemoveFromEventList>
9000eca2:	2800      	cmp	r0, #0
9000eca4:	d0f4      	beq.n	9000ec90 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000eca6:	f001 fb93 	bl	900103d0 <vTaskMissedYield>
9000ecaa:	e7f1      	b.n	9000ec90 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ecac:	23ff      	movs	r3, #255	@ 0xff
9000ecae:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ecb2:	f7ff fb79 	bl	9000e3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000ecb6:	f001 f9d3 	bl	90010060 <xTaskResumeAll>
			return errQUEUE_FULL;
9000ecba:	e7c0      	b.n	9000ec3e <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecbc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ecc0:	f001 faf2 	bl	900102a8 <xTaskRemoveFromEventList>
9000ecc4:	2800      	cmp	r0, #0
9000ecc6:	d0b2      	beq.n	9000ec2e <xQueueGenericSend+0x266>
9000ecc8:	e7a7      	b.n	9000ec1a <xQueueGenericSend+0x252>
9000ecca:	bf00      	nop

9000eccc <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000eccc:	2800      	cmp	r0, #0
9000ecce:	d04b      	beq.n	9000ed68 <xQueueGenericSendFromISR+0x9c>
{
9000ecd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ecd4:	460e      	mov	r6, r1
9000ecd6:	4604      	mov	r4, r0
9000ecd8:	4617      	mov	r7, r2
9000ecda:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ecdc:	b339      	cbz	r1, 9000ed2e <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ecde:	2d02      	cmp	r5, #2
9000ece0:	d10b      	bne.n	9000ecfa <xQueueGenericSendFromISR+0x2e>
9000ece2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ece4:	2b01      	cmp	r3, #1
9000ece6:	d008      	beq.n	9000ecfa <xQueueGenericSendFromISR+0x2e>
9000ece8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecec:	f383 8811 	msr	BASEPRI, r3
9000ecf0:	f3bf 8f6f 	isb	sy
9000ecf4:	f3bf 8f4f 	dsb	sy
9000ecf8:	e7fe      	b.n	9000ecf8 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000ecfa:	f7ff fc65 	bl	9000e5c8 <vPortValidateInterruptPriority>
	__asm volatile
9000ecfe:	f3ef 8811 	mrs	r8, BASEPRI
9000ed02:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed06:	f383 8811 	msr	BASEPRI, r3
9000ed0a:	f3bf 8f6f 	isb	sy
9000ed0e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ed12:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ed14:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ed16:	429a      	cmp	r2, r3
9000ed18:	d315      	bcc.n	9000ed46 <xQueueGenericSendFromISR+0x7a>
9000ed1a:	f1a5 0002 	sub.w	r0, r5, #2
9000ed1e:	fab0 f080 	clz	r0, r0
9000ed22:	0940      	lsrs	r0, r0, #5
9000ed24:	b978      	cbnz	r0, 9000ed46 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000ed26:	f388 8811 	msr	BASEPRI, r8
}
9000ed2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ed2e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ed30:	2b00      	cmp	r3, #0
9000ed32:	d0d4      	beq.n	9000ecde <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000ed34:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed38:	f383 8811 	msr	BASEPRI, r3
9000ed3c:	f3bf 8f6f 	isb	sy
9000ed40:	f3bf 8f4f 	dsb	sy
9000ed44:	e7fe      	b.n	9000ed44 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ed46:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000ed48:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ed4c:	4631      	mov	r1, r6
9000ed4e:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000ed50:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ed52:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ed54:	f7ff fc66 	bl	9000e624 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000ed58:	1c6b      	adds	r3, r5, #1
9000ed5a:	d00e      	beq.n	9000ed7a <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ed5c:	1c6b      	adds	r3, r5, #1
9000ed5e:	b25b      	sxtb	r3, r3
9000ed60:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000ed64:	2001      	movs	r0, #1
9000ed66:	e7de      	b.n	9000ed26 <xQueueGenericSendFromISR+0x5a>
9000ed68:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed6c:	f383 8811 	msr	BASEPRI, r3
9000ed70:	f3bf 8f6f 	isb	sy
9000ed74:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ed78:	e7fe      	b.n	9000ed78 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ed7a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ed7c:	2b00      	cmp	r3, #0
9000ed7e:	d0f1      	beq.n	9000ed64 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ed80:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ed84:	f001 fa90 	bl	900102a8 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ed88:	2800      	cmp	r0, #0
9000ed8a:	d0eb      	beq.n	9000ed64 <xQueueGenericSendFromISR+0x98>
9000ed8c:	2f00      	cmp	r7, #0
9000ed8e:	d0e9      	beq.n	9000ed64 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ed90:	2301      	movs	r3, #1
9000ed92:	603b      	str	r3, [r7, #0]
9000ed94:	e7e6      	b.n	9000ed64 <xQueueGenericSendFromISR+0x98>
9000ed96:	bf00      	nop

9000ed98 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000ed98:	b360      	cbz	r0, 9000edf4 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000ed9a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000ed9c:	b570      	push	{r4, r5, r6, lr}
9000ed9e:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000eda0:	b143      	cbz	r3, 9000edb4 <xQueueGiveFromISR+0x1c>
9000eda2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eda6:	f383 8811 	msr	BASEPRI, r3
9000edaa:	f3bf 8f6f 	isb	sy
9000edae:	f3bf 8f4f 	dsb	sy
9000edb2:	e7fe      	b.n	9000edb2 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000edb4:	6803      	ldr	r3, [r0, #0]
9000edb6:	460d      	mov	r5, r1
9000edb8:	b32b      	cbz	r3, 9000ee06 <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000edba:	f7ff fc05 	bl	9000e5c8 <vPortValidateInterruptPriority>
	__asm volatile
9000edbe:	f3ef 8611 	mrs	r6, BASEPRI
9000edc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edc6:	f383 8811 	msr	BASEPRI, r3
9000edca:	f3bf 8f6f 	isb	sy
9000edce:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000edd2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000edd4:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000edd6:	429a      	cmp	r2, r3
9000edd8:	d921      	bls.n	9000ee1e <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000edda:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000edde:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000ede0:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ede2:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000ede4:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000ede6:	d01e      	beq.n	9000ee26 <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ede8:	3301      	adds	r3, #1
9000edea:	b25b      	sxtb	r3, r3
9000edec:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000edf0:	2001      	movs	r0, #1
9000edf2:	e015      	b.n	9000ee20 <xQueueGiveFromISR+0x88>
	__asm volatile
9000edf4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edf8:	f383 8811 	msr	BASEPRI, r3
9000edfc:	f3bf 8f6f 	isb	sy
9000ee00:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ee04:	e7fe      	b.n	9000ee04 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000ee06:	6883      	ldr	r3, [r0, #8]
9000ee08:	2b00      	cmp	r3, #0
9000ee0a:	d0d6      	beq.n	9000edba <xQueueGiveFromISR+0x22>
9000ee0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee10:	f383 8811 	msr	BASEPRI, r3
9000ee14:	f3bf 8f6f 	isb	sy
9000ee18:	f3bf 8f4f 	dsb	sy
9000ee1c:	e7fe      	b.n	9000ee1c <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000ee1e:	2000      	movs	r0, #0
	__asm volatile
9000ee20:	f386 8811 	msr	BASEPRI, r6
}
9000ee24:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ee26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ee28:	2b00      	cmp	r3, #0
9000ee2a:	d0e1      	beq.n	9000edf0 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee2c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ee30:	f001 fa3a 	bl	900102a8 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ee34:	2d00      	cmp	r5, #0
9000ee36:	d0db      	beq.n	9000edf0 <xQueueGiveFromISR+0x58>
9000ee38:	2800      	cmp	r0, #0
9000ee3a:	d0d9      	beq.n	9000edf0 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ee3c:	2301      	movs	r3, #1
9000ee3e:	602b      	str	r3, [r5, #0]
9000ee40:	e7d6      	b.n	9000edf0 <xQueueGiveFromISR+0x58>
9000ee42:	bf00      	nop

9000ee44 <xQueueReceive>:
{
9000ee44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ee48:	b085      	sub	sp, #20
9000ee4a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000ee4c:	2800      	cmp	r0, #0
9000ee4e:	f000 8164 	beq.w	9000f11a <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ee52:	460f      	mov	r7, r1
9000ee54:	4604      	mov	r4, r0
9000ee56:	2900      	cmp	r1, #0
9000ee58:	f000 8097 	beq.w	9000ef8a <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ee5c:	f001 fabe 	bl	900103dc <xTaskGetSchedulerState>
9000ee60:	2800      	cmp	r0, #0
9000ee62:	f000 809f 	beq.w	9000efa4 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9000ee66:	f7ff fa7d 	bl	9000e364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ee6a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ee6c:	2d00      	cmp	r5, #0
9000ee6e:	d175      	bne.n	9000ef5c <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ee70:	9b01      	ldr	r3, [sp, #4]
9000ee72:	2b00      	cmp	r3, #0
9000ee74:	f000 80f4 	beq.w	9000f060 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9000ee78:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee7a:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ee7e:	a802      	add	r0, sp, #8
9000ee80:	f001 fa58 	bl	90010334 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000ee84:	f7ff fa90 	bl	9000e3a8 <vPortExitCritical>
		vTaskSuspendAll();
9000ee88:	f001 f8e2 	bl	90010050 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ee8c:	f7ff fa6a 	bl	9000e364 <vPortEnterCritical>
9000ee90:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ee94:	2bff      	cmp	r3, #255	@ 0xff
9000ee96:	d101      	bne.n	9000ee9c <xQueueReceive+0x58>
9000ee98:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000ee9c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eea0:	2bff      	cmp	r3, #255	@ 0xff
9000eea2:	d101      	bne.n	9000eea8 <xQueueReceive+0x64>
9000eea4:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000eea8:	f7ff fa7e 	bl	9000e3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000eeac:	a901      	add	r1, sp, #4
9000eeae:	a802      	add	r0, sp, #8
9000eeb0:	f001 fa4c 	bl	9001034c <xTaskCheckForTimeOut>
9000eeb4:	2800      	cmp	r0, #0
9000eeb6:	f040 8082 	bne.w	9000efbe <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9000eeba:	f7ff fa53 	bl	9000e364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000eebe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000eec0:	2b00      	cmp	r3, #0
9000eec2:	f000 80d3 	beq.w	9000f06c <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9000eec6:	f7ff fa6f 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eeca:	f7ff fa4b 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eece:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eed2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eed4:	2d00      	cmp	r5, #0
9000eed6:	dd14      	ble.n	9000ef02 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eed8:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000eedc:	e003      	b.n	9000eee6 <xQueueReceive+0xa2>
			--cTxLock;
9000eede:	1e6b      	subs	r3, r5, #1
9000eee0:	b2da      	uxtb	r2, r3
9000eee2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eee4:	b16a      	cbz	r2, 9000ef02 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eee6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eee8:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eeea:	b153      	cbz	r3, 9000ef02 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eeec:	f001 f9dc 	bl	900102a8 <xTaskRemoveFromEventList>
9000eef0:	2800      	cmp	r0, #0
9000eef2:	d0f4      	beq.n	9000eede <xQueueReceive+0x9a>
						vTaskMissedYield();
9000eef4:	f001 fa6c 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000eef8:	1e6b      	subs	r3, r5, #1
9000eefa:	b2da      	uxtb	r2, r3
9000eefc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eefe:	2a00      	cmp	r2, #0
9000ef00:	d1f1      	bne.n	9000eee6 <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
9000ef02:	23ff      	movs	r3, #255	@ 0xff
9000ef04:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ef08:	f7ff fa4e 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ef0c:	f7ff fa2a 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ef10:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ef14:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ef16:	2d00      	cmp	r5, #0
9000ef18:	dd14      	ble.n	9000ef44 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ef1a:	f104 0910 	add.w	r9, r4, #16
9000ef1e:	e003      	b.n	9000ef28 <xQueueReceive+0xe4>
				--cRxLock;
9000ef20:	1e6b      	subs	r3, r5, #1
9000ef22:	b2da      	uxtb	r2, r3
9000ef24:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ef26:	b16a      	cbz	r2, 9000ef44 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ef28:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ef2a:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ef2c:	b153      	cbz	r3, 9000ef44 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ef2e:	f001 f9bb 	bl	900102a8 <xTaskRemoveFromEventList>
9000ef32:	2800      	cmp	r0, #0
9000ef34:	d0f4      	beq.n	9000ef20 <xQueueReceive+0xdc>
					vTaskMissedYield();
9000ef36:	f001 fa4b 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000ef3a:	1e6b      	subs	r3, r5, #1
9000ef3c:	b2da      	uxtb	r2, r3
9000ef3e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ef40:	2a00      	cmp	r2, #0
9000ef42:	d1f1      	bne.n	9000ef28 <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
9000ef44:	23ff      	movs	r3, #255	@ 0xff
9000ef46:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ef4a:	f7ff fa2d 	bl	9000e3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000ef4e:	f001 f887 	bl	90010060 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000ef52:	f7ff fa07 	bl	9000e364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ef56:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ef58:	2d00      	cmp	r5, #0
9000ef5a:	d07d      	beq.n	9000f058 <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000ef5c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ef5e:	b152      	cbz	r2, 9000ef76 <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef60:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef62:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef64:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef66:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef68:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef6a:	d301      	bcc.n	9000ef70 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000ef6c:	6821      	ldr	r1, [r4, #0]
9000ef6e:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ef70:	4638      	mov	r0, r7
9000ef72:	f01b fd0a 	bl	9002a98a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000ef76:	3d01      	subs	r5, #1
9000ef78:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ef7a:	6923      	ldr	r3, [r4, #16]
9000ef7c:	2b00      	cmp	r3, #0
9000ef7e:	f040 80d5 	bne.w	9000f12c <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9000ef82:	f7ff fa11 	bl	9000e3a8 <vPortExitCritical>
				return pdPASS;
9000ef86:	2001      	movs	r0, #1
9000ef88:	e06d      	b.n	9000f066 <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ef8a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ef8c:	2b00      	cmp	r3, #0
9000ef8e:	f43f af65 	beq.w	9000ee5c <xQueueReceive+0x18>
	__asm volatile
9000ef92:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef96:	f383 8811 	msr	BASEPRI, r3
9000ef9a:	f3bf 8f6f 	isb	sy
9000ef9e:	f3bf 8f4f 	dsb	sy
9000efa2:	e7fe      	b.n	9000efa2 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000efa4:	9b01      	ldr	r3, [sp, #4]
9000efa6:	2b00      	cmp	r3, #0
9000efa8:	f43f af5d 	beq.w	9000ee66 <xQueueReceive+0x22>
9000efac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efb0:	f383 8811 	msr	BASEPRI, r3
9000efb4:	f3bf 8f6f 	isb	sy
9000efb8:	f3bf 8f4f 	dsb	sy
9000efbc:	e7fe      	b.n	9000efbc <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9000efbe:	f7ff f9d1 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000efc2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000efc6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000efc8:	2d00      	cmp	r5, #0
9000efca:	dc04      	bgt.n	9000efd6 <xQueueReceive+0x192>
9000efcc:	e011      	b.n	9000eff2 <xQueueReceive+0x1ae>
			--cTxLock;
9000efce:	1e6b      	subs	r3, r5, #1
9000efd0:	b2da      	uxtb	r2, r3
9000efd2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000efd4:	b16a      	cbz	r2, 9000eff2 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000efd6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000efd8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000efda:	b153      	cbz	r3, 9000eff2 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000efdc:	f001 f964 	bl	900102a8 <xTaskRemoveFromEventList>
9000efe0:	2800      	cmp	r0, #0
9000efe2:	d0f4      	beq.n	9000efce <xQueueReceive+0x18a>
						vTaskMissedYield();
9000efe4:	f001 f9f4 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000efe8:	1e6b      	subs	r3, r5, #1
9000efea:	b2da      	uxtb	r2, r3
9000efec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000efee:	2a00      	cmp	r2, #0
9000eff0:	d1f1      	bne.n	9000efd6 <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
9000eff2:	23ff      	movs	r3, #255	@ 0xff
9000eff4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eff8:	f7ff f9d6 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000effc:	f7ff f9b2 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f000:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f004:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f006:	2d00      	cmp	r5, #0
9000f008:	dd14      	ble.n	9000f034 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f00a:	f104 0910 	add.w	r9, r4, #16
9000f00e:	e003      	b.n	9000f018 <xQueueReceive+0x1d4>
				--cRxLock;
9000f010:	1e6b      	subs	r3, r5, #1
9000f012:	b2da      	uxtb	r2, r3
9000f014:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f016:	b16a      	cbz	r2, 9000f034 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f018:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f01a:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f01c:	b153      	cbz	r3, 9000f034 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f01e:	f001 f943 	bl	900102a8 <xTaskRemoveFromEventList>
9000f022:	2800      	cmp	r0, #0
9000f024:	d0f4      	beq.n	9000f010 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9000f026:	f001 f9d3 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000f02a:	1e6b      	subs	r3, r5, #1
9000f02c:	b2da      	uxtb	r2, r3
9000f02e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f030:	2a00      	cmp	r2, #0
9000f032:	d1f1      	bne.n	9000f018 <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
9000f034:	23ff      	movs	r3, #255	@ 0xff
9000f036:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f03a:	f7ff f9b5 	bl	9000e3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f03e:	f001 f80f 	bl	90010060 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f042:	f7ff f98f 	bl	9000e364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f046:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f048:	b153      	cbz	r3, 9000f060 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9000f04a:	f7ff f9ad 	bl	9000e3a8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f04e:	f7ff f989 	bl	9000e364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f052:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f054:	2d00      	cmp	r5, #0
9000f056:	d181      	bne.n	9000ef5c <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f058:	9b01      	ldr	r3, [sp, #4]
9000f05a:	2b00      	cmp	r3, #0
9000f05c:	f47f af12 	bne.w	9000ee84 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f060:	f7ff f9a2 	bl	9000e3a8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f064:	2000      	movs	r0, #0
}
9000f066:	b005      	add	sp, #20
9000f068:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f06c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000f070:	f7ff f99a 	bl	9000e3a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f074:	9901      	ldr	r1, [sp, #4]
9000f076:	4648      	mov	r0, r9
9000f078:	f001 f888 	bl	9001018c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f07c:	f7ff f972 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f080:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f084:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f086:	2d00      	cmp	r5, #0
9000f088:	dc04      	bgt.n	9000f094 <xQueueReceive+0x250>
9000f08a:	e011      	b.n	9000f0b0 <xQueueReceive+0x26c>
			--cTxLock;
9000f08c:	1e6b      	subs	r3, r5, #1
9000f08e:	b2da      	uxtb	r2, r3
9000f090:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f092:	b16a      	cbz	r2, 9000f0b0 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f094:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f096:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f098:	b153      	cbz	r3, 9000f0b0 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f09a:	f001 f905 	bl	900102a8 <xTaskRemoveFromEventList>
9000f09e:	2800      	cmp	r0, #0
9000f0a0:	d0f4      	beq.n	9000f08c <xQueueReceive+0x248>
						vTaskMissedYield();
9000f0a2:	f001 f995 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000f0a6:	1e6b      	subs	r3, r5, #1
9000f0a8:	b2da      	uxtb	r2, r3
9000f0aa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0ac:	2a00      	cmp	r2, #0
9000f0ae:	d1f1      	bne.n	9000f094 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9000f0b0:	23ff      	movs	r3, #255	@ 0xff
9000f0b2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f0b6:	f7ff f977 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f0ba:	f7ff f953 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f0be:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f0c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0c4:	2d00      	cmp	r5, #0
9000f0c6:	dd14      	ble.n	9000f0f2 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0c8:	f104 0910 	add.w	r9, r4, #16
9000f0cc:	e003      	b.n	9000f0d6 <xQueueReceive+0x292>
				--cRxLock;
9000f0ce:	1e6b      	subs	r3, r5, #1
9000f0d0:	b2da      	uxtb	r2, r3
9000f0d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0d4:	b16a      	cbz	r2, 9000f0f2 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0d6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0d8:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0da:	b153      	cbz	r3, 9000f0f2 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0dc:	f001 f8e4 	bl	900102a8 <xTaskRemoveFromEventList>
9000f0e0:	2800      	cmp	r0, #0
9000f0e2:	d0f4      	beq.n	9000f0ce <xQueueReceive+0x28a>
					vTaskMissedYield();
9000f0e4:	f001 f974 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000f0e8:	1e6b      	subs	r3, r5, #1
9000f0ea:	b2da      	uxtb	r2, r3
9000f0ec:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0ee:	2a00      	cmp	r2, #0
9000f0f0:	d1f1      	bne.n	9000f0d6 <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
9000f0f2:	23ff      	movs	r3, #255	@ 0xff
9000f0f4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f0f8:	f7ff f956 	bl	9000e3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f0fc:	f000 ffb0 	bl	90010060 <xTaskResumeAll>
9000f100:	2800      	cmp	r0, #0
9000f102:	d1a4      	bne.n	9000f04e <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
9000f104:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f108:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f10c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f110:	f3bf 8f4f 	dsb	sy
9000f114:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000f118:	e799      	b.n	9000f04e <xQueueReceive+0x20a>
9000f11a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f11e:	f383 8811 	msr	BASEPRI, r3
9000f122:	f3bf 8f6f 	isb	sy
9000f126:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f12a:	e7fe      	b.n	9000f12a <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f12c:	f104 0010 	add.w	r0, r4, #16
9000f130:	f001 f8ba 	bl	900102a8 <xTaskRemoveFromEventList>
9000f134:	2800      	cmp	r0, #0
9000f136:	f43f af24 	beq.w	9000ef82 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9000f13a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f13e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f142:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f146:	f3bf 8f4f 	dsb	sy
9000f14a:	f3bf 8f6f 	isb	sy
9000f14e:	e718      	b.n	9000ef82 <xQueueReceive+0x13e>

9000f150 <xQueueSemaphoreTake>:
{
9000f150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f154:	b084      	sub	sp, #16
9000f156:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f158:	2800      	cmp	r0, #0
9000f15a:	d05e      	beq.n	9000f21a <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f15c:	6c07      	ldr	r7, [r0, #64]	@ 0x40
9000f15e:	4604      	mov	r4, r0
9000f160:	b147      	cbz	r7, 9000f174 <xQueueSemaphoreTake+0x24>
9000f162:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f166:	f383 8811 	msr	BASEPRI, r3
9000f16a:	f3bf 8f6f 	isb	sy
9000f16e:	f3bf 8f4f 	dsb	sy
9000f172:	e7fe      	b.n	9000f172 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f174:	f001 f932 	bl	900103dc <xTaskGetSchedulerState>
9000f178:	4605      	mov	r5, r0
9000f17a:	2800      	cmp	r0, #0
9000f17c:	d056      	beq.n	9000f22c <xQueueSemaphoreTake+0xdc>
9000f17e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f180:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
9000f184:	f7ff f8ee 	bl	9000e364 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f188:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f18a:	2b00      	cmp	r3, #0
9000f18c:	f040 814d 	bne.w	9000f42a <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f190:	9b01      	ldr	r3, [sp, #4]
9000f192:	2b00      	cmp	r3, #0
9000f194:	f000 813e 	beq.w	9000f414 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
9000f198:	2d00      	cmp	r5, #0
9000f19a:	f000 80a3 	beq.w	9000f2e4 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
9000f19e:	f7ff f903 	bl	9000e3a8 <vPortExitCritical>
		vTaskSuspendAll();
9000f1a2:	f000 ff55 	bl	90010050 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f1a6:	f7ff f8dd 	bl	9000e364 <vPortEnterCritical>
9000f1aa:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f1ae:	2bff      	cmp	r3, #255	@ 0xff
9000f1b0:	d102      	bne.n	9000f1b8 <xQueueSemaphoreTake+0x68>
9000f1b2:	2300      	movs	r3, #0
9000f1b4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000f1b8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f1bc:	2bff      	cmp	r3, #255	@ 0xff
9000f1be:	d102      	bne.n	9000f1c6 <xQueueSemaphoreTake+0x76>
9000f1c0:	2300      	movs	r3, #0
9000f1c2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000f1c6:	f7ff f8ef 	bl	9000e3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f1ca:	a901      	add	r1, sp, #4
9000f1cc:	a802      	add	r0, sp, #8
9000f1ce:	f001 f8bd 	bl	9001034c <xTaskCheckForTimeOut>
9000f1d2:	2800      	cmp	r0, #0
9000f1d4:	d137      	bne.n	9000f246 <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000f1d6:	f7ff f8c5 	bl	9000e364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f1da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f1dc:	2b00      	cmp	r3, #0
9000f1de:	f000 80ae 	beq.w	9000f33e <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
9000f1e2:	f7ff f8e1 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f1e6:	f7ff f8bd 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f1ea:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f1ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1f0:	2d00      	cmp	r5, #0
9000f1f2:	dd7f      	ble.n	9000f2f4 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1f4:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000f1f8:	e004      	b.n	9000f204 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000f1fa:	1e6b      	subs	r3, r5, #1
9000f1fc:	b2da      	uxtb	r2, r3
9000f1fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f200:	2a00      	cmp	r2, #0
9000f202:	d077      	beq.n	9000f2f4 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f204:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f206:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f208:	2b00      	cmp	r3, #0
9000f20a:	d073      	beq.n	9000f2f4 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f20c:	f001 f84c 	bl	900102a8 <xTaskRemoveFromEventList>
9000f210:	2800      	cmp	r0, #0
9000f212:	d0f2      	beq.n	9000f1fa <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
9000f214:	f001 f8dc 	bl	900103d0 <vTaskMissedYield>
9000f218:	e7ef      	b.n	9000f1fa <xQueueSemaphoreTake+0xaa>
9000f21a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f21e:	f383 8811 	msr	BASEPRI, r3
9000f222:	f3bf 8f6f 	isb	sy
9000f226:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f22a:	e7fe      	b.n	9000f22a <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f22c:	9b01      	ldr	r3, [sp, #4]
9000f22e:	2b00      	cmp	r3, #0
9000f230:	f000 80d7 	beq.w	9000f3e2 <xQueueSemaphoreTake+0x292>
9000f234:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f238:	f383 8811 	msr	BASEPRI, r3
9000f23c:	f3bf 8f6f 	isb	sy
9000f240:	f3bf 8f4f 	dsb	sy
9000f244:	e7fe      	b.n	9000f244 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000f246:	f7ff f88d 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f24a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f24e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f250:	2d00      	cmp	r5, #0
9000f252:	dc04      	bgt.n	9000f25e <xQueueSemaphoreTake+0x10e>
9000f254:	e011      	b.n	9000f27a <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000f256:	1e6b      	subs	r3, r5, #1
9000f258:	b2da      	uxtb	r2, r3
9000f25a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f25c:	b16a      	cbz	r2, 9000f27a <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f25e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f260:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f262:	b153      	cbz	r3, 9000f27a <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f264:	f001 f820 	bl	900102a8 <xTaskRemoveFromEventList>
9000f268:	2800      	cmp	r0, #0
9000f26a:	d0f4      	beq.n	9000f256 <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000f26c:	f001 f8b0 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000f270:	1e6b      	subs	r3, r5, #1
9000f272:	b2da      	uxtb	r2, r3
9000f274:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f276:	2a00      	cmp	r2, #0
9000f278:	d1f1      	bne.n	9000f25e <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f27a:	23ff      	movs	r3, #255	@ 0xff
9000f27c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f280:	f7ff f892 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f284:	f7ff f86e 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f288:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f28c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f28e:	2d00      	cmp	r5, #0
9000f290:	dd14      	ble.n	9000f2bc <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f292:	f104 0810 	add.w	r8, r4, #16
9000f296:	e003      	b.n	9000f2a0 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000f298:	1e6b      	subs	r3, r5, #1
9000f29a:	b2da      	uxtb	r2, r3
9000f29c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f29e:	b16a      	cbz	r2, 9000f2bc <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2a0:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2a2:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2a4:	b153      	cbz	r3, 9000f2bc <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2a6:	f000 ffff 	bl	900102a8 <xTaskRemoveFromEventList>
9000f2aa:	2800      	cmp	r0, #0
9000f2ac:	d0f4      	beq.n	9000f298 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000f2ae:	f001 f88f 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000f2b2:	1e6b      	subs	r3, r5, #1
9000f2b4:	b2da      	uxtb	r2, r3
9000f2b6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2b8:	2a00      	cmp	r2, #0
9000f2ba:	d1f1      	bne.n	9000f2a0 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000f2bc:	23ff      	movs	r3, #255	@ 0xff
9000f2be:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f2c2:	f7ff f871 	bl	9000e3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f2c6:	f000 fecb 	bl	90010060 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f2ca:	f7ff f84b 	bl	9000e364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f2ce:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f2d0:	b963      	cbnz	r3, 9000f2ec <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
9000f2d2:	f7ff f869 	bl	9000e3a8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000f2d6:	2f00      	cmp	r7, #0
9000f2d8:	f040 8085 	bne.w	9000f3e6 <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
9000f2dc:	2000      	movs	r0, #0
}
9000f2de:	b004      	add	sp, #16
9000f2e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f2e4:	a802      	add	r0, sp, #8
9000f2e6:	f001 f825 	bl	90010334 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f2ea:	e758      	b.n	9000f19e <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
9000f2ec:	f7ff f85c 	bl	9000e3a8 <vPortExitCritical>
	return xReturn;
9000f2f0:	2501      	movs	r5, #1
9000f2f2:	e747      	b.n	9000f184 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
9000f2f4:	23ff      	movs	r3, #255	@ 0xff
9000f2f6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f2fa:	f7ff f855 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f2fe:	f7ff f831 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f302:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f306:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f308:	2d00      	cmp	r5, #0
9000f30a:	dd10      	ble.n	9000f32e <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f30c:	f104 0810 	add.w	r8, r4, #16
9000f310:	e003      	b.n	9000f31a <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
9000f312:	1e6b      	subs	r3, r5, #1
9000f314:	b2da      	uxtb	r2, r3
9000f316:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f318:	b14a      	cbz	r2, 9000f32e <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f31a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f31c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f31e:	b133      	cbz	r3, 9000f32e <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f320:	f000 ffc2 	bl	900102a8 <xTaskRemoveFromEventList>
9000f324:	2800      	cmp	r0, #0
9000f326:	d0f4      	beq.n	9000f312 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9000f328:	f001 f852 	bl	900103d0 <vTaskMissedYield>
9000f32c:	e7f1      	b.n	9000f312 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f32e:	23ff      	movs	r3, #255	@ 0xff
9000f330:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f334:	f7ff f838 	bl	9000e3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f338:	f000 fe92 	bl	90010060 <xTaskResumeAll>
9000f33c:	e7d8      	b.n	9000f2f0 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
9000f33e:	f7ff f833 	bl	9000e3a8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f342:	6823      	ldr	r3, [r4, #0]
9000f344:	2b00      	cmp	r3, #0
9000f346:	d05c      	beq.n	9000f402 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f348:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000f34c:	9901      	ldr	r1, [sp, #4]
9000f34e:	4640      	mov	r0, r8
9000f350:	f000 ff1c 	bl	9001018c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f354:	f7ff f806 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f358:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f35c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f35e:	2d00      	cmp	r5, #0
9000f360:	dc04      	bgt.n	9000f36c <xQueueSemaphoreTake+0x21c>
9000f362:	e00d      	b.n	9000f380 <xQueueSemaphoreTake+0x230>
			--cTxLock;
9000f364:	1e6b      	subs	r3, r5, #1
9000f366:	b2da      	uxtb	r2, r3
9000f368:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f36a:	b14a      	cbz	r2, 9000f380 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f36c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f36e:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f370:	b133      	cbz	r3, 9000f380 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f372:	f000 ff99 	bl	900102a8 <xTaskRemoveFromEventList>
9000f376:	2800      	cmp	r0, #0
9000f378:	d0f4      	beq.n	9000f364 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
9000f37a:	f001 f829 	bl	900103d0 <vTaskMissedYield>
9000f37e:	e7f1      	b.n	9000f364 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
9000f380:	23ff      	movs	r3, #255	@ 0xff
9000f382:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f386:	f7ff f80f 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f38a:	f7fe ffeb 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f38e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f392:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f394:	2d00      	cmp	r5, #0
9000f396:	dd10      	ble.n	9000f3ba <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f398:	f104 0810 	add.w	r8, r4, #16
9000f39c:	e003      	b.n	9000f3a6 <xQueueSemaphoreTake+0x256>
				--cRxLock;
9000f39e:	1e6b      	subs	r3, r5, #1
9000f3a0:	b2da      	uxtb	r2, r3
9000f3a2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3a4:	b14a      	cbz	r2, 9000f3ba <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3a6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3a8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3aa:	b133      	cbz	r3, 9000f3ba <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3ac:	f000 ff7c 	bl	900102a8 <xTaskRemoveFromEventList>
9000f3b0:	2800      	cmp	r0, #0
9000f3b2:	d0f4      	beq.n	9000f39e <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
9000f3b4:	f001 f80c 	bl	900103d0 <vTaskMissedYield>
9000f3b8:	e7f1      	b.n	9000f39e <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
9000f3ba:	23ff      	movs	r3, #255	@ 0xff
9000f3bc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f3c0:	f7fe fff2 	bl	9000e3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f3c4:	f000 fe4c 	bl	90010060 <xTaskResumeAll>
9000f3c8:	2800      	cmp	r0, #0
9000f3ca:	d191      	bne.n	9000f2f0 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
9000f3cc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f3d0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f3d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f3d8:	f3bf 8f4f 	dsb	sy
9000f3dc:	f3bf 8f6f 	isb	sy
9000f3e0:	e786      	b.n	9000f2f0 <xQueueSemaphoreTake+0x1a0>
9000f3e2:	462f      	mov	r7, r5
9000f3e4:	e6cc      	b.n	9000f180 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000f3e6:	f7fe ffbd 	bl	9000e364 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000f3ea:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000f3ec:	b119      	cbz	r1, 9000f3f6 <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000f3ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f3f0:	6819      	ldr	r1, [r3, #0]
9000f3f2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f3f6:	68a0      	ldr	r0, [r4, #8]
9000f3f8:	f001 f884 	bl	90010504 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000f3fc:	f7fe ffd4 	bl	9000e3a8 <vPortExitCritical>
9000f400:	e76c      	b.n	9000f2dc <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000f402:	f7fe ffaf 	bl	9000e364 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f406:	68a0      	ldr	r0, [r4, #8]
9000f408:	f000 fff8 	bl	900103fc <xTaskPriorityInherit>
9000f40c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000f40e:	f7fe ffcb 	bl	9000e3a8 <vPortExitCritical>
9000f412:	e799      	b.n	9000f348 <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000f414:	2f00      	cmp	r7, #0
9000f416:	d0f1      	beq.n	9000f3fc <xQueueSemaphoreTake+0x2ac>
9000f418:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f41c:	f383 8811 	msr	BASEPRI, r3
9000f420:	f3bf 8f6f 	isb	sy
9000f424:	f3bf 8f4f 	dsb	sy
9000f428:	e7fe      	b.n	9000f428 <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f42a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f42c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f42e:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f430:	b12a      	cbz	r2, 9000f43e <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f432:	6923      	ldr	r3, [r4, #16]
9000f434:	b93b      	cbnz	r3, 9000f446 <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9000f436:	f7fe ffb7 	bl	9000e3a8 <vPortExitCritical>
				return pdPASS;
9000f43a:	2001      	movs	r0, #1
9000f43c:	e74f      	b.n	9000f2de <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000f43e:	f001 f8b1 	bl	900105a4 <pvTaskIncrementMutexHeldCount>
9000f442:	60a0      	str	r0, [r4, #8]
9000f444:	e7f5      	b.n	9000f432 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f446:	f104 0010 	add.w	r0, r4, #16
9000f44a:	f000 ff2d 	bl	900102a8 <xTaskRemoveFromEventList>
9000f44e:	2800      	cmp	r0, #0
9000f450:	d0f1      	beq.n	9000f436 <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
9000f452:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f456:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f45a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f45e:	f3bf 8f4f 	dsb	sy
9000f462:	f3bf 8f6f 	isb	sy
9000f466:	e7e6      	b.n	9000f436 <xQueueSemaphoreTake+0x2e6>

9000f468 <xQueueReceiveFromISR>:
{
9000f468:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000f46c:	b310      	cbz	r0, 9000f4b4 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f46e:	460f      	mov	r7, r1
9000f470:	4604      	mov	r4, r0
9000f472:	4616      	mov	r6, r2
9000f474:	b191      	cbz	r1, 9000f49c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f476:	f7ff f8a7 	bl	9000e5c8 <vPortValidateInterruptPriority>
	__asm volatile
9000f47a:	f3ef 8911 	mrs	r9, BASEPRI
9000f47e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f482:	f383 8811 	msr	BASEPRI, r3
9000f486:	f3bf 8f6f 	isb	sy
9000f48a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f48e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f490:	b9cd      	cbnz	r5, 9000f4c6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000f492:	4628      	mov	r0, r5
	__asm volatile
9000f494:	f389 8811 	msr	BASEPRI, r9
}
9000f498:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f49c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f49e:	2b00      	cmp	r3, #0
9000f4a0:	d0e9      	beq.n	9000f476 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000f4a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4a6:	f383 8811 	msr	BASEPRI, r3
9000f4aa:	f3bf 8f6f 	isb	sy
9000f4ae:	f3bf 8f4f 	dsb	sy
9000f4b2:	e7fe      	b.n	9000f4b2 <xQueueReceiveFromISR+0x4a>
9000f4b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4b8:	f383 8811 	msr	BASEPRI, r3
9000f4bc:	f3bf 8f6f 	isb	sy
9000f4c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f4c4:	e7fe      	b.n	9000f4c4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000f4c6:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f4ca:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000f4cc:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f4d0:	b142      	cbz	r2, 9000f4e4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f4d2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f4d4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f4d6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f4d8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f4da:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f4dc:	d21c      	bcs.n	9000f518 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f4de:	4638      	mov	r0, r7
9000f4e0:	f01b fa53 	bl	9002a98a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f4e4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000f4e6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f4ea:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000f4ec:	d006      	beq.n	9000f4fc <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f4ee:	f108 0301 	add.w	r3, r8, #1
9000f4f2:	b25b      	sxtb	r3, r3
9000f4f4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000f4f8:	2001      	movs	r0, #1
9000f4fa:	e7cb      	b.n	9000f494 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4fc:	6923      	ldr	r3, [r4, #16]
9000f4fe:	2b00      	cmp	r3, #0
9000f500:	d0fa      	beq.n	9000f4f8 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f502:	f104 0010 	add.w	r0, r4, #16
9000f506:	f000 fecf 	bl	900102a8 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000f50a:	2e00      	cmp	r6, #0
9000f50c:	d0f4      	beq.n	9000f4f8 <xQueueReceiveFromISR+0x90>
9000f50e:	2800      	cmp	r0, #0
9000f510:	d0f2      	beq.n	9000f4f8 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f512:	2301      	movs	r3, #1
9000f514:	6033      	str	r3, [r6, #0]
9000f516:	e7ef      	b.n	9000f4f8 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f518:	6821      	ldr	r1, [r4, #0]
9000f51a:	60e1      	str	r1, [r4, #12]
9000f51c:	e7df      	b.n	9000f4de <xQueueReceiveFromISR+0x76>
9000f51e:	bf00      	nop

9000f520 <vQueueDelete>:
	configASSERT( pxQueue );
9000f520:	b1e0      	cbz	r0, 9000f55c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000f522:	4b21      	ldr	r3, [pc, #132]	@ (9000f5a8 <vQueueDelete+0x88>)
9000f524:	685a      	ldr	r2, [r3, #4]
9000f526:	4290      	cmp	r0, r2
9000f528:	d02b      	beq.n	9000f582 <vQueueDelete+0x62>
9000f52a:	68da      	ldr	r2, [r3, #12]
9000f52c:	4290      	cmp	r0, r2
9000f52e:	d02a      	beq.n	9000f586 <vQueueDelete+0x66>
9000f530:	695a      	ldr	r2, [r3, #20]
9000f532:	4290      	cmp	r0, r2
9000f534:	d029      	beq.n	9000f58a <vQueueDelete+0x6a>
9000f536:	69da      	ldr	r2, [r3, #28]
9000f538:	4290      	cmp	r0, r2
9000f53a:	d028      	beq.n	9000f58e <vQueueDelete+0x6e>
9000f53c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000f53e:	4290      	cmp	r0, r2
9000f540:	d027      	beq.n	9000f592 <vQueueDelete+0x72>
9000f542:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000f544:	4290      	cmp	r0, r2
9000f546:	d014      	beq.n	9000f572 <vQueueDelete+0x52>
9000f548:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000f54a:	4290      	cmp	r0, r2
9000f54c:	d023      	beq.n	9000f596 <vQueueDelete+0x76>
9000f54e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000f550:	4290      	cmp	r0, r2
9000f552:	d022      	beq.n	9000f59a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000f554:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000f558:	b14b      	cbz	r3, 9000f56e <vQueueDelete+0x4e>
}
9000f55a:	4770      	bx	lr
9000f55c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f560:	f383 8811 	msr	BASEPRI, r3
9000f564:	f3bf 8f6f 	isb	sy
9000f568:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f56c:	e7fe      	b.n	9000f56c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000f56e:	f7fe bde1 	b.w	9000e134 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f572:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000f574:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000f578:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000f5a0 <vQueueDelete+0x80>
9000f57c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000f580:	e7e8      	b.n	9000f554 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f582:	2200      	movs	r2, #0
9000f584:	e7f6      	b.n	9000f574 <vQueueDelete+0x54>
9000f586:	2201      	movs	r2, #1
9000f588:	e7f4      	b.n	9000f574 <vQueueDelete+0x54>
9000f58a:	2202      	movs	r2, #2
9000f58c:	e7f2      	b.n	9000f574 <vQueueDelete+0x54>
9000f58e:	2203      	movs	r2, #3
9000f590:	e7f0      	b.n	9000f574 <vQueueDelete+0x54>
9000f592:	2204      	movs	r2, #4
9000f594:	e7ee      	b.n	9000f574 <vQueueDelete+0x54>
9000f596:	2206      	movs	r2, #6
9000f598:	e7ec      	b.n	9000f574 <vQueueDelete+0x54>
9000f59a:	2207      	movs	r2, #7
9000f59c:	e7ea      	b.n	9000f574 <vQueueDelete+0x54>
9000f59e:	bf00      	nop
	...
9000f5a8:	24022e48 	.word	0x24022e48

9000f5ac <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000f5ac:	4b12      	ldr	r3, [pc, #72]	@ (9000f5f8 <vQueueAddToRegistry+0x4c>)
9000f5ae:	681a      	ldr	r2, [r3, #0]
9000f5b0:	b17a      	cbz	r2, 9000f5d2 <vQueueAddToRegistry+0x26>
9000f5b2:	689a      	ldr	r2, [r3, #8]
9000f5b4:	b162      	cbz	r2, 9000f5d0 <vQueueAddToRegistry+0x24>
9000f5b6:	691a      	ldr	r2, [r3, #16]
9000f5b8:	b192      	cbz	r2, 9000f5e0 <vQueueAddToRegistry+0x34>
9000f5ba:	699a      	ldr	r2, [r3, #24]
9000f5bc:	b192      	cbz	r2, 9000f5e4 <vQueueAddToRegistry+0x38>
9000f5be:	6a1a      	ldr	r2, [r3, #32]
9000f5c0:	b192      	cbz	r2, 9000f5e8 <vQueueAddToRegistry+0x3c>
9000f5c2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000f5c4:	b192      	cbz	r2, 9000f5ec <vQueueAddToRegistry+0x40>
9000f5c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000f5c8:	b192      	cbz	r2, 9000f5f0 <vQueueAddToRegistry+0x44>
9000f5ca:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000f5cc:	b192      	cbz	r2, 9000f5f4 <vQueueAddToRegistry+0x48>
	}
9000f5ce:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f5d0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f5d2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000f5d6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f5da:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000f5de:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f5e0:	2202      	movs	r2, #2
9000f5e2:	e7f6      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5e4:	2203      	movs	r2, #3
9000f5e6:	e7f4      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5e8:	2204      	movs	r2, #4
9000f5ea:	e7f2      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5ec:	2205      	movs	r2, #5
9000f5ee:	e7f0      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5f0:	2206      	movs	r2, #6
9000f5f2:	e7ee      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5f4:	2207      	movs	r2, #7
9000f5f6:	e7ec      	b.n	9000f5d2 <vQueueAddToRegistry+0x26>
9000f5f8:	24022e48 	.word	0x24022e48

9000f5fc <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000f5fc:	b570      	push	{r4, r5, r6, lr}
9000f5fe:	4605      	mov	r5, r0
9000f600:	460e      	mov	r6, r1
9000f602:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000f604:	f7fe feae 	bl	9000e364 <vPortEnterCritical>
9000f608:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f60c:	2bff      	cmp	r3, #255	@ 0xff
9000f60e:	d102      	bne.n	9000f616 <vQueueWaitForMessageRestricted+0x1a>
9000f610:	2300      	movs	r3, #0
9000f612:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000f616:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f61a:	2bff      	cmp	r3, #255	@ 0xff
9000f61c:	d102      	bne.n	9000f624 <vQueueWaitForMessageRestricted+0x28>
9000f61e:	2300      	movs	r3, #0
9000f620:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000f624:	f7fe fec0 	bl	9000e3a8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000f628:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000f62a:	2b00      	cmp	r3, #0
9000f62c:	d043      	beq.n	9000f6b6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000f62e:	f7fe fe99 	bl	9000e364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f632:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f636:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f638:	2c00      	cmp	r4, #0
9000f63a:	dd14      	ble.n	9000f666 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f63c:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000f640:	e003      	b.n	9000f64a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000f642:	1e63      	subs	r3, r4, #1
9000f644:	b2da      	uxtb	r2, r3
9000f646:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f648:	b16a      	cbz	r2, 9000f666 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f64a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f64c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f64e:	b153      	cbz	r3, 9000f666 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f650:	f000 fe2a 	bl	900102a8 <xTaskRemoveFromEventList>
9000f654:	2800      	cmp	r0, #0
9000f656:	d0f4      	beq.n	9000f642 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000f658:	f000 feba 	bl	900103d0 <vTaskMissedYield>
			--cTxLock;
9000f65c:	1e63      	subs	r3, r4, #1
9000f65e:	b2da      	uxtb	r2, r3
9000f660:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f662:	2a00      	cmp	r2, #0
9000f664:	d1f1      	bne.n	9000f64a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f666:	23ff      	movs	r3, #255	@ 0xff
9000f668:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f66c:	f7fe fe9c 	bl	9000e3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f670:	f7fe fe78 	bl	9000e364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f674:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f678:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f67a:	2c00      	cmp	r4, #0
9000f67c:	dd14      	ble.n	9000f6a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f67e:	f105 0610 	add.w	r6, r5, #16
9000f682:	e003      	b.n	9000f68c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000f684:	1e63      	subs	r3, r4, #1
9000f686:	b2da      	uxtb	r2, r3
9000f688:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f68a:	b16a      	cbz	r2, 9000f6a8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f68c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f68e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f690:	b153      	cbz	r3, 9000f6a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f692:	f000 fe09 	bl	900102a8 <xTaskRemoveFromEventList>
9000f696:	2800      	cmp	r0, #0
9000f698:	d0f4      	beq.n	9000f684 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000f69a:	f000 fe99 	bl	900103d0 <vTaskMissedYield>
				--cRxLock;
9000f69e:	1e63      	subs	r3, r4, #1
9000f6a0:	b2da      	uxtb	r2, r3
9000f6a2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6a4:	2a00      	cmp	r2, #0
9000f6a6:	d1f1      	bne.n	9000f68c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000f6a8:	23ff      	movs	r3, #255	@ 0xff
9000f6aa:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000f6ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000f6b2:	f7fe be79 	b.w	9000e3a8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000f6b6:	4622      	mov	r2, r4
9000f6b8:	4631      	mov	r1, r6
9000f6ba:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000f6be:	f000 fda9 	bl	90010214 <vTaskPlaceOnEventListRestricted>
9000f6c2:	e7b4      	b.n	9000f62e <vQueueWaitForMessageRestricted+0x32>

9000f6c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000f6c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f6c8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000f6ca:	f7fe fe4b 	bl	9000e364 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000f6ce:	4a34      	ldr	r2, [pc, #208]	@ (9000f7a0 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000f6d0:	4e34      	ldr	r6, [pc, #208]	@ (9000f7a4 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000f6d2:	6813      	ldr	r3, [r2, #0]
9000f6d4:	3301      	adds	r3, #1
9000f6d6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000f6d8:	6833      	ldr	r3, [r6, #0]
9000f6da:	2b00      	cmp	r3, #0
9000f6dc:	d031      	beq.n	9000f742 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000f6de:	4c32      	ldr	r4, [pc, #200]	@ (9000f7a8 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f6e0:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000f6e2:	6823      	ldr	r3, [r4, #0]
9000f6e4:	b333      	cbz	r3, 9000f734 <prvAddNewTaskToReadyList+0x70>
9000f6e6:	4f31      	ldr	r7, [pc, #196]	@ (9000f7ac <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000f6e8:	4a31      	ldr	r2, [pc, #196]	@ (9000f7b0 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000f6ea:	4932      	ldr	r1, [pc, #200]	@ (9000f7b4 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000f6ec:	6813      	ldr	r3, [r2, #0]
9000f6ee:	3301      	adds	r3, #1
9000f6f0:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000f6f2:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000f6f4:	680b      	ldr	r3, [r1, #0]
9000f6f6:	4283      	cmp	r3, r0
9000f6f8:	d200      	bcs.n	9000f6fc <prvAddNewTaskToReadyList+0x38>
9000f6fa:	6008      	str	r0, [r1, #0]
9000f6fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f700:	1d29      	adds	r1, r5, #4
9000f702:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000f706:	f7fe fd8b 	bl	9000e220 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000f70a:	f7fe fe4d 	bl	9000e3a8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000f70e:	6823      	ldr	r3, [r4, #0]
9000f710:	b173      	cbz	r3, 9000f730 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000f712:	6832      	ldr	r2, [r6, #0]
9000f714:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000f716:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f718:	429a      	cmp	r2, r3
9000f71a:	d209      	bcs.n	9000f730 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000f71c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f720:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f724:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f728:	f3bf 8f4f 	dsb	sy
9000f72c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000f730:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f734:	6833      	ldr	r3, [r6, #0]
9000f736:	4f1d      	ldr	r7, [pc, #116]	@ (9000f7ac <prvAddNewTaskToReadyList+0xe8>)
9000f738:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f73a:	4283      	cmp	r3, r0
9000f73c:	d8d4      	bhi.n	9000f6e8 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000f73e:	6035      	str	r5, [r6, #0]
9000f740:	e7d2      	b.n	9000f6e8 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000f742:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000f744:	6813      	ldr	r3, [r2, #0]
9000f746:	2b01      	cmp	r3, #1
9000f748:	d003      	beq.n	9000f752 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f74a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000f74c:	4f17      	ldr	r7, [pc, #92]	@ (9000f7ac <prvAddNewTaskToReadyList+0xe8>)
9000f74e:	4c16      	ldr	r4, [pc, #88]	@ (9000f7a8 <prvAddNewTaskToReadyList+0xe4>)
9000f750:	e7ca      	b.n	9000f6e8 <prvAddNewTaskToReadyList+0x24>
9000f752:	4f16      	ldr	r7, [pc, #88]	@ (9000f7ac <prvAddNewTaskToReadyList+0xe8>)
9000f754:	463c      	mov	r4, r7
9000f756:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f75a:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f75c:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f75e:	f7fe fd4f 	bl	9000e200 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f762:	45a0      	cmp	r8, r4
9000f764:	d1f9      	bne.n	9000f75a <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000f766:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 9000f7cc <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000f76a:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000f7d0 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000f76e:	4648      	mov	r0, r9
9000f770:	4c0d      	ldr	r4, [pc, #52]	@ (9000f7a8 <prvAddNewTaskToReadyList+0xe4>)
9000f772:	f7fe fd45 	bl	9000e200 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000f776:	4640      	mov	r0, r8
9000f778:	f7fe fd42 	bl	9000e200 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000f77c:	480e      	ldr	r0, [pc, #56]	@ (9000f7b8 <prvAddNewTaskToReadyList+0xf4>)
9000f77e:	f7fe fd3f 	bl	9000e200 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000f782:	480e      	ldr	r0, [pc, #56]	@ (9000f7bc <prvAddNewTaskToReadyList+0xf8>)
9000f784:	f7fe fd3c 	bl	9000e200 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000f788:	480d      	ldr	r0, [pc, #52]	@ (9000f7c0 <prvAddNewTaskToReadyList+0xfc>)
9000f78a:	f7fe fd39 	bl	9000e200 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000f78e:	4b0d      	ldr	r3, [pc, #52]	@ (9000f7c4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000f790:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000f792:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000f796:	4b0c      	ldr	r3, [pc, #48]	@ (9000f7c8 <prvAddNewTaskToReadyList+0x104>)
9000f798:	f8c3 8000 	str.w	r8, [r3]
}
9000f79c:	e7a4      	b.n	9000f6e8 <prvAddNewTaskToReadyList+0x24>
9000f79e:	bf00      	nop
9000f7a0:	24022eac 	.word	0x24022eac
9000f7a4:	24023380 	.word	0x24023380
9000f7a8:	24022ea0 	.word	0x24022ea0
9000f7ac:	24022f20 	.word	0x24022f20
9000f7b0:	24022e90 	.word	0x24022e90
9000f7b4:	24022ea4 	.word	0x24022ea4
9000f7b8:	24022edc 	.word	0x24022edc
9000f7bc:	24022ec8 	.word	0x24022ec8
9000f7c0:	24022eb0 	.word	0x24022eb0
9000f7c4:	24022ef4 	.word	0x24022ef4
9000f7c8:	24022ef0 	.word	0x24022ef0
9000f7cc:	24022f0c 	.word	0x24022f0c
9000f7d0:	24022ef8 	.word	0x24022ef8

9000f7d4 <prvIdleTask>:
{
9000f7d4:	b580      	push	{r7, lr}
9000f7d6:	4c22      	ldr	r4, [pc, #136]	@ (9000f860 <prvIdleTask+0x8c>)
9000f7d8:	4e22      	ldr	r6, [pc, #136]	@ (9000f864 <prvIdleTask+0x90>)
9000f7da:	4d23      	ldr	r5, [pc, #140]	@ (9000f868 <prvIdleTask+0x94>)
9000f7dc:	4f23      	ldr	r7, [pc, #140]	@ (9000f86c <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000f7de:	6823      	ldr	r3, [r4, #0]
9000f7e0:	b353      	cbz	r3, 9000f838 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000f7e2:	f7fe fdbf 	bl	9000e364 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f7e6:	68f3      	ldr	r3, [r6, #12]
9000f7e8:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f7ec:	f108 0004 	add.w	r0, r8, #4
9000f7f0:	f7fe fd3c 	bl	9000e26c <uxListRemove>
				--uxCurrentNumberOfTasks;
9000f7f4:	682b      	ldr	r3, [r5, #0]
9000f7f6:	3b01      	subs	r3, #1
9000f7f8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000f7fa:	6823      	ldr	r3, [r4, #0]
9000f7fc:	3b01      	subs	r3, #1
9000f7fe:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000f800:	f7fe fdd2 	bl	9000e3a8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000f804:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000f808:	b163      	cbz	r3, 9000f824 <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000f80a:	2b01      	cmp	r3, #1
9000f80c:	d024      	beq.n	9000f858 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000f80e:	2b02      	cmp	r3, #2
9000f810:	d0e5      	beq.n	9000f7de <prvIdleTask+0xa>
9000f812:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f816:	f383 8811 	msr	BASEPRI, r3
9000f81a:	f3bf 8f6f 	isb	sy
9000f81e:	f3bf 8f4f 	dsb	sy
9000f822:	e7fe      	b.n	9000f822 <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000f824:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000f828:	f7fe fc84 	bl	9000e134 <vPortFree>
				vPortFree( pxTCB );
9000f82c:	4640      	mov	r0, r8
9000f82e:	f7fe fc81 	bl	9000e134 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000f832:	6823      	ldr	r3, [r4, #0]
9000f834:	2b00      	cmp	r3, #0
9000f836:	d1d4      	bne.n	9000f7e2 <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000f838:	683b      	ldr	r3, [r7, #0]
9000f83a:	2b01      	cmp	r3, #1
9000f83c:	d909      	bls.n	9000f852 <prvIdleTask+0x7e>
				taskYIELD();
9000f83e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f842:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f846:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f84a:	f3bf 8f4f 	dsb	sy
9000f84e:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000f852:	f7f3 ff4d 	bl	900036f0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000f856:	e7c2      	b.n	9000f7de <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000f858:	4640      	mov	r0, r8
9000f85a:	f7fe fc6b 	bl	9000e134 <vPortFree>
9000f85e:	e7be      	b.n	9000f7de <prvIdleTask+0xa>
9000f860:	24022ec4 	.word	0x24022ec4
9000f864:	24022ec8 	.word	0x24022ec8
9000f868:	24022eac 	.word	0x24022eac
9000f86c:	24022f20 	.word	0x24022f20

9000f870 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f870:	4b49      	ldr	r3, [pc, #292]	@ (9000f998 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000f872:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f876:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000f878:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f87a:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000f87c:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000f87e:	2e00      	cmp	r6, #0
9000f880:	d03e      	beq.n	9000f900 <xTaskIncrementTick.part.0+0x90>
9000f882:	4b46      	ldr	r3, [pc, #280]	@ (9000f99c <xTaskIncrementTick.part.0+0x12c>)
9000f884:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000f886:	681b      	ldr	r3, [r3, #0]
9000f888:	429e      	cmp	r6, r3
9000f88a:	d346      	bcc.n	9000f91a <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f88c:	4f44      	ldr	r7, [pc, #272]	@ (9000f9a0 <xTaskIncrementTick.part.0+0x130>)
9000f88e:	683b      	ldr	r3, [r7, #0]
9000f890:	681d      	ldr	r5, [r3, #0]
9000f892:	2d00      	cmp	r5, #0
9000f894:	d077      	beq.n	9000f986 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000f896:	2500      	movs	r5, #0
9000f898:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000f9b0 <xTaskIncrementTick.part.0+0x140>
9000f89c:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000f9b4 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000f8a0:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000f9b8 <xTaskIncrementTick.part.0+0x148>
9000f8a4:	e020      	b.n	9000f8e8 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f8a6:	f7fe fce1 	bl	9000e26c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000f8aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f8ac:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000f8b0:	b10b      	cbz	r3, 9000f8b6 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f8b2:	f7fe fcdb 	bl	9000e26c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000f8b6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f8b8:	4659      	mov	r1, fp
9000f8ba:	f8d8 2000 	ldr.w	r2, [r8]
9000f8be:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000f8c2:	4293      	cmp	r3, r2
9000f8c4:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000f8c8:	d901      	bls.n	9000f8ce <xTaskIncrementTick.part.0+0x5e>
9000f8ca:	f8c8 3000 	str.w	r3, [r8]
9000f8ce:	f7fe fca7 	bl	9000e220 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f8d2:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f8d6:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f8d8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000f8da:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f8dc:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000f8de:	4291      	cmp	r1, r2
9000f8e0:	bf28      	it	cs
9000f8e2:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f8e4:	2b00      	cmp	r3, #0
9000f8e6:	d052      	beq.n	9000f98e <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f8e8:	683b      	ldr	r3, [r7, #0]
9000f8ea:	68db      	ldr	r3, [r3, #12]
9000f8ec:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000f8ee:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f8f0:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000f8f4:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f8f6:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000f8f8:	d2d5      	bcs.n	9000f8a6 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000f8fa:	9a01      	ldr	r2, [sp, #4]
9000f8fc:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000f8fe:	e011      	b.n	9000f924 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000f900:	4b27      	ldr	r3, [pc, #156]	@ (9000f9a0 <xTaskIncrementTick.part.0+0x130>)
9000f902:	681a      	ldr	r2, [r3, #0]
9000f904:	6812      	ldr	r2, [r2, #0]
9000f906:	b30a      	cbz	r2, 9000f94c <xTaskIncrementTick.part.0+0xdc>
9000f908:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f90c:	f383 8811 	msr	BASEPRI, r3
9000f910:	f3bf 8f6f 	isb	sy
9000f914:	f3bf 8f4f 	dsb	sy
9000f918:	e7fe      	b.n	9000f918 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000f91a:	2500      	movs	r5, #0
9000f91c:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000f9b0 <xTaskIncrementTick.part.0+0x140>
9000f920:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000f9b4 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000f924:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000f928:	491e      	ldr	r1, [pc, #120]	@ (9000f9a4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000f92a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f92c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f930:	009b      	lsls	r3, r3, #2
9000f932:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000f936:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000f938:	2a02      	cmp	r2, #2
9000f93a:	bf28      	it	cs
9000f93c:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000f93e:	2b00      	cmp	r3, #0
}
9000f940:	bf0c      	ite	eq
9000f942:	4628      	moveq	r0, r5
9000f944:	2001      	movne	r0, #1
9000f946:	b003      	add	sp, #12
9000f948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000f94c:	4a16      	ldr	r2, [pc, #88]	@ (9000f9a8 <xTaskIncrementTick.part.0+0x138>)
9000f94e:	6818      	ldr	r0, [r3, #0]
9000f950:	6811      	ldr	r1, [r2, #0]
9000f952:	6019      	str	r1, [r3, #0]
9000f954:	4915      	ldr	r1, [pc, #84]	@ (9000f9ac <xTaskIncrementTick.part.0+0x13c>)
9000f956:	6010      	str	r0, [r2, #0]
9000f958:	680a      	ldr	r2, [r1, #0]
9000f95a:	3201      	adds	r2, #1
9000f95c:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f95e:	681a      	ldr	r2, [r3, #0]
9000f960:	6812      	ldr	r2, [r2, #0]
9000f962:	b93a      	cbnz	r2, 9000f974 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000f964:	4b0d      	ldr	r3, [pc, #52]	@ (9000f99c <xTaskIncrementTick.part.0+0x12c>)
9000f966:	461a      	mov	r2, r3
9000f968:	9301      	str	r3, [sp, #4]
9000f96a:	f04f 33ff 	mov.w	r3, #4294967295
9000f96e:	6013      	str	r3, [r2, #0]
9000f970:	4613      	mov	r3, r2
9000f972:	e788      	b.n	9000f886 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f974:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f976:	4a09      	ldr	r2, [pc, #36]	@ (9000f99c <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f978:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f97a:	9201      	str	r2, [sp, #4]
9000f97c:	68db      	ldr	r3, [r3, #12]
9000f97e:	685b      	ldr	r3, [r3, #4]
9000f980:	6013      	str	r3, [r2, #0]
9000f982:	4613      	mov	r3, r2
	}
}
9000f984:	e77f      	b.n	9000f886 <xTaskIncrementTick.part.0+0x16>
9000f986:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000f9b0 <xTaskIncrementTick.part.0+0x140>
9000f98a:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f9b4 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f98e:	f04f 33ff 	mov.w	r3, #4294967295
9000f992:	9a01      	ldr	r2, [sp, #4]
9000f994:	6013      	str	r3, [r2, #0]
					break;
9000f996:	e7c5      	b.n	9000f924 <xTaskIncrementTick.part.0+0xb4>
9000f998:	24022ea8 	.word	0x24022ea8
9000f99c:	24022e8c 	.word	0x24022e8c
9000f9a0:	24022ef4 	.word	0x24022ef4
9000f9a4:	24022e98 	.word	0x24022e98
9000f9a8:	24022ef0 	.word	0x24022ef0
9000f9ac:	24022e94 	.word	0x24022e94
9000f9b0:	24022f20 	.word	0x24022f20
9000f9b4:	24023380 	.word	0x24023380
9000f9b8:	24022ea4 	.word	0x24022ea4

9000f9bc <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000f9bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000f9c0:	4d43      	ldr	r5, [pc, #268]	@ (9000fad0 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9000f9c2:	f7fe fccf 	bl	9000e364 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000f9c6:	682b      	ldr	r3, [r5, #0]
9000f9c8:	3b01      	subs	r3, #1
9000f9ca:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f9cc:	682b      	ldr	r3, [r5, #0]
9000f9ce:	2b00      	cmp	r3, #0
9000f9d0:	d168      	bne.n	9000faa4 <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000f9d2:	4b40      	ldr	r3, [pc, #256]	@ (9000fad4 <xTaskResumeAll.part.0+0x118>)
9000f9d4:	681b      	ldr	r3, [r3, #0]
9000f9d6:	2b00      	cmp	r3, #0
9000f9d8:	d064      	beq.n	9000faa4 <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f9da:	4e3f      	ldr	r6, [pc, #252]	@ (9000fad8 <xTaskResumeAll.part.0+0x11c>)
9000f9dc:	6833      	ldr	r3, [r6, #0]
9000f9de:	2b00      	cmp	r3, #0
9000f9e0:	d073      	beq.n	9000faca <xTaskResumeAll.part.0+0x10e>
9000f9e2:	4f3e      	ldr	r7, [pc, #248]	@ (9000fadc <xTaskResumeAll.part.0+0x120>)
9000f9e4:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 9000faec <xTaskResumeAll.part.0+0x130>
9000f9e8:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9000faf0 <xTaskResumeAll.part.0+0x134>
9000f9ec:	f8df a104 	ldr.w	sl, [pc, #260]	@ 9000faf4 <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f9f0:	68f3      	ldr	r3, [r6, #12]
9000f9f2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f9f6:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f9fa:	f10b 0018 	add.w	r0, fp, #24
9000f9fe:	f7fe fc35 	bl	9000e26c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fa02:	4620      	mov	r0, r4
9000fa04:	f7fe fc32 	bl	9000e26c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fa08:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000fa0c:	4621      	mov	r1, r4
9000fa0e:	683c      	ldr	r4, [r7, #0]
9000fa10:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9000fa14:	42a2      	cmp	r2, r4
9000fa16:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fa1a:	d900      	bls.n	9000fa1e <xTaskResumeAll.part.0+0x62>
9000fa1c:	603a      	str	r2, [r7, #0]
9000fa1e:	f7fe fbff 	bl	9000e220 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fa22:	f8d8 1000 	ldr.w	r1, [r8]
9000fa26:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000fa2a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9000fa2c:	429a      	cmp	r2, r3
9000fa2e:	d33f      	bcc.n	9000fab0 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
9000fa30:	2301      	movs	r3, #1
9000fa32:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fa36:	6833      	ldr	r3, [r6, #0]
9000fa38:	2b00      	cmp	r3, #0
9000fa3a:	d1d9      	bne.n	9000f9f0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fa3c:	4b28      	ldr	r3, [pc, #160]	@ (9000fae0 <xTaskResumeAll.part.0+0x124>)
9000fa3e:	681a      	ldr	r2, [r3, #0]
9000fa40:	6812      	ldr	r2, [r2, #0]
9000fa42:	2a00      	cmp	r2, #0
9000fa44:	d03c      	beq.n	9000fac0 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa46:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fa48:	4b26      	ldr	r3, [pc, #152]	@ (9000fae4 <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa4a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fa4c:	68d2      	ldr	r2, [r2, #12]
9000fa4e:	6852      	ldr	r2, [r2, #4]
9000fa50:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000fa52:	4e25      	ldr	r6, [pc, #148]	@ (9000fae8 <xTaskResumeAll.part.0+0x12c>)
9000fa54:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000fa56:	b194      	cbz	r4, 9000fa7e <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
9000fa58:	2701      	movs	r7, #1
9000fa5a:	e006      	b.n	9000fa6a <xTaskResumeAll.part.0+0xae>
9000fa5c:	f7ff ff08 	bl	9000f870 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000fa60:	b108      	cbz	r0, 9000fa66 <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9000fa62:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fa66:	3c01      	subs	r4, #1
9000fa68:	d008      	beq.n	9000fa7c <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fa6a:	682b      	ldr	r3, [r5, #0]
9000fa6c:	2b00      	cmp	r3, #0
9000fa6e:	d0f5      	beq.n	9000fa5c <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9000fa70:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fa72:	3c01      	subs	r4, #1
		++xPendedTicks;
9000fa74:	f103 0301 	add.w	r3, r3, #1
9000fa78:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fa7a:	d1f6      	bne.n	9000fa6a <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
9000fa7c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000fa7e:	f8da 3000 	ldr.w	r3, [sl]
9000fa82:	b17b      	cbz	r3, 9000faa4 <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9000fa84:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fa88:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fa8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fa90:	f3bf 8f4f 	dsb	sy
9000fa94:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000fa98:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000fa9a:	f7fe fc85 	bl	9000e3a8 <vPortExitCritical>
}
9000fa9e:	4620      	mov	r0, r4
9000faa0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000faa4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000faa6:	f7fe fc7f 	bl	9000e3a8 <vPortExitCritical>
}
9000faaa:	4620      	mov	r0, r4
9000faac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fab0:	6833      	ldr	r3, [r6, #0]
9000fab2:	2b00      	cmp	r3, #0
9000fab4:	d19c      	bne.n	9000f9f0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fab6:	4b0a      	ldr	r3, [pc, #40]	@ (9000fae0 <xTaskResumeAll.part.0+0x124>)
9000fab8:	681a      	ldr	r2, [r3, #0]
9000faba:	6812      	ldr	r2, [r2, #0]
9000fabc:	2a00      	cmp	r2, #0
9000fabe:	d1c2      	bne.n	9000fa46 <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9000fac0:	4b08      	ldr	r3, [pc, #32]	@ (9000fae4 <xTaskResumeAll.part.0+0x128>)
9000fac2:	f04f 32ff 	mov.w	r2, #4294967295
9000fac6:	601a      	str	r2, [r3, #0]
9000fac8:	e7c3      	b.n	9000fa52 <xTaskResumeAll.part.0+0x96>
9000faca:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000faf4 <xTaskResumeAll.part.0+0x138>
9000face:	e7c0      	b.n	9000fa52 <xTaskResumeAll.part.0+0x96>
9000fad0:	24022e88 	.word	0x24022e88
9000fad4:	24022eac 	.word	0x24022eac
9000fad8:	24022edc 	.word	0x24022edc
9000fadc:	24022ea4 	.word	0x24022ea4
9000fae0:	24022ef4 	.word	0x24022ef4
9000fae4:	24022e8c 	.word	0x24022e8c
9000fae8:	24022e9c 	.word	0x24022e9c
9000faec:	24022f20 	.word	0x24022f20
9000faf0:	24023380 	.word	0x24023380
9000faf4:	24022e98 	.word	0x24022e98

9000faf8 <xTaskCreateStatic>:
	{
9000faf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000fafc:	b083      	sub	sp, #12
9000fafe:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000fb00:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000fb04:	b1bb      	cbz	r3, 9000fb36 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000fb06:	b16c      	cbz	r4, 9000fb24 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000fb08:	2360      	movs	r3, #96	@ 0x60
9000fb0a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000fb0c:	9b01      	ldr	r3, [sp, #4]
9000fb0e:	2b60      	cmp	r3, #96	@ 0x60
9000fb10:	d01a      	beq.n	9000fb48 <xTaskCreateStatic+0x50>
9000fb12:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb16:	f383 8811 	msr	BASEPRI, r3
9000fb1a:	f3bf 8f6f 	isb	sy
9000fb1e:	f3bf 8f4f 	dsb	sy
9000fb22:	e7fe      	b.n	9000fb22 <xTaskCreateStatic+0x2a>
9000fb24:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb28:	f383 8811 	msr	BASEPRI, r3
9000fb2c:	f3bf 8f6f 	isb	sy
9000fb30:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000fb34:	e7fe      	b.n	9000fb34 <xTaskCreateStatic+0x3c>
9000fb36:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb3a:	f383 8811 	msr	BASEPRI, r3
9000fb3e:	f3bf 8f6f 	isb	sy
9000fb42:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000fb46:	e7fe      	b.n	9000fb46 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000fb48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fb4a:	0096      	lsls	r6, r2, #2
9000fb4c:	4607      	mov	r7, r0
9000fb4e:	460d      	mov	r5, r1
9000fb50:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000fb52:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000fb54:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000fb56:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fb58:	4632      	mov	r2, r6
9000fb5a:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000fb5c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fb60:	f01a fe32 	bl	9002a7c8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fb64:	1f32      	subs	r2, r6, #4
9000fb66:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000fb68:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fb6a:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000fb6e:	2d00      	cmp	r5, #0
9000fb70:	d068      	beq.n	9000fc44 <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb72:	782b      	ldrb	r3, [r5, #0]
9000fb74:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000fb78:	2b00      	cmp	r3, #0
9000fb7a:	d036      	beq.n	9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb7c:	786b      	ldrb	r3, [r5, #1]
9000fb7e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fb82:	b393      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb84:	78ab      	ldrb	r3, [r5, #2]
9000fb86:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fb8a:	b373      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb8c:	78eb      	ldrb	r3, [r5, #3]
9000fb8e:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fb92:	b353      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb94:	792b      	ldrb	r3, [r5, #4]
9000fb96:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fb9a:	b333      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb9c:	796b      	ldrb	r3, [r5, #5]
9000fb9e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000fba2:	b313      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fba4:	79ab      	ldrb	r3, [r5, #6]
9000fba6:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000fbaa:	b1f3      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbac:	79eb      	ldrb	r3, [r5, #7]
9000fbae:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000fbb2:	b1d3      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbb4:	7a2b      	ldrb	r3, [r5, #8]
9000fbb6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000fbba:	b1b3      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbbc:	7a6b      	ldrb	r3, [r5, #9]
9000fbbe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000fbc2:	b193      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbc4:	7aab      	ldrb	r3, [r5, #10]
9000fbc6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000fbca:	b173      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbcc:	7aeb      	ldrb	r3, [r5, #11]
9000fbce:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fbd2:	b153      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbd4:	7b2b      	ldrb	r3, [r5, #12]
9000fbd6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000fbda:	b133      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbdc:	7b6b      	ldrb	r3, [r5, #13]
9000fbde:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fbe2:	b113      	cbz	r3, 9000fbea <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fbe4:	7bab      	ldrb	r3, [r5, #14]
9000fbe6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fbea:	2300      	movs	r3, #0
9000fbec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fbf0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000fbf2:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fbf6:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fbf8:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000fbfa:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fbfe:	bf28      	it	cs
9000fc00:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000fc02:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000fc04:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fc06:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fc0a:	f7fe fb05 	bl	9000e218 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000fc0e:	f104 0018 	add.w	r0, r4, #24
9000fc12:	f7fe fb01 	bl	9000e218 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fc16:	4642      	mov	r2, r8
9000fc18:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000fc1a:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fc1e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fc20:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000fc22:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000fc24:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000fc26:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000fc2a:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fc2e:	f7fe fb6f 	bl	9000e310 <pxPortInitialiseStack>
9000fc32:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000fc34:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fc36:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000fc38:	f7ff fd44 	bl	9000f6c4 <prvAddNewTaskToReadyList>
	}
9000fc3c:	4620      	mov	r0, r4
9000fc3e:	b003      	add	sp, #12
9000fc40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000fc44:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000fc48:	e7d2      	b.n	9000fbf0 <xTaskCreateStatic+0xf8>
9000fc4a:	bf00      	nop

9000fc4c <xTaskCreate>:
	{
9000fc4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000fc50:	0096      	lsls	r6, r2, #2
	{
9000fc52:	4680      	mov	r8, r0
9000fc54:	460d      	mov	r5, r1
9000fc56:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000fc58:	4630      	mov	r0, r6
9000fc5a:	f7fe f9af 	bl	9000dfbc <pvPortMalloc>
			if( pxStack != NULL )
9000fc5e:	2800      	cmp	r0, #0
9000fc60:	d07f      	beq.n	9000fd62 <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000fc62:	4607      	mov	r7, r0
9000fc64:	2060      	movs	r0, #96	@ 0x60
9000fc66:	f7fe f9a9 	bl	9000dfbc <pvPortMalloc>
				if( pxNewTCB != NULL )
9000fc6a:	4604      	mov	r4, r0
9000fc6c:	2800      	cmp	r0, #0
9000fc6e:	d075      	beq.n	9000fd5c <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000fc70:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000fc72:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fc74:	4632      	mov	r2, r6
9000fc76:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000fc78:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fc7c:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fc7e:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fc80:	f01a fda2 	bl	9002a7c8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fc84:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000fc86:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fc88:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000fc8c:	2d00      	cmp	r5, #0
9000fc8e:	d06c      	beq.n	9000fd6a <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fc90:	782b      	ldrb	r3, [r5, #0]
9000fc92:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000fc96:	2b00      	cmp	r3, #0
9000fc98:	d036      	beq.n	9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fc9a:	786b      	ldrb	r3, [r5, #1]
9000fc9c:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fca0:	b393      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fca2:	78ab      	ldrb	r3, [r5, #2]
9000fca4:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fca8:	b373      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcaa:	78eb      	ldrb	r3, [r5, #3]
9000fcac:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fcb0:	b353      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcb2:	792b      	ldrb	r3, [r5, #4]
9000fcb4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fcb8:	b333      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcba:	796b      	ldrb	r3, [r5, #5]
9000fcbc:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000fcc0:	b313      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcc2:	79ab      	ldrb	r3, [r5, #6]
9000fcc4:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000fcc8:	b1f3      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcca:	79eb      	ldrb	r3, [r5, #7]
9000fccc:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000fcd0:	b1d3      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcd2:	7a2b      	ldrb	r3, [r5, #8]
9000fcd4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000fcd8:	b1b3      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcda:	7a6b      	ldrb	r3, [r5, #9]
9000fcdc:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000fce0:	b193      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fce2:	7aab      	ldrb	r3, [r5, #10]
9000fce4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000fce8:	b173      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcea:	7aeb      	ldrb	r3, [r5, #11]
9000fcec:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fcf0:	b153      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcf2:	7b2b      	ldrb	r3, [r5, #12]
9000fcf4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000fcf8:	b133      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fcfa:	7b6b      	ldrb	r3, [r5, #13]
9000fcfc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fd00:	b113      	cbz	r3, 9000fd08 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd02:	7bab      	ldrb	r3, [r5, #14]
9000fd04:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fd08:	2300      	movs	r3, #0
9000fd0a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fd0e:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000fd10:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fd12:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fd14:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000fd16:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fd18:	bf28      	it	cs
9000fd1a:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000fd1c:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000fd1e:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fd20:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fd24:	f7fe fa78 	bl	9000e218 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000fd28:	f104 0018 	add.w	r0, r4, #24
9000fd2c:	f7fe fa74 	bl	9000e218 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000fd30:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fd32:	464a      	mov	r2, r9
9000fd34:	4641      	mov	r1, r8
9000fd36:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fd38:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000fd3a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000fd3c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000fd3e:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000fd40:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fd44:	f7fe fae4 	bl	9000e310 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000fd48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fd4a:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000fd4c:	b103      	cbz	r3, 9000fd50 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000fd4e:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000fd50:	4620      	mov	r0, r4
9000fd52:	f7ff fcb7 	bl	9000f6c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000fd56:	2001      	movs	r0, #1
	}
9000fd58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000fd5c:	4638      	mov	r0, r7
9000fd5e:	f7fe f9e9 	bl	9000e134 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000fd62:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000fd66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000fd6a:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000fd6e:	e7ce      	b.n	9000fd0e <xTaskCreate+0xc2>

9000fd70 <vTaskDelayUntil>:
	{
9000fd70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxPreviousWakeTime );
9000fd72:	b338      	cbz	r0, 9000fdc4 <vTaskDelayUntil+0x54>
		configASSERT( ( xTimeIncrement > 0U ) );
9000fd74:	b941      	cbnz	r1, 9000fd88 <vTaskDelayUntil+0x18>
9000fd76:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd7a:	f383 8811 	msr	BASEPRI, r3
9000fd7e:	f3bf 8f6f 	isb	sy
9000fd82:	f3bf 8f4f 	dsb	sy
9000fd86:	e7fe      	b.n	9000fd86 <vTaskDelayUntil+0x16>
		configASSERT( uxSchedulerSuspended == 0 );
9000fd88:	4d32      	ldr	r5, [pc, #200]	@ (9000fe54 <vTaskDelayUntil+0xe4>)
9000fd8a:	682b      	ldr	r3, [r5, #0]
9000fd8c:	bb1b      	cbnz	r3, 9000fdd6 <vTaskDelayUntil+0x66>
	++uxSchedulerSuspended;
9000fd8e:	682b      	ldr	r3, [r5, #0]
9000fd90:	3301      	adds	r3, #1
9000fd92:	602b      	str	r3, [r5, #0]
			const TickType_t xConstTickCount = xTickCount;
9000fd94:	4c30      	ldr	r4, [pc, #192]	@ (9000fe58 <vTaskDelayUntil+0xe8>)
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
9000fd96:	6803      	ldr	r3, [r0, #0]
			const TickType_t xConstTickCount = xTickCount;
9000fd98:	6822      	ldr	r2, [r4, #0]
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
9000fd9a:	1859      	adds	r1, r3, r1
9000fd9c:	bf2c      	ite	cs
9000fd9e:	2601      	movcs	r6, #1
9000fda0:	2600      	movcc	r6, #0
			if( xConstTickCount < *pxPreviousWakeTime )
9000fda2:	4293      	cmp	r3, r2
9000fda4:	d920      	bls.n	9000fde8 <vTaskDelayUntil+0x78>
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
9000fda6:	2e00      	cmp	r6, #0
9000fda8:	d149      	bne.n	9000fe3e <vTaskDelayUntil+0xce>
			*pxPreviousWakeTime = xTimeToWake;
9000fdaa:	6001      	str	r1, [r0, #0]
	configASSERT( uxSchedulerSuspended );
9000fdac:	682b      	ldr	r3, [r5, #0]
9000fdae:	2b00      	cmp	r3, #0
9000fdb0:	d137      	bne.n	9000fe22 <vTaskDelayUntil+0xb2>
9000fdb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fdb6:	f383 8811 	msr	BASEPRI, r3
9000fdba:	f3bf 8f6f 	isb	sy
9000fdbe:	f3bf 8f4f 	dsb	sy
9000fdc2:	e7fe      	b.n	9000fdc2 <vTaskDelayUntil+0x52>
9000fdc4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fdc8:	f383 8811 	msr	BASEPRI, r3
9000fdcc:	f3bf 8f6f 	isb	sy
9000fdd0:	f3bf 8f4f 	dsb	sy
		configASSERT( pxPreviousWakeTime );
9000fdd4:	e7fe      	b.n	9000fdd4 <vTaskDelayUntil+0x64>
9000fdd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fdda:	f383 8811 	msr	BASEPRI, r3
9000fdde:	f3bf 8f6f 	isb	sy
9000fde2:	f3bf 8f4f 	dsb	sy
		configASSERT( uxSchedulerSuspended == 0 );
9000fde6:	e7fe      	b.n	9000fde6 <vTaskDelayUntil+0x76>
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
9000fde8:	428a      	cmp	r2, r1
9000fdea:	d301      	bcc.n	9000fdf0 <vTaskDelayUntil+0x80>
9000fdec:	2e00      	cmp	r6, #0
9000fdee:	d0dc      	beq.n	9000fdaa <vTaskDelayUntil+0x3a>
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000fdf0:	6827      	ldr	r7, [r4, #0]
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fdf2:	4e1a      	ldr	r6, [pc, #104]	@ (9000fe5c <vTaskDelayUntil+0xec>)
9000fdf4:	1aba      	subs	r2, r7, r2
			*pxPreviousWakeTime = xTimeToWake;
9000fdf6:	6001      	str	r1, [r0, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fdf8:	6830      	ldr	r0, [r6, #0]
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000fdfa:	188c      	adds	r4, r1, r2
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fdfc:	3004      	adds	r0, #4
9000fdfe:	f7fe fa35 	bl	9000e26c <uxListRemove>

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000fe02:	6833      	ldr	r3, [r6, #0]

			if( xTimeToWake < xConstTickCount )
9000fe04:	42a7      	cmp	r7, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000fe06:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000fe08:	d81c      	bhi.n	9000fe44 <vTaskDelayUntil+0xd4>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fe0a:	4b15      	ldr	r3, [pc, #84]	@ (9000fe60 <vTaskDelayUntil+0xf0>)
9000fe0c:	6818      	ldr	r0, [r3, #0]
9000fe0e:	6831      	ldr	r1, [r6, #0]
9000fe10:	3104      	adds	r1, #4
9000fe12:	f7fe fa13 	bl	9000e23c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000fe16:	4b13      	ldr	r3, [pc, #76]	@ (9000fe64 <vTaskDelayUntil+0xf4>)
9000fe18:	681a      	ldr	r2, [r3, #0]
9000fe1a:	4294      	cmp	r4, r2
9000fe1c:	d2c6      	bcs.n	9000fdac <vTaskDelayUntil+0x3c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000fe1e:	601c      	str	r4, [r3, #0]
9000fe20:	e7c4      	b.n	9000fdac <vTaskDelayUntil+0x3c>
9000fe22:	f7ff fdcb 	bl	9000f9bc <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000fe26:	b948      	cbnz	r0, 9000fe3c <vTaskDelayUntil+0xcc>
			portYIELD_WITHIN_API();
9000fe28:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fe2c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fe30:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fe34:	f3bf 8f4f 	dsb	sy
9000fe38:	f3bf 8f6f 	isb	sy
	}
9000fe3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
9000fe3e:	428a      	cmp	r2, r1
9000fe40:	d3d6      	bcc.n	9000fdf0 <vTaskDelayUntil+0x80>
9000fe42:	e7b2      	b.n	9000fdaa <vTaskDelayUntil+0x3a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fe44:	4b08      	ldr	r3, [pc, #32]	@ (9000fe68 <vTaskDelayUntil+0xf8>)
9000fe46:	6818      	ldr	r0, [r3, #0]
9000fe48:	6831      	ldr	r1, [r6, #0]
9000fe4a:	3104      	adds	r1, #4
9000fe4c:	f7fe f9f6 	bl	9000e23c <vListInsert>
9000fe50:	e7ac      	b.n	9000fdac <vTaskDelayUntil+0x3c>
9000fe52:	bf00      	nop
9000fe54:	24022e88 	.word	0x24022e88
9000fe58:	24022ea8 	.word	0x24022ea8
9000fe5c:	24023380 	.word	0x24023380
9000fe60:	24022ef4 	.word	0x24022ef4
9000fe64:	24022e8c 	.word	0x24022e8c
9000fe68:	24022ef0 	.word	0x24022ef0

9000fe6c <vTaskDelay>:
	{
9000fe6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000fe6e:	b950      	cbnz	r0, 9000fe86 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000fe70:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fe74:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fe78:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fe7c:	f3bf 8f4f 	dsb	sy
9000fe80:	f3bf 8f6f 	isb	sy
	}
9000fe84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000fe86:	4d1e      	ldr	r5, [pc, #120]	@ (9000ff00 <vTaskDelay+0x94>)
9000fe88:	682b      	ldr	r3, [r5, #0]
9000fe8a:	b143      	cbz	r3, 9000fe9e <vTaskDelay+0x32>
9000fe8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe90:	f383 8811 	msr	BASEPRI, r3
9000fe94:	f3bf 8f6f 	isb	sy
9000fe98:	f3bf 8f4f 	dsb	sy
9000fe9c:	e7fe      	b.n	9000fe9c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000fe9e:	682b      	ldr	r3, [r5, #0]
9000fea0:	4604      	mov	r4, r0
9000fea2:	3301      	adds	r3, #1
9000fea4:	602b      	str	r3, [r5, #0]
const TickType_t xConstTickCount = xTickCount;
9000fea6:	4b17      	ldr	r3, [pc, #92]	@ (9000ff04 <vTaskDelay+0x98>)
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fea8:	4e17      	ldr	r6, [pc, #92]	@ (9000ff08 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000feaa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000feac:	6830      	ldr	r0, [r6, #0]
9000feae:	3004      	adds	r0, #4
9000feb0:	f7fe f9dc 	bl	9000e26c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000feb4:	19e4      	adds	r4, r4, r7
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000feb6:	6833      	ldr	r3, [r6, #0]
9000feb8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000feba:	d315      	bcc.n	9000fee8 <vTaskDelay+0x7c>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000febc:	4b13      	ldr	r3, [pc, #76]	@ (9000ff0c <vTaskDelay+0xa0>)
9000febe:	6818      	ldr	r0, [r3, #0]
9000fec0:	6831      	ldr	r1, [r6, #0]
9000fec2:	3104      	adds	r1, #4
9000fec4:	f7fe f9ba 	bl	9000e23c <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000fec8:	682b      	ldr	r3, [r5, #0]
9000feca:	b943      	cbnz	r3, 9000fede <vTaskDelay+0x72>
9000fecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fed0:	f383 8811 	msr	BASEPRI, r3
9000fed4:	f3bf 8f6f 	isb	sy
9000fed8:	f3bf 8f4f 	dsb	sy
9000fedc:	e7fe      	b.n	9000fedc <vTaskDelay+0x70>
9000fede:	f7ff fd6d 	bl	9000f9bc <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000fee2:	2800      	cmp	r0, #0
9000fee4:	d0c4      	beq.n	9000fe70 <vTaskDelay+0x4>
	}
9000fee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fee8:	4b09      	ldr	r3, [pc, #36]	@ (9000ff10 <vTaskDelay+0xa4>)
9000feea:	6818      	ldr	r0, [r3, #0]
9000feec:	6831      	ldr	r1, [r6, #0]
9000feee:	3104      	adds	r1, #4
9000fef0:	f7fe f9a4 	bl	9000e23c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000fef4:	4b07      	ldr	r3, [pc, #28]	@ (9000ff14 <vTaskDelay+0xa8>)
9000fef6:	681a      	ldr	r2, [r3, #0]
9000fef8:	4294      	cmp	r4, r2
9000fefa:	d2e5      	bcs.n	9000fec8 <vTaskDelay+0x5c>
					xNextTaskUnblockTime = xTimeToWake;
9000fefc:	601c      	str	r4, [r3, #0]
9000fefe:	e7e3      	b.n	9000fec8 <vTaskDelay+0x5c>
9000ff00:	24022e88 	.word	0x24022e88
9000ff04:	24022ea8 	.word	0x24022ea8
9000ff08:	24023380 	.word	0x24023380
9000ff0c:	24022ef0 	.word	0x24022ef0
9000ff10:	24022ef4 	.word	0x24022ef4
9000ff14:	24022e8c 	.word	0x24022e8c

9000ff18 <vTaskStartScheduler>:
{
9000ff18:	b570      	push	{r4, r5, r6, lr}
9000ff1a:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000ff1c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000ff1e:	4668      	mov	r0, sp
9000ff20:	aa02      	add	r2, sp, #8
9000ff22:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000ff24:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000ff28:	f7fe f82a 	bl	9000df80 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000ff2c:	9d00      	ldr	r5, [sp, #0]
9000ff2e:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000ff32:	b1b8      	cbz	r0, 9000ff64 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000ff34:	b16d      	cbz	r5, 9000ff52 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000ff36:	2260      	movs	r2, #96	@ 0x60
9000ff38:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000ff3a:	9a03      	ldr	r2, [sp, #12]
9000ff3c:	2a60      	cmp	r2, #96	@ 0x60
9000ff3e:	d01a      	beq.n	9000ff76 <vTaskStartScheduler+0x5e>
9000ff40:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff44:	f383 8811 	msr	BASEPRI, r3
9000ff48:	f3bf 8f6f 	isb	sy
9000ff4c:	f3bf 8f4f 	dsb	sy
9000ff50:	e7fe      	b.n	9000ff50 <vTaskStartScheduler+0x38>
9000ff52:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff56:	f383 8811 	msr	BASEPRI, r3
9000ff5a:	f3bf 8f6f 	isb	sy
9000ff5e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000ff62:	e7fe      	b.n	9000ff62 <vTaskStartScheduler+0x4a>
9000ff64:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff68:	f383 8811 	msr	BASEPRI, r3
9000ff6c:	f3bf 8f6f 	isb	sy
9000ff70:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000ff74:	e7fe      	b.n	9000ff74 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ff76:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ff78:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ff7a:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ff7c:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ff7e:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ff80:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000ff84:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ff86:	f01a fc1f 	bl	9002a7c8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ff8a:	1f33      	subs	r3, r6, #4
9000ff8c:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff8e:	492a      	ldr	r1, [pc, #168]	@ (90010038 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ff90:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ff92:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff94:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000ff98:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ff9a:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ff9e:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000ffa2:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000ffa4:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ffa8:	f7fe f936 	bl	9000e218 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ffac:	f105 0018 	add.w	r0, r5, #24
9000ffb0:	f7fe f932 	bl	9000e218 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ffb4:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffb6:	4622      	mov	r2, r4
9000ffb8:	4920      	ldr	r1, [pc, #128]	@ (9001003c <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000ffba:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffbc:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ffbe:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ffc0:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ffc2:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ffc4:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ffc6:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffca:	f7fe f9a1 	bl	9000e310 <pxPortInitialiseStack>
9000ffce:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000ffd0:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffd2:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ffd4:	f7ff fb76 	bl	9000f6c4 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000ffd8:	f000 fc86 	bl	900108e8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000ffdc:	2801      	cmp	r0, #1
9000ffde:	d00c      	beq.n	9000fffa <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000ffe0:	3001      	adds	r0, #1
9000ffe2:	d001      	beq.n	9000ffe8 <vTaskStartScheduler+0xd0>
}
9000ffe4:	b004      	add	sp, #16
9000ffe6:	bd70      	pop	{r4, r5, r6, pc}
9000ffe8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ffec:	f383 8811 	msr	BASEPRI, r3
9000fff0:	f3bf 8f6f 	isb	sy
9000fff4:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000fff8:	e7fe      	b.n	9000fff8 <vTaskStartScheduler+0xe0>
9000fffa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fffe:	f383 8811 	msr	BASEPRI, r3
90010002:	f3bf 8f6f 	isb	sy
90010006:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9001000a:	4b0d      	ldr	r3, [pc, #52]	@ (90010040 <vTaskStartScheduler+0x128>)
9001000c:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90010010:	490c      	ldr	r1, [pc, #48]	@ (90010044 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90010012:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010014:	4b0c      	ldr	r3, [pc, #48]	@ (90010048 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90010016:	4a0d      	ldr	r2, [pc, #52]	@ (9001004c <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90010018:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9001001a:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9001001c:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001001e:	b143      	cbz	r3, 90010032 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90010020:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010022:	b10b      	cbz	r3, 90010028 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010024:	2000      	movs	r0, #0
90010026:	4798      	blx	r3
}
90010028:	b004      	add	sp, #16
9001002a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9001002e:	f7fe ba2b 	b.w	9000e488 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90010032:	6813      	ldr	r3, [r2, #0]
90010034:	e7f4      	b.n	90010020 <vTaskStartScheduler+0x108>
90010036:	bf00      	nop
90010038:	454c4449 	.word	0x454c4449
9001003c:	9000f7d5 	.word	0x9000f7d5
90010040:	24022e8c 	.word	0x24022e8c
90010044:	24022ea0 	.word	0x24022ea0
90010048:	24022ea8 	.word	0x24022ea8
9001004c:	24023380 	.word	0x24023380

90010050 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90010050:	4a02      	ldr	r2, [pc, #8]	@ (9001005c <vTaskSuspendAll+0xc>)
90010052:	6813      	ldr	r3, [r2, #0]
90010054:	3301      	adds	r3, #1
90010056:	6013      	str	r3, [r2, #0]
}
90010058:	4770      	bx	lr
9001005a:	bf00      	nop
9001005c:	24022e88 	.word	0x24022e88

90010060 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90010060:	4b06      	ldr	r3, [pc, #24]	@ (9001007c <xTaskResumeAll+0x1c>)
90010062:	681b      	ldr	r3, [r3, #0]
90010064:	b943      	cbnz	r3, 90010078 <xTaskResumeAll+0x18>
90010066:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001006a:	f383 8811 	msr	BASEPRI, r3
9001006e:	f3bf 8f6f 	isb	sy
90010072:	f3bf 8f4f 	dsb	sy
90010076:	e7fe      	b.n	90010076 <xTaskResumeAll+0x16>
90010078:	f7ff bca0 	b.w	9000f9bc <xTaskResumeAll.part.0>
9001007c:	24022e88 	.word	0x24022e88

90010080 <xTaskGetTickCount>:
		xTicks = xTickCount;
90010080:	4b01      	ldr	r3, [pc, #4]	@ (90010088 <xTaskGetTickCount+0x8>)
90010082:	6818      	ldr	r0, [r3, #0]
}
90010084:	4770      	bx	lr
90010086:	bf00      	nop
90010088:	24022ea8 	.word	0x24022ea8

9001008c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001008c:	4b05      	ldr	r3, [pc, #20]	@ (900100a4 <xTaskIncrementTick+0x18>)
9001008e:	681b      	ldr	r3, [r3, #0]
90010090:	b90b      	cbnz	r3, 90010096 <xTaskIncrementTick+0xa>
90010092:	f7ff bbed 	b.w	9000f870 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010096:	4a04      	ldr	r2, [pc, #16]	@ (900100a8 <xTaskIncrementTick+0x1c>)
}
90010098:	2000      	movs	r0, #0
		++xPendedTicks;
9001009a:	6813      	ldr	r3, [r2, #0]
9001009c:	3301      	adds	r3, #1
9001009e:	6013      	str	r3, [r2, #0]
}
900100a0:	4770      	bx	lr
900100a2:	bf00      	nop
900100a4:	24022e88 	.word	0x24022e88
900100a8:	24022e9c 	.word	0x24022e9c

900100ac <vTaskSetApplicationTaskTag>:
	{
900100ac:	b538      	push	{r3, r4, r5, lr}
900100ae:	460d      	mov	r5, r1
		if( xTask == NULL )
900100b0:	b138      	cbz	r0, 900100c2 <vTaskSetApplicationTaskTag+0x16>
900100b2:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900100b4:	f7fe f956 	bl	9000e364 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900100b8:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900100ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900100be:	f7fe b973 	b.w	9000e3a8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900100c2:	4b04      	ldr	r3, [pc, #16]	@ (900100d4 <vTaskSetApplicationTaskTag+0x28>)
900100c4:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900100c6:	f7fe f94d 	bl	9000e364 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900100ca:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900100cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900100d0:	f7fe b96a 	b.w	9000e3a8 <vPortExitCritical>
900100d4:	24023380 	.word	0x24023380

900100d8 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900100d8:	4b27      	ldr	r3, [pc, #156]	@ (90010178 <vTaskSwitchContext+0xa0>)
900100da:	681b      	ldr	r3, [r3, #0]
900100dc:	b11b      	cbz	r3, 900100e6 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
900100de:	4b27      	ldr	r3, [pc, #156]	@ (9001017c <vTaskSwitchContext+0xa4>)
900100e0:	2201      	movs	r2, #1
900100e2:	601a      	str	r2, [r3, #0]
900100e4:	4770      	bx	lr
{
900100e6:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
900100e8:	4a24      	ldr	r2, [pc, #144]	@ (9001017c <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
900100ea:	4c25      	ldr	r4, [pc, #148]	@ (90010180 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
900100ec:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900100ee:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900100f0:	2b00      	cmp	r3, #0
900100f2:	d036      	beq.n	90010162 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
900100f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900100f6:	b10b      	cbz	r3, 900100fc <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900100f8:	2001      	movs	r0, #1
900100fa:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900100fc:	4d21      	ldr	r5, [pc, #132]	@ (90010184 <vTaskSwitchContext+0xac>)
900100fe:	4922      	ldr	r1, [pc, #136]	@ (90010188 <vTaskSwitchContext+0xb0>)
90010100:	682b      	ldr	r3, [r5, #0]
90010102:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010106:	0098      	lsls	r0, r3, #2
90010108:	0092      	lsls	r2, r2, #2
9001010a:	588a      	ldr	r2, [r1, r2]
9001010c:	b942      	cbnz	r2, 90010120 <vTaskSwitchContext+0x48>
9001010e:	b1fb      	cbz	r3, 90010150 <vTaskSwitchContext+0x78>
90010110:	3b01      	subs	r3, #1
90010112:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010116:	0098      	lsls	r0, r3, #2
90010118:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001011c:	2a00      	cmp	r2, #0
9001011e:	d0f6      	beq.n	9001010e <vTaskSwitchContext+0x36>
90010120:	4418      	add	r0, r3
90010122:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010126:	f8dc 1004 	ldr.w	r1, [ip, #4]
9001012a:	4662      	mov	r2, ip
9001012c:	6849      	ldr	r1, [r1, #4]
9001012e:	3208      	adds	r2, #8
90010130:	4291      	cmp	r1, r2
90010132:	f8cc 1004 	str.w	r1, [ip, #4]
90010136:	d01b      	beq.n	90010170 <vTaskSwitchContext+0x98>
90010138:	68ca      	ldr	r2, [r1, #12]
9001013a:	6022      	str	r2, [r4, #0]
9001013c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001013e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010140:	b1a3      	cbz	r3, 9001016c <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90010142:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010144:	b11b      	cbz	r3, 9001014e <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010146:	2000      	movs	r0, #0
}
90010148:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9001014c:	4718      	bx	r3
}
9001014e:	bd70      	pop	{r4, r5, r6, pc}
90010150:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010154:	f383 8811 	msr	BASEPRI, r3
90010158:	f3bf 8f6f 	isb	sy
9001015c:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010160:	e7fe      	b.n	90010160 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90010162:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90010164:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010166:	2b00      	cmp	r3, #0
90010168:	d1c6      	bne.n	900100f8 <vTaskSwitchContext+0x20>
9001016a:	e7c7      	b.n	900100fc <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9001016c:	6823      	ldr	r3, [r4, #0]
9001016e:	e7e8      	b.n	90010142 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010170:	6849      	ldr	r1, [r1, #4]
90010172:	f8cc 1004 	str.w	r1, [ip, #4]
90010176:	e7df      	b.n	90010138 <vTaskSwitchContext+0x60>
90010178:	24022e88 	.word	0x24022e88
9001017c:	24022e98 	.word	0x24022e98
90010180:	24023380 	.word	0x24023380
90010184:	24022ea4 	.word	0x24022ea4
90010188:	24022f20 	.word	0x24022f20

9001018c <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9001018c:	b1f0      	cbz	r0, 900101cc <vTaskPlaceOnEventList+0x40>
{
9001018e:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010190:	4d1a      	ldr	r5, [pc, #104]	@ (900101fc <vTaskPlaceOnEventList+0x70>)
90010192:	460c      	mov	r4, r1
90010194:	6829      	ldr	r1, [r5, #0]
90010196:	3118      	adds	r1, #24
90010198:	f7fe f850 	bl	9000e23c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9001019c:	4b18      	ldr	r3, [pc, #96]	@ (90010200 <vTaskPlaceOnEventList+0x74>)
9001019e:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900101a0:	6828      	ldr	r0, [r5, #0]
900101a2:	3004      	adds	r0, #4
900101a4:	f7fe f862 	bl	9000e26c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900101a8:	1c63      	adds	r3, r4, #1
900101aa:	d020      	beq.n	900101ee <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900101ac:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900101ae:	682b      	ldr	r3, [r5, #0]
900101b0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900101b2:	d214      	bcs.n	900101de <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900101b4:	4b13      	ldr	r3, [pc, #76]	@ (90010204 <vTaskPlaceOnEventList+0x78>)
900101b6:	6818      	ldr	r0, [r3, #0]
900101b8:	6829      	ldr	r1, [r5, #0]
900101ba:	3104      	adds	r1, #4
900101bc:	f7fe f83e 	bl	9000e23c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900101c0:	4b11      	ldr	r3, [pc, #68]	@ (90010208 <vTaskPlaceOnEventList+0x7c>)
900101c2:	681a      	ldr	r2, [r3, #0]
900101c4:	4294      	cmp	r4, r2
900101c6:	d200      	bcs.n	900101ca <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900101c8:	601c      	str	r4, [r3, #0]
}
900101ca:	bd70      	pop	{r4, r5, r6, pc}
900101cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101d0:	f383 8811 	msr	BASEPRI, r3
900101d4:	f3bf 8f6f 	isb	sy
900101d8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900101dc:	e7fe      	b.n	900101dc <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900101de:	4b0b      	ldr	r3, [pc, #44]	@ (9001020c <vTaskPlaceOnEventList+0x80>)
900101e0:	6818      	ldr	r0, [r3, #0]
900101e2:	6829      	ldr	r1, [r5, #0]
}
900101e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900101e8:	3104      	adds	r1, #4
900101ea:	f7fe b827 	b.w	9000e23c <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900101ee:	6829      	ldr	r1, [r5, #0]
900101f0:	4807      	ldr	r0, [pc, #28]	@ (90010210 <vTaskPlaceOnEventList+0x84>)
900101f2:	3104      	adds	r1, #4
}
900101f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900101f8:	f7fe b812 	b.w	9000e220 <vListInsertEnd>
900101fc:	24023380 	.word	0x24023380
90010200:	24022ea8 	.word	0x24022ea8
90010204:	24022ef4 	.word	0x24022ef4
90010208:	24022e8c 	.word	0x24022e8c
9001020c:	24022ef0 	.word	0x24022ef0
90010210:	24022eb0 	.word	0x24022eb0

90010214 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90010214:	b358      	cbz	r0, 9001026e <vTaskPlaceOnEventListRestricted+0x5a>
	{
90010216:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010218:	4e1d      	ldr	r6, [pc, #116]	@ (90010290 <vTaskPlaceOnEventListRestricted+0x7c>)
9001021a:	460c      	mov	r4, r1
9001021c:	4615      	mov	r5, r2
9001021e:	6831      	ldr	r1, [r6, #0]
90010220:	3118      	adds	r1, #24
90010222:	f7fd fffd 	bl	9000e220 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90010226:	b165      	cbz	r5, 90010242 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010228:	4b1a      	ldr	r3, [pc, #104]	@ (90010294 <vTaskPlaceOnEventListRestricted+0x80>)
9001022a:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001022c:	6830      	ldr	r0, [r6, #0]
9001022e:	3004      	adds	r0, #4
90010230:	f7fe f81c 	bl	9000e26c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010234:	6831      	ldr	r1, [r6, #0]
90010236:	4818      	ldr	r0, [pc, #96]	@ (90010298 <vTaskPlaceOnEventListRestricted+0x84>)
90010238:	3104      	adds	r1, #4
	}
9001023a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001023e:	f7fd bfef 	b.w	9000e220 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90010242:	4b14      	ldr	r3, [pc, #80]	@ (90010294 <vTaskPlaceOnEventListRestricted+0x80>)
90010244:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010246:	6830      	ldr	r0, [r6, #0]
90010248:	3004      	adds	r0, #4
9001024a:	f7fe f80f 	bl	9000e26c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001024e:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010250:	6833      	ldr	r3, [r6, #0]
90010252:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010254:	d214      	bcs.n	90010280 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010256:	4b11      	ldr	r3, [pc, #68]	@ (9001029c <vTaskPlaceOnEventListRestricted+0x88>)
90010258:	6818      	ldr	r0, [r3, #0]
9001025a:	6831      	ldr	r1, [r6, #0]
9001025c:	3104      	adds	r1, #4
9001025e:	f7fd ffed 	bl	9000e23c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010262:	4b0f      	ldr	r3, [pc, #60]	@ (900102a0 <vTaskPlaceOnEventListRestricted+0x8c>)
90010264:	681a      	ldr	r2, [r3, #0]
90010266:	4294      	cmp	r4, r2
90010268:	d200      	bcs.n	9001026c <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9001026a:	601c      	str	r4, [r3, #0]
	}
9001026c:	bd70      	pop	{r4, r5, r6, pc}
9001026e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010272:	f383 8811 	msr	BASEPRI, r3
90010276:	f3bf 8f6f 	isb	sy
9001027a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001027e:	e7fe      	b.n	9001027e <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010280:	4b08      	ldr	r3, [pc, #32]	@ (900102a4 <vTaskPlaceOnEventListRestricted+0x90>)
90010282:	6818      	ldr	r0, [r3, #0]
90010284:	6831      	ldr	r1, [r6, #0]
	}
90010286:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001028a:	3104      	adds	r1, #4
9001028c:	f7fd bfd6 	b.w	9000e23c <vListInsert>
90010290:	24023380 	.word	0x24023380
90010294:	24022ea8 	.word	0x24022ea8
90010298:	24022eb0 	.word	0x24022eb0
9001029c:	24022ef4 	.word	0x24022ef4
900102a0:	24022e8c 	.word	0x24022e8c
900102a4:	24022ef0 	.word	0x24022ef0

900102a8 <xTaskRemoveFromEventList>:
{
900102a8:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900102aa:	68c3      	ldr	r3, [r0, #12]
900102ac:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
900102ae:	b34c      	cbz	r4, 90010304 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900102b0:	f104 0518 	add.w	r5, r4, #24
900102b4:	4628      	mov	r0, r5
900102b6:	f7fd ffd9 	bl	9000e26c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900102ba:	4b18      	ldr	r3, [pc, #96]	@ (9001031c <xTaskRemoveFromEventList+0x74>)
900102bc:	681b      	ldr	r3, [r3, #0]
900102be:	b173      	cbz	r3, 900102de <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900102c0:	4629      	mov	r1, r5
900102c2:	4817      	ldr	r0, [pc, #92]	@ (90010320 <xTaskRemoveFromEventList+0x78>)
900102c4:	f7fd ffac 	bl	9000e220 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900102c8:	4b16      	ldr	r3, [pc, #88]	@ (90010324 <xTaskRemoveFromEventList+0x7c>)
900102ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900102cc:	681b      	ldr	r3, [r3, #0]
900102ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900102d0:	429a      	cmp	r2, r3
900102d2:	d920      	bls.n	90010316 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
900102d4:	2301      	movs	r3, #1
900102d6:	4a14      	ldr	r2, [pc, #80]	@ (90010328 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
900102d8:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900102da:	6013      	str	r3, [r2, #0]
}
900102dc:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900102de:	1d25      	adds	r5, r4, #4
900102e0:	4628      	mov	r0, r5
900102e2:	f7fd ffc3 	bl	9000e26c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900102e6:	4b11      	ldr	r3, [pc, #68]	@ (9001032c <xTaskRemoveFromEventList+0x84>)
900102e8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900102ea:	681a      	ldr	r2, [r3, #0]
900102ec:	4290      	cmp	r0, r2
900102ee:	d900      	bls.n	900102f2 <xTaskRemoveFromEventList+0x4a>
900102f0:	6018      	str	r0, [r3, #0]
900102f2:	4b0f      	ldr	r3, [pc, #60]	@ (90010330 <xTaskRemoveFromEventList+0x88>)
900102f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900102f8:	4629      	mov	r1, r5
900102fa:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900102fe:	f7fd ff8f 	bl	9000e220 <vListInsertEnd>
90010302:	e7e1      	b.n	900102c8 <xTaskRemoveFromEventList+0x20>
90010304:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010308:	f383 8811 	msr	BASEPRI, r3
9001030c:	f3bf 8f6f 	isb	sy
90010310:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90010314:	e7fe      	b.n	90010314 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
90010316:	2000      	movs	r0, #0
}
90010318:	bd38      	pop	{r3, r4, r5, pc}
9001031a:	bf00      	nop
9001031c:	24022e88 	.word	0x24022e88
90010320:	24022edc 	.word	0x24022edc
90010324:	24023380 	.word	0x24023380
90010328:	24022e98 	.word	0x24022e98
9001032c:	24022ea4 	.word	0x24022ea4
90010330:	24022f20 	.word	0x24022f20

90010334 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010334:	4a03      	ldr	r2, [pc, #12]	@ (90010344 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90010336:	4b04      	ldr	r3, [pc, #16]	@ (90010348 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010338:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001033a:	681b      	ldr	r3, [r3, #0]
9001033c:	e9c0 2300 	strd	r2, r3, [r0]
}
90010340:	4770      	bx	lr
90010342:	bf00      	nop
90010344:	24022e94 	.word	0x24022e94
90010348:	24022ea8 	.word	0x24022ea8

9001034c <xTaskCheckForTimeOut>:
{
9001034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9001034e:	b308      	cbz	r0, 90010394 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90010350:	460d      	mov	r5, r1
90010352:	b1b1      	cbz	r1, 90010382 <xTaskCheckForTimeOut+0x36>
90010354:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90010356:	f7fe f805 	bl	9000e364 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9001035a:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9001035c:	4a1a      	ldr	r2, [pc, #104]	@ (900103c8 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9001035e:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010360:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90010362:	d02c      	beq.n	900103be <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010364:	f8df c064 	ldr.w	ip, [pc, #100]	@ 900103cc <xTaskCheckForTimeOut+0x80>
90010368:	6826      	ldr	r6, [r4, #0]
9001036a:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9001036e:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010370:	42be      	cmp	r6, r7
90010372:	d018      	beq.n	900103a6 <xTaskCheckForTimeOut+0x5a>
90010374:	4288      	cmp	r0, r1
90010376:	d816      	bhi.n	900103a6 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90010378:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9001037a:	f7fe f815 	bl	9000e3a8 <vPortExitCritical>
}
9001037e:	4620      	mov	r0, r4
90010380:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90010382:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010386:	f383 8811 	msr	BASEPRI, r3
9001038a:	f3bf 8f6f 	isb	sy
9001038e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90010392:	e7fe      	b.n	90010392 <xTaskCheckForTimeOut+0x46>
90010394:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010398:	f383 8811 	msr	BASEPRI, r3
9001039c:	f3bf 8f6f 	isb	sy
900103a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900103a4:	e7fe      	b.n	900103a4 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900103a6:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900103aa:	4573      	cmp	r3, lr
900103ac:	d909      	bls.n	900103c2 <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
900103ae:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900103b0:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900103b4:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900103b6:	4403      	add	r3, r0
900103b8:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900103ba:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
900103be:	2400      	movs	r4, #0
900103c0:	e7db      	b.n	9001037a <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
900103c2:	2300      	movs	r3, #0
900103c4:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900103c6:	e7d7      	b.n	90010378 <xTaskCheckForTimeOut+0x2c>
900103c8:	24022ea8 	.word	0x24022ea8
900103cc:	24022e94 	.word	0x24022e94

900103d0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900103d0:	4b01      	ldr	r3, [pc, #4]	@ (900103d8 <vTaskMissedYield+0x8>)
900103d2:	2201      	movs	r2, #1
900103d4:	601a      	str	r2, [r3, #0]
}
900103d6:	4770      	bx	lr
900103d8:	24022e98 	.word	0x24022e98

900103dc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900103dc:	4b05      	ldr	r3, [pc, #20]	@ (900103f4 <xTaskGetSchedulerState+0x18>)
900103de:	681b      	ldr	r3, [r3, #0]
900103e0:	b133      	cbz	r3, 900103f0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900103e2:	4b05      	ldr	r3, [pc, #20]	@ (900103f8 <xTaskGetSchedulerState+0x1c>)
900103e4:	6818      	ldr	r0, [r3, #0]
900103e6:	fab0 f080 	clz	r0, r0
900103ea:	0940      	lsrs	r0, r0, #5
900103ec:	0040      	lsls	r0, r0, #1
900103ee:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900103f0:	2001      	movs	r0, #1
	}
900103f2:	4770      	bx	lr
900103f4:	24022ea0 	.word	0x24022ea0
900103f8:	24022e88 	.word	0x24022e88

900103fc <xTaskPriorityInherit>:
	{
900103fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
900103fe:	4604      	mov	r4, r0
90010400:	b1c8      	cbz	r0, 90010436 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90010402:	4d1b      	ldr	r5, [pc, #108]	@ (90010470 <xTaskPriorityInherit+0x74>)
90010404:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90010406:	682a      	ldr	r2, [r5, #0]
90010408:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9001040a:	4293      	cmp	r3, r2
9001040c:	d214      	bcs.n	90010438 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001040e:	6982      	ldr	r2, [r0, #24]
90010410:	2a00      	cmp	r2, #0
90010412:	db04      	blt.n	9001041e <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010414:	682a      	ldr	r2, [r5, #0]
90010416:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010418:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9001041c:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9001041e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010422:	4e14      	ldr	r6, [pc, #80]	@ (90010474 <xTaskPriorityInherit+0x78>)
90010424:	6962      	ldr	r2, [r4, #20]
90010426:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001042a:	429a      	cmp	r2, r3
9001042c:	d00c      	beq.n	90010448 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001042e:	682b      	ldr	r3, [r5, #0]
90010430:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010432:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
90010434:	2001      	movs	r0, #1
	}
90010436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010438:	682b      	ldr	r3, [r5, #0]
9001043a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9001043c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001043e:	4298      	cmp	r0, r3
90010440:	bf2c      	ite	cs
90010442:	2000      	movcs	r0, #0
90010444:	2001      	movcc	r0, #1
	}
90010446:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010448:	1d27      	adds	r7, r4, #4
9001044a:	4638      	mov	r0, r7
9001044c:	f7fd ff0e 	bl	9000e26c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010450:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010452:	4b09      	ldr	r3, [pc, #36]	@ (90010478 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010454:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010456:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010458:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001045a:	4290      	cmp	r0, r2
9001045c:	d900      	bls.n	90010460 <xTaskPriorityInherit+0x64>
9001045e:	6018      	str	r0, [r3, #0]
90010460:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010464:	4639      	mov	r1, r7
90010466:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001046a:	f7fd fed9 	bl	9000e220 <vListInsertEnd>
9001046e:	e7e1      	b.n	90010434 <xTaskPriorityInherit+0x38>
90010470:	24023380 	.word	0x24023380
90010474:	24022f20 	.word	0x24022f20
90010478:	24022ea4 	.word	0x24022ea4

9001047c <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9001047c:	b308      	cbz	r0, 900104c2 <xTaskPriorityDisinherit+0x46>
	{
9001047e:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90010480:	4b1d      	ldr	r3, [pc, #116]	@ (900104f8 <xTaskPriorityDisinherit+0x7c>)
90010482:	681c      	ldr	r4, [r3, #0]
90010484:	4284      	cmp	r4, r0
90010486:	d008      	beq.n	9001049a <xTaskPriorityDisinherit+0x1e>
90010488:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001048c:	f383 8811 	msr	BASEPRI, r3
90010490:	f3bf 8f6f 	isb	sy
90010494:	f3bf 8f4f 	dsb	sy
90010498:	e7fe      	b.n	90010498 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9001049a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9001049c:	b143      	cbz	r3, 900104b0 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9001049e:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
900104a0:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900104a2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
900104a4:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900104a6:	4291      	cmp	r1, r2
900104a8:	d000      	beq.n	900104ac <xTaskPriorityDisinherit+0x30>
900104aa:	b163      	cbz	r3, 900104c6 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
900104ac:	2000      	movs	r0, #0
	}
900104ae:	bd38      	pop	{r3, r4, r5, pc}
900104b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104b4:	f383 8811 	msr	BASEPRI, r3
900104b8:	f3bf 8f6f 	isb	sy
900104bc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900104c0:	e7fe      	b.n	900104c0 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
900104c2:	2000      	movs	r0, #0
	}
900104c4:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900104c6:	1d25      	adds	r5, r4, #4
900104c8:	4628      	mov	r0, r5
900104ca:	f7fd fecf 	bl	9000e26c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900104ce:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
900104d0:	4b0a      	ldr	r3, [pc, #40]	@ (900104fc <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900104d2:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900104d6:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900104d8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900104da:	681a      	ldr	r2, [r3, #0]
900104dc:	4290      	cmp	r0, r2
900104de:	d900      	bls.n	900104e2 <xTaskPriorityDisinherit+0x66>
900104e0:	6018      	str	r0, [r3, #0]
900104e2:	4b07      	ldr	r3, [pc, #28]	@ (90010500 <xTaskPriorityDisinherit+0x84>)
900104e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900104e8:	4629      	mov	r1, r5
900104ea:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900104ee:	f7fd fe97 	bl	9000e220 <vListInsertEnd>
					xReturn = pdTRUE;
900104f2:	2001      	movs	r0, #1
	}
900104f4:	bd38      	pop	{r3, r4, r5, pc}
900104f6:	bf00      	nop
900104f8:	24023380 	.word	0x24023380
900104fc:	24022ea4 	.word	0x24022ea4
90010500:	24022f20 	.word	0x24022f20

90010504 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010504:	2800      	cmp	r0, #0
90010506:	d03c      	beq.n	90010582 <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90010508:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9001050a:	b570      	push	{r4, r5, r6, lr}
9001050c:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9001050e:	b14b      	cbz	r3, 90010524 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010510:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90010512:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90010514:	4281      	cmp	r1, r0
90010516:	bf38      	it	cc
90010518:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9001051a:	2b01      	cmp	r3, #1
9001051c:	d101      	bne.n	90010522 <vTaskPriorityDisinheritAfterTimeout+0x1e>
9001051e:	428a      	cmp	r2, r1
90010520:	d109      	bne.n	90010536 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90010522:	bd70      	pop	{r4, r5, r6, pc}
90010524:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010528:	f383 8811 	msr	BASEPRI, r3
9001052c:	f3bf 8f6f 	isb	sy
90010530:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010534:	e7fe      	b.n	90010534 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90010536:	4b18      	ldr	r3, [pc, #96]	@ (90010598 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90010538:	681b      	ldr	r3, [r3, #0]
9001053a:	42a3      	cmp	r3, r4
9001053c:	d022      	beq.n	90010584 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001053e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010540:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010542:	2b00      	cmp	r3, #0
90010544:	db02      	blt.n	9001054c <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010546:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9001054a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001054c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010550:	4d12      	ldr	r5, [pc, #72]	@ (9001059c <vTaskPriorityDisinheritAfterTimeout+0x98>)
90010552:	6961      	ldr	r1, [r4, #20]
90010554:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010558:	4299      	cmp	r1, r3
9001055a:	d1e2      	bne.n	90010522 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001055c:	1d26      	adds	r6, r4, #4
9001055e:	4630      	mov	r0, r6
90010560:	f7fd fe84 	bl	9000e26c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010564:	4b0e      	ldr	r3, [pc, #56]	@ (900105a0 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90010566:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010568:	681a      	ldr	r2, [r3, #0]
9001056a:	4290      	cmp	r0, r2
9001056c:	d900      	bls.n	90010570 <vTaskPriorityDisinheritAfterTimeout+0x6c>
9001056e:	6018      	str	r0, [r3, #0]
90010570:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010574:	4631      	mov	r1, r6
90010576:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001057a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9001057e:	f7fd be4f 	b.w	9000e220 <vListInsertEnd>
90010582:	4770      	bx	lr
90010584:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010588:	f383 8811 	msr	BASEPRI, r3
9001058c:	f3bf 8f6f 	isb	sy
90010590:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90010594:	e7fe      	b.n	90010594 <vTaskPriorityDisinheritAfterTimeout+0x90>
90010596:	bf00      	nop
90010598:	24023380 	.word	0x24023380
9001059c:	24022f20 	.word	0x24022f20
900105a0:	24022ea4 	.word	0x24022ea4

900105a4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900105a4:	4b04      	ldr	r3, [pc, #16]	@ (900105b8 <pvTaskIncrementMutexHeldCount+0x14>)
900105a6:	681a      	ldr	r2, [r3, #0]
900105a8:	b11a      	cbz	r2, 900105b2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900105aa:	6819      	ldr	r1, [r3, #0]
900105ac:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
900105ae:	3201      	adds	r2, #1
900105b0:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
900105b2:	6818      	ldr	r0, [r3, #0]
	}
900105b4:	4770      	bx	lr
900105b6:	bf00      	nop
900105b8:	24023380 	.word	0x24023380

900105bc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900105bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900105c0:	4e21      	ldr	r6, [pc, #132]	@ (90010648 <prvSwitchTimerLists+0x8c>)
900105c2:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900105c4:	e00d      	b.n	900105e2 <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900105c6:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900105c8:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900105ca:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900105cc:	1d25      	adds	r5, r4, #4
900105ce:	4628      	mov	r0, r5
900105d0:	f7fd fe4c 	bl	9000e26c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900105d4:	6a23      	ldr	r3, [r4, #32]
900105d6:	4620      	mov	r0, r4
900105d8:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900105da:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
900105de:	075b      	lsls	r3, r3, #29
900105e0:	d40a      	bmi.n	900105f8 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900105e2:	6833      	ldr	r3, [r6, #0]
900105e4:	681a      	ldr	r2, [r3, #0]
900105e6:	2a00      	cmp	r2, #0
900105e8:	d1ed      	bne.n	900105c6 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
900105ea:	4a18      	ldr	r2, [pc, #96]	@ (9001064c <prvSwitchTimerLists+0x90>)
900105ec:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
900105ee:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
900105f0:	6031      	str	r1, [r6, #0]
}
900105f2:	b004      	add	sp, #16
900105f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900105f8:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900105fa:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
900105fc:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90010650 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010600:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90010602:	429f      	cmp	r7, r3
90010604:	d205      	bcs.n	90010612 <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010606:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010608:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001060a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001060c:	f7fd fe16 	bl	9000e23c <vListInsert>
90010610:	e7e7      	b.n	900105e2 <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90010612:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90010616:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90010618:	b16b      	cbz	r3, 90010636 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9001061a:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9001061c:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010620:	f7ff fedc 	bl	900103dc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010624:	462b      	mov	r3, r5
90010626:	462a      	mov	r2, r5
90010628:	4669      	mov	r1, sp
9001062a:	f8d8 0000 	ldr.w	r0, [r8]
9001062e:	f7fe f9cb 	bl	9000e9c8 <xQueueGenericSend>
				configASSERT( xResult );
90010632:	2800      	cmp	r0, #0
90010634:	d1d5      	bne.n	900105e2 <prvSwitchTimerLists+0x26>
90010636:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001063a:	f383 8811 	msr	BASEPRI, r3
9001063e:	f3bf 8f6f 	isb	sy
90010642:	f3bf 8f4f 	dsb	sy
90010646:	e7fe      	b.n	90010646 <prvSwitchTimerLists+0x8a>
90010648:	24023484 	.word	0x24023484
9001064c:	24023480 	.word	0x24023480
90010650:	2402347c 	.word	0x2402347c

90010654 <prvTimerTask>:
{
90010654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010658:	4e9f      	ldr	r6, [pc, #636]	@ (900108d8 <prvTimerTask+0x284>)
9001065a:	b089      	sub	sp, #36	@ 0x24
9001065c:	4d9f      	ldr	r5, [pc, #636]	@ (900108dc <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9001065e:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
90010662:	4c9f      	ldr	r4, [pc, #636]	@ (900108e0 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90010664:	6833      	ldr	r3, [r6, #0]
90010666:	681f      	ldr	r7, [r3, #0]
90010668:	2f00      	cmp	r7, #0
9001066a:	f000 80b2 	beq.w	900107d2 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001066e:	68db      	ldr	r3, [r3, #12]
90010670:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
90010672:	f7ff fced 	bl	90010050 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010676:	f7ff fd03 	bl	90010080 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9001067a:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001067c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9001067e:	4298      	cmp	r0, r3
90010680:	f0c0 80af 	bcc.w	900107e2 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010684:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90010686:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010688:	f200 80d0 	bhi.w	9001082c <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9001068c:	f7ff fce8 	bl	90010060 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010690:	6833      	ldr	r3, [r6, #0]
90010692:	68db      	ldr	r3, [r3, #12]
90010694:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010698:	f10b 0804 	add.w	r8, fp, #4
9001069c:	4640      	mov	r0, r8
9001069e:	f7fd fde5 	bl	9000e26c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900106a2:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
900106a6:	0758      	lsls	r0, r3, #29
900106a8:	f100 80d0 	bmi.w	9001084c <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900106ac:	f023 0301 	bic.w	r3, r3, #1
900106b0:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900106b4:	f8db 3020 	ldr.w	r3, [fp, #32]
900106b8:	4658      	mov	r0, fp
900106ba:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900106bc:	2200      	movs	r2, #0
900106be:	4669      	mov	r1, sp
900106c0:	6820      	ldr	r0, [r4, #0]
900106c2:	f7fe fbbf 	bl	9000ee44 <xQueueReceive>
900106c6:	2800      	cmp	r0, #0
900106c8:	d0cc      	beq.n	90010664 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900106ca:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900106cc:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900106ce:	2b00      	cmp	r3, #0
900106d0:	db77      	blt.n	900107c2 <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900106d2:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900106d4:	697b      	ldr	r3, [r7, #20]
900106d6:	b113      	cbz	r3, 900106de <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900106d8:	1d38      	adds	r0, r7, #4
900106da:	f7fd fdc7 	bl	9000e26c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900106de:	f7ff fccf 	bl	90010080 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900106e2:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900106e4:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
900106e6:	4298      	cmp	r0, r3
900106e8:	f0c0 8082 	bcc.w	900107f0 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900106ec:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900106ee:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
900106f2:	2b09      	cmp	r3, #9
900106f4:	d8e2      	bhi.n	900106bc <prvTimerTask+0x68>
900106f6:	e8df f003 	tbb	[pc, r3]
900106fa:	0505      	.short	0x0505
900106fc:	5b3e5405 	.word	0x5b3e5405
90010700:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010704:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010708:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001070a:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001070e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010710:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010714:	69ba      	ldr	r2, [r7, #24]
90010716:	1899      	adds	r1, r3, r2
90010718:	bf2c      	ite	cs
9001071a:	2001      	movcs	r0, #1
9001071c:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9001071e:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010720:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010722:	f200 8085 	bhi.w	90010830 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010726:	ebab 0303 	sub.w	r3, fp, r3
9001072a:	429a      	cmp	r2, r3
9001072c:	f200 80be 	bhi.w	900108ac <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010730:	6a3b      	ldr	r3, [r7, #32]
90010732:	4638      	mov	r0, r7
90010734:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010736:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9001073a:	0759      	lsls	r1, r3, #29
9001073c:	d5be      	bpl.n	900106bc <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9001073e:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010740:	9b01      	ldr	r3, [sp, #4]
90010742:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90010744:	b171      	cbz	r1, 90010764 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010746:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010748:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9001074c:	2700      	movs	r7, #0
9001074e:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010750:	f7ff fe44 	bl	900103dc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010754:	463b      	mov	r3, r7
90010756:	463a      	mov	r2, r7
90010758:	a904      	add	r1, sp, #16
9001075a:	6820      	ldr	r0, [r4, #0]
9001075c:	f7fe f934 	bl	9000e9c8 <xQueueGenericSend>
							configASSERT( xResult );
90010760:	2800      	cmp	r0, #0
90010762:	d1ab      	bne.n	900106bc <prvTimerTask+0x68>
90010764:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010768:	f383 8811 	msr	BASEPRI, r3
9001076c:	f3bf 8f6f 	isb	sy
90010770:	f3bf 8f4f 	dsb	sy
90010774:	e7fe      	b.n	90010774 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010776:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9001077a:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001077c:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010780:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010782:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010786:	2b00      	cmp	r3, #0
90010788:	f000 809c 	beq.w	900108c4 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9001078c:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001078e:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010790:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90010792:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010794:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010796:	d855      	bhi.n	90010844 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010798:	4b52      	ldr	r3, [pc, #328]	@ (900108e4 <prvTimerTask+0x290>)
9001079a:	6818      	ldr	r0, [r3, #0]
9001079c:	f7fd fd4e 	bl	9000e23c <vListInsert>
900107a0:	e78c      	b.n	900106bc <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900107a2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900107a6:	f023 0301 	bic.w	r3, r3, #1
900107aa:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
900107ae:	e785      	b.n	900106bc <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900107b0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900107b4:	079a      	lsls	r2, r3, #30
900107b6:	d570      	bpl.n	9001089a <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900107b8:	f023 0301 	bic.w	r3, r3, #1
900107bc:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
900107c0:	e77c      	b.n	900106bc <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900107c2:	9b01      	ldr	r3, [sp, #4]
900107c4:	9903      	ldr	r1, [sp, #12]
900107c6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900107c8:	9b00      	ldr	r3, [sp, #0]
900107ca:	2b00      	cmp	r3, #0
900107cc:	f6ff af76 	blt.w	900106bc <prvTimerTask+0x68>
900107d0:	e77f      	b.n	900106d2 <prvTimerTask+0x7e>
	vTaskSuspendAll();
900107d2:	f7ff fc3d 	bl	90010050 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900107d6:	f7ff fc53 	bl	90010080 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900107da:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900107dc:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900107de:	4298      	cmp	r0, r3
900107e0:	d209      	bcs.n	900107f6 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
900107e2:	f7ff feeb 	bl	900105bc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
900107e6:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900107ea:	f7ff fc39 	bl	90010060 <xTaskResumeAll>
900107ee:	e765      	b.n	900106bc <prvTimerTask+0x68>
		prvSwitchTimerLists();
900107f0:	f7ff fee4 	bl	900105bc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
900107f4:	e77a      	b.n	900106ec <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900107f6:	4b3b      	ldr	r3, [pc, #236]	@ (900108e4 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
900107f8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900107fc:	681b      	ldr	r3, [r3, #0]
900107fe:	681a      	ldr	r2, [r3, #0]
90010800:	fab2 f282 	clz	r2, r2
90010804:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010806:	eba7 010a 	sub.w	r1, r7, sl
9001080a:	6820      	ldr	r0, [r4, #0]
9001080c:	f7fe fef6 	bl	9000f5fc <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010810:	f7ff fc26 	bl	90010060 <xTaskResumeAll>
90010814:	2800      	cmp	r0, #0
90010816:	f47f af51 	bne.w	900106bc <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9001081a:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9001081e:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90010822:	f3bf 8f4f 	dsb	sy
90010826:	f3bf 8f6f 	isb	sy
9001082a:	e747      	b.n	900106bc <prvTimerTask+0x68>
9001082c:	2200      	movs	r2, #0
9001082e:	e7ea      	b.n	90010806 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010830:	455b      	cmp	r3, fp
90010832:	d902      	bls.n	9001083a <prvTimerTask+0x1e6>
90010834:	2800      	cmp	r0, #0
90010836:	f43f af7b 	beq.w	90010730 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001083a:	1d39      	adds	r1, r7, #4
9001083c:	6830      	ldr	r0, [r6, #0]
9001083e:	f7fd fcfd 	bl	9000e23c <vListInsert>
	return xProcessTimerNow;
90010842:	e73b      	b.n	900106bc <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010844:	6830      	ldr	r0, [r6, #0]
90010846:	f7fd fcf9 	bl	9000e23c <vListInsert>
9001084a:	e737      	b.n	900106bc <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9001084c:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010850:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010854:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
90010856:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010858:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9001085c:	d321      	bcc.n	900108a2 <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001085e:	ebaa 0a07 	sub.w	sl, sl, r7
90010862:	4550      	cmp	r0, sl
90010864:	d828      	bhi.n	900108b8 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90010866:	6823      	ldr	r3, [r4, #0]
90010868:	b173      	cbz	r3, 90010888 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9001086a:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9001086e:	2700      	movs	r7, #0
90010870:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010872:	f7ff fdb3 	bl	900103dc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010876:	463b      	mov	r3, r7
90010878:	463a      	mov	r2, r7
9001087a:	a904      	add	r1, sp, #16
9001087c:	6820      	ldr	r0, [r4, #0]
9001087e:	f7fe f8a3 	bl	9000e9c8 <xQueueGenericSend>
			configASSERT( xResult );
90010882:	2800      	cmp	r0, #0
90010884:	f47f af16 	bne.w	900106b4 <prvTimerTask+0x60>
90010888:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001088c:	f383 8811 	msr	BASEPRI, r3
90010890:	f3bf 8f6f 	isb	sy
90010894:	f3bf 8f4f 	dsb	sy
90010898:	e7fe      	b.n	90010898 <prvTimerTask+0x244>
							vPortFree( pxTimer );
9001089a:	4638      	mov	r0, r7
9001089c:	f7fd fc4a 	bl	9000e134 <vPortFree>
900108a0:	e70c      	b.n	900106bc <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900108a2:	4641      	mov	r1, r8
900108a4:	6830      	ldr	r0, [r6, #0]
900108a6:	f7fd fcc9 	bl	9000e23c <vListInsert>
	return xProcessTimerNow;
900108aa:	e703      	b.n	900106b4 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900108ac:	4b0d      	ldr	r3, [pc, #52]	@ (900108e4 <prvTimerTask+0x290>)
900108ae:	1d39      	adds	r1, r7, #4
900108b0:	6818      	ldr	r0, [r3, #0]
900108b2:	f7fd fcc3 	bl	9000e23c <vListInsert>
	return xProcessTimerNow;
900108b6:	e701      	b.n	900106bc <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900108b8:	4b0a      	ldr	r3, [pc, #40]	@ (900108e4 <prvTimerTask+0x290>)
900108ba:	4641      	mov	r1, r8
900108bc:	6818      	ldr	r0, [r3, #0]
900108be:	f7fd fcbd 	bl	9000e23c <vListInsert>
	return xProcessTimerNow;
900108c2:	e6f7      	b.n	900106b4 <prvTimerTask+0x60>
900108c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108c8:	f383 8811 	msr	BASEPRI, r3
900108cc:	f3bf 8f6f 	isb	sy
900108d0:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900108d4:	e7fe      	b.n	900108d4 <prvTimerTask+0x280>
900108d6:	bf00      	nop
900108d8:	24023484 	.word	0x24023484
900108dc:	24023474 	.word	0x24023474
900108e0:	2402347c 	.word	0x2402347c
900108e4:	24023480 	.word	0x24023480

900108e8 <xTimerCreateTimerTask>:
{
900108e8:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
900108ea:	4c23      	ldr	r4, [pc, #140]	@ (90010978 <xTimerCreateTimerTask+0x90>)
{
900108ec:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
900108ee:	f7fd fd39 	bl	9000e364 <vPortEnterCritical>
		if( xTimerQueue == NULL )
900108f2:	6825      	ldr	r5, [r4, #0]
900108f4:	b335      	cbz	r5, 90010944 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
900108f6:	f7fd fd57 	bl	9000e3a8 <vPortExitCritical>
	if( xTimerQueue != NULL )
900108fa:	6823      	ldr	r3, [r4, #0]
900108fc:	b1cb      	cbz	r3, 90010932 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
900108fe:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010900:	aa07      	add	r2, sp, #28
90010902:	a906      	add	r1, sp, #24
90010904:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010906:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010908:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9001090c:	f7fd fb46 	bl	9000df9c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010910:	4623      	mov	r3, r4
90010912:	9a07      	ldr	r2, [sp, #28]
90010914:	9500      	str	r5, [sp, #0]
90010916:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9001091a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001091e:	4917      	ldr	r1, [pc, #92]	@ (9001097c <xTimerCreateTimerTask+0x94>)
90010920:	4817      	ldr	r0, [pc, #92]	@ (90010980 <xTimerCreateTimerTask+0x98>)
90010922:	f7ff f8e9 	bl	9000faf8 <xTaskCreateStatic>
90010926:	4b17      	ldr	r3, [pc, #92]	@ (90010984 <xTimerCreateTimerTask+0x9c>)
90010928:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9001092a:	b110      	cbz	r0, 90010932 <xTimerCreateTimerTask+0x4a>
}
9001092c:	2001      	movs	r0, #1
9001092e:	b009      	add	sp, #36	@ 0x24
90010930:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010932:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010936:	f383 8811 	msr	BASEPRI, r3
9001093a:	f3bf 8f6f 	isb	sy
9001093e:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90010942:	e7fe      	b.n	90010942 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90010944:	4f10      	ldr	r7, [pc, #64]	@ (90010988 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90010946:	4e11      	ldr	r6, [pc, #68]	@ (9001098c <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90010948:	4638      	mov	r0, r7
9001094a:	f7fd fc59 	bl	9000e200 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9001094e:	4630      	mov	r0, r6
90010950:	f7fd fc56 	bl	9000e200 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90010954:	4a0e      	ldr	r2, [pc, #56]	@ (90010990 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010956:	9500      	str	r5, [sp, #0]
90010958:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9001095a:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001095c:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9001095e:	4a0d      	ldr	r2, [pc, #52]	@ (90010994 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010960:	4b0d      	ldr	r3, [pc, #52]	@ (90010998 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90010962:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010964:	4a0d      	ldr	r2, [pc, #52]	@ (9001099c <xTimerCreateTimerTask+0xb4>)
90010966:	f7fd fedb 	bl	9000e720 <xQueueGenericCreateStatic>
9001096a:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9001096c:	2800      	cmp	r0, #0
9001096e:	d0c2      	beq.n	900108f6 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90010970:	490b      	ldr	r1, [pc, #44]	@ (900109a0 <xTimerCreateTimerTask+0xb8>)
90010972:	f7fe fe1b 	bl	9000f5ac <vQueueAddToRegistry>
90010976:	e7be      	b.n	900108f6 <xTimerCreateTimerTask+0xe>
90010978:	2402347c 	.word	0x2402347c
9001097c:	9002e128 	.word	0x9002e128
90010980:	90010655 	.word	0x90010655
90010984:	24023478 	.word	0x24023478
90010988:	2402349c 	.word	0x2402349c
9001098c:	24023488 	.word	0x24023488
90010990:	24023484 	.word	0x24023484
90010994:	24023480 	.word	0x24023480
90010998:	24023384 	.word	0x24023384
9001099c:	240233d4 	.word	0x240233d4
900109a0:	9002e120 	.word	0x9002e120

900109a4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900109a4:	8880      	ldrh	r0, [r0, #4]
900109a6:	4770      	bx	lr

900109a8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900109a8:	b570      	push	{r4, r5, r6, lr}
900109aa:	6803      	ldr	r3, [r0, #0]
900109ac:	460c      	mov	r4, r1
900109ae:	2100      	movs	r1, #0
900109b0:	4605      	mov	r5, r0
900109b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900109b4:	4798      	blx	r3
900109b6:	4606      	mov	r6, r0
900109b8:	682b      	ldr	r3, [r5, #0]
900109ba:	4628      	mov	r0, r5
900109bc:	1ba4      	subs	r4, r4, r6
900109be:	6a1b      	ldr	r3, [r3, #32]
900109c0:	b2a4      	uxth	r4, r4
900109c2:	4798      	blx	r3
900109c4:	fbb4 f0f0 	udiv	r0, r4, r0
900109c8:	bd70      	pop	{r4, r5, r6, pc}

900109ca <_ZN8touchgfx17AbstractPartition5clearEv>:
900109ca:	2300      	movs	r3, #0
900109cc:	8083      	strh	r3, [r0, #4]
900109ce:	4770      	bx	lr

900109d0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
900109d0:	b510      	push	{r4, lr}
900109d2:	6803      	ldr	r3, [r0, #0]
900109d4:	4604      	mov	r4, r0
900109d6:	8881      	ldrh	r1, [r0, #4]
900109d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900109da:	4798      	blx	r3
900109dc:	88a3      	ldrh	r3, [r4, #4]
900109de:	3301      	adds	r3, #1
900109e0:	80a3      	strh	r3, [r4, #4]
900109e2:	bd10      	pop	{r4, pc}

900109e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
900109e4:	6803      	ldr	r3, [r0, #0]
900109e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900109e8:	4718      	bx	r3

900109ea <_ZN8touchgfx17AbstractPartitionD1Ev>:
900109ea:	4770      	bx	lr

900109ec <_ZN8touchgfx17AbstractPartitionC1Ev>:
900109ec:	4a02      	ldr	r2, [pc, #8]	@ (900109f8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
900109ee:	6002      	str	r2, [r0, #0]
900109f0:	2200      	movs	r2, #0
900109f2:	8082      	strh	r2, [r0, #4]
900109f4:	4770      	bx	lr
900109f6:	bf00      	nop
900109f8:	9002e138 	.word	0x9002e138

900109fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
900109fc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900109fe:	2000      	movs	r0, #0
90010a00:	b12b      	cbz	r3, 90010a0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010a02:	b920      	cbnz	r0, 90010a0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010a04:	1a5a      	subs	r2, r3, r1
90010a06:	699b      	ldr	r3, [r3, #24]
90010a08:	4250      	negs	r0, r2
90010a0a:	4150      	adcs	r0, r2
90010a0c:	e7f8      	b.n	90010a00 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90010a0e:	4770      	bx	lr

90010a10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010a10:	2300      	movs	r3, #0
90010a12:	6148      	str	r0, [r1, #20]
90010a14:	618b      	str	r3, [r1, #24]
90010a16:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010a18:	b913      	cbnz	r3, 90010a20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010a1a:	6281      	str	r1, [r0, #40]	@ 0x28
90010a1c:	4770      	bx	lr
90010a1e:	4613      	mov	r3, r2
90010a20:	699a      	ldr	r2, [r3, #24]
90010a22:	2a00      	cmp	r2, #0
90010a24:	d1fb      	bne.n	90010a1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010a26:	6199      	str	r1, [r3, #24]
90010a28:	4770      	bx	lr

90010a2a <_ZN8touchgfx9Container9removeAllEv>:
90010a2a:	2200      	movs	r2, #0
90010a2c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010a2e:	b123      	cbz	r3, 90010a3a <_ZN8touchgfx9Container9removeAllEv+0x10>
90010a30:	6999      	ldr	r1, [r3, #24]
90010a32:	6281      	str	r1, [r0, #40]	@ 0x28
90010a34:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010a38:	e7f8      	b.n	90010a2c <_ZN8touchgfx9Container9removeAllEv+0x2>
90010a3a:	4770      	bx	lr

90010a3c <_ZN8touchgfx9Container6unlinkEv>:
90010a3c:	2300      	movs	r3, #0
90010a3e:	6283      	str	r3, [r0, #40]	@ 0x28
90010a40:	4770      	bx	lr

90010a42 <_ZNK8touchgfx9Container12getSolidRectEv>:
90010a42:	2200      	movs	r2, #0
90010a44:	8002      	strh	r2, [r0, #0]
90010a46:	8042      	strh	r2, [r0, #2]
90010a48:	8082      	strh	r2, [r0, #4]
90010a4a:	80c2      	strh	r2, [r0, #6]
90010a4c:	4770      	bx	lr

90010a4e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90010a4e:	b570      	push	{r4, r5, r6, lr}
90010a50:	460d      	mov	r5, r1
90010a52:	4616      	mov	r6, r2
90010a54:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010a56:	b13c      	cbz	r4, 90010a68 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90010a58:	6823      	ldr	r3, [r4, #0]
90010a5a:	4620      	mov	r0, r4
90010a5c:	4632      	mov	r2, r6
90010a5e:	4629      	mov	r1, r5
90010a60:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010a62:	4798      	blx	r3
90010a64:	69a4      	ldr	r4, [r4, #24]
90010a66:	e7f6      	b.n	90010a56 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90010a68:	bd70      	pop	{r4, r5, r6, pc}

90010a6a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90010a6a:	b538      	push	{r3, r4, r5, lr}
90010a6c:	460d      	mov	r5, r1
90010a6e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010a70:	b134      	cbz	r4, 90010a80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90010a72:	682b      	ldr	r3, [r5, #0]
90010a74:	4621      	mov	r1, r4
90010a76:	4628      	mov	r0, r5
90010a78:	689b      	ldr	r3, [r3, #8]
90010a7a:	4798      	blx	r3
90010a7c:	69a4      	ldr	r4, [r4, #24]
90010a7e:	e7f7      	b.n	90010a70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90010a80:	bd38      	pop	{r3, r4, r5, pc}

90010a82 <_ZN8touchgfx9ContainerD1Ev>:
90010a82:	4770      	bx	lr

90010a84 <_ZN8touchgfx9ContainerD0Ev>:
90010a84:	b510      	push	{r4, lr}
90010a86:	4604      	mov	r4, r0
90010a88:	212c      	movs	r1, #44	@ 0x2c
90010a8a:	f019 f888 	bl	90029b9e <_ZdlPvj>
90010a8e:	4620      	mov	r0, r4
90010a90:	bd10      	pop	{r4, pc}

90010a92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90010a92:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010a94:	b19b      	cbz	r3, 90010abe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010a96:	428b      	cmp	r3, r1
90010a98:	d109      	bne.n	90010aae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010a9a:	699a      	ldr	r2, [r3, #24]
90010a9c:	2100      	movs	r1, #0
90010a9e:	6159      	str	r1, [r3, #20]
90010aa0:	6282      	str	r2, [r0, #40]	@ 0x28
90010aa2:	b902      	cbnz	r2, 90010aa6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010aa4:	4770      	bx	lr
90010aa6:	6199      	str	r1, [r3, #24]
90010aa8:	4770      	bx	lr
90010aaa:	4613      	mov	r3, r2
90010aac:	b13a      	cbz	r2, 90010abe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010aae:	699a      	ldr	r2, [r3, #24]
90010ab0:	428a      	cmp	r2, r1
90010ab2:	d1fa      	bne.n	90010aaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010ab4:	698a      	ldr	r2, [r1, #24]
90010ab6:	619a      	str	r2, [r3, #24]
90010ab8:	2300      	movs	r3, #0
90010aba:	e9c1 3305 	strd	r3, r3, [r1, #20]
90010abe:	4770      	bx	lr

90010ac0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010ac0:	b410      	push	{r4}
90010ac2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010ac4:	4604      	mov	r4, r0
90010ac6:	b92b      	cbnz	r3, 90010ad4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010ac8:	6803      	ldr	r3, [r0, #0]
90010aca:	4611      	mov	r1, r2
90010acc:	f85d 4b04 	ldr.w	r4, [sp], #4
90010ad0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90010ad2:	4718      	bx	r3
90010ad4:	b941      	cbnz	r1, 90010ae8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010ad6:	6193      	str	r3, [r2, #24]
90010ad8:	6282      	str	r2, [r0, #40]	@ 0x28
90010ada:	6154      	str	r4, [r2, #20]
90010adc:	f85d 4b04 	ldr.w	r4, [sp], #4
90010ae0:	4770      	bx	lr
90010ae2:	4603      	mov	r3, r0
90010ae4:	2800      	cmp	r0, #0
90010ae6:	d0f9      	beq.n	90010adc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010ae8:	4299      	cmp	r1, r3
90010aea:	6998      	ldr	r0, [r3, #24]
90010aec:	d1f9      	bne.n	90010ae2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90010aee:	6190      	str	r0, [r2, #24]
90010af0:	618a      	str	r2, [r1, #24]
90010af2:	e7f2      	b.n	90010ada <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010af4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010af8:	461f      	mov	r7, r3
90010afa:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90010afe:	460d      	mov	r5, r1
90010b00:	4616      	mov	r6, r2
90010b02:	b103      	cbz	r3, 90010b06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010b04:	6038      	str	r0, [r7, #0]
90010b06:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010b08:	b314      	cbz	r4, 90010b50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90010b0a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010b0e:	b1eb      	cbz	r3, 90010b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010b10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010b14:	428d      	cmp	r5, r1
90010b16:	db19      	blt.n	90010b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010b18:	b289      	uxth	r1, r1
90010b1a:	8923      	ldrh	r3, [r4, #8]
90010b1c:	440b      	add	r3, r1
90010b1e:	b21b      	sxth	r3, r3
90010b20:	429d      	cmp	r5, r3
90010b22:	da13      	bge.n	90010b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010b24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010b28:	4296      	cmp	r6, r2
90010b2a:	db0f      	blt.n	90010b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010b2c:	b292      	uxth	r2, r2
90010b2e:	8963      	ldrh	r3, [r4, #10]
90010b30:	4413      	add	r3, r2
90010b32:	b21b      	sxth	r3, r3
90010b34:	429e      	cmp	r6, r3
90010b36:	da09      	bge.n	90010b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010b38:	6823      	ldr	r3, [r4, #0]
90010b3a:	1ab2      	subs	r2, r6, r2
90010b3c:	1a69      	subs	r1, r5, r1
90010b3e:	4620      	mov	r0, r4
90010b40:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90010b44:	b212      	sxth	r2, r2
90010b46:	463b      	mov	r3, r7
90010b48:	b209      	sxth	r1, r1
90010b4a:	47c0      	blx	r8
90010b4c:	69a4      	ldr	r4, [r4, #24]
90010b4e:	e7db      	b.n	90010b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90010b50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010b54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90010b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010b58:	4c6d      	ldr	r4, [pc, #436]	@ (90010d10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90010b5a:	b0a1      	sub	sp, #132	@ 0x84
90010b5c:	4606      	mov	r6, r0
90010b5e:	6824      	ldr	r4, [r4, #0]
90010b60:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90010b62:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90010b66:	2400      	movs	r4, #0
90010b68:	9303      	str	r3, [sp, #12]
90010b6a:	802c      	strh	r4, [r5, #0]
90010b6c:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
90010b6e:	802c      	strh	r4, [r5, #0]
90010b70:	601c      	str	r4, [r3, #0]
90010b72:	e9cd 1201 	strd	r1, r2, [sp, #4]
90010b76:	f7ff ffbd 	bl	90010af4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010b7a:	f1b9 0f03 	cmp.w	r9, #3
90010b7e:	f340 80c1 	ble.w	90010d04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90010b82:	4631      	mov	r1, r6
90010b84:	a80c      	add	r0, sp, #48	@ 0x30
90010b86:	f007 fc77 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010b8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90010b8e:	9306      	str	r3, [sp, #24]
90010b90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90010b94:	9307      	str	r3, [sp, #28]
90010b96:	9b03      	ldr	r3, [sp, #12]
90010b98:	f8d3 a000 	ldr.w	sl, [r3]
90010b9c:	f1ba 0f00 	cmp.w	sl, #0
90010ba0:	f000 80b3 	beq.w	90010d0a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010ba4:	4651      	mov	r1, sl
90010ba6:	a810      	add	r0, sp, #64	@ 0x40
90010ba8:	f007 fc66 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010bac:	2002      	movs	r0, #2
90010bae:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90010bb2:	9b01      	ldr	r3, [sp, #4]
90010bb4:	9a06      	ldr	r2, [sp, #24]
90010bb6:	fb91 f1f0 	sdiv	r1, r1, r0
90010bba:	189d      	adds	r5, r3, r2
90010bbc:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90010bc0:	9a07      	ldr	r2, [sp, #28]
90010bc2:	4419      	add	r1, r3
90010bc4:	9b02      	ldr	r3, [sp, #8]
90010bc6:	4413      	add	r3, r2
90010bc8:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90010bcc:	1a6d      	subs	r5, r5, r1
90010bce:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90010bd2:	fb92 f2f0 	sdiv	r2, r2, r0
90010bd6:	440a      	add	r2, r1
90010bd8:	1a9b      	subs	r3, r3, r2
90010bda:	435b      	muls	r3, r3
90010bdc:	fb05 3505 	mla	r5, r5, r5, r3
90010be0:	4f4c      	ldr	r7, [pc, #304]	@ (90010d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010be2:	ac10      	add	r4, sp, #64	@ 0x40
90010be4:	f1b9 0f0c 	cmp.w	r9, #12
90010be8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010bea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010bec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010bee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010bf0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010bf2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010bf4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010bf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90010bfc:	f04f 0303 	mov.w	r3, #3
90010c00:	bfd8      	it	le
90010c02:	f109 32ff 	addle.w	r2, r9, #4294967295
90010c06:	f04f 0400 	mov.w	r4, #0
90010c0a:	f8cd 9000 	str.w	r9, [sp]
90010c0e:	bfcc      	ite	gt
90010c10:	4698      	movgt	r8, r3
90010c12:	fb92 f8f3 	sdivle	r8, r2, r3
90010c16:	1c63      	adds	r3, r4, #1
90010c18:	aa10      	add	r2, sp, #64	@ 0x40
90010c1a:	f004 0401 	and.w	r4, r4, #1
90010c1e:	f04f 0b00 	mov.w	fp, #0
90010c22:	9308      	str	r3, [sp, #32]
90010c24:	9b00      	ldr	r3, [sp, #0]
90010c26:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90010c2a:	fb93 f3f8 	sdiv	r3, r3, r8
90010c2e:	3404      	adds	r4, #4
90010c30:	b29b      	uxth	r3, r3
90010c32:	9304      	str	r3, [sp, #16]
90010c34:	9a04      	ldr	r2, [sp, #16]
90010c36:	f854 3c04 	ldr.w	r3, [r4, #-4]
90010c3a:	fb13 f302 	smulbb	r3, r3, r2
90010c3e:	9a01      	ldr	r2, [sp, #4]
90010c40:	b29b      	uxth	r3, r3
90010c42:	1899      	adds	r1, r3, r2
90010c44:	9305      	str	r3, [sp, #20]
90010c46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010c4a:	b209      	sxth	r1, r1
90010c4c:	4299      	cmp	r1, r3
90010c4e:	db4d      	blt.n	90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c50:	8932      	ldrh	r2, [r6, #8]
90010c52:	4413      	add	r3, r2
90010c54:	b21b      	sxth	r3, r3
90010c56:	4299      	cmp	r1, r3
90010c58:	da48      	bge.n	90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c5a:	9b04      	ldr	r3, [sp, #16]
90010c5c:	6827      	ldr	r7, [r4, #0]
90010c5e:	fb17 f703 	smulbb	r7, r7, r3
90010c62:	9b02      	ldr	r3, [sp, #8]
90010c64:	b2bf      	uxth	r7, r7
90010c66:	18fa      	adds	r2, r7, r3
90010c68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010c6c:	b212      	sxth	r2, r2
90010c6e:	429a      	cmp	r2, r3
90010c70:	db3c      	blt.n	90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c72:	8970      	ldrh	r0, [r6, #10]
90010c74:	4403      	add	r3, r0
90010c76:	b21b      	sxth	r3, r3
90010c78:	429a      	cmp	r2, r3
90010c7a:	da37      	bge.n	90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c7c:	2300      	movs	r3, #0
90010c7e:	4630      	mov	r0, r6
90010c80:	930b      	str	r3, [sp, #44]	@ 0x2c
90010c82:	ab0b      	add	r3, sp, #44	@ 0x2c
90010c84:	f7ff ff36 	bl	90010af4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010c88:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90010c8a:	b37a      	cbz	r2, 90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c8c:	4552      	cmp	r2, sl
90010c8e:	d02d      	beq.n	90010cec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010c90:	4611      	mov	r1, r2
90010c92:	a80e      	add	r0, sp, #56	@ 0x38
90010c94:	9209      	str	r2, [sp, #36]	@ 0x24
90010c96:	f007 fbef 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010c9a:	f04f 0e02 	mov.w	lr, #2
90010c9e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90010ca2:	9a06      	ldr	r2, [sp, #24]
90010ca4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010ca8:	9b01      	ldr	r3, [sp, #4]
90010caa:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90010cae:	4413      	add	r3, r2
90010cb0:	9a07      	ldr	r2, [sp, #28]
90010cb2:	fb91 f1fe 	sdiv	r1, r1, lr
90010cb6:	fb9c fcfe 	sdiv	ip, ip, lr
90010cba:	4401      	add	r1, r0
90010cbc:	1a58      	subs	r0, r3, r1
90010cbe:	9b02      	ldr	r3, [sp, #8]
90010cc0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010cc4:	4413      	add	r3, r2
90010cc6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010cc8:	448c      	add	ip, r1
90010cca:	eba3 030c 	sub.w	r3, r3, ip
90010cce:	435b      	muls	r3, r3
90010cd0:	fb00 3300 	mla	r3, r0, r0, r3
90010cd4:	42ab      	cmp	r3, r5
90010cd6:	d208      	bcs.n	90010cea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010cd8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90010cda:	461d      	mov	r5, r3
90010cdc:	9803      	ldr	r0, [sp, #12]
90010cde:	6001      	str	r1, [r0, #0]
90010ce0:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90010ce2:	9805      	ldr	r0, [sp, #20]
90010ce4:	8008      	strh	r0, [r1, #0]
90010ce6:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010ce8:	800f      	strh	r7, [r1, #0]
90010cea:	4692      	mov	sl, r2
90010cec:	f10b 0b01 	add.w	fp, fp, #1
90010cf0:	3408      	adds	r4, #8
90010cf2:	f1bb 0f04 	cmp.w	fp, #4
90010cf6:	d19d      	bne.n	90010c34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010cf8:	9b00      	ldr	r3, [sp, #0]
90010cfa:	9c08      	ldr	r4, [sp, #32]
90010cfc:	444b      	add	r3, r9
90010cfe:	4544      	cmp	r4, r8
90010d00:	9300      	str	r3, [sp, #0]
90010d02:	d188      	bne.n	90010c16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010d04:	b021      	add	sp, #132	@ 0x84
90010d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010d0a:	f04f 35ff 	mov.w	r5, #4294967295
90010d0e:	e767      	b.n	90010be0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010d10:	240234bc 	.word	0x240234bc
90010d14:	9002b310 	.word	0x9002b310

90010d18 <_ZN8touchgfx4RectaNERKS0_>:
90010d18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010d1c:	f9b1 7000 	ldrsh.w	r7, [r1]
90010d20:	888c      	ldrh	r4, [r1, #4]
90010d22:	f9b0 9000 	ldrsh.w	r9, [r0]
90010d26:	443c      	add	r4, r7
90010d28:	b2a4      	uxth	r4, r4
90010d2a:	fa0f f884 	sxth.w	r8, r4
90010d2e:	45c1      	cmp	r9, r8
90010d30:	da2f      	bge.n	90010d92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010d32:	8882      	ldrh	r2, [r0, #4]
90010d34:	444a      	add	r2, r9
90010d36:	b292      	uxth	r2, r2
90010d38:	fa0f fe82 	sxth.w	lr, r2
90010d3c:	4577      	cmp	r7, lr
90010d3e:	da28      	bge.n	90010d92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010d40:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90010d44:	88cb      	ldrh	r3, [r1, #6]
90010d46:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90010d4a:	442b      	add	r3, r5
90010d4c:	b21b      	sxth	r3, r3
90010d4e:	429e      	cmp	r6, r3
90010d50:	da1f      	bge.n	90010d92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010d52:	88c3      	ldrh	r3, [r0, #6]
90010d54:	4433      	add	r3, r6
90010d56:	b29b      	uxth	r3, r3
90010d58:	fa0f fc83 	sxth.w	ip, r3
90010d5c:	4565      	cmp	r5, ip
90010d5e:	da18      	bge.n	90010d92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010d60:	454f      	cmp	r7, r9
90010d62:	bfb8      	it	lt
90010d64:	464f      	movlt	r7, r9
90010d66:	42b5      	cmp	r5, r6
90010d68:	bfb8      	it	lt
90010d6a:	4635      	movlt	r5, r6
90010d6c:	45f0      	cmp	r8, lr
90010d6e:	bfd8      	it	le
90010d70:	4622      	movle	r2, r4
90010d72:	1bd2      	subs	r2, r2, r7
90010d74:	8082      	strh	r2, [r0, #4]
90010d76:	884a      	ldrh	r2, [r1, #2]
90010d78:	88c9      	ldrh	r1, [r1, #6]
90010d7a:	8007      	strh	r7, [r0, #0]
90010d7c:	440a      	add	r2, r1
90010d7e:	8045      	strh	r5, [r0, #2]
90010d80:	b292      	uxth	r2, r2
90010d82:	b211      	sxth	r1, r2
90010d84:	458c      	cmp	ip, r1
90010d86:	bfa8      	it	ge
90010d88:	4613      	movge	r3, r2
90010d8a:	1b5b      	subs	r3, r3, r5
90010d8c:	80c3      	strh	r3, [r0, #6]
90010d8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010d92:	2300      	movs	r3, #0
90010d94:	8003      	strh	r3, [r0, #0]
90010d96:	8043      	strh	r3, [r0, #2]
90010d98:	8083      	strh	r3, [r0, #4]
90010d9a:	80c3      	strh	r3, [r0, #6]
90010d9c:	e7f7      	b.n	90010d8e <_ZN8touchgfx4RectaNERKS0_+0x76>

90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>:
90010d9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010da2:	2b00      	cmp	r3, #0
90010da4:	dd06      	ble.n	90010db4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010da6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90010daa:	2800      	cmp	r0, #0
90010dac:	bfcc      	ite	gt
90010dae:	2000      	movgt	r0, #0
90010db0:	2001      	movle	r0, #1
90010db2:	4770      	bx	lr
90010db4:	2001      	movs	r0, #1
90010db6:	4770      	bx	lr

90010db8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010dbc:	2300      	movs	r3, #0
90010dbe:	4604      	mov	r4, r0
90010dc0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010dc2:	8003      	strh	r3, [r0, #0]
90010dc4:	8043      	strh	r3, [r0, #2]
90010dc6:	8083      	strh	r3, [r0, #4]
90010dc8:	80c3      	strh	r3, [r0, #6]
90010dca:	2d00      	cmp	r5, #0
90010dcc:	d040      	beq.n	90010e50 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90010dce:	1d28      	adds	r0, r5, #4
90010dd0:	f7ff ffe5 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90010dd4:	b988      	cbnz	r0, 90010dfa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010dd6:	4620      	mov	r0, r4
90010dd8:	f7ff ffe1 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90010ddc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010de0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010de4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010de8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90010dec:	b138      	cbz	r0, 90010dfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90010dee:	8022      	strh	r2, [r4, #0]
90010df0:	8063      	strh	r3, [r4, #2]
90010df2:	f8a4 e004 	strh.w	lr, [r4, #4]
90010df6:	f8a4 c006 	strh.w	ip, [r4, #6]
90010dfa:	69ad      	ldr	r5, [r5, #24]
90010dfc:	e7e5      	b.n	90010dca <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90010dfe:	f9b4 0000 	ldrsh.w	r0, [r4]
90010e02:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010e06:	4290      	cmp	r0, r2
90010e08:	4607      	mov	r7, r0
90010e0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90010e0e:	460e      	mov	r6, r1
90010e10:	bfa8      	it	ge
90010e12:	4617      	movge	r7, r2
90010e14:	4299      	cmp	r1, r3
90010e16:	4472      	add	r2, lr
90010e18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90010e1c:	bfa8      	it	ge
90010e1e:	461e      	movge	r6, r3
90010e20:	4440      	add	r0, r8
90010e22:	4471      	add	r1, lr
90010e24:	4463      	add	r3, ip
90010e26:	b200      	sxth	r0, r0
90010e28:	8027      	strh	r7, [r4, #0]
90010e2a:	b212      	sxth	r2, r2
90010e2c:	8066      	strh	r6, [r4, #2]
90010e2e:	b209      	sxth	r1, r1
90010e30:	b21b      	sxth	r3, r3
90010e32:	4290      	cmp	r0, r2
90010e34:	bfac      	ite	ge
90010e36:	ebc7 0200 	rsbge	r2, r7, r0
90010e3a:	ebc7 0202 	rsblt	r2, r7, r2
90010e3e:	4299      	cmp	r1, r3
90010e40:	bfac      	ite	ge
90010e42:	ebc6 0301 	rsbge	r3, r6, r1
90010e46:	ebc6 0303 	rsblt	r3, r6, r3
90010e4a:	80a2      	strh	r2, [r4, #4]
90010e4c:	80e3      	strh	r3, [r4, #6]
90010e4e:	e7d4      	b.n	90010dfa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010e50:	4620      	mov	r0, r4
90010e52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010e56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90010e56:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90010e5a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90010e5e:	b383      	cbz	r3, 90010ec2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010e60:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010e62:	b374      	cbz	r4, 90010ec2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010e64:	f9b1 5000 	ldrsh.w	r5, [r1]
90010e68:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90010e6c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90010e70:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90010e74:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010e78:	b303      	cbz	r3, 90010ebc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010e7a:	4668      	mov	r0, sp
90010e7c:	1d21      	adds	r1, r4, #4
90010e7e:	f8ad 5000 	strh.w	r5, [sp]
90010e82:	f8ad 6002 	strh.w	r6, [sp, #2]
90010e86:	f8ad 7004 	strh.w	r7, [sp, #4]
90010e8a:	f8ad 8006 	strh.w	r8, [sp, #6]
90010e8e:	f7ff ff43 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90010e92:	4668      	mov	r0, sp
90010e94:	f7ff ff83 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90010e98:	b980      	cbnz	r0, 90010ebc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010e9a:	f8bd 3000 	ldrh.w	r3, [sp]
90010e9e:	4669      	mov	r1, sp
90010ea0:	88a2      	ldrh	r2, [r4, #4]
90010ea2:	4620      	mov	r0, r4
90010ea4:	1a9b      	subs	r3, r3, r2
90010ea6:	88e2      	ldrh	r2, [r4, #6]
90010ea8:	f8ad 3000 	strh.w	r3, [sp]
90010eac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010eb0:	1a9b      	subs	r3, r3, r2
90010eb2:	f8ad 3002 	strh.w	r3, [sp, #2]
90010eb6:	6823      	ldr	r3, [r4, #0]
90010eb8:	689b      	ldr	r3, [r3, #8]
90010eba:	4798      	blx	r3
90010ebc:	69a4      	ldr	r4, [r4, #24]
90010ebe:	2c00      	cmp	r4, #0
90010ec0:	d1d8      	bne.n	90010e74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010ec2:	b002      	add	sp, #8
90010ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010ec8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010ec8:	b573      	push	{r0, r1, r4, r5, r6, lr}
90010eca:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90010ece:	460d      	mov	r5, r1
90010ed0:	4616      	mov	r6, r2
90010ed2:	b323      	cbz	r3, 90010f1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010ed4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010ed6:	b314      	cbz	r4, 90010f1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010ed8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010edc:	b1eb      	cbz	r3, 90010f1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010ede:	6828      	ldr	r0, [r5, #0]
90010ee0:	466b      	mov	r3, sp
90010ee2:	6869      	ldr	r1, [r5, #4]
90010ee4:	c303      	stmia	r3!, {r0, r1}
90010ee6:	4668      	mov	r0, sp
90010ee8:	1d21      	adds	r1, r4, #4
90010eea:	f7ff ff15 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90010eee:	4668      	mov	r0, sp
90010ef0:	f7ff ff55 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90010ef4:	b988      	cbnz	r0, 90010f1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010ef6:	f8bd 3000 	ldrh.w	r3, [sp]
90010efa:	4669      	mov	r1, sp
90010efc:	88a2      	ldrh	r2, [r4, #4]
90010efe:	4620      	mov	r0, r4
90010f00:	1a9b      	subs	r3, r3, r2
90010f02:	88e2      	ldrh	r2, [r4, #6]
90010f04:	f8ad 3000 	strh.w	r3, [sp]
90010f08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010f0c:	1a9b      	subs	r3, r3, r2
90010f0e:	4632      	mov	r2, r6
90010f10:	f8ad 3002 	strh.w	r3, [sp, #2]
90010f14:	6823      	ldr	r3, [r4, #0]
90010f16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90010f18:	4798      	blx	r3
90010f1a:	69a4      	ldr	r4, [r4, #24]
90010f1c:	e7db      	b.n	90010ed6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90010f1e:	b002      	add	sp, #8
90010f20:	bd70      	pop	{r4, r5, r6, pc}

90010f22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010f22:	6803      	ldr	r3, [r0, #0]
90010f24:	b513      	push	{r0, r1, r4, lr}
90010f26:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
90010f2a:	2300      	movs	r3, #0
90010f2c:	e9cd 3300 	strd	r3, r3, [sp]
90010f30:	466b      	mov	r3, sp
90010f32:	47a0      	blx	r4
90010f34:	b002      	add	sp, #8
90010f36:	bd10      	pop	{r4, pc}

90010f38 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90010f38:	2301      	movs	r3, #1
90010f3a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90010f3e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90010f42:	4770      	bx	lr

90010f44 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90010f44:	2301      	movs	r3, #1
90010f46:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90010f4a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90010f4e:	4770      	bx	lr

90010f50 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90010f50:	6843      	ldr	r3, [r0, #4]
90010f52:	2201      	movs	r2, #1
90010f54:	725a      	strb	r2, [r3, #9]
90010f56:	6840      	ldr	r0, [r0, #4]
90010f58:	6803      	ldr	r3, [r0, #0]
90010f5a:	691b      	ldr	r3, [r3, #16]
90010f5c:	4718      	bx	r3

90010f5e <_ZN8touchgfx3HAL8flushDMAEv>:
90010f5e:	6840      	ldr	r0, [r0, #4]
90010f60:	6803      	ldr	r3, [r0, #0]
90010f62:	689b      	ldr	r3, [r3, #8]
90010f64:	4718      	bx	r3

90010f66 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90010f66:	b530      	push	{r4, r5, lr}
90010f68:	b08b      	sub	sp, #44	@ 0x2c
90010f6a:	6804      	ldr	r4, [r0, #0]
90010f6c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90010f70:	9509      	str	r5, [sp, #36]	@ 0x24
90010f72:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90010f76:	9508      	str	r5, [sp, #32]
90010f78:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90010f7c:	9507      	str	r5, [sp, #28]
90010f7e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
90010f82:	9506      	str	r5, [sp, #24]
90010f84:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90010f88:	9505      	str	r5, [sp, #20]
90010f8a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
90010f8e:	9504      	str	r5, [sp, #16]
90010f90:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90010f94:	9503      	str	r5, [sp, #12]
90010f96:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90010f9a:	9502      	str	r5, [sp, #8]
90010f9c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90010fa0:	e9cd 3500 	strd	r3, r5, [sp]
90010fa4:	4613      	mov	r3, r2
90010fa6:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90010fa8:	2200      	movs	r2, #0
90010faa:	47a0      	blx	r4
90010fac:	b00b      	add	sp, #44	@ 0x2c
90010fae:	bd30      	pop	{r4, r5, pc}

90010fb0 <_ZN8touchgfx3HAL10beginFrameEv>:
90010fb0:	4b04      	ldr	r3, [pc, #16]	@ (90010fc4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010fb2:	781b      	ldrb	r3, [r3, #0]
90010fb4:	b123      	cbz	r3, 90010fc0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010fb6:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90010fba:	f080 0001 	eor.w	r0, r0, #1
90010fbe:	4770      	bx	lr
90010fc0:	2001      	movs	r0, #1
90010fc2:	4770      	bx	lr
90010fc4:	240234ba 	.word	0x240234ba

90010fc8 <_ZN8touchgfx3HAL8endFrameEv>:
90010fc8:	b510      	push	{r4, lr}
90010fca:	4604      	mov	r4, r0
90010fcc:	6840      	ldr	r0, [r0, #4]
90010fce:	6803      	ldr	r3, [r0, #0]
90010fd0:	689b      	ldr	r3, [r3, #8]
90010fd2:	4798      	blx	r3
90010fd4:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010fd8:	b113      	cbz	r3, 90010fe0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90010fda:	2301      	movs	r3, #1
90010fdc:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010fe0:	bd10      	pop	{r4, pc}

90010fe2 <_ZN8touchgfx3HAL10initializeEv>:
90010fe2:	b510      	push	{r4, lr}
90010fe4:	4604      	mov	r4, r0
90010fe6:	f7f1 f977 	bl	900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>
90010fea:	f7ef fdf5 	bl	90000bd8 <_ZN8touchgfx4GPIO4initEv>
90010fee:	6860      	ldr	r0, [r4, #4]
90010ff0:	6803      	ldr	r3, [r0, #0]
90010ff2:	68db      	ldr	r3, [r3, #12]
90010ff4:	4798      	blx	r3
90010ff6:	68e0      	ldr	r0, [r4, #12]
90010ff8:	6803      	ldr	r3, [r0, #0]
90010ffa:	689b      	ldr	r3, [r3, #8]
90010ffc:	4798      	blx	r3
90010ffe:	6823      	ldr	r3, [r4, #0]
90011000:	4620      	mov	r0, r4
90011002:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90011004:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011008:	4718      	bx	r3
	...

9001100c <_ZN8touchgfx3HAL4tickEv>:
9001100c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001100e:	6803      	ldr	r3, [r0, #0]
90011010:	4604      	mov	r4, r0
90011012:	4d5b      	ldr	r5, [pc, #364]	@ (90011180 <_ZN8touchgfx3HAL4tickEv+0x174>)
90011014:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90011018:	4798      	blx	r3
9001101a:	2800      	cmp	r0, #0
9001101c:	f000 8095 	beq.w	9001114a <_ZN8touchgfx3HAL4tickEv+0x13e>
90011020:	2001      	movs	r0, #1
90011022:	2600      	movs	r6, #0
90011024:	f7ef fe12 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011028:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9001102c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90011030:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90011034:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90011038:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
9001103c:	b133      	cbz	r3, 9001104c <_ZN8touchgfx3HAL4tickEv+0x40>
9001103e:	6823      	ldr	r3, [r4, #0]
90011040:	4620      	mov	r0, r4
90011042:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90011046:	4798      	blx	r3
90011048:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
9001104c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90011050:	2601      	movs	r6, #1
90011052:	6862      	ldr	r2, [r4, #4]
90011054:	f083 0301 	eor.w	r3, r3, #1
90011058:	702e      	strb	r6, [r5, #0]
9001105a:	7253      	strb	r3, [r2, #9]
9001105c:	f006 f8f8 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90011060:	6803      	ldr	r3, [r0, #0]
90011062:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011064:	4798      	blx	r3
90011066:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001106a:	b90b      	cbnz	r3, 90011070 <_ZN8touchgfx3HAL4tickEv+0x64>
9001106c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90011070:	f006 f8ee 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90011074:	6803      	ldr	r3, [r0, #0]
90011076:	695b      	ldr	r3, [r3, #20]
90011078:	4798      	blx	r3
9001107a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9001107c:	6803      	ldr	r3, [r0, #0]
9001107e:	691b      	ldr	r3, [r3, #16]
90011080:	4798      	blx	r3
90011082:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90011086:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9001108a:	3b01      	subs	r3, #1
9001108c:	b2db      	uxtb	r3, r3
9001108e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90011092:	b10a      	cbz	r2, 90011098 <_ZN8touchgfx3HAL4tickEv+0x8c>
90011094:	2b00      	cmp	r3, #0
90011096:	d1eb      	bne.n	90011070 <_ZN8touchgfx3HAL4tickEv+0x64>
90011098:	4a3a      	ldr	r2, [pc, #232]	@ (90011184 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001109a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
9001109e:	7813      	ldrb	r3, [r2, #0]
900110a0:	3301      	adds	r3, #1
900110a2:	b25b      	sxtb	r3, r3
900110a4:	4299      	cmp	r1, r3
900110a6:	7013      	strb	r3, [r2, #0]
900110a8:	dc10      	bgt.n	900110cc <_ZN8touchgfx3HAL4tickEv+0xc0>
900110aa:	2300      	movs	r3, #0
900110ac:	68e0      	ldr	r0, [r4, #12]
900110ae:	a902      	add	r1, sp, #8
900110b0:	7013      	strb	r3, [r2, #0]
900110b2:	aa03      	add	r2, sp, #12
900110b4:	6803      	ldr	r3, [r0, #0]
900110b6:	68db      	ldr	r3, [r3, #12]
900110b8:	4798      	blx	r3
900110ba:	6823      	ldr	r3, [r4, #0]
900110bc:	2800      	cmp	r0, #0
900110be:	d050      	beq.n	90011162 <_ZN8touchgfx3HAL4tickEv+0x156>
900110c0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
900110c4:	4620      	mov	r0, r4
900110c6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
900110ca:	4798      	blx	r3
900110cc:	2300      	movs	r3, #0
900110ce:	6960      	ldr	r0, [r4, #20]
900110d0:	f88d 3007 	strb.w	r3, [sp, #7]
900110d4:	b158      	cbz	r0, 900110ee <_ZN8touchgfx3HAL4tickEv+0xe2>
900110d6:	6803      	ldr	r3, [r0, #0]
900110d8:	f10d 0107 	add.w	r1, sp, #7
900110dc:	68db      	ldr	r3, [r3, #12]
900110de:	4798      	blx	r3
900110e0:	b128      	cbz	r0, 900110ee <_ZN8touchgfx3HAL4tickEv+0xe2>
900110e2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900110e4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900110e8:	6803      	ldr	r3, [r0, #0]
900110ea:	68db      	ldr	r3, [r3, #12]
900110ec:	4798      	blx	r3
900110ee:	f104 001c 	add.w	r0, r4, #28
900110f2:	f017 ff57 	bl	90028fa4 <_ZN8touchgfx8Gestures4tickEv>
900110f6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
900110fa:	b30b      	cbz	r3, 90011140 <_ZN8touchgfx3HAL4tickEv+0x134>
900110fc:	6920      	ldr	r0, [r4, #16]
900110fe:	6803      	ldr	r3, [r0, #0]
90011100:	691b      	ldr	r3, [r3, #16]
90011102:	4798      	blx	r3
90011104:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011106:	4606      	mov	r6, r0
90011108:	b903      	cbnz	r3, 9001110c <_ZN8touchgfx3HAL4tickEv+0x100>
9001110a:	6760      	str	r0, [r4, #116]	@ 0x74
9001110c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001110e:	4a1e      	ldr	r2, [pc, #120]	@ (90011188 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90011110:	1af3      	subs	r3, r6, r3
90011112:	4293      	cmp	r3, r2
90011114:	d914      	bls.n	90011140 <_ZN8touchgfx3HAL4tickEv+0x134>
90011116:	6920      	ldr	r0, [r4, #16]
90011118:	6803      	ldr	r3, [r0, #0]
9001111a:	699b      	ldr	r3, [r3, #24]
9001111c:	4798      	blx	r3
9001111e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011120:	2264      	movs	r2, #100	@ 0x64
90011122:	1af3      	subs	r3, r6, r3
90011124:	fbb3 f3f2 	udiv	r3, r3, r2
90011128:	fbb0 f0f3 	udiv	r0, r0, r3
9001112c:	2800      	cmp	r0, #0
9001112e:	dc1d      	bgt.n	9001116c <_ZN8touchgfx3HAL4tickEv+0x160>
90011130:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90011134:	6920      	ldr	r0, [r4, #16]
90011136:	2100      	movs	r1, #0
90011138:	6803      	ldr	r3, [r0, #0]
9001113a:	69db      	ldr	r3, [r3, #28]
9001113c:	4798      	blx	r3
9001113e:	6766      	str	r6, [r4, #116]	@ 0x74
90011140:	f006 f886 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90011144:	6803      	ldr	r3, [r0, #0]
90011146:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011148:	4798      	blx	r3
9001114a:	6823      	ldr	r3, [r4, #0]
9001114c:	4620      	mov	r0, r4
9001114e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
90011152:	4798      	blx	r3
90011154:	2001      	movs	r0, #1
90011156:	f7ef fdad 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001115a:	2300      	movs	r3, #0
9001115c:	702b      	strb	r3, [r5, #0]
9001115e:	b004      	add	sp, #16
90011160:	bd70      	pop	{r4, r5, r6, pc}
90011162:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90011166:	4620      	mov	r0, r4
90011168:	4798      	blx	r3
9001116a:	e7af      	b.n	900110cc <_ZN8touchgfx3HAL4tickEv+0xc0>
9001116c:	2863      	cmp	r0, #99	@ 0x63
9001116e:	bfcb      	itete	gt
90011170:	2300      	movgt	r3, #0
90011172:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90011176:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
9001117a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
9001117e:	e7d9      	b.n	90011134 <_ZN8touchgfx3HAL4tickEv+0x128>
90011180:	240234c0 	.word	0x240234c0
90011184:	240234c1 	.word	0x240234c1
90011188:	05f5e100 	.word	0x05f5e100

9001118c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
9001118c:	b510      	push	{r4, lr}
9001118e:	4604      	mov	r4, r0
90011190:	f7f1 f8d4 	bl	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90011194:	2200      	movs	r2, #0
90011196:	6863      	ldr	r3, [r4, #4]
90011198:	729a      	strb	r2, [r3, #10]
9001119a:	bd10      	pop	{r4, pc}

9001119c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001119c:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001119e:	301c      	adds	r0, #28
900111a0:	f017 befe 	b.w	90028fa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900111a4 <_ZN8touchgfx3HAL5touchEll>:
900111a4:	b530      	push	{r4, r5, lr}
900111a6:	b087      	sub	sp, #28
900111a8:	4604      	mov	r4, r0
900111aa:	a804      	add	r0, sp, #16
900111ac:	e9cd 1204 	strd	r1, r2, [sp, #16]
900111b0:	f005 fe34 	bl	90016e1c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900111b4:	9b04      	ldr	r3, [sp, #16]
900111b6:	a906      	add	r1, sp, #24
900111b8:	a803      	add	r0, sp, #12
900111ba:	f8ad 300c 	strh.w	r3, [sp, #12]
900111be:	9b05      	ldr	r3, [sp, #20]
900111c0:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900111c4:	f005 fe7c 	bl	90016ec0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900111c8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
900111cc:	f104 001c 	add.w	r0, r4, #28
900111d0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900111d4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900111d8:	b189      	cbz	r1, 900111fe <_ZN8touchgfx3HAL5touchEll+0x5a>
900111da:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900111de:	9300      	str	r3, [sp, #0]
900111e0:	4613      	mov	r3, r2
900111e2:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900111e6:	462a      	mov	r2, r5
900111e8:	f017 feea 	bl	90028fc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900111ec:	b128      	cbz	r0, 900111fa <_ZN8touchgfx3HAL5touchEll+0x56>
900111ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900111f2:	6623      	str	r3, [r4, #96]	@ 0x60
900111f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900111f8:	6663      	str	r3, [r4, #100]	@ 0x64
900111fa:	b007      	add	sp, #28
900111fc:	bd30      	pop	{r4, r5, pc}
900111fe:	f017 ff1f 	bl	90029040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011202:	2301      	movs	r3, #1
90011204:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90011208:	e7f1      	b.n	900111ee <_ZN8touchgfx3HAL5touchEll+0x4a>

9001120a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001120a:	b510      	push	{r4, lr}
9001120c:	2b00      	cmp	r3, #0
9001120e:	d046      	beq.n	9001129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011210:	ea81 0002 	eor.w	r0, r1, r2
90011214:	07c4      	lsls	r4, r0, #31
90011216:	d508      	bpl.n	9001122a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011218:	440b      	add	r3, r1
9001121a:	3a01      	subs	r2, #1
9001121c:	428b      	cmp	r3, r1
9001121e:	d93e      	bls.n	9001129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011220:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011224:	f801 0b01 	strb.w	r0, [r1], #1
90011228:	e7f8      	b.n	9001121c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001122a:	07d0      	lsls	r0, r2, #31
9001122c:	bf42      	ittt	mi
9001122e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90011232:	f103 33ff 	addmi.w	r3, r3, #4294967295
90011236:	f801 0b01 	strbmi.w	r0, [r1], #1
9001123a:	2b01      	cmp	r3, #1
9001123c:	d911      	bls.n	90011262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001123e:	ea81 0402 	eor.w	r4, r1, r2
90011242:	4610      	mov	r0, r2
90011244:	07a4      	lsls	r4, r4, #30
90011246:	d022      	beq.n	9001128e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011248:	f023 0401 	bic.w	r4, r3, #1
9001124c:	440c      	add	r4, r1
9001124e:	428c      	cmp	r4, r1
90011250:	4602      	mov	r2, r0
90011252:	d904      	bls.n	9001125e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90011254:	8812      	ldrh	r2, [r2, #0]
90011256:	3002      	adds	r0, #2
90011258:	f821 2b02 	strh.w	r2, [r1], #2
9001125c:	e7f7      	b.n	9001124e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001125e:	f003 0301 	and.w	r3, r3, #1
90011262:	f023 0003 	bic.w	r0, r3, #3
90011266:	4408      	add	r0, r1
90011268:	4288      	cmp	r0, r1
9001126a:	4614      	mov	r4, r2
9001126c:	d904      	bls.n	90011278 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001126e:	6824      	ldr	r4, [r4, #0]
90011270:	3204      	adds	r2, #4
90011272:	f841 4b04 	str.w	r4, [r1], #4
90011276:	e7f7      	b.n	90011268 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90011278:	f003 0303 	and.w	r3, r3, #3
9001127c:	3a01      	subs	r2, #1
9001127e:	440b      	add	r3, r1
90011280:	428b      	cmp	r3, r1
90011282:	d90c      	bls.n	9001129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011284:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011288:	f801 0b01 	strb.w	r0, [r1], #1
9001128c:	e7f8      	b.n	90011280 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001128e:	0790      	lsls	r0, r2, #30
90011290:	d0e7      	beq.n	90011262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011292:	f832 0b02 	ldrh.w	r0, [r2], #2
90011296:	3b02      	subs	r3, #2
90011298:	f821 0b02 	strh.w	r0, [r1], #2
9001129c:	e7e1      	b.n	90011262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001129e:	2001      	movs	r0, #1
900112a0:	bd10      	pop	{r4, pc}

900112a2 <_ZN8touchgfx3HAL7noTouchEv>:
900112a2:	b510      	push	{r4, lr}
900112a4:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
900112a8:	4604      	mov	r4, r0
900112aa:	b153      	cbz	r3, 900112c2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
900112ac:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
900112b0:	2101      	movs	r1, #1
900112b2:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
900112b6:	301c      	adds	r0, #28
900112b8:	f017 fec2 	bl	90029040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900112bc:	2300      	movs	r3, #0
900112be:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900112c2:	bd10      	pop	{r4, pc}

900112c4 <_ZN8touchgfx8Drawable5setXYEss>:
900112c4:	b570      	push	{r4, r5, r6, lr}
900112c6:	6803      	ldr	r3, [r0, #0]
900112c8:	4604      	mov	r4, r0
900112ca:	4615      	mov	r5, r2
900112cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900112ce:	4798      	blx	r3
900112d0:	6823      	ldr	r3, [r4, #0]
900112d2:	4629      	mov	r1, r5
900112d4:	4620      	mov	r0, r4
900112d6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900112d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900112dc:	4718      	bx	r3
	...

900112e0 <_ZN8touchgfx3HAL3lcdEv>:
900112e0:	4b04      	ldr	r3, [pc, #16]	@ (900112f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
900112e2:	681b      	ldr	r3, [r3, #0]
900112e4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900112e8:	b10a      	cbz	r2, 900112ee <_ZN8touchgfx3HAL3lcdEv+0xe>
900112ea:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900112ec:	b900      	cbnz	r0, 900112f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
900112ee:	6898      	ldr	r0, [r3, #8]
900112f0:	4770      	bx	lr
900112f2:	bf00      	nop
900112f4:	240234bc 	.word	0x240234bc

900112f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900112f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900112fc:	b085      	sub	sp, #20
900112fe:	4604      	mov	r4, r0
90011300:	2000      	movs	r0, #0
90011302:	4699      	mov	r9, r3
90011304:	ad04      	add	r5, sp, #16
90011306:	460f      	mov	r7, r1
90011308:	4690      	mov	r8, r2
9001130a:	f845 0d04 	str.w	r0, [r5, #-4]!
9001130e:	69a0      	ldr	r0, [r4, #24]
90011310:	6806      	ldr	r6, [r0, #0]
90011312:	9501      	str	r5, [sp, #4]
90011314:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90011318:	9500      	str	r5, [sp, #0]
9001131a:	6835      	ldr	r5, [r6, #0]
9001131c:	47a8      	blx	r5
9001131e:	4d10      	ldr	r5, [pc, #64]	@ (90011360 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011320:	4606      	mov	r6, r0
90011322:	f8a5 9000 	strh.w	r9, [r5]
90011326:	f7ff ffdb 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
9001132a:	6803      	ldr	r3, [r0, #0]
9001132c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001132e:	4798      	blx	r3
90011330:	b128      	cbz	r0, 9001133e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90011332:	2801      	cmp	r0, #1
90011334:	d00b      	beq.n	9001134e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90011336:	4630      	mov	r0, r6
90011338:	b005      	add	sp, #20
9001133a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001133e:	882b      	ldrh	r3, [r5, #0]
90011340:	fb08 7203 	mla	r2, r8, r3, r7
90011344:	9b03      	ldr	r3, [sp, #12]
90011346:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001134a:	63e3      	str	r3, [r4, #60]	@ 0x3c
9001134c:	e7f3      	b.n	90011336 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001134e:	882a      	ldrh	r2, [r5, #0]
90011350:	9b03      	ldr	r3, [sp, #12]
90011352:	fb08 7202 	mla	r2, r8, r2, r7
90011356:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001135a:	1a9a      	subs	r2, r3, r2
9001135c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9001135e:	e7ea      	b.n	90011336 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011360:	240234b6 	.word	0x240234b6

90011364 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90011364:	b5f0      	push	{r4, r5, r6, r7, lr}
90011366:	b08b      	sub	sp, #44	@ 0x2c
90011368:	4617      	mov	r7, r2
9001136a:	4604      	mov	r4, r0
9001136c:	460e      	mov	r6, r1
9001136e:	461d      	mov	r5, r3
90011370:	f7ff ffb6 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011374:	6803      	ldr	r3, [r0, #0]
90011376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011378:	4798      	blx	r3
9001137a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001137e:	9007      	str	r0, [sp, #28]
90011380:	4631      	mov	r1, r6
90011382:	6822      	ldr	r2, [r4, #0]
90011384:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011388:	4b0c      	ldr	r3, [pc, #48]	@ (900113bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001138a:	4620      	mov	r0, r4
9001138c:	881b      	ldrh	r3, [r3, #0]
9001138e:	9306      	str	r3, [sp, #24]
90011390:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011394:	9305      	str	r3, [sp, #20]
90011396:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
9001139a:	9304      	str	r3, [sp, #16]
9001139c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900113a0:	9303      	str	r3, [sp, #12]
900113a2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900113a6:	9302      	str	r3, [sp, #8]
900113a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900113ac:	e9cd 5300 	strd	r5, r3, [sp]
900113b0:	463b      	mov	r3, r7
900113b2:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
900113b4:	2200      	movs	r2, #0
900113b6:	47a8      	blx	r5
900113b8:	b00b      	add	sp, #44	@ 0x2c
900113ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
900113bc:	240234b6 	.word	0x240234b6

900113c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900113c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900113c4:	4698      	mov	r8, r3
900113c6:	6803      	ldr	r3, [r0, #0]
900113c8:	b08b      	sub	sp, #44	@ 0x2c
900113ca:	4617      	mov	r7, r2
900113cc:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
900113ce:	460e      	mov	r6, r1
900113d0:	4b13      	ldr	r3, [pc, #76]	@ (90011420 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900113d2:	4604      	mov	r4, r0
900113d4:	f8b3 9000 	ldrh.w	r9, [r3]
900113d8:	f7ff ff82 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
900113dc:	6803      	ldr	r3, [r0, #0]
900113de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900113e0:	4798      	blx	r3
900113e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900113e6:	2200      	movs	r2, #0
900113e8:	4631      	mov	r1, r6
900113ea:	e9cd 0308 	strd	r0, r3, [sp, #32]
900113ee:	2302      	movs	r3, #2
900113f0:	4620      	mov	r0, r4
900113f2:	e9cd 9306 	strd	r9, r3, [sp, #24]
900113f6:	2301      	movs	r3, #1
900113f8:	9305      	str	r3, [sp, #20]
900113fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900113fe:	9304      	str	r3, [sp, #16]
90011400:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90011404:	9303      	str	r3, [sp, #12]
90011406:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
9001140a:	9302      	str	r3, [sp, #8]
9001140c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011410:	e9cd 8300 	strd	r8, r3, [sp]
90011414:	463b      	mov	r3, r7
90011416:	47a8      	blx	r5
90011418:	b00b      	add	sp, #44	@ 0x2c
9001141a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001141e:	bf00      	nop
90011420:	240234b6 	.word	0x240234b6

90011424 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90011424:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011428:	4698      	mov	r8, r3
9001142a:	6803      	ldr	r3, [r0, #0]
9001142c:	b087      	sub	sp, #28
9001142e:	460e      	mov	r6, r1
90011430:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
90011432:	4617      	mov	r7, r2
90011434:	4b0f      	ldr	r3, [pc, #60]	@ (90011474 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90011436:	4604      	mov	r4, r0
90011438:	f8b3 9000 	ldrh.w	r9, [r3]
9001143c:	f7ff ff50 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011440:	6803      	ldr	r3, [r0, #0]
90011442:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011444:	4798      	blx	r3
90011446:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
9001144a:	463a      	mov	r2, r7
9001144c:	4631      	mov	r1, r6
9001144e:	f8cd 900c 	str.w	r9, [sp, #12]
90011452:	e9cd 0304 	strd	r0, r3, [sp, #16]
90011456:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9001145a:	4620      	mov	r0, r4
9001145c:	9302      	str	r3, [sp, #8]
9001145e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90011462:	9301      	str	r3, [sp, #4]
90011464:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90011468:	9300      	str	r3, [sp, #0]
9001146a:	4643      	mov	r3, r8
9001146c:	47a8      	blx	r5
9001146e:	b007      	add	sp, #28
90011470:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011474:	240234b6 	.word	0x240234b6

90011478 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001147c:	4604      	mov	r4, r0
9001147e:	b08f      	sub	sp, #60	@ 0x3c
90011480:	4610      	mov	r0, r2
90011482:	460d      	mov	r5, r1
90011484:	4691      	mov	r9, r2
90011486:	461e      	mov	r6, r3
90011488:	f009 fabe 	bl	9001aa08 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001148c:	2800      	cmp	r0, #0
9001148e:	f000 809d 	beq.w	900115cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90011492:	6823      	ldr	r3, [r4, #0]
90011494:	4620      	mov	r0, r4
90011496:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90011630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001149a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
9001149e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900114a0:	4798      	blx	r3
900114a2:	6823      	ldr	r3, [r4, #0]
900114a4:	4620      	mov	r0, r4
900114a6:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90011634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900114aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900114ac:	4798      	blx	r3
900114ae:	f8bb 3000 	ldrh.w	r3, [fp]
900114b2:	4f5c      	ldr	r7, [pc, #368]	@ (90011624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900114b4:	9301      	str	r3, [sp, #4]
900114b6:	f8ba 3000 	ldrh.w	r3, [sl]
900114ba:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900114be:	4640      	mov	r0, r8
900114c0:	9302      	str	r3, [sp, #8]
900114c2:	883b      	ldrh	r3, [r7, #0]
900114c4:	9303      	str	r3, [sp, #12]
900114c6:	4b58      	ldr	r3, [pc, #352]	@ (90011628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900114c8:	881a      	ldrh	r2, [r3, #0]
900114ca:	9305      	str	r3, [sp, #20]
900114cc:	9204      	str	r2, [sp, #16]
900114ce:	f009 fb2f 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
900114d2:	8038      	strh	r0, [r7, #0]
900114d4:	4640      	mov	r0, r8
900114d6:	f009 fb5f 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
900114da:	9b05      	ldr	r3, [sp, #20]
900114dc:	b280      	uxth	r0, r0
900114de:	8018      	strh	r0, [r3, #0]
900114e0:	4b52      	ldr	r3, [pc, #328]	@ (9001162c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900114e2:	781b      	ldrb	r3, [r3, #0]
900114e4:	2b00      	cmp	r3, #0
900114e6:	d174      	bne.n	900115d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900114e8:	883b      	ldrh	r3, [r7, #0]
900114ea:	f8aa 0000 	strh.w	r0, [sl]
900114ee:	f8ab 3000 	strh.w	r3, [fp]
900114f2:	4648      	mov	r0, r9
900114f4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900114f8:	f009 fa86 	bl	9001aa08 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900114fc:	2200      	movs	r2, #0
900114fe:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90011502:	4611      	mov	r1, r2
90011504:	4628      	mov	r0, r5
90011506:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
9001150a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001150e:	f7ff fed9 	bl	900112c4 <_ZN8touchgfx8Drawable5setXYEss>
90011512:	2301      	movs	r3, #1
90011514:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90011518:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
9001151c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011520:	2b00      	cmp	r3, #0
90011522:	dd5c      	ble.n	900115de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011524:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011528:	2b00      	cmp	r3, #0
9001152a:	dd58      	ble.n	900115de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001152c:	462a      	mov	r2, r5
9001152e:	ab0a      	add	r3, sp, #40	@ 0x28
90011530:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011534:	6851      	ldr	r1, [r2, #4]
90011536:	c303      	stmia	r3!, {r0, r1}
90011538:	4631      	mov	r1, r6
9001153a:	a80a      	add	r0, sp, #40	@ 0x28
9001153c:	f7ff fbec 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90011540:	4b38      	ldr	r3, [pc, #224]	@ (90011624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011542:	2100      	movs	r1, #0
90011544:	f9b3 2000 	ldrsh.w	r2, [r3]
90011548:	4b37      	ldr	r3, [pc, #220]	@ (90011628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001154a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001154e:	aa0a      	add	r2, sp, #40	@ 0x28
90011550:	f9b3 3000 	ldrsh.w	r3, [r3]
90011554:	910c      	str	r1, [sp, #48]	@ 0x30
90011556:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001155a:	ab08      	add	r3, sp, #32
9001155c:	e892 0003 	ldmia.w	r2, {r0, r1}
90011560:	e883 0003 	stmia.w	r3, {r0, r1}
90011564:	4618      	mov	r0, r3
90011566:	a90c      	add	r1, sp, #48	@ 0x30
90011568:	f7ff fbd6 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
9001156c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9001156e:	2b00      	cmp	r3, #0
90011570:	d13c      	bne.n	900115ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90011572:	2000      	movs	r0, #0
90011574:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90011578:	2600      	movs	r6, #0
9001157a:	696b      	ldr	r3, [r5, #20]
9001157c:	a908      	add	r1, sp, #32
9001157e:	682a      	ldr	r2, [r5, #0]
90011580:	4628      	mov	r0, r5
90011582:	9305      	str	r3, [sp, #20]
90011584:	616e      	str	r6, [r5, #20]
90011586:	6892      	ldr	r2, [r2, #8]
90011588:	4790      	blx	r2
9001158a:	9b05      	ldr	r3, [sp, #20]
9001158c:	4652      	mov	r2, sl
9001158e:	4649      	mov	r1, r9
90011590:	616b      	str	r3, [r5, #20]
90011592:	4628      	mov	r0, r5
90011594:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90011598:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
9001159c:	f7ff fe92 	bl	900112c4 <_ZN8touchgfx8Drawable5setXYEss>
900115a0:	9a01      	ldr	r2, [sp, #4]
900115a2:	4b23      	ldr	r3, [pc, #140]	@ (90011630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900115a4:	4620      	mov	r0, r4
900115a6:	801a      	strh	r2, [r3, #0]
900115a8:	9a02      	ldr	r2, [sp, #8]
900115aa:	4b22      	ldr	r3, [pc, #136]	@ (90011634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900115ac:	801a      	strh	r2, [r3, #0]
900115ae:	9a03      	ldr	r2, [sp, #12]
900115b0:	4b1c      	ldr	r3, [pc, #112]	@ (90011624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900115b2:	801a      	strh	r2, [r3, #0]
900115b4:	4b1c      	ldr	r3, [pc, #112]	@ (90011628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900115b6:	9a04      	ldr	r2, [sp, #16]
900115b8:	801a      	strh	r2, [r3, #0]
900115ba:	6823      	ldr	r3, [r4, #0]
900115bc:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
900115c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900115c2:	4798      	blx	r3
900115c4:	6823      	ldr	r3, [r4, #0]
900115c6:	4620      	mov	r0, r4
900115c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900115ca:	4798      	blx	r3
900115cc:	b00f      	add	sp, #60	@ 0x3c
900115ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900115d2:	883b      	ldrh	r3, [r7, #0]
900115d4:	f8ab 0000 	strh.w	r0, [fp]
900115d8:	f8aa 3000 	strh.w	r3, [sl]
900115dc:	e789      	b.n	900114f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900115de:	462a      	mov	r2, r5
900115e0:	ab0a      	add	r3, sp, #40	@ 0x28
900115e2:	f852 0f04 	ldr.w	r0, [r2, #4]!
900115e6:	6851      	ldr	r1, [r2, #4]
900115e8:	c303      	stmia	r3!, {r0, r1}
900115ea:	e7a9      	b.n	90011540 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900115ec:	a807      	add	r0, sp, #28
900115ee:	f009 fc15 	bl	9001ae1c <_ZNK8touchgfx6Bitmap9getFormatEv>
900115f2:	4606      	mov	r6, r0
900115f4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
900115f6:	6803      	ldr	r3, [r0, #0]
900115f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900115fa:	4798      	blx	r3
900115fc:	4286      	cmp	r6, r0
900115fe:	d1b8      	bne.n	90011572 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011600:	f7ff fe6e 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011604:	6803      	ldr	r3, [r0, #0]
90011606:	4606      	mov	r6, r0
90011608:	a807      	add	r0, sp, #28
9001160a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001160c:	9305      	str	r3, [sp, #20]
9001160e:	f009 fc05 	bl	9001ae1c <_ZNK8touchgfx6Bitmap9getFormatEv>
90011612:	9b05      	ldr	r3, [sp, #20]
90011614:	4601      	mov	r1, r0
90011616:	4630      	mov	r0, r6
90011618:	4798      	blx	r3
9001161a:	f080 0001 	eor.w	r0, r0, #1
9001161e:	b2c0      	uxtb	r0, r0
90011620:	e7a8      	b.n	90011574 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90011622:	bf00      	nop
90011624:	240234b0 	.word	0x240234b0
90011628:	240234b2 	.word	0x240234b2
9001162c:	240234b4 	.word	0x240234b4
90011630:	240234b6 	.word	0x240234b6
90011634:	240234b8 	.word	0x240234b8

90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011638:	4b07      	ldr	r3, [pc, #28]	@ (90011658 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
9001163a:	b510      	push	{r4, lr}
9001163c:	781b      	ldrb	r3, [r3, #0]
9001163e:	4604      	mov	r4, r0
90011640:	b13b      	cbz	r3, 90011652 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011642:	6803      	ldr	r3, [r0, #0]
90011644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011646:	4798      	blx	r3
90011648:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001164a:	4283      	cmp	r3, r0
9001164c:	d101      	bne.n	90011652 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001164e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90011650:	bd10      	pop	{r4, pc}
90011652:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90011654:	e7fc      	b.n	90011650 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90011656:	bf00      	nop
90011658:	240234ba 	.word	0x240234ba

9001165c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
9001165c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011660:	461d      	mov	r5, r3
90011662:	b08a      	sub	sp, #40	@ 0x28
90011664:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90011668:	4690      	mov	r8, r2
9001166a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
9001166e:	2400      	movs	r4, #0
90011670:	4607      	mov	r7, r0
90011672:	fb06 8505 	mla	r5, r6, r5, r8
90011676:	9404      	str	r4, [sp, #16]
90011678:	f88d 4020 	strb.w	r4, [sp, #32]
9001167c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011680:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011684:	f8ad 3018 	strh.w	r3, [sp, #24]
90011688:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001168c:	f8ad 301a 	strh.w	r3, [sp, #26]
90011690:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011694:	f8ad 301c 	strh.w	r3, [sp, #28]
90011698:	f7ff ffce 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001169c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900116a0:	6878      	ldr	r0, [r7, #4]
900116a2:	f8ad 601e 	strh.w	r6, [sp, #30]
900116a6:	a901      	add	r1, sp, #4
900116a8:	9505      	str	r5, [sp, #20]
900116aa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900116ae:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
900116b2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900116b6:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900116ba:	6803      	ldr	r3, [r0, #0]
900116bc:	685b      	ldr	r3, [r3, #4]
900116be:	4798      	blx	r3
900116c0:	b00a      	add	sp, #40	@ 0x28
900116c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900116c6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900116c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900116ca:	b08b      	sub	sp, #44	@ 0x2c
900116cc:	2400      	movs	r4, #0
900116ce:	4691      	mov	r9, r2
900116d0:	461d      	mov	r5, r3
900116d2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
900116d6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
900116da:	4688      	mov	r8, r1
900116dc:	4607      	mov	r7, r0
900116de:	9404      	str	r4, [sp, #16]
900116e0:	fb06 9505 	mla	r5, r6, r5, r9
900116e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900116e8:	f7ff ffa6 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900116ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900116f0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900116f4:	6878      	ldr	r0, [r7, #4]
900116f6:	f8ad 3018 	strh.w	r3, [sp, #24]
900116fa:	a901      	add	r1, sp, #4
900116fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011700:	9505      	str	r5, [sp, #20]
90011702:	f8ad 301a 	strh.w	r3, [sp, #26]
90011706:	f8ad 401c 	strh.w	r4, [sp, #28]
9001170a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001170e:	f8cd 8010 	str.w	r8, [sp, #16]
90011712:	f8ad 4020 	strh.w	r4, [sp, #32]
90011716:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001171a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001171e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011722:	6803      	ldr	r3, [r0, #0]
90011724:	685b      	ldr	r3, [r3, #4]
90011726:	4798      	blx	r3
90011728:	b00b      	add	sp, #44	@ 0x2c
9001172a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011730 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011734:	b08a      	sub	sp, #40	@ 0x28
90011736:	4698      	mov	r8, r3
90011738:	2300      	movs	r3, #0
9001173a:	4606      	mov	r6, r0
9001173c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90011740:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90011744:	2d0b      	cmp	r5, #11
90011746:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
9001174a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
9001174e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90011752:	9304      	str	r3, [sp, #16]
90011754:	d137      	bne.n	900117c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90011756:	2380      	movs	r3, #128	@ 0x80
90011758:	f88d 0020 	strb.w	r0, [sp, #32]
9001175c:	4630      	mov	r0, r6
9001175e:	9203      	str	r2, [sp, #12]
90011760:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011764:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011768:	f8ad 3018 	strh.w	r3, [sp, #24]
9001176c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011770:	f8ad 301a 	strh.w	r3, [sp, #26]
90011774:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011778:	f8ad 301c 	strh.w	r3, [sp, #28]
9001177c:	f7ff ff5c 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011780:	2c0b      	cmp	r4, #11
90011782:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90011786:	f8ad 701e 	strh.w	r7, [sp, #30]
9001178a:	bf94      	ite	ls
9001178c:	4b19      	ldrls	r3, [pc, #100]	@ (900117f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
9001178e:	2100      	movhi	r1, #0
90011790:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90011794:	bf98      	it	ls
90011796:	5d19      	ldrbls	r1, [r3, r4]
90011798:	fb02 8307 	mla	r3, r2, r7, r8
9001179c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900117a0:	10c9      	asrs	r1, r1, #3
900117a2:	fb01 0003 	mla	r0, r1, r3, r0
900117a6:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
900117aa:	a901      	add	r1, sp, #4
900117ac:	9005      	str	r0, [sp, #20]
900117ae:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900117b2:	2300      	movs	r3, #0
900117b4:	6870      	ldr	r0, [r6, #4]
900117b6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
900117ba:	6803      	ldr	r3, [r0, #0]
900117bc:	685b      	ldr	r3, [r3, #4]
900117be:	4798      	blx	r3
900117c0:	b00a      	add	sp, #40	@ 0x28
900117c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900117c6:	2d02      	cmp	r5, #2
900117c8:	d109      	bne.n	900117de <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900117ca:	28ff      	cmp	r0, #255	@ 0xff
900117cc:	d105      	bne.n	900117da <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900117ce:	f1bc 0f00 	cmp.w	ip, #0
900117d2:	bf14      	ite	ne
900117d4:	2340      	movne	r3, #64	@ 0x40
900117d6:	2320      	moveq	r3, #32
900117d8:	e7be      	b.n	90011758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900117da:	2340      	movs	r3, #64	@ 0x40
900117dc:	e7bc      	b.n	90011758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900117de:	28ff      	cmp	r0, #255	@ 0xff
900117e0:	d105      	bne.n	900117ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900117e2:	f1bc 0f00 	cmp.w	ip, #0
900117e6:	bf14      	ite	ne
900117e8:	2304      	movne	r3, #4
900117ea:	2301      	moveq	r3, #1
900117ec:	e7b4      	b.n	90011758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900117ee:	2304      	movs	r3, #4
900117f0:	e7b2      	b.n	90011758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900117f2:	bf00      	nop
900117f4:	9002e1f4 	.word	0x9002e1f4

900117f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900117f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900117fc:	b08b      	sub	sp, #44	@ 0x2c
900117fe:	461d      	mov	r5, r3
90011800:	2400      	movs	r4, #0
90011802:	4688      	mov	r8, r1
90011804:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90011808:	4693      	mov	fp, r2
9001180a:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001180e:	4607      	mov	r7, r0
90011810:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90011814:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90011818:	9404      	str	r4, [sp, #16]
9001181a:	bf14      	ite	ne
9001181c:	2308      	movne	r3, #8
9001181e:	2302      	moveq	r3, #2
90011820:	fb05 b50a 	mla	r5, r5, sl, fp
90011824:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011828:	f7ff ff06 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001182c:	2e0b      	cmp	r6, #11
9001182e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90011832:	a901      	add	r1, sp, #4
90011834:	bf98      	it	ls
90011836:	4b13      	ldrls	r3, [pc, #76]	@ (90011884 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011838:	f8ad a01e 	strh.w	sl, [sp, #30]
9001183c:	bf98      	it	ls
9001183e:	5d9c      	ldrbls	r4, [r3, r6]
90011840:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90011844:	10e4      	asrs	r4, r4, #3
90011846:	f8cd 8010 	str.w	r8, [sp, #16]
9001184a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001184e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011852:	fb04 0405 	mla	r4, r4, r5, r0
90011856:	6878      	ldr	r0, [r7, #4]
90011858:	f8ad 301a 	strh.w	r3, [sp, #26]
9001185c:	2300      	movs	r3, #0
9001185e:	9405      	str	r4, [sp, #20]
90011860:	f8ad 301c 	strh.w	r3, [sp, #28]
90011864:	f88d 9020 	strb.w	r9, [sp, #32]
90011868:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
9001186c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011870:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90011874:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90011878:	6803      	ldr	r3, [r0, #0]
9001187a:	685b      	ldr	r3, [r3, #4]
9001187c:	4798      	blx	r3
9001187e:	b00b      	add	sp, #44	@ 0x2c
90011880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011884:	9002e1f4 	.word	0x9002e1f4

90011888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90011888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001188c:	461e      	mov	r6, r3
9001188e:	4b0a      	ldr	r3, [pc, #40]	@ (900118b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011890:	460f      	mov	r7, r1
90011892:	4690      	mov	r8, r2
90011894:	881d      	ldrh	r5, [r3, #0]
90011896:	f7ff fd23 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
9001189a:	6803      	ldr	r3, [r0, #0]
9001189c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001189e:	4798      	blx	r3
900118a0:	280b      	cmp	r0, #11
900118a2:	bf96      	itet	ls
900118a4:	4b05      	ldrls	r3, [pc, #20]	@ (900118bc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900118a6:	2400      	movhi	r4, #0
900118a8:	5c1c      	ldrbls	r4, [r3, r0]
900118aa:	fb08 7005 	mla	r0, r8, r5, r7
900118ae:	10e4      	asrs	r4, r4, #3
900118b0:	fb04 6000 	mla	r0, r4, r0, r6
900118b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900118b8:	240234b6 	.word	0x240234b6
900118bc:	9002e1f4 	.word	0x9002e1f4

900118c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900118c0:	b5f0      	push	{r4, r5, r6, r7, lr}
900118c2:	b08b      	sub	sp, #44	@ 0x2c
900118c4:	461f      	mov	r7, r3
900118c6:	4604      	mov	r4, r0
900118c8:	4616      	mov	r6, r2
900118ca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900118ce:	2500      	movs	r5, #0
900118d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
900118d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900118d8:	9504      	str	r5, [sp, #16]
900118da:	f8ad 3018 	strh.w	r3, [sp, #24]
900118de:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900118e2:	f8ad 301a 	strh.w	r3, [sp, #26]
900118e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900118ea:	f8ad 301c 	strh.w	r3, [sp, #28]
900118ee:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900118f2:	f88d 3020 	strb.w	r3, [sp, #32]
900118f6:	f7ff fe9f 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900118fa:	463a      	mov	r2, r7
900118fc:	4631      	mov	r1, r6
900118fe:	4603      	mov	r3, r0
90011900:	4620      	mov	r0, r4
90011902:	f7ff ffc1 	bl	90011888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011906:	4b0e      	ldr	r3, [pc, #56]	@ (90011940 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011908:	9005      	str	r0, [sp, #20]
9001190a:	881b      	ldrh	r3, [r3, #0]
9001190c:	f8ad 301e 	strh.w	r3, [sp, #30]
90011910:	f7ff fce6 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011914:	6803      	ldr	r3, [r0, #0]
90011916:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011918:	4798      	blx	r3
9001191a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001191c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90011920:	a901      	add	r1, sp, #4
90011922:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90011926:	9304      	str	r3, [sp, #16]
90011928:	6860      	ldr	r0, [r4, #4]
9001192a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001192e:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90011932:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011936:	6803      	ldr	r3, [r0, #0]
90011938:	685b      	ldr	r3, [r3, #4]
9001193a:	4798      	blx	r3
9001193c:	b00b      	add	sp, #44	@ 0x2c
9001193e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011940:	240234b6 	.word	0x240234b6

90011944 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90011944:	b5f0      	push	{r4, r5, r6, r7, lr}
90011946:	b08d      	sub	sp, #52	@ 0x34
90011948:	2501      	movs	r5, #1
9001194a:	4604      	mov	r4, r0
9001194c:	466b      	mov	r3, sp
9001194e:	9503      	str	r5, [sp, #12]
90011950:	e883 0006 	stmia.w	r3, {r1, r2}
90011954:	2300      	movs	r3, #0
90011956:	f8bd 6000 	ldrh.w	r6, [sp]
9001195a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001195e:	9306      	str	r3, [sp, #24]
90011960:	6803      	ldr	r3, [r0, #0]
90011962:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011964:	4798      	blx	r3
90011966:	463a      	mov	r2, r7
90011968:	4631      	mov	r1, r6
9001196a:	4603      	mov	r3, r0
9001196c:	4620      	mov	r0, r4
9001196e:	f7ff ff8b 	bl	90011888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011972:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90011974:	9004      	str	r0, [sp, #16]
90011976:	9307      	str	r3, [sp, #28]
90011978:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001197c:	f8ad 3020 	strh.w	r3, [sp, #32]
90011980:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011984:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011988:	4b0e      	ldr	r3, [pc, #56]	@ (900119c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
9001198a:	881b      	ldrh	r3, [r3, #0]
9001198c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011990:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011994:	f7ff fca4 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011998:	6803      	ldr	r3, [r0, #0]
9001199a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001199c:	4798      	blx	r3
9001199e:	23ff      	movs	r3, #255	@ 0xff
900119a0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900119a4:	a903      	add	r1, sp, #12
900119a6:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900119aa:	6860      	ldr	r0, [r4, #4]
900119ac:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900119b0:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900119b4:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900119b8:	6803      	ldr	r3, [r0, #0]
900119ba:	685b      	ldr	r3, [r3, #4]
900119bc:	4798      	blx	r3
900119be:	6c60      	ldr	r0, [r4, #68]	@ 0x44
900119c0:	b00d      	add	sp, #52	@ 0x34
900119c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900119c4:	240234b6 	.word	0x240234b6

900119c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900119c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900119cc:	b08c      	sub	sp, #48	@ 0x30
900119ce:	461e      	mov	r6, r3
900119d0:	2300      	movs	r3, #0
900119d2:	4604      	mov	r4, r0
900119d4:	466d      	mov	r5, sp
900119d6:	9306      	str	r3, [sp, #24]
900119d8:	6803      	ldr	r3, [r0, #0]
900119da:	e885 0006 	stmia.w	r5, {r1, r2}
900119de:	2501      	movs	r5, #1
900119e0:	f8bd 7000 	ldrh.w	r7, [sp]
900119e4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900119e8:	9503      	str	r5, [sp, #12]
900119ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900119ec:	4798      	blx	r3
900119ee:	4642      	mov	r2, r8
900119f0:	4639      	mov	r1, r7
900119f2:	4603      	mov	r3, r0
900119f4:	4620      	mov	r0, r4
900119f6:	f7ff ff47 	bl	90011888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900119fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900119fe:	9004      	str	r0, [sp, #16]
90011a00:	f8ad 3020 	strh.w	r3, [sp, #32]
90011a04:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011a08:	9607      	str	r6, [sp, #28]
90011a0a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011a0e:	4b10      	ldr	r3, [pc, #64]	@ (90011a50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011a10:	881b      	ldrh	r3, [r3, #0]
90011a12:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011a16:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90011a18:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011a1c:	f7ff fc60 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90011a20:	6803      	ldr	r3, [r0, #0]
90011a22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011a24:	4798      	blx	r3
90011a26:	23ff      	movs	r3, #255	@ 0xff
90011a28:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011a2c:	a903      	add	r1, sp, #12
90011a2e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90011a32:	6860      	ldr	r0, [r4, #4]
90011a34:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011a38:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011a3c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90011a40:	6803      	ldr	r3, [r0, #0]
90011a42:	685b      	ldr	r3, [r3, #4]
90011a44:	4798      	blx	r3
90011a46:	4630      	mov	r0, r6
90011a48:	b00c      	add	sp, #48	@ 0x30
90011a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011a4e:	bf00      	nop
90011a50:	240234b6 	.word	0x240234b6

90011a54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011a54:	b5f0      	push	{r4, r5, r6, r7, lr}
90011a56:	b085      	sub	sp, #20
90011a58:	4605      	mov	r5, r0
90011a5a:	ac02      	add	r4, sp, #8
90011a5c:	e884 0006 	stmia.w	r4, {r1, r2}
90011a60:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011a64:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90011a68:	f7ff fde6 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011a6c:	4631      	mov	r1, r6
90011a6e:	4603      	mov	r3, r0
90011a70:	463a      	mov	r2, r7
90011a72:	4628      	mov	r0, r5
90011a74:	f7ff ff08 	bl	90011888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011a78:	4a05      	ldr	r2, [pc, #20]	@ (90011a90 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90011a7a:	682b      	ldr	r3, [r5, #0]
90011a7c:	8812      	ldrh	r2, [r2, #0]
90011a7e:	9200      	str	r2, [sp, #0]
90011a80:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90011a82:	4603      	mov	r3, r0
90011a84:	4628      	mov	r0, r5
90011a86:	e894 0006 	ldmia.w	r4, {r1, r2}
90011a8a:	47b0      	blx	r6
90011a8c:	b005      	add	sp, #20
90011a8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011a90:	240234b6 	.word	0x240234b6

90011a94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011a94:	b570      	push	{r4, r5, r6, lr}
90011a96:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90011a9a:	4604      	mov	r4, r0
90011a9c:	b19b      	cbz	r3, 90011ac6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90011a9e:	2002      	movs	r0, #2
90011aa0:	f7ef f93c 	bl	90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011aa4:	2300      	movs	r3, #0
90011aa6:	4620      	mov	r0, r4
90011aa8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90011aac:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90011ab0:	6823      	ldr	r3, [r4, #0]
90011ab2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90011ab6:	f7ff fdbf 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011aba:	4601      	mov	r1, r0
90011abc:	4620      	mov	r0, r4
90011abe:	462b      	mov	r3, r5
90011ac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011ac4:	4718      	bx	r3
90011ac6:	bd70      	pop	{r4, r5, r6, pc}

90011ac8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90011ac8:	b570      	push	{r4, r5, r6, lr}
90011aca:	4605      	mov	r5, r0
90011acc:	460c      	mov	r4, r1
90011ace:	2003      	movs	r0, #3
90011ad0:	b149      	cbz	r1, 90011ae6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011ad2:	f7ef f8bb 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011ad6:	6928      	ldr	r0, [r5, #16]
90011ad8:	b168      	cbz	r0, 90011af6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011ada:	6803      	ldr	r3, [r0, #0]
90011adc:	2101      	movs	r1, #1
90011ade:	695b      	ldr	r3, [r3, #20]
90011ae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011ae4:	4718      	bx	r3
90011ae6:	f7ef f8e5 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011aea:	6928      	ldr	r0, [r5, #16]
90011aec:	b118      	cbz	r0, 90011af6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011aee:	6803      	ldr	r3, [r0, #0]
90011af0:	4621      	mov	r1, r4
90011af2:	695b      	ldr	r3, [r3, #20]
90011af4:	e7f4      	b.n	90011ae0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90011af6:	bd70      	pop	{r4, r5, r6, pc}

90011af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90011af8:	b538      	push	{r3, r4, r5, lr}
90011afa:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90011afe:	4604      	mov	r4, r0
90011b00:	460d      	mov	r5, r1
90011b02:	428b      	cmp	r3, r1
90011b04:	d006      	beq.n	90011b14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011b06:	6803      	ldr	r3, [r0, #0]
90011b08:	b929      	cbnz	r1, 90011b16 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90011b0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90011b0e:	4798      	blx	r3
90011b10:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90011b14:	bd38      	pop	{r3, r4, r5, pc}
90011b16:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90011b1a:	e7f8      	b.n	90011b0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90011b1c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90011b1c:	4b0d      	ldr	r3, [pc, #52]	@ (90011b54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90011b1e:	b510      	push	{r4, lr}
90011b20:	781b      	ldrb	r3, [r3, #0]
90011b22:	4604      	mov	r4, r0
90011b24:	b95b      	cbnz	r3, 90011b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011b26:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90011b2a:	2b02      	cmp	r3, #2
90011b2c:	d007      	beq.n	90011b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011b2e:	6840      	ldr	r0, [r0, #4]
90011b30:	f000 f91a 	bl	90011d68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90011b34:	b118      	cbz	r0, 90011b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011b36:	6862      	ldr	r2, [r4, #4]
90011b38:	7a53      	ldrb	r3, [r2, #9]
90011b3a:	2b00      	cmp	r3, #0
90011b3c:	d0fc      	beq.n	90011b38 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90011b3e:	f7f0 fbf5 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011b42:	4620      	mov	r0, r4
90011b44:	2100      	movs	r1, #0
90011b46:	f7ff ffd7 	bl	90011af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011b4a:	4620      	mov	r0, r4
90011b4c:	f7ff fd74 	bl	90011638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011b50:	bd10      	pop	{r4, pc}
90011b52:	bf00      	nop
90011b54:	240234ba 	.word	0x240234ba

90011b58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011b58:	b570      	push	{r4, r5, r6, lr}
90011b5a:	4604      	mov	r4, r0
90011b5c:	6803      	ldr	r3, [r0, #0]
90011b5e:	b919      	cbnz	r1, 90011b68 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011b60:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90011b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011b66:	4718      	bx	r3
90011b68:	2200      	movs	r2, #0
90011b6a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90011b6e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90011b72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90011b74:	4798      	blx	r3
90011b76:	6863      	ldr	r3, [r4, #4]
90011b78:	2101      	movs	r1, #1
90011b7a:	4605      	mov	r5, r0
90011b7c:	4620      	mov	r0, r4
90011b7e:	7299      	strb	r1, [r3, #10]
90011b80:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90011b84:	f7ff ffb8 	bl	90011af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011b88:	4628      	mov	r0, r5
90011b8a:	bd70      	pop	{r4, r5, r6, pc}

90011b8c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011b8c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011b90:	1a13      	subs	r3, r2, r0
90011b92:	4258      	negs	r0, r3
90011b94:	4158      	adcs	r0, r3
90011b96:	4770      	bx	lr

90011b98 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011b98:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011b9c:	1a9b      	subs	r3, r3, r2
90011b9e:	2b00      	cmp	r3, #0
90011ba0:	bfdc      	itt	le
90011ba2:	6882      	ldrle	r2, [r0, #8]
90011ba4:	189b      	addle	r3, r3, r2
90011ba6:	2b01      	cmp	r3, #1
90011ba8:	bfcc      	ite	gt
90011baa:	2000      	movgt	r0, #0
90011bac:	2001      	movle	r0, #1
90011bae:	4770      	bx	lr

90011bb0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011bb0:	6902      	ldr	r2, [r0, #16]
90011bb2:	6843      	ldr	r3, [r0, #4]
90011bb4:	2024      	movs	r0, #36	@ 0x24
90011bb6:	fb00 3002 	mla	r0, r0, r2, r3
90011bba:	4770      	bx	lr

90011bbc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90011bbc:	6803      	ldr	r3, [r0, #0]
90011bbe:	691b      	ldr	r3, [r3, #16]
90011bc0:	4718      	bx	r3

90011bc2 <_ZN8touchgfx13DMA_Interface7executeEv>:
90011bc2:	2301      	movs	r3, #1
90011bc4:	b570      	push	{r4, r5, r6, lr}
90011bc6:	7203      	strb	r3, [r0, #8]
90011bc8:	4604      	mov	r4, r0
90011bca:	6840      	ldr	r0, [r0, #4]
90011bcc:	6803      	ldr	r3, [r0, #0]
90011bce:	699b      	ldr	r3, [r3, #24]
90011bd0:	4798      	blx	r3
90011bd2:	6803      	ldr	r3, [r0, #0]
90011bd4:	4605      	mov	r5, r0
90011bd6:	2b40      	cmp	r3, #64	@ 0x40
90011bd8:	d00c      	beq.n	90011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011bda:	d810      	bhi.n	90011bfe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90011bdc:	2b04      	cmp	r3, #4
90011bde:	d01d      	beq.n	90011c1c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011be0:	d804      	bhi.n	90011bec <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011be2:	2b01      	cmp	r3, #1
90011be4:	d006      	beq.n	90011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011be6:	2b02      	cmp	r3, #2
90011be8:	d02c      	beq.n	90011c44 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90011bea:	bd70      	pop	{r4, r5, r6, pc}
90011bec:	2b08      	cmp	r3, #8
90011bee:	d01d      	beq.n	90011c2c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011bf0:	2b20      	cmp	r3, #32
90011bf2:	d1fa      	bne.n	90011bea <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011bf4:	6823      	ldr	r3, [r4, #0]
90011bf6:	4620      	mov	r0, r4
90011bf8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011bfa:	4798      	blx	r3
90011bfc:	e013      	b.n	90011c26 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90011bfe:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90011c02:	d0f7      	beq.n	90011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011c04:	d804      	bhi.n	90011c10 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011c06:	2b80      	cmp	r3, #128	@ 0x80
90011c08:	d0f4      	beq.n	90011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011c0a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90011c0e:	e7f0      	b.n	90011bf2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011c10:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90011c14:	d0ee      	beq.n	90011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011c16:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90011c1a:	e7e5      	b.n	90011be8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90011c1c:	6823      	ldr	r3, [r4, #0]
90011c1e:	7f01      	ldrb	r1, [r0, #28]
90011c20:	4620      	mov	r0, r4
90011c22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011c24:	4798      	blx	r3
90011c26:	6823      	ldr	r3, [r4, #0]
90011c28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011c2a:	e006      	b.n	90011c3a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011c2c:	6823      	ldr	r3, [r4, #0]
90011c2e:	7f01      	ldrb	r1, [r0, #28]
90011c30:	4620      	mov	r0, r4
90011c32:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011c34:	4798      	blx	r3
90011c36:	6823      	ldr	r3, [r4, #0]
90011c38:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011c3a:	4629      	mov	r1, r5
90011c3c:	4620      	mov	r0, r4
90011c3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011c42:	4718      	bx	r3
90011c44:	6823      	ldr	r3, [r4, #0]
90011c46:	4620      	mov	r0, r4
90011c48:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011c4a:	4798      	blx	r3
90011c4c:	e7f3      	b.n	90011c36 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011c4e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011c4e:	4770      	bx	lr

90011c50 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011c50:	4770      	bx	lr

90011c52 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011c52:	4770      	bx	lr

90011c54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011c54:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011c58:	b510      	push	{r4, lr}
90011c5a:	1ad2      	subs	r2, r2, r3
90011c5c:	2a00      	cmp	r2, #0
90011c5e:	bfdc      	itt	le
90011c60:	6884      	ldrle	r4, [r0, #8]
90011c62:	1912      	addle	r2, r2, r4
90011c64:	2a01      	cmp	r2, #1
90011c66:	dd16      	ble.n	90011c96 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011c68:	6842      	ldr	r2, [r0, #4]
90011c6a:	2424      	movs	r4, #36	@ 0x24
90011c6c:	fb04 2303 	mla	r3, r4, r3, r2
90011c70:	f101 0220 	add.w	r2, r1, #32
90011c74:	f851 4b04 	ldr.w	r4, [r1], #4
90011c78:	4291      	cmp	r1, r2
90011c7a:	f843 4b04 	str.w	r4, [r3], #4
90011c7e:	d1f9      	bne.n	90011c74 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011c80:	780a      	ldrb	r2, [r1, #0]
90011c82:	701a      	strb	r2, [r3, #0]
90011c84:	68c3      	ldr	r3, [r0, #12]
90011c86:	6882      	ldr	r2, [r0, #8]
90011c88:	f3bf 8f5b 	dmb	ish
90011c8c:	3301      	adds	r3, #1
90011c8e:	429a      	cmp	r2, r3
90011c90:	bfd8      	it	le
90011c92:	1a9b      	suble	r3, r3, r2
90011c94:	60c3      	str	r3, [r0, #12]
90011c96:	bd10      	pop	{r4, pc}

90011c98 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011c98:	6903      	ldr	r3, [r0, #16]
90011c9a:	6882      	ldr	r2, [r0, #8]
90011c9c:	f3bf 8f5b 	dmb	ish
90011ca0:	3301      	adds	r3, #1
90011ca2:	429a      	cmp	r2, r3
90011ca4:	bfd8      	it	le
90011ca6:	1a9b      	suble	r3, r3, r2
90011ca8:	6103      	str	r3, [r0, #16]
90011caa:	4770      	bx	lr

90011cac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90011cac:	b570      	push	{r4, r5, r6, lr}
90011cae:	4604      	mov	r4, r0
90011cb0:	460e      	mov	r6, r1
90011cb2:	6860      	ldr	r0, [r4, #4]
90011cb4:	6803      	ldr	r3, [r0, #0]
90011cb6:	685b      	ldr	r3, [r3, #4]
90011cb8:	4798      	blx	r3
90011cba:	2800      	cmp	r0, #0
90011cbc:	d1f9      	bne.n	90011cb2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90011cbe:	4d0d      	ldr	r5, [pc, #52]	@ (90011cf4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011cc0:	6828      	ldr	r0, [r5, #0]
90011cc2:	6803      	ldr	r3, [r0, #0]
90011cc4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90011cc6:	4798      	blx	r3
90011cc8:	f7f0 fb3e 	bl	90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90011ccc:	6828      	ldr	r0, [r5, #0]
90011cce:	2101      	movs	r1, #1
90011cd0:	f7ff ff12 	bl	90011af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011cd4:	6860      	ldr	r0, [r4, #4]
90011cd6:	4631      	mov	r1, r6
90011cd8:	6803      	ldr	r3, [r0, #0]
90011cda:	689b      	ldr	r3, [r3, #8]
90011cdc:	4798      	blx	r3
90011cde:	6823      	ldr	r3, [r4, #0]
90011ce0:	4620      	mov	r0, r4
90011ce2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ce4:	4798      	blx	r3
90011ce6:	6828      	ldr	r0, [r5, #0]
90011ce8:	6803      	ldr	r3, [r0, #0]
90011cea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011cee:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90011cf0:	4718      	bx	r3
90011cf2:	bf00      	nop
90011cf4:	240234bc 	.word	0x240234bc

90011cf8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011cf8:	b508      	push	{r3, lr}
90011cfa:	f7f0 fb17 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011cfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011d02:	f7f0 bb1b 	b.w	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011d06 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011d06:	b510      	push	{r4, lr}
90011d08:	4604      	mov	r4, r0
90011d0a:	2114      	movs	r1, #20
90011d0c:	f017 ff47 	bl	90029b9e <_ZdlPvj>
90011d10:	4620      	mov	r0, r4
90011d12:	bd10      	pop	{r4, pc}

90011d14 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011d14:	b570      	push	{r4, r5, r6, lr}
90011d16:	4604      	mov	r4, r0
90011d18:	6840      	ldr	r0, [r0, #4]
90011d1a:	6803      	ldr	r3, [r0, #0]
90011d1c:	681b      	ldr	r3, [r3, #0]
90011d1e:	4798      	blx	r3
90011d20:	4605      	mov	r5, r0
90011d22:	b930      	cbnz	r0, 90011d32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011d24:	7a23      	ldrb	r3, [r4, #8]
90011d26:	b123      	cbz	r3, 90011d32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011d28:	6860      	ldr	r0, [r4, #4]
90011d2a:	6803      	ldr	r3, [r0, #0]
90011d2c:	695b      	ldr	r3, [r3, #20]
90011d2e:	4798      	blx	r3
90011d30:	7225      	strb	r5, [r4, #8]
90011d32:	6860      	ldr	r0, [r4, #4]
90011d34:	6803      	ldr	r3, [r0, #0]
90011d36:	681b      	ldr	r3, [r3, #0]
90011d38:	4798      	blx	r3
90011d3a:	b928      	cbnz	r0, 90011d48 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011d3c:	6823      	ldr	r3, [r4, #0]
90011d3e:	4620      	mov	r0, r4
90011d40:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011d42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d46:	4718      	bx	r3
90011d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d4c:	f7f0 bb04 	b.w	90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011d50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011d50:	b510      	push	{r4, lr}
90011d52:	6082      	str	r2, [r0, #8]
90011d54:	2200      	movs	r2, #0
90011d56:	4c03      	ldr	r4, [pc, #12]	@ (90011d64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011d58:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011d5c:	e9c0 4100 	strd	r4, r1, [r0]
90011d60:	bd10      	pop	{r4, pc}
90011d62:	bf00      	nop
90011d64:	9002e208 	.word	0x9002e208

90011d68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011d68:	6840      	ldr	r0, [r0, #4]
90011d6a:	6803      	ldr	r3, [r0, #0]
90011d6c:	681b      	ldr	r3, [r3, #0]
90011d6e:	4718      	bx	r3

90011d70 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011d70:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90011d74:	fb80 0101 	smull	r0, r1, r0, r1
90011d78:	4f21      	ldr	r7, [pc, #132]	@ (90011e00 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90011d7a:	461c      	mov	r4, r3
90011d7c:	4616      	mov	r6, r2
90011d7e:	fba0 bc07 	umull	fp, ip, r0, r7
90011d82:	f89d 5018 	ldrb.w	r5, [sp, #24]
90011d86:	fb07 cc01 	mla	ip, r7, r1, ip
90011d8a:	fbab 010b 	umull	r0, r1, fp, fp
90011d8e:	fb0b f70c 	mul.w	r7, fp, ip
90011d92:	fb00 f30c 	mul.w	r3, r0, ip
90011d96:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90011d9a:	fb0b 3301 	mla	r3, fp, r1, r3
90011d9e:	fba0 010b 	umull	r0, r1, r0, fp
90011da2:	4419      	add	r1, r3
90011da4:	a314      	add	r3, pc, #80	@ (adr r3, 90011df8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90011da6:	e9d3 2300 	ldrd	r2, r3, [r3]
90011daa:	f7ee fca5 	bl	900006f8 <__aeabi_ldivmod>
90011dae:	2ef7      	cmp	r6, #247	@ 0xf7
90011db0:	b290      	uxth	r0, r2
90011db2:	bf9e      	ittt	ls
90011db4:	f002 0207 	andls.w	r2, r2, #7
90011db8:	18b6      	addls	r6, r6, r2
90011dba:	b2f6      	uxtbls	r6, r6
90011dbc:	2cfb      	cmp	r4, #251	@ 0xfb
90011dbe:	bf9e      	ittt	ls
90011dc0:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90011dc4:	18e4      	addls	r4, r4, r3
90011dc6:	b2e4      	uxtbls	r4, r4
90011dc8:	2df7      	cmp	r5, #247	@ 0xf7
90011dca:	bf98      	it	ls
90011dcc:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90011dd0:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90011dd4:	bf98      	it	ls
90011dd6:	182d      	addls	r5, r5, r0
90011dd8:	480a      	ldr	r0, [pc, #40]	@ (90011e04 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
90011dda:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90011dde:	ea00 2006 	and.w	r0, r0, r6, lsl #8
90011de2:	bf98      	it	ls
90011de4:	b2ed      	uxtbls	r5, r5
90011de6:	4304      	orrs	r4, r0
90011de8:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
90011dec:	b280      	uxth	r0, r0
90011dee:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
90011df2:	bf00      	nop
90011df4:	f3af 8000 	nop.w
90011df8:	797a8d77 	.word	0x797a8d77
90011dfc:	00000000 	.word	0x00000000
90011e00:	00ec4ba7 	.word	0x00ec4ba7
90011e04:	fffff800 	.word	0xfffff800

90011e08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90011e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011e0c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011e10:	4605      	mov	r5, r0
90011e12:	ed2d 8b02 	vpush	{d8}
90011e16:	b087      	sub	sp, #28
90011e18:	7c41      	ldrb	r1, [r0, #17]
90011e1a:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
90011e1e:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90011e22:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90011e26:	2900      	cmp	r1, #0
90011e28:	f000 809a 	beq.w	90011f60 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90011e2c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90011e30:	ed90 7a08 	vldr	s14, [r0, #32]
90011e34:	454a      	cmp	r2, r9
90011e36:	68c0      	ldr	r0, [r0, #12]
90011e38:	db25      	blt.n	90011e86 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90011e3a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011e3e:	f640 72fc 	movw	r2, #4092	@ 0xffc
90011e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e46:	bfc8      	it	gt
90011e48:	2200      	movgt	r2, #0
90011e4a:	5882      	ldr	r2, [r0, r2]
90011e4c:	2100      	movs	r1, #0
90011e4e:	ea4f 2812 	mov.w	r8, r2, lsr #8
90011e52:	7c2d      	ldrb	r5, [r5, #16]
90011e54:	0950      	lsrs	r0, r2, #5
90011e56:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90011e5a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90011e5e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90011e62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011e66:	2d00      	cmp	r5, #0
90011e68:	d044      	beq.n	90011ef4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011e6a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011e6e:	d141      	bne.n	90011ef4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011e70:	bb61      	cbnz	r1, 90011ecc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90011e72:	ea4e 0000 	orr.w	r0, lr, r0
90011e76:	ea4c 0500 	orr.w	r5, ip, r0
90011e7a:	42bc      	cmp	r4, r7
90011e7c:	f080 8214 	bcs.w	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011e80:	f824 5b02 	strh.w	r5, [r4], #2
90011e84:	e7f9      	b.n	90011e7a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90011e86:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
90011e8a:	454f      	cmp	r7, r9
90011e8c:	dc08      	bgt.n	90011ea0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90011e8e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011e92:	f640 72fc 	movw	r2, #4092	@ 0xffc
90011e96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e9a:	bfd8      	it	le
90011e9c:	2200      	movle	r2, #0
90011e9e:	e7d4      	b.n	90011e4a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011ea0:	eba9 0202 	sub.w	r2, r9, r2
90011ea4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011ea8:	ee07 2a90 	vmov	s15, r2
90011eac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011eb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011eb4:	ee67 7a87 	vmul.f32	s15, s15, s14
90011eb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90011ebc:	ee17 2a90 	vmov	r2, s15
90011ec0:	bfd8      	it	le
90011ec2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90011ec6:	0092      	lsls	r2, r2, #2
90011ec8:	5882      	ldr	r2, [r0, r2]
90011eca:	e7c0      	b.n	90011e4e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
90011ecc:	b2d5      	uxtb	r5, r2
90011ece:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90011ed2:	fa5f f888 	uxtb.w	r8, r8
90011ed6:	461e      	mov	r6, r3
90011ed8:	42bc      	cmp	r4, r7
90011eda:	f080 81e5 	bcs.w	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011ede:	4630      	mov	r0, r6
90011ee0:	9500      	str	r5, [sp, #0]
90011ee2:	4643      	mov	r3, r8
90011ee4:	4652      	mov	r2, sl
90011ee6:	4649      	mov	r1, r9
90011ee8:	3601      	adds	r6, #1
90011eea:	f7ff ff41 	bl	90011d70 <_ZN8touchgfxL10applyNoiseEiihhh>
90011eee:	f824 0b02 	strh.w	r0, [r4], #2
90011ef2:	e7f1      	b.n	90011ed8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
90011ef4:	0e12      	lsrs	r2, r2, #24
90011ef6:	26ff      	movs	r6, #255	@ 0xff
90011ef8:	fb02 f20a 	mul.w	r2, r2, sl
90011efc:	1c53      	adds	r3, r2, #1
90011efe:	eb03 2222 	add.w	r2, r3, r2, asr #8
90011f02:	1212      	asrs	r2, r2, #8
90011f04:	fb02 f50c 	mul.w	r5, r2, ip
90011f08:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 900122bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011f0c:	fb02 f10e 	mul.w	r1, r2, lr
90011f10:	4350      	muls	r0, r2
90011f12:	43d2      	mvns	r2, r2
90011f14:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011f18:	42bc      	cmp	r4, r7
90011f1a:	f080 81c5 	bcs.w	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011f1e:	f8b4 e000 	ldrh.w	lr, [r4]
90011f22:	ea0e 030c 	and.w	r3, lr, ip
90011f26:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011f2a:	f00e 0e1f 	and.w	lr, lr, #31
90011f2e:	fb02 1303 	mla	r3, r2, r3, r1
90011f32:	fb02 0808 	mla	r8, r2, r8, r0
90011f36:	fb02 5e0e 	mla	lr, r2, lr, r5
90011f3a:	fb93 f3f6 	sdiv	r3, r3, r6
90011f3e:	fb98 f8f6 	sdiv	r8, r8, r6
90011f42:	fb9e fef6 	sdiv	lr, lr, r6
90011f46:	ea03 030c 	and.w	r3, r3, ip
90011f4a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011f4e:	f00e 0e1f 	and.w	lr, lr, #31
90011f52:	ea43 0308 	orr.w	r3, r3, r8
90011f56:	ea43 030e 	orr.w	r3, r3, lr
90011f5a:	f824 3b02 	strh.w	r3, [r4], #2
90011f5e:	e7db      	b.n	90011f18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011f60:	7c82      	ldrb	r2, [r0, #18]
90011f62:	2a00      	cmp	r2, #0
90011f64:	d04f      	beq.n	90012006 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90011f66:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90011f6a:	ee07 2a90 	vmov	s15, r2
90011f6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011f72:	ee07 3a10 	vmov	s14, r3
90011f76:	461f      	mov	r7, r3
90011f78:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90011f7c:	eef4 6ae7 	vcmpe.f32	s13, s15
90011f80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f84:	f200 8095 	bhi.w	900120b2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011f88:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90011f8c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011f90:	68ea      	ldr	r2, [r5, #12]
90011f92:	f895 c010 	ldrb.w	ip, [r5, #16]
90011f96:	ee37 7a87 	vadd.f32	s14, s15, s14
90011f9a:	ee37 7a66 	vsub.f32	s14, s14, s13
90011f9e:	ee06 6a90 	vmov	s13, r6
90011fa2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011fa6:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011fae:	bf4a      	itet	mi
90011fb0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90011fb4:	9602      	strpl	r6, [sp, #8]
90011fb6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90011fba:	ed95 7a08 	vldr	s14, [r5, #32]
90011fbe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011fc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011fc6:	bfc8      	it	gt
90011fc8:	2100      	movgt	r1, #0
90011fca:	5852      	ldr	r2, [r2, r1]
90011fcc:	9902      	ldr	r1, [sp, #8]
90011fce:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90011fd2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90011fd6:	0950      	lsrs	r0, r2, #5
90011fd8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90011fdc:	9103      	str	r1, [sp, #12]
90011fde:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90011fe2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011fe6:	f1bc 0f00 	cmp.w	ip, #0
90011fea:	d024      	beq.n	90012036 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90011fec:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011ff0:	d121      	bne.n	90012036 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90011ff2:	ea4b 0b00 	orr.w	fp, fp, r0
90011ff6:	ea41 010b 	orr.w	r1, r1, fp
90011ffa:	9a03      	ldr	r2, [sp, #12]
90011ffc:	4294      	cmp	r4, r2
90011ffe:	d255      	bcs.n	900120ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90012000:	f824 1b02 	strh.w	r1, [r4], #2
90012004:	e7f9      	b.n	90011ffa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
90012006:	ee07 9a10 	vmov	s14, r9
9001200a:	edd0 7a06 	vldr	s15, [r0, #24]
9001200e:	edd0 6a05 	vldr	s13, [r0, #20]
90012012:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012016:	ee37 7a67 	vsub.f32	s14, s14, s15
9001201a:	eec7 7a26 	vdiv.f32	s15, s14, s13
9001201e:	ed90 7a08 	vldr	s14, [r0, #32]
90012022:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001202a:	bf44      	itt	mi
9001202c:	ed90 7a07 	vldrmi	s14, [r0, #28]
90012030:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90012034:	e79d      	b.n	90011f72 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90012036:	0e12      	lsrs	r2, r2, #24
90012038:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 900122bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001203c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90012040:	fb02 f20a 	mul.w	r2, r2, sl
90012044:	f102 0c01 	add.w	ip, r2, #1
90012048:	eb0c 2222 	add.w	r2, ip, r2, asr #8
9001204c:	1212      	asrs	r2, r2, #8
9001204e:	4350      	muls	r0, r2
90012050:	4351      	muls	r1, r2
90012052:	fb02 fb0b 	mul.w	fp, r2, fp
90012056:	43d2      	mvns	r2, r2
90012058:	9004      	str	r0, [sp, #16]
9001205a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001205e:	9105      	str	r1, [sp, #20]
90012060:	9903      	ldr	r1, [sp, #12]
90012062:	428c      	cmp	r4, r1
90012064:	d222      	bcs.n	900120ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90012066:	8820      	ldrh	r0, [r4, #0]
90012068:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001206c:	ea00 0c08 	and.w	ip, r0, r8
90012070:	460f      	mov	r7, r1
90012072:	9904      	ldr	r1, [sp, #16]
90012074:	fb02 bc0c 	mla	ip, r2, ip, fp
90012078:	fb02 1107 	mla	r1, r2, r7, r1
9001207c:	fb9c fcfe 	sdiv	ip, ip, lr
90012080:	fb91 f1fe 	sdiv	r1, r1, lr
90012084:	ea0c 0c08 	and.w	ip, ip, r8
90012088:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001208c:	ea4c 0101 	orr.w	r1, ip, r1
90012090:	f000 0c1f 	and.w	ip, r0, #31
90012094:	9805      	ldr	r0, [sp, #20]
90012096:	fb02 0c0c 	mla	ip, r2, ip, r0
9001209a:	fb9c fcfe 	sdiv	ip, ip, lr
9001209e:	f00c 0c1f 	and.w	ip, ip, #31
900120a2:	ea41 010c 	orr.w	r1, r1, ip
900120a6:	f824 1b02 	strh.w	r1, [r4], #2
900120aa:	e7d9      	b.n	90012060 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
900120ac:	9a02      	ldr	r2, [sp, #8]
900120ae:	441a      	add	r2, r3
900120b0:	4617      	mov	r7, r2
900120b2:	441e      	add	r6, r3
900120b4:	b236      	sxth	r6, r6
900120b6:	42be      	cmp	r6, r7
900120b8:	f340 80f6 	ble.w	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900120bc:	ed95 7a07 	vldr	s14, [r5, #28]
900120c0:	ee06 7a90 	vmov	s13, r7
900120c4:	ee37 7a87 	vadd.f32	s14, s15, s14
900120c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900120cc:	eeb4 7ae6 	vcmpe.f32	s14, s13
900120d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900120d4:	f340 80b2 	ble.w	9001223c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900120d8:	ee06 6a10 	vmov	s12, r6
900120dc:	ee76 7ae7 	vsub.f32	s15, s13, s15
900120e0:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 900122b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900120e4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900120e8:	7c2b      	ldrb	r3, [r5, #16]
900120ea:	eeb4 7ac6 	vcmpe.f32	s14, s12
900120ee:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 900122b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900120f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900120f6:	bfd6      	itet	le
900120f8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900120fc:	46b0      	movgt	r8, r6
900120fe:	ee17 8a10 	vmovle	r8, s14
90012102:	ed95 7a08 	vldr	s14, [r5, #32]
90012106:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001210a:	eba8 0707 	sub.w	r7, r8, r7
9001210e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90012112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012116:	fe38 8a06 	vselgt.f32	s16, s16, s12
9001211a:	eea7 8a27 	vfma.f32	s16, s14, s15
9001211e:	b1db      	cbz	r3, 90012158 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90012120:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90012124:	d118      	bne.n	90012158 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90012126:	42bc      	cmp	r4, r7
90012128:	d262      	bcs.n	900121f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001212a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
9001212e:	68eb      	ldr	r3, [r5, #12]
90012130:	4649      	mov	r1, r9
90012132:	ee17 0a90 	vmov	r0, s15
90012136:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
9001213a:	b2d3      	uxtb	r3, r2
9001213c:	9300      	str	r3, [sp, #0]
9001213e:	f3c2 2307 	ubfx	r3, r2, #8, #8
90012142:	f3c2 4207 	ubfx	r2, r2, #16, #8
90012146:	f7ff fe13 	bl	90011d70 <_ZN8touchgfxL10applyNoiseEiihhh>
9001214a:	f824 0b02 	strh.w	r0, [r4], #2
9001214e:	edd5 7a08 	vldr	s15, [r5, #32]
90012152:	ee38 8a27 	vadd.f32	s16, s16, s15
90012156:	e7e6      	b.n	90012126 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90012158:	f8df b160 	ldr.w	fp, [pc, #352]	@ 900122bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001215c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90012160:	42bc      	cmp	r4, r7
90012162:	d245      	bcs.n	900121f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90012164:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012168:	68eb      	ldr	r3, [r5, #12]
9001216a:	f8b4 e000 	ldrh.w	lr, [r4]
9001216e:	ee17 2a90 	vmov	r2, s15
90012172:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90012176:	0e13      	lsrs	r3, r2, #24
90012178:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001217c:	fb03 f30a 	mul.w	r3, r3, sl
90012180:	b289      	uxth	r1, r1
90012182:	1c58      	adds	r0, r3, #1
90012184:	eb00 2023 	add.w	r0, r0, r3, asr #8
90012188:	ea0e 030b 	and.w	r3, lr, fp
9001218c:	1200      	asrs	r0, r0, #8
9001218e:	ea6f 0c00 	mvn.w	ip, r0
90012192:	fa5f fc8c 	uxtb.w	ip, ip
90012196:	fb0c f303 	mul.w	r3, ip, r3
9001219a:	fb00 3101 	mla	r1, r0, r1, r3
9001219e:	fb91 f1f9 	sdiv	r1, r1, r9
900121a2:	ea01 030b 	and.w	r3, r1, fp
900121a6:	9302      	str	r3, [sp, #8]
900121a8:	0953      	lsrs	r3, r2, #5
900121aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900121ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900121b2:	4619      	mov	r1, r3
900121b4:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
900121b8:	f00e 0e1f 	and.w	lr, lr, #31
900121bc:	fb0c f303 	mul.w	r3, ip, r3
900121c0:	fb0c fc0e 	mul.w	ip, ip, lr
900121c4:	fb00 3301 	mla	r3, r0, r1, r3
900121c8:	9902      	ldr	r1, [sp, #8]
900121ca:	fb00 c002 	mla	r0, r0, r2, ip
900121ce:	fb93 f3f9 	sdiv	r3, r3, r9
900121d2:	fb90 f0f9 	sdiv	r0, r0, r9
900121d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900121da:	f000 001f 	and.w	r0, r0, #31
900121de:	4319      	orrs	r1, r3
900121e0:	4301      	orrs	r1, r0
900121e2:	f824 1b02 	strh.w	r1, [r4], #2
900121e6:	edd5 7a08 	vldr	s15, [r5, #32]
900121ea:	ee38 8a27 	vadd.f32	s16, s16, s15
900121ee:	e7b7      	b.n	90012160 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900121f0:	4546      	cmp	r6, r8
900121f2:	dd59      	ble.n	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900121f4:	edd5 7a08 	vldr	s15, [r5, #32]
900121f8:	f640 73fc 	movw	r3, #4092	@ 0xffc
900121fc:	68ea      	ldr	r2, [r5, #12]
900121fe:	eba6 0608 	sub.w	r6, r6, r8
90012202:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012206:	7c29      	ldrb	r1, [r5, #16]
90012208:	eb04 0646 	add.w	r6, r4, r6, lsl #1
9001220c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012210:	bfd8      	it	le
90012212:	2300      	movle	r3, #0
90012214:	58d2      	ldr	r2, [r2, r3]
90012216:	0a10      	lsrs	r0, r2, #8
90012218:	f3c2 07c4 	ubfx	r7, r2, #3, #5
9001221c:	0953      	lsrs	r3, r2, #5
9001221e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90012222:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90012226:	b159      	cbz	r1, 90012240 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90012228:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001222c:	d108      	bne.n	90012240 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
9001222e:	4318      	orrs	r0, r3
90012230:	4338      	orrs	r0, r7
90012232:	42b4      	cmp	r4, r6
90012234:	d238      	bcs.n	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012236:	f824 0b02 	strh.w	r0, [r4], #2
9001223a:	e7fa      	b.n	90012232 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
9001223c:	46b8      	mov	r8, r7
9001223e:	e7d9      	b.n	900121f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90012240:	0e12      	lsrs	r2, r2, #24
90012242:	f8df c078 	ldr.w	ip, [pc, #120]	@ 900122bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90012246:	fb02 f10a 	mul.w	r1, r2, sl
9001224a:	1c4a      	adds	r2, r1, #1
9001224c:	eb02 2221 	add.w	r2, r2, r1, asr #8
90012250:	1212      	asrs	r2, r2, #8
90012252:	fb02 f507 	mul.w	r5, r2, r7
90012256:	27ff      	movs	r7, #255	@ 0xff
90012258:	4350      	muls	r0, r2
9001225a:	4353      	muls	r3, r2
9001225c:	43d2      	mvns	r2, r2
9001225e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90012262:	42b4      	cmp	r4, r6
90012264:	d220      	bcs.n	900122a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012266:	f8b4 e000 	ldrh.w	lr, [r4]
9001226a:	ea0e 010c 	and.w	r1, lr, ip
9001226e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90012272:	f00e 0e1f 	and.w	lr, lr, #31
90012276:	fb02 0101 	mla	r1, r2, r1, r0
9001227a:	fb02 3808 	mla	r8, r2, r8, r3
9001227e:	fb02 5e0e 	mla	lr, r2, lr, r5
90012282:	fb91 f1f7 	sdiv	r1, r1, r7
90012286:	fb98 f8f7 	sdiv	r8, r8, r7
9001228a:	fb9e fef7 	sdiv	lr, lr, r7
9001228e:	ea01 010c 	and.w	r1, r1, ip
90012292:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90012296:	f00e 0e1f 	and.w	lr, lr, #31
9001229a:	ea41 0108 	orr.w	r1, r1, r8
9001229e:	ea41 010e 	orr.w	r1, r1, lr
900122a2:	f824 1b02 	strh.w	r1, [r4], #2
900122a6:	e7dc      	b.n	90012262 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
900122a8:	b007      	add	sp, #28
900122aa:	ecbd 8b02 	vpop	{d8}
900122ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900122b2:	bf00      	nop
900122b4:	00000000 	.word	0x00000000
900122b8:	447ffffe 	.word	0x447ffffe
900122bc:	fffff800 	.word	0xfffff800

900122c0 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
900122c0:	4770      	bx	lr

900122c2 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
900122c2:	4770      	bx	lr

900122c4 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
900122c4:	b510      	push	{r4, lr}
900122c6:	4604      	mov	r4, r0
900122c8:	2124      	movs	r1, #36	@ 0x24
900122ca:	f017 fc68 	bl	90029b9e <_ZdlPvj>
900122ce:	4620      	mov	r0, r4
900122d0:	bd10      	pop	{r4, pc}
	...

900122d4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900122d4:	094a      	lsrs	r2, r1, #5
900122d6:	4b06      	ldr	r3, [pc, #24]	@ (900122f0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900122d8:	60c1      	str	r1, [r0, #12]
900122da:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900122de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900122e2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900122e6:	4313      	orrs	r3, r2
900122e8:	4319      	orrs	r1, r3
900122ea:	8201      	strh	r1, [r0, #16]
900122ec:	4770      	bx	lr
900122ee:	bf00      	nop
900122f0:	fffff800 	.word	0xfffff800

900122f4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900122f4:	f1a0 0008 	sub.w	r0, r0, #8
900122f8:	e7ec      	b.n	900122d4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900122fa:	bf00      	nop

900122fc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900122fc:	b508      	push	{r3, lr}
900122fe:	4b05      	ldr	r3, [pc, #20]	@ (90012314 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90012300:	6818      	ldr	r0, [r3, #0]
90012302:	6803      	ldr	r3, [r0, #0]
90012304:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
90012308:	4798      	blx	r3
9001230a:	1e43      	subs	r3, r0, #1
9001230c:	4258      	negs	r0, r3
9001230e:	4158      	adcs	r0, r3
90012310:	bd08      	pop	{r3, pc}
90012312:	bf00      	nop
90012314:	240234bc 	.word	0x240234bc

90012318 <_ZN8touchgfx13PainterRGB565D1Ev>:
90012318:	4770      	bx	lr

9001231a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
9001231a:	3808      	subs	r0, #8
9001231c:	4770      	bx	lr

9001231e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
9001231e:	b430      	push	{r4, r5}
90012320:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90012324:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90012328:	8a02      	ldrh	r2, [r0, #16]
9001232a:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001232e:	4629      	mov	r1, r5
90012330:	9202      	str	r2, [sp, #8]
90012332:	68c2      	ldr	r2, [r0, #12]
90012334:	4620      	mov	r0, r4
90012336:	bc30      	pop	{r4, r5}
90012338:	f7f0 bb04 	b.w	90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

9001233c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
9001233c:	f7f0 bade 	b.w	900028fc <_ZN8touchgfx5paint8tearDownEv>

90012340 <_ZN8touchgfx13PainterRGB565D0Ev>:
90012340:	b510      	push	{r4, lr}
90012342:	4604      	mov	r4, r0
90012344:	2114      	movs	r1, #20
90012346:	f017 fc2a 	bl	90029b9e <_ZdlPvj>
9001234a:	4620      	mov	r0, r4
9001234c:	bd10      	pop	{r4, pc}

9001234e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
9001234e:	f1a0 0008 	sub.w	r0, r0, #8
90012352:	e7f5      	b.n	90012340 <_ZN8touchgfx13PainterRGB565D0Ev>

90012354 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90012354:	2300      	movs	r3, #0
90012356:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012358:	8503      	strh	r3, [r0, #40]	@ 0x28
9001235a:	8543      	strh	r3, [r0, #42]	@ 0x2a
9001235c:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001235e:	6980      	ldr	r0, [r0, #24]
90012360:	b110      	cbz	r0, 90012368 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90012362:	6803      	ldr	r3, [r0, #0]
90012364:	691b      	ldr	r3, [r3, #16]
90012366:	4718      	bx	r3
90012368:	4770      	bx	lr

9001236a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
9001236a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
9001236e:	4770      	bx	lr

90012370 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90012370:	b538      	push	{r3, r4, r5, lr}
90012372:	0e0b      	lsrs	r3, r1, #24
90012374:	4604      	mov	r4, r0
90012376:	460d      	mov	r5, r1
90012378:	7783      	strb	r3, [r0, #30]
9001237a:	6803      	ldr	r3, [r0, #0]
9001237c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001237e:	4798      	blx	r3
90012380:	6803      	ldr	r3, [r0, #0]
90012382:	4629      	mov	r1, r5
90012384:	689b      	ldr	r3, [r3, #8]
90012386:	4798      	blx	r3
90012388:	6823      	ldr	r3, [r4, #0]
9001238a:	4620      	mov	r0, r4
9001238c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001238e:	4798      	blx	r3
90012390:	61a0      	str	r0, [r4, #24]
90012392:	bd38      	pop	{r3, r4, r5, pc}

90012394 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90012394:	7741      	strb	r1, [r0, #29]
90012396:	4770      	bx	lr

90012398 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90012398:	b530      	push	{r4, r5, lr}
9001239a:	460d      	mov	r5, r1
9001239c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
900123a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900123a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900123a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900123a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900123a8:	682b      	ldr	r3, [r5, #0]
900123aa:	6023      	str	r3, [r4, #0]
900123ac:	bd30      	pop	{r4, r5, pc}

900123ae <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
900123ae:	b538      	push	{r3, r4, r5, lr}
900123b0:	4604      	mov	r4, r0
900123b2:	1d03      	adds	r3, r0, #4
900123b4:	6808      	ldr	r0, [r1, #0]
900123b6:	2500      	movs	r5, #0
900123b8:	6849      	ldr	r1, [r1, #4]
900123ba:	c303      	stmia	r3!, {r0, r1}
900123bc:	6813      	ldr	r3, [r2, #0]
900123be:	f104 0034 	add.w	r0, r4, #52	@ 0x34
900123c2:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
900123c6:	6853      	ldr	r3, [r2, #4]
900123c8:	61a5      	str	r5, [r4, #24]
900123ca:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
900123ce:	f006 fabf 	bl	90018950 <_ZN8touchgfx9Matrix3x35resetEv>
900123d2:	23ff      	movs	r3, #255	@ 0xff
900123d4:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900123d8:	7763      	strb	r3, [r4, #29]
900123da:	77a3      	strb	r3, [r4, #30]
900123dc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900123e0:	6323      	str	r3, [r4, #48]	@ 0x30
900123e2:	2301      	movs	r3, #1
900123e4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900123e8:	bd38      	pop	{r3, r4, r5, pc}
	...

900123ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900123ec:	ee70 7a41 	vsub.f32	s15, s0, s2
900123f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900123f4:	eef5 7a40 	vcmp.f32	s15, #0.0
900123f8:	4605      	mov	r5, r0
900123fa:	ed2d 8b0a 	vpush	{d8-d12}
900123fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012402:	b086      	sub	sp, #24
90012404:	eeb0 ba40 	vmov.f32	s22, s0
90012408:	6802      	ldr	r2, [r0, #0]
9001240a:	eef0 ba60 	vmov.f32	s23, s1
9001240e:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
90012412:	eef0 aa41 	vmov.f32	s21, s2
90012416:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
90012418:	eeb0 aa61 	vmov.f32	s20, s3
9001241c:	eeb0 ca42 	vmov.f32	s24, s4
90012420:	eef0 ca62 	vmov.f32	s25, s5
90012424:	d112      	bne.n	9001244c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90012426:	ee70 7ae1 	vsub.f32	s15, s1, s3
9001242a:	eef5 7a40 	vcmp.f32	s15, #0.0
9001242e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012432:	d10b      	bne.n	9001244c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90012434:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90012438:	6a92      	ldr	r2, [r2, #40]	@ 0x28
9001243a:	3901      	subs	r1, #1
9001243c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90012440:	b006      	add	sp, #24
90012442:	ecbd 8b0a 	vpop	{d8-d12}
90012446:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9001244a:	4710      	bx	r2
9001244c:	23ff      	movs	r3, #255	@ 0xff
9001244e:	4628      	mov	r0, r5
90012450:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90012454:	77ab      	strb	r3, [r5, #30]
90012456:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90012458:	4798      	blx	r3
9001245a:	eeb0 0a4b 	vmov.f32	s0, s22
9001245e:	eef0 0a6b 	vmov.f32	s1, s23
90012462:	4604      	mov	r4, r0
90012464:	4640      	mov	r0, r8
90012466:	f006 fb22 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001246a:	eef0 8a40 	vmov.f32	s17, s0
9001246e:	ed8d 0a00 	vstr	s0, [sp]
90012472:	eeb0 0a6a 	vmov.f32	s0, s21
90012476:	eef0 9a60 	vmov.f32	s19, s1
9001247a:	edcd 0a01 	vstr	s1, [sp, #4]
9001247e:	4640      	mov	r0, r8
90012480:	eef0 0a4a 	vmov.f32	s1, s20
90012484:	f006 fb13 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012488:	eef4 8a40 	vcmp.f32	s17, s0
9001248c:	eeb0 8a40 	vmov.f32	s16, s0
90012490:	ed8d 0a02 	vstr	s0, [sp, #8]
90012494:	eeb0 9a60 	vmov.f32	s18, s1
90012498:	edcd 0a03 	vstr	s1, [sp, #12]
9001249c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124a0:	eef4 9a60 	vcmp.f32	s19, s1
900124a4:	bf0c      	ite	eq
900124a6:	2301      	moveq	r3, #1
900124a8:	2300      	movne	r3, #0
900124aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124ae:	eef4 8a40 	vcmp.f32	s17, s0
900124b2:	7463      	strb	r3, [r4, #17]
900124b4:	bf0c      	ite	eq
900124b6:	2301      	moveq	r3, #1
900124b8:	2300      	movne	r3, #0
900124ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124be:	74a3      	strb	r3, [r4, #18]
900124c0:	d024      	beq.n	9001250c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
900124c2:	eef4 9a60 	vcmp.f32	s19, s1
900124c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124ca:	d01f      	beq.n	9001250c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
900124cc:	ee3a aa6b 	vsub.f32	s20, s20, s23
900124d0:	4640      	mov	r0, r8
900124d2:	ee7a aacb 	vsub.f32	s21, s21, s22
900124d6:	eeb0 0a4b 	vmov.f32	s0, s22
900124da:	eeca 7a2c 	vdiv.f32	s15, s20, s25
900124de:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
900124e2:	eef0 0a6b 	vmov.f32	s1, s23
900124e6:	eea7 0acc 	vfms.f32	s0, s15, s24
900124ea:	eeec 0a87 	vfma.f32	s1, s25, s14
900124ee:	f006 fade 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900124f2:	ed8d 0a04 	vstr	s0, [sp, #16]
900124f6:	ee30 0a68 	vsub.f32	s0, s0, s17
900124fa:	eeb5 0a40 	vcmp.f32	s0, #0.0
900124fe:	edcd 0a05 	vstr	s1, [sp, #20]
90012502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012506:	d121      	bne.n	9001254c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
90012508:	2301      	movs	r3, #1
9001250a:	74a3      	strb	r3, [r4, #18]
9001250c:	7c63      	ldrb	r3, [r4, #17]
9001250e:	2b00      	cmp	r3, #0
90012510:	d051      	beq.n	900125b6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
90012512:	ee39 7a69 	vsub.f32	s14, s18, s19
90012516:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 9001260c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
9001251a:	eef4 9ac9 	vcmpe.f32	s19, s18
9001251e:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012526:	edc4 7a08 	vstr	s15, [r4, #32]
9001252a:	eefd 7ac9 	vcvt.s32.f32	s15, s18
9001252e:	ee17 3a90 	vmov	r3, s15
90012532:	eefd 7ae9 	vcvt.s32.f32	s15, s19
90012536:	b21a      	sxth	r2, r3
90012538:	ee17 3a90 	vmov	r3, s15
9001253c:	bf48      	it	mi
9001253e:	8122      	strhmi	r2, [r4, #8]
90012540:	b21b      	sxth	r3, r3
90012542:	bf56      	itet	pl
90012544:	80e2      	strhpl	r2, [r4, #6]
90012546:	80e3      	strhmi	r3, [r4, #6]
90012548:	8123      	strhpl	r3, [r4, #8]
9001254a:	e02c      	b.n	900125a6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001254c:	ee70 0ae9 	vsub.f32	s1, s1, s19
90012550:	eec0 7a80 	vdiv.f32	s15, s1, s0
90012554:	eef5 7a40 	vcmp.f32	s15, #0.0
90012558:	edc4 7a05 	vstr	s15, [r4, #20]
9001255c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012560:	d102      	bne.n	90012568 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90012562:	2301      	movs	r3, #1
90012564:	7463      	strb	r3, [r4, #17]
90012566:	e7d1      	b.n	9001250c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90012568:	eeb0 7a69 	vmov.f32	s14, s19
9001256c:	ee39 9a69 	vsub.f32	s18, s18, s19
90012570:	ee38 8a68 	vsub.f32	s16, s16, s17
90012574:	eea8 7ae7 	vfms.f32	s14, s17, s15
90012578:	ed84 7a06 	vstr	s14, [r4, #24]
9001257c:	ee89 7a27 	vdiv.f32	s14, s18, s15
90012580:	ee38 8a47 	vsub.f32	s16, s16, s14
90012584:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 90012610 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90012588:	eec7 7a08 	vdiv.f32	s15, s14, s16
9001258c:	ed84 8a07 	vstr	s16, [r4, #28]
90012590:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90012594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012598:	edc4 7a08 	vstr	s15, [r4, #32]
9001259c:	d503      	bpl.n	900125a6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001259e:	eeb1 8a48 	vneg.f32	s16, s16
900125a2:	ed84 8a07 	vstr	s16, [r4, #28]
900125a6:	60e7      	str	r7, [r4, #12]
900125a8:	7426      	strb	r6, [r4, #16]
900125aa:	61ac      	str	r4, [r5, #24]
900125ac:	b006      	add	sp, #24
900125ae:	ecbd 8b0a 	vpop	{d8-d12}
900125b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900125b6:	7ca3      	ldrb	r3, [r4, #18]
900125b8:	2b00      	cmp	r3, #0
900125ba:	d0f4      	beq.n	900125a6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900125bc:	ee38 7a68 	vsub.f32	s14, s16, s17
900125c0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 9001260c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
900125c4:	eef4 8ac8 	vcmpe.f32	s17, s16
900125c8:	eec6 7a87 	vdiv.f32	s15, s13, s14
900125cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900125d0:	edc4 7a08 	vstr	s15, [r4, #32]
900125d4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900125d8:	ee17 3a90 	vmov	r3, s15
900125dc:	eefd 7ae8 	vcvt.s32.f32	s15, s17
900125e0:	b21a      	sxth	r2, r3
900125e2:	ee17 3a90 	vmov	r3, s15
900125e6:	bf48      	it	mi
900125e8:	8122      	strhmi	r2, [r4, #8]
900125ea:	b21b      	sxth	r3, r3
900125ec:	bf56      	itet	pl
900125ee:	80e2      	strhpl	r2, [r4, #6]
900125f0:	80e3      	strhmi	r3, [r4, #6]
900125f2:	8123      	strhpl	r3, [r4, #8]
900125f4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900125f8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
900125fc:	1a9b      	subs	r3, r3, r2
900125fe:	ee07 3a90 	vmov	s15, r3
90012602:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012606:	edc4 7a07 	vstr	s15, [r4, #28]
9001260a:	e7cc      	b.n	900125a6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001260c:	447ffffe 	.word	0x447ffffe
90012610:	44800000 	.word	0x44800000

90012614 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90012614:	b510      	push	{r4, lr}
90012616:	ed2d 8b02 	vpush	{d8}
9001261a:	eef0 8a62 	vmov.f32	s17, s5
9001261e:	2100      	movs	r1, #0
90012620:	4604      	mov	r4, r0
90012622:	eeb0 8a42 	vmov.f32	s16, s4
90012626:	f017 f84b 	bl	900296c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9001262a:	eef0 7a68 	vmov.f32	s15, s17
9001262e:	6823      	ldr	r3, [r4, #0]
90012630:	4620      	mov	r0, r4
90012632:	689b      	ldr	r3, [r3, #8]
90012634:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012638:	ee17 2a90 	vmov	r2, s15
9001263c:	eef0 7a48 	vmov.f32	s15, s16
90012640:	ecbd 8b02 	vpop	{d8}
90012644:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012648:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001264c:	ee17 1a90 	vmov	r1, s15
90012650:	4718      	bx	r3

90012652 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90012652:	b510      	push	{r4, lr}
90012654:	ed2d 8b02 	vpush	{d8}
90012658:	eef0 8a63 	vmov.f32	s17, s7
9001265c:	2100      	movs	r1, #0
9001265e:	4604      	mov	r4, r0
90012660:	eeb0 8a43 	vmov.f32	s16, s6
90012664:	f017 f8ee 	bl	90029844 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90012668:	eef0 7a68 	vmov.f32	s15, s17
9001266c:	6823      	ldr	r3, [r4, #0]
9001266e:	4620      	mov	r0, r4
90012670:	689b      	ldr	r3, [r3, #8]
90012672:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012676:	ee17 2a90 	vmov	r2, s15
9001267a:	eef0 7a48 	vmov.f32	s15, s16
9001267e:	ecbd 8b02 	vpop	{d8}
90012682:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001268a:	ee17 1a90 	vmov	r1, s15
9001268e:	4718      	bx	r3

90012690 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90012690:	b513      	push	{r0, r1, r4, lr}
90012692:	4604      	mov	r4, r0
90012694:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012696:	f006 fa0a 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001269a:	eef0 7a60 	vmov.f32	s15, s1
9001269e:	4620      	mov	r0, r4
900126a0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900126a4:	ee17 2a90 	vmov	r2, s15
900126a8:	eef0 7a40 	vmov.f32	s15, s0
900126ac:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900126b0:	ee17 1a90 	vmov	r1, s15
900126b4:	b002      	add	sp, #8
900126b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900126ba:	f016 bf5b 	b.w	90029574 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
900126be:	b513      	push	{r0, r1, r4, lr}
900126c0:	4604      	mov	r4, r0
900126c2:	6f40      	ldr	r0, [r0, #116]	@ 0x74
900126c4:	f006 f9f3 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900126c8:	eef0 7a60 	vmov.f32	s15, s1
900126cc:	4620      	mov	r0, r4
900126ce:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900126d2:	ee17 2a90 	vmov	r2, s15
900126d6:	eef0 7a40 	vmov.f32	s15, s0
900126da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900126de:	ee17 1a90 	vmov	r1, s15
900126e2:	b002      	add	sp, #8
900126e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900126e8:	f016 bf91 	b.w	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

900126ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
900126ec:	b5f0      	push	{r4, r5, r6, r7, lr}
900126ee:	2400      	movs	r4, #0
900126f0:	9f07      	ldr	r7, [sp, #28]
900126f2:	f04f 0e01 	mov.w	lr, #1
900126f6:	4626      	mov	r6, r4
900126f8:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
900126fc:	4463      	add	r3, ip
900126fe:	4563      	cmp	r3, ip
90012700:	d02d      	beq.n	9001275e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90012702:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90012706:	2d06      	cmp	r5, #6
90012708:	d8f9      	bhi.n	900126fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001270a:	fa0e f505 	lsl.w	r5, lr, r5
9001270e:	f015 0f66 	tst.w	r5, #102	@ 0x66
90012712:	d10d      	bne.n	90012730 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90012714:	f015 0f10 	tst.w	r5, #16
90012718:	d117      	bne.n	9001274a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
9001271a:	072d      	lsls	r5, r5, #28
9001271c:	d5ef      	bpl.n	900126fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001271e:	3801      	subs	r0, #1
90012720:	b91e      	cbnz	r6, 9001272a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012722:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90012726:	682d      	ldr	r5, [r5, #0]
90012728:	600d      	str	r5, [r1, #0]
9001272a:	b96c      	cbnz	r4, 90012748 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001272c:	2601      	movs	r6, #1
9001272e:	e7e6      	b.n	900126fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012730:	b926      	cbnz	r6, 9001273c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012732:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90012736:	f853 3c08 	ldr.w	r3, [r3, #-8]
9001273a:	600b      	str	r3, [r1, #0]
9001273c:	b924      	cbnz	r4, 90012748 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001273e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012742:	f850 3c04 	ldr.w	r3, [r0, #-4]
90012746:	6013      	str	r3, [r2, #0]
90012748:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001274a:	3801      	subs	r0, #1
9001274c:	b91c      	cbnz	r4, 90012756 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
9001274e:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90012752:	6824      	ldr	r4, [r4, #0]
90012754:	6014      	str	r4, [r2, #0]
90012756:	2e00      	cmp	r6, #0
90012758:	d1f6      	bne.n	90012748 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001275a:	2401      	movs	r4, #1
9001275c:	e7cf      	b.n	900126fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001275e:	b90e      	cbnz	r6, 90012764 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90012760:	2300      	movs	r3, #0
90012762:	600b      	str	r3, [r1, #0]
90012764:	2c00      	cmp	r4, #0
90012766:	d1ef      	bne.n	90012748 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012768:	2300      	movs	r3, #0
9001276a:	e7ec      	b.n	90012746 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

9001276c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
9001276c:	b538      	push	{r3, r4, r5, lr}
9001276e:	ed2d 8b0a 	vpush	{d8-d12}
90012772:	eef0 ba40 	vmov.f32	s23, s0
90012776:	4604      	mov	r4, r0
90012778:	eeb0 ca60 	vmov.f32	s24, s1
9001277c:	460d      	mov	r5, r1
9001277e:	eef0 aa41 	vmov.f32	s21, s2
90012782:	eeb0 ba61 	vmov.f32	s22, s3
90012786:	eeb0 9a42 	vmov.f32	s18, s4
9001278a:	eef0 9a62 	vmov.f32	s19, s5
9001278e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90012792:	ee7b 8a29 	vadd.f32	s17, s22, s19
90012796:	ee3a 8a89 	vadd.f32	s16, s21, s18
9001279a:	ee68 8a8a 	vmul.f32	s17, s17, s20
9001279e:	ee28 8a0a 	vmul.f32	s16, s16, s20
900127a2:	ee3c 0a68 	vsub.f32	s0, s24, s17
900127a6:	ee7b 7ac8 	vsub.f32	s15, s23, s16
900127aa:	ee20 0a00 	vmul.f32	s0, s0, s0
900127ae:	eea7 0aa7 	vfma.f32	s0, s15, s15
900127b2:	f017 fa1f 	bl	90029bf4 <sqrtf>
900127b6:	eeb5 0a40 	vcmp.f32	s0, #0.0
900127ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127be:	d12e      	bne.n	9001281e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
900127c0:	ee79 7a6a 	vsub.f32	s15, s18, s21
900127c4:	ee39 7acb 	vsub.f32	s14, s19, s22
900127c8:	eeb0 8a6a 	vmov.f32	s16, s21
900127cc:	eef0 8a4b 	vmov.f32	s17, s22
900127d0:	eea7 8a8a 	vfma.f32	s16, s15, s20
900127d4:	eee7 8a0a 	vfma.f32	s17, s14, s20
900127d8:	eea7 8a0a 	vfma.f32	s16, s14, s20
900127dc:	eee7 8aca 	vfms.f32	s17, s15, s20
900127e0:	2d02      	cmp	r5, #2
900127e2:	dc2f      	bgt.n	90012844 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
900127e4:	3501      	adds	r5, #1
900127e6:	eef0 1a4b 	vmov.f32	s3, s22
900127ea:	eeb0 1a6a 	vmov.f32	s2, s21
900127ee:	4620      	mov	r0, r4
900127f0:	4629      	mov	r1, r5
900127f2:	eef0 2a68 	vmov.f32	s5, s17
900127f6:	eeb0 2a48 	vmov.f32	s4, s16
900127fa:	eef0 0a4c 	vmov.f32	s1, s24
900127fe:	eeb0 0a6b 	vmov.f32	s0, s23
90012802:	f7ff ffb3 	bl	9001276c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012806:	eef0 0a68 	vmov.f32	s1, s17
9001280a:	eeb0 0a48 	vmov.f32	s0, s16
9001280e:	4620      	mov	r0, r4
90012810:	f7ff ff55 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012814:	eeb0 ba68 	vmov.f32	s22, s17
90012818:	eef0 aa48 	vmov.f32	s21, s16
9001281c:	e7b9      	b.n	90012792 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
9001281e:	ee38 8a6b 	vsub.f32	s16, s16, s23
90012822:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012826:	ee78 8acc 	vsub.f32	s17, s17, s24
9001282a:	ee28 7a27 	vmul.f32	s14, s16, s15
9001282e:	ee68 7aa7 	vmul.f32	s15, s17, s15
90012832:	ee87 8a00 	vdiv.f32	s16, s14, s0
90012836:	eec7 8a80 	vdiv.f32	s17, s15, s0
9001283a:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001283e:	ee7c 8a28 	vadd.f32	s17, s24, s17
90012842:	e7cd      	b.n	900127e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90012844:	eef0 0a68 	vmov.f32	s1, s17
90012848:	4620      	mov	r0, r4
9001284a:	eeb0 0a48 	vmov.f32	s0, s16
9001284e:	f7ff ff36 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012852:	ecbd 8b0a 	vpop	{d8-d12}
90012856:	bd38      	pop	{r3, r4, r5, pc}

90012858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90012858:	b510      	push	{r4, lr}
9001285a:	ed2d 8b0a 	vpush	{d8-d12}
9001285e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90012862:	4604      	mov	r4, r0
90012864:	eeb0 ca40 	vmov.f32	s24, s0
90012868:	2b02      	cmp	r3, #2
9001286a:	eeb0 9a60 	vmov.f32	s18, s1
9001286e:	eef0 9a41 	vmov.f32	s19, s2
90012872:	eef0 8a61 	vmov.f32	s17, s3
90012876:	eeb0 ba42 	vmov.f32	s22, s4
9001287a:	eef0 ba62 	vmov.f32	s23, s5
9001287e:	eeb0 aa43 	vmov.f32	s20, s6
90012882:	eef0 aa63 	vmov.f32	s21, s7
90012886:	eeb0 8a44 	vmov.f32	s16, s8
9001288a:	eef0 ca64 	vmov.f32	s25, s9
9001288e:	d12c      	bne.n	900128ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90012890:	eef0 0a62 	vmov.f32	s1, s5
90012894:	eeb0 0a42 	vmov.f32	s0, s4
90012898:	f7ff ff11 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001289c:	ee79 9acb 	vsub.f32	s19, s19, s22
900128a0:	ee7a caec 	vsub.f32	s25, s21, s25
900128a4:	ee78 8aeb 	vsub.f32	s17, s17, s23
900128a8:	ee3a 8a48 	vsub.f32	s16, s20, s16
900128ac:	ee69 9aac 	vmul.f32	s19, s19, s25
900128b0:	ee28 8a88 	vmul.f32	s16, s17, s16
900128b4:	eef4 9ac8 	vcmpe.f32	s19, s16
900128b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900128bc:	db0f      	blt.n	900128de <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
900128be:	2101      	movs	r1, #1
900128c0:	eef0 2a6a 	vmov.f32	s5, s21
900128c4:	eeb0 2a4a 	vmov.f32	s4, s20
900128c8:	4620      	mov	r0, r4
900128ca:	eef0 1a6b 	vmov.f32	s3, s23
900128ce:	eeb0 1a4b 	vmov.f32	s2, s22
900128d2:	eef0 0a49 	vmov.f32	s1, s18
900128d6:	eeb0 0a4c 	vmov.f32	s0, s24
900128da:	f7ff ff47 	bl	9001276c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900128de:	eef0 0a6a 	vmov.f32	s1, s21
900128e2:	4620      	mov	r0, r4
900128e4:	eeb0 0a4a 	vmov.f32	s0, s20
900128e8:	e035      	b.n	90012956 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900128ea:	2b01      	cmp	r3, #1
900128ec:	d138      	bne.n	90012960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900128ee:	ee31 4ae2 	vsub.f32	s8, s3, s5
900128f2:	ee33 6a48 	vsub.f32	s12, s6, s16
900128f6:	ee71 7a42 	vsub.f32	s15, s2, s4
900128fa:	ee73 6ae4 	vsub.f32	s13, s7, s9
900128fe:	ee26 7a44 	vnmul.f32	s14, s12, s8
90012902:	eea7 7aa6 	vfma.f32	s14, s15, s13
90012906:	eeb5 7a40 	vcmp.f32	s14, #0.0
9001290a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001290e:	d027      	beq.n	90012960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012910:	ee28 8a63 	vnmul.f32	s16, s16, s7
90012914:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90012918:	eea4 8a83 	vfma.f32	s16, s9, s6
9001291c:	eee1 8a22 	vfma.f32	s17, s2, s5
90012920:	ee68 7a67 	vnmul.f32	s15, s16, s15
90012924:	ee28 8a44 	vnmul.f32	s16, s16, s8
90012928:	eee6 7a28 	vfma.f32	s15, s12, s17
9001292c:	eea6 8aa8 	vfma.f32	s16, s13, s17
90012930:	ee87 0a87 	vdiv.f32	s0, s15, s14
90012934:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90012938:	eec8 0a07 	vdiv.f32	s1, s16, s14
9001293c:	ee3c ca40 	vsub.f32	s24, s24, s0
90012940:	ee39 9a60 	vsub.f32	s18, s18, s1
90012944:	ee29 9a09 	vmul.f32	s18, s18, s18
90012948:	eeac 9a0c 	vfma.f32	s18, s24, s24
9001294c:	eef4 7ac9 	vcmpe.f32	s15, s18
90012950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012954:	db04      	blt.n	90012960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012956:	f7ff feb2 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001295a:	ecbd 8b0a 	vpop	{d8-d12}
9001295e:	bd10      	pop	{r4, pc}
90012960:	eef0 0a6b 	vmov.f32	s1, s23
90012964:	4620      	mov	r0, r4
90012966:	eeb0 0a4b 	vmov.f32	s0, s22
9001296a:	f7ff fea8 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001296e:	e7b6      	b.n	900128de <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90012970:	b510      	push	{r4, lr}
90012972:	ed2d 8b0c 	vpush	{d8-d13}
90012976:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001297a:	4604      	mov	r4, r0
9001297c:	eeb0 9a40 	vmov.f32	s18, s0
90012980:	eef0 9a60 	vmov.f32	s19, s1
90012984:	eef0 aa41 	vmov.f32	s21, s2
90012988:	eeb0 ba61 	vmov.f32	s22, s3
9001298c:	b933      	cbnz	r3, 9001299c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
9001298e:	f7ff fe96 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012992:	eef0 0a4b 	vmov.f32	s1, s22
90012996:	eeb0 0a6a 	vmov.f32	s0, s21
9001299a:	e015      	b.n	900129c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
9001299c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900129a0:	2b02      	cmp	r3, #2
900129a2:	ee71 8a40 	vsub.f32	s17, s2, s0
900129a6:	ee31 8ae0 	vsub.f32	s16, s3, s1
900129aa:	ee68 8aa7 	vmul.f32	s17, s17, s15
900129ae:	ee28 8a27 	vmul.f32	s16, s16, s15
900129b2:	d10f      	bne.n	900129d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
900129b4:	ee70 0ae8 	vsub.f32	s1, s1, s17
900129b8:	ee30 0a08 	vadd.f32	s0, s0, s16
900129bc:	f7ff fe7f 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900129c0:	ee7b 0a68 	vsub.f32	s1, s22, s17
900129c4:	ee3a 0a88 	vadd.f32	s0, s21, s16
900129c8:	4620      	mov	r0, r4
900129ca:	f7ff fe78 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900129ce:	ecbd 8b0c 	vpop	{d8-d13}
900129d2:	bd10      	pop	{r4, pc}
900129d4:	f7ff fe73 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900129d8:	eef0 0a69 	vmov.f32	s1, s19
900129dc:	eeb0 0a49 	vmov.f32	s0, s18
900129e0:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90012b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900129e4:	eeb1 aa68 	vneg.f32	s20, s17
900129e8:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90012b14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900129ec:	eee8 0a27 	vfma.f32	s1, s16, s15
900129f0:	4620      	mov	r0, r4
900129f2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900129f6:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90012b18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900129fa:	eddf ca48 	vldr	s25, [pc, #288]	@ 90012b1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900129fe:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012b20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90012a02:	eeea 0a2b 	vfma.f32	s1, s20, s23
90012a06:	eea8 0a2b 	vfma.f32	s0, s16, s23
90012a0a:	f7ff fe58 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012a0e:	eef0 0a69 	vmov.f32	s1, s19
90012a12:	eeb0 0a49 	vmov.f32	s0, s18
90012a16:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012b24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90012a1a:	4620      	mov	r0, r4
90012a1c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012a20:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012a24:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012a28:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012a2c:	f7ff fe47 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012a30:	eef0 0a69 	vmov.f32	s1, s19
90012a34:	eeb0 0a49 	vmov.f32	s0, s18
90012a38:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90012b28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90012a3c:	4620      	mov	r0, r4
90012a3e:	eee8 0a27 	vfma.f32	s1, s16, s15
90012a42:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012a46:	eeea 0a2c 	vfma.f32	s1, s20, s25
90012a4a:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012a4e:	f7ff fe36 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012a52:	eef0 0a69 	vmov.f32	s1, s19
90012a56:	eeb0 0a49 	vmov.f32	s0, s18
90012a5a:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90012b2c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90012a5e:	4620      	mov	r0, r4
90012a60:	eee8 0a27 	vfma.f32	s1, s16, s15
90012a64:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012a68:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012a6c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012a70:	f7ff fe25 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012a74:	ee79 0a88 	vadd.f32	s1, s19, s16
90012a78:	ee39 0a28 	vadd.f32	s0, s18, s17
90012a7c:	4620      	mov	r0, r4
90012a7e:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012a82:	ee30 0a08 	vadd.f32	s0, s0, s16
90012a86:	f7ff fe1a 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012a8a:	eef0 0a69 	vmov.f32	s1, s19
90012a8e:	eeb0 0a49 	vmov.f32	s0, s18
90012a92:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012b30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90012a96:	4620      	mov	r0, r4
90012a98:	eee8 0a27 	vfma.f32	s1, s16, s15
90012a9c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012aa0:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012aa4:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012aa8:	f7ff fe09 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012aac:	eef0 0a69 	vmov.f32	s1, s19
90012ab0:	eeb0 0a49 	vmov.f32	s0, s18
90012ab4:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012b34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90012ab8:	4620      	mov	r0, r4
90012aba:	eee8 0a27 	vfma.f32	s1, s16, s15
90012abe:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012ac2:	eeea 0a2c 	vfma.f32	s1, s20, s25
90012ac6:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012aca:	f7ff fdf8 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012ace:	eef0 0a69 	vmov.f32	s1, s19
90012ad2:	eeb0 0a49 	vmov.f32	s0, s18
90012ad6:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90012b38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90012ada:	4620      	mov	r0, r4
90012adc:	eee8 0a27 	vfma.f32	s1, s16, s15
90012ae0:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012ae4:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012ae8:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012aec:	f7ff fde7 	bl	900126be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012af0:	eef0 0a69 	vmov.f32	s1, s19
90012af4:	eeb0 0a49 	vmov.f32	s0, s18
90012af8:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90012b3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90012afc:	4620      	mov	r0, r4
90012afe:	eee8 0a27 	vfma.f32	s1, s16, s15
90012b02:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012b06:	eeea 0a2b 	vfma.f32	s1, s20, s23
90012b0a:	eea8 0a2b 	vfma.f32	s0, s16, s23
90012b0e:	e73e      	b.n	9001298e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90012b10:	3d23d70a 	.word	0x3d23d70a
90012b14:	3e8f5c29 	.word	0x3e8f5c29
90012b18:	3f19999a 	.word	0x3f19999a
90012b1c:	3f4ccccd 	.word	0x3f4ccccd
90012b20:	3f75c28f 	.word	0x3f75c28f
90012b24:	3e4ccccd 	.word	0x3e4ccccd
90012b28:	3ecccccd 	.word	0x3ecccccd
90012b2c:	3f3851ec 	.word	0x3f3851ec
90012b30:	3fa3d70a 	.word	0x3fa3d70a
90012b34:	3fcccccd 	.word	0x3fcccccd
90012b38:	3fe66666 	.word	0x3fe66666
90012b3c:	3ffae148 	.word	0x3ffae148

90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90012b40:	b570      	push	{r4, r5, r6, lr}
90012b42:	ed2d 8b06 	vpush	{d8-d10}
90012b46:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012b4a:	eef0 aa40 	vmov.f32	s21, s0
90012b4e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90012b52:	4604      	mov	r4, r0
90012b54:	ee30 8ac8 	vsub.f32	s16, s1, s16
90012b58:	ee30 9a49 	vsub.f32	s18, s0, s18
90012b5c:	eeb0 aa60 	vmov.f32	s20, s1
90012b60:	ee28 0a08 	vmul.f32	s0, s16, s16
90012b64:	eea9 0a09 	vfma.f32	s0, s18, s18
90012b68:	f017 f844 	bl	90029bf4 <sqrtf>
90012b6c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90012b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012b74:	dd36      	ble.n	90012be4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90012b76:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012b7a:	2600      	movs	r6, #0
90012b7c:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90012b80:	eec0 6a27 	vdiv.f32	s13, s0, s15
90012b84:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90012b88:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90012b8c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012b90:	eec8 8a26 	vdiv.f32	s17, s16, s13
90012b94:	ee89 8a26 	vdiv.f32	s16, s18, s13
90012b98:	ee70 9a28 	vadd.f32	s19, s0, s17
90012b9c:	ee78 8aaa 	vadd.f32	s17, s17, s21
90012ba0:	ee30 9ac8 	vsub.f32	s18, s1, s16
90012ba4:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012ba8:	b1fd      	cbz	r5, 90012bea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90012baa:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90012bae:	eef0 0a49 	vmov.f32	s1, s18
90012bb2:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90012bb6:	eeb0 0a69 	vmov.f32	s0, s19
90012bba:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90012bbe:	4620      	mov	r0, r4
90012bc0:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90012bc4:	f7ff fd64 	bl	90012690 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012bc8:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90012bcc:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90012bd0:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90012bd4:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90012bd8:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90012bdc:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90012be0:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90012be4:	ecbd 8b06 	vpop	{d8-d10}
90012be8:	bd70      	pop	{r4, r5, r6, pc}
90012bea:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90012bee:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90012bf2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90012bf6:	b16b      	cbz	r3, 90012c14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90012bf8:	eef0 1a49 	vmov.f32	s3, s18
90012bfc:	4620      	mov	r0, r4
90012bfe:	eeb0 1a69 	vmov.f32	s2, s19
90012c02:	eef0 0a62 	vmov.f32	s1, s5
90012c06:	eeb0 0a42 	vmov.f32	s0, s4
90012c0a:	f7ff feb1 	bl	90012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012c0e:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90012c12:	e7db      	b.n	90012bcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90012c14:	eef0 4a48 	vmov.f32	s9, s16
90012c18:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012c1c:	eeb0 4a68 	vmov.f32	s8, s17
90012c20:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012c24:	eef0 3a49 	vmov.f32	s7, s18
90012c28:	4620      	mov	r0, r4
90012c2a:	eeb0 3a69 	vmov.f32	s6, s19
90012c2e:	f7ff fe13 	bl	90012858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012c32:	e7cb      	b.n	90012bcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012c34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012c34:	ee07 2a90 	vmov	s15, r2
90012c38:	ee07 1a10 	vmov	s14, r1
90012c3c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90012c40:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90012c54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90012c44:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90012c48:	ee60 0aa7 	vmul.f32	s1, s1, s15
90012c4c:	ee20 0a27 	vmul.f32	s0, s0, s15
90012c50:	f7ff bf76 	b.w	90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012c54:	3d000000 	.word	0x3d000000

90012c58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90012c58:	b538      	push	{r3, r4, r5, lr}
90012c5a:	ed2d 8b02 	vpush	{d8}
90012c5e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90012c62:	4604      	mov	r4, r0
90012c64:	b31d      	cbz	r5, 90012cae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90012c66:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90012c6a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012c6e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90012c72:	ee78 8a67 	vsub.f32	s17, s16, s15
90012c76:	ee38 8a27 	vadd.f32	s16, s16, s15
90012c7a:	eef0 0a68 	vmov.f32	s1, s17
90012c7e:	f7ff fd07 	bl	90012690 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012c82:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90012c86:	eef0 1a48 	vmov.f32	s3, s16
90012c8a:	4620      	mov	r0, r4
90012c8c:	eeb0 0a41 	vmov.f32	s0, s2
90012c90:	eef0 0a68 	vmov.f32	s1, s17
90012c94:	f7ff fe6c 	bl	90012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012c98:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90012c9c:	eef0 1a68 	vmov.f32	s3, s17
90012ca0:	4620      	mov	r0, r4
90012ca2:	eef0 0a48 	vmov.f32	s1, s16
90012ca6:	eeb0 0a41 	vmov.f32	s0, s2
90012caa:	f7ff fe61 	bl	90012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012cae:	4628      	mov	r0, r5
90012cb0:	ecbd 8b02 	vpop	{d8}
90012cb4:	bd38      	pop	{r3, r4, r5, pc}

90012cb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90012cb6:	b510      	push	{r4, lr}
90012cb8:	ed2d 8b02 	vpush	{d8}
90012cbc:	4604      	mov	r4, r0
90012cbe:	eeb0 8a40 	vmov.f32	s16, s0
90012cc2:	eef0 8a60 	vmov.f32	s17, s1
90012cc6:	f7ff ffc7 	bl	90012c58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012cca:	b9d0      	cbnz	r0, 90012d02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90012ccc:	4620      	mov	r0, r4
90012cce:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90012cd2:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
90012cd6:	eef0 0a68 	vmov.f32	s1, s17
90012cda:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90012cde:	eeb0 0a48 	vmov.f32	s0, s16
90012ce2:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
90012ce6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90012cea:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90012cee:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012cf2:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012cf6:	f7ff fdaf 	bl	90012858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012cfa:	2001      	movs	r0, #1
90012cfc:	ecbd 8b02 	vpop	{d8}
90012d00:	bd10      	pop	{r4, pc}
90012d02:	2000      	movs	r0, #0
90012d04:	e7fa      	b.n	90012cfc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90012d06 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90012d06:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
90012d0a:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90012d0e:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90012d12:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90012d16:	f7ff be2b 	b.w	90012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90012d1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90012d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012d20:	b089      	sub	sp, #36	@ 0x24
90012d22:	461c      	mov	r4, r3
90012d24:	4682      	mov	sl, r0
90012d26:	4615      	mov	r5, r2
90012d28:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012d2c:	f10d 0820 	add.w	r8, sp, #32
90012d30:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90012d32:	9304      	str	r3, [sp, #16]
90012d34:	2300      	movs	r3, #0
90012d36:	9105      	str	r1, [sp, #20]
90012d38:	9306      	str	r3, [sp, #24]
90012d3a:	f848 3d04 	str.w	r3, [r8, #-4]!
90012d3e:	9b04      	ldr	r3, [sp, #16]
90012d40:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90012d44:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90012d48:	9b05      	ldr	r3, [sp, #20]
90012d4a:	429d      	cmp	r5, r3
90012d4c:	d96d      	bls.n	90012e2a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90012d4e:	3d01      	subs	r5, #1
90012d50:	f819 3005 	ldrb.w	r3, [r9, r5]
90012d54:	2b06      	cmp	r3, #6
90012d56:	d8f7      	bhi.n	90012d48 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012d58:	a201      	add	r2, pc, #4	@ (adr r2, 90012d60 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90012d5a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012d5e:	bf00      	nop
90012d60:	90012d7f 	.word	0x90012d7f
90012d64:	90012d49 	.word	0x90012d49
90012d68:	90012d7d 	.word	0x90012d7d
90012d6c:	90012da1 	.word	0x90012da1
90012d70:	90012da1 	.word	0x90012da1
90012d74:	90012da5 	.word	0x90012da5
90012d78:	90012de5 	.word	0x90012de5
90012d7c:	3c02      	subs	r4, #2
90012d7e:	4650      	mov	r0, sl
90012d80:	9400      	str	r4, [sp, #0]
90012d82:	462b      	mov	r3, r5
90012d84:	4642      	mov	r2, r8
90012d86:	a906      	add	r1, sp, #24
90012d88:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012d8c:	f7ff fcae 	bl	900126ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012d90:	eddd 0a07 	vldr	s1, [sp, #28]
90012d94:	ed9d 0a06 	vldr	s0, [sp, #24]
90012d98:	4630      	mov	r0, r6
90012d9a:	f7ff fed1 	bl	90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012d9e:	e7d3      	b.n	90012d48 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012da0:	3c01      	subs	r4, #1
90012da2:	e7ec      	b.n	90012d7e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90012da4:	f1a4 0b04 	sub.w	fp, r4, #4
90012da8:	3c02      	subs	r4, #2
90012daa:	4650      	mov	r0, sl
90012dac:	462b      	mov	r3, r5
90012dae:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012db2:	f8cd b000 	str.w	fp, [sp]
90012db6:	4642      	mov	r2, r8
90012db8:	a906      	add	r1, sp, #24
90012dba:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012dbe:	f7ff fc95 	bl	900126ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012dc2:	eddd 2a07 	vldr	s5, [sp, #28]
90012dc6:	ed9d 2a06 	vldr	s4, [sp, #24]
90012dca:	4630      	mov	r0, r6
90012dcc:	ed54 1a01 	vldr	s3, [r4, #-4]
90012dd0:	ed14 1a02 	vldr	s2, [r4, #-8]
90012dd4:	edd4 0a01 	vldr	s1, [r4, #4]
90012dd8:	ed94 0a00 	vldr	s0, [r4]
90012ddc:	f7ff fc1a 	bl	90012614 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012de0:	465c      	mov	r4, fp
90012de2:	e7b1      	b.n	90012d48 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012de4:	f1a4 0b06 	sub.w	fp, r4, #6
90012de8:	3c02      	subs	r4, #2
90012dea:	4650      	mov	r0, sl
90012dec:	462b      	mov	r3, r5
90012dee:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012df2:	f8cd b000 	str.w	fp, [sp]
90012df6:	4642      	mov	r2, r8
90012df8:	a906      	add	r1, sp, #24
90012dfa:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012dfe:	f7ff fc75 	bl	900126ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012e02:	eddd 3a07 	vldr	s7, [sp, #28]
90012e06:	ed9d 3a06 	vldr	s6, [sp, #24]
90012e0a:	4630      	mov	r0, r6
90012e0c:	ed54 2a03 	vldr	s5, [r4, #-12]
90012e10:	ed14 2a04 	vldr	s4, [r4, #-16]
90012e14:	ed54 1a01 	vldr	s3, [r4, #-4]
90012e18:	ed14 1a02 	vldr	s2, [r4, #-8]
90012e1c:	edd4 0a01 	vldr	s1, [r4, #4]
90012e20:	ed94 0a00 	vldr	s0, [r4]
90012e24:	f7ff fc15 	bl	90012652 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012e28:	e7da      	b.n	90012de0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
90012e2a:	9b04      	ldr	r3, [sp, #16]
90012e2c:	b113      	cbz	r3, 90012e34 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90012e2e:	4630      	mov	r0, r6
90012e30:	f7ff ff69 	bl	90012d06 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90012e34:	b009      	add	sp, #36	@ 0x24
90012e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012e3a:	bf00      	nop

90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90012e3c:	eef0 7a60 	vmov.f32	s15, s1
90012e40:	6803      	ldr	r3, [r0, #0]
90012e42:	689b      	ldr	r3, [r3, #8]
90012e44:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012e48:	ee17 2a90 	vmov	r2, s15
90012e4c:	eef0 7a40 	vmov.f32	s15, s0
90012e50:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012e54:	ee17 1a90 	vmov	r1, s15
90012e58:	4718      	bx	r3
	...

90012e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90012e5c:	4b04      	ldr	r3, [pc, #16]	@ (90012e70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90012e5e:	b510      	push	{r4, lr}
90012e60:	4604      	mov	r4, r0
90012e62:	f840 3b14 	str.w	r3, [r0], #20
90012e66:	f001 fe71 	bl	90014b4c <_ZN8touchgfx7OutlineD1Ev>
90012e6a:	4620      	mov	r0, r4
90012e6c:	bd10      	pop	{r4, pc}
90012e6e:	bf00      	nop
90012e70:	9002eb0c 	.word	0x9002eb0c

90012e74 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012e78:	ed2d 8b04 	vpush	{d8-d9}
90012e7c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012e80:	b0b5      	sub	sp, #212	@ 0xd4
90012e82:	4605      	mov	r5, r0
90012e84:	468b      	mov	fp, r1
90012e86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012e8a:	9206      	str	r2, [sp, #24]
90012e8c:	461e      	mov	r6, r3
90012e8e:	2400      	movs	r4, #0
90012e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012e94:	f240 814f 	bls.w	90013136 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90012e98:	23ff      	movs	r3, #255	@ 0xff
90012e9a:	1d02      	adds	r2, r0, #4
90012e9c:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 9001313c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012ea0:	f04f 0800 	mov.w	r8, #0
90012ea4:	9300      	str	r3, [sp, #0]
90012ea6:	af08      	add	r7, sp, #32
90012ea8:	6981      	ldr	r1, [r0, #24]
90012eaa:	a808      	add	r0, sp, #32
90012eac:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90012eae:	eef0 9a49 	vmov.f32	s19, s18
90012eb2:	f016 fa13 	bl	900292dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012eb6:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
90012eba:	4ba1      	ldr	r3, [pc, #644]	@ (90013140 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90012ebc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90012ec0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012ec4:	2201      	movs	r2, #1
90012ec6:	9308      	str	r3, [sp, #32]
90012ec8:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90012ecc:	edd5 6a08 	vldr	s13, [r5, #32]
90012ed0:	eeb0 8a49 	vmov.f32	s16, s18
90012ed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012ed8:	9325      	str	r3, [sp, #148]	@ 0x94
90012eda:	f04f 0300 	mov.w	r3, #0
90012ede:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90012ee2:	7f6a      	ldrb	r2, [r5, #29]
90012ee4:	eef0 8a49 	vmov.f32	s17, s18
90012ee8:	bf48      	it	mi
90012eea:	eef1 7a67 	vnegmi.f32	s15, s15
90012eee:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90012ef2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90012ef6:	46c1      	mov	r9, r8
90012ef8:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90012efc:	f04f 0a01 	mov.w	sl, #1
90012f00:	ee67 7a87 	vmul.f32	s15, s15, s14
90012f04:	7fab      	ldrb	r3, [r5, #30]
90012f06:	942a      	str	r4, [sp, #168]	@ 0xa8
90012f08:	435a      	muls	r2, r3
90012f0a:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
90012f0e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90012f12:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
90012f16:	1c53      	adds	r3, r2, #1
90012f18:	942b      	str	r4, [sp, #172]	@ 0xac
90012f1a:	942c      	str	r4, [sp, #176]	@ 0xb0
90012f1c:	ee27 7a26 	vmul.f32	s14, s14, s13
90012f20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90012f24:	942d      	str	r4, [sp, #180]	@ 0xb4
90012f26:	942e      	str	r4, [sp, #184]	@ 0xb8
90012f28:	f3c3 2307 	ubfx	r3, r3, #8, #8
90012f2c:	ee67 7a27 	vmul.f32	s15, s14, s15
90012f30:	942f      	str	r4, [sp, #188]	@ 0xbc
90012f32:	9430      	str	r4, [sp, #192]	@ 0xc0
90012f34:	9431      	str	r4, [sp, #196]	@ 0xc4
90012f36:	9432      	str	r4, [sp, #200]	@ 0xc8
90012f38:	9433      	str	r4, [sp, #204]	@ 0xcc
90012f3a:	4644      	mov	r4, r8
90012f3c:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90012f40:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90012f44:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90012f48:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90012f4c:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90012f50:	9b06      	ldr	r3, [sp, #24]
90012f52:	454b      	cmp	r3, r9
90012f54:	f000 80cc 	beq.w	900130f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90012f58:	f109 0301 	add.w	r3, r9, #1
90012f5c:	9305      	str	r3, [sp, #20]
90012f5e:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012f62:	2b06      	cmp	r3, #6
90012f64:	d839      	bhi.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012f66:	e8df f003 	tbb	[pc, r3]
90012f6a:	3b04      	.short	0x3b04
90012f6c:	817c6f60 	.word	0x817c6f60
90012f70:	a0          	.byte	0xa0
90012f71:	00          	.byte	0x00
90012f72:	45c1      	cmp	r9, r8
90012f74:	d92b      	bls.n	90012fce <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012f76:	eef0 0a49 	vmov.f32	s1, s18
90012f7a:	4638      	mov	r0, r7
90012f7c:	eeb0 0a69 	vmov.f32	s0, s19
90012f80:	f7ff fdde 	bl	90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012f84:	4638      	mov	r0, r7
90012f86:	f7ff fe67 	bl	90012c58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012f8a:	4681      	mov	r9, r0
90012f8c:	b9f8      	cbnz	r0, 90012fce <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012f8e:	eef0 0a49 	vmov.f32	s1, s18
90012f92:	4638      	mov	r0, r7
90012f94:	eeb0 0a69 	vmov.f32	s0, s19
90012f98:	f7ff fe8d 	bl	90012cb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90012f9c:	4628      	mov	r0, r5
90012f9e:	4623      	mov	r3, r4
90012fa0:	9a05      	ldr	r2, [sp, #20]
90012fa2:	4641      	mov	r1, r8
90012fa4:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90012fa8:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90012fac:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012fb0:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012fb4:	e9cd 9702 	strd	r9, r7, [sp, #8]
90012fb8:	e9cd b600 	strd	fp, r6, [sp]
90012fbc:	f7ff feae 	bl	90012d1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012fc0:	eef0 0a49 	vmov.f32	s1, s18
90012fc4:	eeb0 0a69 	vmov.f32	s0, s19
90012fc8:	4638      	mov	r0, r7
90012fca:	f7ff fe74 	bl	90012cb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90012fce:	eeb0 8a49 	vmov.f32	s16, s18
90012fd2:	f8dd 8014 	ldr.w	r8, [sp, #20]
90012fd6:	eef0 8a69 	vmov.f32	s17, s19
90012fda:	f8dd 9014 	ldr.w	r9, [sp, #20]
90012fde:	e7b7      	b.n	90012f50 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90012fe0:	45c1      	cmp	r9, r8
90012fe2:	d90d      	bls.n	90013000 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012fe4:	4638      	mov	r0, r7
90012fe6:	f7ff fe37 	bl	90012c58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012fea:	b948      	cbnz	r0, 90013000 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012fec:	4623      	mov	r3, r4
90012fee:	464a      	mov	r2, r9
90012ff0:	4641      	mov	r1, r8
90012ff2:	4628      	mov	r0, r5
90012ff4:	e9cd a702 	strd	sl, r7, [sp, #8]
90012ff8:	e9cd b600 	strd	fp, r6, [sp]
90012ffc:	f7ff fe8e 	bl	90012d1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90013000:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013004:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90013008:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
9001300c:	3402      	adds	r4, #2
9001300e:	edd3 8a00 	vldr	s17, [r3]
90013012:	46c8      	mov	r8, r9
90013014:	ed93 8a01 	vldr	s16, [r3, #4]
90013018:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
9001301c:	eef0 9a68 	vmov.f32	s19, s17
90013020:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90013024:	eeb0 9a48 	vmov.f32	s18, s16
90013028:	e7d7      	b.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001302a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001302e:	4638      	mov	r0, r7
90013030:	3402      	adds	r4, #2
90013032:	edd3 8a00 	vldr	s17, [r3]
90013036:	ed93 8a01 	vldr	s16, [r3, #4]
9001303a:	eeb0 0a68 	vmov.f32	s0, s17
9001303e:	eef0 0a48 	vmov.f32	s1, s16
90013042:	f7ff fd7d 	bl	90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013046:	e7c8      	b.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013048:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001304c:	edd3 8a00 	vldr	s17, [r3]
90013050:	eef0 0a48 	vmov.f32	s1, s16
90013054:	4638      	mov	r0, r7
90013056:	eeb0 0a68 	vmov.f32	s0, s17
9001305a:	3401      	adds	r4, #1
9001305c:	f7ff fd70 	bl	90012b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013060:	e7bb      	b.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013062:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013066:	ed93 8a00 	vldr	s16, [r3]
9001306a:	e7f1      	b.n	90013050 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
9001306c:	00a3      	lsls	r3, r4, #2
9001306e:	eef0 0a48 	vmov.f32	s1, s16
90013072:	eeb0 0a68 	vmov.f32	s0, s17
90013076:	4638      	mov	r0, r7
90013078:	f103 0208 	add.w	r2, r3, #8
9001307c:	f103 090c 	add.w	r9, r3, #12
90013080:	4433      	add	r3, r6
90013082:	3404      	adds	r4, #4
90013084:	4432      	add	r2, r6
90013086:	44b1      	add	r9, r6
90013088:	edd3 1a01 	vldr	s3, [r3, #4]
9001308c:	ed92 2a00 	vldr	s4, [r2]
90013090:	edd9 2a00 	vldr	s5, [r9]
90013094:	ed93 1a00 	vldr	s2, [r3]
90013098:	9207      	str	r2, [sp, #28]
9001309a:	f7ff fabb 	bl	90012614 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001309e:	9a07      	ldr	r2, [sp, #28]
900130a0:	ed99 8a00 	vldr	s16, [r9]
900130a4:	edd2 8a00 	vldr	s17, [r2]
900130a8:	e797      	b.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900130aa:	00a3      	lsls	r3, r4, #2
900130ac:	eef0 0a48 	vmov.f32	s1, s16
900130b0:	eeb0 0a68 	vmov.f32	s0, s17
900130b4:	4638      	mov	r0, r7
900130b6:	f103 0210 	add.w	r2, r3, #16
900130ba:	f103 0914 	add.w	r9, r3, #20
900130be:	4433      	add	r3, r6
900130c0:	3406      	adds	r4, #6
900130c2:	4432      	add	r2, r6
900130c4:	44b1      	add	r9, r6
900130c6:	edd3 2a03 	vldr	s5, [r3, #12]
900130ca:	ed92 3a00 	vldr	s6, [r2]
900130ce:	edd9 3a00 	vldr	s7, [r9]
900130d2:	ed93 2a02 	vldr	s4, [r3, #8]
900130d6:	edd3 1a01 	vldr	s3, [r3, #4]
900130da:	ed93 1a00 	vldr	s2, [r3]
900130de:	9207      	str	r2, [sp, #28]
900130e0:	f7ff fab7 	bl	90012652 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900130e4:	9a07      	ldr	r2, [sp, #28]
900130e6:	ed99 8a00 	vldr	s16, [r9]
900130ea:	edd2 8a00 	vldr	s17, [r2]
900130ee:	e774      	b.n	90012fda <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900130f0:	9b06      	ldr	r3, [sp, #24]
900130f2:	af08      	add	r7, sp, #32
900130f4:	4543      	cmp	r3, r8
900130f6:	d90f      	bls.n	90013118 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900130f8:	4638      	mov	r0, r7
900130fa:	f7ff fdad 	bl	90012c58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900130fe:	b958      	cbnz	r0, 90013118 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90013100:	2301      	movs	r3, #1
90013102:	9703      	str	r7, [sp, #12]
90013104:	f8cd b000 	str.w	fp, [sp]
90013108:	4641      	mov	r1, r8
9001310a:	9a06      	ldr	r2, [sp, #24]
9001310c:	4628      	mov	r0, r5
9001310e:	e9cd 6301 	strd	r6, r3, [sp, #4]
90013112:	4623      	mov	r3, r4
90013114:	f7ff fe02 	bl	90012d1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90013118:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
9001311c:	4638      	mov	r0, r7
9001311e:	f016 f971 	bl	90029404 <_ZN8touchgfx6Canvas6renderEh>
90013122:	4604      	mov	r4, r0
90013124:	4638      	mov	r0, r7
90013126:	f7ff fe99 	bl	90012e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001312a:	4620      	mov	r0, r4
9001312c:	b035      	add	sp, #212	@ 0xd4
9001312e:	ecbd 8b04 	vpop	{d8-d9}
90013132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013136:	2401      	movs	r4, #1
90013138:	e7f7      	b.n	9001312a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001313a:	bf00      	nop
9001313c:	00000000 	.word	0x00000000
90013140:	9002e284 	.word	0x9002e284

90013144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90013144:	b510      	push	{r4, lr}
90013146:	4604      	mov	r4, r0
90013148:	f7ff fe88 	bl	90012e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001314c:	21b0      	movs	r1, #176	@ 0xb0
9001314e:	4620      	mov	r0, r4
90013150:	f016 fd25 	bl	90029b9e <_ZdlPvj>
90013154:	4620      	mov	r0, r4
90013156:	bd10      	pop	{r4, pc}

90013158 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90013158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001315c:	4698      	mov	r8, r3
9001315e:	23ff      	movs	r3, #255	@ 0xff
90013160:	4607      	mov	r7, r0
90013162:	4689      	mov	r9, r1
90013164:	4692      	mov	sl, r2
90013166:	1d02      	adds	r2, r0, #4
90013168:	f107 0534 	add.w	r5, r7, #52	@ 0x34
9001316c:	2400      	movs	r4, #0
9001316e:	44ca      	add	sl, r9
90013170:	ed2d 8b06 	vpush	{d8-d10}
90013174:	b0aa      	sub	sp, #168	@ 0xa8
90013176:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 9001337c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001317a:	9300      	str	r3, [sp, #0]
9001317c:	eef0 8a48 	vmov.f32	s17, s16
90013180:	6981      	ldr	r1, [r0, #24]
90013182:	a80d      	add	r0, sp, #52	@ 0x34
90013184:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90013186:	f016 f8a9 	bl	900292dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001318a:	7f3b      	ldrb	r3, [r7, #28]
9001318c:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 9001337c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90013190:	4628      	mov	r0, r5
90013192:	1e5a      	subs	r2, r3, #1
90013194:	eeb0 0a60 	vmov.f32	s0, s1
90013198:	4253      	negs	r3, r2
9001319a:	4153      	adcs	r3, r2
9001319c:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
900131a0:	f005 fc85 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900131a4:	eeb0 9a40 	vmov.f32	s18, s0
900131a8:	eef0 9a60 	vmov.f32	s19, s1
900131ac:	45ca      	cmp	sl, r9
900131ae:	f000 80cd 	beq.w	9001334c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
900131b2:	f819 3b01 	ldrb.w	r3, [r9], #1
900131b6:	2b06      	cmp	r3, #6
900131b8:	d8f8      	bhi.n	900131ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900131ba:	e8df f003 	tbb	[pc, r3]
900131be:	0804      	.short	0x0804
900131c0:	58533f2a 	.word	0x58533f2a
900131c4:	8a          	.byte	0x8a
900131c5:	00          	.byte	0x00
900131c6:	a80d      	add	r0, sp, #52	@ 0x34
900131c8:	f016 f8fa 	bl	900293c0 <_ZN8touchgfx6Canvas5closeEv>
900131cc:	e7ee      	b.n	900131ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900131ce:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900131d2:	4628      	mov	r0, r5
900131d4:	ed93 8a01 	vldr	s16, [r3, #4]
900131d8:	edd3 8a00 	vldr	s17, [r3]
900131dc:	eef0 0a48 	vmov.f32	s1, s16
900131e0:	eeb0 0a68 	vmov.f32	s0, s17
900131e4:	f005 fc63 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900131e8:	a80d      	add	r0, sp, #52	@ 0x34
900131ea:	eef0 7a60 	vmov.f32	s15, s1
900131ee:	eeb0 9a40 	vmov.f32	s18, s0
900131f2:	eef0 9a60 	vmov.f32	s19, s1
900131f6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900131fa:	ee17 2a90 	vmov	r2, s15
900131fe:	eef0 7a40 	vmov.f32	s15, s0
90013202:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013206:	ee17 1a90 	vmov	r1, s15
9001320a:	f016 f9b3 	bl	90029574 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001320e:	3402      	adds	r4, #2
90013210:	e7cc      	b.n	900131ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013212:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013216:	4628      	mov	r0, r5
90013218:	edd3 8a00 	vldr	s17, [r3]
9001321c:	ed93 8a01 	vldr	s16, [r3, #4]
90013220:	eeb0 0a68 	vmov.f32	s0, s17
90013224:	eef0 0a48 	vmov.f32	s1, s16
90013228:	f005 fc41 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001322c:	a80d      	add	r0, sp, #52	@ 0x34
9001322e:	eeb0 9a40 	vmov.f32	s18, s0
90013232:	eef0 9a60 	vmov.f32	s19, s1
90013236:	f7ff fe01 	bl	90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001323a:	e7e8      	b.n	9001320e <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
9001323c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013240:	edd3 8a00 	vldr	s17, [r3]
90013244:	eef0 0a48 	vmov.f32	s1, s16
90013248:	4628      	mov	r0, r5
9001324a:	eeb0 0a68 	vmov.f32	s0, s17
9001324e:	3401      	adds	r4, #1
90013250:	f005 fc2d 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013254:	a80d      	add	r0, sp, #52	@ 0x34
90013256:	eef0 9a60 	vmov.f32	s19, s1
9001325a:	eeb0 9a40 	vmov.f32	s18, s0
9001325e:	f7ff fded 	bl	90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90013262:	e7a3      	b.n	900131ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013264:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013268:	ed93 8a00 	vldr	s16, [r3]
9001326c:	e7ea      	b.n	90013244 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
9001326e:	1ca3      	adds	r3, r4, #2
90013270:	4628      	mov	r0, r5
90013272:	3404      	adds	r4, #4
90013274:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90013278:	ed53 0a01 	vldr	s1, [r3, #-4]
9001327c:	ed13 0a02 	vldr	s0, [r3, #-8]
90013280:	edd3 8a00 	vldr	s17, [r3]
90013284:	ed93 8a01 	vldr	s16, [r3, #4]
90013288:	f005 fc11 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001328c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90013290:	eeb0 0a68 	vmov.f32	s0, s17
90013294:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90013298:	eef0 0a48 	vmov.f32	s1, s16
9001329c:	4628      	mov	r0, r5
9001329e:	f005 fc06 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900132a2:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
900132a6:	eef0 2a60 	vmov.f32	s5, s1
900132aa:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
900132ae:	eeb0 2a40 	vmov.f32	s4, s0
900132b2:	a80d      	add	r0, sp, #52	@ 0x34
900132b4:	eeb0 aa40 	vmov.f32	s20, s0
900132b8:	eef0 aa60 	vmov.f32	s21, s1
900132bc:	eeb0 0a49 	vmov.f32	s0, s18
900132c0:	eef0 0a69 	vmov.f32	s1, s19
900132c4:	f7ff f9a6 	bl	90012614 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900132c8:	eef0 9a6a 	vmov.f32	s19, s21
900132cc:	eeb0 9a4a 	vmov.f32	s18, s20
900132d0:	e76c      	b.n	900131ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900132d2:	1d26      	adds	r6, r4, #4
900132d4:	4628      	mov	r0, r5
900132d6:	3406      	adds	r4, #6
900132d8:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900132dc:	ed56 0a03 	vldr	s1, [r6, #-12]
900132e0:	ed16 0a04 	vldr	s0, [r6, #-16]
900132e4:	edd6 8a00 	vldr	s17, [r6]
900132e8:	ed96 8a01 	vldr	s16, [r6, #4]
900132ec:	f005 fbdf 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900132f0:	ed8d 0a07 	vstr	s0, [sp, #28]
900132f4:	4628      	mov	r0, r5
900132f6:	ed16 0a02 	vldr	s0, [r6, #-8]
900132fa:	edcd 0a08 	vstr	s1, [sp, #32]
900132fe:	ed56 0a01 	vldr	s1, [r6, #-4]
90013302:	f005 fbd4 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013306:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
9001330a:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
9001330e:	eeb0 0a68 	vmov.f32	s0, s17
90013312:	eef0 0a48 	vmov.f32	s1, s16
90013316:	4628      	mov	r0, r5
90013318:	f005 fbc9 	bl	90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001331c:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90013320:	eeb0 3a40 	vmov.f32	s6, s0
90013324:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90013328:	eef0 3a60 	vmov.f32	s7, s1
9001332c:	eddd 1a08 	vldr	s3, [sp, #32]
90013330:	eeb0 aa40 	vmov.f32	s20, s0
90013334:	ed9d 1a07 	vldr	s2, [sp, #28]
90013338:	eef0 aa60 	vmov.f32	s21, s1
9001333c:	a80d      	add	r0, sp, #52	@ 0x34
9001333e:	eef0 0a69 	vmov.f32	s1, s19
90013342:	eeb0 0a49 	vmov.f32	s0, s18
90013346:	f7ff f984 	bl	90012652 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001334a:	e7bd      	b.n	900132c8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
9001334c:	7f7b      	ldrb	r3, [r7, #29]
9001334e:	a80d      	add	r0, sp, #52	@ 0x34
90013350:	7fb9      	ldrb	r1, [r7, #30]
90013352:	4359      	muls	r1, r3
90013354:	1c4b      	adds	r3, r1, #1
90013356:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001335a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9001335e:	f016 f851 	bl	90029404 <_ZN8touchgfx6Canvas6renderEh>
90013362:	4b07      	ldr	r3, [pc, #28]	@ (90013380 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90013364:	4604      	mov	r4, r0
90013366:	a812      	add	r0, sp, #72	@ 0x48
90013368:	930d      	str	r3, [sp, #52]	@ 0x34
9001336a:	f001 fbef 	bl	90014b4c <_ZN8touchgfx7OutlineD1Ev>
9001336e:	4620      	mov	r0, r4
90013370:	b02a      	add	sp, #168	@ 0xa8
90013372:	ecbd 8b06 	vpop	{d8-d10}
90013376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001337a:	bf00      	nop
9001337c:	00000000 	.word	0x00000000
90013380:	9002eb0c 	.word	0x9002eb0c

90013384 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90013384:	b410      	push	{r4}
90013386:	7f04      	ldrb	r4, [r0, #28]
90013388:	b11c      	cbz	r4, 90013392 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
9001338a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001338e:	f7ff bee3 	b.w	90013158 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90013392:	f85d 4b04 	ldr.w	r4, [sp], #4
90013396:	f7ff bd6d 	b.w	90012e74 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

9001339a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
9001339a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001339e:	4691      	mov	r9, r2
900133a0:	4602      	mov	r2, r0
900133a2:	4606      	mov	r6, r0
900133a4:	4688      	mov	r8, r1
900133a6:	f852 0f26 	ldr.w	r0, [r2, #38]!
900133aa:	469a      	mov	sl, r3
900133ac:	ab02      	add	r3, sp, #8
900133ae:	af02      	add	r7, sp, #8
900133b0:	6851      	ldr	r1, [r2, #4]
900133b2:	c303      	stmia	r3!, {r0, r1}
900133b4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900133b8:	2b00      	cmp	r3, #0
900133ba:	dd2f      	ble.n	9001341c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900133bc:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
900133c0:	2c00      	cmp	r4, #0
900133c2:	dd2b      	ble.n	9001341c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900133c4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900133c8:	441c      	add	r4, r3
900133ca:	b2a4      	uxth	r4, r4
900133cc:	b225      	sxth	r5, r4
900133ce:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
900133d2:	42ab      	cmp	r3, r5
900133d4:	da22      	bge.n	9001341c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900133d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900133d8:	464a      	mov	r2, r9
900133da:	9701      	str	r7, [sp, #4]
900133dc:	4641      	mov	r1, r8
900133de:	9300      	str	r3, [sp, #0]
900133e0:	4630      	mov	r0, r6
900133e2:	4653      	mov	r3, sl
900133e4:	f7ff ffce 	bl	90013384 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
900133e8:	b940      	cbnz	r0, 900133fc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900133ea:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900133ee:	2b01      	cmp	r3, #1
900133f0:	d004      	beq.n	900133fc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900133f2:	3301      	adds	r3, #1
900133f4:	105b      	asrs	r3, r3, #1
900133f6:	f8ad 300e 	strh.w	r3, [sp, #14]
900133fa:	e7ec      	b.n	900133d6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
900133fc:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013400:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013404:	4413      	add	r3, r2
90013406:	b29b      	uxth	r3, r3
90013408:	441a      	add	r2, r3
9001340a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001340e:	b212      	sxth	r2, r2
90013410:	4295      	cmp	r5, r2
90013412:	dadc      	bge.n	900133ce <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90013414:	1ae3      	subs	r3, r4, r3
90013416:	f8ad 300e 	strh.w	r3, [sp, #14]
9001341a:	e7d8      	b.n	900133ce <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
9001341c:	b004      	add	sp, #16
9001341e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90013422 <_ZN8touchgfx6CircleD1Ev>:
90013422:	4770      	bx	lr

90013424 <_ZN8touchgfx6CircleD0Ev>:
90013424:	b510      	push	{r4, lr}
90013426:	4604      	mov	r4, r0
90013428:	2148      	movs	r1, #72	@ 0x48
9001342a:	f016 fbb8 	bl	90029b9e <_ZdlPvj>
9001342e:	4620      	mov	r0, r4
90013430:	bd10      	pop	{r4, pc}

90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90013432:	b507      	push	{r0, r1, r2, lr}
90013434:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90013438:	ab01      	add	r3, sp, #4
9001343a:	6809      	ldr	r1, [r1, #0]
9001343c:	6800      	ldr	r0, [r0, #0]
9001343e:	f005 fc4f 	bl	90018ce0 <_ZN8touchgfx6muldivElllRl>
90013442:	b003      	add	sp, #12
90013444:	f85d fb04 	ldr.w	pc, [sp], #4

90013448 <_ZN8touchgfx7CWRUtil4sineEi>:
90013448:	f44f 73b4 	mov.w	r3, #360	@ 0x168
9001344c:	fb90 f2f3 	sdiv	r2, r0, r3
90013450:	fb02 0013 	mls	r0, r2, r3, r0
90013454:	2800      	cmp	r0, #0
90013456:	bfb8      	it	lt
90013458:	18c0      	addlt	r0, r0, r3
9001345a:	4b0a      	ldr	r3, [pc, #40]	@ (90013484 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
9001345c:	285a      	cmp	r0, #90	@ 0x5a
9001345e:	dc02      	bgt.n	90013466 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90013460:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90013464:	4770      	bx	lr
90013466:	28b4      	cmp	r0, #180	@ 0xb4
90013468:	dc02      	bgt.n	90013470 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
9001346a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
9001346e:	e7f7      	b.n	90013460 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90013470:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
90013474:	bfd4      	ite	le
90013476:	38b4      	suble	r0, #180	@ 0xb4
90013478:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
9001347c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90013480:	4240      	negs	r0, r0
90013482:	4770      	bx	lr
90013484:	9002e2dc 	.word	0x9002e2dc

90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90013488:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
9001348c:	fb90 f2f3 	sdiv	r2, r0, r3
90013490:	b573      	push	{r0, r1, r4, r5, r6, lr}
90013492:	fb02 0013 	mls	r0, r2, r3, r0
90013496:	2800      	cmp	r0, #0
90013498:	bfb8      	it	lt
9001349a:	18c0      	addlt	r0, r0, r3
9001349c:	1144      	asrs	r4, r0, #5
9001349e:	f000 061f 	and.w	r6, r0, #31
900134a2:	4620      	mov	r0, r4
900134a4:	f7ff ffd0 	bl	90013448 <_ZN8touchgfx7CWRUtil4sineEi>
900134a8:	4605      	mov	r5, r0
900134aa:	b90e      	cbnz	r6, 900134b0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
900134ac:	b002      	add	sp, #8
900134ae:	bd70      	pop	{r4, r5, r6, pc}
900134b0:	1c60      	adds	r0, r4, #1
900134b2:	f7ff ffc9 	bl	90013448 <_ZN8touchgfx7CWRUtil4sineEi>
900134b6:	ab01      	add	r3, sp, #4
900134b8:	2220      	movs	r2, #32
900134ba:	4631      	mov	r1, r6
900134bc:	1b40      	subs	r0, r0, r5
900134be:	f005 fc0f 	bl	90018ce0 <_ZN8touchgfx6muldivElllRl>
900134c2:	4428      	add	r0, r5
900134c4:	e7f2      	b.n	900134ac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
900134c6:	b508      	push	{r3, lr}
900134c8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
900134cc:	f7ff ffdc 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900134d0:	bd08      	pop	{r3, pc}
	...

900134d4 <_ZN8touchgfx6CircleC1Ev>:
900134d4:	b510      	push	{r4, lr}
900134d6:	4604      	mov	r4, r0
900134d8:	f000 fd0e 	bl	90013ef8 <_ZN8touchgfx12CanvasWidgetC1Ev>
900134dc:	4b08      	ldr	r3, [pc, #32]	@ (90013500 <_ZN8touchgfx6CircleC1Ev+0x2c>)
900134de:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
900134e2:	4620      	mov	r0, r4
900134e4:	6023      	str	r3, [r4, #0]
900134e6:	2300      	movs	r3, #0
900134e8:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
900134ec:	f24b 4205 	movw	r2, #46085	@ 0xb405
900134f0:	60a3      	str	r3, [r4, #8]
900134f2:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
900134f6:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
900134fa:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
900134fe:	bd10      	pop	{r4, pc}
90013500:	9002e39c 	.word	0x9002e39c

90013504 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
90013504:	29b4      	cmp	r1, #180	@ 0xb4
90013506:	bfa8      	it	ge
90013508:	21b4      	movge	r1, #180	@ 0xb4
9001350a:	2901      	cmp	r1, #1
9001350c:	bfb8      	it	lt
9001350e:	2101      	movlt	r1, #1
90013510:	f880 1045 	strb.w	r1, [r0, #69]	@ 0x45
90013514:	4770      	bx	lr

90013516 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90013516:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001351a:	428a      	cmp	r2, r1
9001351c:	4680      	mov	r8, r0
9001351e:	4610      	mov	r0, r2
90013520:	4699      	mov	r9, r3
90013522:	bfaa      	itet	ge
90013524:	460a      	movge	r2, r1
90013526:	460b      	movlt	r3, r1
90013528:	4603      	movge	r3, r0
9001352a:	b085      	sub	sp, #20
9001352c:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
90013530:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
90013534:	1a99      	subs	r1, r3, r2
90013536:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90013538:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
9001353c:	bfa4      	itt	ge
9001353e:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
90013542:	2200      	movge	r2, #0
90013544:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
90013548:	9300      	str	r3, [sp, #0]
9001354a:	f102 0b01 	add.w	fp, r2, #1
9001354e:	2c00      	cmp	r4, #0
90013550:	f040 80ae 	bne.w	900136b0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90013554:	4610      	mov	r0, r2
90013556:	9201      	str	r2, [sp, #4]
90013558:	f7ff ff96 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001355c:	a903      	add	r1, sp, #12
9001355e:	9003      	str	r0, [sp, #12]
90013560:	4650      	mov	r0, sl
90013562:	f7ff ff66 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013566:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
9001356a:	9a01      	ldr	r2, [sp, #4]
9001356c:	4408      	add	r0, r1
9001356e:	f8d9 1000 	ldr.w	r1, [r9]
90013572:	4281      	cmp	r1, r0
90013574:	bfc8      	it	gt
90013576:	f8c9 0000 	strgt.w	r0, [r9]
9001357a:	6839      	ldr	r1, [r7, #0]
9001357c:	4288      	cmp	r0, r1
9001357e:	bfc8      	it	gt
90013580:	6038      	strgt	r0, [r7, #0]
90013582:	4610      	mov	r0, r2
90013584:	f7ff ff9f 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013588:	a903      	add	r1, sp, #12
9001358a:	9003      	str	r0, [sp, #12]
9001358c:	4650      	mov	r0, sl
9001358e:	f7ff ff50 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013592:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90013596:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
9001359a:	1a10      	subs	r0, r2, r0
9001359c:	6832      	ldr	r2, [r6, #0]
9001359e:	4282      	cmp	r2, r0
900135a0:	bfc8      	it	gt
900135a2:	6030      	strgt	r0, [r6, #0]
900135a4:	682a      	ldr	r2, [r5, #0]
900135a6:	4290      	cmp	r0, r2
900135a8:	fb9b f2f1 	sdiv	r2, fp, r1
900135ac:	fb01 b212 	mls	r2, r1, r2, fp
900135b0:	bfc8      	it	gt
900135b2:	6028      	strgt	r0, [r5, #0]
900135b4:	1a8a      	subs	r2, r1, r2
900135b6:	fb92 f0f1 	sdiv	r0, r2, r1
900135ba:	fb01 2210 	mls	r2, r1, r0, r2
900135be:	4493      	add	fp, r2
900135c0:	9b00      	ldr	r3, [sp, #0]
900135c2:	455b      	cmp	r3, fp
900135c4:	db2a      	blt.n	9001361c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
900135c6:	4658      	mov	r0, fp
900135c8:	f7ff ff5e 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900135cc:	a903      	add	r1, sp, #12
900135ce:	9003      	str	r0, [sp, #12]
900135d0:	4650      	mov	r0, sl
900135d2:	f7ff ff2e 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900135d6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
900135da:	4410      	add	r0, r2
900135dc:	f8d9 2000 	ldr.w	r2, [r9]
900135e0:	4282      	cmp	r2, r0
900135e2:	bfc8      	it	gt
900135e4:	f8c9 0000 	strgt.w	r0, [r9]
900135e8:	683a      	ldr	r2, [r7, #0]
900135ea:	4290      	cmp	r0, r2
900135ec:	bfc8      	it	gt
900135ee:	6038      	strgt	r0, [r7, #0]
900135f0:	4658      	mov	r0, fp
900135f2:	f7ff ff68 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900135f6:	a903      	add	r1, sp, #12
900135f8:	9003      	str	r0, [sp, #12]
900135fa:	4650      	mov	r0, sl
900135fc:	f7ff ff19 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013600:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90013604:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90013608:	1a10      	subs	r0, r2, r0
9001360a:	6832      	ldr	r2, [r6, #0]
9001360c:	4282      	cmp	r2, r0
9001360e:	bfc8      	it	gt
90013610:	6030      	strgt	r0, [r6, #0]
90013612:	682a      	ldr	r2, [r5, #0]
90013614:	4290      	cmp	r0, r2
90013616:	bfc8      	it	gt
90013618:	6028      	strgt	r0, [r5, #0]
9001361a:	e7d1      	b.n	900135c0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
9001361c:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90013620:	9b00      	ldr	r3, [sp, #0]
90013622:	455b      	cmp	r3, fp
90013624:	dd27      	ble.n	90013676 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90013626:	4618      	mov	r0, r3
90013628:	f7ff ff2e 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001362c:	a903      	add	r1, sp, #12
9001362e:	9003      	str	r0, [sp, #12]
90013630:	4650      	mov	r0, sl
90013632:	f7ff fefe 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013636:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
9001363a:	4410      	add	r0, r2
9001363c:	f8d9 2000 	ldr.w	r2, [r9]
90013640:	4282      	cmp	r2, r0
90013642:	bfc8      	it	gt
90013644:	f8c9 0000 	strgt.w	r0, [r9]
90013648:	683a      	ldr	r2, [r7, #0]
9001364a:	4290      	cmp	r0, r2
9001364c:	bfc8      	it	gt
9001364e:	6038      	strgt	r0, [r7, #0]
90013650:	9800      	ldr	r0, [sp, #0]
90013652:	f7ff ff38 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013656:	a903      	add	r1, sp, #12
90013658:	9003      	str	r0, [sp, #12]
9001365a:	4650      	mov	r0, sl
9001365c:	f7ff fee9 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013660:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90013664:	1a10      	subs	r0, r2, r0
90013666:	6832      	ldr	r2, [r6, #0]
90013668:	4282      	cmp	r2, r0
9001366a:	bfc8      	it	gt
9001366c:	6030      	strgt	r0, [r6, #0]
9001366e:	682a      	ldr	r2, [r5, #0]
90013670:	4290      	cmp	r0, r2
90013672:	bfc8      	it	gt
90013674:	6028      	strgt	r0, [r5, #0]
90013676:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
9001367a:	f8d9 1000 	ldr.w	r1, [r9]
9001367e:	4291      	cmp	r1, r2
90013680:	bfc8      	it	gt
90013682:	f8c9 2000 	strgt.w	r2, [r9]
90013686:	683a      	ldr	r2, [r7, #0]
90013688:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
9001368c:	429a      	cmp	r2, r3
9001368e:	bfb8      	it	lt
90013690:	603b      	strlt	r3, [r7, #0]
90013692:	6832      	ldr	r2, [r6, #0]
90013694:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90013698:	429a      	cmp	r2, r3
9001369a:	bfc8      	it	gt
9001369c:	6033      	strgt	r3, [r6, #0]
9001369e:	682a      	ldr	r2, [r5, #0]
900136a0:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
900136a4:	429a      	cmp	r2, r3
900136a6:	da00      	bge.n	900136aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
900136a8:	602b      	str	r3, [r5, #0]
900136aa:	b005      	add	sp, #20
900136ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900136b0:	2002      	movs	r0, #2
900136b2:	3401      	adds	r4, #1
900136b4:	9201      	str	r2, [sp, #4]
900136b6:	fb94 f4f0 	sdiv	r4, r4, r0
900136ba:	4610      	mov	r0, r2
900136bc:	f7ff fee4 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900136c0:	a903      	add	r1, sp, #12
900136c2:	9003      	str	r0, [sp, #12]
900136c4:	4650      	mov	r0, sl
900136c6:	f7ff feb4 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900136ca:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
900136ce:	9a01      	ldr	r2, [sp, #4]
900136d0:	4408      	add	r0, r1
900136d2:	f8d9 1000 	ldr.w	r1, [r9]
900136d6:	1b03      	subs	r3, r0, r4
900136d8:	4420      	add	r0, r4
900136da:	4299      	cmp	r1, r3
900136dc:	bfc8      	it	gt
900136de:	f8c9 3000 	strgt.w	r3, [r9]
900136e2:	6839      	ldr	r1, [r7, #0]
900136e4:	428b      	cmp	r3, r1
900136e6:	bfc8      	it	gt
900136e8:	603b      	strgt	r3, [r7, #0]
900136ea:	f8d9 1000 	ldr.w	r1, [r9]
900136ee:	4281      	cmp	r1, r0
900136f0:	bfc8      	it	gt
900136f2:	f8c9 0000 	strgt.w	r0, [r9]
900136f6:	6839      	ldr	r1, [r7, #0]
900136f8:	4288      	cmp	r0, r1
900136fa:	bfc8      	it	gt
900136fc:	6038      	strgt	r0, [r7, #0]
900136fe:	4610      	mov	r0, r2
90013700:	f7ff fee1 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013704:	a903      	add	r1, sp, #12
90013706:	9003      	str	r0, [sp, #12]
90013708:	4650      	mov	r0, sl
9001370a:	f7ff fe92 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001370e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90013712:	1a10      	subs	r0, r2, r0
90013714:	6832      	ldr	r2, [r6, #0]
90013716:	1b01      	subs	r1, r0, r4
90013718:	4420      	add	r0, r4
9001371a:	428a      	cmp	r2, r1
9001371c:	bfc8      	it	gt
9001371e:	6031      	strgt	r1, [r6, #0]
90013720:	682a      	ldr	r2, [r5, #0]
90013722:	4291      	cmp	r1, r2
90013724:	bfc8      	it	gt
90013726:	6029      	strgt	r1, [r5, #0]
90013728:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
9001372c:	6832      	ldr	r2, [r6, #0]
9001372e:	4282      	cmp	r2, r0
90013730:	bfc8      	it	gt
90013732:	6030      	strgt	r0, [r6, #0]
90013734:	682a      	ldr	r2, [r5, #0]
90013736:	4290      	cmp	r0, r2
90013738:	fb9b f2f1 	sdiv	r2, fp, r1
9001373c:	fb01 b212 	mls	r2, r1, r2, fp
90013740:	bfc8      	it	gt
90013742:	6028      	strgt	r0, [r5, #0]
90013744:	1a8a      	subs	r2, r1, r2
90013746:	fb92 f0f1 	sdiv	r0, r2, r1
9001374a:	fb01 2210 	mls	r2, r1, r0, r2
9001374e:	4493      	add	fp, r2
90013750:	9b00      	ldr	r3, [sp, #0]
90013752:	455b      	cmp	r3, fp
90013754:	db40      	blt.n	900137d8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
90013756:	4658      	mov	r0, fp
90013758:	f7ff fe96 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001375c:	a903      	add	r1, sp, #12
9001375e:	9003      	str	r0, [sp, #12]
90013760:	4650      	mov	r0, sl
90013762:	f7ff fe66 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013766:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
9001376a:	4410      	add	r0, r2
9001376c:	f8d9 2000 	ldr.w	r2, [r9]
90013770:	1b01      	subs	r1, r0, r4
90013772:	4420      	add	r0, r4
90013774:	428a      	cmp	r2, r1
90013776:	bfc8      	it	gt
90013778:	f8c9 1000 	strgt.w	r1, [r9]
9001377c:	683a      	ldr	r2, [r7, #0]
9001377e:	4291      	cmp	r1, r2
90013780:	bfc8      	it	gt
90013782:	6039      	strgt	r1, [r7, #0]
90013784:	f8d9 2000 	ldr.w	r2, [r9]
90013788:	4282      	cmp	r2, r0
9001378a:	bfc8      	it	gt
9001378c:	f8c9 0000 	strgt.w	r0, [r9]
90013790:	683a      	ldr	r2, [r7, #0]
90013792:	4290      	cmp	r0, r2
90013794:	bfc8      	it	gt
90013796:	6038      	strgt	r0, [r7, #0]
90013798:	4658      	mov	r0, fp
9001379a:	f7ff fe94 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001379e:	a903      	add	r1, sp, #12
900137a0:	9003      	str	r0, [sp, #12]
900137a2:	4650      	mov	r0, sl
900137a4:	f7ff fe45 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900137a8:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
900137ac:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
900137b0:	1a10      	subs	r0, r2, r0
900137b2:	6832      	ldr	r2, [r6, #0]
900137b4:	1b01      	subs	r1, r0, r4
900137b6:	4420      	add	r0, r4
900137b8:	428a      	cmp	r2, r1
900137ba:	bfc8      	it	gt
900137bc:	6031      	strgt	r1, [r6, #0]
900137be:	682a      	ldr	r2, [r5, #0]
900137c0:	4291      	cmp	r1, r2
900137c2:	bfc8      	it	gt
900137c4:	6029      	strgt	r1, [r5, #0]
900137c6:	6832      	ldr	r2, [r6, #0]
900137c8:	4282      	cmp	r2, r0
900137ca:	bfc8      	it	gt
900137cc:	6030      	strgt	r0, [r6, #0]
900137ce:	682a      	ldr	r2, [r5, #0]
900137d0:	4290      	cmp	r0, r2
900137d2:	bfc8      	it	gt
900137d4:	6028      	strgt	r0, [r5, #0]
900137d6:	e7bb      	b.n	90013750 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
900137d8:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
900137dc:	9b00      	ldr	r3, [sp, #0]
900137de:	455b      	cmp	r3, fp
900137e0:	f77f af63 	ble.w	900136aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
900137e4:	4618      	mov	r0, r3
900137e6:	f7ff fe4f 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900137ea:	a903      	add	r1, sp, #12
900137ec:	9003      	str	r0, [sp, #12]
900137ee:	4650      	mov	r0, sl
900137f0:	f7ff fe1f 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900137f4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
900137f8:	4410      	add	r0, r2
900137fa:	f8d9 2000 	ldr.w	r2, [r9]
900137fe:	1b01      	subs	r1, r0, r4
90013800:	4420      	add	r0, r4
90013802:	428a      	cmp	r2, r1
90013804:	bfc8      	it	gt
90013806:	f8c9 1000 	strgt.w	r1, [r9]
9001380a:	683a      	ldr	r2, [r7, #0]
9001380c:	4291      	cmp	r1, r2
9001380e:	bfc8      	it	gt
90013810:	6039      	strgt	r1, [r7, #0]
90013812:	f8d9 2000 	ldr.w	r2, [r9]
90013816:	4282      	cmp	r2, r0
90013818:	bfc8      	it	gt
9001381a:	f8c9 0000 	strgt.w	r0, [r9]
9001381e:	683b      	ldr	r3, [r7, #0]
90013820:	4298      	cmp	r0, r3
90013822:	bfc8      	it	gt
90013824:	6038      	strgt	r0, [r7, #0]
90013826:	9800      	ldr	r0, [sp, #0]
90013828:	f7ff fe4d 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001382c:	a903      	add	r1, sp, #12
9001382e:	9003      	str	r0, [sp, #12]
90013830:	4650      	mov	r0, sl
90013832:	f7ff fdfe 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013836:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
9001383a:	6832      	ldr	r2, [r6, #0]
9001383c:	1a18      	subs	r0, r3, r0
9001383e:	1b03      	subs	r3, r0, r4
90013840:	4404      	add	r4, r0
90013842:	429a      	cmp	r2, r3
90013844:	bfc8      	it	gt
90013846:	6033      	strgt	r3, [r6, #0]
90013848:	682a      	ldr	r2, [r5, #0]
9001384a:	4293      	cmp	r3, r2
9001384c:	bfc8      	it	gt
9001384e:	602b      	strgt	r3, [r5, #0]
90013850:	6833      	ldr	r3, [r6, #0]
90013852:	42a3      	cmp	r3, r4
90013854:	bfc8      	it	gt
90013856:	6034      	strgt	r4, [r6, #0]
90013858:	682b      	ldr	r3, [r5, #0]
9001385a:	429c      	cmp	r4, r3
9001385c:	bfc8      	it	gt
9001385e:	602c      	strgt	r4, [r5, #0]
90013860:	e723      	b.n	900136aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

90013862 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
90013862:	b530      	push	{r4, r5, lr}
90013864:	4604      	mov	r4, r0
90013866:	4608      	mov	r0, r1
90013868:	4611      	mov	r1, r2
9001386a:	461a      	mov	r2, r3
9001386c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013870:	b089      	sub	sp, #36	@ 0x24
90013872:	2500      	movs	r5, #0
90013874:	015b      	lsls	r3, r3, #5
90013876:	9505      	str	r5, [sp, #20]
90013878:	9304      	str	r3, [sp, #16]
9001387a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001387e:	015b      	lsls	r3, r3, #5
90013880:	e9cd 3506 	strd	r3, r5, [sp, #24]
90013884:	ab07      	add	r3, sp, #28
90013886:	2520      	movs	r5, #32
90013888:	9302      	str	r3, [sp, #8]
9001388a:	ab06      	add	r3, sp, #24
9001388c:	9301      	str	r3, [sp, #4]
9001388e:	ab05      	add	r3, sp, #20
90013890:	9300      	str	r3, [sp, #0]
90013892:	ab04      	add	r3, sp, #16
90013894:	f7ff fe3f 	bl	90013516 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
90013898:	9a04      	ldr	r2, [sp, #16]
9001389a:	9805      	ldr	r0, [sp, #20]
9001389c:	9b06      	ldr	r3, [sp, #24]
9001389e:	9907      	ldr	r1, [sp, #28]
900138a0:	fb92 f2f5 	sdiv	r2, r2, r5
900138a4:	fb90 f0f5 	sdiv	r0, r0, r5
900138a8:	fb93 f3f5 	sdiv	r3, r3, r5
900138ac:	fb91 f1f5 	sdiv	r1, r1, r5
900138b0:	b292      	uxth	r2, r2
900138b2:	3002      	adds	r0, #2
900138b4:	b29b      	uxth	r3, r3
900138b6:	3102      	adds	r1, #2
900138b8:	1a80      	subs	r0, r0, r2
900138ba:	3a01      	subs	r2, #1
900138bc:	1ac9      	subs	r1, r1, r3
900138be:	3b01      	subs	r3, #1
900138c0:	80a0      	strh	r0, [r4, #4]
900138c2:	4620      	mov	r0, r4
900138c4:	8022      	strh	r2, [r4, #0]
900138c6:	8063      	strh	r3, [r4, #2]
900138c8:	80e1      	strh	r1, [r4, #6]
900138ca:	b009      	add	sp, #36	@ 0x24
900138cc:	bd30      	pop	{r4, r5, pc}

900138ce <_ZNK8touchgfx6Circle14getMinimalRectEv>:
900138ce:	b510      	push	{r4, lr}
900138d0:	4604      	mov	r4, r0
900138d2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
900138d6:	f7ff ffc4 	bl	90013862 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
900138da:	4620      	mov	r0, r4
900138dc:	bd10      	pop	{r4, pc}
	...

900138e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
900138e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900138e4:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
900138e8:	468a      	mov	sl, r1
900138ea:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
900138ee:	42b5      	cmp	r5, r6
900138f0:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
900138f4:	6c01      	ldr	r1, [r0, #64]	@ 0x40
900138f6:	b0af      	sub	sp, #188	@ 0xbc
900138f8:	bfa4      	itt	ge
900138fa:	462b      	movge	r3, r5
900138fc:	4635      	movge	r5, r6
900138fe:	4604      	mov	r4, r0
90013900:	6b42      	ldr	r2, [r0, #52]	@ 0x34
90013902:	bfa8      	it	ge
90013904:	461e      	movge	r6, r3
90013906:	1b73      	subs	r3, r6, r5
90013908:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
9001390c:	f04f 0320 	mov.w	r3, #32
90013910:	bfa4      	itt	ge
90013912:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
90013916:	2500      	movge	r5, #0
90013918:	fb99 f9f3 	sdiv	r9, r9, r3
9001391c:	fb9b fbf3 	sdiv	fp, fp, r3
90013920:	2900      	cmp	r1, #0
90013922:	f000 80fb 	beq.w	90013b1c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
90013926:	f9ba 0000 	ldrsh.w	r0, [sl]
9001392a:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
9001392e:	eba9 0700 	sub.w	r7, r9, r0
90013932:	ebab 0803 	sub.w	r8, fp, r3
90013936:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
9001393a:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
9001393e:	f8ba 7004 	ldrh.w	r7, [sl, #4]
90013942:	4407      	add	r7, r0
90013944:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
90013948:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
9001394c:	f8ba 8006 	ldrh.w	r8, [sl, #6]
90013950:	b23f      	sxth	r7, r7
90013952:	4498      	add	r8, r3
90013954:	2302      	movs	r3, #2
90013956:	eba9 0707 	sub.w	r7, r9, r7
9001395a:	fa0f f888 	sxth.w	r8, r8
9001395e:	9303      	str	r3, [sp, #12]
90013960:	2f00      	cmp	r7, #0
90013962:	ebab 0808 	sub.w	r8, fp, r8
90013966:	bfb8      	it	lt
90013968:	427f      	neglt	r7, r7
9001396a:	f1b8 0f00 	cmp.w	r8, #0
9001396e:	bfb8      	it	lt
90013970:	f1c8 0800 	rsblt	r8, r8, #0
90013974:	45bc      	cmp	ip, r7
90013976:	bfcc      	ite	gt
90013978:	f10c 0701 	addgt.w	r7, ip, #1
9001397c:	3701      	addle	r7, #1
9001397e:	4540      	cmp	r0, r8
90013980:	bfc8      	it	gt
90013982:	f100 0801 	addgt.w	r8, r0, #1
90013986:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
9001398a:	bfd8      	it	le
9001398c:	f108 0801 	addle.w	r8, r8, #1
90013990:	3001      	adds	r0, #1
90013992:	fb08 f808 	mul.w	r8, r8, r8
90013996:	1040      	asrs	r0, r0, #1
90013998:	fb07 8707 	mla	r7, r7, r7, r8
9001399c:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
900139a0:	fb91 f1f3 	sdiv	r1, r1, r3
900139a4:	1a52      	subs	r2, r2, r1
900139a6:	920f      	str	r2, [sp, #60]	@ 0x3c
900139a8:	f7ff fd4e 	bl	90013448 <_ZN8touchgfx7CWRUtil4sineEi>
900139ac:	a92e      	add	r1, sp, #184	@ 0xb8
900139ae:	f841 0d74 	str.w	r0, [r1, #-116]!
900139b2:	a80f      	add	r0, sp, #60	@ 0x3c
900139b4:	f7ff fd3d 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900139b8:	f04f 0c20 	mov.w	ip, #32
900139bc:	9b03      	ldr	r3, [sp, #12]
900139be:	fb90 f0fc 	sdiv	r0, r0, ip
900139c2:	4340      	muls	r0, r0
900139c4:	4287      	cmp	r7, r0
900139c6:	da04      	bge.n	900139d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
900139c8:	2401      	movs	r4, #1
900139ca:	4620      	mov	r0, r4
900139cc:	b02f      	add	sp, #188	@ 0xbc
900139ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900139d2:	6c21      	ldr	r1, [r4, #64]	@ 0x40
900139d4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900139d6:	fb91 f2f3 	sdiv	r2, r1, r3
900139da:	4402      	add	r2, r0
900139dc:	fb92 f2fc 	sdiv	r2, r2, ip
900139e0:	f9ba 1000 	ldrsh.w	r1, [sl]
900139e4:	3201      	adds	r2, #1
900139e6:	f8ba 3004 	ldrh.w	r3, [sl, #4]
900139ea:	4352      	muls	r2, r2
900139ec:	440b      	add	r3, r1
900139ee:	b21b      	sxth	r3, r3
900139f0:	454b      	cmp	r3, r9
900139f2:	bfa8      	it	ge
900139f4:	464b      	movge	r3, r9
900139f6:	428b      	cmp	r3, r1
900139f8:	bfac      	ite	ge
900139fa:	eba9 0903 	subge.w	r9, r9, r3
900139fe:	eba9 0901 	sublt.w	r9, r9, r1
90013a02:	f8ba 3006 	ldrh.w	r3, [sl, #6]
90013a06:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
90013a0a:	440b      	add	r3, r1
90013a0c:	b21b      	sxth	r3, r3
90013a0e:	455b      	cmp	r3, fp
90013a10:	bfa8      	it	ge
90013a12:	465b      	movge	r3, fp
90013a14:	428b      	cmp	r3, r1
90013a16:	bfac      	ite	ge
90013a18:	ebab 0b03 	subge.w	fp, fp, r3
90013a1c:	ebab 0b01 	sublt.w	fp, fp, r1
90013a20:	fb0b fb0b 	mul.w	fp, fp, fp
90013a24:	fb09 b909 	mla	r9, r9, r9, fp
90013a28:	4591      	cmp	r9, r2
90013a2a:	dccd      	bgt.n	900139c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
90013a2c:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
90013a30:	4621      	mov	r1, r4
90013a32:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
90013a34:	4648      	mov	r0, r9
90013a36:	f004 fd1f 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013a3a:	6823      	ldr	r3, [r4, #0]
90013a3c:	4620      	mov	r0, r4
90013a3e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90013a40:	4798      	blx	r3
90013a42:	4653      	mov	r3, sl
90013a44:	9000      	str	r0, [sp, #0]
90013a46:	464a      	mov	r2, r9
90013a48:	4639      	mov	r1, r7
90013a4a:	a811      	add	r0, sp, #68	@ 0x44
90013a4c:	f015 fc46 	bl	900292dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90013a50:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90013a52:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90013a54:	920b      	str	r2, [sp, #44]	@ 0x2c
90013a56:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
90013a5a:	930c      	str	r3, [sp, #48]	@ 0x30
90013a5c:	dd07      	ble.n	90013a6e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
90013a5e:	2102      	movs	r1, #2
90013a60:	fb93 f3f1 	sdiv	r3, r3, r1
90013a64:	4413      	add	r3, r2
90013a66:	930c      	str	r3, [sp, #48]	@ 0x30
90013a68:	fb93 f3f1 	sdiv	r3, r3, r1
90013a6c:	930b      	str	r3, [sp, #44]	@ 0x2c
90013a6e:	f04f 0a02 	mov.w	sl, #2
90013a72:	4628      	mov	r0, r5
90013a74:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
90013a78:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
90013a7c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90013a80:	017f      	lsls	r7, r7, #5
90013a82:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013a86:	930d      	str	r3, [sp, #52]	@ 0x34
90013a88:	f7ff fcfe 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013a8c:	4649      	mov	r1, r9
90013a8e:	900f      	str	r0, [sp, #60]	@ 0x3c
90013a90:	a80d      	add	r0, sp, #52	@ 0x34
90013a92:	f7ff fcce 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013a96:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013a98:	fb90 f0fa 	sdiv	r0, r0, sl
90013a9c:	eb00 0b03 	add.w	fp, r0, r3
90013aa0:	4628      	mov	r0, r5
90013aa2:	f7ff fd10 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013aa6:	f848 0d80 	str.w	r0, [r8, #-128]!
90013aaa:	a80d      	add	r0, sp, #52	@ 0x34
90013aac:	4641      	mov	r1, r8
90013aae:	f7ff fcc0 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013ab2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013ab4:	4659      	mov	r1, fp
90013ab6:	fb90 f0fa 	sdiv	r0, r0, sl
90013aba:	1a12      	subs	r2, r2, r0
90013abc:	a811      	add	r0, sp, #68	@ 0x44
90013abe:	f015 fd59 	bl	90029574 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90013ac2:	f105 0a20 	add.w	sl, r5, #32
90013ac6:	bb67      	cbnz	r7, 90013b22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
90013ac8:	46ab      	mov	fp, r5
90013aca:	45b2      	cmp	sl, r6
90013acc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90013ace:	dc33      	bgt.n	90013b38 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
90013ad0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90013ad2:	4650      	mov	r0, sl
90013ad4:	eb02 0241 	add.w	r2, r2, r1, lsl #1
90013ad8:	920d      	str	r2, [sp, #52]	@ 0x34
90013ada:	f7ff fcd5 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013ade:	4641      	mov	r1, r8
90013ae0:	900e      	str	r0, [sp, #56]	@ 0x38
90013ae2:	a80d      	add	r0, sp, #52	@ 0x34
90013ae4:	f7ff fca5 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013ae8:	2302      	movs	r3, #2
90013aea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90013aec:	fb90 f0f3 	sdiv	r0, r0, r3
90013af0:	eb00 0b02 	add.w	fp, r0, r2
90013af4:	4650      	mov	r0, sl
90013af6:	f7ff fce6 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013afa:	4649      	mov	r1, r9
90013afc:	900f      	str	r0, [sp, #60]	@ 0x3c
90013afe:	a80d      	add	r0, sp, #52	@ 0x34
90013b00:	f7ff fc97 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013b04:	2302      	movs	r3, #2
90013b06:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013b08:	4659      	mov	r1, fp
90013b0a:	46d3      	mov	fp, sl
90013b0c:	44ba      	add	sl, r7
90013b0e:	fb90 f0f3 	sdiv	r0, r0, r3
90013b12:	1a12      	subs	r2, r2, r0
90013b14:	a811      	add	r0, sp, #68	@ 0x44
90013b16:	f015 fd7a 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013b1a:	e7d6      	b.n	90013aca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
90013b1c:	fb92 f2f3 	sdiv	r2, r2, r3
90013b20:	e75e      	b.n	900139e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
90013b22:	fb9a f2f7 	sdiv	r2, sl, r7
90013b26:	fb07 a212 	mls	r2, r7, r2, sl
90013b2a:	1aba      	subs	r2, r7, r2
90013b2c:	fb92 f1f7 	sdiv	r1, r2, r7
90013b30:	fb07 2211 	mls	r2, r7, r1, r2
90013b34:	4492      	add	sl, r2
90013b36:	e7c7      	b.n	90013ac8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
90013b38:	455e      	cmp	r6, fp
90013b3a:	dd23      	ble.n	90013b84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
90013b3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013b3e:	f04f 0a02 	mov.w	sl, #2
90013b42:	4630      	mov	r0, r6
90013b44:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90013b48:	920d      	str	r2, [sp, #52]	@ 0x34
90013b4a:	f7ff fc9d 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013b4e:	4641      	mov	r1, r8
90013b50:	900e      	str	r0, [sp, #56]	@ 0x38
90013b52:	a80d      	add	r0, sp, #52	@ 0x34
90013b54:	f7ff fc6d 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013b58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013b5a:	fb90 f0fa 	sdiv	r0, r0, sl
90013b5e:	4403      	add	r3, r0
90013b60:	4630      	mov	r0, r6
90013b62:	9303      	str	r3, [sp, #12]
90013b64:	f7ff fcaf 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013b68:	4649      	mov	r1, r9
90013b6a:	900f      	str	r0, [sp, #60]	@ 0x3c
90013b6c:	a80d      	add	r0, sp, #52	@ 0x34
90013b6e:	f7ff fc60 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013b72:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013b74:	9b03      	ldr	r3, [sp, #12]
90013b76:	fb90 f0fa 	sdiv	r0, r0, sl
90013b7a:	4619      	mov	r1, r3
90013b7c:	1a12      	subs	r2, r2, r0
90013b7e:	a811      	add	r0, sp, #68	@ 0x44
90013b80:	f015 fd45 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013b84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013b86:	b99b      	cbnz	r3, 90013bb0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
90013b88:	1b75      	subs	r5, r6, r5
90013b8a:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
90013b8e:	da04      	bge.n	90013b9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90013b90:	a811      	add	r0, sp, #68	@ 0x44
90013b92:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
90013b96:	f015 fd3a 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013b9a:	21ff      	movs	r1, #255	@ 0xff
90013b9c:	a811      	add	r0, sp, #68	@ 0x44
90013b9e:	f015 fc31 	bl	90029404 <_ZN8touchgfx6Canvas6renderEh>
90013ba2:	4604      	mov	r4, r0
90013ba4:	4b89      	ldr	r3, [pc, #548]	@ (90013dcc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
90013ba6:	a816      	add	r0, sp, #88	@ 0x58
90013ba8:	9311      	str	r3, [sp, #68]	@ 0x44
90013baa:	f000 ffcf 	bl	90014b4c <_ZN8touchgfx7OutlineD1Ev>
90013bae:	e70c      	b.n	900139ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
90013bb0:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
90013bb4:	429a      	cmp	r2, r3
90013bb6:	f0c0 8107 	bcc.w	90013dc8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
90013bba:	1b73      	subs	r3, r6, r5
90013bbc:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
90013bc0:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90013bc4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
90013bc8:	9303      	str	r3, [sp, #12]
90013bca:	da43      	bge.n	90013c54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90013bcc:	4630      	mov	r0, r6
90013bce:	f7ff fc5b 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013bd2:	4649      	mov	r1, r9
90013bd4:	900f      	str	r0, [sp, #60]	@ 0x3c
90013bd6:	a80b      	add	r0, sp, #44	@ 0x2c
90013bd8:	f7ff fc2b 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013bdc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013bde:	18c3      	adds	r3, r0, r3
90013be0:	4630      	mov	r0, r6
90013be2:	9305      	str	r3, [sp, #20]
90013be4:	f7ff fc6f 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013be8:	4649      	mov	r1, r9
90013bea:	900f      	str	r0, [sp, #60]	@ 0x3c
90013bec:	a80b      	add	r0, sp, #44	@ 0x2c
90013bee:	f7ff fc20 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013bf2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90013bf4:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
90013bf8:	1a1b      	subs	r3, r3, r0
90013bfa:	9206      	str	r2, [sp, #24]
90013bfc:	9304      	str	r3, [sp, #16]
90013bfe:	eb06 030a 	add.w	r3, r6, sl
90013c02:	9a06      	ldr	r2, [sp, #24]
90013c04:	4293      	cmp	r3, r2
90013c06:	da25      	bge.n	90013c54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90013c08:	4618      	mov	r0, r3
90013c0a:	9308      	str	r3, [sp, #32]
90013c0c:	f7ff fc3c 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013c10:	4649      	mov	r1, r9
90013c12:	900f      	str	r0, [sp, #60]	@ 0x3c
90013c14:	a80c      	add	r0, sp, #48	@ 0x30
90013c16:	f7ff fc0c 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013c1a:	2202      	movs	r2, #2
90013c1c:	9b05      	ldr	r3, [sp, #20]
90013c1e:	9209      	str	r2, [sp, #36]	@ 0x24
90013c20:	fb90 f0f2 	sdiv	r0, r0, r2
90013c24:	18c3      	adds	r3, r0, r3
90013c26:	9307      	str	r3, [sp, #28]
90013c28:	9b08      	ldr	r3, [sp, #32]
90013c2a:	4618      	mov	r0, r3
90013c2c:	f7ff fc4b 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013c30:	a92e      	add	r1, sp, #184	@ 0xb8
90013c32:	f841 0d80 	str.w	r0, [r1, #-128]!
90013c36:	a80c      	add	r0, sp, #48	@ 0x30
90013c38:	f7ff fbfb 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013c3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90013c3e:	9b04      	ldr	r3, [sp, #16]
90013c40:	9907      	ldr	r1, [sp, #28]
90013c42:	fb90 f2f2 	sdiv	r2, r0, r2
90013c46:	a811      	add	r0, sp, #68	@ 0x44
90013c48:	1a9a      	subs	r2, r3, r2
90013c4a:	f015 fce0 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013c4e:	9b08      	ldr	r3, [sp, #32]
90013c50:	4453      	add	r3, sl
90013c52:	e7d6      	b.n	90013c02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
90013c54:	455e      	cmp	r6, fp
90013c56:	dd25      	ble.n	90013ca4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
90013c58:	4630      	mov	r0, r6
90013c5a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90013c5e:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90013c62:	930d      	str	r3, [sp, #52]	@ 0x34
90013c64:	f7ff fc10 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013c68:	4641      	mov	r1, r8
90013c6a:	900e      	str	r0, [sp, #56]	@ 0x38
90013c6c:	a80d      	add	r0, sp, #52	@ 0x34
90013c6e:	f7ff fbe0 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013c72:	2202      	movs	r2, #2
90013c74:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013c76:	9204      	str	r2, [sp, #16]
90013c78:	fb90 f0f2 	sdiv	r0, r0, r2
90013c7c:	eb00 0903 	add.w	r9, r0, r3
90013c80:	4630      	mov	r0, r6
90013c82:	f7ff fc20 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013c86:	a92e      	add	r1, sp, #184	@ 0xb8
90013c88:	f841 0d7c 	str.w	r0, [r1, #-124]!
90013c8c:	a80d      	add	r0, sp, #52	@ 0x34
90013c8e:	f7ff fbd0 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013c92:	9a04      	ldr	r2, [sp, #16]
90013c94:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90013c96:	4649      	mov	r1, r9
90013c98:	fb90 f2f2 	sdiv	r2, r0, r2
90013c9c:	a811      	add	r0, sp, #68	@ 0x44
90013c9e:	1a9a      	subs	r2, r3, r2
90013ca0:	f015 fcb5 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013ca4:	46d9      	mov	r9, fp
90013ca6:	2602      	movs	r6, #2
90013ca8:	45a9      	cmp	r9, r5
90013caa:	db25      	blt.n	90013cf8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
90013cac:	4648      	mov	r0, r9
90013cae:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90013cb2:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90013cb6:	930d      	str	r3, [sp, #52]	@ 0x34
90013cb8:	f7ff fbe6 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013cbc:	4641      	mov	r1, r8
90013cbe:	900e      	str	r0, [sp, #56]	@ 0x38
90013cc0:	a80d      	add	r0, sp, #52	@ 0x34
90013cc2:	f7ff fbb6 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013cc6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013cc8:	fb90 f0f6 	sdiv	r0, r0, r6
90013ccc:	eb00 0b03 	add.w	fp, r0, r3
90013cd0:	4648      	mov	r0, r9
90013cd2:	f7ff fbf8 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013cd6:	a90f      	add	r1, sp, #60	@ 0x3c
90013cd8:	900f      	str	r0, [sp, #60]	@ 0x3c
90013cda:	a80d      	add	r0, sp, #52	@ 0x34
90013cdc:	f7ff fba9 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013ce0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013ce2:	4659      	mov	r1, fp
90013ce4:	46cb      	mov	fp, r9
90013ce6:	eba9 0907 	sub.w	r9, r9, r7
90013cea:	fb90 f0f6 	sdiv	r0, r0, r6
90013cee:	1a12      	subs	r2, r2, r0
90013cf0:	a811      	add	r0, sp, #68	@ 0x44
90013cf2:	f015 fc8c 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013cf6:	e7d7      	b.n	90013ca8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
90013cf8:	455d      	cmp	r5, fp
90013cfa:	da22      	bge.n	90013d42 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
90013cfc:	2602      	movs	r6, #2
90013cfe:	4628      	mov	r0, r5
90013d00:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90013d04:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90013d08:	930d      	str	r3, [sp, #52]	@ 0x34
90013d0a:	f7ff fbbd 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013d0e:	4641      	mov	r1, r8
90013d10:	900e      	str	r0, [sp, #56]	@ 0x38
90013d12:	a80d      	add	r0, sp, #52	@ 0x34
90013d14:	f7ff fb8d 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013d18:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013d1a:	fb90 f0f6 	sdiv	r0, r0, r6
90013d1e:	4407      	add	r7, r0
90013d20:	4628      	mov	r0, r5
90013d22:	f7ff fbd0 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013d26:	a92e      	add	r1, sp, #184	@ 0xb8
90013d28:	f841 0d7c 	str.w	r0, [r1, #-124]!
90013d2c:	a80d      	add	r0, sp, #52	@ 0x34
90013d2e:	f7ff fb80 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013d32:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013d34:	4639      	mov	r1, r7
90013d36:	fb90 f0f6 	sdiv	r0, r0, r6
90013d3a:	1a12      	subs	r2, r2, r0
90013d3c:	a811      	add	r0, sp, #68	@ 0x44
90013d3e:	f015 fc66 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013d42:	9b03      	ldr	r3, [sp, #12]
90013d44:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90013d48:	f6bf af27 	bge.w	90013b9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90013d4c:	ae2e      	add	r6, sp, #184	@ 0xb8
90013d4e:	4628      	mov	r0, r5
90013d50:	f7ff fb9a 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013d54:	f04f 0b02 	mov.w	fp, #2
90013d58:	f846 0d7c 	str.w	r0, [r6, #-124]!
90013d5c:	a80b      	add	r0, sp, #44	@ 0x2c
90013d5e:	4631      	mov	r1, r6
90013d60:	f7ff fb67 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013d64:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013d66:	eb00 0903 	add.w	r9, r0, r3
90013d6a:	4628      	mov	r0, r5
90013d6c:	f7ff fbab 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013d70:	4631      	mov	r1, r6
90013d72:	900f      	str	r0, [sp, #60]	@ 0x3c
90013d74:	a80b      	add	r0, sp, #44	@ 0x2c
90013d76:	f7ff fb5c 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013d7a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90013d7c:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
90013d80:	eba3 0800 	sub.w	r8, r3, r0
90013d84:	4454      	add	r4, sl
90013d86:	42a5      	cmp	r5, r4
90013d88:	f77f af07 	ble.w	90013b9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90013d8c:	4620      	mov	r0, r4
90013d8e:	f7ff fb7b 	bl	90013488 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013d92:	4631      	mov	r1, r6
90013d94:	900f      	str	r0, [sp, #60]	@ 0x3c
90013d96:	a80c      	add	r0, sp, #48	@ 0x30
90013d98:	f7ff fb4b 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013d9c:	fb90 f0fb 	sdiv	r0, r0, fp
90013da0:	eb00 0709 	add.w	r7, r0, r9
90013da4:	4620      	mov	r0, r4
90013da6:	f7ff fb8e 	bl	900134c6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013daa:	a90e      	add	r1, sp, #56	@ 0x38
90013dac:	900e      	str	r0, [sp, #56]	@ 0x38
90013dae:	a80c      	add	r0, sp, #48	@ 0x30
90013db0:	f7ff fb3f 	bl	90013432 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013db4:	4639      	mov	r1, r7
90013db6:	4454      	add	r4, sl
90013db8:	fb90 f2fb 	sdiv	r2, r0, fp
90013dbc:	a811      	add	r0, sp, #68	@ 0x44
90013dbe:	eba8 0202 	sub.w	r2, r8, r2
90013dc2:	f015 fc24 	bl	9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013dc6:	e7de      	b.n	90013d86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
90013dc8:	2400      	movs	r4, #0
90013dca:	e6eb      	b.n	90013ba4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
90013dcc:	9002eb0c 	.word	0x9002eb0c

90013dd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013dd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013dd2:	6803      	ldr	r3, [r0, #0]
90013dd4:	460d      	mov	r5, r1
90013dd6:	4604      	mov	r4, r0
90013dd8:	4601      	mov	r1, r0
90013dda:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013ddc:	a802      	add	r0, sp, #8
90013dde:	4798      	blx	r3
90013de0:	6828      	ldr	r0, [r5, #0]
90013de2:	6869      	ldr	r1, [r5, #4]
90013de4:	466b      	mov	r3, sp
90013de6:	c303      	stmia	r3!, {r0, r1}
90013de8:	4668      	mov	r0, sp
90013dea:	4619      	mov	r1, r3
90013dec:	f7fc ff94 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90013df0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90013df2:	b188      	cbz	r0, 90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013df4:	6803      	ldr	r3, [r0, #0]
90013df6:	1d21      	adds	r1, r4, #4
90013df8:	68db      	ldr	r3, [r3, #12]
90013dfa:	4798      	blx	r3
90013dfc:	b160      	cbz	r0, 90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013dfe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013e02:	2b00      	cmp	r3, #0
90013e04:	dd08      	ble.n	90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013e06:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013e0a:	2d00      	cmp	r5, #0
90013e0c:	dd04      	ble.n	90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013e0e:	4a2b      	ldr	r2, [pc, #172]	@ (90013ebc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013e10:	7812      	ldrb	r2, [r2, #0]
90013e12:	b11a      	cbz	r2, 90013e1c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013e14:	2a01      	cmp	r2, #1
90013e16:	d029      	beq.n	90013e6c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013e18:	b004      	add	sp, #16
90013e1a:	bd70      	pop	{r4, r5, r6, pc}
90013e1c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013e20:	441d      	add	r5, r3
90013e22:	b2ad      	uxth	r5, r5
90013e24:	b22e      	sxth	r6, r5
90013e26:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013e2a:	42b3      	cmp	r3, r6
90013e2c:	daf4      	bge.n	90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013e2e:	6823      	ldr	r3, [r4, #0]
90013e30:	4669      	mov	r1, sp
90013e32:	4620      	mov	r0, r4
90013e34:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013e36:	4798      	blx	r3
90013e38:	b940      	cbnz	r0, 90013e4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013e3a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013e3e:	2b01      	cmp	r3, #1
90013e40:	d004      	beq.n	90013e4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013e42:	3301      	adds	r3, #1
90013e44:	105b      	asrs	r3, r3, #1
90013e46:	f8ad 3006 	strh.w	r3, [sp, #6]
90013e4a:	e7f0      	b.n	90013e2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013e4c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013e50:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013e54:	4413      	add	r3, r2
90013e56:	b29b      	uxth	r3, r3
90013e58:	441a      	add	r2, r3
90013e5a:	f8ad 3002 	strh.w	r3, [sp, #2]
90013e5e:	b212      	sxth	r2, r2
90013e60:	4296      	cmp	r6, r2
90013e62:	dae0      	bge.n	90013e26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013e64:	1aeb      	subs	r3, r5, r3
90013e66:	f8ad 3006 	strh.w	r3, [sp, #6]
90013e6a:	e7dc      	b.n	90013e26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013e6c:	f8bd 5000 	ldrh.w	r5, [sp]
90013e70:	441d      	add	r5, r3
90013e72:	b2ad      	uxth	r5, r5
90013e74:	b22e      	sxth	r6, r5
90013e76:	f9bd 3000 	ldrsh.w	r3, [sp]
90013e7a:	42b3      	cmp	r3, r6
90013e7c:	dacc      	bge.n	90013e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013e7e:	6823      	ldr	r3, [r4, #0]
90013e80:	4669      	mov	r1, sp
90013e82:	4620      	mov	r0, r4
90013e84:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013e86:	4798      	blx	r3
90013e88:	b940      	cbnz	r0, 90013e9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013e8a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013e8e:	2b01      	cmp	r3, #1
90013e90:	d004      	beq.n	90013e9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013e92:	3301      	adds	r3, #1
90013e94:	105b      	asrs	r3, r3, #1
90013e96:	f8ad 3004 	strh.w	r3, [sp, #4]
90013e9a:	e7f0      	b.n	90013e7e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013e9c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013ea0:	f8bd 3000 	ldrh.w	r3, [sp]
90013ea4:	4413      	add	r3, r2
90013ea6:	b29b      	uxth	r3, r3
90013ea8:	441a      	add	r2, r3
90013eaa:	f8ad 3000 	strh.w	r3, [sp]
90013eae:	b212      	sxth	r2, r2
90013eb0:	4296      	cmp	r6, r2
90013eb2:	dae0      	bge.n	90013e76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013eb4:	1aeb      	subs	r3, r5, r3
90013eb6:	f8ad 3004 	strh.w	r3, [sp, #4]
90013eba:	e7dc      	b.n	90013e76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013ebc:	240234b4 	.word	0x240234b4

90013ec0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013ec0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013ec2:	6803      	ldr	r3, [r0, #0]
90013ec4:	4604      	mov	r4, r0
90013ec6:	4601      	mov	r1, r0
90013ec8:	4668      	mov	r0, sp
90013eca:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013ecc:	4798      	blx	r3
90013ece:	2100      	movs	r1, #0
90013ed0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013ed4:	4668      	mov	r0, sp
90013ed6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013eda:	9102      	str	r1, [sp, #8]
90013edc:	a902      	add	r1, sp, #8
90013ede:	f8ad 200c 	strh.w	r2, [sp, #12]
90013ee2:	f8ad 300e 	strh.w	r3, [sp, #14]
90013ee6:	f7fc ff17 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90013eea:	6823      	ldr	r3, [r4, #0]
90013eec:	4669      	mov	r1, sp
90013eee:	4620      	mov	r0, r4
90013ef0:	691b      	ldr	r3, [r3, #16]
90013ef2:	4798      	blx	r3
90013ef4:	b004      	add	sp, #16
90013ef6:	bd10      	pop	{r4, pc}

90013ef8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013ef8:	2101      	movs	r1, #1
90013efa:	2200      	movs	r2, #0
90013efc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013f00:	490a      	ldr	r1, [pc, #40]	@ (90013f2c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013f02:	8082      	strh	r2, [r0, #4]
90013f04:	6001      	str	r1, [r0, #0]
90013f06:	21ff      	movs	r1, #255	@ 0xff
90013f08:	80c2      	strh	r2, [r0, #6]
90013f0a:	8102      	strh	r2, [r0, #8]
90013f0c:	8142      	strh	r2, [r0, #10]
90013f0e:	8182      	strh	r2, [r0, #12]
90013f10:	81c2      	strh	r2, [r0, #14]
90013f12:	8202      	strh	r2, [r0, #16]
90013f14:	8242      	strh	r2, [r0, #18]
90013f16:	61c2      	str	r2, [r0, #28]
90013f18:	8402      	strh	r2, [r0, #32]
90013f1a:	8442      	strh	r2, [r0, #34]	@ 0x22
90013f1c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90013f20:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90013f24:	6282      	str	r2, [r0, #40]	@ 0x28
90013f26:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013f2a:	4770      	bx	lr
90013f2c:	9002e414 	.word	0x9002e414

90013f30 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90013f30:	b508      	push	{r3, lr}
90013f32:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013f36:	b10b      	cbz	r3, 90013f3c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90013f38:	f7ee ff62 	bl	90002e00 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90013f3c:	bd08      	pop	{r3, pc}

90013f3e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90013f3e:	6803      	ldr	r3, [r0, #0]
90013f40:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
90013f44:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90013f46:	4718      	bx	r3

90013f48 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90013f48:	4770      	bx	lr

90013f4a <_ZN8touchgfx14SnapshotWidgetD0Ev>:
90013f4a:	b510      	push	{r4, lr}
90013f4c:	4604      	mov	r4, r0
90013f4e:	212c      	movs	r1, #44	@ 0x2c
90013f50:	f015 fe25 	bl	90029b9e <_ZdlPvj>
90013f54:	4620      	mov	r0, r4
90013f56:	bd10      	pop	{r4, pc}

90013f58 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90013f58:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90013f5c:	2bff      	cmp	r3, #255	@ 0xff
90013f5e:	b510      	push	{r4, lr}
90013f60:	d104      	bne.n	90013f6c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90013f62:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
90013f64:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90013f68:	429a      	cmp	r2, r3
90013f6a:	d105      	bne.n	90013f78 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90013f6c:	2300      	movs	r3, #0
90013f6e:	8003      	strh	r3, [r0, #0]
90013f70:	8043      	strh	r3, [r0, #2]
90013f72:	8083      	strh	r3, [r0, #4]
90013f74:	80c3      	strh	r3, [r0, #6]
90013f76:	bd10      	pop	{r4, pc}
90013f78:	2300      	movs	r3, #0
90013f7a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90013f7e:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90013f82:	8003      	strh	r3, [r0, #0]
90013f84:	8043      	strh	r3, [r0, #2]
90013f86:	8084      	strh	r4, [r0, #4]
90013f88:	80c2      	strh	r2, [r0, #6]
90013f8a:	e7f4      	b.n	90013f76 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90013f8c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90013f8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013f90:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013f94:	b087      	sub	sp, #28
90013f96:	4604      	mov	r4, r0
90013f98:	4689      	mov	r9, r1
90013f9a:	b363      	cbz	r3, 90013ff6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90013f9c:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
90013f9e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90013fa2:	429a      	cmp	r2, r3
90013fa4:	d027      	beq.n	90013ff6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90013fa6:	ad06      	add	r5, sp, #24
90013fa8:	2700      	movs	r7, #0
90013faa:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90013fae:	4628      	mov	r0, r5
90013fb0:	f006 fdbe 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013fb4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013fb8:	a904      	add	r1, sp, #16
90013fba:	f8ad 0014 	strh.w	r0, [sp, #20]
90013fbe:	f8ad 3016 	strh.w	r3, [sp, #22]
90013fc2:	4620      	mov	r0, r4
90013fc4:	6823      	ldr	r3, [r4, #0]
90013fc6:	9704      	str	r7, [sp, #16]
90013fc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013fca:	4798      	blx	r3
90013fcc:	f7fd f988 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90013fd0:	6803      	ldr	r3, [r0, #0]
90013fd2:	4606      	mov	r6, r0
90013fd4:	4628      	mov	r0, r5
90013fd6:	f8d3 800c 	ldr.w	r8, [r3, #12]
90013fda:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
90013fdc:	f8ad 300c 	strh.w	r3, [sp, #12]
90013fe0:	f006 fe98 	bl	9001ad14 <_ZNK8touchgfx6Bitmap7getDataEv>
90013fe4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90013fe8:	4601      	mov	r1, r0
90013fea:	9701      	str	r7, [sp, #4]
90013fec:	aa04      	add	r2, sp, #16
90013fee:	9300      	str	r3, [sp, #0]
90013ff0:	4630      	mov	r0, r6
90013ff2:	464b      	mov	r3, r9
90013ff4:	47c0      	blx	r8
90013ff6:	b007      	add	sp, #28
90013ff8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90013ffc <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90013ffc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013ffe:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014002:	460d      	mov	r5, r1
90014004:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90014008:	2100      	movs	r1, #0
9001400a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001400e:	4604      	mov	r4, r0
90014010:	6803      	ldr	r3, [r0, #0]
90014012:	f8ad 2004 	strh.w	r2, [sp, #4]
90014016:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90014018:	9100      	str	r1, [sp, #0]
9001401a:	4669      	mov	r1, sp
9001401c:	4798      	blx	r3
9001401e:	4621      	mov	r1, r4
90014020:	a802      	add	r0, sp, #8
90014022:	f004 fa29 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014026:	f7fd f95b 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
9001402a:	6803      	ldr	r3, [r0, #0]
9001402c:	aa02      	add	r2, sp, #8
9001402e:	4669      	mov	r1, sp
90014030:	695e      	ldr	r6, [r3, #20]
90014032:	462b      	mov	r3, r5
90014034:	47b0      	blx	r6
90014036:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001403a:	2800      	cmp	r0, #0
9001403c:	bf08      	it	eq
9001403e:	461d      	moveq	r5, r3
90014040:	84e5      	strh	r5, [r4, #38]	@ 0x26
90014042:	b004      	add	sp, #16
90014044:	bd70      	pop	{r4, r5, r6, pc}
	...

90014048 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90014048:	2200      	movs	r2, #0
9001404a:	8082      	strh	r2, [r0, #4]
9001404c:	80c2      	strh	r2, [r0, #6]
9001404e:	8102      	strh	r2, [r0, #8]
90014050:	8142      	strh	r2, [r0, #10]
90014052:	8182      	strh	r2, [r0, #12]
90014054:	81c2      	strh	r2, [r0, #14]
90014056:	8202      	strh	r2, [r0, #16]
90014058:	8242      	strh	r2, [r0, #18]
9001405a:	61c2      	str	r2, [r0, #28]
9001405c:	8402      	strh	r2, [r0, #32]
9001405e:	8442      	strh	r2, [r0, #34]	@ 0x22
90014060:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90014064:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014068:	2201      	movs	r2, #1
9001406a:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
9001406e:	4a04      	ldr	r2, [pc, #16]	@ (90014080 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90014070:	6002      	str	r2, [r0, #0]
90014072:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90014076:	84c2      	strh	r2, [r0, #38]	@ 0x26
90014078:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
9001407c:	4770      	bx	lr
9001407e:	bf00      	nop
90014080:	9002e48c 	.word	0x9002e48c

90014084 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90014084:	2000      	movs	r0, #0
90014086:	4770      	bx	lr

90014088 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014088:	4b07      	ldr	r3, [pc, #28]	@ (900140a8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
9001408a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9001408c:	881b      	ldrh	r3, [r3, #0]
9001408e:	4293      	cmp	r3, r2
90014090:	bf81      	itttt	hi
90014092:	4b06      	ldrhi	r3, [pc, #24]	@ (900140ac <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014094:	681b      	ldrhi	r3, [r3, #0]
90014096:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9001409a:	7858      	ldrbhi	r0, [r3, #1]
9001409c:	bf8c      	ite	hi
9001409e:	f000 0003 	andhi.w	r0, r0, #3
900140a2:	2000      	movls	r0, #0
900140a4:	4770      	bx	lr
900140a6:	bf00      	nop
900140a8:	24023518 	.word	0x24023518
900140ac:	24023514 	.word	0x24023514

900140b0 <_ZN8touchgfx8TextAreaD1Ev>:
900140b0:	4770      	bx	lr
	...

900140b4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900140b4:	4b11      	ldr	r3, [pc, #68]	@ (900140fc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900140b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900140ba:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900140bc:	4604      	mov	r4, r0
900140be:	881b      	ldrh	r3, [r3, #0]
900140c0:	428b      	cmp	r3, r1
900140c2:	d918      	bls.n	900140f6 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
900140c4:	6803      	ldr	r3, [r0, #0]
900140c6:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
900140c8:	4b0d      	ldr	r3, [pc, #52]	@ (90014100 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
900140ca:	6818      	ldr	r0, [r3, #0]
900140cc:	f7f2 ff06 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900140d0:	6823      	ldr	r3, [r4, #0]
900140d2:	4606      	mov	r6, r0
900140d4:	4620      	mov	r0, r4
900140d6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900140d8:	4798      	blx	r3
900140da:	6823      	ldr	r3, [r4, #0]
900140dc:	4607      	mov	r7, r0
900140de:	4620      	mov	r0, r4
900140e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900140e4:	4798      	blx	r3
900140e6:	463a      	mov	r2, r7
900140e8:	4603      	mov	r3, r0
900140ea:	4631      	mov	r1, r6
900140ec:	4620      	mov	r0, r4
900140ee:	46ac      	mov	ip, r5
900140f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900140f4:	4760      	bx	ip
900140f6:	2000      	movs	r0, #0
900140f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900140fc:	24023518 	.word	0x24023518
90014100:	24023520 	.word	0x24023520

90014104 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014104:	4b18      	ldr	r3, [pc, #96]	@ (90014168 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014106:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9001410a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9001410c:	4604      	mov	r4, r0
9001410e:	881b      	ldrh	r3, [r3, #0]
90014110:	428b      	cmp	r3, r1
90014112:	d926      	bls.n	90014162 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014114:	4b15      	ldr	r3, [pc, #84]	@ (9001416c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014116:	681b      	ldr	r3, [r3, #0]
90014118:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9001411c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014120:	4b13      	ldr	r3, [pc, #76]	@ (90014170 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90014122:	7855      	ldrb	r5, [r2, #1]
90014124:	681b      	ldr	r3, [r3, #0]
90014126:	f3c5 0581 	ubfx	r5, r5, #2, #2
9001412a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9001412e:	6833      	ldr	r3, [r6, #0]
90014130:	69df      	ldr	r7, [r3, #28]
90014132:	4b10      	ldr	r3, [pc, #64]	@ (90014174 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90014134:	6818      	ldr	r0, [r3, #0]
90014136:	f7f2 fed1 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
9001413a:	6823      	ldr	r3, [r4, #0]
9001413c:	4680      	mov	r8, r0
9001413e:	4620      	mov	r0, r4
90014140:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014142:	4798      	blx	r3
90014144:	6823      	ldr	r3, [r4, #0]
90014146:	4681      	mov	r9, r0
90014148:	4620      	mov	r0, r4
9001414a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001414e:	4798      	blx	r3
90014150:	464b      	mov	r3, r9
90014152:	9000      	str	r0, [sp, #0]
90014154:	4642      	mov	r2, r8
90014156:	4629      	mov	r1, r5
90014158:	4630      	mov	r0, r6
9001415a:	47b8      	blx	r7
9001415c:	b003      	add	sp, #12
9001415e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014162:	2000      	movs	r0, #0
90014164:	e7fa      	b.n	9001415c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90014166:	bf00      	nop
90014168:	24023518 	.word	0x24023518
9001416c:	24023514 	.word	0x24023514
90014170:	2402351c 	.word	0x2402351c
90014174:	24023520 	.word	0x24023520

90014178 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014178:	b40e      	push	{r1, r2, r3}
9001417a:	4b30      	ldr	r3, [pc, #192]	@ (9001423c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
9001417c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014180:	881a      	ldrh	r2, [r3, #0]
90014182:	b09d      	sub	sp, #116	@ 0x74
90014184:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90014186:	4604      	mov	r4, r0
90014188:	429a      	cmp	r2, r3
9001418a:	d954      	bls.n	90014236 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
9001418c:	aa26      	add	r2, sp, #152	@ 0x98
9001418e:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90014240 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90014192:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90014244 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014196:	9202      	str	r2, [sp, #8]
90014198:	f8d9 2000 	ldr.w	r2, [r9]
9001419c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900141a0:	f8d8 3000 	ldr.w	r3, [r8]
900141a4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900141a8:	682b      	ldr	r3, [r5, #0]
900141aa:	4628      	mov	r0, r5
900141ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900141ae:	4798      	blx	r3
900141b0:	4606      	mov	r6, r0
900141b2:	b207      	sxth	r7, r0
900141b4:	a803      	add	r0, sp, #12
900141b6:	f005 f900 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900141ba:	682b      	ldr	r3, [r5, #0]
900141bc:	4628      	mov	r0, r5
900141be:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900141c0:	4798      	blx	r3
900141c2:	682b      	ldr	r3, [r5, #0]
900141c4:	4682      	mov	sl, r0
900141c6:	4628      	mov	r0, r5
900141c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900141ca:	4798      	blx	r3
900141cc:	4653      	mov	r3, sl
900141ce:	9000      	str	r0, [sp, #0]
900141d0:	a803      	add	r0, sp, #12
900141d2:	9a02      	ldr	r2, [sp, #8]
900141d4:	9925      	ldr	r1, [sp, #148]	@ 0x94
900141d6:	f005 f94b 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900141da:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900141dc:	f8d9 3000 	ldr.w	r3, [r9]
900141e0:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
900141e4:	8925      	ldrh	r5, [r4, #8]
900141e6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
900141ea:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
900141ee:	eba5 050c 	sub.w	r5, r5, ip
900141f2:	784a      	ldrb	r2, [r1, #1]
900141f4:	f8d8 3000 	ldr.w	r3, [r8]
900141f8:	b22d      	sxth	r5, r5
900141fa:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
900141fe:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014202:	9500      	str	r5, [sp, #0]
90014204:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014208:	a803      	add	r0, sp, #12
9001420a:	f002 fb8d 	bl	90016928 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001420e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90014212:	b203      	sxth	r3, r0
90014214:	18b9      	adds	r1, r7, r2
90014216:	2900      	cmp	r1, #0
90014218:	dd0b      	ble.n	90014232 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9001421a:	3b01      	subs	r3, #1
9001421c:	fb13 f302 	smulbb	r3, r3, r2
90014220:	fb16 3300 	smlabb	r3, r6, r0, r3
90014224:	b21f      	sxth	r7, r3
90014226:	4638      	mov	r0, r7
90014228:	b01d      	add	sp, #116	@ 0x74
9001422a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001422e:	b003      	add	sp, #12
90014230:	4770      	bx	lr
90014232:	2b00      	cmp	r3, #0
90014234:	dcf7      	bgt.n	90014226 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014236:	2700      	movs	r7, #0
90014238:	e7f5      	b.n	90014226 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001423a:	bf00      	nop
9001423c:	24023518 	.word	0x24023518
90014240:	24023514 	.word	0x24023514
90014244:	2402351c 	.word	0x2402351c

90014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014248:	4bbd      	ldr	r3, [pc, #756]	@ (90014540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
9001424a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001424e:	460c      	mov	r4, r1
90014250:	881b      	ldrh	r3, [r3, #0]
90014252:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90014254:	b0a9      	sub	sp, #164	@ 0xa4
90014256:	4680      	mov	r8, r0
90014258:	428b      	cmp	r3, r1
9001425a:	d809      	bhi.n	90014270 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
9001425c:	2300      	movs	r3, #0
9001425e:	f04f 32ff 	mov.w	r2, #4294967295
90014262:	6083      	str	r3, [r0, #8]
90014264:	e9c0 3200 	strd	r3, r2, [r0]
90014268:	4640      	mov	r0, r8
9001426a:	b029      	add	sp, #164	@ 0xa4
9001426c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014270:	4eb4      	ldr	r6, [pc, #720]	@ (90014544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90014272:	6833      	ldr	r3, [r6, #0]
90014274:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014278:	4bb3      	ldr	r3, [pc, #716]	@ (90014548 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
9001427a:	681b      	ldr	r3, [r3, #0]
9001427c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014280:	4bb2      	ldr	r3, [pc, #712]	@ (9001454c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014282:	6818      	ldr	r0, [r3, #0]
90014284:	f7f2 fe2a 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
90014288:	682b      	ldr	r3, [r5, #0]
9001428a:	4681      	mov	r9, r0
9001428c:	4628      	mov	r0, r5
9001428e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014290:	4798      	blx	r3
90014292:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
90014294:	b203      	sxth	r3, r0
90014296:	4682      	mov	sl, r0
90014298:	4407      	add	r7, r0
9001429a:	a80f      	add	r0, sp, #60	@ 0x3c
9001429c:	9304      	str	r3, [sp, #16]
9001429e:	b2bb      	uxth	r3, r7
900142a0:	9303      	str	r3, [sp, #12]
900142a2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900142a6:	2b00      	cmp	r3, #0
900142a8:	f040 80a5 	bne.w	900143f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
900142ac:	f005 f885 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900142b0:	682b      	ldr	r3, [r5, #0]
900142b2:	4628      	mov	r0, r5
900142b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900142b6:	4798      	blx	r3
900142b8:	682b      	ldr	r3, [r5, #0]
900142ba:	4606      	mov	r6, r0
900142bc:	4628      	mov	r0, r5
900142be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900142c0:	4798      	blx	r3
900142c2:	6823      	ldr	r3, [r4, #0]
900142c4:	4607      	mov	r7, r0
900142c6:	4620      	mov	r0, r4
900142c8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900142ca:	4798      	blx	r3
900142cc:	6823      	ldr	r3, [r4, #0]
900142ce:	4683      	mov	fp, r0
900142d0:	4620      	mov	r0, r4
900142d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900142d6:	4798      	blx	r3
900142d8:	463b      	mov	r3, r7
900142da:	4649      	mov	r1, r9
900142dc:	4632      	mov	r2, r6
900142de:	2600      	movs	r6, #0
900142e0:	e9cd b000 	strd	fp, r0, [sp]
900142e4:	a80f      	add	r0, sp, #60	@ 0x3c
900142e6:	4637      	mov	r7, r6
900142e8:	f005 f8d7 	bl	9001949a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
900142ec:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900142f0:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90014544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
900142f4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900142f8:	bf0c      	ite	eq
900142fa:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
900142fe:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90014302:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014304:	4629      	mov	r1, r5
90014306:	f8db 3000 	ldr.w	r3, [fp]
9001430a:	a80f      	add	r0, sp, #60	@ 0x3c
9001430c:	3701      	adds	r7, #1
9001430e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014312:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014316:	b2bf      	uxth	r7, r7
90014318:	785b      	ldrb	r3, [r3, #1]
9001431a:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001431e:	f002 f80a 	bl	90016336 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014322:	9b03      	ldr	r3, [sp, #12]
90014324:	4286      	cmp	r6, r0
90014326:	eba9 0903 	sub.w	r9, r9, r3
9001432a:	bfb8      	it	lt
9001432c:	4606      	movlt	r6, r0
9001432e:	a80f      	add	r0, sp, #60	@ 0x3c
90014330:	fa0f f989 	sxth.w	r9, r9
90014334:	b236      	sxth	r6, r6
90014336:	f005 f867 	bl	90019408 <_ZN8touchgfx12TextProvider11endOfStringEv>
9001433a:	b918      	cbnz	r0, 90014344 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001433c:	7a2b      	ldrb	r3, [r5, #8]
9001433e:	444b      	add	r3, r9
90014340:	2b00      	cmp	r3, #0
90014342:	dcde      	bgt.n	90014302 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90014344:	9b03      	ldr	r3, [sp, #12]
90014346:	4620      	mov	r0, r4
90014348:	9a04      	ldr	r2, [sp, #16]
9001434a:	fb13 f707 	smulbb	r7, r3, r7
9001434e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90014350:	f895 9009 	ldrb.w	r9, [r5, #9]
90014354:	1aff      	subs	r7, r7, r3
90014356:	b2bf      	uxth	r7, r7
90014358:	b23b      	sxth	r3, r7
9001435a:	429a      	cmp	r2, r3
9001435c:	bfa8      	it	ge
9001435e:	4657      	movge	r7, sl
90014360:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014364:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014368:	6823      	ldr	r3, [r4, #0]
9001436a:	444f      	add	r7, r9
9001436c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001436e:	bf08      	it	eq
90014370:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90014374:	fa1f f987 	uxth.w	r9, r7
90014378:	bf18      	it	ne
9001437a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
9001437e:	4798      	blx	r3
90014380:	2801      	cmp	r0, #1
90014382:	fa0f f789 	sxth.w	r7, r9
90014386:	b2b3      	uxth	r3, r6
90014388:	f000 80e2 	beq.w	90014550 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
9001438c:	2802      	cmp	r0, #2
9001438e:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
90014392:	f000 80e3 	beq.w	9001455c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90014396:	7aea      	ldrb	r2, [r5, #11]
90014398:	b236      	sxth	r6, r6
9001439a:	7b2d      	ldrb	r5, [r5, #12]
9001439c:	1ab6      	subs	r6, r6, r2
9001439e:	442a      	add	r2, r5
900143a0:	fa1f fa86 	uxth.w	sl, r6
900143a4:	4413      	add	r3, r2
900143a6:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
900143aa:	fa0f fb8a 	sxth.w	fp, sl
900143ae:	b29b      	uxth	r3, r3
900143b0:	2a02      	cmp	r2, #2
900143b2:	b21e      	sxth	r6, r3
900143b4:	f000 80d6 	beq.w	90014564 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900143b8:	2a03      	cmp	r2, #3
900143ba:	f000 80de 	beq.w	9001457a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900143be:	2a01      	cmp	r2, #1
900143c0:	f040 80e6 	bne.w	90014590 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
900143c4:	8925      	ldrh	r5, [r4, #8]
900143c6:	4633      	mov	r3, r6
900143c8:	463e      	mov	r6, r7
900143ca:	eba5 0909 	sub.w	r9, r5, r9
900143ce:	461f      	mov	r7, r3
900143d0:	465d      	mov	r5, fp
900143d2:	fa0f fb89 	sxth.w	fp, r9
900143d6:	4b5d      	ldr	r3, [pc, #372]	@ (9001454c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900143d8:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900143da:	6818      	ldr	r0, [r3, #0]
900143dc:	f7f2 fd7e 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900143e0:	f8a8 b000 	strh.w	fp, [r8]
900143e4:	f8a8 5002 	strh.w	r5, [r8, #2]
900143e8:	f8a8 6004 	strh.w	r6, [r8, #4]
900143ec:	f8a8 7006 	strh.w	r7, [r8, #6]
900143f0:	f8c8 0008 	str.w	r0, [r8, #8]
900143f4:	e738      	b.n	90014268 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
900143f6:	f004 ffe0 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900143fa:	682b      	ldr	r3, [r5, #0]
900143fc:	4628      	mov	r0, r5
900143fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014400:	4798      	blx	r3
90014402:	682b      	ldr	r3, [r5, #0]
90014404:	4607      	mov	r7, r0
90014406:	4628      	mov	r0, r5
90014408:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001440a:	4798      	blx	r3
9001440c:	6823      	ldr	r3, [r4, #0]
9001440e:	4683      	mov	fp, r0
90014410:	4620      	mov	r0, r4
90014412:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014414:	4798      	blx	r3
90014416:	6822      	ldr	r2, [r4, #0]
90014418:	9005      	str	r0, [sp, #20]
9001441a:	4620      	mov	r0, r4
9001441c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
90014420:	4790      	blx	r2
90014422:	9b05      	ldr	r3, [sp, #20]
90014424:	463a      	mov	r2, r7
90014426:	4649      	mov	r1, r9
90014428:	9001      	str	r0, [sp, #4]
9001442a:	a80f      	add	r0, sp, #60	@ 0x3c
9001442c:	9300      	str	r3, [sp, #0]
9001442e:	465b      	mov	r3, fp
90014430:	f005 f833 	bl	9001949a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014434:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014438:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
9001443c:	af0f      	add	r7, sp, #60	@ 0x3c
9001443e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014442:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014446:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90014448:	bf0a      	itet	eq
9001444a:	464a      	moveq	r2, r9
9001444c:	461a      	movne	r2, r3
9001444e:	4699      	moveq	r9, r3
90014450:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90014454:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90014458:	1ad2      	subs	r2, r2, r3
9001445a:	6833      	ldr	r3, [r6, #0]
9001445c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90014460:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014464:	7859      	ldrb	r1, [r3, #1]
90014466:	2300      	movs	r3, #0
90014468:	9707      	str	r7, [sp, #28]
9001446a:	f3c1 0181 	ubfx	r1, r1, #2, #2
9001446e:	f8ad 3018 	strh.w	r3, [sp, #24]
90014472:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90014476:	f88d 1020 	strb.w	r1, [sp, #32]
9001447a:	9509      	str	r5, [sp, #36]	@ 0x24
9001447c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90014480:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
90014484:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
90014488:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
9001448c:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90014490:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90014494:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90014498:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001449c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900144a0:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
900144a4:	b350      	cbz	r0, 900144fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144a6:	682b      	ldr	r3, [r5, #0]
900144a8:	4628      	mov	r0, r5
900144aa:	695b      	ldr	r3, [r3, #20]
900144ac:	4798      	blx	r3
900144ae:	4607      	mov	r7, r0
900144b0:	b320      	cbz	r0, 900144fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900144b4:	4639      	mov	r1, r7
900144b6:	6803      	ldr	r3, [r0, #0]
900144b8:	68db      	ldr	r3, [r3, #12]
900144ba:	4798      	blx	r3
900144bc:	4606      	mov	r6, r0
900144be:	b1e8      	cbz	r0, 900144fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144c0:	7b43      	ldrb	r3, [r0, #13]
900144c2:	7a82      	ldrb	r2, [r0, #10]
900144c4:	005b      	lsls	r3, r3, #1
900144c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900144ca:	4313      	orrs	r3, r2
900144cc:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900144d0:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
900144d4:	2b06      	cmp	r3, #6
900144d6:	d111      	bne.n	900144fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144d8:	9809      	ldr	r0, [sp, #36]	@ 0x24
900144da:	4632      	mov	r2, r6
900144dc:	4639      	mov	r1, r7
900144de:	6803      	ldr	r3, [r0, #0]
900144e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900144e2:	4798      	blx	r3
900144e4:	7b73      	ldrb	r3, [r6, #13]
900144e6:	005b      	lsls	r3, r3, #1
900144e8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900144ec:	7ab3      	ldrb	r3, [r6, #10]
900144ee:	4313      	orrs	r3, r2
900144f0:	4418      	add	r0, r3
900144f2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900144f6:	4418      	add	r0, r3
900144f8:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
900144fc:	2600      	movs	r6, #0
900144fe:	4637      	mov	r7, r6
90014500:	a806      	add	r0, sp, #24
90014502:	3701      	adds	r7, #1
90014504:	f002 f90d 	bl	90016722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014508:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
9001450c:	9b03      	ldr	r3, [sp, #12]
9001450e:	b2bf      	uxth	r7, r7
90014510:	4286      	cmp	r6, r0
90014512:	eba9 0903 	sub.w	r9, r9, r3
90014516:	f8bd 3018 	ldrh.w	r3, [sp, #24]
9001451a:	bfb8      	it	lt
9001451c:	4606      	movlt	r6, r0
9001451e:	fa0f f989 	sxth.w	r9, r9
90014522:	b236      	sxth	r6, r6
90014524:	2b00      	cmp	r3, #0
90014526:	f43f af0d 	beq.w	90014344 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001452a:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
9001452e:	2b00      	cmp	r3, #0
90014530:	f47f af08 	bne.w	90014344 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014534:	7a2b      	ldrb	r3, [r5, #8]
90014536:	444b      	add	r3, r9
90014538:	2b00      	cmp	r3, #0
9001453a:	dce1      	bgt.n	90014500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
9001453c:	e702      	b.n	90014344 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001453e:	bf00      	nop
90014540:	24023518 	.word	0x24023518
90014544:	24023514 	.word	0x24023514
90014548:	2402351c 	.word	0x2402351c
9001454c:	24023520 	.word	0x24023520
90014550:	ebaa 0606 	sub.w	r6, sl, r6
90014554:	2002      	movs	r0, #2
90014556:	fb96 f6f0 	sdiv	r6, r6, r0
9001455a:	e71c      	b.n	90014396 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001455c:	441e      	add	r6, r3
9001455e:	ebaa 0606 	sub.w	r6, sl, r6
90014562:	e718      	b.n	90014396 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014564:	8925      	ldrh	r5, [r4, #8]
90014566:	1aed      	subs	r5, r5, r3
90014568:	eba5 050a 	sub.w	r5, r5, sl
9001456c:	fa0f fb85 	sxth.w	fp, r5
90014570:	8965      	ldrh	r5, [r4, #10]
90014572:	eba5 0509 	sub.w	r5, r5, r9
90014576:	b22d      	sxth	r5, r5
90014578:	e72d      	b.n	900143d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001457a:	8965      	ldrh	r5, [r4, #10]
9001457c:	f04f 0b00 	mov.w	fp, #0
90014580:	1aed      	subs	r5, r5, r3
90014582:	4633      	mov	r3, r6
90014584:	463e      	mov	r6, r7
90014586:	eba5 050a 	sub.w	r5, r5, sl
9001458a:	461f      	mov	r7, r3
9001458c:	b22d      	sxth	r5, r5
9001458e:	e722      	b.n	900143d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014590:	2500      	movs	r5, #0
90014592:	e720      	b.n	900143d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90014594 <_ZN8touchgfx8TextAreaD0Ev>:
90014594:	b510      	push	{r4, lr}
90014596:	4604      	mov	r4, r0
90014598:	2148      	movs	r1, #72	@ 0x48
9001459a:	f015 fb00 	bl	90029b9e <_ZdlPvj>
9001459e:	4620      	mov	r0, r4
900145a0:	bd10      	pop	{r4, pc}
	...

900145a4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
900145a4:	b513      	push	{r0, r1, r4, lr}
900145a6:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
900145aa:	4604      	mov	r4, r0
900145ac:	b1fb      	cbz	r3, 900145ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145ae:	4b16      	ldr	r3, [pc, #88]	@ (90014608 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
900145b0:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900145b2:	881b      	ldrh	r3, [r3, #0]
900145b4:	428b      	cmp	r3, r1
900145b6:	d91a      	bls.n	900145ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145b8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900145bc:	2b00      	cmp	r3, #0
900145be:	dd16      	ble.n	900145ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900145c4:	2b00      	cmp	r3, #0
900145c6:	dd12      	ble.n	900145ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145c8:	4b10      	ldr	r3, [pc, #64]	@ (9001460c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900145ca:	6818      	ldr	r0, [r3, #0]
900145cc:	f7f2 fc86 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900145d0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
900145d4:	6822      	ldr	r2, [r4, #0]
900145d6:	2b00      	cmp	r3, #0
900145d8:	db06      	blt.n	900145e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900145da:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
900145de:	2b00      	cmp	r3, #0
900145e0:	db02      	blt.n	900145e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900145e2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900145e4:	4298      	cmp	r0, r3
900145e6:	d004      	beq.n	900145f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900145e8:	6953      	ldr	r3, [r2, #20]
900145ea:	4620      	mov	r0, r4
900145ec:	4798      	blx	r3
900145ee:	b002      	add	sp, #8
900145f0:	bd10      	pop	{r4, pc}
900145f2:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
900145f6:	466b      	mov	r3, sp
900145f8:	6912      	ldr	r2, [r2, #16]
900145fa:	c903      	ldmia	r1, {r0, r1}
900145fc:	e883 0003 	stmia.w	r3, {r0, r1}
90014600:	4619      	mov	r1, r3
90014602:	4620      	mov	r0, r4
90014604:	4790      	blx	r2
90014606:	e7f2      	b.n	900145ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014608:	24023518 	.word	0x24023518
9001460c:	24023520 	.word	0x24023520

90014610 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90014610:	4b45      	ldr	r3, [pc, #276]	@ (90014728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90014612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014616:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014618:	b08e      	sub	sp, #56	@ 0x38
9001461a:	881b      	ldrh	r3, [r3, #0]
9001461c:	4604      	mov	r4, r0
9001461e:	4293      	cmp	r3, r2
90014620:	d97e      	bls.n	90014720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014622:	6808      	ldr	r0, [r1, #0]
90014624:	ab05      	add	r3, sp, #20
90014626:	6849      	ldr	r1, [r1, #4]
90014628:	4d40      	ldr	r5, [pc, #256]	@ (9001472c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
9001462a:	c303      	stmia	r3!, {r0, r1}
9001462c:	4611      	mov	r1, r2
9001462e:	6828      	ldr	r0, [r5, #0]
90014630:	f7f2 fc54 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
90014634:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90014638:	2b00      	cmp	r3, #0
9001463a:	db11      	blt.n	90014660 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001463c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90014640:	2b00      	cmp	r3, #0
90014642:	db0d      	blt.n	90014660 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014644:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90014646:	4298      	cmp	r0, r3
90014648:	d10a      	bne.n	90014660 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001464a:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
9001464e:	ab09      	add	r3, sp, #36	@ 0x24
90014650:	e892 0003 	ldmia.w	r2, {r0, r1}
90014654:	e883 0003 	stmia.w	r3, {r0, r1}
90014658:	4619      	mov	r1, r3
9001465a:	a805      	add	r0, sp, #20
9001465c:	f7fc fb5c 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90014660:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014664:	2b00      	cmp	r3, #0
90014666:	dd5b      	ble.n	90014720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014668:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
9001466c:	2b00      	cmp	r3, #0
9001466e:	dd57      	ble.n	90014720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014670:	4f2f      	ldr	r7, [pc, #188]	@ (90014730 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90014672:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014674:	683b      	ldr	r3, [r7, #0]
90014676:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001467a:	4b2e      	ldr	r3, [pc, #184]	@ (90014734 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
9001467c:	681b      	ldr	r3, [r3, #0]
9001467e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90014682:	2e00      	cmp	r6, #0
90014684:	d04c      	beq.n	90014720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014686:	6823      	ldr	r3, [r4, #0]
90014688:	4620      	mov	r0, r4
9001468a:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
9001468e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014690:	4798      	blx	r3
90014692:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014694:	683b      	ldr	r3, [r7, #0]
90014696:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
9001469a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001469e:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
900146a2:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
900146a6:	785b      	ldrb	r3, [r3, #1]
900146a8:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
900146ac:	f3c3 0381 	ubfx	r3, r3, #2, #2
900146b0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900146b2:	9609      	str	r6, [sp, #36]	@ 0x24
900146b4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
900146b8:	4b1f      	ldr	r3, [pc, #124]	@ (90014738 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900146ba:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
900146be:	681b      	ldr	r3, [r3, #0]
900146c0:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
900146c4:	910b      	str	r1, [sp, #44]	@ 0x2c
900146c6:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
900146ca:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
900146ce:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
900146d2:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
900146d6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900146da:	b10a      	cbz	r2, 900146e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900146dc:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
900146de:	b906      	cbnz	r6, 900146e2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900146e0:	689e      	ldr	r6, [r3, #8]
900146e2:	af07      	add	r7, sp, #28
900146e4:	4621      	mov	r1, r4
900146e6:	4638      	mov	r0, r7
900146e8:	f003 fec6 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900146ec:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900146ee:	6828      	ldr	r0, [r5, #0]
900146f0:	f7f2 fbf4 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900146f4:	6823      	ldr	r3, [r4, #0]
900146f6:	4605      	mov	r5, r0
900146f8:	4620      	mov	r0, r4
900146fa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900146fc:	4798      	blx	r3
900146fe:	6823      	ldr	r3, [r4, #0]
90014700:	4680      	mov	r8, r0
90014702:	4620      	mov	r0, r4
90014704:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014708:	4798      	blx	r3
9001470a:	ab09      	add	r3, sp, #36	@ 0x24
9001470c:	9501      	str	r5, [sp, #4]
9001470e:	9300      	str	r3, [sp, #0]
90014710:	ab05      	add	r3, sp, #20
90014712:	e9cd 8002 	strd	r8, r0, [sp, #8]
90014716:	4630      	mov	r0, r6
90014718:	e897 0006 	ldmia.w	r7, {r1, r2}
9001471c:	f7f2 fb8e 	bl	90006e3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014720:	b00e      	add	sp, #56	@ 0x38
90014722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014726:	bf00      	nop
90014728:	24023518 	.word	0x24023518
9001472c:	24023520 	.word	0x24023520
90014730:	24023514 	.word	0x24023514
90014734:	2402351c 	.word	0x2402351c
90014738:	240234bc 	.word	0x240234bc

9001473c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
9001473c:	b570      	push	{r4, r5, r6, lr}
9001473e:	6803      	ldr	r3, [r0, #0]
90014740:	4604      	mov	r4, r0
90014742:	4615      	mov	r5, r2
90014744:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014746:	4798      	blx	r3
90014748:	6823      	ldr	r3, [r4, #0]
9001474a:	4629      	mov	r1, r5
9001474c:	4620      	mov	r0, r4
9001474e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014754:	4718      	bx	r3
	...

90014758 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90014758:	b538      	push	{r3, r4, r5, lr}
9001475a:	4b0e      	ldr	r3, [pc, #56]	@ (90014794 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9001475c:	4604      	mov	r4, r0
9001475e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014760:	881b      	ldrh	r3, [r3, #0]
90014762:	429a      	cmp	r2, r3
90014764:	d214      	bcs.n	90014790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90014766:	6803      	ldr	r3, [r0, #0]
90014768:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9001476a:	4798      	blx	r3
9001476c:	6823      	ldr	r3, [r4, #0]
9001476e:	4605      	mov	r5, r0
90014770:	4620      	mov	r0, r4
90014772:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90014774:	4798      	blx	r3
90014776:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001477a:	b22d      	sxth	r5, r5
9001477c:	4601      	mov	r1, r0
9001477e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014782:	bf06      	itte	eq
90014784:	4602      	moveq	r2, r0
90014786:	4629      	moveq	r1, r5
90014788:	462a      	movne	r2, r5
9001478a:	4620      	mov	r0, r4
9001478c:	f7ff ffd6 	bl	9001473c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014790:	bd38      	pop	{r3, r4, r5, pc}
90014792:	bf00      	nop
90014794:	24023518 	.word	0x24023518

90014798 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90014798:	b530      	push	{r4, r5, lr}
9001479a:	888b      	ldrh	r3, [r1, #4]
9001479c:	b085      	sub	sp, #20
9001479e:	4604      	mov	r4, r0
900147a0:	8583      	strh	r3, [r0, #44]	@ 0x2c
900147a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900147a6:	b923      	cbnz	r3, 900147b2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900147a8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900147ac:	b90b      	cbnz	r3, 900147b2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900147ae:	f7ff ffd3 	bl	90014758 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900147b2:	6823      	ldr	r3, [r4, #0]
900147b4:	466d      	mov	r5, sp
900147b6:	4621      	mov	r1, r4
900147b8:	343c      	adds	r4, #60	@ 0x3c
900147ba:	4628      	mov	r0, r5
900147bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900147c0:	4798      	blx	r3
900147c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900147c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900147ca:	b005      	add	sp, #20
900147cc:	bd30      	pop	{r4, r5, pc}

900147ce <_ZNK8touchgfx3Box12getSolidRectEv>:
900147ce:	2300      	movs	r3, #0
900147d0:	8083      	strh	r3, [r0, #4]
900147d2:	80c3      	strh	r3, [r0, #6]
900147d4:	8003      	strh	r3, [r0, #0]
900147d6:	8043      	strh	r3, [r0, #2]
900147d8:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900147dc:	2bff      	cmp	r3, #255	@ 0xff
900147de:	bf01      	itttt	eq
900147e0:	890b      	ldrheq	r3, [r1, #8]
900147e2:	8083      	strheq	r3, [r0, #4]
900147e4:	894b      	ldrheq	r3, [r1, #10]
900147e6:	80c3      	strheq	r3, [r0, #6]
900147e8:	4770      	bx	lr
	...

900147ec <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900147ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
900147ee:	4604      	mov	r4, r0
900147f0:	466b      	mov	r3, sp
900147f2:	6808      	ldr	r0, [r1, #0]
900147f4:	6849      	ldr	r1, [r1, #4]
900147f6:	c303      	stmia	r3!, {r0, r1}
900147f8:	6823      	ldr	r3, [r4, #0]
900147fa:	4669      	mov	r1, sp
900147fc:	4620      	mov	r0, r4
900147fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014800:	4798      	blx	r3
90014802:	4b08      	ldr	r3, [pc, #32]	@ (90014824 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90014804:	681b      	ldr	r3, [r3, #0]
90014806:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001480a:	b10a      	cbz	r2, 90014810 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
9001480c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001480e:	b900      	cbnz	r0, 90014812 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90014810:	6898      	ldr	r0, [r3, #8]
90014812:	6803      	ldr	r3, [r0, #0]
90014814:	4669      	mov	r1, sp
90014816:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90014818:	6a1d      	ldr	r5, [r3, #32]
9001481a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001481e:	47a8      	blx	r5
90014820:	b003      	add	sp, #12
90014822:	bd30      	pop	{r4, r5, pc}
90014824:	240234bc 	.word	0x240234bc

90014828 <_ZN8touchgfx3BoxD1Ev>:
90014828:	4770      	bx	lr

9001482a <_ZN8touchgfx3BoxD0Ev>:
9001482a:	b510      	push	{r4, lr}
9001482c:	4604      	mov	r4, r0
9001482e:	212c      	movs	r1, #44	@ 0x2c
90014830:	f015 f9b5 	bl	90029b9e <_ZdlPvj>
90014834:	4620      	mov	r0, r4
90014836:	bd10      	pop	{r4, pc}

90014838 <_ZNK8touchgfx3Box17invalidateContentEv>:
90014838:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
9001483c:	b12a      	cbz	r2, 9001484a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001483e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90014842:	b112      	cbz	r2, 9001484a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90014844:	6803      	ldr	r3, [r0, #0]
90014846:	695b      	ldr	r3, [r3, #20]
90014848:	4718      	bx	r3
9001484a:	4770      	bx	lr

9001484c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9001484c:	4b30      	ldr	r3, [pc, #192]	@ (90014910 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001484e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014852:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014854:	b08d      	sub	sp, #52	@ 0x34
90014856:	881b      	ldrh	r3, [r3, #0]
90014858:	4604      	mov	r4, r0
9001485a:	460f      	mov	r7, r1
9001485c:	4293      	cmp	r3, r2
9001485e:	d954      	bls.n	9001490a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014860:	4b2c      	ldr	r3, [pc, #176]	@ (90014914 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90014862:	6819      	ldr	r1, [r3, #0]
90014864:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90014868:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001486c:	4a2a      	ldr	r2, [pc, #168]	@ (90014918 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001486e:	6812      	ldr	r2, [r2, #0]
90014870:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90014874:	2900      	cmp	r1, #0
90014876:	d048      	beq.n	9001490a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014878:	785a      	ldrb	r2, [r3, #1]
9001487a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9001487e:	f3c2 0801 	ubfx	r8, r2, #0, #2
90014882:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014886:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9001488a:	4b24      	ldr	r3, [pc, #144]	@ (9001491c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9001488c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90014890:	681a      	ldr	r2, [r3, #0]
90014892:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90014896:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
9001489a:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
9001489e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
900148a0:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
900148a4:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
900148a8:	9107      	str	r1, [sp, #28]
900148aa:	f88d 8020 	strb.w	r8, [sp, #32]
900148ae:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
900148b2:	9609      	str	r6, [sp, #36]	@ 0x24
900148b4:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
900148b8:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
900148bc:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
900148c0:	b10b      	cbz	r3, 900148c6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900148c2:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
900148c4:	b905      	cbnz	r5, 900148c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900148c6:	6895      	ldr	r5, [r2, #8]
900148c8:	ae05      	add	r6, sp, #20
900148ca:	4621      	mov	r1, r4
900148cc:	4630      	mov	r0, r6
900148ce:	f003 fdd3 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900148d2:	4b13      	ldr	r3, [pc, #76]	@ (90014920 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900148d4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900148d6:	6818      	ldr	r0, [r3, #0]
900148d8:	f7f2 fb00 	bl	90006edc <_ZNK8touchgfx5Texts7getTextEt>
900148dc:	6823      	ldr	r3, [r4, #0]
900148de:	4680      	mov	r8, r0
900148e0:	4620      	mov	r0, r4
900148e2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900148e4:	4798      	blx	r3
900148e6:	6823      	ldr	r3, [r4, #0]
900148e8:	4681      	mov	r9, r0
900148ea:	4620      	mov	r0, r4
900148ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900148f0:	4798      	blx	r3
900148f2:	ab07      	add	r3, sp, #28
900148f4:	f8cd 8004 	str.w	r8, [sp, #4]
900148f8:	9300      	str	r3, [sp, #0]
900148fa:	463b      	mov	r3, r7
900148fc:	e9cd 9002 	strd	r9, r0, [sp, #8]
90014900:	4628      	mov	r0, r5
90014902:	e896 0006 	ldmia.w	r6, {r1, r2}
90014906:	f7f2 fa99 	bl	90006e3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001490a:	b00d      	add	sp, #52	@ 0x34
9001490c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014910:	24023518 	.word	0x24023518
90014914:	24023514 	.word	0x24023514
90014918:	2402351c 	.word	0x2402351c
9001491c:	240234bc 	.word	0x240234bc
90014920:	24023520 	.word	0x24023520

90014924 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90014924:	4770      	bx	lr

90014926 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90014926:	b510      	push	{r4, lr}
90014928:	4604      	mov	r4, r0
9001492a:	2134      	movs	r1, #52	@ 0x34
9001492c:	f015 f937 	bl	90029b9e <_ZdlPvj>
90014930:	4620      	mov	r0, r4
90014932:	bd10      	pop	{r4, pc}

90014934 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90014934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014938:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9001493a:	4604      	mov	r4, r0
9001493c:	460e      	mov	r6, r1
9001493e:	b08e      	sub	sp, #56	@ 0x38
90014940:	b218      	sxth	r0, r3
90014942:	8921      	ldrh	r1, [r4, #8]
90014944:	005b      	lsls	r3, r3, #1
90014946:	8962      	ldrh	r2, [r4, #10]
90014948:	f8ad 0000 	strh.w	r0, [sp]
9001494c:	b29b      	uxth	r3, r3
9001494e:	f8ad 0002 	strh.w	r0, [sp, #2]
90014952:	1ac9      	subs	r1, r1, r3
90014954:	1ad3      	subs	r3, r2, r3
90014956:	b209      	sxth	r1, r1
90014958:	b21b      	sxth	r3, r3
9001495a:	2900      	cmp	r1, #0
9001495c:	f8ad 1004 	strh.w	r1, [sp, #4]
90014960:	f8ad 3006 	strh.w	r3, [sp, #6]
90014964:	dd5e      	ble.n	90014a24 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90014966:	2b00      	cmp	r3, #0
90014968:	dd5c      	ble.n	90014a24 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001496a:	6830      	ldr	r0, [r6, #0]
9001496c:	ab02      	add	r3, sp, #8
9001496e:	6871      	ldr	r1, [r6, #4]
90014970:	c303      	stmia	r3!, {r0, r1}
90014972:	4669      	mov	r1, sp
90014974:	a802      	add	r0, sp, #8
90014976:	f7fc f9cf 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
9001497a:	4620      	mov	r0, r4
9001497c:	a902      	add	r1, sp, #8
9001497e:	f7ff ff35 	bl	900147ec <_ZNK8touchgfx3Box4drawERKNS_4RectE>
90014982:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
90014984:	2800      	cmp	r0, #0
90014986:	d05f      	beq.n	90014a48 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90014988:	8963      	ldrh	r3, [r4, #10]
9001498a:	b202      	sxth	r2, r0
9001498c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014990:	2500      	movs	r5, #0
90014992:	1a1f      	subs	r7, r3, r0
90014994:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90014998:	f8ad 101c 	strh.w	r1, [sp, #28]
9001499c:	b21b      	sxth	r3, r3
9001499e:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
900149a2:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
900149a6:	af04      	add	r7, sp, #16
900149a8:	1a09      	subs	r1, r1, r0
900149aa:	9506      	str	r5, [sp, #24]
900149ac:	f8ad 201e 	strh.w	r2, [sp, #30]
900149b0:	f8ad 5020 	strh.w	r5, [sp, #32]
900149b4:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
900149b8:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
900149bc:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900149c0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900149c4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900149c8:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
900149cc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
900149d0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900149d4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900149d8:	ab06      	add	r3, sp, #24
900149da:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900149de:	e893 0003 	ldmia.w	r3, {r0, r1}
900149e2:	e887 0003 	stmia.w	r7, {r0, r1}
900149e6:	4631      	mov	r1, r6
900149e8:	4638      	mov	r0, r7
900149ea:	f7fc f995 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
900149ee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900149f2:	2b00      	cmp	r3, #0
900149f4:	dd12      	ble.n	90014a1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900149f6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900149fa:	2b00      	cmp	r3, #0
900149fc:	dd0e      	ble.n	90014a1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900149fe:	6823      	ldr	r3, [r4, #0]
90014a00:	4639      	mov	r1, r7
90014a02:	4620      	mov	r0, r4
90014a04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014a06:	4798      	blx	r3
90014a08:	f7fc fc6a 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90014a0c:	6803      	ldr	r3, [r0, #0]
90014a0e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90014a10:	4639      	mov	r1, r7
90014a12:	f8d3 8020 	ldr.w	r8, [r3, #32]
90014a16:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90014a1a:	47c0      	blx	r8
90014a1c:	3501      	adds	r5, #1
90014a1e:	2d04      	cmp	r5, #4
90014a20:	d1da      	bne.n	900149d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90014a22:	e011      	b.n	90014a48 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90014a24:	6830      	ldr	r0, [r6, #0]
90014a26:	ab06      	add	r3, sp, #24
90014a28:	6871      	ldr	r1, [r6, #4]
90014a2a:	c303      	stmia	r3!, {r0, r1}
90014a2c:	6823      	ldr	r3, [r4, #0]
90014a2e:	a906      	add	r1, sp, #24
90014a30:	4620      	mov	r0, r4
90014a32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014a34:	4798      	blx	r3
90014a36:	f7fc fc53 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90014a3a:	6803      	ldr	r3, [r0, #0]
90014a3c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90014a3e:	a906      	add	r1, sp, #24
90014a40:	6a1d      	ldr	r5, [r3, #32]
90014a42:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90014a46:	47a8      	blx	r5
90014a48:	b00e      	add	sp, #56	@ 0x38
90014a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014a4e <_ZN8touchgfx5ImageD1Ev>:
90014a4e:	4770      	bx	lr

90014a50 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90014a50:	b570      	push	{r4, r5, r6, lr}
90014a52:	880b      	ldrh	r3, [r1, #0]
90014a54:	460d      	mov	r5, r1
90014a56:	4604      	mov	r4, r0
90014a58:	84c3      	strh	r3, [r0, #38]	@ 0x26
90014a5a:	4608      	mov	r0, r1
90014a5c:	f006 f868 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014a60:	4606      	mov	r6, r0
90014a62:	4628      	mov	r0, r5
90014a64:	f006 f898 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014a68:	6823      	ldr	r3, [r4, #0]
90014a6a:	4605      	mov	r5, r0
90014a6c:	4631      	mov	r1, r6
90014a6e:	4620      	mov	r0, r4
90014a70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014a72:	4798      	blx	r3
90014a74:	6823      	ldr	r3, [r4, #0]
90014a76:	4629      	mov	r1, r5
90014a78:	4620      	mov	r0, r4
90014a7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014a7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014a80:	4718      	bx	r3

90014a82 <_ZN8touchgfx5ImageD0Ev>:
90014a82:	b510      	push	{r4, lr}
90014a84:	4604      	mov	r4, r0
90014a86:	212c      	movs	r1, #44	@ 0x2c
90014a88:	f015 f889 	bl	90029b9e <_ZdlPvj>
90014a8c:	4620      	mov	r0, r4
90014a8e:	bd10      	pop	{r4, pc}

90014a90 <_ZNK8touchgfx5Image12getSolidRectEv>:
90014a90:	b510      	push	{r4, lr}
90014a92:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90014a96:	4604      	mov	r4, r0
90014a98:	2bff      	cmp	r3, #255	@ 0xff
90014a9a:	d006      	beq.n	90014aaa <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90014a9c:	2300      	movs	r3, #0
90014a9e:	8003      	strh	r3, [r0, #0]
90014aa0:	8043      	strh	r3, [r0, #2]
90014aa2:	8083      	strh	r3, [r0, #4]
90014aa4:	80c3      	strh	r3, [r0, #6]
90014aa6:	4620      	mov	r0, r4
90014aa8:	bd10      	pop	{r4, pc}
90014aaa:	3126      	adds	r1, #38	@ 0x26
90014aac:	f006 f8a8 	bl	9001ac00 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014ab0:	e7f9      	b.n	90014aa6 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90014ab2 <_ZNK8touchgfx5Image17invalidateContentEv>:
90014ab2:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90014ab6:	b12a      	cbz	r2, 90014ac4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90014ab8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90014abc:	b112      	cbz	r2, 90014ac4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90014abe:	6803      	ldr	r3, [r0, #0]
90014ac0:	695b      	ldr	r3, [r3, #20]
90014ac2:	4718      	bx	r3
90014ac4:	4770      	bx	lr
	...

90014ac8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90014ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014acc:	4604      	mov	r4, r0
90014ace:	b088      	sub	sp, #32
90014ad0:	2500      	movs	r5, #0
90014ad2:	460f      	mov	r7, r1
90014ad4:	f854 3b26 	ldr.w	r3, [r4], #38
90014ad8:	a904      	add	r1, sp, #16
90014ada:	4606      	mov	r6, r0
90014adc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014ade:	e9cd 5504 	strd	r5, r5, [sp, #16]
90014ae2:	4798      	blx	r3
90014ae4:	4620      	mov	r0, r4
90014ae6:	f006 f823 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014aea:	4680      	mov	r8, r0
90014aec:	4620      	mov	r0, r4
90014aee:	f006 f853 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014af2:	9506      	str	r5, [sp, #24]
90014af4:	ad06      	add	r5, sp, #24
90014af6:	f8ad 001e 	strh.w	r0, [sp, #30]
90014afa:	4639      	mov	r1, r7
90014afc:	f8ad 801c 	strh.w	r8, [sp, #28]
90014b00:	4628      	mov	r0, r5
90014b02:	f7fc f909 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90014b06:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90014b0a:	2b00      	cmp	r3, #0
90014b0c:	dd19      	ble.n	90014b42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014b0e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014b12:	2b00      	cmp	r3, #0
90014b14:	dd15      	ble.n	90014b42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014b16:	4b0c      	ldr	r3, [pc, #48]	@ (90014b48 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90014b18:	681b      	ldr	r3, [r3, #0]
90014b1a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014b1e:	b10a      	cbz	r2, 90014b24 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90014b20:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014b22:	b900      	cbnz	r0, 90014b26 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90014b24:	6898      	ldr	r0, [r3, #8]
90014b26:	2701      	movs	r7, #1
90014b28:	6801      	ldr	r1, [r0, #0]
90014b2a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90014b2e:	9702      	str	r7, [sp, #8]
90014b30:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90014b34:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90014b38:	e9cd 5600 	strd	r5, r6, [sp]
90014b3c:	688d      	ldr	r5, [r1, #8]
90014b3e:	4621      	mov	r1, r4
90014b40:	47a8      	blx	r5
90014b42:	b008      	add	sp, #32
90014b44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014b48:	240234bc 	.word	0x240234bc

90014b4c <_ZN8touchgfx7OutlineD1Ev>:
90014b4c:	4770      	bx	lr

90014b4e <_ZN8touchgfx7OutlineD0Ev>:
90014b4e:	b510      	push	{r4, lr}
90014b50:	4604      	mov	r4, r0
90014b52:	2130      	movs	r1, #48	@ 0x30
90014b54:	f015 f823 	bl	90029b9e <_ZdlPvj>
90014b58:	4620      	mov	r0, r4
90014b5a:	bd10      	pop	{r4, pc}

90014b5c <_ZN8touchgfx7Outline5resetEv>:
90014b5c:	b510      	push	{r4, lr}
90014b5e:	4604      	mov	r4, r0
90014b60:	f000 fe86 	bl	90015870 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90014b64:	60e0      	str	r0, [r4, #12]
90014b66:	f000 fe89 	bl	9001587c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90014b6a:	68e3      	ldr	r3, [r4, #12]
90014b6c:	08c0      	lsrs	r0, r0, #3
90014b6e:	2200      	movs	r2, #0
90014b70:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90014b74:	6123      	str	r3, [r4, #16]
90014b76:	3801      	subs	r0, #1
90014b78:	60a2      	str	r2, [r4, #8]
90014b7a:	6060      	str	r0, [r4, #4]
90014b7c:	8019      	strh	r1, [r3, #0]
90014b7e:	8059      	strh	r1, [r3, #2]
90014b80:	809a      	strh	r2, [r3, #4]
90014b82:	80da      	strh	r2, [r3, #6]
90014b84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014b86:	f023 0301 	bic.w	r3, r3, #1
90014b8a:	f043 0302 	orr.w	r3, r3, #2
90014b8e:	6263      	str	r3, [r4, #36]	@ 0x24
90014b90:	bd10      	pop	{r4, pc}
	...

90014b94 <_ZN8touchgfx7OutlineC1Ev>:
90014b94:	4b0a      	ldr	r3, [pc, #40]	@ (90014bc0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90014b96:	b510      	push	{r4, lr}
90014b98:	6003      	str	r3, [r0, #0]
90014b9a:	2300      	movs	r3, #0
90014b9c:	4604      	mov	r4, r0
90014b9e:	6243      	str	r3, [r0, #36]	@ 0x24
90014ba0:	e9c0 3301 	strd	r3, r3, [r0, #4]
90014ba4:	e9c0 3303 	strd	r3, r3, [r0, #12]
90014ba8:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014bac:	e9c0 3307 	strd	r3, r3, [r0, #28]
90014bb0:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90014bb4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90014bb8:	f7ff ffd0 	bl	90014b5c <_ZN8touchgfx7Outline5resetEv>
90014bbc:	4620      	mov	r0, r4
90014bbe:	bd10      	pop	{r4, pc}
90014bc0:	9002e6c8 	.word	0x9002e6c8

90014bc4 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014bc8:	b093      	sub	sp, #76	@ 0x4c
90014bca:	1156      	asrs	r6, r2, #5
90014bcc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90014bce:	9305      	str	r3, [sp, #20]
90014bd0:	1153      	asrs	r3, r2, #5
90014bd2:	f004 051f 	and.w	r5, r4, #31
90014bd6:	9303      	str	r3, [sp, #12]
90014bd8:	1163      	asrs	r3, r4, #5
90014bda:	9504      	str	r5, [sp, #16]
90014bdc:	1165      	asrs	r5, r4, #5
90014bde:	9306      	str	r3, [sp, #24]
90014be0:	f002 031f 	and.w	r3, r2, #31
90014be4:	42ae      	cmp	r6, r5
90014be6:	f040 80f4 	bne.w	90014dd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90014bea:	9c04      	ldr	r4, [sp, #16]
90014bec:	9a05      	ldr	r2, [sp, #20]
90014bee:	42a3      	cmp	r3, r4
90014bf0:	ea4f 1e62 	mov.w	lr, r2, asr #5
90014bf4:	6902      	ldr	r2, [r0, #16]
90014bf6:	d125      	bne.n	90014c44 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90014bf8:	f9b2 3000 	ldrsh.w	r3, [r2]
90014bfc:	459e      	cmp	lr, r3
90014bfe:	d103      	bne.n	90014c08 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014c00:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014c04:	429e      	cmp	r6, r3
90014c06:	d035      	beq.n	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014c08:	88d1      	ldrh	r1, [r2, #6]
90014c0a:	8893      	ldrh	r3, [r2, #4]
90014c0c:	430b      	orrs	r3, r1
90014c0e:	d010      	beq.n	90014c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014c10:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014c14:	2b00      	cmp	r3, #0
90014c16:	db0c      	blt.n	90014c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014c18:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014c1a:	428b      	cmp	r3, r1
90014c1c:	da09      	bge.n	90014c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014c1e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014c22:	428b      	cmp	r3, r1
90014c24:	f103 0301 	add.w	r3, r3, #1
90014c28:	bf38      	it	cc
90014c2a:	3208      	addcc	r2, #8
90014c2c:	6083      	str	r3, [r0, #8]
90014c2e:	bf38      	it	cc
90014c30:	6102      	strcc	r2, [r0, #16]
90014c32:	6903      	ldr	r3, [r0, #16]
90014c34:	9a03      	ldr	r2, [sp, #12]
90014c36:	f8a3 e000 	strh.w	lr, [r3]
90014c3a:	805a      	strh	r2, [r3, #2]
90014c3c:	2200      	movs	r2, #0
90014c3e:	809a      	strh	r2, [r3, #4]
90014c40:	80da      	strh	r2, [r3, #6]
90014c42:	e017      	b.n	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014c44:	9c05      	ldr	r4, [sp, #20]
90014c46:	114e      	asrs	r6, r1, #5
90014c48:	f001 0c1f 	and.w	ip, r1, #31
90014c4c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90014c50:	f004 041f 	and.w	r4, r4, #31
90014c54:	4576      	cmp	r6, lr
90014c56:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90014c5a:	9402      	str	r4, [sp, #8]
90014c5c:	9c04      	ldr	r4, [sp, #16]
90014c5e:	eba4 0403 	sub.w	r4, r4, r3
90014c62:	d10a      	bne.n	90014c7a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90014c64:	9b02      	ldr	r3, [sp, #8]
90014c66:	44a0      	add	r8, r4
90014c68:	449c      	add	ip, r3
90014c6a:	f8a2 8004 	strh.w	r8, [r2, #4]
90014c6e:	fb04 a40c 	mla	r4, r4, ip, sl
90014c72:	80d4      	strh	r4, [r2, #6]
90014c74:	b013      	add	sp, #76	@ 0x4c
90014c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014c7a:	9d05      	ldr	r5, [sp, #20]
90014c7c:	1a69      	subs	r1, r5, r1
90014c7e:	bf51      	iteee	pl
90014c80:	f1cc 0520 	rsbpl	r5, ip, #32
90014c84:	fb04 f40c 	mulmi.w	r4, r4, ip
90014c88:	4249      	negmi	r1, r1
90014c8a:	2500      	movmi	r5, #0
90014c8c:	bf5d      	ittte	pl
90014c8e:	436c      	mulpl	r4, r5
90014c90:	2520      	movpl	r5, #32
90014c92:	f04f 0901 	movpl.w	r9, #1
90014c96:	f04f 39ff 	movmi.w	r9, #4294967295
90014c9a:	9501      	str	r5, [sp, #4]
90014c9c:	9f01      	ldr	r7, [sp, #4]
90014c9e:	444e      	add	r6, r9
90014ca0:	fb94 f5f1 	sdiv	r5, r4, r1
90014ca4:	fb01 4415 	mls	r4, r1, r5, r4
90014ca8:	44bc      	add	ip, r7
90014caa:	2c00      	cmp	r4, #0
90014cac:	bfbc      	itt	lt
90014cae:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014cb2:	1864      	addlt	r4, r4, r1
90014cb4:	44a8      	add	r8, r5
90014cb6:	fb05 ac0c 	mla	ip, r5, ip, sl
90014cba:	f8a2 8004 	strh.w	r8, [r2, #4]
90014cbe:	f8a2 c006 	strh.w	ip, [r2, #6]
90014cc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014cc6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014cca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014cce:	ea58 0202 	orrs.w	r2, r8, r2
90014cd2:	d011      	beq.n	90014cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014cd4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014cd8:	f1b8 0f00 	cmp.w	r8, #0
90014cdc:	db0c      	blt.n	90014cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014cde:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014ce0:	4590      	cmp	r8, r2
90014ce2:	da09      	bge.n	90014cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014ce4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90014ce8:	4590      	cmp	r8, r2
90014cea:	bf3c      	itt	cc
90014cec:	f10c 0208 	addcc.w	r2, ip, #8
90014cf0:	6102      	strcc	r2, [r0, #16]
90014cf2:	f108 0201 	add.w	r2, r8, #1
90014cf6:	6082      	str	r2, [r0, #8]
90014cf8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014cfc:	2700      	movs	r7, #0
90014cfe:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014d02:	45b6      	cmp	lr, r6
90014d04:	f8ac 6000 	strh.w	r6, [ip]
90014d08:	442b      	add	r3, r5
90014d0a:	f8ac 2002 	strh.w	r2, [ip, #2]
90014d0e:	f8ac 7004 	strh.w	r7, [ip, #4]
90014d12:	f8ac 7006 	strh.w	r7, [ip, #6]
90014d16:	d04b      	beq.n	90014db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90014d18:	9f04      	ldr	r7, [sp, #16]
90014d1a:	1a64      	subs	r4, r4, r1
90014d1c:	f04f 0a00 	mov.w	sl, #0
90014d20:	1aff      	subs	r7, r7, r3
90014d22:	443d      	add	r5, r7
90014d24:	016d      	lsls	r5, r5, #5
90014d26:	fb95 f8f1 	sdiv	r8, r5, r1
90014d2a:	fb01 5518 	mls	r5, r1, r8, r5
90014d2e:	2d00      	cmp	r5, #0
90014d30:	bfbc      	itt	lt
90014d32:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014d36:	186d      	addlt	r5, r5, r1
90014d38:	f108 0701 	add.w	r7, r8, #1
90014d3c:	9703      	str	r7, [sp, #12]
90014d3e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014d42:	1964      	adds	r4, r4, r5
90014d44:	444e      	add	r6, r9
90014d46:	bf54      	ite	pl
90014d48:	9f03      	ldrpl	r7, [sp, #12]
90014d4a:	4647      	movmi	r7, r8
90014d4c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014d50:	bf58      	it	pl
90014d52:	1a64      	subpl	r4, r4, r1
90014d54:	443b      	add	r3, r7
90014d56:	44bb      	add	fp, r7
90014d58:	f8ac b004 	strh.w	fp, [ip, #4]
90014d5c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014d60:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014d64:	f8ac b006 	strh.w	fp, [ip, #6]
90014d68:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014d6c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014d70:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014d74:	ea5b 0707 	orrs.w	r7, fp, r7
90014d78:	d011      	beq.n	90014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014d7a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014d7e:	f1bb 0f00 	cmp.w	fp, #0
90014d82:	db0c      	blt.n	90014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014d84:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014d86:	45bb      	cmp	fp, r7
90014d88:	da09      	bge.n	90014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014d8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014d8e:	45bb      	cmp	fp, r7
90014d90:	bf3c      	itt	cc
90014d92:	f10c 0708 	addcc.w	r7, ip, #8
90014d96:	6107      	strcc	r7, [r0, #16]
90014d98:	f10b 0701 	add.w	r7, fp, #1
90014d9c:	6087      	str	r7, [r0, #8]
90014d9e:	6907      	ldr	r7, [r0, #16]
90014da0:	45b6      	cmp	lr, r6
90014da2:	803e      	strh	r6, [r7, #0]
90014da4:	807a      	strh	r2, [r7, #2]
90014da6:	f8a7 a004 	strh.w	sl, [r7, #4]
90014daa:	f8a7 a006 	strh.w	sl, [r7, #6]
90014dae:	d1c6      	bne.n	90014d3e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014db0:	9a04      	ldr	r2, [sp, #16]
90014db2:	1ad3      	subs	r3, r2, r3
90014db4:	6902      	ldr	r2, [r0, #16]
90014db6:	8891      	ldrh	r1, [r2, #4]
90014db8:	88d6      	ldrh	r6, [r2, #6]
90014dba:	4419      	add	r1, r3
90014dbc:	8091      	strh	r1, [r2, #4]
90014dbe:	9902      	ldr	r1, [sp, #8]
90014dc0:	f101 0c20 	add.w	ip, r1, #32
90014dc4:	9901      	ldr	r1, [sp, #4]
90014dc6:	ebac 0c01 	sub.w	ip, ip, r1
90014dca:	fb03 630c 	mla	r3, r3, ip, r6
90014dce:	80d3      	strh	r3, [r2, #6]
90014dd0:	e750      	b.n	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014dd2:	9d05      	ldr	r5, [sp, #20]
90014dd4:	1aa2      	subs	r2, r4, r2
90014dd6:	eba5 0501 	sub.w	r5, r5, r1
90014dda:	9202      	str	r2, [sp, #8]
90014ddc:	9508      	str	r5, [sp, #32]
90014dde:	f140 8128 	bpl.w	90015032 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90014de2:	9a03      	ldr	r2, [sp, #12]
90014de4:	2a00      	cmp	r2, #0
90014de6:	f6ff af45 	blt.w	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014dea:	9a02      	ldr	r2, [sp, #8]
90014dec:	f04f 34ff 	mov.w	r4, #4294967295
90014df0:	4252      	negs	r2, r2
90014df2:	940b      	str	r4, [sp, #44]	@ 0x2c
90014df4:	2400      	movs	r4, #0
90014df6:	9202      	str	r2, [sp, #8]
90014df8:	9a06      	ldr	r2, [sp, #24]
90014dfa:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014dfe:	9206      	str	r2, [sp, #24]
90014e00:	462a      	mov	r2, r5
90014e02:	435a      	muls	r2, r3
90014e04:	9401      	str	r4, [sp, #4]
90014e06:	9c02      	ldr	r4, [sp, #8]
90014e08:	9d02      	ldr	r5, [sp, #8]
90014e0a:	fb92 f4f4 	sdiv	r4, r2, r4
90014e0e:	fb05 2214 	mls	r2, r5, r4, r2
90014e12:	2a00      	cmp	r2, #0
90014e14:	9207      	str	r2, [sp, #28]
90014e16:	bfbc      	itt	lt
90014e18:	1952      	addlt	r2, r2, r5
90014e1a:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014e1e:	6905      	ldr	r5, [r0, #16]
90014e20:	bfb8      	it	lt
90014e22:	9207      	strlt	r2, [sp, #28]
90014e24:	eb04 0901 	add.w	r9, r4, r1
90014e28:	9a01      	ldr	r2, [sp, #4]
90014e2a:	ea4f 1669 	mov.w	r6, r9, asr #5
90014e2e:	429a      	cmp	r2, r3
90014e30:	f040 8111 	bne.w	90015056 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014e34:	f9b5 3000 	ldrsh.w	r3, [r5]
90014e38:	429e      	cmp	r6, r3
90014e3a:	d104      	bne.n	90014e46 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014e3c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014e40:	9a03      	ldr	r2, [sp, #12]
90014e42:	429a      	cmp	r2, r3
90014e44:	d01b      	beq.n	90014e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014e46:	88ea      	ldrh	r2, [r5, #6]
90014e48:	88ab      	ldrh	r3, [r5, #4]
90014e4a:	4313      	orrs	r3, r2
90014e4c:	d010      	beq.n	90014e70 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014e4e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014e52:	2a00      	cmp	r2, #0
90014e54:	db0c      	blt.n	90014e70 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014e56:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014e58:	429a      	cmp	r2, r3
90014e5a:	da09      	bge.n	90014e70 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014e5c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90014e60:	429a      	cmp	r2, r3
90014e62:	f102 0201 	add.w	r2, r2, #1
90014e66:	bf38      	it	cc
90014e68:	3508      	addcc	r5, #8
90014e6a:	6082      	str	r2, [r0, #8]
90014e6c:	bf38      	it	cc
90014e6e:	6105      	strcc	r5, [r0, #16]
90014e70:	6903      	ldr	r3, [r0, #16]
90014e72:	9a03      	ldr	r2, [sp, #12]
90014e74:	801e      	strh	r6, [r3, #0]
90014e76:	805a      	strh	r2, [r3, #2]
90014e78:	2200      	movs	r2, #0
90014e7a:	809a      	strh	r2, [r3, #4]
90014e7c:	80da      	strh	r2, [r3, #6]
90014e7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014e80:	9a03      	ldr	r2, [sp, #12]
90014e82:	6901      	ldr	r1, [r0, #16]
90014e84:	441a      	add	r2, r3
90014e86:	f9b1 3000 	ldrsh.w	r3, [r1]
90014e8a:	42b3      	cmp	r3, r6
90014e8c:	d103      	bne.n	90014e96 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90014e8e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014e92:	429a      	cmp	r2, r3
90014e94:	d01a      	beq.n	90014ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90014e96:	88cc      	ldrh	r4, [r1, #6]
90014e98:	888b      	ldrh	r3, [r1, #4]
90014e9a:	4323      	orrs	r3, r4
90014e9c:	d010      	beq.n	90014ec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014e9e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014ea2:	2c00      	cmp	r4, #0
90014ea4:	db0c      	blt.n	90014ec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014ea6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014ea8:	429c      	cmp	r4, r3
90014eaa:	da09      	bge.n	90014ec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014eac:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014eb0:	429c      	cmp	r4, r3
90014eb2:	f104 0401 	add.w	r4, r4, #1
90014eb6:	bf38      	it	cc
90014eb8:	3108      	addcc	r1, #8
90014eba:	6084      	str	r4, [r0, #8]
90014ebc:	bf38      	it	cc
90014ebe:	6101      	strcc	r1, [r0, #16]
90014ec0:	6903      	ldr	r3, [r0, #16]
90014ec2:	2100      	movs	r1, #0
90014ec4:	801e      	strh	r6, [r3, #0]
90014ec6:	805a      	strh	r2, [r3, #2]
90014ec8:	8099      	strh	r1, [r3, #4]
90014eca:	80d9      	strh	r1, [r3, #6]
90014ecc:	9b06      	ldr	r3, [sp, #24]
90014ece:	4293      	cmp	r3, r2
90014ed0:	f000 8082 	beq.w	90014fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014ed4:	9b08      	ldr	r3, [sp, #32]
90014ed6:	9902      	ldr	r1, [sp, #8]
90014ed8:	015b      	lsls	r3, r3, #5
90014eda:	9c02      	ldr	r4, [sp, #8]
90014edc:	fb93 f1f1 	sdiv	r1, r3, r1
90014ee0:	fb04 3311 	mls	r3, r4, r1, r3
90014ee4:	9103      	str	r1, [sp, #12]
90014ee6:	2b00      	cmp	r3, #0
90014ee8:	9308      	str	r3, [sp, #32]
90014eea:	da04      	bge.n	90014ef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014eec:	1e4b      	subs	r3, r1, #1
90014eee:	9303      	str	r3, [sp, #12]
90014ef0:	9b08      	ldr	r3, [sp, #32]
90014ef2:	4423      	add	r3, r4
90014ef4:	9308      	str	r3, [sp, #32]
90014ef6:	9b07      	ldr	r3, [sp, #28]
90014ef8:	464f      	mov	r7, r9
90014efa:	9902      	ldr	r1, [sp, #8]
90014efc:	2600      	movs	r6, #0
90014efe:	1a5b      	subs	r3, r3, r1
90014f00:	9307      	str	r3, [sp, #28]
90014f02:	9b01      	ldr	r3, [sp, #4]
90014f04:	f1c3 0320 	rsb	r3, r3, #32
90014f08:	930e      	str	r3, [sp, #56]	@ 0x38
90014f0a:	990e      	ldr	r1, [sp, #56]	@ 0x38
90014f0c:	9b01      	ldr	r3, [sp, #4]
90014f0e:	1a5b      	subs	r3, r3, r1
90014f10:	930a      	str	r3, [sp, #40]	@ 0x28
90014f12:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90014f16:	185b      	adds	r3, r3, r1
90014f18:	bf58      	it	pl
90014f1a:	9902      	ldrpl	r1, [sp, #8]
90014f1c:	9307      	str	r3, [sp, #28]
90014f1e:	bf57      	itett	pl
90014f20:	1a5b      	subpl	r3, r3, r1
90014f22:	9903      	ldrmi	r1, [sp, #12]
90014f24:	9307      	strpl	r3, [sp, #28]
90014f26:	9b03      	ldrpl	r3, [sp, #12]
90014f28:	bf58      	it	pl
90014f2a:	1c59      	addpl	r1, r3, #1
90014f2c:	2a00      	cmp	r2, #0
90014f2e:	4489      	add	r9, r1
90014f30:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014f34:	db2e      	blt.n	90014f94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014f36:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014f38:	4293      	cmp	r3, r2
90014f3a:	dd2b      	ble.n	90014f94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014f3c:	9c01      	ldr	r4, [sp, #4]
90014f3e:	6905      	ldr	r5, [r0, #16]
90014f40:	46a0      	mov	r8, r4
90014f42:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90014f44:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90014f48:	45a0      	cmp	r8, r4
90014f4a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014f4e:	f040 814c 	bne.w	900151ea <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014f52:	f9b5 1000 	ldrsh.w	r1, [r5]
90014f56:	4551      	cmp	r1, sl
90014f58:	d103      	bne.n	90014f62 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90014f5a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014f5e:	4291      	cmp	r1, r2
90014f60:	d018      	beq.n	90014f94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014f62:	ea5c 010e 	orrs.w	r1, ip, lr
90014f66:	d00f      	beq.n	90014f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014f68:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014f6c:	2900      	cmp	r1, #0
90014f6e:	db0b      	blt.n	90014f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014f70:	428b      	cmp	r3, r1
90014f72:	dd09      	ble.n	90014f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014f74:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90014f78:	4299      	cmp	r1, r3
90014f7a:	f101 0101 	add.w	r1, r1, #1
90014f7e:	bf38      	it	cc
90014f80:	3508      	addcc	r5, #8
90014f82:	6081      	str	r1, [r0, #8]
90014f84:	bf38      	it	cc
90014f86:	6105      	strcc	r5, [r0, #16]
90014f88:	6903      	ldr	r3, [r0, #16]
90014f8a:	f8a3 a000 	strh.w	sl, [r3]
90014f8e:	805a      	strh	r2, [r3, #2]
90014f90:	809e      	strh	r6, [r3, #4]
90014f92:	80de      	strh	r6, [r3, #6]
90014f94:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014f96:	6901      	ldr	r1, [r0, #16]
90014f98:	441a      	add	r2, r3
90014f9a:	88cc      	ldrh	r4, [r1, #6]
90014f9c:	888b      	ldrh	r3, [r1, #4]
90014f9e:	4323      	orrs	r3, r4
90014fa0:	d010      	beq.n	90014fc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014fa2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014fa6:	2c00      	cmp	r4, #0
90014fa8:	db0c      	blt.n	90014fc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014faa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014fac:	429c      	cmp	r4, r3
90014fae:	da09      	bge.n	90014fc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014fb0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014fb4:	429c      	cmp	r4, r3
90014fb6:	f104 0401 	add.w	r4, r4, #1
90014fba:	bf38      	it	cc
90014fbc:	3108      	addcc	r1, #8
90014fbe:	6084      	str	r4, [r0, #8]
90014fc0:	bf38      	it	cc
90014fc2:	6101      	strcc	r1, [r0, #16]
90014fc4:	6903      	ldr	r3, [r0, #16]
90014fc6:	464f      	mov	r7, r9
90014fc8:	f8a3 a000 	strh.w	sl, [r3]
90014fcc:	805a      	strh	r2, [r3, #2]
90014fce:	809e      	strh	r6, [r3, #4]
90014fd0:	80de      	strh	r6, [r3, #6]
90014fd2:	9b06      	ldr	r3, [sp, #24]
90014fd4:	4293      	cmp	r3, r2
90014fd6:	d19c      	bne.n	90014f12 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90014fd8:	9b01      	ldr	r3, [sp, #4]
90014fda:	6907      	ldr	r7, [r0, #16]
90014fdc:	f1c3 0620 	rsb	r6, r3, #32
90014fe0:	9b05      	ldr	r3, [sp, #20]
90014fe2:	ea4f 1e63 	mov.w	lr, r3, asr #5
90014fe6:	9b04      	ldr	r3, [sp, #16]
90014fe8:	429e      	cmp	r6, r3
90014fea:	f040 81c7 	bne.w	9001537c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014fee:	f9b7 3000 	ldrsh.w	r3, [r7]
90014ff2:	459e      	cmp	lr, r3
90014ff4:	d104      	bne.n	90015000 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90014ff6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014ffa:	429a      	cmp	r2, r3
90014ffc:	f43f ae3a 	beq.w	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015000:	88f9      	ldrh	r1, [r7, #6]
90015002:	88bb      	ldrh	r3, [r7, #4]
90015004:	430b      	orrs	r3, r1
90015006:	d010      	beq.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015008:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001500c:	2b00      	cmp	r3, #0
9001500e:	db0c      	blt.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015010:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90015012:	428b      	cmp	r3, r1
90015014:	da09      	bge.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015016:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001501a:	428b      	cmp	r3, r1
9001501c:	f103 0301 	add.w	r3, r3, #1
90015020:	bf38      	it	cc
90015022:	3708      	addcc	r7, #8
90015024:	6083      	str	r3, [r0, #8]
90015026:	bf38      	it	cc
90015028:	6107      	strcc	r7, [r0, #16]
9001502a:	6903      	ldr	r3, [r0, #16]
9001502c:	f8a3 e000 	strh.w	lr, [r3]
90015030:	e603      	b.n	90014c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90015032:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90015034:	9c03      	ldr	r4, [sp, #12]
90015036:	42a2      	cmp	r2, r4
90015038:	f6ff ae1c 	blt.w	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001503c:	9c06      	ldr	r4, [sp, #24]
9001503e:	42a2      	cmp	r2, r4
90015040:	9c08      	ldr	r4, [sp, #32]
90015042:	bfbc      	itt	lt
90015044:	3201      	addlt	r2, #1
90015046:	9206      	strlt	r2, [sp, #24]
90015048:	f1c3 0220 	rsb	r2, r3, #32
9001504c:	4362      	muls	r2, r4
9001504e:	2401      	movs	r4, #1
90015050:	940b      	str	r4, [sp, #44]	@ 0x2c
90015052:	2420      	movs	r4, #32
90015054:	e6d6      	b.n	90014e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90015056:	ea4f 1861 	mov.w	r8, r1, asr #5
9001505a:	f009 021f 	and.w	r2, r9, #31
9001505e:	f001 011f 	and.w	r1, r1, #31
90015062:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90015066:	920c      	str	r2, [sp, #48]	@ 0x30
90015068:	45b0      	cmp	r8, r6
9001506a:	9a01      	ldr	r2, [sp, #4]
9001506c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90015070:	eba2 0203 	sub.w	r2, r2, r3
90015074:	d108      	bne.n	90015088 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90015076:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015078:	4496      	add	lr, r2
9001507a:	4419      	add	r1, r3
9001507c:	f8a5 e004 	strh.w	lr, [r5, #4]
90015080:	fb02 a101 	mla	r1, r2, r1, sl
90015084:	80e9      	strh	r1, [r5, #6]
90015086:	e6fa      	b.n	90014e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015088:	2c00      	cmp	r4, #0
9001508a:	f2c0 80a7 	blt.w	900151dc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001508e:	2701      	movs	r7, #1
90015090:	f1c1 0c20 	rsb	ip, r1, #32
90015094:	970a      	str	r7, [sp, #40]	@ 0x28
90015096:	2720      	movs	r7, #32
90015098:	fb02 f20c 	mul.w	r2, r2, ip
9001509c:	9709      	str	r7, [sp, #36]	@ 0x24
9001509e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900150a0:	fb92 fcf4 	sdiv	ip, r2, r4
900150a4:	fb04 221c 	mls	r2, r4, ip, r2
900150a8:	4439      	add	r1, r7
900150aa:	2a00      	cmp	r2, #0
900150ac:	bfbc      	itt	lt
900150ae:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900150b2:	1912      	addlt	r2, r2, r4
900150b4:	fb0c a101 	mla	r1, ip, r1, sl
900150b8:	44e6      	add	lr, ip
900150ba:	80e9      	strh	r1, [r5, #6]
900150bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900150be:	f8a5 e004 	strh.w	lr, [r5, #4]
900150c2:	eb08 0501 	add.w	r5, r8, r1
900150c6:	6901      	ldr	r1, [r0, #16]
900150c8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900150cc:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900150d0:	ea58 070e 	orrs.w	r7, r8, lr
900150d4:	d010      	beq.n	900150f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900150d6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900150da:	f1be 0f00 	cmp.w	lr, #0
900150de:	db0b      	blt.n	900150f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900150e0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900150e2:	45be      	cmp	lr, r7
900150e4:	da08      	bge.n	900150f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900150e6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900150ea:	45be      	cmp	lr, r7
900150ec:	bf3c      	itt	cc
900150ee:	3108      	addcc	r1, #8
900150f0:	6101      	strcc	r1, [r0, #16]
900150f2:	f10e 0101 	add.w	r1, lr, #1
900150f6:	6081      	str	r1, [r0, #8]
900150f8:	6901      	ldr	r1, [r0, #16]
900150fa:	f04f 0e00 	mov.w	lr, #0
900150fe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90015102:	42ae      	cmp	r6, r5
90015104:	800d      	strh	r5, [r1, #0]
90015106:	4463      	add	r3, ip
90015108:	f8a1 8002 	strh.w	r8, [r1, #2]
9001510c:	f8a1 e004 	strh.w	lr, [r1, #4]
90015110:	f8a1 e006 	strh.w	lr, [r1, #6]
90015114:	d053      	beq.n	900151be <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90015116:	9901      	ldr	r1, [sp, #4]
90015118:	1b12      	subs	r2, r2, r4
9001511a:	1ac9      	subs	r1, r1, r3
9001511c:	4461      	add	r1, ip
9001511e:	0149      	lsls	r1, r1, #5
90015120:	fb91 fef4 	sdiv	lr, r1, r4
90015124:	fb04 111e 	mls	r1, r4, lr, r1
90015128:	2900      	cmp	r1, #0
9001512a:	bfbc      	itt	lt
9001512c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90015130:	1909      	addlt	r1, r1, r4
90015132:	f10e 0701 	add.w	r7, lr, #1
90015136:	970d      	str	r7, [sp, #52]	@ 0x34
90015138:	f8d0 a010 	ldr.w	sl, [r0, #16]
9001513c:	1852      	adds	r2, r2, r1
9001513e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90015140:	bf54      	ite	pl
90015142:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90015146:	46f4      	movmi	ip, lr
90015148:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001514c:	bf58      	it	pl
9001514e:	1b12      	subpl	r2, r2, r4
90015150:	4463      	add	r3, ip
90015152:	443d      	add	r5, r7
90015154:	44e3      	add	fp, ip
90015156:	f8aa b004 	strh.w	fp, [sl, #4]
9001515a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001515e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90015162:	f8aa b006 	strh.w	fp, [sl, #6]
90015166:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001516a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001516e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90015172:	ea5b 070a 	orrs.w	r7, fp, sl
90015176:	d014      	beq.n	900151a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90015178:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001517c:	f1ba 0f00 	cmp.w	sl, #0
90015180:	db0f      	blt.n	900151a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90015182:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015184:	45ba      	cmp	sl, r7
90015186:	da0c      	bge.n	900151a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90015188:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001518c:	45ba      	cmp	sl, r7
9001518e:	f10a 0a01 	add.w	sl, sl, #1
90015192:	bf38      	it	cc
90015194:	f10c 0c08 	addcc.w	ip, ip, #8
90015198:	f8c0 a008 	str.w	sl, [r0, #8]
9001519c:	bf38      	it	cc
9001519e:	f8c0 c010 	strcc.w	ip, [r0, #16]
900151a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900151a6:	f04f 0700 	mov.w	r7, #0
900151aa:	42ae      	cmp	r6, r5
900151ac:	f8ac 5000 	strh.w	r5, [ip]
900151b0:	f8ac 8002 	strh.w	r8, [ip, #2]
900151b4:	f8ac 7004 	strh.w	r7, [ip, #4]
900151b8:	f8ac 7006 	strh.w	r7, [ip, #6]
900151bc:	d1bc      	bne.n	90015138 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900151be:	6904      	ldr	r4, [r0, #16]
900151c0:	9a01      	ldr	r2, [sp, #4]
900151c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900151c4:	1ad3      	subs	r3, r2, r3
900151c6:	88a2      	ldrh	r2, [r4, #4]
900151c8:	3120      	adds	r1, #32
900151ca:	441a      	add	r2, r3
900151cc:	80a2      	strh	r2, [r4, #4]
900151ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900151d0:	1a89      	subs	r1, r1, r2
900151d2:	88e2      	ldrh	r2, [r4, #6]
900151d4:	fb03 2301 	mla	r3, r3, r1, r2
900151d8:	80e3      	strh	r3, [r4, #6]
900151da:	e650      	b.n	90014e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900151dc:	f04f 37ff 	mov.w	r7, #4294967295
900151e0:	434a      	muls	r2, r1
900151e2:	4264      	negs	r4, r4
900151e4:	970a      	str	r7, [sp, #40]	@ 0x28
900151e6:	2700      	movs	r7, #0
900151e8:	e758      	b.n	9001509c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900151ea:	ea4f 1867 	mov.w	r8, r7, asr #5
900151ee:	f009 031f 	and.w	r3, r9, #31
900151f2:	f007 071f 	and.w	r7, r7, #31
900151f6:	fa1f fc8c 	uxth.w	ip, ip
900151fa:	45d0      	cmp	r8, sl
900151fc:	930f      	str	r3, [sp, #60]	@ 0x3c
900151fe:	fa1f fe8e 	uxth.w	lr, lr
90015202:	d10a      	bne.n	9001521a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90015204:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90015206:	449c      	add	ip, r3
90015208:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001520a:	441f      	add	r7, r3
9001520c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001520e:	f8a5 c004 	strh.w	ip, [r5, #4]
90015212:	fb03 e707 	mla	r7, r3, r7, lr
90015216:	80ef      	strh	r7, [r5, #6]
90015218:	e6bc      	b.n	90014f94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001521a:	2900      	cmp	r1, #0
9001521c:	f2c0 80a6 	blt.w	9001536c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90015220:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90015222:	f1c7 0320 	rsb	r3, r7, #32
90015226:	4363      	muls	r3, r4
90015228:	2401      	movs	r4, #1
9001522a:	940d      	str	r4, [sp, #52]	@ 0x34
9001522c:	2420      	movs	r4, #32
9001522e:	940c      	str	r4, [sp, #48]	@ 0x30
90015230:	fb93 f4f1 	sdiv	r4, r3, r1
90015234:	fb01 3b14 	mls	fp, r1, r4, r3
90015238:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001523a:	f1bb 0f00 	cmp.w	fp, #0
9001523e:	441f      	add	r7, r3
90015240:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015242:	bfbc      	itt	lt
90015244:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015248:	448b      	addlt	fp, r1
9001524a:	fb04 e707 	mla	r7, r4, r7, lr
9001524e:	44a4      	add	ip, r4
90015250:	80ef      	strh	r7, [r5, #6]
90015252:	f8a5 c004 	strh.w	ip, [r5, #4]
90015256:	eb08 0503 	add.w	r5, r8, r3
9001525a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001525e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90015262:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015266:	ea5e 0307 	orrs.w	r3, lr, r7
9001526a:	d011      	beq.n	90015290 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001526c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90015270:	f1be 0f00 	cmp.w	lr, #0
90015274:	db0c      	blt.n	90015290 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90015276:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015278:	45be      	cmp	lr, r7
9001527a:	da09      	bge.n	90015290 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001527c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90015280:	45be      	cmp	lr, r7
90015282:	bf3c      	itt	cc
90015284:	f10c 0708 	addcc.w	r7, ip, #8
90015288:	6107      	strcc	r7, [r0, #16]
9001528a:	f10e 0701 	add.w	r7, lr, #1
9001528e:	6087      	str	r7, [r0, #8]
90015290:	6907      	ldr	r7, [r0, #16]
90015292:	b213      	sxth	r3, r2
90015294:	4555      	cmp	r5, sl
90015296:	9310      	str	r3, [sp, #64]	@ 0x40
90015298:	807b      	strh	r3, [r7, #2]
9001529a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001529c:	803d      	strh	r5, [r7, #0]
9001529e:	80be      	strh	r6, [r7, #4]
900152a0:	eb04 0c03 	add.w	ip, r4, r3
900152a4:	80fe      	strh	r6, [r7, #6]
900152a6:	d050      	beq.n	9001534a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900152a8:	9b01      	ldr	r3, [sp, #4]
900152aa:	eba3 070c 	sub.w	r7, r3, ip
900152ae:	ebab 0301 	sub.w	r3, fp, r1
900152b2:	443c      	add	r4, r7
900152b4:	9309      	str	r3, [sp, #36]	@ 0x24
900152b6:	0164      	lsls	r4, r4, #5
900152b8:	fb94 f8f1 	sdiv	r8, r4, r1
900152bc:	fb01 4418 	mls	r4, r1, r8, r4
900152c0:	2c00      	cmp	r4, #0
900152c2:	bfbc      	itt	lt
900152c4:	f108 38ff 	addlt.w	r8, r8, #4294967295
900152c8:	1864      	addlt	r4, r4, r1
900152ca:	f108 0701 	add.w	r7, r8, #1
900152ce:	9711      	str	r7, [sp, #68]	@ 0x44
900152d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900152d2:	f8d0 e010 	ldr.w	lr, [r0, #16]
900152d6:	191b      	adds	r3, r3, r4
900152d8:	f8be b004 	ldrh.w	fp, [lr, #4]
900152dc:	bf54      	ite	pl
900152de:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900152e0:	4647      	movmi	r7, r8
900152e2:	9309      	str	r3, [sp, #36]	@ 0x24
900152e4:	bf58      	it	pl
900152e6:	1a5b      	subpl	r3, r3, r1
900152e8:	44bb      	add	fp, r7
900152ea:	44bc      	add	ip, r7
900152ec:	bf58      	it	pl
900152ee:	9309      	strpl	r3, [sp, #36]	@ 0x24
900152f0:	f8ae b004 	strh.w	fp, [lr, #4]
900152f4:	f8be b006 	ldrh.w	fp, [lr, #6]
900152f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900152fc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900152fe:	f8ae b006 	strh.w	fp, [lr, #6]
90015302:	443d      	add	r5, r7
90015304:	f8d0 e010 	ldr.w	lr, [r0, #16]
90015308:	f8be b006 	ldrh.w	fp, [lr, #6]
9001530c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90015310:	ea5b 0307 	orrs.w	r3, fp, r7
90015314:	d011      	beq.n	9001533a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015316:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001531a:	f1bb 0f00 	cmp.w	fp, #0
9001531e:	db0c      	blt.n	9001533a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015320:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015322:	45bb      	cmp	fp, r7
90015324:	da09      	bge.n	9001533a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015326:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001532a:	45bb      	cmp	fp, r7
9001532c:	bf3c      	itt	cc
9001532e:	f10e 0708 	addcc.w	r7, lr, #8
90015332:	6107      	strcc	r7, [r0, #16]
90015334:	f10b 0701 	add.w	r7, fp, #1
90015338:	6087      	str	r7, [r0, #8]
9001533a:	6907      	ldr	r7, [r0, #16]
9001533c:	4555      	cmp	r5, sl
9001533e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90015340:	803d      	strh	r5, [r7, #0]
90015342:	807b      	strh	r3, [r7, #2]
90015344:	80be      	strh	r6, [r7, #4]
90015346:	80fe      	strh	r6, [r7, #6]
90015348:	d1c2      	bne.n	900152d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001534a:	9b01      	ldr	r3, [sp, #4]
9001534c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001534e:	eba3 0c0c 	sub.w	ip, r3, ip
90015352:	6903      	ldr	r3, [r0, #16]
90015354:	3720      	adds	r7, #32
90015356:	8899      	ldrh	r1, [r3, #4]
90015358:	4461      	add	r1, ip
9001535a:	8099      	strh	r1, [r3, #4]
9001535c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001535e:	1a7f      	subs	r7, r7, r1
90015360:	88d9      	ldrh	r1, [r3, #6]
90015362:	fb0c 1c07 	mla	ip, ip, r7, r1
90015366:	f8a3 c006 	strh.w	ip, [r3, #6]
9001536a:	e613      	b.n	90014f94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001536c:	f04f 34ff 	mov.w	r4, #4294967295
90015370:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90015372:	4249      	negs	r1, r1
90015374:	940d      	str	r4, [sp, #52]	@ 0x34
90015376:	2400      	movs	r4, #0
90015378:	437b      	muls	r3, r7
9001537a:	e758      	b.n	9001522e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001537c:	9905      	ldr	r1, [sp, #20]
9001537e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90015382:	f009 0c1f 	and.w	ip, r9, #31
90015386:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001538a:	f001 011f 	and.w	r1, r1, #31
9001538e:	45f3      	cmp	fp, lr
90015390:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90015394:	9102      	str	r1, [sp, #8]
90015396:	9904      	ldr	r1, [sp, #16]
90015398:	eba1 0406 	sub.w	r4, r1, r6
9001539c:	d108      	bne.n	900153b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001539e:	9b02      	ldr	r3, [sp, #8]
900153a0:	44a0      	add	r8, r4
900153a2:	449c      	add	ip, r3
900153a4:	f8a7 8004 	strh.w	r8, [r7, #4]
900153a8:	fb04 a40c 	mla	r4, r4, ip, sl
900153ac:	80fc      	strh	r4, [r7, #6]
900153ae:	e461      	b.n	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900153b0:	9905      	ldr	r1, [sp, #20]
900153b2:	ebb1 0109 	subs.w	r1, r1, r9
900153b6:	bf51      	iteee	pl
900153b8:	f1cc 0520 	rsbpl	r5, ip, #32
900153bc:	fb04 f40c 	mulmi.w	r4, r4, ip
900153c0:	4249      	negmi	r1, r1
900153c2:	2500      	movmi	r5, #0
900153c4:	bf5d      	ittte	pl
900153c6:	436c      	mulpl	r4, r5
900153c8:	2520      	movpl	r5, #32
900153ca:	f04f 0901 	movpl.w	r9, #1
900153ce:	f04f 39ff 	movmi.w	r9, #4294967295
900153d2:	9501      	str	r5, [sp, #4]
900153d4:	9b01      	ldr	r3, [sp, #4]
900153d6:	fb94 f5f1 	sdiv	r5, r4, r1
900153da:	fb01 4415 	mls	r4, r1, r5, r4
900153de:	449c      	add	ip, r3
900153e0:	eb0b 0309 	add.w	r3, fp, r9
900153e4:	2c00      	cmp	r4, #0
900153e6:	bfbc      	itt	lt
900153e8:	f105 35ff 	addlt.w	r5, r5, #4294967295
900153ec:	1864      	addlt	r4, r4, r1
900153ee:	44a8      	add	r8, r5
900153f0:	fb05 ac0c 	mla	ip, r5, ip, sl
900153f4:	f8a7 8004 	strh.w	r8, [r7, #4]
900153f8:	f8a7 c006 	strh.w	ip, [r7, #6]
900153fc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015400:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015404:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015408:	ea58 0707 	orrs.w	r7, r8, r7
9001540c:	d011      	beq.n	90015432 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001540e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015412:	f1b8 0f00 	cmp.w	r8, #0
90015416:	db0c      	blt.n	90015432 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90015418:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001541a:	45b8      	cmp	r8, r7
9001541c:	da09      	bge.n	90015432 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001541e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90015422:	45b8      	cmp	r8, r7
90015424:	bf3c      	itt	cc
90015426:	f10c 0708 	addcc.w	r7, ip, #8
9001542a:	6107      	strcc	r7, [r0, #16]
9001542c:	f108 0701 	add.w	r7, r8, #1
90015430:	6087      	str	r7, [r0, #8]
90015432:	6907      	ldr	r7, [r0, #16]
90015434:	f04f 0c00 	mov.w	ip, #0
90015438:	b212      	sxth	r2, r2
9001543a:	459e      	cmp	lr, r3
9001543c:	803b      	strh	r3, [r7, #0]
9001543e:	442e      	add	r6, r5
90015440:	807a      	strh	r2, [r7, #2]
90015442:	f8a7 c004 	strh.w	ip, [r7, #4]
90015446:	f8a7 c006 	strh.w	ip, [r7, #6]
9001544a:	d04b      	beq.n	900154e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001544c:	9f04      	ldr	r7, [sp, #16]
9001544e:	1a64      	subs	r4, r4, r1
90015450:	f04f 0a00 	mov.w	sl, #0
90015454:	1bbf      	subs	r7, r7, r6
90015456:	443d      	add	r5, r7
90015458:	016d      	lsls	r5, r5, #5
9001545a:	fb95 f8f1 	sdiv	r8, r5, r1
9001545e:	fb01 5518 	mls	r5, r1, r8, r5
90015462:	4565      	cmp	r5, ip
90015464:	bfbc      	itt	lt
90015466:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001546a:	186d      	addlt	r5, r5, r1
9001546c:	f108 0701 	add.w	r7, r8, #1
90015470:	9703      	str	r7, [sp, #12]
90015472:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015476:	1964      	adds	r4, r4, r5
90015478:	444b      	add	r3, r9
9001547a:	bf54      	ite	pl
9001547c:	9f03      	ldrpl	r7, [sp, #12]
9001547e:	4647      	movmi	r7, r8
90015480:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015484:	bf58      	it	pl
90015486:	1a64      	subpl	r4, r4, r1
90015488:	443e      	add	r6, r7
9001548a:	44bb      	add	fp, r7
9001548c:	f8ac b004 	strh.w	fp, [ip, #4]
90015490:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015494:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015498:	f8ac b006 	strh.w	fp, [ip, #6]
9001549c:	f8d0 c010 	ldr.w	ip, [r0, #16]
900154a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900154a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900154a8:	ea5b 0707 	orrs.w	r7, fp, r7
900154ac:	d011      	beq.n	900154d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900154ae:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900154b2:	f1bb 0f00 	cmp.w	fp, #0
900154b6:	db0c      	blt.n	900154d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900154b8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900154ba:	45bb      	cmp	fp, r7
900154bc:	da09      	bge.n	900154d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900154be:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900154c2:	45bb      	cmp	fp, r7
900154c4:	bf3c      	itt	cc
900154c6:	f10c 0708 	addcc.w	r7, ip, #8
900154ca:	6107      	strcc	r7, [r0, #16]
900154cc:	f10b 0701 	add.w	r7, fp, #1
900154d0:	6087      	str	r7, [r0, #8]
900154d2:	6907      	ldr	r7, [r0, #16]
900154d4:	459e      	cmp	lr, r3
900154d6:	803b      	strh	r3, [r7, #0]
900154d8:	807a      	strh	r2, [r7, #2]
900154da:	f8a7 a004 	strh.w	sl, [r7, #4]
900154de:	f8a7 a006 	strh.w	sl, [r7, #6]
900154e2:	d1c6      	bne.n	90015472 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900154e4:	9b04      	ldr	r3, [sp, #16]
900154e6:	1b9e      	subs	r6, r3, r6
900154e8:	6903      	ldr	r3, [r0, #16]
900154ea:	889a      	ldrh	r2, [r3, #4]
900154ec:	4432      	add	r2, r6
900154ee:	809a      	strh	r2, [r3, #4]
900154f0:	9a02      	ldr	r2, [sp, #8]
900154f2:	f102 0c20 	add.w	ip, r2, #32
900154f6:	9a01      	ldr	r2, [sp, #4]
900154f8:	ebac 0c02 	sub.w	ip, ip, r2
900154fc:	88da      	ldrh	r2, [r3, #6]
900154fe:	fb06 260c 	mla	r6, r6, ip, r2
90015502:	80de      	strh	r6, [r3, #6]
90015504:	f7ff bbb6 	b.w	90014c74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90015508 <_ZN8touchgfx7Outline6lineToEii>:
90015508:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001550a:	079b      	lsls	r3, r3, #30
9001550c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001550e:	460e      	mov	r6, r1
90015510:	4615      	mov	r5, r2
90015512:	d511      	bpl.n	90015538 <_ZN8touchgfx7Outline6lineToEii+0x30>
90015514:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90015518:	ea86 0701 	eor.w	r7, r6, r1
9001551c:	ea85 0302 	eor.w	r3, r5, r2
90015520:	433b      	orrs	r3, r7
90015522:	d009      	beq.n	90015538 <_ZN8touchgfx7Outline6lineToEii+0x30>
90015524:	4633      	mov	r3, r6
90015526:	9500      	str	r5, [sp, #0]
90015528:	f7ff fb4c 	bl	90014bc4 <_ZN8touchgfx7Outline10renderLineEiiii>
9001552c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001552e:	f043 0301 	orr.w	r3, r3, #1
90015532:	e9c0 6505 	strd	r6, r5, [r0, #20]
90015536:	6243      	str	r3, [r0, #36]	@ 0x24
90015538:	b003      	add	sp, #12
9001553a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001553c <_ZN8touchgfx7Outline6moveToEii>:
9001553c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001553e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015540:	4615      	mov	r5, r2
90015542:	4604      	mov	r4, r0
90015544:	460e      	mov	r6, r1
90015546:	079a      	lsls	r2, r3, #30
90015548:	d401      	bmi.n	9001554e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001554a:	f7ff fb07 	bl	90014b5c <_ZN8touchgfx7Outline5resetEv>
9001554e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015550:	07db      	lsls	r3, r3, #31
90015552:	d504      	bpl.n	9001555e <_ZN8touchgfx7Outline6moveToEii+0x22>
90015554:	4620      	mov	r0, r4
90015556:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001555a:	f7ff ffd5 	bl	90015508 <_ZN8touchgfx7Outline6lineToEii>
9001555e:	6923      	ldr	r3, [r4, #16]
90015560:	1170      	asrs	r0, r6, #5
90015562:	1169      	asrs	r1, r5, #5
90015564:	f9b3 2000 	ldrsh.w	r2, [r3]
90015568:	4290      	cmp	r0, r2
9001556a:	d103      	bne.n	90015574 <_ZN8touchgfx7Outline6moveToEii+0x38>
9001556c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015570:	4291      	cmp	r1, r2
90015572:	d01a      	beq.n	900155aa <_ZN8touchgfx7Outline6moveToEii+0x6e>
90015574:	88df      	ldrh	r7, [r3, #6]
90015576:	889a      	ldrh	r2, [r3, #4]
90015578:	433a      	orrs	r2, r7
9001557a:	d010      	beq.n	9001559e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001557c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015580:	2a00      	cmp	r2, #0
90015582:	db0c      	blt.n	9001559e <_ZN8touchgfx7Outline6moveToEii+0x62>
90015584:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90015586:	42ba      	cmp	r2, r7
90015588:	da09      	bge.n	9001559e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001558a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001558e:	42ba      	cmp	r2, r7
90015590:	f102 0201 	add.w	r2, r2, #1
90015594:	bf38      	it	cc
90015596:	3308      	addcc	r3, #8
90015598:	60a2      	str	r2, [r4, #8]
9001559a:	bf38      	it	cc
9001559c:	6123      	strcc	r3, [r4, #16]
9001559e:	6923      	ldr	r3, [r4, #16]
900155a0:	2200      	movs	r2, #0
900155a2:	8018      	strh	r0, [r3, #0]
900155a4:	8059      	strh	r1, [r3, #2]
900155a6:	809a      	strh	r2, [r3, #4]
900155a8:	80da      	strh	r2, [r3, #6]
900155aa:	6166      	str	r6, [r4, #20]
900155ac:	6225      	str	r5, [r4, #32]
900155ae:	e9c4 5606 	strd	r5, r6, [r4, #24]
900155b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900155b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900155b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900155b8:	b0d0      	sub	sp, #320	@ 0x140
900155ba:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900155be:	466c      	mov	r4, sp
900155c0:	4627      	mov	r7, r4
900155c2:	1a0d      	subs	r5, r1, r0
900155c4:	f100 0308 	add.w	r3, r0, #8
900155c8:	2d48      	cmp	r5, #72	@ 0x48
900155ca:	f340 80d5 	ble.w	90015778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900155ce:	112d      	asrs	r5, r5, #4
900155d0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900155d4:	f9b0 9000 	ldrsh.w	r9, [r0]
900155d8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900155dc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900155e0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900155e4:	6816      	ldr	r6, [r2, #0]
900155e6:	6006      	str	r6, [r0, #0]
900155e8:	6856      	ldr	r6, [r2, #4]
900155ea:	6046      	str	r6, [r0, #4]
900155ec:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900155f0:	f8a2 8002 	strh.w	r8, [r2, #2]
900155f4:	f8a2 e004 	strh.w	lr, [r2, #4]
900155f8:	f8a2 c006 	strh.w	ip, [r2, #6]
900155fc:	f1a1 0208 	sub.w	r2, r1, #8
90015600:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90015604:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90015608:	4565      	cmp	r5, ip
9001560a:	db06      	blt.n	9001561a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001560c:	d119      	bne.n	90015642 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001560e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90015612:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90015616:	42ae      	cmp	r6, r5
90015618:	dd13      	ble.n	90015642 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001561a:	460e      	mov	r6, r1
9001561c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90015620:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90015624:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90015628:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001562c:	601d      	str	r5, [r3, #0]
9001562e:	6875      	ldr	r5, [r6, #4]
90015630:	605d      	str	r5, [r3, #4]
90015632:	f821 9c08 	strh.w	r9, [r1, #-8]
90015636:	f821 cc06 	strh.w	ip, [r1, #-6]
9001563a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001563e:	f821 ec02 	strh.w	lr, [r1, #-2]
90015642:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90015646:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001564a:	42ae      	cmp	r6, r5
9001564c:	db06      	blt.n	9001565c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001564e:	d116      	bne.n	9001567e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90015650:	f9b0 c000 	ldrsh.w	ip, [r0]
90015654:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90015658:	45ac      	cmp	ip, r5
9001565a:	da10      	bge.n	9001567e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001565c:	681d      	ldr	r5, [r3, #0]
9001565e:	f9b0 8000 	ldrsh.w	r8, [r0]
90015662:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90015666:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001566a:	6005      	str	r5, [r0, #0]
9001566c:	685d      	ldr	r5, [r3, #4]
9001566e:	f8a0 8008 	strh.w	r8, [r0, #8]
90015672:	6045      	str	r5, [r0, #4]
90015674:	8146      	strh	r6, [r0, #10]
90015676:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001567a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001567e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90015682:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90015686:	4565      	cmp	r5, ip
90015688:	db06      	blt.n	90015698 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001568a:	d119      	bne.n	900156c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001568c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90015690:	f9b0 5000 	ldrsh.w	r5, [r0]
90015694:	42ae      	cmp	r6, r5
90015696:	da13      	bge.n	900156c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015698:	460e      	mov	r6, r1
9001569a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001569e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900156a2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900156a6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900156aa:	6005      	str	r5, [r0, #0]
900156ac:	6875      	ldr	r5, [r6, #4]
900156ae:	6045      	str	r5, [r0, #4]
900156b0:	f821 9c08 	strh.w	r9, [r1, #-8]
900156b4:	f821 cc06 	strh.w	ip, [r1, #-6]
900156b8:	f821 8c04 	strh.w	r8, [r1, #-4]
900156bc:	f821 ec02 	strh.w	lr, [r1, #-2]
900156c0:	3308      	adds	r3, #8
900156c2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900156c6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900156ca:	45e6      	cmp	lr, ip
900156cc:	dbf8      	blt.n	900156c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900156ce:	d105      	bne.n	900156dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900156d0:	f9b3 6000 	ldrsh.w	r6, [r3]
900156d4:	f9b0 5000 	ldrsh.w	r5, [r0]
900156d8:	42ae      	cmp	r6, r5
900156da:	dbf1      	blt.n	900156c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900156dc:	4615      	mov	r5, r2
900156de:	3a08      	subs	r2, #8
900156e0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900156e4:	45b4      	cmp	ip, r6
900156e6:	dbf9      	blt.n	900156dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900156e8:	d105      	bne.n	900156f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900156ea:	f9b0 8000 	ldrsh.w	r8, [r0]
900156ee:	f9b2 6000 	ldrsh.w	r6, [r2]
900156f2:	45b0      	cmp	r8, r6
900156f4:	dbf2      	blt.n	900156dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900156f6:	4293      	cmp	r3, r2
900156f8:	f1a5 0608 	sub.w	r6, r5, #8
900156fc:	d816      	bhi.n	9001572c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900156fe:	f8d6 c000 	ldr.w	ip, [r6]
90015702:	f9b3 a000 	ldrsh.w	sl, [r3]
90015706:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001570a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001570e:	f8c3 c000 	str.w	ip, [r3]
90015712:	f8d6 c004 	ldr.w	ip, [r6, #4]
90015716:	f8c3 c004 	str.w	ip, [r3, #4]
9001571a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001571e:	f825 ec06 	strh.w	lr, [r5, #-6]
90015722:	f825 9c04 	strh.w	r9, [r5, #-4]
90015726:	f825 8c02 	strh.w	r8, [r5, #-2]
9001572a:	e7c9      	b.n	900156c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001572c:	f8d6 e000 	ldr.w	lr, [r6]
90015730:	f9b0 a000 	ldrsh.w	sl, [r0]
90015734:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90015738:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001573c:	f8c0 e000 	str.w	lr, [r0]
90015740:	f8d6 e004 	ldr.w	lr, [r6, #4]
90015744:	1a16      	subs	r6, r2, r0
90015746:	f8c0 e004 	str.w	lr, [r0, #4]
9001574a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001574e:	f825 cc06 	strh.w	ip, [r5, #-6]
90015752:	f825 9c04 	strh.w	r9, [r5, #-4]
90015756:	f825 8c02 	strh.w	r8, [r5, #-2]
9001575a:	1acd      	subs	r5, r1, r3
9001575c:	10ed      	asrs	r5, r5, #3
9001575e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90015762:	bfb5      	itete	lt
90015764:	e9c4 0200 	strdlt	r0, r2, [r4]
90015768:	e9c4 3100 	strdge	r3, r1, [r4]
9001576c:	460a      	movlt	r2, r1
9001576e:	4603      	movge	r3, r0
90015770:	3408      	adds	r4, #8
90015772:	4618      	mov	r0, r3
90015774:	4611      	mov	r1, r2
90015776:	e724      	b.n	900155c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90015778:	4299      	cmp	r1, r3
9001577a:	d927      	bls.n	900157cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001577c:	f1a3 0210 	sub.w	r2, r3, #16
90015780:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90015784:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90015788:	45ac      	cmp	ip, r5
9001578a:	db06      	blt.n	9001579a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001578c:	d11c      	bne.n	900157c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001578e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90015792:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90015796:	42ae      	cmp	r6, r5
90015798:	da16      	bge.n	900157c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001579a:	4615      	mov	r5, r2
9001579c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900157a0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900157a4:	3a08      	subs	r2, #8
900157a6:	f855 6f08 	ldr.w	r6, [r5, #8]!
900157aa:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900157ae:	6196      	str	r6, [r2, #24]
900157b0:	42a8      	cmp	r0, r5
900157b2:	686e      	ldr	r6, [r5, #4]
900157b4:	f8a2 9010 	strh.w	r9, [r2, #16]
900157b8:	61d6      	str	r6, [r2, #28]
900157ba:	f8a2 c012 	strh.w	ip, [r2, #18]
900157be:	f8a2 8014 	strh.w	r8, [r2, #20]
900157c2:	f8a2 e016 	strh.w	lr, [r2, #22]
900157c6:	d1db      	bne.n	90015780 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900157c8:	3308      	adds	r3, #8
900157ca:	e7d5      	b.n	90015778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900157cc:	42bc      	cmp	r4, r7
900157ce:	d903      	bls.n	900157d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900157d0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900157d4:	3c08      	subs	r4, #8
900157d6:	e6f4      	b.n	900155c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900157d8:	b050      	add	sp, #320	@ 0x140
900157da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900157de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900157de:	b510      	push	{r4, lr}
900157e0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900157e2:	4604      	mov	r4, r0
900157e4:	07da      	lsls	r2, r3, #31
900157e6:	d507      	bpl.n	900157f8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900157e8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900157ec:	f7ff fe8c 	bl	90015508 <_ZN8touchgfx7Outline6lineToEii>
900157f0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900157f2:	f023 0301 	bic.w	r3, r3, #1
900157f6:	6243      	str	r3, [r0, #36]	@ 0x24
900157f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900157fa:	079b      	lsls	r3, r3, #30
900157fc:	d521      	bpl.n	90015842 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900157fe:	6923      	ldr	r3, [r4, #16]
90015800:	88d9      	ldrh	r1, [r3, #6]
90015802:	889a      	ldrh	r2, [r3, #4]
90015804:	430a      	orrs	r2, r1
90015806:	d010      	beq.n	9001582a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015808:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001580c:	2a00      	cmp	r2, #0
9001580e:	db0c      	blt.n	9001582a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015810:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90015812:	428a      	cmp	r2, r1
90015814:	da09      	bge.n	9001582a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015816:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001581a:	4291      	cmp	r1, r2
9001581c:	f102 0201 	add.w	r2, r2, #1
90015820:	bf88      	it	hi
90015822:	3308      	addhi	r3, #8
90015824:	60a2      	str	r2, [r4, #8]
90015826:	bf88      	it	hi
90015828:	6123      	strhi	r3, [r4, #16]
9001582a:	68a1      	ldr	r1, [r4, #8]
9001582c:	b129      	cbz	r1, 9001583a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001582e:	6863      	ldr	r3, [r4, #4]
90015830:	4299      	cmp	r1, r3
90015832:	d802      	bhi.n	9001583a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015834:	68e0      	ldr	r0, [r4, #12]
90015836:	f7ff febd 	bl	900155b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001583a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001583c:	f023 0302 	bic.w	r3, r3, #2
90015840:	6263      	str	r3, [r4, #36]	@ 0x24
90015842:	68e0      	ldr	r0, [r4, #12]
90015844:	bd10      	pop	{r4, pc}
	...

90015848 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90015848:	4b02      	ldr	r3, [pc, #8]	@ (90015854 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001584a:	6018      	str	r0, [r3, #0]
9001584c:	4b02      	ldr	r3, [pc, #8]	@ (90015858 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
9001584e:	6019      	str	r1, [r3, #0]
90015850:	4770      	bx	lr
90015852:	bf00      	nop
90015854:	240234c4 	.word	0x240234c4
90015858:	240234c8 	.word	0x240234c8

9001585c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
9001585c:	2300      	movs	r3, #0
9001585e:	4a02      	ldr	r2, [pc, #8]	@ (90015868 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90015860:	6013      	str	r3, [r2, #0]
90015862:	4a02      	ldr	r2, [pc, #8]	@ (9001586c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90015864:	6013      	str	r3, [r2, #0]
90015866:	4770      	bx	lr
90015868:	240234c4 	.word	0x240234c4
9001586c:	240234c8 	.word	0x240234c8

90015870 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90015870:	4b01      	ldr	r3, [pc, #4]	@ (90015878 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90015872:	6818      	ldr	r0, [r3, #0]
90015874:	4770      	bx	lr
90015876:	bf00      	nop
90015878:	240234c4 	.word	0x240234c4

9001587c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
9001587c:	4b01      	ldr	r3, [pc, #4]	@ (90015884 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001587e:	6818      	ldr	r0, [r3, #0]
90015880:	4770      	bx	lr
90015882:	bf00      	nop
90015884:	240234c8 	.word	0x240234c8

90015888 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90015888:	b510      	push	{r4, lr}
9001588a:	6803      	ldr	r3, [r0, #0]
9001588c:	460c      	mov	r4, r1
9001588e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015890:	4798      	blx	r3
90015892:	1b03      	subs	r3, r0, r4
90015894:	4258      	negs	r0, r3
90015896:	4158      	adcs	r0, r3
90015898:	bd10      	pop	{r4, pc}
	...

9001589c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
9001589c:	4b01      	ldr	r3, [pc, #4]	@ (900158a4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
9001589e:	6019      	str	r1, [r3, #0]
900158a0:	4770      	bx	lr
900158a2:	bf00      	nop
900158a4:	240234cc 	.word	0x240234cc

900158a8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900158a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900158ac:	4696      	mov	lr, r2
900158ae:	b097      	sub	sp, #92	@ 0x5c
900158b0:	4605      	mov	r5, r0
900158b2:	4614      	mov	r4, r2
900158b4:	460e      	mov	r6, r1
900158b6:	461f      	mov	r7, r3
900158b8:	f10d 0c1c 	add.w	ip, sp, #28
900158bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
900158c0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
900158c4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
900158c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900158cc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900158d0:	f8de 3000 	ldr.w	r3, [lr]
900158d4:	f104 0e14 	add.w	lr, r4, #20
900158d8:	f8cc 3000 	str.w	r3, [ip]
900158dc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900158e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900158e4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900158e8:	f8de 3000 	ldr.w	r3, [lr]
900158ec:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900158f0:	f8cc 3000 	str.w	r3, [ip]
900158f4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900158f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900158fc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015900:	f8de 3000 	ldr.w	r3, [lr]
90015904:	4631      	mov	r1, r6
90015906:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015908:	4628      	mov	r0, r5
9001590a:	f8cc 3000 	str.w	r3, [ip]
9001590e:	682b      	ldr	r3, [r5, #0]
90015910:	9201      	str	r2, [sp, #4]
90015912:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015914:	f8cd 8008 	str.w	r8, [sp, #8]
90015918:	9200      	str	r2, [sp, #0]
9001591a:	aa07      	add	r2, sp, #28
9001591c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015920:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90015924:	463b      	mov	r3, r7
90015926:	47d8      	blx	fp
90015928:	46a6      	mov	lr, r4
9001592a:	f10d 0c1c 	add.w	ip, sp, #28
9001592e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015932:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015936:	f8de 3000 	ldr.w	r3, [lr]
9001593a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001593e:	343c      	adds	r4, #60	@ 0x3c
90015940:	f8cc 3000 	str.w	r3, [ip]
90015944:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015948:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001594c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015950:	f8de 3000 	ldr.w	r3, [lr]
90015954:	f8cc 3000 	str.w	r3, [ip]
90015958:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
9001595c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001595e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015962:	6823      	ldr	r3, [r4, #0]
90015964:	4631      	mov	r1, r6
90015966:	4628      	mov	r0, r5
90015968:	f8cc 3000 	str.w	r3, [ip]
9001596c:	682b      	ldr	r3, [r5, #0]
9001596e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015972:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015974:	f8cd 8008 	str.w	r8, [sp, #8]
90015978:	9201      	str	r2, [sp, #4]
9001597a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001597c:	9200      	str	r2, [sp, #0]
9001597e:	aa07      	add	r2, sp, #28
90015980:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90015982:	463b      	mov	r3, r7
90015984:	47a0      	blx	r4
90015986:	b017      	add	sp, #92	@ 0x5c
90015988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001598c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
9001598c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015990:	b08d      	sub	sp, #52	@ 0x34
90015992:	4688      	mov	r8, r1
90015994:	f8d3 c000 	ldr.w	ip, [r3]
90015998:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001599a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
9001599e:	680f      	ldr	r7, [r1, #0]
900159a0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900159a4:	eba7 070c 	sub.w	r7, r7, ip
900159a8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
900159ac:	edd3 6a07 	vldr	s13, [r3, #28]
900159b0:	42bc      	cmp	r4, r7
900159b2:	9918      	ldr	r1, [sp, #96]	@ 0x60
900159b4:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
900159b8:	bfa8      	it	ge
900159ba:	463c      	movge	r4, r7
900159bc:	f9b1 9000 	ldrsh.w	r9, [r1]
900159c0:	f9ba 1000 	ldrsh.w	r1, [sl]
900159c4:	ee07 4a90 	vmov	s15, r4
900159c8:	eb09 0e0c 	add.w	lr, r9, ip
900159cc:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
900159d0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900159d4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
900159d8:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
900159dc:	4571      	cmp	r1, lr
900159de:	ee25 4a04 	vmul.f32	s8, s10, s8
900159e2:	ee65 4a24 	vmul.f32	s9, s10, s9
900159e6:	ee25 5a27 	vmul.f32	s10, s10, s15
900159ea:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
900159ee:	ee71 0aa4 	vadd.f32	s1, s3, s9
900159f2:	ee32 1a05 	vadd.f32	s2, s4, s10
900159f6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900159fa:	ee36 0a84 	vadd.f32	s0, s13, s8
900159fe:	ee61 1a87 	vmul.f32	s3, s3, s14
90015a02:	ee22 2a07 	vmul.f32	s4, s4, s14
90015a06:	f340 808c 	ble.w	90015b22 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90015a0a:	eba1 060e 	sub.w	r6, r1, lr
90015a0e:	fb96 f5f4 	sdiv	r5, r6, r4
90015a12:	ee07 5a10 	vmov	s14, r5
90015a16:	2d00      	cmp	r5, #0
90015a18:	fb04 6615 	mls	r6, r4, r5, r6
90015a1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90015a20:	eea7 0a04 	vfma.f32	s0, s14, s8
90015a24:	eee7 0a24 	vfma.f32	s1, s14, s9
90015a28:	eea7 1a05 	vfma.f32	s2, s14, s10
90015a2c:	dd12      	ble.n	90015a54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90015a2e:	ee70 6a44 	vsub.f32	s13, s0, s8
90015a32:	ee70 1ae4 	vsub.f32	s3, s1, s9
90015a36:	ee31 2a45 	vsub.f32	s4, s2, s10
90015a3a:	eef5 6a40 	vcmp.f32	s13, #0.0
90015a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015a42:	bf14      	ite	ne
90015a44:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90015a48:	eeb0 7a67 	vmoveq.f32	s14, s15
90015a4c:	ee61 1a87 	vmul.f32	s3, s3, s14
90015a50:	ee22 2a07 	vmul.f32	s4, s4, s14
90015a54:	fb05 f204 	mul.w	r2, r5, r4
90015a58:	1abf      	subs	r7, r7, r2
90015a5a:	4494      	add	ip, r2
90015a5c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90015a60:	4411      	add	r1, r2
90015a62:	eb09 020c 	add.w	r2, r9, ip
90015a66:	b209      	sxth	r1, r1
90015a68:	443a      	add	r2, r7
90015a6a:	428a      	cmp	r2, r1
90015a6c:	bfc4      	itt	gt
90015a6e:	eba1 0209 	subgt.w	r2, r1, r9
90015a72:	eba2 070c 	subgt.w	r7, r2, ip
90015a76:	2f00      	cmp	r7, #0
90015a78:	dd50      	ble.n	90015b1c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90015a7a:	fb97 f1f4 	sdiv	r1, r7, r4
90015a7e:	fb04 7211 	mls	r2, r4, r1, r7
90015a82:	b90a      	cbnz	r2, 90015a88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90015a84:	3901      	subs	r1, #1
90015a86:	4622      	mov	r2, r4
90015a88:	eec7 3a80 	vdiv.f32	s7, s15, s0
90015a8c:	6840      	ldr	r0, [r0, #4]
90015a8e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90015a92:	44b6      	add	lr, r6
90015a94:	f8d0 a000 	ldr.w	sl, [r0]
90015a98:	2900      	cmp	r1, #0
90015a9a:	bfcc      	ite	gt
90015a9c:	46a1      	movgt	r9, r4
90015a9e:	4691      	movle	r9, r2
90015aa0:	900b      	str	r0, [sp, #44]	@ 0x2c
90015aa2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90015aa4:	fb04 e505 	mla	r5, r4, r5, lr
90015aa8:	eef0 6a42 	vmov.f32	s13, s4
90015aac:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90015ab0:	9008      	str	r0, [sp, #32]
90015ab2:	eeb0 7a61 	vmov.f32	s14, s3
90015ab6:	9818      	ldr	r0, [sp, #96]	@ 0x60
90015ab8:	695b      	ldr	r3, [r3, #20]
90015aba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015abe:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90015ac2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90015ac6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90015ac8:	445b      	add	r3, fp
90015aca:	9307      	str	r3, [sp, #28]
90015acc:	ee16 3a90 	vmov	r3, s13
90015ad0:	e9cd 8505 	strd	r8, r5, [sp, #20]
90015ad4:	ee60 2aa3 	vmul.f32	s5, s1, s7
90015ad8:	ee21 3a23 	vmul.f32	s6, s2, s7
90015adc:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015ae0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015ae4:	ee17 7a90 	vmov	r7, s15
90015ae8:	ee73 7a42 	vsub.f32	s15, s6, s4
90015aec:	fb97 f7f4 	sdiv	r7, r7, r4
90015af0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015af4:	ee17 ca90 	vmov	ip, s15
90015af8:	fb9c fcf4 	sdiv	ip, ip, r4
90015afc:	fb0c 3306 	mla	r3, ip, r6, r3
90015b00:	9302      	str	r3, [sp, #8]
90015b02:	ee17 3a10 	vmov	r3, s14
90015b06:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90015b0a:	fb07 3706 	mla	r7, r7, r6, r3
90015b0e:	eba9 0306 	sub.w	r3, r9, r6
90015b12:	e9cd 4700 	strd	r4, r7, [sp]
90015b16:	f8da 4008 	ldr.w	r4, [sl, #8]
90015b1a:	47a0      	blx	r4
90015b1c:	b00d      	add	sp, #52	@ 0x34
90015b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015b22:	2500      	movs	r5, #0
90015b24:	462e      	mov	r6, r5
90015b26:	e799      	b.n	90015a5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90015b28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015b2c:	b0db      	sub	sp, #364	@ 0x16c
90015b2e:	461d      	mov	r5, r3
90015b30:	4614      	mov	r4, r2
90015b32:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90015b36:	910f      	str	r1, [sp, #60]	@ 0x3c
90015b38:	4629      	mov	r1, r5
90015b3a:	930a      	str	r3, [sp, #40]	@ 0x28
90015b3c:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90015b40:	9009      	str	r0, [sp, #36]	@ 0x24
90015b42:	930b      	str	r3, [sp, #44]	@ 0x2c
90015b44:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90015b48:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90015b4c:	9310      	str	r3, [sp, #64]	@ 0x40
90015b4e:	6803      	ldr	r3, [r0, #0]
90015b50:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90015b52:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90015b56:	47b8      	blx	r7
90015b58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015b5a:	6058      	str	r0, [r3, #4]
90015b5c:	2800      	cmp	r0, #0
90015b5e:	f000 83a1 	beq.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015b62:	682b      	ldr	r3, [r5, #0]
90015b64:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90015b68:	ed94 7a02 	vldr	s14, [r4, #8]
90015b6c:	9314      	str	r3, [sp, #80]	@ 0x50
90015b6e:	686b      	ldr	r3, [r5, #4]
90015b70:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015b74:	9315      	str	r3, [sp, #84]	@ 0x54
90015b76:	4bc1      	ldr	r3, [pc, #772]	@ (90015e7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90015b78:	7819      	ldrb	r1, [r3, #0]
90015b7a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90015b7e:	2900      	cmp	r1, #0
90015b80:	bf16      	itet	ne
90015b82:	4619      	movne	r1, r3
90015b84:	4611      	moveq	r1, r2
90015b86:	4613      	movne	r3, r2
90015b88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015b8c:	9116      	str	r1, [sp, #88]	@ 0x58
90015b8e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90015b92:	f240 8387 	bls.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015b96:	ed94 7a07 	vldr	s14, [r4, #28]
90015b9a:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015b9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015ba2:	f240 837f 	bls.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015ba6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90015baa:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015bb2:	f240 8377 	bls.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bb6:	6822      	ldr	r2, [r4, #0]
90015bb8:	4bb1      	ldr	r3, [pc, #708]	@ (90015e80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90015bba:	429a      	cmp	r2, r3
90015bbc:	f2c0 8372 	blt.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bc0:	49b0      	ldr	r1, [pc, #704]	@ (90015e84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015bc2:	6963      	ldr	r3, [r4, #20]
90015bc4:	428a      	cmp	r2, r1
90015bc6:	f300 836d 	bgt.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bca:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015bce:	48ae      	ldr	r0, [pc, #696]	@ (90015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015bd0:	33ff      	adds	r3, #255	@ 0xff
90015bd2:	4283      	cmp	r3, r0
90015bd4:	f200 8366 	bhi.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bd8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90015bda:	4dac      	ldr	r5, [pc, #688]	@ (90015e8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015bdc:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015be0:	33ff      	adds	r3, #255	@ 0xff
90015be2:	42ab      	cmp	r3, r5
90015be4:	f200 835e 	bhi.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015be8:	6862      	ldr	r2, [r4, #4]
90015bea:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90015bee:	33ff      	adds	r3, #255	@ 0xff
90015bf0:	4283      	cmp	r3, r0
90015bf2:	f200 8357 	bhi.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bf6:	69a1      	ldr	r1, [r4, #24]
90015bf8:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90015bfc:	33ff      	adds	r3, #255	@ 0xff
90015bfe:	4283      	cmp	r3, r0
90015c00:	f200 8350 	bhi.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015c04:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90015c06:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90015c0a:	30ff      	adds	r0, #255	@ 0xff
90015c0c:	42a8      	cmp	r0, r5
90015c0e:	f200 8349 	bhi.w	900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015c12:	428a      	cmp	r2, r1
90015c14:	f280 8110 	bge.w	90015e38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90015c18:	429a      	cmp	r2, r3
90015c1a:	f300 8119 	bgt.w	90015e50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015c1e:	4299      	cmp	r1, r3
90015c20:	f280 811d 	bge.w	90015e5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90015c24:	2502      	movs	r5, #2
90015c26:	2701      	movs	r7, #1
90015c28:	46a9      	mov	r9, r5
90015c2a:	46b8      	mov	r8, r7
90015c2c:	f04f 0a00 	mov.w	sl, #0
90015c30:	4621      	mov	r1, r4
90015c32:	a849      	add	r0, sp, #292	@ 0x124
90015c34:	f004 f93a 	bl	90019eac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90015c38:	4622      	mov	r2, r4
90015c3a:	4653      	mov	r3, sl
90015c3c:	a949      	add	r1, sp, #292	@ 0x124
90015c3e:	f8cd 9000 	str.w	r9, [sp]
90015c42:	a819      	add	r0, sp, #100	@ 0x64
90015c44:	f004 fa62 	bl	9001a10c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015c48:	4622      	mov	r2, r4
90015c4a:	4653      	mov	r3, sl
90015c4c:	a949      	add	r1, sp, #292	@ 0x124
90015c4e:	f8cd 8000 	str.w	r8, [sp]
90015c52:	a829      	add	r0, sp, #164	@ 0xa4
90015c54:	f004 fa5a 	bl	9001a10c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015c58:	4643      	mov	r3, r8
90015c5a:	4622      	mov	r2, r4
90015c5c:	a949      	add	r1, sp, #292	@ 0x124
90015c5e:	f8cd 9000 	str.w	r9, [sp]
90015c62:	a839      	add	r0, sp, #228	@ 0xe4
90015c64:	f004 fa52 	bl	9001a10c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015c68:	42af      	cmp	r7, r5
90015c6a:	af12      	add	r7, sp, #72	@ 0x48
90015c6c:	bfb7      	itett	lt
90015c6e:	2300      	movlt	r3, #0
90015c70:	2301      	movge	r3, #1
90015c72:	ad29      	addlt	r5, sp, #164	@ 0xa4
90015c74:	ac19      	addlt	r4, sp, #100	@ 0x64
90015c76:	bfb1      	iteee	lt
90015c78:	930e      	strlt	r3, [sp, #56]	@ 0x38
90015c7a:	ad19      	addge	r5, sp, #100	@ 0x64
90015c7c:	930e      	strge	r3, [sp, #56]	@ 0x38
90015c7e:	ac29      	addge	r4, sp, #164	@ 0xa4
90015c80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015c82:	e893 0003 	ldmia.w	r3, {r0, r1}
90015c86:	e887 0003 	stmia.w	r7, {r0, r1}
90015c8a:	b928      	cbnz	r0, 90015c98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90015c8c:	4b80      	ldr	r3, [pc, #512]	@ (90015e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90015c8e:	6818      	ldr	r0, [r3, #0]
90015c90:	6803      	ldr	r3, [r0, #0]
90015c92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015c94:	4798      	blx	r3
90015c96:	6038      	str	r0, [r7, #0]
90015c98:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015c9a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015c9e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015ca2:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90015ca4:	930c      	str	r3, [sp, #48]	@ 0x30
90015ca6:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015ca8:	6963      	ldr	r3, [r4, #20]
90015caa:	440b      	add	r3, r1
90015cac:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015cb0:	4408      	add	r0, r1
90015cb2:	b200      	sxth	r0, r0
90015cb4:	4283      	cmp	r3, r0
90015cb6:	900d      	str	r0, [sp, #52]	@ 0x34
90015cb8:	f280 80dd 	bge.w	90015e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015cbc:	428b      	cmp	r3, r1
90015cbe:	da08      	bge.n	90015cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015cc0:	2a00      	cmp	r2, #0
90015cc2:	dd06      	ble.n	90015cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015cc4:	1acb      	subs	r3, r1, r3
90015cc6:	429a      	cmp	r2, r3
90015cc8:	f2c0 80e4 	blt.w	90015e94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015ccc:	2b00      	cmp	r3, #0
90015cce:	f300 80e2 	bgt.w	90015e96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015cd2:	6967      	ldr	r7, [r4, #20]
90015cd4:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015cd8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015cda:	443b      	add	r3, r7
90015cdc:	461f      	mov	r7, r3
90015cde:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015ce0:	1bdf      	subs	r7, r3, r7
90015ce2:	4297      	cmp	r7, r2
90015ce4:	bfa8      	it	ge
90015ce6:	4617      	movge	r7, r2
90015ce8:	2f00      	cmp	r7, #0
90015cea:	f340 8166 	ble.w	90015fba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015cee:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015cf0:	6829      	ldr	r1, [r5, #0]
90015cf2:	f9b3 2000 	ldrsh.w	r2, [r3]
90015cf6:	f9bb 3000 	ldrsh.w	r3, [fp]
90015cfa:	4411      	add	r1, r2
90015cfc:	6820      	ldr	r0, [r4, #0]
90015cfe:	4299      	cmp	r1, r3
90015d00:	dd1a      	ble.n	90015d38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015d02:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015d06:	4402      	add	r2, r0
90015d08:	440b      	add	r3, r1
90015d0a:	b21b      	sxth	r3, r3
90015d0c:	429a      	cmp	r2, r3
90015d0e:	dc13      	bgt.n	90015d38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015d10:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015d12:	a912      	add	r1, sp, #72	@ 0x48
90015d14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015d16:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015d18:	681b      	ldr	r3, [r3, #0]
90015d1a:	9206      	str	r2, [sp, #24]
90015d1c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015d1e:	9500      	str	r5, [sp, #0]
90015d20:	9205      	str	r2, [sp, #20]
90015d22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015d24:	e9cd b203 	strd	fp, r2, [sp, #12]
90015d28:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015d2a:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015d2e:	aa49      	add	r2, sp, #292	@ 0x124
90015d30:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015d34:	4623      	mov	r3, r4
90015d36:	47c8      	blx	r9
90015d38:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015d3c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015d40:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015d44:	ee37 7a27 	vadd.f32	s14, s14, s15
90015d48:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015d4c:	68a1      	ldr	r1, [r4, #8]
90015d4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015d52:	ed94 6a08 	vldr	s12, [r4, #32]
90015d56:	edd4 6a07 	vldr	s13, [r4, #28]
90015d5a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015d5e:	ee76 6a86 	vadd.f32	s13, s13, s12
90015d62:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015d66:	e9d4 2300 	ldrd	r2, r3, [r4]
90015d6a:	edc4 6a07 	vstr	s13, [r4, #28]
90015d6e:	441a      	add	r2, r3
90015d70:	6963      	ldr	r3, [r4, #20]
90015d72:	3301      	adds	r3, #1
90015d74:	6022      	str	r2, [r4, #0]
90015d76:	6163      	str	r3, [r4, #20]
90015d78:	69a3      	ldr	r3, [r4, #24]
90015d7a:	3b01      	subs	r3, #1
90015d7c:	61a3      	str	r3, [r4, #24]
90015d7e:	6923      	ldr	r3, [r4, #16]
90015d80:	440b      	add	r3, r1
90015d82:	68e1      	ldr	r1, [r4, #12]
90015d84:	428b      	cmp	r3, r1
90015d86:	6123      	str	r3, [r4, #16]
90015d88:	db15      	blt.n	90015db6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90015d8a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015d8e:	3201      	adds	r2, #1
90015d90:	1a5b      	subs	r3, r3, r1
90015d92:	ee76 6a26 	vadd.f32	s13, s12, s13
90015d96:	6022      	str	r2, [r4, #0]
90015d98:	6123      	str	r3, [r4, #16]
90015d9a:	edc4 6a07 	vstr	s13, [r4, #28]
90015d9e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015da2:	ee36 7a87 	vadd.f32	s14, s13, s14
90015da6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015daa:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015dae:	ee77 7a27 	vadd.f32	s15, s14, s15
90015db2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015db6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015dba:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015dbe:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015dc2:	ee37 7a27 	vadd.f32	s14, s14, s15
90015dc6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015dca:	68a9      	ldr	r1, [r5, #8]
90015dcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015dd0:	ed95 6a08 	vldr	s12, [r5, #32]
90015dd4:	edd5 6a07 	vldr	s13, [r5, #28]
90015dd8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015ddc:	ee76 6a86 	vadd.f32	s13, s13, s12
90015de0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015de4:	e9d5 2300 	ldrd	r2, r3, [r5]
90015de8:	edc5 6a07 	vstr	s13, [r5, #28]
90015dec:	441a      	add	r2, r3
90015dee:	696b      	ldr	r3, [r5, #20]
90015df0:	3301      	adds	r3, #1
90015df2:	602a      	str	r2, [r5, #0]
90015df4:	616b      	str	r3, [r5, #20]
90015df6:	69ab      	ldr	r3, [r5, #24]
90015df8:	3b01      	subs	r3, #1
90015dfa:	61ab      	str	r3, [r5, #24]
90015dfc:	692b      	ldr	r3, [r5, #16]
90015dfe:	440b      	add	r3, r1
90015e00:	68e9      	ldr	r1, [r5, #12]
90015e02:	428b      	cmp	r3, r1
90015e04:	612b      	str	r3, [r5, #16]
90015e06:	db15      	blt.n	90015e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90015e08:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015e0c:	3201      	adds	r2, #1
90015e0e:	1a5b      	subs	r3, r3, r1
90015e10:	ee76 6a26 	vadd.f32	s13, s12, s13
90015e14:	602a      	str	r2, [r5, #0]
90015e16:	612b      	str	r3, [r5, #16]
90015e18:	edc5 6a07 	vstr	s13, [r5, #28]
90015e1c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015e20:	ee36 7a87 	vadd.f32	s14, s13, s14
90015e24:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015e28:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015e2c:	ee77 7a27 	vadd.f32	s15, s14, s15
90015e30:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015e34:	3f01      	subs	r7, #1
90015e36:	e757      	b.n	90015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90015e38:	4299      	cmp	r1, r3
90015e3a:	dc13      	bgt.n	90015e64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015e3c:	429a      	cmp	r2, r3
90015e3e:	da14      	bge.n	90015e6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015e40:	2502      	movs	r5, #2
90015e42:	2703      	movs	r7, #3
90015e44:	f04f 0800 	mov.w	r8, #0
90015e48:	46a9      	mov	r9, r5
90015e4a:	f04f 0a01 	mov.w	sl, #1
90015e4e:	e6ef      	b.n	90015c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015e50:	2501      	movs	r5, #1
90015e52:	2700      	movs	r7, #0
90015e54:	46a9      	mov	r9, r5
90015e56:	46b8      	mov	r8, r7
90015e58:	f04f 0a02 	mov.w	sl, #2
90015e5c:	e6e8      	b.n	90015c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015e5e:	2501      	movs	r5, #1
90015e60:	2702      	movs	r7, #2
90015e62:	e6e1      	b.n	90015c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90015e64:	2500      	movs	r5, #0
90015e66:	2701      	movs	r7, #1
90015e68:	e7f4      	b.n	90015e54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90015e6a:	2702      	movs	r7, #2
90015e6c:	2503      	movs	r5, #3
90015e6e:	f04f 0900 	mov.w	r9, #0
90015e72:	46b8      	mov	r8, r7
90015e74:	e7e9      	b.n	90015e4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90015e76:	4613      	mov	r3, r2
90015e78:	e728      	b.n	90015ccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90015e7a:	bf00      	nop
90015e7c:	240234b4 	.word	0x240234b4
90015e80:	fffd8f01 	.word	0xfffd8f01
90015e84:	00027100 	.word	0x00027100
90015e88:	0004e1ff 	.word	0x0004e1ff
90015e8c:	0004e1fe 	.word	0x0004e1fe
90015e90:	240234bc 	.word	0x240234bc
90015e94:	4613      	mov	r3, r2
90015e96:	992b      	ldr	r1, [sp, #172]	@ 0xac
90015e98:	469e      	mov	lr, r3
90015e9a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90015e9c:	469c      	mov	ip, r3
90015e9e:	9111      	str	r1, [sp, #68]	@ 0x44
90015ea0:	f04f 0900 	mov.w	r9, #0
90015ea4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90015ea8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90015eac:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90015eb0:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90015eb4:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90015eb8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90015ebc:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90015ec0:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90015ec4:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90015ec8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90015ecc:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90015ed0:	f1bc 0f00 	cmp.w	ip, #0
90015ed4:	d147      	bne.n	90015f66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90015ed6:	eb03 0c07 	add.w	ip, r3, r7
90015eda:	1ad7      	subs	r7, r2, r3
90015edc:	f1b9 0f00 	cmp.w	r9, #0
90015ee0:	d009      	beq.n	90015ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015ee2:	9029      	str	r0, [sp, #164]	@ 0xa4
90015ee4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90015ee8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90015eec:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90015ef0:	912d      	str	r1, [sp, #180]	@ 0xb4
90015ef2:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90015ef6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015ef8:	f04f 0800 	mov.w	r8, #0
90015efc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015f00:	9111      	str	r1, [sp, #68]	@ 0x44
90015f02:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90015f06:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015f0a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015f0e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015f12:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90015f16:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015f1a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015f1e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015f22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90015f26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015f2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015f2e:	f1be 0f00 	cmp.w	lr, #0
90015f32:	d031      	beq.n	90015f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015f34:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015f36:	4450      	add	r0, sl
90015f38:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015f3c:	4431      	add	r1, r6
90015f3e:	ee37 7a04 	vadd.f32	s14, s14, s8
90015f42:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015f46:	4549      	cmp	r1, r9
90015f48:	db08      	blt.n	90015f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90015f4a:	ee77 7a85 	vadd.f32	s15, s15, s10
90015f4e:	3001      	adds	r0, #1
90015f50:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015f54:	eba1 0109 	sub.w	r1, r1, r9
90015f58:	ee37 7a06 	vadd.f32	s14, s14, s12
90015f5c:	f10e 3eff 	add.w	lr, lr, #4294967295
90015f60:	f04f 0801 	mov.w	r8, #1
90015f64:	e7e3      	b.n	90015f2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90015f66:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015f68:	4450      	add	r0, sl
90015f6a:	ee37 7a24 	vadd.f32	s14, s14, s9
90015f6e:	4431      	add	r1, r6
90015f70:	ee77 7a84 	vadd.f32	s15, s15, s8
90015f74:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015f78:	4541      	cmp	r1, r8
90015f7a:	db08      	blt.n	90015f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90015f7c:	ee76 6a85 	vadd.f32	s13, s13, s10
90015f80:	3001      	adds	r0, #1
90015f82:	ee37 7a25 	vadd.f32	s14, s14, s11
90015f86:	eba1 0108 	sub.w	r1, r1, r8
90015f8a:	ee77 7a86 	vadd.f32	s15, s15, s12
90015f8e:	f10c 3cff 	add.w	ip, ip, #4294967295
90015f92:	f04f 0901 	mov.w	r9, #1
90015f96:	e79b      	b.n	90015ed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90015f98:	449c      	add	ip, r3
90015f9a:	1aff      	subs	r7, r7, r3
90015f9c:	f1b8 0f00 	cmp.w	r8, #0
90015fa0:	d009      	beq.n	90015fb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90015fa2:	9019      	str	r0, [sp, #100]	@ 0x64
90015fa4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90015fa8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90015fac:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90015fb0:	911d      	str	r1, [sp, #116]	@ 0x74
90015fb2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90015fb6:	1ad2      	subs	r2, r2, r3
90015fb8:	e68b      	b.n	90015cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015fba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015fbc:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90015fbe:	2b00      	cmp	r3, #0
90015fc0:	f000 80d1 	beq.w	90016166 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015fc4:	ad19      	add	r5, sp, #100	@ 0x64
90015fc6:	ac39      	add	r4, sp, #228	@ 0xe4
90015fc8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015fca:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015fce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015fd2:	930c      	str	r3, [sp, #48]	@ 0x30
90015fd4:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015fd6:	6963      	ldr	r3, [r4, #20]
90015fd8:	440b      	add	r3, r1
90015fda:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015fde:	4408      	add	r0, r1
90015fe0:	b200      	sxth	r0, r0
90015fe2:	4283      	cmp	r3, r0
90015fe4:	900d      	str	r0, [sp, #52]	@ 0x34
90015fe6:	f280 80c1 	bge.w	9001616c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90015fea:	428b      	cmp	r3, r1
90015fec:	da08      	bge.n	90016000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015fee:	2a00      	cmp	r2, #0
90015ff0:	dd06      	ble.n	90016000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015ff2:	1acb      	subs	r3, r1, r3
90015ff4:	429a      	cmp	r2, r3
90015ff6:	f2c0 80bb 	blt.w	90016170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90015ffa:	2b00      	cmp	r3, #0
90015ffc:	f300 80b9 	bgt.w	90016172 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90016000:	6967      	ldr	r7, [r4, #20]
90016002:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90016006:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016008:	443b      	add	r3, r7
9001600a:	461f      	mov	r7, r3
9001600c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001600e:	1bdf      	subs	r7, r3, r7
90016010:	4297      	cmp	r7, r2
90016012:	bfa8      	it	ge
90016014:	4617      	movge	r7, r2
90016016:	2f00      	cmp	r7, #0
90016018:	f340 813c 	ble.w	90016294 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
9001601c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001601e:	6829      	ldr	r1, [r5, #0]
90016020:	f9b3 2000 	ldrsh.w	r2, [r3]
90016024:	f9bb 3000 	ldrsh.w	r3, [fp]
90016028:	4411      	add	r1, r2
9001602a:	6820      	ldr	r0, [r4, #0]
9001602c:	4299      	cmp	r1, r3
9001602e:	dd1a      	ble.n	90016066 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016030:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016034:	4402      	add	r2, r0
90016036:	440b      	add	r3, r1
90016038:	b21b      	sxth	r3, r3
9001603a:	429a      	cmp	r2, r3
9001603c:	dc13      	bgt.n	90016066 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001603e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016040:	a912      	add	r1, sp, #72	@ 0x48
90016042:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016044:	9809      	ldr	r0, [sp, #36]	@ 0x24
90016046:	681b      	ldr	r3, [r3, #0]
90016048:	9206      	str	r2, [sp, #24]
9001604a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001604c:	9500      	str	r5, [sp, #0]
9001604e:	9205      	str	r2, [sp, #20]
90016050:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90016052:	e9cd b203 	strd	fp, r2, [sp, #12]
90016056:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90016058:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001605c:	aa49      	add	r2, sp, #292	@ 0x124
9001605e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90016062:	4623      	mov	r3, r4
90016064:	47c8      	blx	r9
90016066:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001606a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001606e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90016072:	ee37 7a27 	vadd.f32	s14, s14, s15
90016076:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001607a:	68a1      	ldr	r1, [r4, #8]
9001607c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016080:	ed94 6a08 	vldr	s12, [r4, #32]
90016084:	edd4 6a07 	vldr	s13, [r4, #28]
90016088:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001608c:	ee76 6a86 	vadd.f32	s13, s13, s12
90016090:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016094:	e9d4 2300 	ldrd	r2, r3, [r4]
90016098:	edc4 6a07 	vstr	s13, [r4, #28]
9001609c:	441a      	add	r2, r3
9001609e:	6963      	ldr	r3, [r4, #20]
900160a0:	3301      	adds	r3, #1
900160a2:	6022      	str	r2, [r4, #0]
900160a4:	6163      	str	r3, [r4, #20]
900160a6:	69a3      	ldr	r3, [r4, #24]
900160a8:	3b01      	subs	r3, #1
900160aa:	61a3      	str	r3, [r4, #24]
900160ac:	6923      	ldr	r3, [r4, #16]
900160ae:	440b      	add	r3, r1
900160b0:	68e1      	ldr	r1, [r4, #12]
900160b2:	428b      	cmp	r3, r1
900160b4:	6123      	str	r3, [r4, #16]
900160b6:	db15      	blt.n	900160e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900160b8:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900160bc:	3201      	adds	r2, #1
900160be:	1a5b      	subs	r3, r3, r1
900160c0:	ee76 6a26 	vadd.f32	s13, s12, s13
900160c4:	6022      	str	r2, [r4, #0]
900160c6:	6123      	str	r3, [r4, #16]
900160c8:	edc4 6a07 	vstr	s13, [r4, #28]
900160cc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900160d0:	ee36 7a87 	vadd.f32	s14, s13, s14
900160d4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900160d8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900160dc:	ee77 7a27 	vadd.f32	s15, s14, s15
900160e0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900160e4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900160e8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900160ec:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900160f0:	ee37 7a27 	vadd.f32	s14, s14, s15
900160f4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900160f8:	68a9      	ldr	r1, [r5, #8]
900160fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
900160fe:	ed95 6a08 	vldr	s12, [r5, #32]
90016102:	edd5 6a07 	vldr	s13, [r5, #28]
90016106:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001610a:	ee76 6a86 	vadd.f32	s13, s13, s12
9001610e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016112:	e9d5 2300 	ldrd	r2, r3, [r5]
90016116:	edc5 6a07 	vstr	s13, [r5, #28]
9001611a:	441a      	add	r2, r3
9001611c:	696b      	ldr	r3, [r5, #20]
9001611e:	3301      	adds	r3, #1
90016120:	602a      	str	r2, [r5, #0]
90016122:	616b      	str	r3, [r5, #20]
90016124:	69ab      	ldr	r3, [r5, #24]
90016126:	3b01      	subs	r3, #1
90016128:	61ab      	str	r3, [r5, #24]
9001612a:	692b      	ldr	r3, [r5, #16]
9001612c:	440b      	add	r3, r1
9001612e:	68e9      	ldr	r1, [r5, #12]
90016130:	428b      	cmp	r3, r1
90016132:	612b      	str	r3, [r5, #16]
90016134:	db15      	blt.n	90016162 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90016136:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001613a:	3201      	adds	r2, #1
9001613c:	1a5b      	subs	r3, r3, r1
9001613e:	ee76 6a26 	vadd.f32	s13, s12, s13
90016142:	602a      	str	r2, [r5, #0]
90016144:	612b      	str	r3, [r5, #16]
90016146:	edc5 6a07 	vstr	s13, [r5, #28]
9001614a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001614e:	ee36 7a87 	vadd.f32	s14, s13, s14
90016152:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016156:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001615a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001615e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016162:	3f01      	subs	r7, #1
90016164:	e757      	b.n	90016016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90016166:	ad39      	add	r5, sp, #228	@ 0xe4
90016168:	ac19      	add	r4, sp, #100	@ 0x64
9001616a:	e72d      	b.n	90015fc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9001616c:	4613      	mov	r3, r2
9001616e:	e744      	b.n	90015ffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90016170:	4613      	mov	r3, r2
90016172:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90016174:	469e      	mov	lr, r3
90016176:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001617a:	461f      	mov	r7, r3
9001617c:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90016180:	f04f 0900 	mov.w	r9, #0
90016184:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90016188:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
9001618c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90016190:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90016194:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90016198:	993d      	ldr	r1, [sp, #244]	@ 0xf4
9001619a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
9001619e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900161a2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900161a6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900161aa:	960e      	str	r6, [sp, #56]	@ 0x38
900161ac:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900161b0:	2f00      	cmp	r7, #0
900161b2:	d146      	bne.n	90016242 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900161b4:	449c      	add	ip, r3
900161b6:	1ad7      	subs	r7, r2, r3
900161b8:	f1b9 0f00 	cmp.w	r9, #0
900161bc:	d009      	beq.n	900161d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900161be:	9039      	str	r0, [sp, #228]	@ 0xe4
900161c0:	913d      	str	r1, [sp, #244]	@ 0xf4
900161c2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900161c6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900161ca:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900161ce:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900161d2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900161d4:	f04f 0800 	mov.w	r8, #0
900161d8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900161dc:	910e      	str	r1, [sp, #56]	@ 0x38
900161de:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900161e2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900161e6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900161ea:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900161ee:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900161f2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900161f6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900161fa:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900161fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90016202:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90016206:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001620a:	f1be 0f00 	cmp.w	lr, #0
9001620e:	d030      	beq.n	90016272 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90016210:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90016212:	4450      	add	r0, sl
90016214:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016218:	4431      	add	r1, r6
9001621a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001621e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90016222:	4549      	cmp	r1, r9
90016224:	db08      	blt.n	90016238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90016226:	ee77 7a85 	vadd.f32	s15, s15, s10
9001622a:	3001      	adds	r0, #1
9001622c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016230:	eba1 0109 	sub.w	r1, r1, r9
90016234:	ee37 7a06 	vadd.f32	s14, s14, s12
90016238:	f10e 3eff 	add.w	lr, lr, #4294967295
9001623c:	f04f 0801 	mov.w	r8, #1
90016240:	e7e3      	b.n	9001620a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90016242:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90016244:	4450      	add	r0, sl
90016246:	ee37 7a24 	vadd.f32	s14, s14, s9
9001624a:	4431      	add	r1, r6
9001624c:	ee77 7a84 	vadd.f32	s15, s15, s8
90016250:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016254:	4541      	cmp	r1, r8
90016256:	db08      	blt.n	9001626a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90016258:	ee76 6a85 	vadd.f32	s13, s13, s10
9001625c:	3001      	adds	r0, #1
9001625e:	ee37 7a25 	vadd.f32	s14, s14, s11
90016262:	eba1 0108 	sub.w	r1, r1, r8
90016266:	ee77 7a86 	vadd.f32	s15, s15, s12
9001626a:	3f01      	subs	r7, #1
9001626c:	f04f 0901 	mov.w	r9, #1
90016270:	e79e      	b.n	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90016272:	449c      	add	ip, r3
90016274:	1aff      	subs	r7, r7, r3
90016276:	f1b8 0f00 	cmp.w	r8, #0
9001627a:	d009      	beq.n	90016290 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9001627c:	9019      	str	r0, [sp, #100]	@ 0x64
9001627e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90016282:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90016286:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001628a:	911d      	str	r1, [sp, #116]	@ 0x74
9001628c:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90016290:	1ad2      	subs	r2, r2, r3
90016292:	e6b5      	b.n	90016000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016294:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016296:	681b      	ldr	r3, [r3, #0]
90016298:	b923      	cbnz	r3, 900162a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001629a:	4b04      	ldr	r3, [pc, #16]	@ (900162ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9001629c:	6818      	ldr	r0, [r3, #0]
9001629e:	6803      	ldr	r3, [r0, #0]
900162a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900162a2:	4798      	blx	r3
900162a4:	b05b      	add	sp, #364	@ 0x16c
900162a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900162aa:	bf00      	nop
900162ac:	240234bc 	.word	0x240234bc

900162b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900162b0:	b570      	push	{r4, r5, r6, lr}
900162b2:	4604      	mov	r4, r0
900162b4:	2500      	movs	r5, #0
900162b6:	9805      	ldr	r0, [sp, #20]
900162b8:	f89d 601c 	ldrb.w	r6, [sp, #28]
900162bc:	6061      	str	r1, [r4, #4]
900162be:	8263      	strh	r3, [r4, #18]
900162c0:	f89d 1010 	ldrb.w	r1, [sp, #16]
900162c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900162c8:	8025      	strh	r5, [r4, #0]
900162ca:	7221      	strb	r1, [r4, #8]
900162cc:	7266      	strb	r6, [r4, #9]
900162ce:	60e0      	str	r0, [r4, #12]
900162d0:	8222      	strh	r2, [r4, #16]
900162d2:	82a3      	strh	r3, [r4, #20]
900162d4:	82e5      	strh	r5, [r4, #22]
900162d6:	8325      	strh	r5, [r4, #24]
900162d8:	8365      	strh	r5, [r4, #26]
900162da:	83a5      	strh	r5, [r4, #28]
900162dc:	83e5      	strh	r5, [r4, #30]
900162de:	8425      	strh	r5, [r4, #32]
900162e0:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900162e4:	b32e      	cbz	r6, 90016332 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900162e6:	6803      	ldr	r3, [r0, #0]
900162e8:	695b      	ldr	r3, [r3, #20]
900162ea:	4798      	blx	r3
900162ec:	4606      	mov	r6, r0
900162ee:	b300      	cbz	r0, 90016332 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900162f0:	68e0      	ldr	r0, [r4, #12]
900162f2:	4631      	mov	r1, r6
900162f4:	6803      	ldr	r3, [r0, #0]
900162f6:	68db      	ldr	r3, [r3, #12]
900162f8:	4798      	blx	r3
900162fa:	4605      	mov	r5, r0
900162fc:	b1c8      	cbz	r0, 90016332 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900162fe:	7b43      	ldrb	r3, [r0, #13]
90016300:	7a82      	ldrb	r2, [r0, #10]
90016302:	005b      	lsls	r3, r3, #1
90016304:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016308:	4313      	orrs	r3, r2
9001630a:	8423      	strh	r3, [r4, #32]
9001630c:	7a63      	ldrb	r3, [r4, #9]
9001630e:	2b06      	cmp	r3, #6
90016310:	d10f      	bne.n	90016332 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016312:	68e0      	ldr	r0, [r4, #12]
90016314:	462a      	mov	r2, r5
90016316:	4631      	mov	r1, r6
90016318:	6803      	ldr	r3, [r0, #0]
9001631a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001631c:	4798      	blx	r3
9001631e:	7b6b      	ldrb	r3, [r5, #13]
90016320:	005b      	lsls	r3, r3, #1
90016322:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90016326:	7aab      	ldrb	r3, [r5, #10]
90016328:	4313      	orrs	r3, r2
9001632a:	4418      	add	r0, r3
9001632c:	8c23      	ldrh	r3, [r4, #32]
9001632e:	4418      	add	r0, r3
90016330:	8420      	strh	r0, [r4, #32]
90016332:	4620      	mov	r0, r4
90016334:	bd70      	pop	{r4, r5, r6, pc}

90016336 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90016336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001633a:	2400      	movs	r4, #0
9001633c:	b085      	sub	sp, #20
9001633e:	4681      	mov	r9, r0
90016340:	4688      	mov	r8, r1
90016342:	4692      	mov	sl, r2
90016344:	469b      	mov	fp, r3
90016346:	4627      	mov	r7, r4
90016348:	4625      	mov	r5, r4
9001634a:	4626      	mov	r6, r4
9001634c:	4554      	cmp	r4, sl
9001634e:	da2a      	bge.n	900163a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90016350:	2300      	movs	r3, #0
90016352:	9303      	str	r3, [sp, #12]
90016354:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016358:	429d      	cmp	r5, r3
9001635a:	d004      	beq.n	90016366 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001635c:	f242 030b 	movw	r3, #8203	@ 0x200b
90016360:	429d      	cmp	r5, r3
90016362:	bf18      	it	ne
90016364:	462f      	movne	r7, r5
90016366:	ab03      	add	r3, sp, #12
90016368:	4642      	mov	r2, r8
9001636a:	4659      	mov	r1, fp
9001636c:	4648      	mov	r0, r9
9001636e:	f003 fbb3 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016372:	4605      	mov	r5, r0
90016374:	b1b8      	cbz	r0, 900163a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90016376:	280a      	cmp	r0, #10
90016378:	d015      	beq.n	900163a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001637a:	9a03      	ldr	r2, [sp, #12]
9001637c:	b18a      	cbz	r2, 900163a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001637e:	7b50      	ldrb	r0, [r2, #13]
90016380:	4639      	mov	r1, r7
90016382:	7a93      	ldrb	r3, [r2, #10]
90016384:	0040      	lsls	r0, r0, #1
90016386:	8895      	ldrh	r5, [r2, #4]
90016388:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001638c:	4303      	orrs	r3, r0
9001638e:	4640      	mov	r0, r8
90016390:	9301      	str	r3, [sp, #4]
90016392:	f8d8 3000 	ldr.w	r3, [r8]
90016396:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016398:	4798      	blx	r3
9001639a:	9b01      	ldr	r3, [sp, #4]
9001639c:	4418      	add	r0, r3
9001639e:	4406      	add	r6, r0
900163a0:	b2b6      	uxth	r6, r6
900163a2:	3401      	adds	r4, #1
900163a4:	e7d2      	b.n	9001634c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900163a6:	4630      	mov	r0, r6
900163a8:	b005      	add	sp, #20
900163aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900163ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900163ae:	2a02      	cmp	r2, #2
900163b0:	b530      	push	{r4, r5, lr}
900163b2:	d011      	beq.n	900163d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900163b4:	2a03      	cmp	r2, #3
900163b6:	d01c      	beq.n	900163f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900163b8:	2a01      	cmp	r2, #1
900163ba:	d10c      	bne.n	900163d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900163bc:	888b      	ldrh	r3, [r1, #4]
900163be:	8801      	ldrh	r1, [r0, #0]
900163c0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900163c4:	1a5b      	subs	r3, r3, r1
900163c6:	8844      	ldrh	r4, [r0, #2]
900163c8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900163cc:	1a9b      	subs	r3, r3, r2
900163ce:	8004      	strh	r4, [r0, #0]
900163d0:	8081      	strh	r1, [r0, #4]
900163d2:	8043      	strh	r3, [r0, #2]
900163d4:	80c2      	strh	r2, [r0, #6]
900163d6:	bd30      	pop	{r4, r5, pc}
900163d8:	88cb      	ldrh	r3, [r1, #6]
900163da:	8842      	ldrh	r2, [r0, #2]
900163dc:	1a9b      	subs	r3, r3, r2
900163de:	88c2      	ldrh	r2, [r0, #6]
900163e0:	1a9b      	subs	r3, r3, r2
900163e2:	888a      	ldrh	r2, [r1, #4]
900163e4:	8801      	ldrh	r1, [r0, #0]
900163e6:	8043      	strh	r3, [r0, #2]
900163e8:	1a52      	subs	r2, r2, r1
900163ea:	8881      	ldrh	r1, [r0, #4]
900163ec:	1a52      	subs	r2, r2, r1
900163ee:	8002      	strh	r2, [r0, #0]
900163f0:	e7f1      	b.n	900163d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900163f2:	88cb      	ldrh	r3, [r1, #6]
900163f4:	8841      	ldrh	r1, [r0, #2]
900163f6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900163fa:	1a5b      	subs	r3, r3, r1
900163fc:	f9b0 5000 	ldrsh.w	r5, [r0]
90016400:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90016404:	1a9b      	subs	r3, r3, r2
90016406:	8045      	strh	r5, [r0, #2]
90016408:	8082      	strh	r2, [r0, #4]
9001640a:	8003      	strh	r3, [r0, #0]
9001640c:	80c4      	strh	r4, [r0, #6]
9001640e:	e7e2      	b.n	900163d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90016410 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90016410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016414:	b09f      	sub	sp, #124	@ 0x7c
90016416:	920f      	str	r2, [sp, #60]	@ 0x3c
90016418:	9312      	str	r3, [sp, #72]	@ 0x48
9001641a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9001641c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001641e:	8812      	ldrh	r2, [r2, #0]
90016420:	889b      	ldrh	r3, [r3, #4]
90016422:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90016424:	4413      	add	r3, r2
90016426:	900e      	str	r0, [sp, #56]	@ 0x38
90016428:	6828      	ldr	r0, [r5, #0]
9001642a:	b21b      	sxth	r3, r3
9001642c:	9117      	str	r1, [sp, #92]	@ 0x5c
9001642e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90016432:	9311      	str	r3, [sp, #68]	@ 0x44
90016434:	6803      	ldr	r3, [r0, #0]
90016436:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
9001643a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001643c:	4798      	blx	r3
9001643e:	682b      	ldr	r3, [r5, #0]
90016440:	9013      	str	r0, [sp, #76]	@ 0x4c
90016442:	7b1a      	ldrb	r2, [r3, #12]
90016444:	7adb      	ldrb	r3, [r3, #11]
90016446:	9215      	str	r2, [sp, #84]	@ 0x54
90016448:	9316      	str	r3, [sp, #88]	@ 0x58
9001644a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001644e:	2c00      	cmp	r4, #0
90016450:	d067      	beq.n	90016522 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90016452:	7c2b      	ldrb	r3, [r5, #16]
90016454:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90016456:	2b06      	cmp	r3, #6
90016458:	bf14      	ite	ne
9001645a:	2301      	movne	r3, #1
9001645c:	2302      	moveq	r3, #2
9001645e:	4413      	add	r3, r2
90016460:	f04f 0900 	mov.w	r9, #0
90016464:	9310      	str	r3, [sp, #64]	@ 0x40
90016466:	464c      	mov	r4, r9
90016468:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
9001646c:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90016470:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016472:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016474:	4293      	cmp	r3, r2
90016476:	f280 808b 	bge.w	90016590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001647a:	2300      	movs	r3, #0
9001647c:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90016480:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90016484:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016488:	429c      	cmp	r4, r3
9001648a:	d006      	beq.n	9001649a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001648c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001648e:	f242 020b 	movw	r2, #8203	@ 0x200b
90016492:	4294      	cmp	r4, r2
90016494:	bf18      	it	ne
90016496:	4623      	movne	r3, r4
90016498:	930c      	str	r3, [sp, #48]	@ 0x30
9001649a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001649c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
9001649e:	682a      	ldr	r2, [r5, #0]
900164a0:	428b      	cmp	r3, r1
900164a2:	db40      	blt.n	90016526 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900164a4:	6813      	ldr	r3, [r2, #0]
900164a6:	4610      	mov	r0, r2
900164a8:	695b      	ldr	r3, [r3, #20]
900164aa:	4798      	blx	r3
900164ac:	4604      	mov	r4, r0
900164ae:	6828      	ldr	r0, [r5, #0]
900164b0:	aa1d      	add	r2, sp, #116	@ 0x74
900164b2:	4621      	mov	r1, r4
900164b4:	6803      	ldr	r3, [r0, #0]
900164b6:	689f      	ldr	r7, [r3, #8]
900164b8:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900164bc:	47b8      	blx	r7
900164be:	901c      	str	r0, [sp, #112]	@ 0x70
900164c0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900164c4:	429c      	cmp	r4, r3
900164c6:	f000 80eb 	beq.w	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900164ca:	f242 030b 	movw	r3, #8203	@ 0x200b
900164ce:	429c      	cmp	r4, r3
900164d0:	f000 80e6 	beq.w	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900164d4:	2c00      	cmp	r4, #0
900164d6:	f000 810d 	beq.w	900166f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900164da:	2c0a      	cmp	r4, #10
900164dc:	d05e      	beq.n	9001659c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900164de:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900164e0:	b36a      	cbz	r2, 9001653e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900164e2:	8894      	ldrh	r4, [r2, #4]
900164e4:	f1bb 0f00 	cmp.w	fp, #0
900164e8:	d03a      	beq.n	90016560 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900164ea:	f892 900d 	ldrb.w	r9, [r2, #13]
900164ee:	f1bb 0f01 	cmp.w	fp, #1
900164f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900164f6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900164fa:	f892 900a 	ldrb.w	r9, [r2, #10]
900164fe:	ea49 0903 	orr.w	r9, r9, r3
90016502:	d133      	bne.n	9001656c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90016504:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016506:	eba6 0609 	sub.w	r6, r6, r9
9001650a:	2b00      	cmp	r3, #0
9001650c:	d14d      	bne.n	900165aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001650e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90016510:	eb09 0306 	add.w	r3, r9, r6
90016514:	4413      	add	r3, r2
90016516:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016518:	f9b2 2000 	ldrsh.w	r2, [r2]
9001651c:	4293      	cmp	r3, r2
9001651e:	da4e      	bge.n	900165be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90016520:	e036      	b.n	90016590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90016522:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90016524:	e79c      	b.n	90016460 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90016526:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001652a:	4659      	mov	r1, fp
9001652c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001652e:	9301      	str	r3, [sp, #4]
90016530:	ab1d      	add	r3, sp, #116	@ 0x74
90016532:	9300      	str	r3, [sp, #0]
90016534:	ab1c      	add	r3, sp, #112	@ 0x70
90016536:	f003 fb18 	bl	90019b6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001653a:	4604      	mov	r4, r0
9001653c:	e7c0      	b.n	900164c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001653e:	6828      	ldr	r0, [r5, #0]
90016540:	6803      	ldr	r3, [r0, #0]
90016542:	691b      	ldr	r3, [r3, #16]
90016544:	4798      	blx	r3
90016546:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001654a:	4298      	cmp	r0, r3
9001654c:	f000 80a8 	beq.w	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016550:	f242 030b 	movw	r3, #8203	@ 0x200b
90016554:	4298      	cmp	r0, r3
90016556:	f000 80a3 	beq.w	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001655a:	f1bb 0f00 	cmp.w	fp, #0
9001655e:	d100      	bne.n	90016562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90016560:	444e      	add	r6, r9
90016562:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016564:	2a00      	cmp	r2, #0
90016566:	d1c0      	bne.n	900164ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90016568:	4691      	mov	r9, r2
9001656a:	e099      	b.n	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001656c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001656e:	2b00      	cmp	r3, #0
90016570:	f000 80c2 	beq.w	900166f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90016574:	f1bb 0f00 	cmp.w	fp, #0
90016578:	d117      	bne.n	900165aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001657a:	6828      	ldr	r0, [r5, #0]
9001657c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001657e:	6803      	ldr	r3, [r0, #0]
90016580:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016582:	4798      	blx	r3
90016584:	4406      	add	r6, r0
90016586:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90016588:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001658a:	1af3      	subs	r3, r6, r3
9001658c:	4293      	cmp	r3, r2
9001658e:	dd16      	ble.n	900165be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90016590:	2c00      	cmp	r4, #0
90016592:	f000 80af 	beq.w	900166f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90016596:	2c0a      	cmp	r4, #10
90016598:	f040 809d 	bne.w	900166d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
9001659c:	240a      	movs	r4, #10
9001659e:	fab4 f084 	clz	r0, r4
900165a2:	0940      	lsrs	r0, r0, #5
900165a4:	b01f      	add	sp, #124	@ 0x7c
900165a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900165aa:	6828      	ldr	r0, [r5, #0]
900165ac:	990c      	ldr	r1, [sp, #48]	@ 0x30
900165ae:	6803      	ldr	r3, [r0, #0]
900165b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900165b2:	4798      	blx	r3
900165b4:	f1bb 0f01 	cmp.w	fp, #1
900165b8:	eba6 0600 	sub.w	r6, r6, r0
900165bc:	d0a7      	beq.n	9001650e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900165be:	981c      	ldr	r0, [sp, #112]	@ 0x70
900165c0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900165c2:	f990 1009 	ldrsb.w	r1, [r0, #9]
900165c6:	f9b3 8000 	ldrsh.w	r8, [r3]
900165ca:	7b43      	ldrb	r3, [r0, #13]
900165cc:	4431      	add	r1, r6
900165ce:	015b      	lsls	r3, r3, #5
900165d0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900165d4:	7983      	ldrb	r3, [r0, #6]
900165d6:	4313      	orrs	r3, r2
900165d8:	440b      	add	r3, r1
900165da:	4543      	cmp	r3, r8
900165dc:	db60      	blt.n	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900165de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900165e0:	4299      	cmp	r1, r3
900165e2:	da5d      	bge.n	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900165e4:	6828      	ldr	r0, [r5, #0]
900165e6:	45b0      	cmp	r8, r6
900165e8:	6803      	ldr	r3, [r0, #0]
900165ea:	bfcc      	ite	gt
900165ec:	eba8 0806 	subgt.w	r8, r8, r6
900165f0:	f04f 0800 	movle.w	r8, #0
900165f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900165f6:	bfc8      	it	gt
900165f8:	fa1f f888 	uxthgt.w	r8, r8
900165fc:	4798      	blx	r3
900165fe:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016600:	7b53      	ldrb	r3, [r2, #13]
90016602:	00d9      	lsls	r1, r3, #3
90016604:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90016608:	7a11      	ldrb	r1, [r2, #8]
9001660a:	4339      	orrs	r1, r7
9001660c:	065f      	lsls	r7, r3, #25
9001660e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90016610:	bf48      	it	mi
90016612:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90016616:	4407      	add	r7, r0
90016618:	bf48      	it	mi
9001661a:	b209      	sxthmi	r1, r1
9001661c:	1a7f      	subs	r7, r7, r1
9001661e:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90016620:	b2bf      	uxth	r7, r7
90016622:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90016626:	fa0f fa87 	sxth.w	sl, r7
9001662a:	4551      	cmp	r1, sl
9001662c:	dd3c      	ble.n	900166a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001662e:	011b      	lsls	r3, r3, #4
90016630:	79d0      	ldrb	r0, [r2, #7]
90016632:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016636:	4303      	orrs	r3, r0
90016638:	449a      	add	sl, r3
9001663a:	4551      	cmp	r1, sl
9001663c:	dc30      	bgt.n	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001663e:	1bcf      	subs	r7, r1, r7
90016640:	468a      	mov	sl, r1
90016642:	b23f      	sxth	r7, r7
90016644:	9219      	str	r2, [sp, #100]	@ 0x64
90016646:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90016648:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9001664a:	6828      	ldr	r0, [r5, #0]
9001664c:	2a00      	cmp	r2, #0
9001664e:	d12d      	bne.n	900166ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90016650:	9318      	str	r3, [sp, #96]	@ 0x60
90016652:	b2bf      	uxth	r7, r7
90016654:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90016656:	6819      	ldr	r1, [r3, #0]
90016658:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
9001665a:	6801      	ldr	r1, [r0, #0]
9001665c:	9314      	str	r3, [sp, #80]	@ 0x50
9001665e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90016660:	4788      	blx	r1
90016662:	79a9      	ldrb	r1, [r5, #6]
90016664:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90016666:	910b      	str	r1, [sp, #44]	@ 0x2c
90016668:	7ba9      	ldrb	r1, [r5, #14]
9001666a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
9001666c:	910a      	str	r1, [sp, #40]	@ 0x28
9001666e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90016672:	9109      	str	r1, [sp, #36]	@ 0x24
90016674:	68a9      	ldr	r1, [r5, #8]
90016676:	9306      	str	r3, [sp, #24]
90016678:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001667a:	9205      	str	r2, [sp, #20]
9001667c:	9304      	str	r3, [sp, #16]
9001667e:	f8cd a004 	str.w	sl, [sp, #4]
90016682:	e9cd 8702 	strd	r8, r7, [sp, #8]
90016686:	44b0      	add	r8, r6
90016688:	9f14      	ldr	r7, [sp, #80]	@ 0x50
9001668a:	fa0f f388 	sxth.w	r3, r8
9001668e:	9300      	str	r3, [sp, #0]
90016690:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016692:	e9cd 0107 	strd	r0, r1, [sp, #28]
90016696:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90016698:	681a      	ldr	r2, [r3, #0]
9001669a:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001669c:	685b      	ldr	r3, [r3, #4]
9001669e:	47b8      	blx	r7
900166a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900166a2:	3301      	adds	r3, #1
900166a4:	930d      	str	r3, [sp, #52]	@ 0x34
900166a6:	e6e3      	b.n	90016470 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900166a8:	2700      	movs	r7, #0
900166aa:	e7cb      	b.n	90016644 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900166ac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900166ae:	f8d2 c008 	ldr.w	ip, [r2, #8]
900166b2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900166b4:	f8dc 1000 	ldr.w	r1, [ip]
900166b8:	e9cd 6204 	strd	r6, r2, [sp, #16]
900166bc:	79aa      	ldrb	r2, [r5, #6]
900166be:	9203      	str	r2, [sp, #12]
900166c0:	7baa      	ldrb	r2, [r5, #14]
900166c2:	9202      	str	r2, [sp, #8]
900166c4:	68aa      	ldr	r2, [r5, #8]
900166c6:	e9cd 0200 	strd	r0, r2, [sp]
900166ca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900166cc:	4660      	mov	r0, ip
900166ce:	688f      	ldr	r7, [r1, #8]
900166d0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900166d2:	47b8      	blx	r7
900166d4:	e7e4      	b.n	900166a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900166d6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900166d8:	3501      	adds	r5, #1
900166da:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900166dc:	429d      	cmp	r5, r3
900166de:	f6bf af5e 	bge.w	9001659e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900166e2:	4659      	mov	r1, fp
900166e4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900166e6:	f7f0 fb57 	bl	90006d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900166ea:	4604      	mov	r4, r0
900166ec:	b110      	cbz	r0, 900166f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900166ee:	280a      	cmp	r0, #10
900166f0:	d1f2      	bne.n	900166d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900166f2:	e753      	b.n	9001659c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900166f4:	2400      	movs	r4, #0
900166f6:	e752      	b.n	9001659e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900166f8:	f1bb 0f00 	cmp.w	fp, #0
900166fc:	f43f af43 	beq.w	90016586 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90016700:	e75d      	b.n	900165be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90016702 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90016702:	b530      	push	{r4, r5, lr}
90016704:	8ac4      	ldrh	r4, [r0, #22]
90016706:	8b45      	ldrh	r5, [r0, #26]
90016708:	8343      	strh	r3, [r0, #26]
9001670a:	442c      	add	r4, r5
9001670c:	1ae4      	subs	r4, r4, r3
9001670e:	8b83      	ldrh	r3, [r0, #28]
90016710:	82c4      	strh	r4, [r0, #22]
90016712:	8b04      	ldrh	r4, [r0, #24]
90016714:	4422      	add	r2, r4
90016716:	440c      	add	r4, r1
90016718:	1a59      	subs	r1, r3, r1
9001671a:	83c2      	strh	r2, [r0, #30]
9001671c:	8304      	strh	r4, [r0, #24]
9001671e:	8381      	strh	r1, [r0, #28]
90016720:	bd30      	pop	{r4, r5, pc}

90016722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90016722:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016726:	4604      	mov	r4, r0
90016728:	8a47      	ldrh	r7, [r0, #18]
9001672a:	68c0      	ldr	r0, [r0, #12]
9001672c:	b085      	sub	sp, #20
9001672e:	6803      	ldr	r3, [r0, #0]
90016730:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016732:	4798      	blx	r3
90016734:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90016738:	7a63      	ldrb	r3, [r4, #9]
9001673a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001673e:	3b01      	subs	r3, #1
90016740:	42b7      	cmp	r7, r6
90016742:	bfac      	ite	ge
90016744:	f04f 0900 	movge.w	r9, #0
90016748:	f04f 0901 	movlt.w	r9, #1
9001674c:	2b05      	cmp	r3, #5
9001674e:	d804      	bhi.n	9001675a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90016750:	e8df f003 	tbb	[pc, r3]
90016754:	470f0854 	.word	0x470f0854
90016758:	4c4c      	.short	0x4c4c
9001675a:	2500      	movs	r5, #0
9001675c:	46a9      	mov	r9, r5
9001675e:	462e      	mov	r6, r5
90016760:	462f      	mov	r7, r5
90016762:	e00e      	b.n	90016782 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016764:	42b7      	cmp	r7, r6
90016766:	f04f 0500 	mov.w	r5, #0
9001676a:	bfb4      	ite	lt
9001676c:	2600      	movlt	r6, #0
9001676e:	2601      	movge	r6, #1
90016770:	e7f6      	b.n	90016760 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016772:	42b7      	cmp	r7, r6
90016774:	464d      	mov	r5, r9
90016776:	f04f 0900 	mov.w	r9, #0
9001677a:	bfb4      	ite	lt
9001677c:	2600      	movlt	r6, #0
9001677e:	2601      	movge	r6, #1
90016780:	464f      	mov	r7, r9
90016782:	f04f 0800 	mov.w	r8, #0
90016786:	f8a4 8016 	strh.w	r8, [r4, #22]
9001678a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001678e:	f8cd 8004 	str.w	r8, [sp, #4]
90016792:	2300      	movs	r3, #0
90016794:	9303      	str	r3, [sp, #12]
90016796:	8823      	ldrh	r3, [r4, #0]
90016798:	2b20      	cmp	r3, #32
9001679a:	d033      	beq.n	90016804 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001679c:	f242 010b 	movw	r1, #8203	@ 0x200b
900167a0:	1a5a      	subs	r2, r3, r1
900167a2:	f1d2 0a00 	rsbs	sl, r2, #0
900167a6:	eb4a 0a02 	adc.w	sl, sl, r2
900167aa:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900167ae:	4293      	cmp	r3, r2
900167b0:	d008      	beq.n	900167c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900167b2:	428b      	cmp	r3, r1
900167b4:	9a01      	ldr	r2, [sp, #4]
900167b6:	bf0e      	itee	eq
900167b8:	f04f 0a01 	moveq.w	sl, #1
900167bc:	461a      	movne	r2, r3
900167be:	f04f 0a00 	movne.w	sl, #0
900167c2:	9201      	str	r2, [sp, #4]
900167c4:	ab03      	add	r3, sp, #12
900167c6:	68e2      	ldr	r2, [r4, #12]
900167c8:	7a21      	ldrb	r1, [r4, #8]
900167ca:	6860      	ldr	r0, [r4, #4]
900167cc:	f003 f984 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900167d0:	8020      	strh	r0, [r4, #0]
900167d2:	b9d8      	cbnz	r0, 9001680c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900167d4:	8ba2      	ldrh	r2, [r4, #28]
900167d6:	2300      	movs	r3, #0
900167d8:	4611      	mov	r1, r2
900167da:	4620      	mov	r0, r4
900167dc:	f7ff ff91 	bl	90016702 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900167e0:	e06e      	b.n	900168c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900167e2:	2500      	movs	r5, #0
900167e4:	2701      	movs	r7, #1
900167e6:	46a9      	mov	r9, r5
900167e8:	462e      	mov	r6, r5
900167ea:	e7ca      	b.n	90016782 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900167ec:	42b7      	cmp	r7, r6
900167ee:	f04f 0500 	mov.w	r5, #0
900167f2:	bfb4      	ite	lt
900167f4:	2700      	movlt	r7, #0
900167f6:	2701      	movge	r7, #1
900167f8:	462e      	mov	r6, r5
900167fa:	e7c2      	b.n	90016782 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900167fc:	2500      	movs	r5, #0
900167fe:	2601      	movs	r6, #1
90016800:	46a9      	mov	r9, r5
90016802:	e7ad      	b.n	90016760 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016804:	9301      	str	r3, [sp, #4]
90016806:	f04f 0a01 	mov.w	sl, #1
9001680a:	e7db      	b.n	900167c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001680c:	8b63      	ldrh	r3, [r4, #26]
9001680e:	280a      	cmp	r0, #10
90016810:	f103 0301 	add.w	r3, r3, #1
90016814:	8363      	strh	r3, [r4, #26]
90016816:	d0dd      	beq.n	900167d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90016818:	9a03      	ldr	r2, [sp, #12]
9001681a:	bb62      	cbnz	r2, 90016876 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001681c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016820:	4298      	cmp	r0, r3
90016822:	d003      	beq.n	9001682c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016824:	f242 030b 	movw	r3, #8203	@ 0x200b
90016828:	4298      	cmp	r0, r3
9001682a:	d1b2      	bne.n	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001682c:	8823      	ldrh	r3, [r4, #0]
9001682e:	8ba1      	ldrh	r1, [r4, #28]
90016830:	2b20      	cmp	r3, #32
90016832:	d003      	beq.n	9001683c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90016834:	f242 000b 	movw	r0, #8203	@ 0x200b
90016838:	4283      	cmp	r3, r0
9001683a:	d131      	bne.n	900168a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001683c:	f1ba 0f00 	cmp.w	sl, #0
90016840:	bf0a      	itet	eq
90016842:	4688      	moveq	r8, r1
90016844:	4650      	movne	r0, sl
90016846:	2001      	moveq	r0, #1
90016848:	440a      	add	r2, r1
9001684a:	8b23      	ldrh	r3, [r4, #24]
9001684c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90016850:	b292      	uxth	r2, r2
90016852:	83a2      	strh	r2, [r4, #28]
90016854:	4413      	add	r3, r2
90016856:	f1b9 0f00 	cmp.w	r9, #0
9001685a:	d102      	bne.n	90016862 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001685c:	2d00      	cmp	r5, #0
9001685e:	d042      	beq.n	900168e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90016860:	b300      	cbz	r0, 900168a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90016862:	8c21      	ldrh	r1, [r4, #32]
90016864:	4419      	add	r1, r3
90016866:	458c      	cmp	ip, r1
90016868:	da37      	bge.n	900168da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001686a:	8ae1      	ldrh	r1, [r4, #22]
9001686c:	2900      	cmp	r1, #0
9001686e:	d034      	beq.n	900168da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90016870:	4563      	cmp	r3, ip
90016872:	dd8e      	ble.n	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016874:	e01d      	b.n	900168b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90016876:	8893      	ldrh	r3, [r2, #4]
90016878:	9901      	ldr	r1, [sp, #4]
9001687a:	8023      	strh	r3, [r4, #0]
9001687c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90016880:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90016884:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90016888:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001688c:	ea4b 0b00 	orr.w	fp, fp, r0
90016890:	68e0      	ldr	r0, [r4, #12]
90016892:	6803      	ldr	r3, [r0, #0]
90016894:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016896:	4798      	blx	r3
90016898:	eb0b 0200 	add.w	r2, fp, r0
9001689c:	b292      	uxth	r2, r2
9001689e:	e7c5      	b.n	9001682c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900168a0:	2000      	movs	r0, #0
900168a2:	e7d1      	b.n	90016848 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900168a4:	4563      	cmp	r3, ip
900168a6:	f77f af74 	ble.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900168aa:	8ae3      	ldrh	r3, [r4, #22]
900168ac:	2b00      	cmp	r3, #0
900168ae:	f43f af70 	beq.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900168b2:	2301      	movs	r3, #1
900168b4:	8c22      	ldrh	r2, [r4, #32]
900168b6:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
900168ba:	8be3      	ldrh	r3, [r4, #30]
900168bc:	4413      	add	r3, r2
900168be:	83e3      	strh	r3, [r4, #30]
900168c0:	68e0      	ldr	r0, [r4, #12]
900168c2:	6803      	ldr	r3, [r0, #0]
900168c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900168c6:	4798      	blx	r3
900168c8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900168cc:	4418      	add	r0, r3
900168ce:	8a63      	ldrh	r3, [r4, #18]
900168d0:	1a18      	subs	r0, r3, r0
900168d2:	8260      	strh	r0, [r4, #18]
900168d4:	b005      	add	sp, #20
900168d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900168da:	2300      	movs	r3, #0
900168dc:	4611      	mov	r1, r2
900168de:	4620      	mov	r0, r4
900168e0:	f7ff ff0f 	bl	90016702 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900168e4:	e755      	b.n	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900168e6:	4563      	cmp	r3, ip
900168e8:	dd14      	ble.n	90016914 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900168ea:	b117      	cbz	r7, 900168f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900168ec:	2301      	movs	r3, #1
900168ee:	460a      	mov	r2, r1
900168f0:	e772      	b.n	900167d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900168f2:	2e00      	cmp	r6, #0
900168f4:	f43f af4d 	beq.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900168f8:	2800      	cmp	r0, #0
900168fa:	f47f af4a 	bne.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900168fe:	f1ba 0f00 	cmp.w	sl, #0
90016902:	d002      	beq.n	9001690a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016904:	2301      	movs	r3, #1
90016906:	4642      	mov	r2, r8
90016908:	e767      	b.n	900167da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001690a:	8ae3      	ldrh	r3, [r4, #22]
9001690c:	2b00      	cmp	r3, #0
9001690e:	f43f af40 	beq.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016912:	e7d5      	b.n	900168c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016914:	2800      	cmp	r0, #0
90016916:	f47f af3c 	bne.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001691a:	f1ba 0f00 	cmp.w	sl, #0
9001691e:	f43f af38 	beq.w	90016792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016922:	2301      	movs	r3, #1
90016924:	4642      	mov	r2, r8
90016926:	e7da      	b.n	900168de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90016928 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90016928:	b5f0      	push	{r4, r5, r6, r7, lr}
9001692a:	4605      	mov	r5, r0
9001692c:	b08f      	sub	sp, #60	@ 0x3c
9001692e:	4617      	mov	r7, r2
90016930:	461c      	mov	r4, r3
90016932:	460e      	mov	r6, r1
90016934:	b1d1      	cbz	r1, 9001696c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90016936:	681b      	ldr	r3, [r3, #0]
90016938:	4620      	mov	r0, r4
9001693a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001693c:	4798      	blx	r3
9001693e:	4240      	negs	r0, r0
90016940:	9603      	str	r6, [sp, #12]
90016942:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90016946:	b200      	sxth	r0, r0
90016948:	9700      	str	r7, [sp, #0]
9001694a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001694e:	4629      	mov	r1, r5
90016950:	e9cd 4001 	strd	r4, r0, [sp, #4]
90016954:	2401      	movs	r4, #1
90016956:	a805      	add	r0, sp, #20
90016958:	f7ff fcaa 	bl	900162b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001695c:	a805      	add	r0, sp, #20
9001695e:	f7ff fee0 	bl	90016722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016962:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016966:	b163      	cbz	r3, 90016982 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90016968:	3401      	adds	r4, #1
9001696a:	e7f7      	b.n	9001695c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001696c:	2401      	movs	r4, #1
9001696e:	f003 f97f 	bl	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016972:	280a      	cmp	r0, #10
90016974:	4628      	mov	r0, r5
90016976:	bf08      	it	eq
90016978:	3401      	addeq	r4, #1
9001697a:	f003 f979 	bl	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001697e:	2800      	cmp	r0, #0
90016980:	d1f7      	bne.n	90016972 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90016982:	b2a0      	uxth	r0, r4
90016984:	b00f      	add	sp, #60	@ 0x3c
90016986:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90016988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001698c:	b0e3      	sub	sp, #396	@ 0x18c
9001698e:	461c      	mov	r4, r3
90016990:	4683      	mov	fp, r0
90016992:	4688      	mov	r8, r1
90016994:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90016996:	2b00      	cmp	r3, #0
90016998:	f000 8112 	beq.w	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001699c:	6823      	ldr	r3, [r4, #0]
9001699e:	2b00      	cmp	r3, #0
900169a0:	f000 810e 	beq.w	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900169a4:	7ba3      	ldrb	r3, [r4, #14]
900169a6:	2b00      	cmp	r3, #0
900169a8:	f000 810a 	beq.w	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900169ac:	ad0a      	add	r5, sp, #40	@ 0x28
900169ae:	6810      	ldr	r0, [r2, #0]
900169b0:	6851      	ldr	r1, [r2, #4]
900169b2:	462b      	mov	r3, r5
900169b4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900169b8:	c303      	stmia	r3!, {r0, r1}
900169ba:	2100      	movs	r1, #0
900169bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900169c0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900169c4:	4628      	mov	r0, r5
900169c6:	910c      	str	r1, [sp, #48]	@ 0x30
900169c8:	a90c      	add	r1, sp, #48	@ 0x30
900169ca:	79a2      	ldrb	r2, [r4, #6]
900169cc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900169d0:	f7ff fced 	bl	900163ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900169d4:	a90c      	add	r1, sp, #48	@ 0x30
900169d6:	79a2      	ldrb	r2, [r4, #6]
900169d8:	4608      	mov	r0, r1
900169da:	f7ff fce8 	bl	900163ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900169de:	a817      	add	r0, sp, #92	@ 0x5c
900169e0:	f002 fceb 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900169e4:	6820      	ldr	r0, [r4, #0]
900169e6:	6803      	ldr	r3, [r0, #0]
900169e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900169ea:	4798      	blx	r3
900169ec:	4606      	mov	r6, r0
900169ee:	6820      	ldr	r0, [r4, #0]
900169f0:	6803      	ldr	r3, [r0, #0]
900169f2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900169f4:	4798      	blx	r3
900169f6:	4633      	mov	r3, r6
900169f8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
900169fa:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
900169fc:	9000      	str	r0, [sp, #0]
900169fe:	a817      	add	r0, sp, #92	@ 0x5c
90016a00:	f002 fd36 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016a04:	6820      	ldr	r0, [r4, #0]
90016a06:	f894 a004 	ldrb.w	sl, [r4, #4]
90016a0a:	6803      	ldr	r3, [r0, #0]
90016a0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016a0e:	4798      	blx	r3
90016a10:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016a14:	6823      	ldr	r3, [r4, #0]
90016a16:	4607      	mov	r7, r0
90016a18:	4406      	add	r6, r0
90016a1a:	a830      	add	r0, sp, #192	@ 0xc0
90016a1c:	f893 9009 	ldrb.w	r9, [r3, #9]
90016a20:	f002 fccb 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
90016a24:	7c23      	ldrb	r3, [r4, #16]
90016a26:	b17b      	cbz	r3, 90016a48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90016a28:	6820      	ldr	r0, [r4, #0]
90016a2a:	6803      	ldr	r3, [r0, #0]
90016a2c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016a2e:	4798      	blx	r3
90016a30:	9009      	str	r0, [sp, #36]	@ 0x24
90016a32:	6820      	ldr	r0, [r4, #0]
90016a34:	6802      	ldr	r2, [r0, #0]
90016a36:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90016a38:	4790      	blx	r2
90016a3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016a3c:	9000      	str	r0, [sp, #0]
90016a3e:	a830      	add	r0, sp, #192	@ 0xc0
90016a40:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90016a42:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016a44:	f002 fd14 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016a48:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90016a4c:	a80e      	add	r0, sp, #56	@ 0x38
90016a4e:	7be2      	ldrb	r2, [r4, #15]
90016a50:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016a54:	1a8a      	subs	r2, r1, r2
90016a56:	7c21      	ldrb	r1, [r4, #16]
90016a58:	9103      	str	r1, [sp, #12]
90016a5a:	b292      	uxth	r2, r2
90016a5c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90016a60:	9102      	str	r1, [sp, #8]
90016a62:	6821      	ldr	r1, [r4, #0]
90016a64:	9101      	str	r1, [sp, #4]
90016a66:	7961      	ldrb	r1, [r4, #5]
90016a68:	9100      	str	r1, [sp, #0]
90016a6a:	a930      	add	r1, sp, #192	@ 0xc0
90016a6c:	f7ff fc20 	bl	900162b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90016a70:	2e00      	cmp	r6, #0
90016a72:	dc5b      	bgt.n	90016b2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90016a74:	af17      	add	r7, sp, #92	@ 0x5c
90016a76:	f04f 0900 	mov.w	r9, #0
90016a7a:	7c23      	ldrb	r3, [r4, #16]
90016a7c:	2b00      	cmp	r3, #0
90016a7e:	f000 80b1 	beq.w	90016be4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90016a82:	a80e      	add	r0, sp, #56	@ 0x38
90016a84:	f7ff fe4d 	bl	90016722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016a88:	f1ba 0f00 	cmp.w	sl, #0
90016a8c:	f000 80a5 	beq.w	90016bda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016a90:	7c23      	ldrb	r3, [r4, #16]
90016a92:	2264      	movs	r2, #100	@ 0x64
90016a94:	4639      	mov	r1, r7
90016a96:	a849      	add	r0, sp, #292	@ 0x124
90016a98:	9309      	str	r3, [sp, #36]	@ 0x24
90016a9a:	f013 ff76 	bl	9002a98a <memcpy>
90016a9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016aa0:	2b00      	cmp	r3, #0
90016aa2:	f000 80a7 	beq.w	90016bf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90016aa6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90016aaa:	7922      	ldrb	r2, [r4, #4]
90016aac:	2a01      	cmp	r2, #1
90016aae:	f040 808a 	bne.w	90016bc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90016ab2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90016ab6:	1ac0      	subs	r0, r0, r3
90016ab8:	2302      	movs	r3, #2
90016aba:	fb90 f0f3 	sdiv	r0, r0, r3
90016abe:	b200      	sxth	r0, r0
90016ac0:	7c23      	ldrb	r3, [r4, #16]
90016ac2:	2b00      	cmp	r3, #0
90016ac4:	f000 808b 	beq.w	90016bde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90016ac8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90016acc:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90016ad0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016ad4:	e9cd 2105 	strd	r2, r1, [sp, #20]
90016ad8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90016adc:	2100      	movs	r1, #0
90016ade:	4410      	add	r0, r2
90016ae0:	4642      	mov	r2, r8
90016ae2:	b200      	sxth	r0, r0
90016ae4:	e9cd 9703 	strd	r9, r7, [sp, #12]
90016ae8:	9000      	str	r0, [sp, #0]
90016aea:	4658      	mov	r0, fp
90016aec:	e9cd 5401 	strd	r5, r4, [sp, #4]
90016af0:	f7ff fc8e 	bl	90016410 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016af4:	2800      	cmp	r0, #0
90016af6:	d163      	bne.n	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016af8:	b2b2      	uxth	r2, r6
90016afa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016afe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016b02:	4413      	add	r3, r2
90016b04:	1a8a      	subs	r2, r1, r2
90016b06:	b21b      	sxth	r3, r3
90016b08:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016b0c:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90016b10:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016b14:	2a00      	cmp	r2, #0
90016b16:	d153      	bne.n	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016b18:	6822      	ldr	r2, [r4, #0]
90016b1a:	8869      	ldrh	r1, [r5, #2]
90016b1c:	7a12      	ldrb	r2, [r2, #8]
90016b1e:	1a9b      	subs	r3, r3, r2
90016b20:	88ea      	ldrh	r2, [r5, #6]
90016b22:	440a      	add	r2, r1
90016b24:	b212      	sxth	r2, r2
90016b26:	4293      	cmp	r3, r2
90016b28:	dda7      	ble.n	90016a7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90016b2a:	e049      	b.n	90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016b2c:	7c23      	ldrb	r3, [r4, #16]
90016b2e:	444f      	add	r7, r9
90016b30:	b1c3      	cbz	r3, 90016b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90016b32:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90016b36:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016b3a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016b3e:	443b      	add	r3, r7
90016b40:	4293      	cmp	r3, r2
90016b42:	da97      	bge.n	90016a74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016b44:	a80e      	add	r0, sp, #56	@ 0x38
90016b46:	f7ff fdec 	bl	90016722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016b4a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90016b4e:	3b01      	subs	r3, #1
90016b50:	b29b      	uxth	r3, r3
90016b52:	454b      	cmp	r3, r9
90016b54:	9309      	str	r3, [sp, #36]	@ 0x24
90016b56:	d021      	beq.n	90016b9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90016b58:	7961      	ldrb	r1, [r4, #5]
90016b5a:	a817      	add	r0, sp, #92	@ 0x5c
90016b5c:	f7f0 f91c 	bl	90006d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016b60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016b62:	e7f4      	b.n	90016b4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90016b64:	fa1f f986 	uxth.w	r9, r6
90016b68:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016b6c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016b70:	443b      	add	r3, r7
90016b72:	4293      	cmp	r3, r2
90016b74:	f6bf af7e 	bge.w	90016a74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016b78:	a817      	add	r0, sp, #92	@ 0x5c
90016b7a:	f003 f879 	bl	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016b7e:	b1f8      	cbz	r0, 90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016b80:	280a      	cmp	r0, #10
90016b82:	d1f1      	bne.n	90016b68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016b84:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016b88:	444b      	add	r3, r9
90016b8a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016b8e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016b92:	eba3 0309 	sub.w	r3, r3, r9
90016b96:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016b9a:	e7e5      	b.n	90016b68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016b9c:	b2b3      	uxth	r3, r6
90016b9e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90016ba2:	441a      	add	r2, r3
90016ba4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90016ba8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90016bac:	1ad3      	subs	r3, r2, r3
90016bae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016bb2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90016bb6:	b11b      	cbz	r3, 90016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016bb8:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90016bbc:	2b00      	cmp	r3, #0
90016bbe:	d0ba      	beq.n	90016b36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90016bc0:	b063      	add	sp, #396	@ 0x18c
90016bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016bc6:	2a02      	cmp	r2, #2
90016bc8:	d105      	bne.n	90016bd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90016bca:	7be2      	ldrb	r2, [r4, #15]
90016bcc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016bd0:	1a80      	subs	r0, r0, r2
90016bd2:	1ac0      	subs	r0, r0, r3
90016bd4:	e773      	b.n	90016abe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90016bd6:	2000      	movs	r0, #0
90016bd8:	e772      	b.n	90016ac0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016bda:	7be0      	ldrb	r0, [r4, #15]
90016bdc:	e770      	b.n	90016ac0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016bde:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016be2:	e773      	b.n	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016be4:	f1ba 0f00 	cmp.w	sl, #0
90016be8:	d0f7      	beq.n	90016bda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016bea:	2264      	movs	r2, #100	@ 0x64
90016bec:	4639      	mov	r1, r7
90016bee:	a849      	add	r0, sp, #292	@ 0x124
90016bf0:	f013 fecb 	bl	9002a98a <memcpy>
90016bf4:	2300      	movs	r3, #0
90016bf6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016bfa:	6821      	ldr	r1, [r4, #0]
90016bfc:	a849      	add	r0, sp, #292	@ 0x124
90016bfe:	f7ff fb9a 	bl	90016336 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016c02:	b203      	sxth	r3, r0
90016c04:	e751      	b.n	90016aaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90016c06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90016c06:	2b03      	cmp	r3, #3
90016c08:	d818      	bhi.n	90016c3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90016c0a:	e8df f003 	tbb	[pc, r3]
90016c0e:	0602      	.short	0x0602
90016c10:	130d      	.short	0x130d
90016c12:	f9b0 2000 	ldrsh.w	r2, [r0]
90016c16:	1850      	adds	r0, r2, r1
90016c18:	4770      	bx	lr
90016c1a:	8803      	ldrh	r3, [r0, #0]
90016c1c:	8880      	ldrh	r0, [r0, #4]
90016c1e:	4418      	add	r0, r3
90016c20:	b200      	sxth	r0, r0
90016c22:	1a80      	subs	r0, r0, r2
90016c24:	3801      	subs	r0, #1
90016c26:	4770      	bx	lr
90016c28:	8803      	ldrh	r3, [r0, #0]
90016c2a:	8880      	ldrh	r0, [r0, #4]
90016c2c:	4418      	add	r0, r3
90016c2e:	b200      	sxth	r0, r0
90016c30:	1a40      	subs	r0, r0, r1
90016c32:	e7f7      	b.n	90016c24 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016c34:	f9b0 0000 	ldrsh.w	r0, [r0]
90016c38:	4410      	add	r0, r2
90016c3a:	4770      	bx	lr
90016c3c:	2000      	movs	r0, #0
90016c3e:	4770      	bx	lr

90016c40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90016c40:	2b03      	cmp	r3, #3
90016c42:	d817      	bhi.n	90016c74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016c44:	e8df f003 	tbb	[pc, r3]
90016c48:	10090602 	.word	0x10090602
90016c4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016c50:	1850      	adds	r0, r2, r1
90016c52:	4770      	bx	lr
90016c54:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016c58:	e7fa      	b.n	90016c50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90016c5a:	8843      	ldrh	r3, [r0, #2]
90016c5c:	88c0      	ldrh	r0, [r0, #6]
90016c5e:	4418      	add	r0, r3
90016c60:	b200      	sxth	r0, r0
90016c62:	1a80      	subs	r0, r0, r2
90016c64:	3801      	subs	r0, #1
90016c66:	4770      	bx	lr
90016c68:	8843      	ldrh	r3, [r0, #2]
90016c6a:	88c0      	ldrh	r0, [r0, #6]
90016c6c:	4418      	add	r0, r3
90016c6e:	b200      	sxth	r0, r0
90016c70:	1a40      	subs	r0, r0, r1
90016c72:	e7f7      	b.n	90016c64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90016c74:	2000      	movs	r0, #0
90016c76:	4770      	bx	lr

90016c78 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90016c78:	4b01      	ldr	r3, [pc, #4]	@ (90016c80 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90016c7a:	2200      	movs	r2, #0
90016c7c:	601a      	str	r2, [r3, #0]
90016c7e:	4770      	bx	lr
90016c80:	240234cc 	.word	0x240234cc

90016c84 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90016c84:	4603      	mov	r3, r0
90016c86:	b1c8      	cbz	r0, 90016cbc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90016c88:	0c02      	lsrs	r2, r0, #16
90016c8a:	0412      	lsls	r2, r2, #16
90016c8c:	b9a2      	cbnz	r2, 90016cb8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90016c8e:	0403      	lsls	r3, r0, #16
90016c90:	2010      	movs	r0, #16
90016c92:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90016c96:	bf04      	itt	eq
90016c98:	021b      	lsleq	r3, r3, #8
90016c9a:	3008      	addeq	r0, #8
90016c9c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90016ca0:	bf04      	itt	eq
90016ca2:	011b      	lsleq	r3, r3, #4
90016ca4:	3004      	addeq	r0, #4
90016ca6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90016caa:	bf04      	itt	eq
90016cac:	009b      	lsleq	r3, r3, #2
90016cae:	3002      	addeq	r0, #2
90016cb0:	2b00      	cmp	r3, #0
90016cb2:	db04      	blt.n	90016cbe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90016cb4:	3001      	adds	r0, #1
90016cb6:	4770      	bx	lr
90016cb8:	2000      	movs	r0, #0
90016cba:	e7ea      	b.n	90016c92 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90016cbc:	2020      	movs	r0, #32
90016cbe:	4770      	bx	lr

90016cc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90016cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016cc4:	b087      	sub	sp, #28
90016cc6:	460d      	mov	r5, r1
90016cc8:	4616      	mov	r6, r2
90016cca:	4698      	mov	r8, r3
90016ccc:	4601      	mov	r1, r0
90016cce:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90016cd2:	b120      	cbz	r0, 90016cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016cd4:	b11a      	cbz	r2, 90016cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016cd6:	2d1f      	cmp	r5, #31
90016cd8:	d801      	bhi.n	90016cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016cda:	2b1f      	cmp	r3, #31
90016cdc:	d904      	bls.n	90016ce8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90016cde:	2000      	movs	r0, #0
90016ce0:	6038      	str	r0, [r7, #0]
90016ce2:	b007      	add	sp, #28
90016ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ce8:	b97d      	cbnz	r5, 90016d0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90016cea:	b143      	cbz	r3, 90016cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016cec:	4602      	mov	r2, r0
90016cee:	462b      	mov	r3, r5
90016cf0:	4641      	mov	r1, r8
90016cf2:	4630      	mov	r0, r6
90016cf4:	e9cd 4700 	strd	r4, r7, [sp]
90016cf8:	f7ff ffe2 	bl	90016cc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016cfc:	e7f1      	b.n	90016ce2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016cfe:	f04f 33ff 	mov.w	r3, #4294967295
90016d02:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90016d06:	603b      	str	r3, [r7, #0]
90016d08:	e7eb      	b.n	90016ce2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016d0a:	fa32 fa05 	lsrs.w	sl, r2, r5
90016d0e:	d106      	bne.n	90016d1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016d10:	4346      	muls	r6, r0
90016d12:	fbb6 f0f4 	udiv	r0, r6, r4
90016d16:	fb04 6610 	mls	r6, r4, r0, r6
90016d1a:	603e      	str	r6, [r7, #0]
90016d1c:	e7e1      	b.n	90016ce2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016d1e:	2201      	movs	r2, #1
90016d20:	fa00 fb05 	lsl.w	fp, r0, r5
90016d24:	40aa      	lsls	r2, r5
90016d26:	fbbb f9f4 	udiv	r9, fp, r4
90016d2a:	3a01      	subs	r2, #1
90016d2c:	fb0a f309 	mul.w	r3, sl, r9
90016d30:	fb04 b919 	mls	r9, r4, r9, fp
90016d34:	4016      	ands	r6, r2
90016d36:	9303      	str	r3, [sp, #12]
90016d38:	4630      	mov	r0, r6
90016d3a:	f7ff ffa3 	bl	90016c84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016d3e:	462b      	mov	r3, r5
90016d40:	460a      	mov	r2, r1
90016d42:	4601      	mov	r1, r0
90016d44:	4630      	mov	r0, r6
90016d46:	e9cd 4700 	strd	r4, r7, [sp]
90016d4a:	f7ff ffb9 	bl	90016cc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016d4e:	4606      	mov	r6, r0
90016d50:	4648      	mov	r0, r9
90016d52:	eb05 0108 	add.w	r1, r5, r8
90016d56:	f7ff ff95 	bl	90016c84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016d5a:	ab05      	add	r3, sp, #20
90016d5c:	464a      	mov	r2, r9
90016d5e:	e9cd 4300 	strd	r4, r3, [sp]
90016d62:	4603      	mov	r3, r0
90016d64:	4650      	mov	r0, sl
90016d66:	f7ff ffab 	bl	90016cc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016d6a:	6839      	ldr	r1, [r7, #0]
90016d6c:	9a05      	ldr	r2, [sp, #20]
90016d6e:	9b03      	ldr	r3, [sp, #12]
90016d70:	4411      	add	r1, r2
90016d72:	fbb1 f2f4 	udiv	r2, r1, r4
90016d76:	18d3      	adds	r3, r2, r3
90016d78:	fb04 1412 	mls	r4, r4, r2, r1
90016d7c:	441e      	add	r6, r3
90016d7e:	603c      	str	r4, [r7, #0]
90016d80:	4430      	add	r0, r6
90016d82:	e7ae      	b.n	90016ce2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90016d84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90016d84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016d88:	b085      	sub	sp, #20
90016d8a:	f1b0 0900 	subs.w	r9, r0, #0
90016d8e:	461d      	mov	r5, r3
90016d90:	4617      	mov	r7, r2
90016d92:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90016d94:	bfbb      	ittet	lt
90016d96:	f1c9 0900 	rsblt	r9, r9, #0
90016d9a:	f04f 36ff 	movlt.w	r6, #4294967295
90016d9e:	2601      	movge	r6, #1
90016da0:	6823      	ldrlt	r3, [r4, #0]
90016da2:	bfbc      	itt	lt
90016da4:	425b      	neglt	r3, r3
90016da6:	6023      	strlt	r3, [r4, #0]
90016da8:	2a00      	cmp	r2, #0
90016daa:	da04      	bge.n	90016db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90016dac:	6823      	ldr	r3, [r4, #0]
90016dae:	4257      	negs	r7, r2
90016db0:	4276      	negs	r6, r6
90016db2:	425b      	negs	r3, r3
90016db4:	6023      	str	r3, [r4, #0]
90016db6:	2d00      	cmp	r5, #0
90016db8:	4638      	mov	r0, r7
90016dba:	bfba      	itte	lt
90016dbc:	426d      	neglt	r5, r5
90016dbe:	f04f 38ff 	movlt.w	r8, #4294967295
90016dc2:	f04f 0801 	movge.w	r8, #1
90016dc6:	f7ff ff5d 	bl	90016c84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016dca:	ab03      	add	r3, sp, #12
90016dcc:	463a      	mov	r2, r7
90016dce:	e9cd 5300 	strd	r5, r3, [sp]
90016dd2:	4603      	mov	r3, r0
90016dd4:	4648      	mov	r0, r9
90016dd6:	f7ff ff73 	bl	90016cc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016dda:	6823      	ldr	r3, [r4, #0]
90016ddc:	9a03      	ldr	r2, [sp, #12]
90016dde:	4546      	cmp	r6, r8
90016de0:	441a      	add	r2, r3
90016de2:	fb92 f3f5 	sdiv	r3, r2, r5
90016de6:	4418      	add	r0, r3
90016de8:	fb05 2313 	mls	r3, r5, r3, r2
90016dec:	bf18      	it	ne
90016dee:	4240      	negne	r0, r0
90016df0:	1c72      	adds	r2, r6, #1
90016df2:	6023      	str	r3, [r4, #0]
90016df4:	d105      	bne.n	90016e02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90016df6:	2b00      	cmp	r3, #0
90016df8:	f1c3 0200 	rsb	r2, r3, #0
90016dfc:	db0b      	blt.n	90016e16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90016dfe:	6022      	str	r2, [r4, #0]
90016e00:	e006      	b.n	90016e10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016e02:	2e01      	cmp	r6, #1
90016e04:	d104      	bne.n	90016e10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016e06:	2b00      	cmp	r3, #0
90016e08:	da02      	bge.n	90016e10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016e0a:	442b      	add	r3, r5
90016e0c:	3801      	subs	r0, #1
90016e0e:	6023      	str	r3, [r4, #0]
90016e10:	b005      	add	sp, #20
90016e12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016e16:	3801      	subs	r0, #1
90016e18:	1b52      	subs	r2, r2, r5
90016e1a:	e7f0      	b.n	90016dfe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90016e1c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90016e1c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90016e20:	4c1c      	ldr	r4, [pc, #112]	@ (90016e94 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90016e22:	4605      	mov	r5, r0
90016e24:	6807      	ldr	r7, [r0, #0]
90016e26:	69a3      	ldr	r3, [r4, #24]
90016e28:	b92b      	cbnz	r3, 90016e36 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90016e2a:	6840      	ldr	r0, [r0, #4]
90016e2c:	e9c5 7000 	strd	r7, r0, [r5]
90016e30:	b004      	add	sp, #16
90016e32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016e36:	f04f 0802 	mov.w	r8, #2
90016e3a:	68a2      	ldr	r2, [r4, #8]
90016e3c:	ae04      	add	r6, sp, #16
90016e3e:	6820      	ldr	r0, [r4, #0]
90016e40:	fb93 f1f8 	sdiv	r1, r3, r8
90016e44:	440a      	add	r2, r1
90016e46:	69e1      	ldr	r1, [r4, #28]
90016e48:	f846 2d04 	str.w	r2, [r6, #-4]!
90016e4c:	463a      	mov	r2, r7
90016e4e:	9600      	str	r6, [sp, #0]
90016e50:	f7ff ff98 	bl	90016d84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016e54:	69a3      	ldr	r3, [r4, #24]
90016e56:	4607      	mov	r7, r0
90016e58:	686a      	ldr	r2, [r5, #4]
90016e5a:	6a21      	ldr	r1, [r4, #32]
90016e5c:	9600      	str	r6, [sp, #0]
90016e5e:	6860      	ldr	r0, [r4, #4]
90016e60:	f7ff ff90 	bl	90016d84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016e64:	69a3      	ldr	r3, [r4, #24]
90016e66:	6962      	ldr	r2, [r4, #20]
90016e68:	4407      	add	r7, r0
90016e6a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90016e6c:	9600      	str	r6, [sp, #0]
90016e6e:	68e0      	ldr	r0, [r4, #12]
90016e70:	fb93 f8f8 	sdiv	r8, r3, r8
90016e74:	4442      	add	r2, r8
90016e76:	9203      	str	r2, [sp, #12]
90016e78:	682a      	ldr	r2, [r5, #0]
90016e7a:	f7ff ff83 	bl	90016d84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016e7e:	4680      	mov	r8, r0
90016e80:	9600      	str	r6, [sp, #0]
90016e82:	69a3      	ldr	r3, [r4, #24]
90016e84:	686a      	ldr	r2, [r5, #4]
90016e86:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90016e88:	6920      	ldr	r0, [r4, #16]
90016e8a:	f7ff ff7b 	bl	90016d84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016e8e:	4440      	add	r0, r8
90016e90:	e7cc      	b.n	90016e2c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90016e92:	bf00      	nop
90016e94:	240234d0 	.word	0x240234d0

90016e98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90016e98:	4b07      	ldr	r3, [pc, #28]	@ (90016eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90016e9a:	781b      	ldrb	r3, [r3, #0]
90016e9c:	2b01      	cmp	r3, #1
90016e9e:	d109      	bne.n	90016eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90016ea0:	f9b1 3000 	ldrsh.w	r3, [r1]
90016ea4:	f9b0 2000 	ldrsh.w	r2, [r0]
90016ea8:	8003      	strh	r3, [r0, #0]
90016eaa:	4b04      	ldr	r3, [pc, #16]	@ (90016ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90016eac:	881b      	ldrh	r3, [r3, #0]
90016eae:	3b01      	subs	r3, #1
90016eb0:	1a9b      	subs	r3, r3, r2
90016eb2:	800b      	strh	r3, [r1, #0]
90016eb4:	4770      	bx	lr
90016eb6:	bf00      	nop
90016eb8:	240234b4 	.word	0x240234b4
90016ebc:	240234b0 	.word	0x240234b0

90016ec0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90016ec0:	4b07      	ldr	r3, [pc, #28]	@ (90016ee0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90016ec2:	b510      	push	{r4, lr}
90016ec4:	781b      	ldrb	r3, [r3, #0]
90016ec6:	2b01      	cmp	r3, #1
90016ec8:	d108      	bne.n	90016edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90016eca:	4b06      	ldr	r3, [pc, #24]	@ (90016ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90016ecc:	880c      	ldrh	r4, [r1, #0]
90016ece:	881b      	ldrh	r3, [r3, #0]
90016ed0:	f9b0 2000 	ldrsh.w	r2, [r0]
90016ed4:	3b01      	subs	r3, #1
90016ed6:	1b1b      	subs	r3, r3, r4
90016ed8:	8003      	strh	r3, [r0, #0]
90016eda:	800a      	strh	r2, [r1, #0]
90016edc:	bd10      	pop	{r4, pc}
90016ede:	bf00      	nop
90016ee0:	240234b4 	.word	0x240234b4
90016ee4:	240234b0 	.word	0x240234b0

90016ee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016ee8:	4b0a      	ldr	r3, [pc, #40]	@ (90016f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016eea:	b510      	push	{r4, lr}
90016eec:	781b      	ldrb	r3, [r3, #0]
90016eee:	2b01      	cmp	r3, #1
90016ef0:	d10e      	bne.n	90016f10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90016ef2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016ef6:	8843      	ldrh	r3, [r0, #2]
90016ef8:	f9b0 4000 	ldrsh.w	r4, [r0]
90016efc:	18ca      	adds	r2, r1, r3
90016efe:	4b06      	ldr	r3, [pc, #24]	@ (90016f18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90016f00:	8044      	strh	r4, [r0, #2]
90016f02:	881b      	ldrh	r3, [r3, #0]
90016f04:	1a9b      	subs	r3, r3, r2
90016f06:	8003      	strh	r3, [r0, #0]
90016f08:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016f0c:	8081      	strh	r1, [r0, #4]
90016f0e:	80c3      	strh	r3, [r0, #6]
90016f10:	bd10      	pop	{r4, pc}
90016f12:	bf00      	nop
90016f14:	240234b4 	.word	0x240234b4
90016f18:	240234b0 	.word	0x240234b0

90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016f1c:	4b08      	ldr	r3, [pc, #32]	@ (90016f40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90016f1e:	781b      	ldrb	r3, [r3, #0]
90016f20:	2b01      	cmp	r3, #1
90016f22:	d10c      	bne.n	90016f3e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016f24:	8803      	ldrh	r3, [r0, #0]
90016f26:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90016f2a:	8842      	ldrh	r2, [r0, #2]
90016f2c:	8002      	strh	r2, [r0, #0]
90016f2e:	185a      	adds	r2, r3, r1
90016f30:	4b04      	ldr	r3, [pc, #16]	@ (90016f44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90016f32:	881b      	ldrh	r3, [r3, #0]
90016f34:	1a9b      	subs	r3, r3, r2
90016f36:	8043      	strh	r3, [r0, #2]
90016f38:	88c3      	ldrh	r3, [r0, #6]
90016f3a:	80c1      	strh	r1, [r0, #6]
90016f3c:	8083      	strh	r3, [r0, #4]
90016f3e:	4770      	bx	lr
90016f40:	240234b4 	.word	0x240234b4
90016f44:	240234b0 	.word	0x240234b0

90016f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90016f48:	4b07      	ldr	r3, [pc, #28]	@ (90016f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90016f4a:	b510      	push	{r4, lr}
90016f4c:	781b      	ldrb	r3, [r3, #0]
90016f4e:	2b01      	cmp	r3, #1
90016f50:	d108      	bne.n	90016f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90016f52:	f9b1 3000 	ldrsh.w	r3, [r1]
90016f56:	f9b0 4000 	ldrsh.w	r4, [r0]
90016f5a:	8003      	strh	r3, [r0, #0]
90016f5c:	8893      	ldrh	r3, [r2, #4]
90016f5e:	3b01      	subs	r3, #1
90016f60:	1b1b      	subs	r3, r3, r4
90016f62:	800b      	strh	r3, [r1, #0]
90016f64:	bd10      	pop	{r4, pc}
90016f66:	bf00      	nop
90016f68:	240234b4 	.word	0x240234b4

90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90016f6c:	4b0a      	ldr	r3, [pc, #40]	@ (90016f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90016f6e:	460a      	mov	r2, r1
90016f70:	b510      	push	{r4, lr}
90016f72:	781b      	ldrb	r3, [r3, #0]
90016f74:	2b01      	cmp	r3, #1
90016f76:	d10d      	bne.n	90016f94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90016f78:	8881      	ldrh	r1, [r0, #4]
90016f7a:	8803      	ldrh	r3, [r0, #0]
90016f7c:	440b      	add	r3, r1
90016f7e:	4601      	mov	r1, r0
90016f80:	3b01      	subs	r3, #1
90016f82:	f821 3b02 	strh.w	r3, [r1], #2
90016f86:	f7ff ffdf 	bl	90016f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90016f8a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016f8e:	88c2      	ldrh	r2, [r0, #6]
90016f90:	80c3      	strh	r3, [r0, #6]
90016f92:	8082      	strh	r2, [r0, #4]
90016f94:	bd10      	pop	{r4, pc}
90016f96:	bf00      	nop
90016f98:	240234b4 	.word	0x240234b4

90016f9c <_ZN8touchgfx11Application19changeToStartScreenEv>:
90016f9c:	4770      	bx	lr
	...

90016fa0 <_ZN8touchgfx11Application13requestRedrawEv>:
90016fa0:	4b06      	ldr	r3, [pc, #24]	@ (90016fbc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90016fa2:	2100      	movs	r1, #0
90016fa4:	f9b3 2000 	ldrsh.w	r2, [r3]
90016fa8:	4b05      	ldr	r3, [pc, #20]	@ (90016fc0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90016faa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90016fae:	f9b3 3000 	ldrsh.w	r3, [r3]
90016fb2:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90016fb6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90016fba:	4770      	bx	lr
90016fbc:	240234b0 	.word	0x240234b0
90016fc0:	240234b2 	.word	0x240234b2

90016fc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016fc4:	4b03      	ldr	r3, [pc, #12]	@ (90016fd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90016fc6:	6818      	ldr	r0, [r3, #0]
90016fc8:	b110      	cbz	r0, 90016fd0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90016fca:	6803      	ldr	r3, [r0, #0]
90016fcc:	699b      	ldr	r3, [r3, #24]
90016fce:	4718      	bx	r3
90016fd0:	4770      	bx	lr
90016fd2:	bf00      	nop
90016fd4:	24023500 	.word	0x24023500

90016fd8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90016fd8:	4770      	bx	lr
	...

90016fdc <_ZN8touchgfx11Application4drawEv>:
90016fdc:	4b09      	ldr	r3, [pc, #36]	@ (90017004 <_ZN8touchgfx11Application4drawEv+0x28>)
90016fde:	b507      	push	{r0, r1, r2, lr}
90016fe0:	f9b3 2000 	ldrsh.w	r2, [r3]
90016fe4:	2100      	movs	r1, #0
90016fe6:	4b08      	ldr	r3, [pc, #32]	@ (90017008 <_ZN8touchgfx11Application4drawEv+0x2c>)
90016fe8:	9100      	str	r1, [sp, #0]
90016fea:	4669      	mov	r1, sp
90016fec:	f9b3 3000 	ldrsh.w	r3, [r3]
90016ff0:	f8ad 2004 	strh.w	r2, [sp, #4]
90016ff4:	f8ad 3006 	strh.w	r3, [sp, #6]
90016ff8:	6803      	ldr	r3, [r0, #0]
90016ffa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016ffc:	4798      	blx	r3
90016ffe:	b003      	add	sp, #12
90017000:	f85d fb04 	ldr.w	pc, [sp], #4
90017004:	240234b0 	.word	0x240234b0
90017008:	240234b2 	.word	0x240234b2

9001700c <_ZN8touchgfx11Application10invalidateEv>:
9001700c:	4b09      	ldr	r3, [pc, #36]	@ (90017034 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001700e:	b082      	sub	sp, #8
90017010:	2100      	movs	r1, #0
90017012:	f9b3 2000 	ldrsh.w	r2, [r3]
90017016:	4b08      	ldr	r3, [pc, #32]	@ (90017038 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90017018:	f8ad 2004 	strh.w	r2, [sp, #4]
9001701c:	aa02      	add	r2, sp, #8
9001701e:	f9b3 3000 	ldrsh.w	r3, [r3]
90017022:	9100      	str	r1, [sp, #0]
90017024:	f8ad 3006 	strh.w	r3, [sp, #6]
90017028:	6803      	ldr	r3, [r0, #0]
9001702a:	e912 0006 	ldmdb	r2, {r1, r2}
9001702e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017030:	b002      	add	sp, #8
90017032:	4718      	bx	r3
90017034:	240234b0 	.word	0x240234b0
90017038:	240234b2 	.word	0x240234b2

9001703c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
9001703c:	4b03      	ldr	r3, [pc, #12]	@ (9001704c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001703e:	6818      	ldr	r0, [r3, #0]
90017040:	b110      	cbz	r0, 90017048 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90017042:	6803      	ldr	r3, [r0, #0]
90017044:	69db      	ldr	r3, [r3, #28]
90017046:	4718      	bx	r3
90017048:	4770      	bx	lr
9001704a:	bf00      	nop
9001704c:	24023500 	.word	0x24023500

90017050 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90017050:	4b03      	ldr	r3, [pc, #12]	@ (90017060 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90017052:	6818      	ldr	r0, [r3, #0]
90017054:	b110      	cbz	r0, 9001705c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90017056:	6803      	ldr	r3, [r0, #0]
90017058:	6a1b      	ldr	r3, [r3, #32]
9001705a:	4718      	bx	r3
9001705c:	4770      	bx	lr
9001705e:	bf00      	nop
90017060:	24023500 	.word	0x24023500

90017064 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90017064:	2300      	movs	r3, #0
90017066:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001706a:	4770      	bx	lr

9001706c <_ZN8touchgfx11Application14handleKeyEventEh>:
9001706c:	4b03      	ldr	r3, [pc, #12]	@ (9001707c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001706e:	6818      	ldr	r0, [r3, #0]
90017070:	b110      	cbz	r0, 90017078 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90017072:	6803      	ldr	r3, [r0, #0]
90017074:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017076:	4718      	bx	r3
90017078:	4770      	bx	lr
9001707a:	bf00      	nop
9001707c:	24023500 	.word	0x24023500

90017080 <_ZN8touchgfx11ApplicationD1Ev>:
90017080:	4770      	bx	lr

90017082 <_ZN8touchgfx11ApplicationD0Ev>:
90017082:	b510      	push	{r4, lr}
90017084:	4604      	mov	r4, r0
90017086:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001708a:	f012 fd88 	bl	90029b9e <_ZdlPvj>
9001708e:	4620      	mov	r0, r4
90017090:	bd10      	pop	{r4, pc}

90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90017092:	b510      	push	{r4, lr}
90017094:	f9b1 4000 	ldrsh.w	r4, [r1]
90017098:	888a      	ldrh	r2, [r1, #4]
9001709a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001709e:	4422      	add	r2, r4
900170a0:	b212      	sxth	r2, r2
900170a2:	4293      	cmp	r3, r2
900170a4:	da15      	bge.n	900170d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900170a6:	8882      	ldrh	r2, [r0, #4]
900170a8:	4413      	add	r3, r2
900170aa:	b21b      	sxth	r3, r3
900170ac:	429c      	cmp	r4, r3
900170ae:	da10      	bge.n	900170d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900170b0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900170b4:	88c9      	ldrh	r1, [r1, #6]
900170b6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900170ba:	4419      	add	r1, r3
900170bc:	b209      	sxth	r1, r1
900170be:	428a      	cmp	r2, r1
900170c0:	da07      	bge.n	900170d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900170c2:	88c0      	ldrh	r0, [r0, #6]
900170c4:	4410      	add	r0, r2
900170c6:	b200      	sxth	r0, r0
900170c8:	4283      	cmp	r3, r0
900170ca:	bfac      	ite	ge
900170cc:	2000      	movge	r0, #0
900170ce:	2001      	movlt	r0, #1
900170d0:	bd10      	pop	{r4, pc}
900170d2:	2000      	movs	r0, #0
900170d4:	e7fc      	b.n	900170d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

900170d6 <_ZN8touchgfx4Rect10restrictToEss>:
900170d6:	f9b0 3000 	ldrsh.w	r3, [r0]
900170da:	2b00      	cmp	r3, #0
900170dc:	b510      	push	{r4, lr}
900170de:	da04      	bge.n	900170ea <_ZN8touchgfx4Rect10restrictToEss+0x14>
900170e0:	8884      	ldrh	r4, [r0, #4]
900170e2:	4423      	add	r3, r4
900170e4:	8083      	strh	r3, [r0, #4]
900170e6:	2300      	movs	r3, #0
900170e8:	8003      	strh	r3, [r0, #0]
900170ea:	f9b0 4000 	ldrsh.w	r4, [r0]
900170ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900170f2:	1b09      	subs	r1, r1, r4
900170f4:	428b      	cmp	r3, r1
900170f6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900170fa:	bfc8      	it	gt
900170fc:	8081      	strhgt	r1, [r0, #4]
900170fe:	2b00      	cmp	r3, #0
90017100:	da04      	bge.n	9001710c <_ZN8touchgfx4Rect10restrictToEss+0x36>
90017102:	88c1      	ldrh	r1, [r0, #6]
90017104:	440b      	add	r3, r1
90017106:	80c3      	strh	r3, [r0, #6]
90017108:	2300      	movs	r3, #0
9001710a:	8043      	strh	r3, [r0, #2]
9001710c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017110:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90017114:	1a52      	subs	r2, r2, r1
90017116:	4293      	cmp	r3, r2
90017118:	bfc8      	it	gt
9001711a:	80c2      	strhgt	r2, [r0, #6]
9001711c:	bd10      	pop	{r4, pc}
	...

90017120 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90017120:	4b10      	ldr	r3, [pc, #64]	@ (90017164 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90017122:	b510      	push	{r4, lr}
90017124:	460c      	mov	r4, r1
90017126:	f9b3 2000 	ldrsh.w	r2, [r3]
9001712a:	4b0f      	ldr	r3, [pc, #60]	@ (90017168 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
9001712c:	4620      	mov	r0, r4
9001712e:	f9b3 1000 	ldrsh.w	r1, [r3]
90017132:	f7ff ffd0 	bl	900170d6 <_ZN8touchgfx4Rect10restrictToEss>
90017136:	4b0d      	ldr	r3, [pc, #52]	@ (9001716c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90017138:	6818      	ldr	r0, [r3, #0]
9001713a:	b190      	cbz	r0, 90017162 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
9001713c:	6803      	ldr	r3, [r0, #0]
9001713e:	4621      	mov	r1, r4
90017140:	689b      	ldr	r3, [r3, #8]
90017142:	4798      	blx	r3
90017144:	4b0a      	ldr	r3, [pc, #40]	@ (90017170 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90017146:	6818      	ldr	r0, [r3, #0]
90017148:	b118      	cbz	r0, 90017152 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001714a:	6803      	ldr	r3, [r0, #0]
9001714c:	4621      	mov	r1, r4
9001714e:	689b      	ldr	r3, [r3, #8]
90017150:	4798      	blx	r3
90017152:	4b08      	ldr	r3, [pc, #32]	@ (90017174 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90017154:	4621      	mov	r1, r4
90017156:	6818      	ldr	r0, [r3, #0]
90017158:	6803      	ldr	r3, [r0, #0]
9001715a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001715e:	69db      	ldr	r3, [r3, #28]
90017160:	4718      	bx	r3
90017162:	bd10      	pop	{r4, pc}
90017164:	240234b2 	.word	0x240234b2
90017168:	240234b0 	.word	0x240234b0
9001716c:	24023500 	.word	0x24023500
90017170:	240234fc 	.word	0x240234fc
90017174:	240234bc 	.word	0x240234bc

90017178 <_ZNK8touchgfx4Rect8includesERKS0_>:
90017178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001717a:	4606      	mov	r6, r0
9001717c:	4608      	mov	r0, r1
9001717e:	460f      	mov	r7, r1
90017180:	f7f9 fe0d 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90017184:	b9e8      	cbnz	r0, 900171c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90017186:	f9b7 5000 	ldrsh.w	r5, [r7]
9001718a:	f9b6 4000 	ldrsh.w	r4, [r6]
9001718e:	42a5      	cmp	r5, r4
90017190:	db17      	blt.n	900171c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90017192:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90017196:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001719a:	429a      	cmp	r2, r3
9001719c:	db11      	blt.n	900171c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001719e:	88b9      	ldrh	r1, [r7, #4]
900171a0:	440d      	add	r5, r1
900171a2:	88b1      	ldrh	r1, [r6, #4]
900171a4:	440c      	add	r4, r1
900171a6:	b22d      	sxth	r5, r5
900171a8:	b224      	sxth	r4, r4
900171aa:	42a5      	cmp	r5, r4
900171ac:	dc09      	bgt.n	900171c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900171ae:	88f8      	ldrh	r0, [r7, #6]
900171b0:	4410      	add	r0, r2
900171b2:	88f2      	ldrh	r2, [r6, #6]
900171b4:	4413      	add	r3, r2
900171b6:	b200      	sxth	r0, r0
900171b8:	b21b      	sxth	r3, r3
900171ba:	4298      	cmp	r0, r3
900171bc:	bfcc      	ite	gt
900171be:	2000      	movgt	r0, #0
900171c0:	2001      	movle	r0, #1
900171c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900171c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900171c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900171c6:	4604      	mov	r4, r0
900171c8:	4608      	mov	r0, r1
900171ca:	460d      	mov	r5, r1
900171cc:	f7f9 fde7 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
900171d0:	b978      	cbnz	r0, 900171f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900171d2:	4620      	mov	r0, r4
900171d4:	f7f9 fde3 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
900171d8:	f9b5 6000 	ldrsh.w	r6, [r5]
900171dc:	b150      	cbz	r0, 900171f4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900171de:	8026      	strh	r6, [r4, #0]
900171e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900171e4:	8063      	strh	r3, [r4, #2]
900171e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900171ea:	80a3      	strh	r3, [r4, #4]
900171ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900171f0:	80e3      	strh	r3, [r4, #6]
900171f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900171f4:	f9b4 1000 	ldrsh.w	r1, [r4]
900171f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900171fc:	42b1      	cmp	r1, r6
900171fe:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90017202:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90017206:	460f      	mov	r7, r1
90017208:	88ed      	ldrh	r5, [r5, #6]
9001720a:	bfa8      	it	ge
9001720c:	4637      	movge	r7, r6
9001720e:	4293      	cmp	r3, r2
90017210:	4618      	mov	r0, r3
90017212:	4466      	add	r6, ip
90017214:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90017218:	bfa8      	it	ge
9001721a:	4610      	movge	r0, r2
9001721c:	442a      	add	r2, r5
9001721e:	88e5      	ldrh	r5, [r4, #6]
90017220:	4461      	add	r1, ip
90017222:	b236      	sxth	r6, r6
90017224:	8027      	strh	r7, [r4, #0]
90017226:	442b      	add	r3, r5
90017228:	b209      	sxth	r1, r1
9001722a:	b212      	sxth	r2, r2
9001722c:	8060      	strh	r0, [r4, #2]
9001722e:	b21b      	sxth	r3, r3
90017230:	428e      	cmp	r6, r1
90017232:	bfac      	ite	ge
90017234:	ebc7 0106 	rsbge	r1, r7, r6
90017238:	ebc7 0101 	rsblt	r1, r7, r1
9001723c:	429a      	cmp	r2, r3
9001723e:	bfac      	ite	ge
90017240:	ebc0 0202 	rsbge	r2, r0, r2
90017244:	ebc0 0203 	rsblt	r2, r0, r3
90017248:	80a1      	strh	r1, [r4, #4]
9001724a:	80e2      	strh	r2, [r4, #6]
9001724c:	e7d1      	b.n	900171f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90017250 <_ZN8touchgfx11Application11getInstanceEv>:
90017250:	4b01      	ldr	r3, [pc, #4]	@ (90017258 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90017252:	6818      	ldr	r0, [r3, #0]
90017254:	4770      	bx	lr
90017256:	bf00      	nop
90017258:	24023510 	.word	0x24023510

9001725c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001725c:	2300      	movs	r3, #0
9001725e:	b510      	push	{r4, lr}
90017260:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90017264:	4604      	mov	r4, r0
90017266:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001726a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001726e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90017272:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90017276:	429a      	cmp	r2, r3
90017278:	d90e      	bls.n	90017298 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001727a:	18e2      	adds	r2, r4, r3
9001727c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90017280:	b122      	cbz	r2, 9001728c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90017282:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90017286:	6803      	ldr	r3, [r0, #0]
90017288:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001728a:	4798      	blx	r3
9001728c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90017290:	3301      	adds	r3, #1
90017292:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90017296:	e7ea      	b.n	9001726e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90017298:	bd10      	pop	{r4, pc}

9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001729a:	2300      	movs	r3, #0
9001729c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900172a0:	30a4      	adds	r0, #164	@ 0xa4
900172a2:	f820 3c24 	strh.w	r3, [r0, #-36]
900172a6:	f802 3b01 	strb.w	r3, [r2], #1
900172aa:	4282      	cmp	r2, r0
900172ac:	d1fb      	bne.n	900172a6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900172ae:	4770      	bx	lr

900172b0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900172b0:	b570      	push	{r4, r5, r6, lr}
900172b2:	4c0b      	ldr	r4, [pc, #44]	@ (900172e0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900172b4:	4605      	mov	r5, r0
900172b6:	460e      	mov	r6, r1
900172b8:	6820      	ldr	r0, [r4, #0]
900172ba:	b110      	cbz	r0, 900172c2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900172bc:	6803      	ldr	r3, [r0, #0]
900172be:	695b      	ldr	r3, [r3, #20]
900172c0:	4798      	blx	r3
900172c2:	1d28      	adds	r0, r5, #4
900172c4:	f7ff ffe9 	bl	9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900172c8:	6026      	str	r6, [r4, #0]
900172ca:	6833      	ldr	r3, [r6, #0]
900172cc:	4630      	mov	r0, r6
900172ce:	68db      	ldr	r3, [r3, #12]
900172d0:	4798      	blx	r3
900172d2:	682b      	ldr	r3, [r5, #0]
900172d4:	4628      	mov	r0, r5
900172d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900172d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900172dc:	4718      	bx	r3
900172de:	bf00      	nop
900172e0:	24023500 	.word	0x24023500

900172e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900172e4:	2300      	movs	r3, #0
900172e6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900172ea:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900172ee:	461a      	mov	r2, r3
900172f0:	b5f0      	push	{r4, r5, r6, r7, lr}
900172f2:	461c      	mov	r4, r3
900172f4:	461d      	mov	r5, r3
900172f6:	459c      	cmp	ip, r3
900172f8:	dd1a      	ble.n	90017330 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900172fa:	18c6      	adds	r6, r0, r3
900172fc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90017300:	b16e      	cbz	r6, 9001731e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90017302:	429a      	cmp	r2, r3
90017304:	d008      	beq.n	90017318 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90017306:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001730a:	fa1f fe82 	uxth.w	lr, r2
9001730e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90017312:	1887      	adds	r7, r0, r2
90017314:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90017318:	3201      	adds	r2, #1
9001731a:	3301      	adds	r3, #1
9001731c:	e7eb      	b.n	900172f6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001731e:	4299      	cmp	r1, r3
90017320:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90017324:	bfa8      	it	ge
90017326:	3501      	addge	r5, #1
90017328:	429e      	cmp	r6, r3
9001732a:	bfc8      	it	gt
9001732c:	3401      	addgt	r4, #1
9001732e:	e7f4      	b.n	9001731a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90017330:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90017334:	1b49      	subs	r1, r1, r5
90017336:	1b1b      	subs	r3, r3, r4
90017338:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001733c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90017340:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017344:	4293      	cmp	r3, r2
90017346:	dd03      	ble.n	90017350 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90017348:	3b01      	subs	r3, #1
9001734a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001734e:	e7f7      	b.n	90017340 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90017350:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90017354 <_ZN8touchgfx11Application15handleTickEventEv>:
90017354:	b570      	push	{r4, r5, r6, lr}
90017356:	4d16      	ldr	r5, [pc, #88]	@ (900173b0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90017358:	4604      	mov	r4, r0
9001735a:	6828      	ldr	r0, [r5, #0]
9001735c:	b140      	cbz	r0, 90017370 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001735e:	7a03      	ldrb	r3, [r0, #8]
90017360:	b933      	cbnz	r3, 90017370 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90017362:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90017366:	6803      	ldr	r3, [r0, #0]
90017368:	689b      	ldr	r3, [r3, #8]
9001736a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001736e:	4718      	bx	r3
90017370:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90017374:	4e0f      	ldr	r6, [pc, #60]	@ (900173b4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90017376:	b973      	cbnz	r3, 90017396 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90017378:	b168      	cbz	r0, 90017396 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001737a:	7a03      	ldrb	r3, [r0, #8]
9001737c:	b15b      	cbz	r3, 90017396 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001737e:	6830      	ldr	r0, [r6, #0]
90017380:	b110      	cbz	r0, 90017388 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90017382:	6803      	ldr	r3, [r0, #0]
90017384:	691b      	ldr	r3, [r3, #16]
90017386:	4798      	blx	r3
90017388:	6828      	ldr	r0, [r5, #0]
9001738a:	6803      	ldr	r3, [r0, #0]
9001738c:	68db      	ldr	r3, [r3, #12]
9001738e:	4798      	blx	r3
90017390:	2301      	movs	r3, #1
90017392:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90017396:	3404      	adds	r4, #4
90017398:	4620      	mov	r0, r4
9001739a:	f7ff ff5f 	bl	9001725c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001739e:	4620      	mov	r0, r4
900173a0:	f7ff ffa0 	bl	900172e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900173a4:	6830      	ldr	r0, [r6, #0]
900173a6:	b110      	cbz	r0, 900173ae <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900173a8:	6803      	ldr	r3, [r0, #0]
900173aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900173ac:	e7dd      	b.n	9001736a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900173ae:	bd70      	pop	{r4, r5, r6, pc}
900173b0:	24023504 	.word	0x24023504
900173b4:	24023500 	.word	0x24023500

900173b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900173b8:	4603      	mov	r3, r0
900173ba:	f100 0140 	add.w	r1, r0, #64	@ 0x40
900173be:	2200      	movs	r2, #0
900173c0:	801a      	strh	r2, [r3, #0]
900173c2:	3308      	adds	r3, #8
900173c4:	f823 2c06 	strh.w	r2, [r3, #-6]
900173c8:	f823 2c04 	strh.w	r2, [r3, #-4]
900173cc:	f823 2c02 	strh.w	r2, [r3, #-2]
900173d0:	428b      	cmp	r3, r1
900173d2:	d1f5      	bne.n	900173c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900173d4:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
900173d8:	4770      	bx	lr
	...

900173dc <_ZN8touchgfx11ApplicationC1Ev>:
900173dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900173de:	4b1d      	ldr	r3, [pc, #116]	@ (90017454 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900173e0:	4606      	mov	r6, r0
900173e2:	4604      	mov	r4, r0
900173e4:	2500      	movs	r5, #0
900173e6:	f846 3b04 	str.w	r3, [r6], #4
900173ea:	22a8      	movs	r2, #168	@ 0xa8
900173ec:	2100      	movs	r1, #0
900173ee:	4630      	mov	r0, r6
900173f0:	f013 f9ea 	bl	9002a7c8 <memset>
900173f4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900173f8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900173fc:	4f16      	ldr	r7, [pc, #88]	@ (90017458 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900173fe:	f7ff ffdb 	bl	900173b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90017402:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90017406:	f7ff ffd7 	bl	900173b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001740a:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
9001740e:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90017412:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90017416:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
9001741a:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
9001741e:	490f      	ldr	r1, [pc, #60]	@ (9001745c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90017420:	480f      	ldr	r0, [pc, #60]	@ (90017460 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90017422:	f011 fd4b 	bl	90028ebc <CRC_Lock>
90017426:	4b0f      	ldr	r3, [pc, #60]	@ (90017464 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90017428:	b158      	cbz	r0, 90017442 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001742a:	801d      	strh	r5, [r3, #0]
9001742c:	2300      	movs	r3, #0
9001742e:	4a0e      	ldr	r2, [pc, #56]	@ (90017468 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90017430:	4630      	mov	r0, r6
90017432:	6013      	str	r3, [r2, #0]
90017434:	4a0d      	ldr	r2, [pc, #52]	@ (9001746c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90017436:	603b      	str	r3, [r7, #0]
90017438:	6013      	str	r3, [r2, #0]
9001743a:	f7ff ff2e 	bl	9001729a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001743e:	4620      	mov	r0, r4
90017440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017442:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90017446:	2002      	movs	r0, #2
90017448:	801a      	strh	r2, [r3, #0]
9001744a:	6038      	str	r0, [r7, #0]
9001744c:	f001 fe08 	bl	90019060 <_ZN8touchgfx6Screen4drawEv>
90017450:	e7ec      	b.n	9001742c <_ZN8touchgfx11ApplicationC1Ev+0x50>
90017452:	bf00      	nop
90017454:	9002e6d8 	.word	0x9002e6d8
90017458:	24023500 	.word	0x24023500
9001745c:	b5e8b5cd 	.word	0xb5e8b5cd
90017460:	f407a5c2 	.word	0xf407a5c2
90017464:	24000088 	.word	0x24000088
90017468:	24023510 	.word	0x24023510
9001746c:	24023504 	.word	0x24023504

90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90017470:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90017474:	3b01      	subs	r3, #1
90017476:	b29b      	uxth	r3, r3
90017478:	428b      	cmp	r3, r1
9001747a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001747e:	b510      	push	{r4, lr}
90017480:	d908      	bls.n	90017494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90017482:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90017486:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001748a:	681a      	ldr	r2, [r3, #0]
9001748c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90017490:	685a      	ldr	r2, [r3, #4]
90017492:	6062      	str	r2, [r4, #4]
90017494:	bd10      	pop	{r4, pc}
	...

90017498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90017498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001749c:	b08f      	sub	sp, #60	@ 0x3c
9001749e:	4b8f      	ldr	r3, [pc, #572]	@ (900176dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
900174a0:	4683      	mov	fp, r0
900174a2:	ac0a      	add	r4, sp, #40	@ 0x28
900174a4:	e884 0006 	stmia.w	r4, {r1, r2}
900174a8:	f9b3 2000 	ldrsh.w	r2, [r3]
900174ac:	4620      	mov	r0, r4
900174ae:	4b8c      	ldr	r3, [pc, #560]	@ (900176e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
900174b0:	f9b3 1000 	ldrsh.w	r1, [r3]
900174b4:	f7ff fe0f 	bl	900170d6 <_ZN8touchgfx4Rect10restrictToEss>
900174b8:	4620      	mov	r0, r4
900174ba:	f7f9 fc70 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
900174be:	2800      	cmp	r0, #0
900174c0:	d16a      	bne.n	90017598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900174c2:	9403      	str	r4, [sp, #12]
900174c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900174c8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900174cc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900174d0:	9301      	str	r3, [sp, #4]
900174d2:	35a4      	adds	r5, #164	@ 0xa4
900174d4:	b15c      	cbz	r4, 900174ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
900174d6:	4629      	mov	r1, r5
900174d8:	9803      	ldr	r0, [sp, #12]
900174da:	f7ff fe4d 	bl	90017178 <_ZNK8touchgfx4Rect8includesERKS0_>
900174de:	3c01      	subs	r4, #1
900174e0:	b118      	cbz	r0, 900174ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
900174e2:	b2a1      	uxth	r1, r4
900174e4:	9801      	ldr	r0, [sp, #4]
900174e6:	f7ff ffc3 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900174ea:	3d08      	subs	r5, #8
900174ec:	e7f2      	b.n	900174d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900174ee:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900174f2:	f10a 33ff 	add.w	r3, sl, #4294967295
900174f6:	f8cd a010 	str.w	sl, [sp, #16]
900174fa:	9302      	str	r3, [sp, #8]
900174fc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90017500:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90017504:	9306      	str	r3, [sp, #24]
90017506:	445c      	add	r4, fp
90017508:	2500      	movs	r5, #0
9001750a:	4626      	mov	r6, r4
9001750c:	f8cd a014 	str.w	sl, [sp, #20]
90017510:	462f      	mov	r7, r5
90017512:	9b05      	ldr	r3, [sp, #20]
90017514:	2b00      	cmp	r3, #0
90017516:	d073      	beq.n	90017600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90017518:	9903      	ldr	r1, [sp, #12]
9001751a:	4630      	mov	r0, r6
9001751c:	f7ff fdb9 	bl	90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017520:	b350      	cbz	r0, 90017578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90017522:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90017526:	f9b6 c000 	ldrsh.w	ip, [r6]
9001752a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001752e:	45e6      	cmp	lr, ip
90017530:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90017534:	db33      	blt.n	9001759e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90017536:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001753a:	88b3      	ldrh	r3, [r6, #4]
9001753c:	4472      	add	r2, lr
9001753e:	4463      	add	r3, ip
90017540:	b212      	sxth	r2, r2
90017542:	b21b      	sxth	r3, r3
90017544:	429a      	cmp	r2, r3
90017546:	dc2a      	bgt.n	9001759e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90017548:	fa1f f289 	uxth.w	r2, r9
9001754c:	88f3      	ldrh	r3, [r6, #6]
9001754e:	45c8      	cmp	r8, r9
90017550:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017554:	4413      	add	r3, r2
90017556:	fa1f fc88 	uxth.w	ip, r8
9001755a:	b29b      	uxth	r3, r3
9001755c:	fa0f fe83 	sxth.w	lr, r3
90017560:	db0f      	blt.n	90017582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90017562:	eba3 030c 	sub.w	r3, r3, ip
90017566:	1ac9      	subs	r1, r1, r3
90017568:	b209      	sxth	r1, r1
9001756a:	2900      	cmp	r1, #0
9001756c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017570:	dd12      	ble.n	90017598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90017572:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90017576:	4605      	mov	r5, r0
90017578:	9b05      	ldr	r3, [sp, #20]
9001757a:	3e08      	subs	r6, #8
9001757c:	3b01      	subs	r3, #1
9001757e:	9305      	str	r3, [sp, #20]
90017580:	e7c7      	b.n	90017512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90017582:	4461      	add	r1, ip
90017584:	b209      	sxth	r1, r1
90017586:	4571      	cmp	r1, lr
90017588:	dc38      	bgt.n	900175fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001758a:	eba2 020c 	sub.w	r2, r2, ip
9001758e:	b212      	sxth	r2, r2
90017590:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90017594:	2a00      	cmp	r2, #0
90017596:	dcee      	bgt.n	90017576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90017598:	b00f      	add	sp, #60	@ 0x3c
9001759a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001759e:	45c8      	cmp	r8, r9
900175a0:	db2c      	blt.n	900175fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900175a2:	88f3      	ldrh	r3, [r6, #6]
900175a4:	4499      	add	r9, r3
900175a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
900175aa:	4498      	add	r8, r3
900175ac:	fa0f f989 	sxth.w	r9, r9
900175b0:	fa0f f888 	sxth.w	r8, r8
900175b4:	45c1      	cmp	r9, r8
900175b6:	db21      	blt.n	900175fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900175b8:	fa1f f28c 	uxth.w	r2, ip
900175bc:	88b3      	ldrh	r3, [r6, #4]
900175be:	45e6      	cmp	lr, ip
900175c0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900175c4:	4413      	add	r3, r2
900175c6:	fa1f f88e 	uxth.w	r8, lr
900175ca:	b29b      	uxth	r3, r3
900175cc:	fa0f f983 	sxth.w	r9, r3
900175d0:	db0a      	blt.n	900175e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
900175d2:	eba3 0308 	sub.w	r3, r3, r8
900175d6:	1ac9      	subs	r1, r1, r3
900175d8:	b209      	sxth	r1, r1
900175da:	2900      	cmp	r1, #0
900175dc:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900175e0:	ddda      	ble.n	90017598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900175e2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900175e6:	e7c6      	b.n	90017576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900175e8:	4441      	add	r1, r8
900175ea:	b209      	sxth	r1, r1
900175ec:	4549      	cmp	r1, r9
900175ee:	dc05      	bgt.n	900175fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900175f0:	eba2 0208 	sub.w	r2, r2, r8
900175f4:	b212      	sxth	r2, r2
900175f6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900175fa:	e7cb      	b.n	90017594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900175fc:	4607      	mov	r7, r0
900175fe:	e7bb      	b.n	90017578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90017600:	2d00      	cmp	r5, #0
90017602:	d181      	bne.n	90017508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90017604:	2f00      	cmp	r7, #0
90017606:	f000 81dd 	beq.w	900179c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001760a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
9001760e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90017612:	b2b3      	uxth	r3, r6
90017614:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90017618:	9305      	str	r3, [sp, #20]
9001761a:	9a05      	ldr	r2, [sp, #20]
9001761c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90017620:	4413      	add	r3, r2
90017622:	b2ba      	uxth	r2, r7
90017624:	4492      	add	sl, r2
90017626:	b29b      	uxth	r3, r3
90017628:	fa1f fa8a 	uxth.w	sl, sl
9001762c:	fa0f f883 	sxth.w	r8, r3
90017630:	fa0f f98a 	sxth.w	r9, sl
90017634:	e9cd 2307 	strd	r2, r3, [sp, #28]
90017638:	9b04      	ldr	r3, [sp, #16]
9001763a:	2b00      	cmp	r3, #0
9001763c:	d052      	beq.n	900176e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
9001763e:	9903      	ldr	r1, [sp, #12]
90017640:	4620      	mov	r0, r4
90017642:	f7ff fd26 	bl	90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017646:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001764a:	b1c0      	cbz	r0, 9001767e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001764c:	f9b4 e000 	ldrsh.w	lr, [r4]
90017650:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90017654:	4576      	cmp	r6, lr
90017656:	dc22      	bgt.n	9001769e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90017658:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001765c:	44f4      	add	ip, lr
9001765e:	fa0f fc8c 	sxth.w	ip, ip
90017662:	45e0      	cmp	r8, ip
90017664:	db1b      	blt.n	9001769e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90017666:	428f      	cmp	r7, r1
90017668:	fa1f fc81 	uxth.w	ip, r1
9001766c:	88e1      	ldrh	r1, [r4, #6]
9001766e:	dc0d      	bgt.n	9001768c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017670:	ebaa 0c0c 	sub.w	ip, sl, ip
90017674:	f8a4 9002 	strh.w	r9, [r4, #2]
90017678:	eba1 010c 	sub.w	r1, r1, ip
9001767c:	80e1      	strh	r1, [r4, #6]
9001767e:	4628      	mov	r0, r5
90017680:	9904      	ldr	r1, [sp, #16]
90017682:	3c08      	subs	r4, #8
90017684:	4605      	mov	r5, r0
90017686:	3901      	subs	r1, #1
90017688:	9104      	str	r1, [sp, #16]
9001768a:	e7d3      	b.n	90017634 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
9001768c:	4461      	add	r1, ip
9001768e:	b209      	sxth	r1, r1
90017690:	4549      	cmp	r1, r9
90017692:	dcf5      	bgt.n	90017680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90017694:	eba2 0c0c 	sub.w	ip, r2, ip
90017698:	f8a4 c006 	strh.w	ip, [r4, #6]
9001769c:	e7ef      	b.n	9001767e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001769e:	428f      	cmp	r7, r1
900176a0:	dcee      	bgt.n	90017680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900176a2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900176a6:	4461      	add	r1, ip
900176a8:	b209      	sxth	r1, r1
900176aa:	4589      	cmp	r9, r1
900176ac:	dbe8      	blt.n	90017680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900176ae:	4576      	cmp	r6, lr
900176b0:	fa1f fc8e 	uxth.w	ip, lr
900176b4:	88a1      	ldrh	r1, [r4, #4]
900176b6:	dc07      	bgt.n	900176c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900176b8:	eba3 0c0c 	sub.w	ip, r3, ip
900176bc:	f8a4 8000 	strh.w	r8, [r4]
900176c0:	eba1 010c 	sub.w	r1, r1, ip
900176c4:	80a1      	strh	r1, [r4, #4]
900176c6:	e7da      	b.n	9001767e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900176c8:	4461      	add	r1, ip
900176ca:	b209      	sxth	r1, r1
900176cc:	4588      	cmp	r8, r1
900176ce:	dbd7      	blt.n	90017680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900176d0:	9905      	ldr	r1, [sp, #20]
900176d2:	eba1 0c0c 	sub.w	ip, r1, ip
900176d6:	f8a4 c004 	strh.w	ip, [r4, #4]
900176da:	e7d0      	b.n	9001767e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900176dc:	240234b2 	.word	0x240234b2
900176e0:	240234b0 	.word	0x240234b0
900176e4:	2d00      	cmp	r5, #0
900176e6:	f000 816d 	beq.w	900179c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900176ea:	9b06      	ldr	r3, [sp, #24]
900176ec:	445b      	add	r3, fp
900176ee:	461c      	mov	r4, r3
900176f0:	9b02      	ldr	r3, [sp, #8]
900176f2:	3301      	adds	r3, #1
900176f4:	f000 8166 	beq.w	900179c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900176f8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900176fc:	9803      	ldr	r0, [sp, #12]
900176fe:	4629      	mov	r1, r5
90017700:	f7ff fd3a 	bl	90017178 <_ZNK8touchgfx4Rect8includesERKS0_>
90017704:	b120      	cbz	r0, 90017710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90017706:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001770a:	9801      	ldr	r0, [sp, #4]
9001770c:	f7ff feb0 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017710:	9903      	ldr	r1, [sp, #12]
90017712:	4628      	mov	r0, r5
90017714:	f7ff fcbd 	bl	90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017718:	2800      	cmp	r0, #0
9001771a:	f000 809c 	beq.w	90017856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001771e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90017722:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017726:	fa1f f189 	uxth.w	r1, r9
9001772a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001772e:	9309      	str	r3, [sp, #36]	@ 0x24
90017730:	eb01 0c03 	add.w	ip, r1, r3
90017734:	b283      	uxth	r3, r0
90017736:	4548      	cmp	r0, r9
90017738:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001773c:	fa1f fa8c 	uxth.w	sl, ip
90017740:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90017744:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90017748:	eb03 050c 	add.w	r5, r3, ip
9001774c:	b2ad      	uxth	r5, r5
9001774e:	9505      	str	r5, [sp, #20]
90017750:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90017754:	9504      	str	r5, [sp, #16]
90017756:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001775a:	f340 8099 	ble.w	90017890 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
9001775e:	1a5b      	subs	r3, r3, r1
90017760:	4596      	cmp	lr, r2
90017762:	fa0f f08a 	sxth.w	r0, sl
90017766:	b29b      	uxth	r3, r3
90017768:	b21e      	sxth	r6, r3
9001776a:	dd2e      	ble.n	900177ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
9001776c:	9f02      	ldr	r7, [sp, #8]
9001776e:	fa1f fe8e 	uxth.w	lr, lr
90017772:	b292      	uxth	r2, r2
90017774:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90017778:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001777c:	9f04      	ldr	r7, [sp, #16]
9001777e:	ebae 0102 	sub.w	r1, lr, r2
90017782:	44a6      	add	lr, r4
90017784:	1a3f      	subs	r7, r7, r0
90017786:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001778a:	b289      	uxth	r1, r1
9001778c:	4402      	add	r2, r0
9001778e:	fa0f fe8e 	sxth.w	lr, lr
90017792:	b20d      	sxth	r5, r1
90017794:	b212      	sxth	r2, r2
90017796:	436f      	muls	r7, r5
90017798:	ebae 0202 	sub.w	r2, lr, r2
9001779c:	4372      	muls	r2, r6
9001779e:	4297      	cmp	r7, r2
900177a0:	db09      	blt.n	900177b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900177a2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
900177a6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
900177aa:	449c      	add	ip, r3
900177ac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900177b0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900177b4:	e686      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900177b6:	4421      	add	r1, r4
900177b8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
900177bc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
900177c0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900177c4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900177c8:	e67c      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900177ca:	9f04      	ldr	r7, [sp, #16]
900177cc:	42b8      	cmp	r0, r7
900177ce:	da27      	bge.n	90017820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
900177d0:	9902      	ldr	r1, [sp, #8]
900177d2:	1a3f      	subs	r7, r7, r0
900177d4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900177d8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900177dc:	eb05 010e 	add.w	r1, r5, lr
900177e0:	fa1f f881 	uxth.w	r8, r1
900177e4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900177e8:	4411      	add	r1, r2
900177ea:	fa0f f988 	sxth.w	r9, r8
900177ee:	eba2 020e 	sub.w	r2, r2, lr
900177f2:	eba1 0108 	sub.w	r1, r1, r8
900177f6:	4372      	muls	r2, r6
900177f8:	b289      	uxth	r1, r1
900177fa:	fa0f f881 	sxth.w	r8, r1
900177fe:	fb08 f707 	mul.w	r7, r8, r7
90017802:	42ba      	cmp	r2, r7
90017804:	dc06      	bgt.n	90017814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90017806:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
9001780a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
9001780e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90017812:	e7ca      	b.n	900177aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90017814:	4429      	add	r1, r5
90017816:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001781a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001781e:	e651      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017820:	9805      	ldr	r0, [sp, #20]
90017822:	2d06      	cmp	r5, #6
90017824:	ebaa 0000 	sub.w	r0, sl, r0
90017828:	b280      	uxth	r0, r0
9001782a:	fa0f fe80 	sxth.w	lr, r0
9001782e:	d817      	bhi.n	90017860 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90017830:	9b04      	ldr	r3, [sp, #16]
90017832:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90017836:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001783a:	1c6b      	adds	r3, r5, #1
9001783c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90017840:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017844:	9b01      	ldr	r3, [sp, #4]
90017846:	9801      	ldr	r0, [sp, #4]
90017848:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001784c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017850:	805a      	strh	r2, [r3, #2]
90017852:	809e      	strh	r6, [r3, #4]
90017854:	80d9      	strh	r1, [r3, #6]
90017856:	9b02      	ldr	r3, [sp, #8]
90017858:	3c08      	subs	r4, #8
9001785a:	3b01      	subs	r3, #1
9001785c:	9302      	str	r3, [sp, #8]
9001785e:	e747      	b.n	900176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90017860:	9a02      	ldr	r2, [sp, #8]
90017862:	45b6      	cmp	lr, r6
90017864:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017868:	db0d      	blt.n	90017886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
9001786a:	449c      	add	ip, r3
9001786c:	445a      	add	r2, fp
9001786e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90017872:	fa1f fc8c 	uxth.w	ip, ip
90017876:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
9001787a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001787e:	448c      	add	ip, r1
90017880:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90017884:	e61e      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017886:	445a      	add	r2, fp
90017888:	4484      	add	ip, r0
9001788a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001788e:	e78f      	b.n	900177b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90017890:	fa1f f18e 	uxth.w	r1, lr
90017894:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90017898:	b293      	uxth	r3, r2
9001789a:	4596      	cmp	lr, r2
9001789c:	eb01 0806 	add.w	r8, r1, r6
900178a0:	9306      	str	r3, [sp, #24]
900178a2:	fa1f f888 	uxth.w	r8, r8
900178a6:	9f06      	ldr	r7, [sp, #24]
900178a8:	fa0f f388 	sxth.w	r3, r8
900178ac:	9307      	str	r3, [sp, #28]
900178ae:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
900178b2:	443b      	add	r3, r7
900178b4:	b29b      	uxth	r3, r3
900178b6:	9308      	str	r3, [sp, #32]
900178b8:	da24      	bge.n	90017904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
900178ba:	9905      	ldr	r1, [sp, #20]
900178bc:	eba3 0308 	sub.w	r3, r3, r8
900178c0:	eba2 020e 	sub.w	r2, r2, lr
900178c4:	eba9 0000 	sub.w	r0, r9, r0
900178c8:	ebaa 0401 	sub.w	r4, sl, r1
900178cc:	b29b      	uxth	r3, r3
900178ce:	b2a4      	uxth	r4, r4
900178d0:	b219      	sxth	r1, r3
900178d2:	b225      	sxth	r5, r4
900178d4:	4348      	muls	r0, r1
900178d6:	436a      	muls	r2, r5
900178d8:	4282      	cmp	r2, r0
900178da:	9a02      	ldr	r2, [sp, #8]
900178dc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900178e0:	445a      	add	r2, fp
900178e2:	dc06      	bgt.n	900178f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
900178e4:	9b07      	ldr	r3, [sp, #28]
900178e6:	44a4      	add	ip, r4
900178e8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900178ec:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900178f0:	e75e      	b.n	900177b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900178f2:	9904      	ldr	r1, [sp, #16]
900178f4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900178f8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900178fc:	4433      	add	r3, r6
900178fe:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017902:	e5df      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017904:	9f06      	ldr	r7, [sp, #24]
90017906:	9b04      	ldr	r3, [sp, #16]
90017908:	1bc9      	subs	r1, r1, r7
9001790a:	fa0f f78a 	sxth.w	r7, sl
9001790e:	b289      	uxth	r1, r1
90017910:	429f      	cmp	r7, r3
90017912:	fa0f fe81 	sxth.w	lr, r1
90017916:	dd23      	ble.n	90017960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90017918:	9a05      	ldr	r2, [sp, #20]
9001791a:	eba9 0000 	sub.w	r0, r9, r0
9001791e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017922:	ebaa 0202 	sub.w	r2, sl, r2
90017926:	9d07      	ldr	r5, [sp, #28]
90017928:	fb0e f000 	mul.w	r0, lr, r0
9001792c:	b292      	uxth	r2, r2
9001792e:	eba5 0a03 	sub.w	sl, r5, r3
90017932:	9b02      	ldr	r3, [sp, #8]
90017934:	b214      	sxth	r4, r2
90017936:	00db      	lsls	r3, r3, #3
90017938:	fb04 fa0a 	mul.w	sl, r4, sl
9001793c:	445b      	add	r3, fp
9001793e:	4550      	cmp	r0, sl
90017940:	db03      	blt.n	9001794a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90017942:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90017946:	4494      	add	ip, r2
90017948:	e732      	b.n	900177b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001794a:	9a04      	ldr	r2, [sp, #16]
9001794c:	4431      	add	r1, r6
9001794e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90017952:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90017956:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
9001795a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001795e:	e75c      	b.n	9001781a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90017960:	9b08      	ldr	r3, [sp, #32]
90017962:	2d06      	cmp	r5, #6
90017964:	eba3 0308 	sub.w	r3, r3, r8
90017968:	b29b      	uxth	r3, r3
9001796a:	b218      	sxth	r0, r3
9001796c:	d813      	bhi.n	90017996 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
9001796e:	9b07      	ldr	r3, [sp, #28]
90017970:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90017974:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90017978:	1c6b      	adds	r3, r5, #1
9001797a:	9901      	ldr	r1, [sp, #4]
9001797c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017980:	9b01      	ldr	r3, [sp, #4]
90017982:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90017986:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001798a:	805a      	strh	r2, [r3, #2]
9001798c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001798e:	f8a3 e006 	strh.w	lr, [r3, #6]
90017992:	809a      	strh	r2, [r3, #4]
90017994:	e75f      	b.n	90017856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90017996:	9c02      	ldr	r4, [sp, #8]
90017998:	4570      	cmp	r0, lr
9001799a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001799e:	db0d      	blt.n	900179bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
900179a0:	4431      	add	r1, r6
900179a2:	9b06      	ldr	r3, [sp, #24]
900179a4:	445c      	add	r4, fp
900179a6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900179aa:	b289      	uxth	r1, r1
900179ac:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
900179b0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900179b4:	4419      	add	r1, r3
900179b6:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
900179ba:	e583      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900179bc:	445c      	add	r4, fp
900179be:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
900179c2:	e79b      	b.n	900178fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
900179c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900179c8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900179cc:	1e65      	subs	r5, r4, #1
900179ce:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900179d2:	b2ad      	uxth	r5, r5
900179d4:	42b5      	cmp	r5, r6
900179d6:	d044      	beq.n	90017a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
900179d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900179dc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
900179e0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
900179e4:	4282      	cmp	r2, r0
900179e6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
900179ea:	d11f      	bne.n	90017a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900179ec:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
900179f0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
900179f4:	459c      	cmp	ip, r3
900179f6:	d119      	bne.n	90017a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900179f8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
900179fc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90017a00:	19d8      	adds	r0, r3, r7
90017a02:	b200      	sxth	r0, r0
90017a04:	4288      	cmp	r0, r1
90017a06:	d109      	bne.n	90017a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90017a08:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90017a0c:	4413      	add	r3, r2
90017a0e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90017a12:	4629      	mov	r1, r5
90017a14:	9801      	ldr	r0, [sp, #4]
90017a16:	f7ff fd2b 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017a1a:	e003      	b.n	90017a24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017a1c:	4411      	add	r1, r2
90017a1e:	b209      	sxth	r1, r1
90017a20:	42b9      	cmp	r1, r7
90017a22:	d0f3      	beq.n	90017a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90017a24:	3d01      	subs	r5, #1
90017a26:	3c08      	subs	r4, #8
90017a28:	b2ad      	uxth	r5, r5
90017a2a:	e7d3      	b.n	900179d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90017a2c:	42b9      	cmp	r1, r7
90017a2e:	d1f9      	bne.n	90017a24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017a30:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90017a34:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017a38:	4299      	cmp	r1, r3
90017a3a:	d1f3      	bne.n	90017a24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017a3c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017a40:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017a44:	181f      	adds	r7, r3, r0
90017a46:	b23f      	sxth	r7, r7
90017a48:	42ba      	cmp	r2, r7
90017a4a:	d105      	bne.n	90017a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90017a4c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90017a50:	440b      	add	r3, r1
90017a52:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017a56:	e7dc      	b.n	90017a12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90017a58:	440a      	add	r2, r1
90017a5a:	b212      	sxth	r2, r2
90017a5c:	4290      	cmp	r0, r2
90017a5e:	d1e1      	bne.n	90017a24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017a60:	e7f6      	b.n	90017a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90017a62:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90017a66:	2e07      	cmp	r6, #7
90017a68:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90017a6c:	d812      	bhi.n	90017a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90017a6e:	1c75      	adds	r5, r6, #1
90017a70:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90017a74:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90017a78:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90017a7c:	9d01      	ldr	r5, [sp, #4]
90017a7e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90017a82:	442c      	add	r4, r5
90017a84:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90017a88:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90017a8c:	8061      	strh	r1, [r4, #2]
90017a8e:	80a2      	strh	r2, [r4, #4]
90017a90:	80e3      	strh	r3, [r4, #6]
90017a92:	e581      	b.n	90017598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90017a94:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90017a98:	3e01      	subs	r6, #1
90017a9a:	445c      	add	r4, fp
90017a9c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90017aa0:	f04f 37ff 	mov.w	r7, #4294967295
90017aa4:	2500      	movs	r5, #0
90017aa6:	9305      	str	r3, [sp, #20]
90017aa8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017aac:	1e72      	subs	r2, r6, #1
90017aae:	9302      	str	r3, [sp, #8]
90017ab0:	4691      	mov	r9, r2
90017ab2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017ab6:	9304      	str	r3, [sp, #16]
90017ab8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90017abc:	f1b9 3fff 	cmp.w	r9, #4294967295
90017ac0:	6818      	ldr	r0, [r3, #0]
90017ac2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017ac6:	9207      	str	r2, [sp, #28]
90017ac8:	bf16      	itet	ne
90017aca:	9905      	ldrne	r1, [sp, #20]
90017acc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017ad0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90017ad4:	9306      	str	r3, [sp, #24]
90017ad6:	f8be 1006 	ldrh.w	r1, [lr, #6]
90017ada:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017ade:	fb18 f801 	smulbb	r8, r8, r1
90017ae2:	6859      	ldr	r1, [r3, #4]
90017ae4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90017ae8:	4671      	mov	r1, lr
90017aea:	a80c      	add	r0, sp, #48	@ 0x30
90017aec:	f7ff fb6a 	bl	900171c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017af0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90017af4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90017af8:	f04f 0c08 	mov.w	ip, #8
90017afc:	9b04      	ldr	r3, [sp, #16]
90017afe:	9a02      	ldr	r2, [sp, #8]
90017b00:	fb10 f001 	smulbb	r0, r0, r1
90017b04:	fb02 8803 	mla	r8, r2, r3, r8
90017b08:	eba0 0108 	sub.w	r1, r0, r8
90017b0c:	fb90 f0fc 	sdiv	r0, r0, ip
90017b10:	4288      	cmp	r0, r1
90017b12:	dc20      	bgt.n	90017b56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90017b14:	4551      	cmp	r1, sl
90017b16:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90017b1a:	da03      	bge.n	90017b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90017b1c:	b1d9      	cbz	r1, 90017b56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90017b1e:	468a      	mov	sl, r1
90017b20:	464f      	mov	r7, r9
90017b22:	4635      	mov	r5, r6
90017b24:	f109 39ff 	add.w	r9, r9, #4294967295
90017b28:	f119 0f02 	cmn.w	r9, #2
90017b2c:	d1c6      	bne.n	90017abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90017b2e:	4616      	mov	r6, r2
90017b30:	3201      	adds	r2, #1
90017b32:	f1a4 0408 	sub.w	r4, r4, #8
90017b36:	d1b7      	bne.n	90017aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90017b38:	9b01      	ldr	r3, [sp, #4]
90017b3a:	b2ac      	uxth	r4, r5
90017b3c:	00ed      	lsls	r5, r5, #3
90017b3e:	1958      	adds	r0, r3, r5
90017b40:	1c7b      	adds	r3, r7, #1
90017b42:	d10b      	bne.n	90017b5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90017b44:	4601      	mov	r1, r0
90017b46:	9803      	ldr	r0, [sp, #12]
90017b48:	f7ff fb3c 	bl	900171c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017b4c:	4621      	mov	r1, r4
90017b4e:	9801      	ldr	r0, [sp, #4]
90017b50:	f7ff fc8e 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017b54:	e4b6      	b.n	900174c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017b56:	464f      	mov	r7, r9
90017b58:	4635      	mov	r5, r6
90017b5a:	e7ed      	b.n	90017b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90017b5c:	9b01      	ldr	r3, [sp, #4]
90017b5e:	00ff      	lsls	r7, r7, #3
90017b60:	445d      	add	r5, fp
90017b62:	19d9      	adds	r1, r3, r7
90017b64:	445f      	add	r7, fp
90017b66:	f7ff fb2d 	bl	900171c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017b6a:	9b03      	ldr	r3, [sp, #12]
90017b6c:	cb03      	ldmia	r3!, {r0, r1}
90017b6e:	9b03      	ldr	r3, [sp, #12]
90017b70:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90017b74:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90017b78:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017b7c:	6869      	ldr	r1, [r5, #4]
90017b7e:	c303      	stmia	r3!, {r0, r1}
90017b80:	e7e4      	b.n	90017b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90017b82:	bf00      	nop

90017b84 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90017b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017b88:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90017b8c:	b09b      	sub	sp, #108	@ 0x6c
90017b8e:	4604      	mov	r4, r0
90017b90:	4630      	mov	r0, r6
90017b92:	f7f9 f904 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90017b96:	4605      	mov	r5, r0
90017b98:	b948      	cbnz	r0, 90017bae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90017b9a:	6823      	ldr	r3, [r4, #0]
90017b9c:	4620      	mov	r0, r4
90017b9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017ba0:	e896 0006 	ldmia.w	r6, {r1, r2}
90017ba4:	4798      	blx	r3
90017ba6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90017baa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90017bae:	4bc5      	ldr	r3, [pc, #788]	@ (90017ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90017bb0:	681b      	ldr	r3, [r3, #0]
90017bb2:	2b00      	cmp	r3, #0
90017bb4:	d03f      	beq.n	90017c36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90017bb6:	4dc4      	ldr	r5, [pc, #784]	@ (90017ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90017bb8:	4628      	mov	r0, r5
90017bba:	f7f9 f8f0 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90017bbe:	4606      	mov	r6, r0
90017bc0:	2800      	cmp	r0, #0
90017bc2:	d138      	bne.n	90017c36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90017bc4:	4628      	mov	r0, r5
90017bc6:	f7ff f98f 	bl	90016ee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017bca:	6823      	ldr	r3, [r4, #0]
90017bcc:	6829      	ldr	r1, [r5, #0]
90017bce:	4620      	mov	r0, r4
90017bd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017bd2:	686a      	ldr	r2, [r5, #4]
90017bd4:	4798      	blx	r3
90017bd6:	802e      	strh	r6, [r5, #0]
90017bd8:	806e      	strh	r6, [r5, #2]
90017bda:	80ae      	strh	r6, [r5, #4]
90017bdc:	80ee      	strh	r6, [r5, #6]
90017bde:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
90017be2:	4dba      	ldr	r5, [pc, #744]	@ (90017ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90017be4:	4640      	mov	r0, r8
90017be6:	f7ff fbe7 	bl	900173b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90017bea:	882e      	ldrh	r6, [r5, #0]
90017bec:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90017bf0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90017bf4:	4633      	mov	r3, r6
90017bf6:	42bb      	cmp	r3, r7
90017bf8:	d224      	bcs.n	90017c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90017bfa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
90017bfe:	2907      	cmp	r1, #7
90017c00:	d816      	bhi.n	90017c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90017c02:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90017c06:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90017c0a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90017c0e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90017c12:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90017c16:	1c4a      	adds	r2, r1, #1
90017c18:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90017c1c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90017c20:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90017c24:	f8a2 a002 	strh.w	sl, [r2, #2]
90017c28:	f8a2 e004 	strh.w	lr, [r2, #4]
90017c2c:	f8a2 c006 	strh.w	ip, [r2, #6]
90017c30:	3301      	adds	r3, #1
90017c32:	b29b      	uxth	r3, r3
90017c34:	e7df      	b.n	90017bf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90017c36:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017c3a:	2b00      	cmp	r3, #0
90017c3c:	d1cf      	bne.n	90017bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90017c3e:	b01b      	add	sp, #108	@ 0x6c
90017c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017c44:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90017c48:	42b3      	cmp	r3, r6
90017c4a:	d90c      	bls.n	90017c66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90017c4c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90017c50:	6822      	ldr	r2, [r4, #0]
90017c52:	3601      	adds	r6, #1
90017c54:	4620      	mov	r0, r4
90017c56:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90017c58:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90017c5c:	b2b6      	uxth	r6, r6
90017c5e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90017c62:	47b8      	blx	r7
90017c64:	e7ee      	b.n	90017c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90017c66:	4a9a      	ldr	r2, [pc, #616]	@ (90017ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90017c68:	6813      	ldr	r3, [r2, #0]
90017c6a:	4691      	mov	r9, r2
90017c6c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90017c70:	2b01      	cmp	r3, #1
90017c72:	f040 80e0 	bne.w	90017e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90017c76:	8829      	ldrh	r1, [r5, #0]
90017c78:	2600      	movs	r6, #0
90017c7a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90017c7e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90017c82:	33ae      	adds	r3, #174	@ 0xae
90017c84:	428f      	cmp	r7, r1
90017c86:	f103 0308 	add.w	r3, r3, #8
90017c8a:	dd0a      	ble.n	90017ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90017c8c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90017c90:	3101      	adds	r1, #1
90017c92:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90017c96:	4402      	add	r2, r0
90017c98:	b212      	sxth	r2, r2
90017c9a:	4296      	cmp	r6, r2
90017c9c:	bfb8      	it	lt
90017c9e:	4616      	movlt	r6, r2
90017ca0:	e7f0      	b.n	90017c84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90017ca2:	4b8c      	ldr	r3, [pc, #560]	@ (90017ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90017ca4:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 90017ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90017ca8:	881b      	ldrh	r3, [r3, #0]
90017caa:	2b0f      	cmp	r3, #15
90017cac:	bf8c      	ite	hi
90017cae:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90017cb2:	f04f 0b01 	movls.w	fp, #1
90017cb6:	2300      	movs	r3, #0
90017cb8:	e9cd 3305 	strd	r3, r3, [sp, #20]
90017cbc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90017cc0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90017cc4:	4b82      	ldr	r3, [pc, #520]	@ (90017ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90017cc6:	4438      	add	r0, r7
90017cc8:	b207      	sxth	r7, r0
90017cca:	6818      	ldr	r0, [r3, #0]
90017ccc:	42b7      	cmp	r7, r6
90017cce:	6803      	ldr	r3, [r0, #0]
90017cd0:	f280 8083 	bge.w	90017dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90017cd4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017cd8:	4798      	blx	r3
90017cda:	eb07 030b 	add.w	r3, r7, fp
90017cde:	4298      	cmp	r0, r3
90017ce0:	da07      	bge.n	90017cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90017ce2:	42b0      	cmp	r0, r6
90017ce4:	da05      	bge.n	90017cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90017ce6:	4287      	cmp	r7, r0
90017ce8:	dd6c      	ble.n	90017dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90017cea:	2f00      	cmp	r7, #0
90017cec:	dd6a      	ble.n	90017dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90017cee:	4630      	mov	r0, r6
90017cf0:	e004      	b.n	90017cfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90017cf2:	4287      	cmp	r7, r0
90017cf4:	dcfb      	bgt.n	90017cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90017cf6:	42b0      	cmp	r0, r6
90017cf8:	bfa8      	it	ge
90017cfa:	4630      	movge	r0, r6
90017cfc:	4b76      	ldr	r3, [pc, #472]	@ (90017ed8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90017cfe:	1bc0      	subs	r0, r0, r7
90017d00:	2200      	movs	r2, #0
90017d02:	f8ad 7016 	strh.w	r7, [sp, #22]
90017d06:	f9b3 3000 	ldrsh.w	r3, [r3]
90017d0a:	882f      	ldrh	r7, [r5, #0]
90017d0c:	f8ad 2014 	strh.w	r2, [sp, #20]
90017d10:	f8ad 3018 	strh.w	r3, [sp, #24]
90017d14:	f8ad 001a 	strh.w	r0, [sp, #26]
90017d18:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017d1c:	42bb      	cmp	r3, r7
90017d1e:	d9cd      	bls.n	90017cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017d20:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90017d24:	ab07      	add	r3, sp, #28
90017d26:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017d2a:	6851      	ldr	r1, [r2, #4]
90017d2c:	c303      	stmia	r3!, {r0, r1}
90017d2e:	a905      	add	r1, sp, #20
90017d30:	a807      	add	r0, sp, #28
90017d32:	f7ff f9ae 	bl	90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017d36:	2800      	cmp	r0, #0
90017d38:	d04c      	beq.n	90017dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90017d3a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90017d3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90017d42:	f8bd a020 	ldrh.w	sl, [sp, #32]
90017d46:	4686      	mov	lr, r0
90017d48:	4290      	cmp	r0, r2
90017d4a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90017d4e:	4450      	add	r0, sl
90017d50:	f8bd a018 	ldrh.w	sl, [sp, #24]
90017d54:	bfb8      	it	lt
90017d56:	4696      	movlt	lr, r2
90017d58:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017d5c:	4452      	add	r2, sl
90017d5e:	b280      	uxth	r0, r0
90017d60:	4299      	cmp	r1, r3
90017d62:	468c      	mov	ip, r1
90017d64:	b292      	uxth	r2, r2
90017d66:	9302      	str	r3, [sp, #8]
90017d68:	bfb8      	it	lt
90017d6a:	469c      	movlt	ip, r3
90017d6c:	b203      	sxth	r3, r0
90017d6e:	fa0f fa82 	sxth.w	sl, r2
90017d72:	f8ad e01c 	strh.w	lr, [sp, #28]
90017d76:	f8ad c01e 	strh.w	ip, [sp, #30]
90017d7a:	4553      	cmp	r3, sl
90017d7c:	bfb8      	it	lt
90017d7e:	4602      	movlt	r2, r0
90017d80:	9b02      	ldr	r3, [sp, #8]
90017d82:	eba2 020e 	sub.w	r2, r2, lr
90017d86:	f8ad 2020 	strh.w	r2, [sp, #32]
90017d8a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90017d8e:	4411      	add	r1, r2
90017d90:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90017d94:	4413      	add	r3, r2
90017d96:	b289      	uxth	r1, r1
90017d98:	b29b      	uxth	r3, r3
90017d9a:	b208      	sxth	r0, r1
90017d9c:	b21a      	sxth	r2, r3
90017d9e:	4290      	cmp	r0, r2
90017da0:	bfb8      	it	lt
90017da2:	460b      	movlt	r3, r1
90017da4:	eba3 030c 	sub.w	r3, r3, ip
90017da8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90017dac:	a807      	add	r0, sp, #28
90017dae:	f7f8 fff6 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90017db2:	b920      	cbnz	r0, 90017dbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90017db4:	6823      	ldr	r3, [r4, #0]
90017db6:	a907      	add	r1, sp, #28
90017db8:	4620      	mov	r0, r4
90017dba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017dbc:	4798      	blx	r3
90017dbe:	3701      	adds	r7, #1
90017dc0:	b2bf      	uxth	r7, r7
90017dc2:	e7a9      	b.n	90017d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90017dc4:	f8d9 0000 	ldr.w	r0, [r9]
90017dc8:	2101      	movs	r1, #1
90017dca:	6803      	ldr	r3, [r0, #0]
90017dcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017dd0:	4798      	blx	r3
90017dd2:	e773      	b.n	90017cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017dd4:	e9cd 0007 	strd	r0, r0, [sp, #28]
90017dd8:	e7e8      	b.n	90017dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90017dda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90017ddc:	4798      	blx	r3
90017dde:	4b3f      	ldr	r3, [pc, #252]	@ (90017edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90017de0:	781b      	ldrb	r3, [r3, #0]
90017de2:	2b00      	cmp	r3, #0
90017de4:	f43f af2b 	beq.w	90017c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90017de8:	2300      	movs	r3, #0
90017dea:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90017dee:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90017df2:	882b      	ldrh	r3, [r5, #0]
90017df4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
90017df8:	42ab      	cmp	r3, r5
90017dfa:	f4bf af20 	bcs.w	90017c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90017dfe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90017e02:	2907      	cmp	r1, #7
90017e04:	d814      	bhi.n	90017e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90017e06:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90017e0a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90017e0e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90017e12:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90017e16:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90017e1a:	1c4a      	adds	r2, r1, #1
90017e1c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90017e20:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90017e24:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90017e28:	f8a2 c002 	strh.w	ip, [r2, #2]
90017e2c:	8097      	strh	r7, [r2, #4]
90017e2e:	80d6      	strh	r6, [r2, #6]
90017e30:	3301      	adds	r3, #1
90017e32:	b29b      	uxth	r3, r3
90017e34:	e7e0      	b.n	90017df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90017e36:	2b02      	cmp	r3, #2
90017e38:	f040 8133 	bne.w	900180a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90017e3c:	4b28      	ldr	r3, [pc, #160]	@ (90017ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90017e3e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90017e42:	781b      	ldrb	r3, [r3, #0]
90017e44:	2b01      	cmp	r3, #1
90017e46:	f000 8098 	beq.w	90017f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017e4a:	882a      	ldrh	r2, [r5, #0]
90017e4c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90017e50:	3201      	adds	r2, #1
90017e52:	b292      	uxth	r2, r2
90017e54:	2900      	cmp	r1, #0
90017e56:	d0c2      	beq.n	90017dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017e58:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
90017e5c:	4694      	mov	ip, r2
90017e5e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
90017e62:	f04f 0900 	mov.w	r9, #0
90017e66:	441e      	add	r6, r3
90017e68:	b236      	sxth	r6, r6
90017e6a:	fa1f f38c 	uxth.w	r3, ip
90017e6e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90017e72:	4299      	cmp	r1, r3
90017e74:	f240 80be 	bls.w	90017ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90017e78:	4427      	add	r7, r4
90017e7a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90017e7e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90017e82:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90017e86:	4283      	cmp	r3, r0
90017e88:	f340 80a0 	ble.w	90017fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90017e8c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
90017e90:	46e1      	mov	r9, ip
90017e92:	4406      	add	r6, r0
90017e94:	b236      	sxth	r6, r6
90017e96:	429e      	cmp	r6, r3
90017e98:	bfa8      	it	ge
90017e9a:	461e      	movge	r6, r3
90017e9c:	f10c 0c01 	add.w	ip, ip, #1
90017ea0:	e7e3      	b.n	90017e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90017ea2:	d10a      	bne.n	90017eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90017ea4:	4562      	cmp	r2, ip
90017ea6:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
90017eaa:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90017eae:	bfb8      	it	lt
90017eb0:	4662      	movlt	r2, ip
90017eb2:	4288      	cmp	r0, r1
90017eb4:	bfb8      	it	lt
90017eb6:	461f      	movlt	r7, r3
90017eb8:	e086      	b.n	90017fc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017eba:	428a      	cmp	r2, r1
90017ebc:	bfb8      	it	lt
90017ebe:	460a      	movlt	r2, r1
90017ec0:	e082      	b.n	90017fc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017ec2:	bf00      	nop
90017ec4:	240234fc 	.word	0x240234fc
90017ec8:	24023508 	.word	0x24023508
90017ecc:	24000088 	.word	0x24000088
90017ed0:	240234bc 	.word	0x240234bc
90017ed4:	240234b2 	.word	0x240234b2
90017ed8:	240234b0 	.word	0x240234b0
90017edc:	240234ba 	.word	0x240234ba
90017ee0:	240234b4 	.word	0x240234b4
90017ee4:	19a1      	adds	r1, r4, r6
90017ee6:	ab07      	add	r3, sp, #28
90017ee8:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017eec:	6849      	ldr	r1, [r1, #4]
90017eee:	c303      	stmia	r3!, {r0, r1}
90017ef0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017ef4:	a807      	add	r0, sp, #28
90017ef6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017efa:	2b13      	cmp	r3, #19
90017efc:	440b      	add	r3, r1
90017efe:	bfd8      	it	le
90017f00:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90017f04:	1a9b      	subs	r3, r3, r2
90017f06:	f8ad 201c 	strh.w	r2, [sp, #28]
90017f0a:	f8ad 3020 	strh.w	r3, [sp, #32]
90017f0e:	f7ff f805 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017f12:	a807      	add	r0, sp, #28
90017f14:	f7f8 ff43 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90017f18:	bb78      	cbnz	r0, 90017f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017f1a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
90017f1e:	4426      	add	r6, r4
90017f20:	f8d9 0000 	ldr.w	r0, [r9]
90017f24:	f1bc 0f14 	cmp.w	ip, #20
90017f28:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90017f2c:	f8d0 e000 	ldr.w	lr, [r0]
90017f30:	bfa8      	it	ge
90017f32:	f04f 0c14 	movge.w	ip, #20
90017f36:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90017f3a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017f3e:	fa1f fc8c 	uxth.w	ip, ip
90017f42:	f8cd c000 	str.w	ip, [sp]
90017f46:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
90017f4a:	47d8      	blx	fp
90017f4c:	4683      	mov	fp, r0
90017f4e:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90017f52:	a807      	add	r0, sp, #28
90017f54:	f7fe ffc8 	bl	90016ee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017f58:	6823      	ldr	r3, [r4, #0]
90017f5a:	4620      	mov	r0, r4
90017f5c:	a907      	add	r1, sp, #28
90017f5e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017f60:	4798      	blx	r3
90017f62:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90017f66:	eba0 000b 	sub.w	r0, r0, fp
90017f6a:	b200      	sxth	r0, r0
90017f6c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
90017f70:	b918      	cbnz	r0, 90017f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017f72:	b2b9      	uxth	r1, r7
90017f74:	4650      	mov	r0, sl
90017f76:	f7ff fa7b 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017f7a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
90017f7e:	f1bb 0f00 	cmp.w	fp, #0
90017f82:	f43f af2c 	beq.w	90017dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017f86:	882b      	ldrh	r3, [r5, #0]
90017f88:	2700      	movs	r7, #0
90017f8a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
90017f8e:	3301      	adds	r3, #1
90017f90:	b29b      	uxth	r3, r3
90017f92:	b299      	uxth	r1, r3
90017f94:	00fe      	lsls	r6, r7, #3
90017f96:	458b      	cmp	fp, r1
90017f98:	d9a4      	bls.n	90017ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90017f9a:	4426      	add	r6, r4
90017f9c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017fa0:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
90017fa4:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90017fa8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90017fac:	4408      	add	r0, r1
90017fae:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90017fb2:	4461      	add	r1, ip
90017fb4:	b200      	sxth	r0, r0
90017fb6:	b209      	sxth	r1, r1
90017fb8:	4288      	cmp	r0, r1
90017fba:	f6bf af72 	bge.w	90017ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017fbe:	4584      	cmp	ip, r0
90017fc0:	4662      	mov	r2, ip
90017fc2:	461f      	mov	r7, r3
90017fc4:	bfb8      	it	lt
90017fc6:	4602      	movlt	r2, r0
90017fc8:	3301      	adds	r3, #1
90017fca:	e7e2      	b.n	90017f92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017fcc:	d10e      	bne.n	90017fec <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017fce:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90017fd2:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90017fd6:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90017fda:	4473      	add	r3, lr
90017fdc:	b21b      	sxth	r3, r3
90017fde:	429e      	cmp	r6, r3
90017fe0:	bfa8      	it	ge
90017fe2:	461e      	movge	r6, r3
90017fe4:	4287      	cmp	r7, r0
90017fe6:	bfb8      	it	lt
90017fe8:	46e1      	movlt	r9, ip
90017fea:	e757      	b.n	90017e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017fec:	4286      	cmp	r6, r0
90017fee:	bfa8      	it	ge
90017ff0:	4606      	movge	r6, r0
90017ff2:	e753      	b.n	90017e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017ff4:	eb0a 0007 	add.w	r0, sl, r7
90017ff8:	4427      	add	r7, r4
90017ffa:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
90017ffe:	f1bb 0f13 	cmp.w	fp, #19
90018002:	bfdc      	itt	le
90018004:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
90018008:	445e      	addle	r6, fp
9001800a:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001800e:	bfd8      	it	le
90018010:	b236      	sxthle	r6, r6
90018012:	f7f8 fec4 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90018016:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001801a:	2800      	cmp	r0, #0
9001801c:	f47f af1a 	bne.w	90017e54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90018020:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90018024:	fa1f fb8b 	uxth.w	fp, fp
90018028:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001802c:	1ab6      	subs	r6, r6, r2
9001802e:	4829      	ldr	r0, [pc, #164]	@ (900180d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90018030:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90018034:	2e14      	cmp	r6, #20
90018036:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001803a:	6800      	ldr	r0, [r0, #0]
9001803c:	bfa8      	it	ge
9001803e:	2614      	movge	r6, #20
90018040:	f8ad 101c 	strh.w	r1, [sp, #28]
90018044:	f8ad 201e 	strh.w	r2, [sp, #30]
90018048:	b289      	uxth	r1, r1
9001804a:	f8ad 3020 	strh.w	r3, [sp, #32]
9001804e:	b2b6      	uxth	r6, r6
90018050:	f8d0 c000 	ldr.w	ip, [r0]
90018054:	b292      	uxth	r2, r2
90018056:	455e      	cmp	r6, fp
90018058:	bf94      	ite	ls
9001805a:	9600      	strls	r6, [sp, #0]
9001805c:	f8cd b000 	strhi.w	fp, [sp]
90018060:	b29b      	uxth	r3, r3
90018062:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
90018066:	47b0      	blx	r6
90018068:	6823      	ldr	r3, [r4, #0]
9001806a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001806e:	a907      	add	r1, sp, #28
90018070:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018072:	4620      	mov	r0, r4
90018074:	4798      	blx	r3
90018076:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
9001807a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001807e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
90018082:	1a5b      	subs	r3, r3, r1
90018084:	440a      	add	r2, r1
90018086:	b21b      	sxth	r3, r3
90018088:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001808c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
90018090:	2b00      	cmp	r3, #0
90018092:	f47f aeda 	bne.w	90017e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90018096:	fa1f f189 	uxth.w	r1, r9
9001809a:	4650      	mov	r0, sl
9001809c:	f7ff f9e8 	bl	90017470 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900180a0:	e6d3      	b.n	90017e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900180a2:	882e      	ldrh	r6, [r5, #0]
900180a4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900180a8:	42b3      	cmp	r3, r6
900180aa:	f67f ae98 	bls.w	90017dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900180ae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
900180b2:	ab07      	add	r3, sp, #28
900180b4:	f852 0fac 	ldr.w	r0, [r2, #172]!
900180b8:	6851      	ldr	r1, [r2, #4]
900180ba:	c303      	stmia	r3!, {r0, r1}
900180bc:	a807      	add	r0, sp, #28
900180be:	f7f8 fe6e 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
900180c2:	b920      	cbnz	r0, 900180ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
900180c4:	6823      	ldr	r3, [r4, #0]
900180c6:	a907      	add	r1, sp, #28
900180c8:	4620      	mov	r0, r4
900180ca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900180cc:	4798      	blx	r3
900180ce:	3601      	adds	r6, #1
900180d0:	b2b6      	uxth	r6, r6
900180d2:	e7e7      	b.n	900180a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
900180d4:	240234bc 	.word	0x240234bc

900180d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
900180d8:	4b03      	ldr	r3, [pc, #12]	@ (900180e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
900180da:	2200      	movs	r2, #0
900180dc:	801a      	strh	r2, [r3, #0]
900180de:	805a      	strh	r2, [r3, #2]
900180e0:	809a      	strh	r2, [r3, #4]
900180e2:	80da      	strh	r2, [r3, #6]
900180e4:	4770      	bx	lr
900180e6:	bf00      	nop
900180e8:	24023508 	.word	0x24023508

900180ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900180ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900180f0:	b09d      	sub	sp, #116	@ 0x74
900180f2:	4606      	mov	r6, r0
900180f4:	4614      	mov	r4, r2
900180f6:	468a      	mov	sl, r1
900180f8:	a803      	add	r0, sp, #12
900180fa:	461d      	mov	r5, r3
900180fc:	f001 f95d 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
90018100:	6833      	ldr	r3, [r6, #0]
90018102:	4630      	mov	r0, r6
90018104:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90018108:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001810a:	4798      	blx	r3
9001810c:	6833      	ldr	r3, [r6, #0]
9001810e:	4607      	mov	r7, r0
90018110:	4630      	mov	r0, r6
90018112:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018114:	4798      	blx	r3
90018116:	462a      	mov	r2, r5
90018118:	2500      	movs	r5, #0
9001811a:	4621      	mov	r1, r4
9001811c:	9000      	str	r0, [sp, #0]
9001811e:	463b      	mov	r3, r7
90018120:	462c      	mov	r4, r5
90018122:	46a9      	mov	r9, r5
90018124:	46a8      	mov	r8, r5
90018126:	a803      	add	r0, sp, #12
90018128:	f001 f9a2 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001812c:	2300      	movs	r3, #0
9001812e:	9302      	str	r3, [sp, #8]
90018130:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018134:	429c      	cmp	r4, r3
90018136:	d002      	beq.n	9001813e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90018138:	455c      	cmp	r4, fp
9001813a:	bf18      	it	ne
9001813c:	4625      	movne	r5, r4
9001813e:	ab02      	add	r3, sp, #8
90018140:	4632      	mov	r2, r6
90018142:	4651      	mov	r1, sl
90018144:	a803      	add	r0, sp, #12
90018146:	f001 fcc7 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001814a:	4604      	mov	r4, r0
9001814c:	b108      	cbz	r0, 90018152 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001814e:	280a      	cmp	r0, #10
90018150:	d10a      	bne.n	90018168 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90018152:	45c1      	cmp	r9, r8
90018154:	bf38      	it	cc
90018156:	46c1      	movcc	r9, r8
90018158:	f04f 0800 	mov.w	r8, #0
9001815c:	2c00      	cmp	r4, #0
9001815e:	d1e5      	bne.n	9001812c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90018160:	4648      	mov	r0, r9
90018162:	b01d      	add	sp, #116	@ 0x74
90018164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018168:	9a02      	ldr	r2, [sp, #8]
9001816a:	2a00      	cmp	r2, #0
9001816c:	d0de      	beq.n	9001812c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001816e:	7b57      	ldrb	r7, [r2, #13]
90018170:	4629      	mov	r1, r5
90018172:	6833      	ldr	r3, [r6, #0]
90018174:	007f      	lsls	r7, r7, #1
90018176:	8894      	ldrh	r4, [r2, #4]
90018178:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001817a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001817e:	7a97      	ldrb	r7, [r2, #10]
90018180:	4307      	orrs	r7, r0
90018182:	4630      	mov	r0, r6
90018184:	4798      	blx	r3
90018186:	4438      	add	r0, r7
90018188:	4480      	add	r8, r0
9001818a:	fa1f f888 	uxth.w	r8, r8
9001818e:	e7e5      	b.n	9001815c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90018190 <_ZNK8touchgfx4Font12getCharWidthEt>:
90018190:	b508      	push	{r3, lr}
90018192:	6803      	ldr	r3, [r0, #0]
90018194:	68db      	ldr	r3, [r3, #12]
90018196:	4798      	blx	r3
90018198:	b128      	cbz	r0, 900181a6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001819a:	7b43      	ldrb	r3, [r0, #13]
9001819c:	7a80      	ldrb	r0, [r0, #10]
9001819e:	005b      	lsls	r3, r3, #1
900181a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900181a4:	4318      	orrs	r0, r3
900181a6:	bd08      	pop	{r3, pc}

900181a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900181a8:	b40e      	push	{r1, r2, r3}
900181aa:	b5f0      	push	{r4, r5, r6, r7, lr}
900181ac:	b09e      	sub	sp, #120	@ 0x78
900181ae:	4605      	mov	r5, r0
900181b0:	ab23      	add	r3, sp, #140	@ 0x8c
900181b2:	a805      	add	r0, sp, #20
900181b4:	f853 4b04 	ldr.w	r4, [r3], #4
900181b8:	9303      	str	r3, [sp, #12]
900181ba:	f001 f8fe 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900181be:	682b      	ldr	r3, [r5, #0]
900181c0:	4628      	mov	r0, r5
900181c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900181c4:	4798      	blx	r3
900181c6:	682b      	ldr	r3, [r5, #0]
900181c8:	4606      	mov	r6, r0
900181ca:	4628      	mov	r0, r5
900181cc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900181ce:	4798      	blx	r3
900181d0:	4633      	mov	r3, r6
900181d2:	4621      	mov	r1, r4
900181d4:	ae1e      	add	r6, sp, #120	@ 0x78
900181d6:	2400      	movs	r4, #0
900181d8:	9000      	str	r0, [sp, #0]
900181da:	9a03      	ldr	r2, [sp, #12]
900181dc:	a805      	add	r0, sp, #20
900181de:	f001 f947 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900181e2:	f846 4d68 	str.w	r4, [r6, #-104]!
900181e6:	462a      	mov	r2, r5
900181e8:	4633      	mov	r3, r6
900181ea:	4621      	mov	r1, r4
900181ec:	a805      	add	r0, sp, #20
900181ee:	f001 fc73 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900181f2:	b300      	cbz	r0, 90018236 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900181f4:	280a      	cmp	r0, #10
900181f6:	d01a      	beq.n	9001822e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900181f8:	9f04      	ldr	r7, [sp, #16]
900181fa:	b1c7      	cbz	r7, 9001822e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900181fc:	7b78      	ldrb	r0, [r7, #13]
900181fe:	7a3b      	ldrb	r3, [r7, #8]
90018200:	00c1      	lsls	r1, r0, #3
90018202:	88ea      	ldrh	r2, [r5, #6]
90018204:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018208:	4319      	orrs	r1, r3
9001820a:	0643      	lsls	r3, r0, #25
9001820c:	ea4f 1000 	mov.w	r0, r0, lsl #4
90018210:	bf48      	it	mi
90018212:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90018216:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001821a:	bf48      	it	mi
9001821c:	b219      	sxthmi	r1, r3
9001821e:	79fb      	ldrb	r3, [r7, #7]
90018220:	4303      	orrs	r3, r0
90018222:	4413      	add	r3, r2
90018224:	1a5b      	subs	r3, r3, r1
90018226:	b21b      	sxth	r3, r3
90018228:	429c      	cmp	r4, r3
9001822a:	bfb8      	it	lt
9001822c:	461c      	movlt	r4, r3
9001822e:	4633      	mov	r3, r6
90018230:	462a      	mov	r2, r5
90018232:	2100      	movs	r1, #0
90018234:	e7da      	b.n	900181ec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90018236:	b2a0      	uxth	r0, r4
90018238:	b01e      	add	sp, #120	@ 0x78
9001823a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001823e:	b003      	add	sp, #12
90018240:	4770      	bx	lr

90018242 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90018242:	7a43      	ldrb	r3, [r0, #9]
90018244:	8880      	ldrh	r0, [r0, #4]
90018246:	4418      	add	r0, r3
90018248:	b280      	uxth	r0, r0
9001824a:	4770      	bx	lr

9001824c <_ZNK8touchgfx4Font13getFontHeightEv>:
9001824c:	6803      	ldr	r3, [r0, #0]
9001824e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90018250:	4718      	bx	r3

90018252 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90018252:	b40e      	push	{r1, r2, r3}
90018254:	b570      	push	{r4, r5, r6, lr}
90018256:	b09d      	sub	sp, #116	@ 0x74
90018258:	4604      	mov	r4, r0
9001825a:	ab21      	add	r3, sp, #132	@ 0x84
9001825c:	a803      	add	r0, sp, #12
9001825e:	f853 5b04 	ldr.w	r5, [r3], #4
90018262:	9302      	str	r3, [sp, #8]
90018264:	f001 f8a9 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
90018268:	6823      	ldr	r3, [r4, #0]
9001826a:	4620      	mov	r0, r4
9001826c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001826e:	4798      	blx	r3
90018270:	6823      	ldr	r3, [r4, #0]
90018272:	4606      	mov	r6, r0
90018274:	4620      	mov	r0, r4
90018276:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018278:	2401      	movs	r4, #1
9001827a:	4798      	blx	r3
9001827c:	4633      	mov	r3, r6
9001827e:	9000      	str	r0, [sp, #0]
90018280:	4629      	mov	r1, r5
90018282:	9a02      	ldr	r2, [sp, #8]
90018284:	a803      	add	r0, sp, #12
90018286:	f001 f8f3 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001828a:	a803      	add	r0, sp, #12
9001828c:	f001 fcf0 	bl	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018290:	b2a3      	uxth	r3, r4
90018292:	b138      	cbz	r0, 900182a4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90018294:	280a      	cmp	r0, #10
90018296:	a803      	add	r0, sp, #12
90018298:	bf04      	itt	eq
9001829a:	3301      	addeq	r3, #1
9001829c:	b21c      	sxtheq	r4, r3
9001829e:	f001 fce7 	bl	90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>
900182a2:	e7f5      	b.n	90018290 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900182a4:	4618      	mov	r0, r3
900182a6:	b01d      	add	sp, #116	@ 0x74
900182a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900182ac:	b003      	add	sp, #12
900182ae:	4770      	bx	lr

900182b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900182b0:	b40e      	push	{r1, r2, r3}
900182b2:	b5f0      	push	{r4, r5, r6, r7, lr}
900182b4:	b09e      	sub	sp, #120	@ 0x78
900182b6:	4604      	mov	r4, r0
900182b8:	ab23      	add	r3, sp, #140	@ 0x8c
900182ba:	a805      	add	r0, sp, #20
900182bc:	f853 5b04 	ldr.w	r5, [r3], #4
900182c0:	9303      	str	r3, [sp, #12]
900182c2:	f001 f87a 	bl	900193ba <_ZN8touchgfx12TextProviderC1Ev>
900182c6:	6823      	ldr	r3, [r4, #0]
900182c8:	4620      	mov	r0, r4
900182ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900182cc:	4798      	blx	r3
900182ce:	6823      	ldr	r3, [r4, #0]
900182d0:	4606      	mov	r6, r0
900182d2:	4620      	mov	r0, r4
900182d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900182d6:	4798      	blx	r3
900182d8:	4633      	mov	r3, r6
900182da:	4629      	mov	r1, r5
900182dc:	9000      	str	r0, [sp, #0]
900182de:	9a03      	ldr	r2, [sp, #12]
900182e0:	a805      	add	r0, sp, #20
900182e2:	f001 f8c5 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900182e6:	ad1e      	add	r5, sp, #120	@ 0x78
900182e8:	2100      	movs	r1, #0
900182ea:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900182ee:	4622      	mov	r2, r4
900182f0:	a805      	add	r0, sp, #20
900182f2:	f845 1d68 	str.w	r1, [r5, #-104]!
900182f6:	462b      	mov	r3, r5
900182f8:	f001 fbee 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900182fc:	b1d8      	cbz	r0, 90018336 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900182fe:	280a      	cmp	r0, #10
90018300:	d012      	beq.n	90018328 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90018302:	9804      	ldr	r0, [sp, #16]
90018304:	b180      	cbz	r0, 90018328 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90018306:	7b47      	ldrb	r7, [r0, #13]
90018308:	88e2      	ldrh	r2, [r4, #6]
9001830a:	00fb      	lsls	r3, r7, #3
9001830c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90018310:	7a03      	ldrb	r3, [r0, #8]
90018312:	430b      	orrs	r3, r1
90018314:	0679      	lsls	r1, r7, #25
90018316:	bf44      	itt	mi
90018318:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001831c:	b21b      	sxthmi	r3, r3
9001831e:	1ad3      	subs	r3, r2, r3
90018320:	b21b      	sxth	r3, r3
90018322:	429e      	cmp	r6, r3
90018324:	bfa8      	it	ge
90018326:	461e      	movge	r6, r3
90018328:	462b      	mov	r3, r5
9001832a:	4622      	mov	r2, r4
9001832c:	2100      	movs	r1, #0
9001832e:	a805      	add	r0, sp, #20
90018330:	f001 fbd2 	bl	90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018334:	e7e2      	b.n	900182fc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90018336:	4630      	mov	r0, r6
90018338:	b01e      	add	sp, #120	@ 0x78
9001833a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001833e:	b003      	add	sp, #12
90018340:	4770      	bx	lr

90018342 <_ZNK8touchgfx8Drawable10invalidateEv>:
90018342:	b513      	push	{r0, r1, r4, lr}
90018344:	6803      	ldr	r3, [r0, #0]
90018346:	2400      	movs	r4, #0
90018348:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001834c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018350:	f8ad 1004 	strh.w	r1, [sp, #4]
90018354:	4669      	mov	r1, sp
90018356:	691b      	ldr	r3, [r3, #16]
90018358:	9400      	str	r4, [sp, #0]
9001835a:	f8ad 2006 	strh.w	r2, [sp, #6]
9001835e:	4798      	blx	r3
90018360:	b002      	add	sp, #8
90018362:	bd10      	pop	{r4, pc}

90018364 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90018364:	b538      	push	{r3, r4, r5, lr}
90018366:	680b      	ldr	r3, [r1, #0]
90018368:	460c      	mov	r4, r1
9001836a:	4605      	mov	r5, r0
9001836c:	68db      	ldr	r3, [r3, #12]
9001836e:	4798      	blx	r3
90018370:	6823      	ldr	r3, [r4, #0]
90018372:	4620      	mov	r0, r4
90018374:	4629      	mov	r1, r5
90018376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018378:	4798      	blx	r3
9001837a:	4628      	mov	r0, r5
9001837c:	bd38      	pop	{r3, r4, r5, pc}

9001837e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001837e:	b410      	push	{r4}
90018380:	880a      	ldrh	r2, [r1, #0]
90018382:	8884      	ldrh	r4, [r0, #4]
90018384:	4422      	add	r2, r4
90018386:	800a      	strh	r2, [r1, #0]
90018388:	884a      	ldrh	r2, [r1, #2]
9001838a:	88c4      	ldrh	r4, [r0, #6]
9001838c:	4422      	add	r2, r4
9001838e:	804a      	strh	r2, [r1, #2]
90018390:	6940      	ldr	r0, [r0, #20]
90018392:	b120      	cbz	r0, 9001839e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90018394:	6803      	ldr	r3, [r0, #0]
90018396:	f85d 4b04 	ldr.w	r4, [sp], #4
9001839a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001839c:	4718      	bx	r3
9001839e:	f85d 4b04 	ldr.w	r4, [sp], #4
900183a2:	4770      	bx	lr

900183a4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900183a4:	b570      	push	{r4, r5, r6, lr}
900183a6:	8882      	ldrh	r2, [r0, #4]
900183a8:	460c      	mov	r4, r1
900183aa:	880b      	ldrh	r3, [r1, #0]
900183ac:	4605      	mov	r5, r0
900183ae:	4413      	add	r3, r2
900183b0:	800b      	strh	r3, [r1, #0]
900183b2:	884b      	ldrh	r3, [r1, #2]
900183b4:	88c2      	ldrh	r2, [r0, #6]
900183b6:	4413      	add	r3, r2
900183b8:	804b      	strh	r3, [r1, #2]
900183ba:	1d01      	adds	r1, r0, #4
900183bc:	4620      	mov	r0, r4
900183be:	f7f8 fcab 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
900183c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900183c6:	2b00      	cmp	r3, #0
900183c8:	dd0b      	ble.n	900183e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900183ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900183ce:	2b00      	cmp	r3, #0
900183d0:	dd07      	ble.n	900183e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900183d2:	6968      	ldr	r0, [r5, #20]
900183d4:	b128      	cbz	r0, 900183e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900183d6:	6803      	ldr	r3, [r0, #0]
900183d8:	4621      	mov	r1, r4
900183da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900183dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900183e0:	4718      	bx	r3
900183e2:	bd70      	pop	{r4, r5, r6, pc}

900183e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900183e4:	b570      	push	{r4, r5, r6, lr}
900183e6:	8882      	ldrh	r2, [r0, #4]
900183e8:	460c      	mov	r4, r1
900183ea:	880b      	ldrh	r3, [r1, #0]
900183ec:	4605      	mov	r5, r0
900183ee:	4413      	add	r3, r2
900183f0:	800b      	strh	r3, [r1, #0]
900183f2:	884b      	ldrh	r3, [r1, #2]
900183f4:	88c2      	ldrh	r2, [r0, #6]
900183f6:	4413      	add	r3, r2
900183f8:	804b      	strh	r3, [r1, #2]
900183fa:	1d01      	adds	r1, r0, #4
900183fc:	4620      	mov	r0, r4
900183fe:	f7f8 fc8b 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90018402:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90018406:	2b00      	cmp	r3, #0
90018408:	dd19      	ble.n	9001843e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001840a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001840e:	2b00      	cmp	r3, #0
90018410:	dd15      	ble.n	9001843e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90018412:	6968      	ldr	r0, [r5, #20]
90018414:	b128      	cbz	r0, 90018422 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90018416:	6803      	ldr	r3, [r0, #0]
90018418:	4621      	mov	r1, r4
9001841a:	691b      	ldr	r3, [r3, #16]
9001841c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018420:	4718      	bx	r3
90018422:	4b07      	ldr	r3, [pc, #28]	@ (90018440 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90018424:	681b      	ldr	r3, [r3, #0]
90018426:	3304      	adds	r3, #4
90018428:	429d      	cmp	r5, r3
9001842a:	d108      	bne.n	9001843e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001842c:	f7fe ff10 	bl	90017250 <_ZN8touchgfx11Application11getInstanceEv>
90018430:	6803      	ldr	r3, [r0, #0]
90018432:	6821      	ldr	r1, [r4, #0]
90018434:	6862      	ldr	r2, [r4, #4]
90018436:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001843c:	4718      	bx	r3
9001843e:	bd70      	pop	{r4, r5, r6, pc}
90018440:	24023500 	.word	0x24023500

90018444 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90018444:	b570      	push	{r4, r5, r6, lr}
90018446:	4604      	mov	r4, r0
90018448:	4616      	mov	r6, r2
9001844a:	460d      	mov	r5, r1
9001844c:	b901      	cbnz	r1, 90018450 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001844e:	b192      	cbz	r2, 90018476 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90018450:	6823      	ldr	r3, [r4, #0]
90018452:	4620      	mov	r0, r4
90018454:	699b      	ldr	r3, [r3, #24]
90018456:	4798      	blx	r3
90018458:	88e2      	ldrh	r2, [r4, #6]
9001845a:	88a1      	ldrh	r1, [r4, #4]
9001845c:	4620      	mov	r0, r4
9001845e:	4432      	add	r2, r6
90018460:	4429      	add	r1, r5
90018462:	b212      	sxth	r2, r2
90018464:	b209      	sxth	r1, r1
90018466:	f7f8 ff2d 	bl	900112c4 <_ZN8touchgfx8Drawable5setXYEss>
9001846a:	6823      	ldr	r3, [r4, #0]
9001846c:	4620      	mov	r0, r4
9001846e:	699b      	ldr	r3, [r3, #24]
90018470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018474:	4718      	bx	r3
90018476:	bd70      	pop	{r4, r5, r6, pc}

90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90018478:	b510      	push	{r4, lr}
9001847a:	2300      	movs	r3, #0
9001847c:	4604      	mov	r4, r0
9001847e:	4608      	mov	r0, r1
90018480:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90018484:	8023      	strh	r3, [r4, #0]
90018486:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001848a:	8063      	strh	r3, [r4, #2]
9001848c:	6803      	ldr	r3, [r0, #0]
9001848e:	80a1      	strh	r1, [r4, #4]
90018490:	4621      	mov	r1, r4
90018492:	80e2      	strh	r2, [r4, #6]
90018494:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018496:	4798      	blx	r3
90018498:	4620      	mov	r0, r4
9001849a:	bd10      	pop	{r4, pc}

9001849c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001849c:	4770      	bx	lr

9001849e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001849e:	b510      	push	{r4, lr}
900184a0:	4604      	mov	r4, r0
900184a2:	211c      	movs	r1, #28
900184a4:	f011 fb7b 	bl	90029b9e <_ZdlPvj>
900184a8:	4620      	mov	r0, r4
900184aa:	bd10      	pop	{r4, pc}

900184ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
900184ac:	4a04      	ldr	r2, [pc, #16]	@ (900184c0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
900184ae:	6002      	str	r2, [r0, #0]
900184b0:	2200      	movs	r2, #0
900184b2:	e9c0 2201 	strd	r2, r2, [r0, #4]
900184b6:	e9c0 2203 	strd	r2, r2, [r0, #12]
900184ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
900184be:	4770      	bx	lr
900184c0:	9002e72c 	.word	0x9002e72c

900184c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
900184c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900184c8:	4604      	mov	r4, r0
900184ca:	b087      	sub	sp, #28
900184cc:	4696      	mov	lr, r2
900184ce:	6880      	ldr	r0, [r0, #8]
900184d0:	8b22      	ldrh	r2, [r4, #24]
900184d2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
900184d6:	9105      	str	r1, [sp, #20]
900184d8:	1c51      	adds	r1, r2, #1
900184da:	8321      	strh	r1, [r4, #24]
900184dc:	2101      	movs	r1, #1
900184de:	5481      	strb	r1, [r0, r2]
900184e0:	4689      	mov	r9, r1
900184e2:	f9b3 2000 	ldrsh.w	r2, [r3]
900184e6:	8b60      	ldrh	r0, [r4, #26]
900184e8:	ee06 2a90 	vmov	s13, r2
900184ec:	68e2      	ldr	r2, [r4, #12]
900184ee:	1845      	adds	r5, r0, r1
900184f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900184f4:	eb02 0280 	add.w	r2, r2, r0, lsl #2
900184f8:	8365      	strh	r5, [r4, #26]
900184fa:	edc2 6a00 	vstr	s13, [r2]
900184fe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90018502:	8b60      	ldrh	r0, [r4, #26]
90018504:	ee07 2a10 	vmov	s14, r2
90018508:	68e2      	ldr	r2, [r4, #12]
9001850a:	1845      	adds	r5, r0, r1
9001850c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018510:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90018514:	8365      	strh	r5, [r4, #26]
90018516:	1d18      	adds	r0, r3, #4
90018518:	460d      	mov	r5, r1
9001851a:	ed82 7a00 	vstr	s14, [r2]
9001851e:	f8be 2000 	ldrh.w	r2, [lr]
90018522:	9203      	str	r2, [sp, #12]
90018524:	2200      	movs	r2, #0
90018526:	4613      	mov	r3, r2
90018528:	4694      	mov	ip, r2
9001852a:	9201      	str	r2, [sp, #4]
9001852c:	9202      	str	r2, [sp, #8]
9001852e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90018532:	9e05      	ldr	r6, [sp, #20]
90018534:	f108 0701 	add.w	r7, r8, #1
90018538:	f8d4 a008 	ldr.w	sl, [r4, #8]
9001853c:	428e      	cmp	r6, r1
9001853e:	b2bf      	uxth	r7, r7
90018540:	eb0a 0b08 	add.w	fp, sl, r8
90018544:	f340 80b6 	ble.w	900186b4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
90018548:	9b03      	ldr	r3, [sp, #12]
9001854a:	f9b0 c000 	ldrsh.w	ip, [r0]
9001854e:	fa43 fb05 	asr.w	fp, r3, r5
90018552:	f00b 0b01 	and.w	fp, fp, #1
90018556:	fa5f f38b 	uxtb.w	r3, fp
9001855a:	9304      	str	r3, [sp, #16]
9001855c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90018560:	f1bb 0f00 	cmp.w	fp, #0
90018564:	d057      	beq.n	90018616 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
90018566:	ee07 ca90 	vmov	s15, ip
9001856a:	8327      	strh	r7, [r4, #24]
9001856c:	eef8 5ae7 	vcvt.f32.s32	s11, s15
90018570:	ee07 3a90 	vmov	s15, r3
90018574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018578:	f1b9 0f00 	cmp.w	r9, #0
9001857c:	d028      	beq.n	900185d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
9001857e:	f04f 0602 	mov.w	r6, #2
90018582:	f80a 6008 	strb.w	r6, [sl, r8]
90018586:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001858a:	68e7      	ldr	r7, [r4, #12]
9001858c:	f108 0901 	add.w	r9, r8, #1
90018590:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018594:	f8a4 901a 	strh.w	r9, [r4, #26]
90018598:	edc7 5a00 	vstr	s11, [r7]
9001859c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900185a0:	68e7      	ldr	r7, [r4, #12]
900185a2:	f108 0901 	add.w	r9, r8, #1
900185a6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900185aa:	f8a4 901a 	strh.w	r9, [r4, #26]
900185ae:	edc7 7a00 	vstr	s15, [r7]
900185b2:	3501      	adds	r5, #1
900185b4:	2d10      	cmp	r5, #16
900185b6:	d106      	bne.n	900185c6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
900185b8:	9d02      	ldr	r5, [sp, #8]
900185ba:	3501      	adds	r5, #1
900185bc:	9502      	str	r5, [sp, #8]
900185be:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
900185c2:	9503      	str	r5, [sp, #12]
900185c4:	2500      	movs	r5, #0
900185c6:	3101      	adds	r1, #1
900185c8:	3004      	adds	r0, #4
900185ca:	f8dd 9010 	ldr.w	r9, [sp, #16]
900185ce:	e7ae      	b.n	9001852e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
900185d0:	f04f 0605 	mov.w	r6, #5
900185d4:	ed9d 5a01 	vldr	s10, [sp, #4]
900185d8:	f80a 6008 	strb.w	r6, [sl, r8]
900185dc:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900185e0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900185e4:	68e7      	ldr	r7, [r4, #12]
900185e6:	f108 0901 	add.w	r9, r8, #1
900185ea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900185ee:	f8a4 901a 	strh.w	r9, [r4, #26]
900185f2:	ed87 5a00 	vstr	s10, [r7]
900185f6:	ee05 2a10 	vmov	s10, r2
900185fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900185fe:	68e7      	ldr	r7, [r4, #12]
90018600:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90018604:	f108 0901 	add.w	r9, r8, #1
90018608:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001860c:	f8a4 901a 	strh.w	r9, [r4, #26]
90018610:	ed87 5a00 	vstr	s10, [r7]
90018614:	e7b7      	b.n	90018586 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
90018616:	f1b9 0f00 	cmp.w	r9, #0
9001861a:	d147      	bne.n	900186ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
9001861c:	f04f 0605 	mov.w	r6, #5
90018620:	eddd 7a01 	vldr	s15, [sp, #4]
90018624:	8327      	strh	r7, [r4, #24]
90018626:	f80a 6008 	strb.w	r6, [sl, r8]
9001862a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001862e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018632:	68e7      	ldr	r7, [r4, #12]
90018634:	f108 0901 	add.w	r9, r8, #1
90018638:	9e01      	ldr	r6, [sp, #4]
9001863a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001863e:	f8a4 901a 	strh.w	r9, [r4, #26]
90018642:	4466      	add	r6, ip
90018644:	edc7 7a00 	vstr	s15, [r7]
90018648:	ee07 2a90 	vmov	s15, r2
9001864c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018650:	441a      	add	r2, r3
90018652:	68e7      	ldr	r7, [r4, #12]
90018654:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018658:	f108 0901 	add.w	r9, r8, #1
9001865c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018660:	f8a4 901a 	strh.w	r9, [r4, #26]
90018664:	edc7 7a00 	vstr	s15, [r7]
90018668:	ee07 6a90 	vmov	s15, r6
9001866c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018674:	68e7      	ldr	r7, [r4, #12]
90018676:	f108 0901 	add.w	r9, r8, #1
9001867a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001867e:	ee67 7a86 	vmul.f32	s15, s15, s12
90018682:	f8a4 901a 	strh.w	r9, [r4, #26]
90018686:	edc7 7a00 	vstr	s15, [r7]
9001868a:	ee07 2a90 	vmov	s15, r2
9001868e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018692:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018696:	68e7      	ldr	r7, [r4, #12]
90018698:	f108 0901 	add.w	r9, r8, #1
9001869c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900186a0:	ee67 7a86 	vmul.f32	s15, s15, s12
900186a4:	f8a4 901a 	strh.w	r9, [r4, #26]
900186a8:	edc7 7a00 	vstr	s15, [r7]
900186ac:	461a      	mov	r2, r3
900186ae:	f8cd c004 	str.w	ip, [sp, #4]
900186b2:	e77e      	b.n	900185b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
900186b4:	f1b9 0f00 	cmp.w	r9, #0
900186b8:	d028      	beq.n	9001870c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
900186ba:	ee07 ca90 	vmov	s15, ip
900186be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900186c2:	eef4 6a67 	vcmp.f32	s13, s15
900186c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900186ca:	d108      	bne.n	900186de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
900186cc:	ee07 3a90 	vmov	s15, r3
900186d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900186d4:	eeb4 7a67 	vcmp.f32	s14, s15
900186d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900186dc:	d016      	beq.n	9001870c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
900186de:	2302      	movs	r3, #2
900186e0:	8327      	strh	r7, [r4, #24]
900186e2:	f88b 3000 	strb.w	r3, [fp]
900186e6:	8b62      	ldrh	r2, [r4, #26]
900186e8:	68e3      	ldr	r3, [r4, #12]
900186ea:	1c51      	adds	r1, r2, #1
900186ec:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900186f0:	8361      	strh	r1, [r4, #26]
900186f2:	edc3 6a00 	vstr	s13, [r3]
900186f6:	8b62      	ldrh	r2, [r4, #26]
900186f8:	68e3      	ldr	r3, [r4, #12]
900186fa:	1c51      	adds	r1, r2, #1
900186fc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018700:	8361      	strh	r1, [r4, #26]
90018702:	ed83 7a00 	vstr	s14, [r3]
90018706:	b007      	add	sp, #28
90018708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001870c:	2305      	movs	r3, #5
9001870e:	eddd 7a01 	vldr	s15, [sp, #4]
90018712:	8327      	strh	r7, [r4, #24]
90018714:	f88b 3000 	strb.w	r3, [fp]
90018718:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001871c:	8b61      	ldrh	r1, [r4, #26]
9001871e:	68e3      	ldr	r3, [r4, #12]
90018720:	1c4d      	adds	r5, r1, #1
90018722:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90018726:	8365      	strh	r5, [r4, #26]
90018728:	edc3 7a00 	vstr	s15, [r3]
9001872c:	ee07 2a90 	vmov	s15, r2
90018730:	8b61      	ldrh	r1, [r4, #26]
90018732:	68e3      	ldr	r3, [r4, #12]
90018734:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018738:	1c4d      	adds	r5, r1, #1
9001873a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001873e:	8365      	strh	r5, [r4, #26]
90018740:	edc3 7a00 	vstr	s15, [r3]
90018744:	e7cf      	b.n	900186e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

90018748 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90018748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001874c:	4604      	mov	r4, r0
9001874e:	b08e      	sub	sp, #56	@ 0x38
90018750:	4699      	mov	r9, r3
90018752:	4688      	mov	r8, r1
90018754:	4615      	mov	r5, r2
90018756:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90018758:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
9001875c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001875e:	f7ea fed5 	bl	9000350c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90018762:	6060      	str	r0, [r4, #4]
90018764:	f1b9 0f00 	cmp.w	r9, #0
90018768:	f000 80e8 	beq.w	9001893c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001876c:	2800      	cmp	r0, #0
9001876e:	f000 80e5 	beq.w	9001893c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90018772:	a805      	add	r0, sp, #20
90018774:	f000 f8f9 	bl	9001896a <_ZN8touchgfx9Matrix3x3C1Ev>
90018778:	6833      	ldr	r3, [r6, #0]
9001877a:	4630      	mov	r0, r6
9001877c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001877e:	4798      	blx	r3
90018780:	a805      	add	r0, sp, #20
90018782:	eef0 0a40 	vmov.f32	s1, s0
90018786:	f000 f8f4 	bl	90018972 <_ZN8touchgfx9Matrix3x35scaleEff>
9001878a:	6860      	ldr	r0, [r4, #4]
9001878c:	f1ba 0f03 	cmp.w	sl, #3
90018790:	d83b      	bhi.n	9001880a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90018792:	e8df f00a 	tbb	[pc, sl]
90018796:	1002      	.short	0x1002
90018798:	9f71      	.short	0x9f71
9001879a:	6803      	ldr	r3, [r0, #0]
9001879c:	462a      	mov	r2, r5
9001879e:	4641      	mov	r1, r8
900187a0:	689b      	ldr	r3, [r3, #8]
900187a2:	4798      	blx	r3
900187a4:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
900187a8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900187ac:	ee07 7a90 	vmov	s15, r7
900187b0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
900187b4:	e026      	b.n	90018804 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
900187b6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
900187ba:	f8b8 3004 	ldrh.w	r3, [r8, #4]
900187be:	8869      	ldrh	r1, [r5, #2]
900187c0:	1a9b      	subs	r3, r3, r2
900187c2:	f8ad 2010 	strh.w	r2, [sp, #16]
900187c6:	aa03      	add	r2, sp, #12
900187c8:	1a5b      	subs	r3, r3, r1
900187ca:	4641      	mov	r1, r8
900187cc:	f8ad 300c 	strh.w	r3, [sp, #12]
900187d0:	882b      	ldrh	r3, [r5, #0]
900187d2:	f8ad 300e 	strh.w	r3, [sp, #14]
900187d6:	88ab      	ldrh	r3, [r5, #4]
900187d8:	f8ad 3012 	strh.w	r3, [sp, #18]
900187dc:	6803      	ldr	r3, [r0, #0]
900187de:	689b      	ldr	r3, [r3, #8]
900187e0:	4798      	blx	r3
900187e2:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90018944 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
900187e6:	a805      	add	r0, sp, #20
900187e8:	f000 f8e8 	bl	900189bc <_ZN8touchgfx9Matrix3x36rotateEf>
900187ec:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
900187f0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900187f2:	ee07 7a90 	vmov	s15, r7
900187f6:	1a9b      	subs	r3, r3, r2
900187f8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900187fc:	ee00 3a10 	vmov	s0, r3
90018800:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90018804:	a805      	add	r0, sp, #20
90018806:	f000 f927 	bl	90018a58 <_ZN8touchgfx9Matrix3x39translateEff>
9001880a:	6860      	ldr	r0, [r4, #4]
9001880c:	a905      	add	r1, sp, #20
9001880e:	2500      	movs	r5, #0
90018810:	f109 0602 	add.w	r6, r9, #2
90018814:	6803      	ldr	r3, [r0, #0]
90018816:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90018818:	4798      	blx	r3
9001881a:	6860      	ldr	r0, [r4, #4]
9001881c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9001881e:	6803      	ldr	r3, [r0, #0]
90018820:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90018824:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018826:	4798      	blx	r3
90018828:	6860      	ldr	r0, [r4, #4]
9001882a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
9001882e:	6803      	ldr	r3, [r0, #0]
90018830:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018832:	4798      	blx	r3
90018834:	6860      	ldr	r0, [r4, #4]
90018836:	2101      	movs	r1, #1
90018838:	6803      	ldr	r3, [r0, #0]
9001883a:	68db      	ldr	r3, [r3, #12]
9001883c:	4798      	blx	r3
9001883e:	f8b9 7000 	ldrh.w	r7, [r9]
90018842:	f104 0310 	add.w	r3, r4, #16
90018846:	61a5      	str	r5, [r4, #24]
90018848:	f104 0208 	add.w	r2, r4, #8
9001884c:	f104 0114 	add.w	r1, r4, #20
90018850:	f104 000c 	add.w	r0, r4, #12
90018854:	f7ee fb64 	bl	90006f20 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90018858:	42af      	cmp	r7, r5
9001885a:	dd60      	ble.n	9001891e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
9001885c:	8831      	ldrh	r1, [r6, #0]
9001885e:	1cb2      	adds	r2, r6, #2
90018860:	4620      	mov	r0, r4
90018862:	3501      	adds	r5, #1
90018864:	f101 030f 	add.w	r3, r1, #15
90018868:	f3c3 1307 	ubfx	r3, r3, #4, #8
9001886c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018870:	f7ff fe28 	bl	900184c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90018874:	4606      	mov	r6, r0
90018876:	e7ef      	b.n	90018858 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90018878:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001887c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018880:	8829      	ldrh	r1, [r5, #0]
90018882:	1a9b      	subs	r3, r3, r2
90018884:	f8ad 2010 	strh.w	r2, [sp, #16]
90018888:	aa03      	add	r2, sp, #12
9001888a:	1a5b      	subs	r3, r3, r1
9001888c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018890:	886d      	ldrh	r5, [r5, #2]
90018892:	f8ad 300c 	strh.w	r3, [sp, #12]
90018896:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001889a:	f8ad 1012 	strh.w	r1, [sp, #18]
9001889e:	1a5b      	subs	r3, r3, r1
900188a0:	4641      	mov	r1, r8
900188a2:	1b5b      	subs	r3, r3, r5
900188a4:	f8ad 300e 	strh.w	r3, [sp, #14]
900188a8:	6803      	ldr	r3, [r0, #0]
900188aa:	689b      	ldr	r3, [r3, #8]
900188ac:	4798      	blx	r3
900188ae:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90018948 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
900188b2:	a805      	add	r0, sp, #20
900188b4:	f000 f882 	bl	900189bc <_ZN8touchgfx9Matrix3x36rotateEf>
900188b8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900188bc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900188be:	1a9b      	subs	r3, r3, r2
900188c0:	ee00 3a90 	vmov	s1, r3
900188c4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
900188c8:	1bdb      	subs	r3, r3, r7
900188ca:	eef8 0ae0 	vcvt.f32.s32	s1, s1
900188ce:	ee00 3a10 	vmov	s0, r3
900188d2:	e795      	b.n	90018800 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
900188d4:	886b      	ldrh	r3, [r5, #2]
900188d6:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900188da:	f8ad 300c 	strh.w	r3, [sp, #12]
900188de:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900188e2:	8829      	ldrh	r1, [r5, #0]
900188e4:	1a9b      	subs	r3, r3, r2
900188e6:	f8ad 2012 	strh.w	r2, [sp, #18]
900188ea:	aa03      	add	r2, sp, #12
900188ec:	1a5b      	subs	r3, r3, r1
900188ee:	4641      	mov	r1, r8
900188f0:	f8ad 300e 	strh.w	r3, [sp, #14]
900188f4:	88eb      	ldrh	r3, [r5, #6]
900188f6:	f8ad 3010 	strh.w	r3, [sp, #16]
900188fa:	6803      	ldr	r3, [r0, #0]
900188fc:	689b      	ldr	r3, [r3, #8]
900188fe:	4798      	blx	r3
90018900:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 9001894c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90018904:	a805      	add	r0, sp, #20
90018906:	f000 f859 	bl	900189bc <_ZN8touchgfx9Matrix3x36rotateEf>
9001890a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001890e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018912:	1bdb      	subs	r3, r3, r7
90018914:	ee00 3a90 	vmov	s1, r3
90018918:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001891c:	e748      	b.n	900187b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
9001891e:	6860      	ldr	r0, [r4, #4]
90018920:	2100      	movs	r1, #0
90018922:	8b22      	ldrh	r2, [r4, #24]
90018924:	6803      	ldr	r3, [r0, #0]
90018926:	9101      	str	r1, [sp, #4]
90018928:	8b61      	ldrh	r1, [r4, #26]
9001892a:	9100      	str	r1, [sp, #0]
9001892c:	6a1d      	ldr	r5, [r3, #32]
9001892e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90018932:	47a8      	blx	r5
90018934:	6860      	ldr	r0, [r4, #4]
90018936:	6803      	ldr	r3, [r0, #0]
90018938:	69db      	ldr	r3, [r3, #28]
9001893a:	4798      	blx	r3
9001893c:	b00e      	add	sp, #56	@ 0x38
9001893e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018942:	bf00      	nop
90018944:	42b40000 	.word	0x42b40000
90018948:	43340000 	.word	0x43340000
9001894c:	43870000 	.word	0x43870000

90018950 <_ZN8touchgfx9Matrix3x35resetEv>:
90018950:	2300      	movs	r3, #0
90018952:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90018956:	6043      	str	r3, [r0, #4]
90018958:	6002      	str	r2, [r0, #0]
9001895a:	6083      	str	r3, [r0, #8]
9001895c:	60c3      	str	r3, [r0, #12]
9001895e:	6102      	str	r2, [r0, #16]
90018960:	6143      	str	r3, [r0, #20]
90018962:	6183      	str	r3, [r0, #24]
90018964:	61c3      	str	r3, [r0, #28]
90018966:	6202      	str	r2, [r0, #32]
90018968:	4770      	bx	lr

9001896a <_ZN8touchgfx9Matrix3x3C1Ev>:
9001896a:	b508      	push	{r3, lr}
9001896c:	f7ff fff0 	bl	90018950 <_ZN8touchgfx9Matrix3x35resetEv>
90018970:	bd08      	pop	{r3, pc}

90018972 <_ZN8touchgfx9Matrix3x35scaleEff>:
90018972:	edd0 7a00 	vldr	s15, [r0]
90018976:	ee67 7a80 	vmul.f32	s15, s15, s0
9001897a:	edc0 7a00 	vstr	s15, [r0]
9001897e:	edd0 7a01 	vldr	s15, [r0, #4]
90018982:	ee67 7a80 	vmul.f32	s15, s15, s0
90018986:	edc0 7a01 	vstr	s15, [r0, #4]
9001898a:	edd0 7a02 	vldr	s15, [r0, #8]
9001898e:	ee27 0a80 	vmul.f32	s0, s15, s0
90018992:	edd0 7a03 	vldr	s15, [r0, #12]
90018996:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001899a:	ed80 0a02 	vstr	s0, [r0, #8]
9001899e:	edc0 7a03 	vstr	s15, [r0, #12]
900189a2:	edd0 7a04 	vldr	s15, [r0, #16]
900189a6:	ee67 7aa0 	vmul.f32	s15, s15, s1
900189aa:	edc0 7a04 	vstr	s15, [r0, #16]
900189ae:	edd0 7a05 	vldr	s15, [r0, #20]
900189b2:	ee67 0aa0 	vmul.f32	s1, s15, s1
900189b6:	edc0 0a05 	vstr	s1, [r0, #20]
900189ba:	4770      	bx	lr

900189bc <_ZN8touchgfx9Matrix3x36rotateEf>:
900189bc:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90018a50 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
900189c0:	ee20 0a27 	vmul.f32	s0, s0, s15
900189c4:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90018a54 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
900189c8:	b510      	push	{r4, lr}
900189ca:	ed2d 8b02 	vpush	{d8}
900189ce:	eec0 8a27 	vdiv.f32	s17, s0, s15
900189d2:	4604      	mov	r4, r0
900189d4:	eeb0 0a68 	vmov.f32	s0, s17
900189d8:	f011 fa1a 	bl	90029e10 <cosf>
900189dc:	eeb0 8a40 	vmov.f32	s16, s0
900189e0:	eeb0 0a68 	vmov.f32	s0, s17
900189e4:	f011 f950 	bl	90029c88 <sinf>
900189e8:	edd4 6a03 	vldr	s13, [r4, #12]
900189ec:	edd4 4a00 	vldr	s9, [r4]
900189f0:	ee60 7a66 	vnmul.f32	s15, s0, s13
900189f4:	ed94 7a04 	vldr	s14, [r4, #16]
900189f8:	ed94 5a01 	vldr	s10, [r4, #4]
900189fc:	ee66 6a88 	vmul.f32	s13, s13, s16
90018a00:	edd4 5a02 	vldr	s11, [r4, #8]
90018a04:	eee8 7a24 	vfma.f32	s15, s16, s9
90018a08:	eee0 6a24 	vfma.f32	s13, s0, s9
90018a0c:	edc4 7a00 	vstr	s15, [r4]
90018a10:	ee60 7a47 	vnmul.f32	s15, s0, s14
90018a14:	ee27 7a08 	vmul.f32	s14, s14, s16
90018a18:	edc4 6a03 	vstr	s13, [r4, #12]
90018a1c:	eee8 7a05 	vfma.f32	s15, s16, s10
90018a20:	eea0 7a05 	vfma.f32	s14, s0, s10
90018a24:	edc4 7a01 	vstr	s15, [r4, #4]
90018a28:	edd4 7a05 	vldr	s15, [r4, #20]
90018a2c:	ed84 7a04 	vstr	s14, [r4, #16]
90018a30:	ee20 6a67 	vnmul.f32	s12, s0, s15
90018a34:	ee67 7a88 	vmul.f32	s15, s15, s16
90018a38:	eea8 6a25 	vfma.f32	s12, s16, s11
90018a3c:	eee0 7a25 	vfma.f32	s15, s0, s11
90018a40:	ecbd 8b02 	vpop	{d8}
90018a44:	ed84 6a02 	vstr	s12, [r4, #8]
90018a48:	edc4 7a05 	vstr	s15, [r4, #20]
90018a4c:	bd10      	pop	{r4, pc}
90018a4e:	bf00      	nop
90018a50:	40490fdb 	.word	0x40490fdb
90018a54:	43340000 	.word	0x43340000

90018a58 <_ZN8touchgfx9Matrix3x39translateEff>:
90018a58:	ed90 6a06 	vldr	s12, [r0, #24]
90018a5c:	edd0 7a00 	vldr	s15, [r0]
90018a60:	edd0 6a07 	vldr	s13, [r0, #28]
90018a64:	eee6 7a00 	vfma.f32	s15, s12, s0
90018a68:	ed90 7a08 	vldr	s14, [r0, #32]
90018a6c:	edc0 7a00 	vstr	s15, [r0]
90018a70:	edd0 7a01 	vldr	s15, [r0, #4]
90018a74:	eee6 7a80 	vfma.f32	s15, s13, s0
90018a78:	edc0 7a01 	vstr	s15, [r0, #4]
90018a7c:	edd0 7a02 	vldr	s15, [r0, #8]
90018a80:	eee7 7a00 	vfma.f32	s15, s14, s0
90018a84:	edc0 7a02 	vstr	s15, [r0, #8]
90018a88:	edd0 7a03 	vldr	s15, [r0, #12]
90018a8c:	eee6 7a20 	vfma.f32	s15, s12, s1
90018a90:	edc0 7a03 	vstr	s15, [r0, #12]
90018a94:	edd0 7a04 	vldr	s15, [r0, #16]
90018a98:	eee6 7aa0 	vfma.f32	s15, s13, s1
90018a9c:	edc0 7a04 	vstr	s15, [r0, #16]
90018aa0:	edd0 7a05 	vldr	s15, [r0, #20]
90018aa4:	eee7 7a20 	vfma.f32	s15, s14, s1
90018aa8:	edc0 7a05 	vstr	s15, [r0, #20]
90018aac:	4770      	bx	lr

90018aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90018aae:	edd0 6a01 	vldr	s13, [r0, #4]
90018ab2:	b084      	sub	sp, #16
90018ab4:	edd0 7a04 	vldr	s15, [r0, #16]
90018ab8:	ed90 7a03 	vldr	s14, [r0, #12]
90018abc:	ee60 7aa7 	vmul.f32	s15, s1, s15
90018ac0:	ee60 0aa6 	vmul.f32	s1, s1, s13
90018ac4:	edd0 6a00 	vldr	s13, [r0]
90018ac8:	eee7 7a00 	vfma.f32	s15, s14, s0
90018acc:	ed90 7a05 	vldr	s14, [r0, #20]
90018ad0:	eee6 0a80 	vfma.f32	s1, s13, s0
90018ad4:	ed90 0a02 	vldr	s0, [r0, #8]
90018ad8:	ee30 0a80 	vadd.f32	s0, s1, s0
90018adc:	ee77 0a87 	vadd.f32	s1, s15, s14
90018ae0:	b004      	add	sp, #16
90018ae2:	4770      	bx	lr

90018ae4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90018ae4:	b530      	push	{r4, r5, lr}
90018ae6:	8083      	strh	r3, [r0, #4]
90018ae8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90018aec:	f89d 5018 	ldrb.w	r5, [sp, #24]
90018af0:	80c3      	strh	r3, [r0, #6]
90018af2:	f89d 3010 	ldrb.w	r3, [sp, #16]
90018af6:	6141      	str	r1, [r0, #20]
90018af8:	7203      	strb	r3, [r0, #8]
90018afa:	f89d 3014 	ldrb.w	r3, [sp, #20]
90018afe:	8302      	strh	r2, [r0, #24]
90018b00:	7243      	strb	r3, [r0, #9]
90018b02:	7a83      	ldrb	r3, [r0, #10]
90018b04:	f365 0306 	bfi	r3, r5, #0, #7
90018b08:	f89d 501c 	ldrb.w	r5, [sp, #28]
90018b0c:	f365 13c7 	bfi	r3, r5, #7, #1
90018b10:	7283      	strb	r3, [r0, #10]
90018b12:	f89d 3020 	ldrb.w	r3, [sp, #32]
90018b16:	72c3      	strb	r3, [r0, #11]
90018b18:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90018b1c:	7303      	strb	r3, [r0, #12]
90018b1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90018b22:	81c3      	strh	r3, [r0, #14]
90018b24:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90018b28:	8203      	strh	r3, [r0, #16]
90018b2a:	4b01      	ldr	r3, [pc, #4]	@ (90018b30 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90018b2c:	6003      	str	r3, [r0, #0]
90018b2e:	bd30      	pop	{r4, r5, pc}
90018b30:	9002e740 	.word	0x9002e740

90018b34 <_ZNK8touchgfx9ConstFont4findEt>:
90018b34:	b5f0      	push	{r4, r5, r6, r7, lr}
90018b36:	6944      	ldr	r4, [r0, #20]
90018b38:	b3bc      	cbz	r4, 90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b3a:	88a3      	ldrh	r3, [r4, #4]
90018b3c:	8b02      	ldrh	r2, [r0, #24]
90018b3e:	1acb      	subs	r3, r1, r3
90018b40:	f102 32ff 	add.w	r2, r2, #4294967295
90018b44:	d431      	bmi.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b46:	4293      	cmp	r3, r2
90018b48:	dd0c      	ble.n	90018b64 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90018b4a:	230e      	movs	r3, #14
90018b4c:	fb03 4302 	mla	r3, r3, r2, r4
90018b50:	889b      	ldrh	r3, [r3, #4]
90018b52:	1a5b      	subs	r3, r3, r1
90018b54:	1ad3      	subs	r3, r2, r3
90018b56:	429a      	cmp	r2, r3
90018b58:	db27      	blt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b5a:	2b00      	cmp	r3, #0
90018b5c:	bfbc      	itt	lt
90018b5e:	2302      	movlt	r3, #2
90018b60:	fb92 f3f3 	sdivlt	r3, r2, r3
90018b64:	2500      	movs	r5, #0
90018b66:	260e      	movs	r6, #14
90018b68:	4295      	cmp	r5, r2
90018b6a:	dc1e      	bgt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b6c:	fb06 4003 	mla	r0, r6, r3, r4
90018b70:	8887      	ldrh	r7, [r0, #4]
90018b72:	42b9      	cmp	r1, r7
90018b74:	d01a      	beq.n	90018bac <_ZNK8touchgfx9ConstFont4findEt+0x78>
90018b76:	d20d      	bcs.n	90018b94 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90018b78:	1e5a      	subs	r2, r3, #1
90018b7a:	4295      	cmp	r5, r2
90018b7c:	dc15      	bgt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b7e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90018b82:	1a5b      	subs	r3, r3, r1
90018b84:	1ad3      	subs	r3, r2, r3
90018b86:	429a      	cmp	r2, r3
90018b88:	db0f      	blt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b8a:	429d      	cmp	r5, r3
90018b8c:	ddec      	ble.n	90018b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018b8e:	1953      	adds	r3, r2, r5
90018b90:	105b      	asrs	r3, r3, #1
90018b92:	e7e9      	b.n	90018b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018b94:	1c5d      	adds	r5, r3, #1
90018b96:	42aa      	cmp	r2, r5
90018b98:	db07      	blt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018b9a:	8a43      	ldrh	r3, [r0, #18]
90018b9c:	1acb      	subs	r3, r1, r3
90018b9e:	442b      	add	r3, r5
90018ba0:	429d      	cmp	r5, r3
90018ba2:	dc02      	bgt.n	90018baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018ba4:	429a      	cmp	r2, r3
90018ba6:	dadf      	bge.n	90018b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018ba8:	e7f1      	b.n	90018b8e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90018baa:	2000      	movs	r0, #0
90018bac:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018bae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90018bae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018bb0:	4604      	mov	r4, r0
90018bb2:	4617      	mov	r7, r2
90018bb4:	461e      	mov	r6, r3
90018bb6:	b911      	cbnz	r1, 90018bbe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90018bb8:	2500      	movs	r5, #0
90018bba:	4628      	mov	r0, r5
90018bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018bbe:	290a      	cmp	r1, #10
90018bc0:	d0fa      	beq.n	90018bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018bc2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018bc6:	4291      	cmp	r1, r2
90018bc8:	d0f6      	beq.n	90018bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018bca:	f242 020b 	movw	r2, #8203	@ 0x200b
90018bce:	4291      	cmp	r1, r2
90018bd0:	d0f2      	beq.n	90018bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018bd2:	f7ff ffaf 	bl	90018b34 <_ZNK8touchgfx9ConstFont4findEt>
90018bd6:	4605      	mov	r5, r0
90018bd8:	b950      	cbnz	r0, 90018bf0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90018bda:	6823      	ldr	r3, [r4, #0]
90018bdc:	4620      	mov	r0, r4
90018bde:	691b      	ldr	r3, [r3, #16]
90018be0:	4798      	blx	r3
90018be2:	4601      	mov	r1, r0
90018be4:	4620      	mov	r0, r4
90018be6:	f7ff ffa5 	bl	90018b34 <_ZNK8touchgfx9ConstFont4findEt>
90018bea:	4605      	mov	r5, r0
90018bec:	2800      	cmp	r0, #0
90018bee:	d0e3      	beq.n	90018bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018bf0:	6823      	ldr	r3, [r4, #0]
90018bf2:	4629      	mov	r1, r5
90018bf4:	4620      	mov	r0, r4
90018bf6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90018bf8:	4798      	blx	r3
90018bfa:	6038      	str	r0, [r7, #0]
90018bfc:	6823      	ldr	r3, [r4, #0]
90018bfe:	4620      	mov	r0, r4
90018c00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90018c02:	4798      	blx	r3
90018c04:	7030      	strb	r0, [r6, #0]
90018c06:	e7d8      	b.n	90018bba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90018c08 <_ZN8touchgfx4clzuEm>:
90018c08:	4603      	mov	r3, r0
90018c0a:	b1c8      	cbz	r0, 90018c40 <_ZN8touchgfx4clzuEm+0x38>
90018c0c:	0c02      	lsrs	r2, r0, #16
90018c0e:	0412      	lsls	r2, r2, #16
90018c10:	b9a2      	cbnz	r2, 90018c3c <_ZN8touchgfx4clzuEm+0x34>
90018c12:	0403      	lsls	r3, r0, #16
90018c14:	2010      	movs	r0, #16
90018c16:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90018c1a:	bf04      	itt	eq
90018c1c:	021b      	lsleq	r3, r3, #8
90018c1e:	3008      	addeq	r0, #8
90018c20:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90018c24:	bf04      	itt	eq
90018c26:	011b      	lsleq	r3, r3, #4
90018c28:	3004      	addeq	r0, #4
90018c2a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90018c2e:	bf04      	itt	eq
90018c30:	009b      	lsleq	r3, r3, #2
90018c32:	3002      	addeq	r0, #2
90018c34:	2b00      	cmp	r3, #0
90018c36:	db04      	blt.n	90018c42 <_ZN8touchgfx4clzuEm+0x3a>
90018c38:	3001      	adds	r0, #1
90018c3a:	4770      	bx	lr
90018c3c:	2000      	movs	r0, #0
90018c3e:	e7ea      	b.n	90018c16 <_ZN8touchgfx4clzuEm+0xe>
90018c40:	2020      	movs	r0, #32
90018c42:	4770      	bx	lr

90018c44 <_ZN8touchgfx7muldivuEmmmRm>:
90018c44:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90018c48:	460f      	mov	r7, r1
90018c4a:	4615      	mov	r5, r2
90018c4c:	461e      	mov	r6, r3
90018c4e:	4601      	mov	r1, r0
90018c50:	b100      	cbz	r0, 90018c54 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90018c52:	b927      	cbnz	r7, 90018c5e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90018c54:	2000      	movs	r0, #0
90018c56:	6030      	str	r0, [r6, #0]
90018c58:	b002      	add	sp, #8
90018c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018c5e:	f7ff ffd3 	bl	90018c08 <_ZN8touchgfx4clzuEm>
90018c62:	b980      	cbnz	r0, 90018c86 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90018c64:	4638      	mov	r0, r7
90018c66:	f7ff ffcf 	bl	90018c08 <_ZN8touchgfx4clzuEm>
90018c6a:	2800      	cmp	r0, #0
90018c6c:	dd05      	ble.n	90018c7a <_ZN8touchgfx7muldivuEmmmRm+0x36>
90018c6e:	4633      	mov	r3, r6
90018c70:	462a      	mov	r2, r5
90018c72:	4638      	mov	r0, r7
90018c74:	f7ff ffe6 	bl	90018c44 <_ZN8touchgfx7muldivuEmmmRm>
90018c78:	e7ee      	b.n	90018c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90018c7a:	f04f 33ff 	mov.w	r3, #4294967295
90018c7e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90018c82:	6033      	str	r3, [r6, #0]
90018c84:	e7e8      	b.n	90018c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90018c86:	fa37 f800 	lsrs.w	r8, r7, r0
90018c8a:	fb07 f301 	mul.w	r3, r7, r1
90018c8e:	d105      	bne.n	90018c9c <_ZN8touchgfx7muldivuEmmmRm+0x58>
90018c90:	fbb3 f0f5 	udiv	r0, r3, r5
90018c94:	fb05 3510 	mls	r5, r5, r0, r3
90018c98:	6035      	str	r5, [r6, #0]
90018c9a:	e7dd      	b.n	90018c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90018c9c:	2301      	movs	r3, #1
90018c9e:	fa01 fa00 	lsl.w	sl, r1, r0
90018ca2:	462a      	mov	r2, r5
90018ca4:	fa03 f000 	lsl.w	r0, r3, r0
90018ca8:	4633      	mov	r3, r6
90018caa:	fbba f9f5 	udiv	r9, sl, r5
90018cae:	3801      	subs	r0, #1
90018cb0:	fb08 f409 	mul.w	r4, r8, r9
90018cb4:	4038      	ands	r0, r7
90018cb6:	f7ff ffc5 	bl	90018c44 <_ZN8touchgfx7muldivuEmmmRm>
90018cba:	462a      	mov	r2, r5
90018cbc:	4607      	mov	r7, r0
90018cbe:	ab01      	add	r3, sp, #4
90018cc0:	fb05 a119 	mls	r1, r5, r9, sl
90018cc4:	4640      	mov	r0, r8
90018cc6:	f7ff ffbd 	bl	90018c44 <_ZN8touchgfx7muldivuEmmmRm>
90018cca:	9b01      	ldr	r3, [sp, #4]
90018ccc:	6832      	ldr	r2, [r6, #0]
90018cce:	441a      	add	r2, r3
90018cd0:	fbb2 f3f5 	udiv	r3, r2, r5
90018cd4:	441c      	add	r4, r3
90018cd6:	fb05 2513 	mls	r5, r5, r3, r2
90018cda:	443c      	add	r4, r7
90018cdc:	4420      	add	r0, r4
90018cde:	e7db      	b.n	90018c98 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90018ce0 <_ZN8touchgfx6muldivElllRl>:
90018ce0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90018ce2:	2800      	cmp	r0, #0
90018ce4:	461e      	mov	r6, r3
90018ce6:	bfba      	itte	lt
90018ce8:	4240      	neglt	r0, r0
90018cea:	f04f 34ff 	movlt.w	r4, #4294967295
90018cee:	2401      	movge	r4, #1
90018cf0:	2900      	cmp	r1, #0
90018cf2:	bfbc      	itt	lt
90018cf4:	4249      	neglt	r1, r1
90018cf6:	4264      	neglt	r4, r4
90018cf8:	2a00      	cmp	r2, #0
90018cfa:	bfb6      	itet	lt
90018cfc:	4265      	neglt	r5, r4
90018cfe:	4625      	movge	r5, r4
90018d00:	4252      	neglt	r2, r2
90018d02:	4288      	cmp	r0, r1
90018d04:	bfc2      	ittt	gt
90018d06:	4603      	movgt	r3, r0
90018d08:	4608      	movgt	r0, r1
90018d0a:	4619      	movgt	r1, r3
90018d0c:	ab01      	add	r3, sp, #4
90018d0e:	f7ff ff99 	bl	90018c44 <_ZN8touchgfx7muldivuEmmmRm>
90018d12:	9b01      	ldr	r3, [sp, #4]
90018d14:	4368      	muls	r0, r5
90018d16:	435c      	muls	r4, r3
90018d18:	6034      	str	r4, [r6, #0]
90018d1a:	b002      	add	sp, #8
90018d1c:	bd70      	pop	{r4, r5, r6, pc}

90018d1e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018d1e:	2000      	movs	r0, #0
90018d20:	4770      	bx	lr

90018d22 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90018d22:	2001      	movs	r0, #1
90018d24:	4770      	bx	lr

90018d26 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90018d26:	2002      	movs	r0, #2
90018d28:	4770      	bx	lr

90018d2a <_ZN8touchgfx6ScreenD1Ev>:
90018d2a:	4770      	bx	lr

90018d2c <_ZN8touchgfx6Screen11setupScreenEv>:
90018d2c:	4770      	bx	lr

90018d2e <_ZN8touchgfx12GestureEventD1Ev>:
90018d2e:	4770      	bx	lr

90018d30 <_ZN8touchgfx9DragEventD1Ev>:
90018d30:	4770      	bx	lr

90018d32 <_ZN8touchgfx10ClickEventD1Ev>:
90018d32:	4770      	bx	lr

90018d34 <_ZN8touchgfx10ClickEventD0Ev>:
90018d34:	b510      	push	{r4, lr}
90018d36:	4604      	mov	r4, r0
90018d38:	210c      	movs	r1, #12
90018d3a:	f010 ff30 	bl	90029b9e <_ZdlPvj>
90018d3e:	4620      	mov	r0, r4
90018d40:	bd10      	pop	{r4, pc}

90018d42 <_ZN8touchgfx9DragEventD0Ev>:
90018d42:	b510      	push	{r4, lr}
90018d44:	4604      	mov	r4, r0
90018d46:	2110      	movs	r1, #16
90018d48:	f010 ff29 	bl	90029b9e <_ZdlPvj>
90018d4c:	4620      	mov	r0, r4
90018d4e:	bd10      	pop	{r4, pc}

90018d50 <_ZN8touchgfx12GestureEventD0Ev>:
90018d50:	b510      	push	{r4, lr}
90018d52:	4604      	mov	r4, r0
90018d54:	210c      	movs	r1, #12
90018d56:	f010 ff22 	bl	90029b9e <_ZdlPvj>
90018d5a:	4620      	mov	r0, r4
90018d5c:	bd10      	pop	{r4, pc}

90018d5e <_ZN8touchgfx6ScreenD0Ev>:
90018d5e:	b510      	push	{r4, lr}
90018d60:	4604      	mov	r4, r0
90018d62:	213c      	movs	r1, #60	@ 0x3c
90018d64:	f010 ff1b 	bl	90029b9e <_ZdlPvj>
90018d68:	4620      	mov	r0, r4
90018d6a:	bd10      	pop	{r4, pc}

90018d6c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90018d6c:	b530      	push	{r4, r5, lr}
90018d6e:	460d      	mov	r5, r1
90018d70:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90018d72:	b087      	sub	sp, #28
90018d74:	4604      	mov	r4, r0
90018d76:	b301      	cbz	r1, 90018dba <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90018d78:	a801      	add	r0, sp, #4
90018d7a:	f7ff fb7d 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018d7e:	892a      	ldrh	r2, [r5, #8]
90018d80:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90018d84:	7928      	ldrb	r0, [r5, #4]
90018d86:	1ad2      	subs	r2, r2, r3
90018d88:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90018d8a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018d8e:	441a      	add	r2, r3
90018d90:	896b      	ldrh	r3, [r5, #10]
90018d92:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90018d96:	f88d 0010 	strb.w	r0, [sp, #16]
90018d9a:	1b5b      	subs	r3, r3, r5
90018d9c:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90018d9e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018da0:	442b      	add	r3, r5
90018da2:	4d07      	ldr	r5, [pc, #28]	@ (90018dc0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90018da4:	f8ad 1012 	strh.w	r1, [sp, #18]
90018da8:	a903      	add	r1, sp, #12
90018daa:	9503      	str	r5, [sp, #12]
90018dac:	f8ad 2014 	strh.w	r2, [sp, #20]
90018db0:	f8ad 3016 	strh.w	r3, [sp, #22]
90018db4:	6803      	ldr	r3, [r0, #0]
90018db6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018db8:	4798      	blx	r3
90018dba:	b007      	add	sp, #28
90018dbc:	bd30      	pop	{r4, r5, pc}
90018dbe:	bf00      	nop
90018dc0:	9002e7d0 	.word	0x9002e7d0

90018dc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90018dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018dc8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90018dca:	b08a      	sub	sp, #40	@ 0x28
90018dcc:	4604      	mov	r4, r0
90018dce:	460d      	mov	r5, r1
90018dd0:	b113      	cbz	r3, 90018dd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90018dd2:	790b      	ldrb	r3, [r1, #4]
90018dd4:	2b00      	cmp	r3, #0
90018dd6:	d044      	beq.n	90018e62 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018dd8:	f104 0804 	add.w	r8, r4, #4
90018ddc:	a803      	add	r0, sp, #12
90018dde:	4641      	mov	r1, r8
90018de0:	f7ff fb4a 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018de4:	792b      	ldrb	r3, [r5, #4]
90018de6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018dea:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018dee:	b983      	cbnz	r3, 90018e12 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018df0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90018df4:	892a      	ldrh	r2, [r5, #8]
90018df6:	88e9      	ldrh	r1, [r5, #6]
90018df8:	4640      	mov	r0, r8
90018dfa:	1b92      	subs	r2, r2, r6
90018dfc:	9301      	str	r3, [sp, #4]
90018dfe:	1bc9      	subs	r1, r1, r7
90018e00:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90018e04:	b212      	sxth	r2, r2
90018e06:	9300      	str	r3, [sp, #0]
90018e08:	b209      	sxth	r1, r1
90018e0a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90018e0e:	f7f7 fea1 	bl	90010b54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90018e12:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90018e14:	b329      	cbz	r1, 90018e62 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018e16:	a805      	add	r0, sp, #20
90018e18:	f7ff fb2e 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018e1c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018e20:	792b      	ldrb	r3, [r5, #4]
90018e22:	a907      	add	r1, sp, #28
90018e24:	1abf      	subs	r7, r7, r2
90018e26:	88ea      	ldrh	r2, [r5, #6]
90018e28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018e2a:	4417      	add	r7, r2
90018e2c:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90018e2e:	f88d 3020 	strb.w	r3, [sp, #32]
90018e32:	4417      	add	r7, r2
90018e34:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90018e38:	1ab6      	subs	r6, r6, r2
90018e3a:	892a      	ldrh	r2, [r5, #8]
90018e3c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90018e40:	4416      	add	r6, r2
90018e42:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018e44:	4416      	add	r6, r2
90018e46:	4a08      	ldr	r2, [pc, #32]	@ (90018e68 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90018e48:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90018e4c:	2600      	movs	r6, #0
90018e4e:	9207      	str	r2, [sp, #28]
90018e50:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90018e54:	6803      	ldr	r3, [r0, #0]
90018e56:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018e58:	4798      	blx	r3
90018e5a:	792b      	ldrb	r3, [r5, #4]
90018e5c:	b10b      	cbz	r3, 90018e62 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018e5e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90018e62:	b00a      	add	sp, #40	@ 0x28
90018e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018e68:	9002e7a8 	.word	0x9002e7a8

90018e6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90018e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018e70:	460c      	mov	r4, r1
90018e72:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90018e74:	b088      	sub	sp, #32
90018e76:	4605      	mov	r5, r0
90018e78:	2900      	cmp	r1, #0
90018e7a:	d06d      	beq.n	90018f58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90018e7c:	4668      	mov	r0, sp
90018e7e:	f7ff fafb 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018e82:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90018e84:	88e3      	ldrh	r3, [r4, #6]
90018e86:	f9bd 8000 	ldrsh.w	r8, [sp]
90018e8a:	440b      	add	r3, r1
90018e8c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90018e90:	b21b      	sxth	r3, r3
90018e92:	4543      	cmp	r3, r8
90018e94:	db31      	blt.n	90018efa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018e96:	f8bd c004 	ldrh.w	ip, [sp, #4]
90018e9a:	44c4      	add	ip, r8
90018e9c:	fa0f fc8c 	sxth.w	ip, ip
90018ea0:	4563      	cmp	r3, ip
90018ea2:	da2a      	bge.n	90018efa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018ea4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
90018ea6:	8926      	ldrh	r6, [r4, #8]
90018ea8:	4416      	add	r6, r2
90018eaa:	b236      	sxth	r6, r6
90018eac:	42be      	cmp	r6, r7
90018eae:	db24      	blt.n	90018efa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018eb0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90018eb4:	4438      	add	r0, r7
90018eb6:	b200      	sxth	r0, r0
90018eb8:	4286      	cmp	r6, r0
90018eba:	da1e      	bge.n	90018efa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018ebc:	8963      	ldrh	r3, [r4, #10]
90018ebe:	4419      	add	r1, r3
90018ec0:	b209      	sxth	r1, r1
90018ec2:	4541      	cmp	r1, r8
90018ec4:	db08      	blt.n	90018ed8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018ec6:	4561      	cmp	r1, ip
90018ec8:	da06      	bge.n	90018ed8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018eca:	89a3      	ldrh	r3, [r4, #12]
90018ecc:	441a      	add	r2, r3
90018ece:	b212      	sxth	r2, r2
90018ed0:	42ba      	cmp	r2, r7
90018ed2:	db01      	blt.n	90018ed8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018ed4:	4282      	cmp	r2, r0
90018ed6:	db10      	blt.n	90018efa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018ed8:	4b21      	ldr	r3, [pc, #132]	@ (90018f60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90018eda:	a904      	add	r1, sp, #16
90018edc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018ede:	9304      	str	r3, [sp, #16]
90018ee0:	2302      	movs	r3, #2
90018ee2:	f88d 3014 	strb.w	r3, [sp, #20]
90018ee6:	2300      	movs	r3, #0
90018ee8:	f8ad 3016 	strh.w	r3, [sp, #22]
90018eec:	f8ad 3018 	strh.w	r3, [sp, #24]
90018ef0:	f8ad 301a 	strh.w	r3, [sp, #26]
90018ef4:	6803      	ldr	r3, [r0, #0]
90018ef6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018ef8:	4798      	blx	r3
90018efa:	1d29      	adds	r1, r5, #4
90018efc:	a802      	add	r0, sp, #8
90018efe:	f7ff fabb 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018f02:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90018f06:	88e0      	ldrh	r0, [r4, #6]
90018f08:	eba3 0808 	sub.w	r8, r3, r8
90018f0c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018f10:	7921      	ldrb	r1, [r4, #4]
90018f12:	fa1f f888 	uxth.w	r8, r8
90018f16:	1bdf      	subs	r7, r3, r7
90018f18:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90018f1c:	b2bb      	uxth	r3, r7
90018f1e:	4440      	add	r0, r8
90018f20:	8922      	ldrh	r2, [r4, #8]
90018f22:	8967      	ldrh	r7, [r4, #10]
90018f24:	4460      	add	r0, ip
90018f26:	89a4      	ldrh	r4, [r4, #12]
90018f28:	441a      	add	r2, r3
90018f2a:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90018f2c:	44b8      	add	r8, r7
90018f2e:	4423      	add	r3, r4
90018f30:	f8ad 0016 	strh.w	r0, [sp, #22]
90018f34:	4432      	add	r2, r6
90018f36:	44e0      	add	r8, ip
90018f38:	4433      	add	r3, r6
90018f3a:	4c0a      	ldr	r4, [pc, #40]	@ (90018f64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018f3c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018f3e:	f88d 1014 	strb.w	r1, [sp, #20]
90018f42:	a904      	add	r1, sp, #16
90018f44:	9404      	str	r4, [sp, #16]
90018f46:	f8ad 2018 	strh.w	r2, [sp, #24]
90018f4a:	f8ad 801a 	strh.w	r8, [sp, #26]
90018f4e:	f8ad 301c 	strh.w	r3, [sp, #28]
90018f52:	6803      	ldr	r3, [r0, #0]
90018f54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018f56:	4798      	blx	r3
90018f58:	b008      	add	sp, #32
90018f5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018f5e:	bf00      	nop
90018f60:	9002e7a8 	.word	0x9002e7a8
90018f64:	9002e7bc 	.word	0x9002e7bc

90018f68 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90018f68:	b537      	push	{r0, r1, r2, r4, r5, lr}
90018f6a:	4604      	mov	r4, r0
90018f6c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90018f70:	3201      	adds	r2, #1
90018f72:	d112      	bne.n	90018f9a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90018f74:	2500      	movs	r5, #0
90018f76:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90018f7a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018f7e:	6803      	ldr	r3, [r0, #0]
90018f80:	9500      	str	r5, [sp, #0]
90018f82:	466d      	mov	r5, sp
90018f84:	f8ad 1004 	strh.w	r1, [sp, #4]
90018f88:	f8ad 2006 	strh.w	r2, [sp, #6]
90018f8c:	4629      	mov	r1, r5
90018f8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018f90:	4798      	blx	r3
90018f92:	e895 0003 	ldmia.w	r5, {r0, r1}
90018f96:	e884 0003 	stmia.w	r4, {r0, r1}
90018f9a:	4620      	mov	r0, r4
90018f9c:	b003      	add	sp, #12
90018f9e:	bd30      	pop	{r4, r5, pc}

90018fa0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90018fa0:	b513      	push	{r0, r1, r4, lr}
90018fa2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90018fa6:	4604      	mov	r4, r0
90018fa8:	3301      	adds	r3, #1
90018faa:	d109      	bne.n	90018fc0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90018fac:	4601      	mov	r1, r0
90018fae:	4668      	mov	r0, sp
90018fb0:	f7ff fa62 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018fb4:	f8bd 3000 	ldrh.w	r3, [sp]
90018fb8:	8423      	strh	r3, [r4, #32]
90018fba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018fbe:	8463      	strh	r3, [r4, #34]	@ 0x22
90018fc0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90018fc4:	b002      	add	sp, #8
90018fc6:	bd10      	pop	{r4, pc}

90018fc8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90018fc8:	b513      	push	{r0, r1, r4, lr}
90018fca:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90018fce:	4604      	mov	r4, r0
90018fd0:	3301      	adds	r3, #1
90018fd2:	d109      	bne.n	90018fe8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90018fd4:	4601      	mov	r1, r0
90018fd6:	4668      	mov	r0, sp
90018fd8:	f7ff fa4e 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018fdc:	f8bd 3000 	ldrh.w	r3, [sp]
90018fe0:	8423      	strh	r3, [r4, #32]
90018fe2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018fe6:	8463      	strh	r3, [r4, #34]	@ 0x22
90018fe8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90018fec:	b002      	add	sp, #8
90018fee:	bd10      	pop	{r4, pc}

90018ff0 <_ZN8touchgfx6ScreenC1Ev>:
90018ff0:	b570      	push	{r4, r5, r6, lr}
90018ff2:	4b17      	ldr	r3, [pc, #92]	@ (90019050 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90018ff4:	4605      	mov	r5, r0
90018ff6:	4a17      	ldr	r2, [pc, #92]	@ (90019054 <_ZN8touchgfx6ScreenC1Ev+0x64>)
90018ff8:	2101      	movs	r1, #1
90018ffa:	f845 3b04 	str.w	r3, [r5], #4
90018ffe:	2300      	movs	r3, #0
90019000:	6042      	str	r2, [r0, #4]
90019002:	4604      	mov	r4, r0
90019004:	8103      	strh	r3, [r0, #8]
90019006:	8143      	strh	r3, [r0, #10]
90019008:	8183      	strh	r3, [r0, #12]
9001900a:	81c3      	strh	r3, [r0, #14]
9001900c:	8203      	strh	r3, [r0, #16]
9001900e:	8243      	strh	r3, [r0, #18]
90019010:	8283      	strh	r3, [r0, #20]
90019012:	82c3      	strh	r3, [r0, #22]
90019014:	6203      	str	r3, [r0, #32]
90019016:	8483      	strh	r3, [r0, #36]	@ 0x24
90019018:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001901a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001901e:	6343      	str	r3, [r0, #52]	@ 0x34
90019020:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90019024:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90019028:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001902c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90019030:	4b09      	ldr	r3, [pc, #36]	@ (90019058 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90019032:	4628      	mov	r0, r5
90019034:	f9b3 6000 	ldrsh.w	r6, [r3]
90019038:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001903a:	4a08      	ldr	r2, [pc, #32]	@ (9001905c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001903c:	f9b2 1000 	ldrsh.w	r1, [r2]
90019040:	4798      	blx	r3
90019042:	6863      	ldr	r3, [r4, #4]
90019044:	4628      	mov	r0, r5
90019046:	4631      	mov	r1, r6
90019048:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001904a:	4798      	blx	r3
9001904c:	4620      	mov	r0, r4
9001904e:	bd70      	pop	{r4, r5, r6, pc}
90019050:	9002e7e4 	.word	0x9002e7e4
90019054:	9002e16c 	.word	0x9002e16c
90019058:	240234b2 	.word	0x240234b2
9001905c:	240234b0 	.word	0x240234b0

90019060 <_ZN8touchgfx6Screen4drawEv>:
90019060:	4b09      	ldr	r3, [pc, #36]	@ (90019088 <_ZN8touchgfx6Screen4drawEv+0x28>)
90019062:	b507      	push	{r0, r1, r2, lr}
90019064:	f9b3 2000 	ldrsh.w	r2, [r3]
90019068:	2100      	movs	r1, #0
9001906a:	4b08      	ldr	r3, [pc, #32]	@ (9001908c <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001906c:	9100      	str	r1, [sp, #0]
9001906e:	4669      	mov	r1, sp
90019070:	f9b3 3000 	ldrsh.w	r3, [r3]
90019074:	f8ad 2004 	strh.w	r2, [sp, #4]
90019078:	f8ad 3006 	strh.w	r3, [sp, #6]
9001907c:	6803      	ldr	r3, [r0, #0]
9001907e:	689b      	ldr	r3, [r3, #8]
90019080:	4798      	blx	r3
90019082:	b003      	add	sp, #12
90019084:	f85d fb04 	ldr.w	pc, [sp], #4
90019088:	240234b0 	.word	0x240234b0
9001908c:	240234b2 	.word	0x240234b2

90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90019090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019094:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019098:	b089      	sub	sp, #36	@ 0x24
9001909a:	4680      	mov	r8, r0
9001909c:	460c      	mov	r4, r1
9001909e:	2b00      	cmp	r3, #0
900190a0:	4615      	mov	r5, r2
900190a2:	dd0e      	ble.n	900190c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900190a4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900190a8:	2b00      	cmp	r3, #0
900190aa:	dd0a      	ble.n	900190c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900190ac:	4628      	mov	r0, r5
900190ae:	f7ff ff5b 	bl	90018f68 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900190b2:	4621      	mov	r1, r4
900190b4:	f7fd ffed 	bl	90017092 <_ZNK8touchgfx4Rect9intersectERKS0_>
900190b8:	69eb      	ldr	r3, [r5, #28]
900190ba:	b928      	cbnz	r0, 900190c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900190bc:	461d      	mov	r5, r3
900190be:	2b00      	cmp	r3, #0
900190c0:	d1f4      	bne.n	900190ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900190c2:	b009      	add	sp, #36	@ 0x24
900190c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900190c8:	ae04      	add	r6, sp, #16
900190ca:	2b00      	cmp	r3, #0
900190cc:	f000 80b5 	beq.w	9001923a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900190d0:	682b      	ldr	r3, [r5, #0]
900190d2:	4629      	mov	r1, r5
900190d4:	a802      	add	r0, sp, #8
900190d6:	68db      	ldr	r3, [r3, #12]
900190d8:	4798      	blx	r3
900190da:	4628      	mov	r0, r5
900190dc:	f7ff ff60 	bl	90018fa0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900190e0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
900190e4:	4407      	add	r7, r0
900190e6:	4628      	mov	r0, r5
900190e8:	f7ff ff6e 	bl	90018fc8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900190ec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900190f0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900190f4:	b23f      	sxth	r7, r7
900190f6:	4418      	add	r0, r3
900190f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900190fc:	4621      	mov	r1, r4
900190fe:	f8ad 2014 	strh.w	r2, [sp, #20]
90019102:	f8ad 0012 	strh.w	r0, [sp, #18]
90019106:	4630      	mov	r0, r6
90019108:	f8ad 3016 	strh.w	r3, [sp, #22]
9001910c:	f8ad 7010 	strh.w	r7, [sp, #16]
90019110:	f7f7 fe02 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90019114:	4628      	mov	r0, r5
90019116:	f7ff ff27 	bl	90018f68 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001911a:	ab06      	add	r3, sp, #24
9001911c:	4602      	mov	r2, r0
9001911e:	e896 0003 	ldmia.w	r6, {r0, r1}
90019122:	e883 0003 	stmia.w	r3, {r0, r1}
90019126:	4611      	mov	r1, r2
90019128:	4618      	mov	r0, r3
9001912a:	f7f7 fdf5 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
9001912e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019132:	f9b4 1000 	ldrsh.w	r1, [r4]
90019136:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001913a:	4299      	cmp	r1, r3
9001913c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019140:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019144:	d10b      	bne.n	9001915e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019146:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001914a:	4552      	cmp	r2, sl
9001914c:	d107      	bne.n	9001915e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001914e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019152:	455a      	cmp	r2, fp
90019154:	d103      	bne.n	9001915e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019156:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001915a:	454a      	cmp	r2, r9
9001915c:	d06d      	beq.n	9001923a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001915e:	f1bb 0f00 	cmp.w	fp, #0
90019162:	dd65      	ble.n	90019230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019164:	f1b9 0f00 	cmp.w	r9, #0
90019168:	dd62      	ble.n	90019230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001916a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001916e:	fa1f f08a 	uxth.w	r0, sl
90019172:	4552      	cmp	r2, sl
90019174:	9000      	str	r0, [sp, #0]
90019176:	da12      	bge.n	9001919e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019178:	9301      	str	r3, [sp, #4]
9001917a:	9b00      	ldr	r3, [sp, #0]
9001917c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019180:	f8ad 2012 	strh.w	r2, [sp, #18]
90019184:	1a9a      	subs	r2, r3, r2
90019186:	f8ad 1010 	strh.w	r1, [sp, #16]
9001918a:	4631      	mov	r1, r6
9001918c:	f8ad 0014 	strh.w	r0, [sp, #20]
90019190:	4640      	mov	r0, r8
90019192:	f8ad 2016 	strh.w	r2, [sp, #22]
90019196:	69ea      	ldr	r2, [r5, #28]
90019198:	f7ff ff7a 	bl	90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001919c:	9b01      	ldr	r3, [sp, #4]
9001919e:	f9b4 2000 	ldrsh.w	r2, [r4]
900191a2:	b29f      	uxth	r7, r3
900191a4:	429a      	cmp	r2, r3
900191a6:	da0d      	bge.n	900191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900191a8:	f8ad 2010 	strh.w	r2, [sp, #16]
900191ac:	1aba      	subs	r2, r7, r2
900191ae:	f8ad a012 	strh.w	sl, [sp, #18]
900191b2:	4631      	mov	r1, r6
900191b4:	f8ad 2014 	strh.w	r2, [sp, #20]
900191b8:	4640      	mov	r0, r8
900191ba:	f8ad 9016 	strh.w	r9, [sp, #22]
900191be:	69ea      	ldr	r2, [r5, #28]
900191c0:	f7ff ff66 	bl	90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900191c4:	8822      	ldrh	r2, [r4, #0]
900191c6:	445f      	add	r7, fp
900191c8:	88a3      	ldrh	r3, [r4, #4]
900191ca:	b2bf      	uxth	r7, r7
900191cc:	4413      	add	r3, r2
900191ce:	b23a      	sxth	r2, r7
900191d0:	b29b      	uxth	r3, r3
900191d2:	b219      	sxth	r1, r3
900191d4:	4291      	cmp	r1, r2
900191d6:	dd0d      	ble.n	900191f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
900191d8:	1bdb      	subs	r3, r3, r7
900191da:	f8ad 2010 	strh.w	r2, [sp, #16]
900191de:	f8ad a012 	strh.w	sl, [sp, #18]
900191e2:	4631      	mov	r1, r6
900191e4:	f8ad 3014 	strh.w	r3, [sp, #20]
900191e8:	4640      	mov	r0, r8
900191ea:	f8ad 9016 	strh.w	r9, [sp, #22]
900191ee:	69ea      	ldr	r2, [r5, #28]
900191f0:	f7ff ff4e 	bl	90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900191f4:	88e2      	ldrh	r2, [r4, #6]
900191f6:	8863      	ldrh	r3, [r4, #2]
900191f8:	4413      	add	r3, r2
900191fa:	9a00      	ldr	r2, [sp, #0]
900191fc:	444a      	add	r2, r9
900191fe:	b29b      	uxth	r3, r3
90019200:	fa1f f982 	uxth.w	r9, r2
90019204:	b219      	sxth	r1, r3
90019206:	fa0f f289 	sxth.w	r2, r9
9001920a:	428a      	cmp	r2, r1
9001920c:	da15      	bge.n	9001923a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001920e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019212:	eba3 0309 	sub.w	r3, r3, r9
90019216:	f9b4 0000 	ldrsh.w	r0, [r4]
9001921a:	f8ad 1014 	strh.w	r1, [sp, #20]
9001921e:	4631      	mov	r1, r6
90019220:	f8ad 0010 	strh.w	r0, [sp, #16]
90019224:	f8ad 2012 	strh.w	r2, [sp, #18]
90019228:	f8ad 3016 	strh.w	r3, [sp, #22]
9001922c:	69ea      	ldr	r2, [r5, #28]
9001922e:	e001      	b.n	90019234 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019230:	69ea      	ldr	r2, [r5, #28]
90019232:	4621      	mov	r1, r4
90019234:	4640      	mov	r0, r8
90019236:	f7ff ff2b 	bl	90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001923a:	4628      	mov	r0, r5
9001923c:	f7ff fe94 	bl	90018f68 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019240:	6861      	ldr	r1, [r4, #4]
90019242:	4602      	mov	r2, r0
90019244:	4633      	mov	r3, r6
90019246:	6820      	ldr	r0, [r4, #0]
90019248:	c303      	stmia	r3!, {r0, r1}
9001924a:	4611      	mov	r1, r2
9001924c:	4630      	mov	r0, r6
9001924e:	f7f7 fd63 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90019252:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019256:	2b00      	cmp	r3, #0
90019258:	f77f af33 	ble.w	900190c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001925c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019260:	2b00      	cmp	r3, #0
90019262:	f77f af2e 	ble.w	900190c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019266:	4628      	mov	r0, r5
90019268:	f7ff fe9a 	bl	90018fa0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001926c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019270:	1a18      	subs	r0, r3, r0
90019272:	f8ad 0010 	strh.w	r0, [sp, #16]
90019276:	4628      	mov	r0, r5
90019278:	f7ff fea6 	bl	90018fc8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001927c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90019280:	4631      	mov	r1, r6
90019282:	1a18      	subs	r0, r3, r0
90019284:	f8ad 0012 	strh.w	r0, [sp, #18]
90019288:	4628      	mov	r0, r5
9001928a:	682b      	ldr	r3, [r5, #0]
9001928c:	689b      	ldr	r3, [r3, #8]
9001928e:	4798      	blx	r3
90019290:	e717      	b.n	900190c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90019292 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90019292:	b570      	push	{r4, r5, r6, lr}
90019294:	1d06      	adds	r6, r0, #4
90019296:	b086      	sub	sp, #24
90019298:	460c      	mov	r4, r1
9001929a:	2300      	movs	r3, #0
9001929c:	4631      	mov	r1, r6
9001929e:	4605      	mov	r5, r0
900192a0:	a802      	add	r0, sp, #8
900192a2:	9301      	str	r3, [sp, #4]
900192a4:	f7ff f8e8 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900192a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900192ac:	8822      	ldrh	r2, [r4, #0]
900192ae:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900192b2:	1ad2      	subs	r2, r2, r3
900192b4:	8863      	ldrh	r3, [r4, #2]
900192b6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900192ba:	1a5b      	subs	r3, r3, r1
900192bc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900192c0:	f8ad 2010 	strh.w	r2, [sp, #16]
900192c4:	aa01      	add	r2, sp, #4
900192c6:	f8ad 0014 	strh.w	r0, [sp, #20]
900192ca:	4630      	mov	r0, r6
900192cc:	f8ad 1016 	strh.w	r1, [sp, #22]
900192d0:	a904      	add	r1, sp, #16
900192d2:	f8ad 3012 	strh.w	r3, [sp, #18]
900192d6:	f7f7 fdf7 	bl	90010ec8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
900192da:	9a01      	ldr	r2, [sp, #4]
900192dc:	b11a      	cbz	r2, 900192e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
900192de:	4621      	mov	r1, r4
900192e0:	4628      	mov	r0, r5
900192e2:	f7ff fed5 	bl	90019090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900192e6:	b006      	add	sp, #24
900192e8:	bd70      	pop	{r4, r5, r6, pc}

900192ea <_ZN8touchgfx6Screen4drawERNS_4RectE>:
900192ea:	4602      	mov	r2, r0
900192ec:	b530      	push	{r4, r5, lr}
900192ee:	4604      	mov	r4, r0
900192f0:	b085      	sub	sp, #20
900192f2:	f852 0f08 	ldr.w	r0, [r2, #8]!
900192f6:	460d      	mov	r5, r1
900192f8:	466b      	mov	r3, sp
900192fa:	6851      	ldr	r1, [r2, #4]
900192fc:	c303      	stmia	r3!, {r0, r1}
900192fe:	4629      	mov	r1, r5
90019300:	4668      	mov	r0, sp
90019302:	f7f7 fd09 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90019306:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001930a:	b12b      	cbz	r3, 90019318 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001930c:	4669      	mov	r1, sp
9001930e:	4620      	mov	r0, r4
90019310:	f7ff ffbf 	bl	90019292 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019314:	b005      	add	sp, #20
90019316:	bd30      	pop	{r4, r5, pc}
90019318:	3404      	adds	r4, #4
9001931a:	a802      	add	r0, sp, #8
9001931c:	4621      	mov	r1, r4
9001931e:	f7ff f8ab 	bl	90018478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019322:	f8bd 3000 	ldrh.w	r3, [sp]
90019326:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001932a:	4669      	mov	r1, sp
9001932c:	4620      	mov	r0, r4
9001932e:	1a9b      	subs	r3, r3, r2
90019330:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019334:	f8ad 3000 	strh.w	r3, [sp]
90019338:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001933c:	1a9b      	subs	r3, r3, r2
9001933e:	f8ad 3002 	strh.w	r3, [sp, #2]
90019342:	f7f7 fd88 	bl	90010e56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019346:	e7e5      	b.n	90019314 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019348 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019348:	460b      	mov	r3, r1
9001934a:	680a      	ldr	r2, [r1, #0]
9001934c:	1d01      	adds	r1, r0, #4
9001934e:	6992      	ldr	r2, [r2, #24]
90019350:	4618      	mov	r0, r3
90019352:	4710      	bx	r2

90019354 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90019354:	4298      	cmp	r0, r3
90019356:	d200      	bcs.n	9001935a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90019358:	b913      	cbnz	r3, 90019360 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001935a:	440a      	add	r2, r1
9001935c:	b210      	sxth	r0, r2
9001935e:	4770      	bx	lr
90019360:	ee07 0a90 	vmov	s15, r0
90019364:	eef8 6a67 	vcvt.f32.u32	s13, s15
90019368:	ee07 3a90 	vmov	s15, r3
9001936c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019370:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90019374:	ee07 2a90 	vmov	s15, r2
90019378:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001937c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90019380:	ee07 1a90 	vmov	s15, r1
90019384:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019388:	ee37 7a66 	vsub.f32	s14, s14, s13
9001938c:	ee67 5a07 	vmul.f32	s11, s14, s14
90019390:	eee5 6a87 	vfma.f32	s13, s11, s14
90019394:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90019398:	eee6 7a26 	vfma.f32	s15, s12, s13
9001939c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900193a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900193a4:	bfcc      	ite	gt
900193a6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900193aa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
900193ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900193b2:	ee17 3a90 	vmov	r3, s15
900193b6:	b218      	sxth	r0, r3
900193b8:	4770      	bx	lr

900193ba <_ZN8touchgfx12TextProviderC1Ev>:
900193ba:	b538      	push	{r3, r4, r5, lr}
900193bc:	2500      	movs	r5, #0
900193be:	2302      	movs	r3, #2
900193c0:	4604      	mov	r4, r0
900193c2:	220e      	movs	r2, #14
900193c4:	7403      	strb	r3, [r0, #16]
900193c6:	4629      	mov	r1, r5
900193c8:	6145      	str	r5, [r0, #20]
900193ca:	7605      	strb	r5, [r0, #24]
900193cc:	83c5      	strh	r5, [r0, #30]
900193ce:	8405      	strh	r5, [r0, #32]
900193d0:	86c5      	strh	r5, [r0, #54]	@ 0x36
900193d2:	8705      	strh	r5, [r0, #56]	@ 0x38
900193d4:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900193d6:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900193da:	e9c0 5500 	strd	r5, r5, [r0]
900193de:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900193e2:	304c      	adds	r0, #76	@ 0x4c
900193e4:	f011 f9f0 	bl	9002a7c8 <memset>
900193e8:	2301      	movs	r3, #1
900193ea:	4620      	mov	r0, r4
900193ec:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900193f0:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900193f4:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900193f8:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900193fc:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
90019400:	f7ed fd1a 	bl	90006e38 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90019404:	4620      	mov	r0, r4
90019406:	bd38      	pop	{r3, r4, r5, pc}

90019408 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90019408:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001940a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001940e:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
90019410:	fab0 f080 	clz	r0, r0
90019414:	0940      	lsrs	r0, r0, #5
90019416:	4770      	bx	lr

90019418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90019418:	b530      	push	{r4, r5, lr}
9001941a:	2500      	movs	r5, #0
9001941c:	2401      	movs	r4, #1
9001941e:	6843      	ldr	r3, [r0, #4]
90019420:	b913      	cbnz	r3, 90019428 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90019422:	6803      	ldr	r3, [r0, #0]
90019424:	b313      	cbz	r3, 9001946c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019426:	6043      	str	r3, [r0, #4]
90019428:	7e03      	ldrb	r3, [r0, #24]
9001942a:	b143      	cbz	r3, 9001943e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001942c:	6943      	ldr	r3, [r0, #20]
9001942e:	b12b      	cbz	r3, 9001943c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019430:	881a      	ldrh	r2, [r3, #0]
90019432:	b11a      	cbz	r2, 9001943c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019434:	1c9a      	adds	r2, r3, #2
90019436:	6142      	str	r2, [r0, #20]
90019438:	8818      	ldrh	r0, [r3, #0]
9001943a:	bd30      	pop	{r4, r5, pc}
9001943c:	7605      	strb	r5, [r0, #24]
9001943e:	6843      	ldr	r3, [r0, #4]
90019440:	8819      	ldrh	r1, [r3, #0]
90019442:	b199      	cbz	r1, 9001946c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019444:	1c9a      	adds	r2, r3, #2
90019446:	2902      	cmp	r1, #2
90019448:	6042      	str	r2, [r0, #4]
9001944a:	d1f5      	bne.n	90019438 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001944c:	7c03      	ldrb	r3, [r0, #16]
9001944e:	2b01      	cmp	r3, #1
90019450:	d8e5      	bhi.n	9001941e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019452:	1c5a      	adds	r2, r3, #1
90019454:	3302      	adds	r3, #2
90019456:	7402      	strb	r2, [r0, #16]
90019458:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001945c:	6143      	str	r3, [r0, #20]
9001945e:	2b00      	cmp	r3, #0
90019460:	d0dd      	beq.n	9001941e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019462:	881b      	ldrh	r3, [r3, #0]
90019464:	2b00      	cmp	r3, #0
90019466:	d0da      	beq.n	9001941e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019468:	7604      	strb	r4, [r0, #24]
9001946a:	e7d8      	b.n	9001941e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001946c:	2000      	movs	r0, #0
9001946e:	e7e4      	b.n	9001943a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90019470:	6001      	str	r1, [r0, #0]
90019472:	2100      	movs	r1, #0
90019474:	b430      	push	{r4, r5}
90019476:	6041      	str	r1, [r0, #4]
90019478:	6815      	ldr	r5, [r2, #0]
9001947a:	6085      	str	r5, [r0, #8]
9001947c:	6852      	ldr	r2, [r2, #4]
9001947e:	6443      	str	r3, [r0, #68]	@ 0x44
90019480:	9b02      	ldr	r3, [sp, #8]
90019482:	60c2      	str	r2, [r0, #12]
90019484:	7401      	strb	r1, [r0, #16]
90019486:	6141      	str	r1, [r0, #20]
90019488:	7601      	strb	r1, [r0, #24]
9001948a:	8701      	strh	r1, [r0, #56]	@ 0x38
9001948c:	8401      	strh	r1, [r0, #32]
9001948e:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90019492:	6483      	str	r3, [r0, #72]	@ 0x48
90019494:	bc30      	pop	{r4, r5}
90019496:	f7ed bccf 	b.w	90006e38 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001949a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001949a:	b408      	push	{r3}
9001949c:	b510      	push	{r4, lr}
9001949e:	b085      	sub	sp, #20
900194a0:	ac07      	add	r4, sp, #28
900194a2:	f854 3b04 	ldr.w	r3, [r4], #4
900194a6:	9300      	str	r3, [sp, #0]
900194a8:	4613      	mov	r3, r2
900194aa:	4622      	mov	r2, r4
900194ac:	9403      	str	r4, [sp, #12]
900194ae:	f7ff ffdf 	bl	90019470 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900194b2:	b005      	add	sp, #20
900194b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900194b8:	b001      	add	sp, #4
900194ba:	4770      	bx	lr

900194bc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900194bc:	b5f0      	push	{r4, r5, r6, r7, lr}
900194be:	4605      	mov	r5, r0
900194c0:	4608      	mov	r0, r1
900194c2:	b1f1      	cbz	r1, 90019502 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900194c4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
900194c8:	460b      	mov	r3, r1
900194ca:	f101 0708 	add.w	r7, r1, #8
900194ce:	4622      	mov	r2, r4
900194d0:	6818      	ldr	r0, [r3, #0]
900194d2:	3308      	adds	r3, #8
900194d4:	f853 1c04 	ldr.w	r1, [r3, #-4]
900194d8:	4626      	mov	r6, r4
900194da:	42bb      	cmp	r3, r7
900194dc:	c603      	stmia	r6!, {r0, r1}
900194de:	4634      	mov	r4, r6
900194e0:	d1f6      	bne.n	900194d0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900194e2:	6818      	ldr	r0, [r3, #0]
900194e4:	6030      	str	r0, [r6, #0]
900194e6:	4610      	mov	r0, r2
900194e8:	889b      	ldrh	r3, [r3, #4]
900194ea:	80b3      	strh	r3, [r6, #4]
900194ec:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900194f0:	015b      	lsls	r3, r3, #5
900194f2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900194f6:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900194fa:	430b      	orrs	r3, r1
900194fc:	425b      	negs	r3, r3
900194fe:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90019502:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019504 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90019504:	b538      	push	{r3, r4, r5, lr}
90019506:	460c      	mov	r4, r1
90019508:	6811      	ldr	r1, [r2, #0]
9001950a:	4610      	mov	r0, r2
9001950c:	68cd      	ldr	r5, [r1, #12]
9001950e:	4619      	mov	r1, r3
90019510:	47a8      	blx	r5
90019512:	2800      	cmp	r0, #0
90019514:	bf08      	it	eq
90019516:	4620      	moveq	r0, r4
90019518:	bd38      	pop	{r3, r4, r5, pc}
	...

9001951c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001951c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019520:	468c      	mov	ip, r1
90019522:	4605      	mov	r5, r0
90019524:	4614      	mov	r4, r2
90019526:	b942      	cbnz	r2, 9001953a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90019528:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001952c:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
90019530:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
90019534:	4620      	mov	r0, r4
90019536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001953a:	7b50      	ldrb	r0, [r2, #13]
9001953c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90019540:	8893      	ldrh	r3, [r2, #4]
90019542:	0106      	lsls	r6, r0, #4
90019544:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90019548:	79e6      	ldrb	r6, [r4, #7]
9001954a:	4316      	orrs	r6, r2
9001954c:	185a      	adds	r2, r3, r1
9001954e:	b291      	uxth	r1, r2
90019550:	b2b7      	uxth	r7, r6
90019552:	291d      	cmp	r1, #29
90019554:	d87f      	bhi.n	90019656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019556:	2201      	movs	r2, #1
90019558:	10f6      	asrs	r6, r6, #3
9001955a:	408a      	lsls	r2, r1
9001955c:	498b      	ldr	r1, [pc, #556]	@ (9001978c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001955e:	420a      	tst	r2, r1
90019560:	d12e      	bne.n	900195c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90019562:	f412 7f60 	tst.w	r2, #896	@ 0x380
90019566:	d076      	beq.n	90019656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019568:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001956c:	4623      	mov	r3, r4
9001956e:	f104 0e08 	add.w	lr, r4, #8
90019572:	4614      	mov	r4, r2
90019574:	6818      	ldr	r0, [r3, #0]
90019576:	3308      	adds	r3, #8
90019578:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001957c:	4694      	mov	ip, r2
9001957e:	4573      	cmp	r3, lr
90019580:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019584:	4662      	mov	r2, ip
90019586:	d1f5      	bne.n	90019574 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019588:	6818      	ldr	r0, [r3, #0]
9001958a:	f8cc 0000 	str.w	r0, [ip]
9001958e:	889b      	ldrh	r3, [r3, #4]
90019590:	f8ac 3004 	strh.w	r3, [ip, #4]
90019594:	b2b3      	uxth	r3, r6
90019596:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001959a:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001959e:	1aca      	subs	r2, r1, r3
900195a0:	1bcf      	subs	r7, r1, r7
900195a2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
900195a6:	b292      	uxth	r2, r2
900195a8:	1afb      	subs	r3, r7, r3
900195aa:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
900195ae:	10d2      	asrs	r2, r2, #3
900195b0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
900195b4:	4302      	orrs	r2, r0
900195b6:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
900195ba:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
900195be:	e7b9      	b.n	90019534 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900195c0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900195c4:	4623      	mov	r3, r4
900195c6:	f104 0808 	add.w	r8, r4, #8
900195ca:	4614      	mov	r4, r2
900195cc:	6818      	ldr	r0, [r3, #0]
900195ce:	3308      	adds	r3, #8
900195d0:	f853 1c04 	ldr.w	r1, [r3, #-4]
900195d4:	4696      	mov	lr, r2
900195d6:	4543      	cmp	r3, r8
900195d8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900195dc:	4672      	mov	r2, lr
900195de:	d1f5      	bne.n	900195cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900195e0:	6818      	ldr	r0, [r3, #0]
900195e2:	f8ce 0000 	str.w	r0, [lr]
900195e6:	889b      	ldrh	r3, [r3, #4]
900195e8:	f8ae 3004 	strh.w	r3, [lr, #4]
900195ec:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
900195ee:	eb05 0343 	add.w	r3, r5, r3, lsl #1
900195f2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
900195f4:	f640 6333 	movw	r3, #3635	@ 0xe33
900195f8:	4299      	cmp	r1, r3
900195fa:	d111      	bne.n	90019620 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
900195fc:	f8dc 3000 	ldr.w	r3, [ip]
90019600:	4660      	mov	r0, ip
90019602:	68db      	ldr	r3, [r3, #12]
90019604:	4798      	blx	r3
90019606:	7b41      	ldrb	r1, [r0, #13]
90019608:	00cb      	lsls	r3, r1, #3
9001960a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001960e:	7a03      	ldrb	r3, [r0, #8]
90019610:	4313      	orrs	r3, r2
90019612:	064a      	lsls	r2, r1, #25
90019614:	bf44      	itt	mi
90019616:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001961a:	b21b      	sxthmi	r3, r3
9001961c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019620:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
90019624:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
90019628:	443b      	add	r3, r7
9001962a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001962e:	4433      	add	r3, r6
90019630:	b29b      	uxth	r3, r3
90019632:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019636:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001963a:	10db      	asrs	r3, r3, #3
9001963c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019640:	4313      	orrs	r3, r2
90019642:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90019646:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001964a:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001964e:	1a9b      	subs	r3, r3, r2
90019650:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90019654:	e76e      	b.n	90019534 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90019656:	f023 0204 	bic.w	r2, r3, #4
9001965a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001965e:	428a      	cmp	r2, r1
90019660:	d003      	beq.n	9001966a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90019662:	f640 621d 	movw	r2, #3613	@ 0xe1d
90019666:	4293      	cmp	r3, r2
90019668:	d138      	bne.n	900196dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001966a:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001966e:	4622      	mov	r2, r4
90019670:	f104 0808 	add.w	r8, r4, #8
90019674:	4634      	mov	r4, r6
90019676:	6810      	ldr	r0, [r2, #0]
90019678:	3208      	adds	r2, #8
9001967a:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001967e:	46b6      	mov	lr, r6
90019680:	4542      	cmp	r2, r8
90019682:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019686:	4676      	mov	r6, lr
90019688:	d1f5      	bne.n	90019676 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001968a:	6810      	ldr	r0, [r2, #0]
9001968c:	3b01      	subs	r3, #1
9001968e:	4621      	mov	r1, r4
90019690:	f8ce 0000 	str.w	r0, [lr]
90019694:	b29b      	uxth	r3, r3
90019696:	8892      	ldrh	r2, [r2, #4]
90019698:	4628      	mov	r0, r5
9001969a:	f8ae 2004 	strh.w	r2, [lr, #4]
9001969e:	4662      	mov	r2, ip
900196a0:	f7ff ff30 	bl	90019504 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900196a4:	7b41      	ldrb	r1, [r0, #13]
900196a6:	00cb      	lsls	r3, r1, #3
900196a8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900196ac:	7a03      	ldrb	r3, [r0, #8]
900196ae:	0648      	lsls	r0, r1, #25
900196b0:	ea43 0302 	orr.w	r3, r3, r2
900196b4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
900196b8:	bf44      	itt	mi
900196ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900196be:	b21b      	sxthmi	r3, r3
900196c0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900196c4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900196c8:	005b      	lsls	r3, r3, #1
900196ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900196ce:	4313      	orrs	r3, r2
900196d0:	115a      	asrs	r2, r3, #5
900196d2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900196d6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
900196da:	e047      	b.n	9001976c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
900196dc:	00c2      	lsls	r2, r0, #3
900196de:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900196e2:	7a22      	ldrb	r2, [r4, #8]
900196e4:	430a      	orrs	r2, r1
900196e6:	0641      	lsls	r1, r0, #25
900196e8:	f640 6109 	movw	r1, #3593	@ 0xe09
900196ec:	bf44      	itt	mi
900196ee:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
900196f2:	b212      	sxthmi	r2, r2
900196f4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900196f8:	f023 0210 	bic.w	r2, r3, #16
900196fc:	428a      	cmp	r2, r1
900196fe:	d003      	beq.n	90019708 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
90019700:	f640 6213 	movw	r2, #3603	@ 0xe13
90019704:	4293      	cmp	r3, r2
90019706:	d13e      	bne.n	90019786 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
90019708:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001970c:	f104 0808 	add.w	r8, r4, #8
90019710:	4696      	mov	lr, r2
90019712:	6820      	ldr	r0, [r4, #0]
90019714:	3408      	adds	r4, #8
90019716:	f854 1c04 	ldr.w	r1, [r4, #-4]
9001971a:	4616      	mov	r6, r2
9001971c:	4544      	cmp	r4, r8
9001971e:	c603      	stmia	r6!, {r0, r1}
90019720:	4632      	mov	r2, r6
90019722:	d1f6      	bne.n	90019712 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90019724:	6820      	ldr	r0, [r4, #0]
90019726:	6030      	str	r0, [r6, #0]
90019728:	4628      	mov	r0, r5
9001972a:	88a1      	ldrh	r1, [r4, #4]
9001972c:	4674      	mov	r4, lr
9001972e:	80b1      	strh	r1, [r6, #4]
90019730:	4671      	mov	r1, lr
90019732:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90019736:	0076      	lsls	r6, r6, #1
90019738:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001973c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
90019740:	4316      	orrs	r6, r2
90019742:	f640 6213 	movw	r2, #3603	@ 0xe13
90019746:	4293      	cmp	r3, r2
90019748:	4662      	mov	r2, ip
9001974a:	bf16      	itet	ne
9001974c:	f103 33ff 	addne.w	r3, r3, #4294967295
90019750:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90019754:	b29b      	uxthne	r3, r3
90019756:	f7ff fed5 	bl	90019504 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001975a:	7b43      	ldrb	r3, [r0, #13]
9001975c:	7a82      	ldrb	r2, [r0, #10]
9001975e:	005b      	lsls	r3, r3, #1
90019760:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019764:	4313      	orrs	r3, r2
90019766:	1af6      	subs	r6, r6, r3
90019768:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
9001976c:	7b61      	ldrb	r1, [r4, #13]
9001976e:	00cb      	lsls	r3, r1, #3
90019770:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019774:	7a23      	ldrb	r3, [r4, #8]
90019776:	4313      	orrs	r3, r2
90019778:	064a      	lsls	r2, r1, #25
9001977a:	bf44      	itt	mi
9001977c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019780:	b21b      	sxthmi	r3, r3
90019782:	1bdb      	subs	r3, r3, r7
90019784:	e719      	b.n	900195ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90019786:	2300      	movs	r3, #0
90019788:	e7a5      	b.n	900196d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001978a:	bf00      	nop
9001978c:	3fc00079 	.word	0x3fc00079

90019790 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90019790:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019794:	4604      	mov	r4, r0
90019796:	b942      	cbnz	r2, 900197aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90019798:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001979c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
900197a0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
900197a4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
900197a8:	e047      	b.n	9001983a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
900197aa:	7b51      	ldrb	r1, [r2, #13]
900197ac:	8893      	ldrh	r3, [r2, #4]
900197ae:	010d      	lsls	r5, r1, #4
900197b0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
900197b4:	79d5      	ldrb	r5, [r2, #7]
900197b6:	4305      	orrs	r5, r0
900197b8:	2d04      	cmp	r5, #4
900197ba:	bfcc      	ite	gt
900197bc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
900197c0:	f04f 0e01 	movle.w	lr, #1
900197c4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
900197c8:	f200 80ab 	bhi.w	90019922 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
900197cc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
900197d0:	4283      	cmp	r3, r0
900197d2:	d216      	bcs.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197d4:	f240 605b 	movw	r0, #1627	@ 0x65b
900197d8:	4283      	cmp	r3, r0
900197da:	d859      	bhi.n	90019890 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900197dc:	f240 6057 	movw	r0, #1623	@ 0x657
900197e0:	4283      	cmp	r3, r0
900197e2:	d20e      	bcs.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197e4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
900197e8:	d24a      	bcs.n	90019880 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
900197ea:	f240 604e 	movw	r0, #1614	@ 0x64e
900197ee:	4283      	cmp	r3, r0
900197f0:	d207      	bcs.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197f2:	f240 601a 	movw	r0, #1562	@ 0x61a
900197f6:	4283      	cmp	r3, r0
900197f8:	d02a      	beq.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900197fa:	d821      	bhi.n	90019840 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900197fc:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90019800:	d35b      	bcc.n	900198ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019802:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90019806:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001980a:	f040 80d0 	bne.w	900199ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001980e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90019812:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019816:	f040 80ca 	bne.w	900199ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001981a:	00cb      	lsls	r3, r1, #3
9001981c:	0649      	lsls	r1, r1, #25
9001981e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019822:	7a13      	ldrb	r3, [r2, #8]
90019824:	ea43 0300 	orr.w	r3, r3, r0
90019828:	bf44      	itt	mi
9001982a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001982e:	b21b      	sxthmi	r3, r3
90019830:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019834:	1b5d      	subs	r5, r3, r5
90019836:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001983a:	4610      	mov	r0, r2
9001983c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019840:	f240 604b 	movw	r0, #1611	@ 0x64b
90019844:	4283      	cmp	r3, r0
90019846:	d338      	bcc.n	900198ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019848:	f240 604c 	movw	r0, #1612	@ 0x64c
9001984c:	4283      	cmp	r3, r0
9001984e:	d9d8      	bls.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019850:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90019854:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90019858:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001985c:	f040 80f3 	bne.w	90019a46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019860:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019864:	f040 80ef 	bne.w	90019a46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019868:	00cb      	lsls	r3, r1, #3
9001986a:	064e      	lsls	r6, r1, #25
9001986c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019870:	7a13      	ldrb	r3, [r2, #8]
90019872:	ea43 0300 	orr.w	r3, r3, r0
90019876:	bf44      	itt	mi
90019878:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001987c:	b21b      	sxthmi	r3, r3
9001987e:	e7d9      	b.n	90019834 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90019880:	f240 6054 	movw	r0, #1620	@ 0x654
90019884:	4283      	cmp	r3, r0
90019886:	d8e3      	bhi.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019888:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001988c:	d9e0      	bls.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001988e:	e7b8      	b.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019890:	f240 6074 	movw	r0, #1652	@ 0x674
90019894:	4283      	cmp	r3, r0
90019896:	d0b4      	beq.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019898:	d82d      	bhi.n	900198f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001989a:	f240 605e 	movw	r0, #1630	@ 0x65e
9001989e:	4283      	cmp	r3, r0
900198a0:	d804      	bhi.n	900198ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
900198a2:	f240 605d 	movw	r0, #1629	@ 0x65d
900198a6:	4283      	cmp	r3, r0
900198a8:	d3d2      	bcc.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900198aa:	e7aa      	b.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900198ac:	f240 605f 	movw	r0, #1631	@ 0x65f
900198b0:	4283      	cmp	r3, r0
900198b2:	d0cd      	beq.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900198b4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
900198b8:	d0a3      	beq.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900198ba:	00cb      	lsls	r3, r1, #3
900198bc:	0649      	lsls	r1, r1, #25
900198be:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900198c2:	7a13      	ldrb	r3, [r2, #8]
900198c4:	ea43 0300 	orr.w	r3, r3, r0
900198c8:	bf44      	itt	mi
900198ca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900198ce:	b21b      	sxthmi	r3, r3
900198d0:	1b5d      	subs	r5, r3, r5
900198d2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900198d6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900198da:	7b53      	ldrb	r3, [r2, #13]
900198dc:	015b      	lsls	r3, r3, #5
900198de:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900198e2:	7993      	ldrb	r3, [r2, #6]
900198e4:	430b      	orrs	r3, r1
900198e6:	2105      	movs	r1, #5
900198e8:	005b      	lsls	r3, r3, #1
900198ea:	fb93 f3f1 	sdiv	r3, r3, r1
900198ee:	f992 1009 	ldrsb.w	r1, [r2, #9]
900198f2:	440b      	add	r3, r1
900198f4:	e756      	b.n	900197a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
900198f6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
900198fa:	4283      	cmp	r3, r0
900198fc:	d809      	bhi.n	90019912 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
900198fe:	f240 60df 	movw	r0, #1759	@ 0x6df
90019902:	4283      	cmp	r3, r0
90019904:	f4bf af7d 	bcs.w	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019908:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001990c:	2b05      	cmp	r3, #5
9001990e:	d8d4      	bhi.n	900198ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019910:	e777      	b.n	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019912:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90019916:	4283      	cmp	r3, r0
90019918:	d09a      	beq.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001991a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001991e:	4283      	cmp	r3, r0
90019920:	e7ca      	b.n	900198b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90019922:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90019926:	d22b      	bcs.n	90019980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90019928:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001992c:	4283      	cmp	r3, r0
9001992e:	d28f      	bcs.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019930:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90019934:	4283      	cmp	r3, r0
90019936:	d816      	bhi.n	90019966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90019938:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001993c:	4283      	cmp	r3, r0
9001993e:	f4bf af60 	bcs.w	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019942:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90019946:	4283      	cmp	r3, r0
90019948:	d80a      	bhi.n	90019960 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001994a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001994e:	4283      	cmp	r3, r0
90019950:	f4bf af57 	bcs.w	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019954:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90019958:	4283      	cmp	r3, r0
9001995a:	f43f af79 	beq.w	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001995e:	e7ac      	b.n	900198ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019960:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90019964:	e7f8      	b.n	90019958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90019966:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001996a:	4283      	cmp	r3, r0
9001996c:	d802      	bhi.n	90019974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001996e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90019972:	e798      	b.n	900198a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90019974:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90019978:	4283      	cmp	r3, r0
9001997a:	f47f af42 	bne.w	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001997e:	e767      	b.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019980:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90019984:	4283      	cmp	r3, r0
90019986:	f43f af63 	beq.w	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001998a:	d802      	bhi.n	90019992 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001998c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90019990:	e7f2      	b.n	90019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90019992:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90019996:	4283      	cmp	r3, r0
90019998:	d805      	bhi.n	900199a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001999a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001999e:	4283      	cmp	r3, r0
900199a0:	f4ff af2f 	bcc.w	90019802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900199a4:	e754      	b.n	90019850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900199a6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
900199aa:	4283      	cmp	r3, r0
900199ac:	e7af      	b.n	9001990e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
900199ae:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
900199b2:	4617      	mov	r7, r2
900199b4:	f102 0808 	add.w	r8, r2, #8
900199b8:	4666      	mov	r6, ip
900199ba:	6838      	ldr	r0, [r7, #0]
900199bc:	3708      	adds	r7, #8
900199be:	f857 1c04 	ldr.w	r1, [r7, #-4]
900199c2:	46e6      	mov	lr, ip
900199c4:	4547      	cmp	r7, r8
900199c6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900199ca:	46f4      	mov	ip, lr
900199cc:	d1f5      	bne.n	900199ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
900199ce:	6838      	ldr	r0, [r7, #0]
900199d0:	f8ce 0000 	str.w	r0, [lr]
900199d4:	88b9      	ldrh	r1, [r7, #4]
900199d6:	f8ae 1004 	strh.w	r1, [lr, #4]
900199da:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
900199de:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900199e2:	d009      	beq.n	900199f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
900199e4:	7b51      	ldrb	r1, [r2, #13]
900199e6:	7992      	ldrb	r2, [r2, #6]
900199e8:	0149      	lsls	r1, r1, #5
900199ea:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900199ee:	4311      	orrs	r1, r2
900199f0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900199f4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
900199f8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900199fc:	b2ad      	uxth	r5, r5
900199fe:	d00d      	beq.n	90019a1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90019a00:	442b      	add	r3, r5
90019a02:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019a06:	b29b      	uxth	r3, r3
90019a08:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019a0c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019a10:	10db      	asrs	r3, r3, #3
90019a12:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019a16:	4313      	orrs	r3, r2
90019a18:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019a1c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019a20:	00cb      	lsls	r3, r1, #3
90019a22:	064f      	lsls	r7, r1, #25
90019a24:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019a28:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019a2c:	ea43 0302 	orr.w	r3, r3, r2
90019a30:	bf44      	itt	mi
90019a32:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019a36:	b21b      	sxthmi	r3, r3
90019a38:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019a3c:	1b5b      	subs	r3, r3, r5
90019a3e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90019a42:	4632      	mov	r2, r6
90019a44:	e6f9      	b.n	9001983a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019a46:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019a4a:	4617      	mov	r7, r2
90019a4c:	f102 0908 	add.w	r9, r2, #8
90019a50:	4666      	mov	r6, ip
90019a52:	6838      	ldr	r0, [r7, #0]
90019a54:	3708      	adds	r7, #8
90019a56:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019a5a:	46e0      	mov	r8, ip
90019a5c:	454f      	cmp	r7, r9
90019a5e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90019a62:	46c4      	mov	ip, r8
90019a64:	d1f5      	bne.n	90019a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90019a66:	6838      	ldr	r0, [r7, #0]
90019a68:	f8c8 0000 	str.w	r0, [r8]
90019a6c:	88b9      	ldrh	r1, [r7, #4]
90019a6e:	f8a8 1004 	strh.w	r1, [r8, #4]
90019a72:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019a76:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019a7a:	d009      	beq.n	90019a90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90019a7c:	7b51      	ldrb	r1, [r2, #13]
90019a7e:	7992      	ldrb	r2, [r2, #6]
90019a80:	0149      	lsls	r1, r1, #5
90019a82:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019a86:	4311      	orrs	r1, r2
90019a88:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019a8c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019a90:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019a94:	d00e      	beq.n	90019ab4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019a96:	eba3 030e 	sub.w	r3, r3, lr
90019a9a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019a9e:	b29b      	uxth	r3, r3
90019aa0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019aa4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019aa8:	10db      	asrs	r3, r3, #3
90019aaa:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019aae:	4313      	orrs	r3, r2
90019ab0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019ab4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019ab8:	00cb      	lsls	r3, r1, #3
90019aba:	0648      	lsls	r0, r1, #25
90019abc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019ac0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019ac4:	ea43 0302 	orr.w	r3, r3, r2
90019ac8:	bf44      	itt	mi
90019aca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019ace:	b21b      	sxthmi	r3, r3
90019ad0:	1b5d      	subs	r5, r3, r5
90019ad2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019ad6:	e7b4      	b.n	90019a42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90019ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90019ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019adc:	461e      	mov	r6, r3
90019ade:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019ae0:	4604      	mov	r4, r0
90019ae2:	4617      	mov	r7, r2
90019ae4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019ae8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019aec:	f7ed f954 	bl	90006d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019af0:	4605      	mov	r5, r0
90019af2:	b918      	cbnz	r0, 90019afc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90019af4:	6030      	str	r0, [r6, #0]
90019af6:	4628      	mov	r0, r5
90019af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019afc:	683b      	ldr	r3, [r7, #0]
90019afe:	4601      	mov	r1, r0
90019b00:	4638      	mov	r0, r7
90019b02:	68db      	ldr	r3, [r3, #12]
90019b04:	4798      	blx	r3
90019b06:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019b0a:	4602      	mov	r2, r0
90019b0c:	6030      	str	r0, [r6, #0]
90019b0e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019b12:	d213      	bcs.n	90019b3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90019b14:	4643      	mov	r3, r8
90019b16:	4639      	mov	r1, r7
90019b18:	4620      	mov	r0, r4
90019b1a:	f7ff fe39 	bl	90019790 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019b1e:	6030      	str	r0, [r6, #0]
90019b20:	6833      	ldr	r3, [r6, #0]
90019b22:	b143      	cbz	r3, 90019b36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90019b24:	7b5a      	ldrb	r2, [r3, #13]
90019b26:	7a9b      	ldrb	r3, [r3, #10]
90019b28:	0052      	lsls	r2, r2, #1
90019b2a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019b2e:	4313      	orrs	r3, r2
90019b30:	bf0c      	ite	eq
90019b32:	2301      	moveq	r3, #1
90019b34:	2300      	movne	r3, #0
90019b36:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019b3a:	e7dc      	b.n	90019af6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90019b3c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019b40:	b29b      	uxth	r3, r3
90019b42:	2b7f      	cmp	r3, #127	@ 0x7f
90019b44:	d804      	bhi.n	90019b50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90019b46:	4639      	mov	r1, r7
90019b48:	4620      	mov	r0, r4
90019b4a:	f7ff fce7 	bl	9001951c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019b4e:	e7e6      	b.n	90019b1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90019b50:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019b54:	2b00      	cmp	r3, #0
90019b56:	d0e3      	beq.n	90019b20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019b58:	f640 1302 	movw	r3, #2306	@ 0x902
90019b5c:	429d      	cmp	r5, r3
90019b5e:	d1df      	bne.n	90019b20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019b60:	4601      	mov	r1, r0
90019b62:	4620      	mov	r0, r4
90019b64:	f7ff fcaa 	bl	900194bc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019b68:	e7d9      	b.n	90019b1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90019b6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90019b6a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90019b6e:	461e      	mov	r6, r3
90019b70:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019b72:	4604      	mov	r4, r0
90019b74:	4617      	mov	r7, r2
90019b76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019b7a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019b7e:	f7ed f90b 	bl	90006d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019b82:	4605      	mov	r5, r0
90019b84:	b918      	cbnz	r0, 90019b8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90019b86:	6030      	str	r0, [r6, #0]
90019b88:	4628      	mov	r0, r5
90019b8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90019b8e:	683b      	ldr	r3, [r7, #0]
90019b90:	4601      	mov	r1, r0
90019b92:	4638      	mov	r0, r7
90019b94:	f8d3 9008 	ldr.w	r9, [r3, #8]
90019b98:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90019b9c:	47c8      	blx	r9
90019b9e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019ba2:	4602      	mov	r2, r0
90019ba4:	6030      	str	r0, [r6, #0]
90019ba6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019baa:	d213      	bcs.n	90019bd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90019bac:	4643      	mov	r3, r8
90019bae:	4639      	mov	r1, r7
90019bb0:	4620      	mov	r0, r4
90019bb2:	f7ff fded 	bl	90019790 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019bb6:	6030      	str	r0, [r6, #0]
90019bb8:	6833      	ldr	r3, [r6, #0]
90019bba:	b143      	cbz	r3, 90019bce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90019bbc:	7b5a      	ldrb	r2, [r3, #13]
90019bbe:	7a9b      	ldrb	r3, [r3, #10]
90019bc0:	0052      	lsls	r2, r2, #1
90019bc2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019bc6:	4313      	orrs	r3, r2
90019bc8:	bf0c      	ite	eq
90019bca:	2301      	moveq	r3, #1
90019bcc:	2300      	movne	r3, #0
90019bce:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019bd2:	e7d9      	b.n	90019b88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90019bd4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019bd8:	b29b      	uxth	r3, r3
90019bda:	2b7f      	cmp	r3, #127	@ 0x7f
90019bdc:	d804      	bhi.n	90019be8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90019bde:	4639      	mov	r1, r7
90019be0:	4620      	mov	r0, r4
90019be2:	f7ff fc9b 	bl	9001951c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019be6:	e7e6      	b.n	90019bb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90019be8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019bec:	2b00      	cmp	r3, #0
90019bee:	d0e3      	beq.n	90019bb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019bf0:	f640 1302 	movw	r3, #2306	@ 0x902
90019bf4:	429d      	cmp	r5, r3
90019bf6:	d1df      	bne.n	90019bb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019bf8:	4601      	mov	r1, r0
90019bfa:	4620      	mov	r0, r4
90019bfc:	f7ff fc5e 	bl	900194bc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019c00:	e7d9      	b.n	90019bb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90019c02 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90019c02:	b510      	push	{r4, lr}
90019c04:	4604      	mov	r4, r0
90019c06:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90019c0a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019c0c:	b1e1      	cbz	r1, 90019c48 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019c0e:	2b0a      	cmp	r3, #10
90019c10:	d02d      	beq.n	90019c6e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019c12:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90019c14:	3901      	subs	r1, #1
90019c16:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90019c1a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90019c1c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90019c20:	1c51      	adds	r1, r2, #1
90019c22:	b289      	uxth	r1, r1
90019c24:	2901      	cmp	r1, #1
90019c26:	bf8a      	itet	hi
90019c28:	f102 32ff 	addhi.w	r2, r2, #4294967295
90019c2c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90019c2e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90019c30:	1c5a      	adds	r2, r3, #1
90019c32:	8722      	strh	r2, [r4, #56]	@ 0x38
90019c34:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019c36:	4413      	add	r3, r2
90019c38:	b29b      	uxth	r3, r3
90019c3a:	2b09      	cmp	r3, #9
90019c3c:	bf88      	it	hi
90019c3e:	3b0a      	subhi	r3, #10
90019c40:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019c44:	8458      	strh	r0, [r3, #34]	@ 0x22
90019c46:	e7de      	b.n	90019c06 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90019c48:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019c4a:	2b0a      	cmp	r3, #10
90019c4c:	d00f      	beq.n	90019c6e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019c4e:	4620      	mov	r0, r4
90019c50:	f7ff fbe2 	bl	90019418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90019c54:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019c56:	1c5a      	adds	r2, r3, #1
90019c58:	8722      	strh	r2, [r4, #56]	@ 0x38
90019c5a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019c5c:	4413      	add	r3, r2
90019c5e:	b29b      	uxth	r3, r3
90019c60:	2b09      	cmp	r3, #9
90019c62:	bf88      	it	hi
90019c64:	3b0a      	subhi	r3, #10
90019c66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019c6a:	8458      	strh	r0, [r3, #34]	@ 0x22
90019c6c:	e7ec      	b.n	90019c48 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019c6e:	bd10      	pop	{r4, pc}

90019c70 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90019c70:	b538      	push	{r3, r4, r5, lr}
90019c72:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019c74:	4604      	mov	r4, r0
90019c76:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90019c7a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90019c7c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90019c7e:	3a01      	subs	r2, #1
90019c80:	8702      	strh	r2, [r0, #56]	@ 0x38
90019c82:	1c5a      	adds	r2, r3, #1
90019c84:	b292      	uxth	r2, r2
90019c86:	2a09      	cmp	r2, #9
90019c88:	bf8a      	itet	hi
90019c8a:	3b09      	subhi	r3, #9
90019c8c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90019c8e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90019c90:	f7ff ffb7 	bl	90019c02 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90019c94:	8c23      	ldrh	r3, [r4, #32]
90019c96:	2b01      	cmp	r3, #1
90019c98:	bf9c      	itt	ls
90019c9a:	3301      	addls	r3, #1
90019c9c:	8423      	strhls	r3, [r4, #32]
90019c9e:	8be3      	ldrh	r3, [r4, #30]
90019ca0:	b90b      	cbnz	r3, 90019ca6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90019ca2:	2302      	movs	r3, #2
90019ca4:	83e3      	strh	r3, [r4, #30]
90019ca6:	8be3      	ldrh	r3, [r4, #30]
90019ca8:	4628      	mov	r0, r5
90019caa:	3b01      	subs	r3, #1
90019cac:	b29b      	uxth	r3, r3
90019cae:	83e3      	strh	r3, [r4, #30]
90019cb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019cb4:	8365      	strh	r5, [r4, #26]
90019cb6:	bd38      	pop	{r3, r4, r5, pc}

90019cb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90019cb8:	428a      	cmp	r2, r1
90019cba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019cbe:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90019cc0:	d932      	bls.n	90019d28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90019cc2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90019cc4:	1a54      	subs	r4, r2, r1
90019cc6:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90019cca:	19ee      	adds	r6, r5, r7
90019ccc:	fa1f fe84 	uxth.w	lr, r4
90019cd0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90019cd4:	3e01      	subs	r6, #1
90019cd6:	b2b4      	uxth	r4, r6
90019cd8:	eba4 090e 	sub.w	r9, r4, lr
90019cdc:	fa1f f989 	uxth.w	r9, r9
90019ce0:	2c09      	cmp	r4, #9
90019ce2:	4626      	mov	r6, r4
90019ce4:	bf88      	it	hi
90019ce6:	f1a4 060a 	subhi.w	r6, r4, #10
90019cea:	f1bc 0f00 	cmp.w	ip, #0
90019cee:	f104 34ff 	add.w	r4, r4, #4294967295
90019cf2:	bf08      	it	eq
90019cf4:	f04f 0c02 	moveq.w	ip, #2
90019cf8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90019cfc:	b2a4      	uxth	r4, r4
90019cfe:	f10c 3cff 	add.w	ip, ip, #4294967295
90019d02:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90019d06:	454c      	cmp	r4, r9
90019d08:	fa1f fc8c 	uxth.w	ip, ip
90019d0c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90019d10:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90019d14:	d1e4      	bne.n	90019ce0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90019d16:	eba5 050e 	sub.w	r5, r5, lr
90019d1a:	eb0e 0408 	add.w	r4, lr, r8
90019d1e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90019d22:	8705      	strh	r5, [r0, #56]	@ 0x38
90019d24:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90019d28:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90019d2a:	250a      	movs	r5, #10
90019d2c:	1a64      	subs	r4, r4, r1
90019d2e:	4439      	add	r1, r7
90019d30:	b289      	uxth	r1, r1
90019d32:	8704      	strh	r4, [r0, #56]	@ 0x38
90019d34:	2909      	cmp	r1, #9
90019d36:	bf88      	it	hi
90019d38:	390a      	subhi	r1, #10
90019d3a:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019d3c:	b18a      	cbz	r2, 90019d62 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90019d3e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90019d40:	3a01      	subs	r2, #1
90019d42:	3101      	adds	r1, #1
90019d44:	b292      	uxth	r2, r2
90019d46:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90019d4a:	8701      	strh	r1, [r0, #56]	@ 0x38
90019d4c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019d4e:	b901      	cbnz	r1, 90019d52 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90019d50:	86c5      	strh	r5, [r0, #54]	@ 0x36
90019d52:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019d54:	3901      	subs	r1, #1
90019d56:	b289      	uxth	r1, r1
90019d58:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019d5a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90019d5e:	844c      	strh	r4, [r1, #34]	@ 0x22
90019d60:	e7ec      	b.n	90019d3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90019d62:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019d66:	f7ff bf4c 	b.w	90019c02 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90019d6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90019d6a:	b570      	push	{r4, r5, r6, lr}
90019d6c:	2500      	movs	r5, #0
90019d6e:	4295      	cmp	r5, r2
90019d70:	d011      	beq.n	90019d96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90019d72:	8bc4      	ldrh	r4, [r0, #30]
90019d74:	f831 6b02 	ldrh.w	r6, [r1], #2
90019d78:	4414      	add	r4, r2
90019d7a:	3c01      	subs	r4, #1
90019d7c:	1b64      	subs	r4, r4, r5
90019d7e:	b2a4      	uxth	r4, r4
90019d80:	2c01      	cmp	r4, #1
90019d82:	bf88      	it	hi
90019d84:	3c02      	subhi	r4, #2
90019d86:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90019d8a:	8b64      	ldrh	r4, [r4, #26]
90019d8c:	42b4      	cmp	r4, r6
90019d8e:	d117      	bne.n	90019dc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90019d90:	3501      	adds	r5, #1
90019d92:	b2ad      	uxth	r5, r5
90019d94:	e7eb      	b.n	90019d6e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019d96:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90019d9a:	2400      	movs	r4, #0
90019d9c:	4413      	add	r3, r2
90019d9e:	b2a2      	uxth	r2, r4
90019da0:	429a      	cmp	r2, r3
90019da2:	da0f      	bge.n	90019dc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019da4:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90019da6:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90019daa:	3401      	adds	r4, #1
90019dac:	4432      	add	r2, r6
90019dae:	b292      	uxth	r2, r2
90019db0:	2a09      	cmp	r2, #9
90019db2:	bf88      	it	hi
90019db4:	3a0a      	subhi	r2, #10
90019db6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90019dba:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90019dbc:	42aa      	cmp	r2, r5
90019dbe:	d0ee      	beq.n	90019d9e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90019dc0:	2000      	movs	r0, #0
90019dc2:	bd70      	pop	{r4, r5, r6, pc}
90019dc4:	2001      	movs	r0, #1
90019dc6:	e7fc      	b.n	90019dc2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90019dc8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90019dc8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019dcc:	4605      	mov	r5, r0
90019dce:	4616      	mov	r6, r2
90019dd0:	1c8c      	adds	r4, r1, #2
90019dd2:	8809      	ldrh	r1, [r1, #0]
90019dd4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90019dd8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90019ddc:	42b3      	cmp	r3, r6
90019dde:	d124      	bne.n	90019e2a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90019de0:	f3c1 2903 	ubfx	r9, r1, #8, #4
90019de4:	f3c1 1803 	ubfx	r8, r1, #4, #4
90019de8:	f001 070f 	and.w	r7, r1, #15
90019dec:	4652      	mov	r2, sl
90019dee:	f8cd 8000 	str.w	r8, [sp]
90019df2:	464b      	mov	r3, r9
90019df4:	4621      	mov	r1, r4
90019df6:	4628      	mov	r0, r5
90019df8:	f7ff ffb7 	bl	90019d6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90019dfc:	4683      	mov	fp, r0
90019dfe:	b168      	cbz	r0, 90019e1c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90019e00:	eb0a 0109 	add.w	r1, sl, r9
90019e04:	463a      	mov	r2, r7
90019e06:	4628      	mov	r0, r5
90019e08:	4441      	add	r1, r8
90019e0a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90019e0e:	4649      	mov	r1, r9
90019e10:	f7ff ff52 	bl	90019cb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90019e14:	4658      	mov	r0, fp
90019e16:	b003      	add	sp, #12
90019e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019e1c:	eb07 010a 	add.w	r1, r7, sl
90019e20:	4449      	add	r1, r9
90019e22:	4441      	add	r1, r8
90019e24:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90019e28:	e7d2      	b.n	90019dd0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90019e2a:	f04f 0b00 	mov.w	fp, #0
90019e2e:	e7f1      	b.n	90019e14 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90019e30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90019e30:	b570      	push	{r4, r5, r6, lr}
90019e32:	8810      	ldrh	r0, [r2, #0]
90019e34:	4298      	cmp	r0, r3
90019e36:	d817      	bhi.n	90019e68 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e38:	1e48      	subs	r0, r1, #1
90019e3a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90019e3e:	4298      	cmp	r0, r3
90019e40:	d312      	bcc.n	90019e68 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e42:	2400      	movs	r4, #0
90019e44:	428c      	cmp	r4, r1
90019e46:	d20f      	bcs.n	90019e68 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e48:	1860      	adds	r0, r4, r1
90019e4a:	1040      	asrs	r0, r0, #1
90019e4c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90019e50:	0085      	lsls	r5, r0, #2
90019e52:	42b3      	cmp	r3, r6
90019e54:	d902      	bls.n	90019e5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019e56:	3001      	adds	r0, #1
90019e58:	b284      	uxth	r4, r0
90019e5a:	e7f3      	b.n	90019e44 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019e5c:	d201      	bcs.n	90019e62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90019e5e:	b281      	uxth	r1, r0
90019e60:	e7f0      	b.n	90019e44 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019e62:	442a      	add	r2, r5
90019e64:	8850      	ldrh	r0, [r2, #2]
90019e66:	bd70      	pop	{r4, r5, r6, pc}
90019e68:	2000      	movs	r0, #0
90019e6a:	e7fc      	b.n	90019e66 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90019e6c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90019e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019e70:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90019e72:	4604      	mov	r4, r0
90019e74:	260b      	movs	r6, #11
90019e76:	886f      	ldrh	r7, [r5, #2]
90019e78:	087f      	lsrs	r7, r7, #1
90019e7a:	3e01      	subs	r6, #1
90019e7c:	d013      	beq.n	90019ea6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019e7e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90019e80:	462a      	mov	r2, r5
90019e82:	4639      	mov	r1, r7
90019e84:	4620      	mov	r0, r4
90019e86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019e8a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019e8e:	4643      	mov	r3, r8
90019e90:	f7ff ffce 	bl	90019e30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019e94:	b138      	cbz	r0, 90019ea6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019e96:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90019e9a:	4642      	mov	r2, r8
90019e9c:	4620      	mov	r0, r4
90019e9e:	f7ff ff93 	bl	90019dc8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90019ea2:	2800      	cmp	r0, #0
90019ea4:	d1e9      	bne.n	90019e7a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90019eac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90019eac:	b570      	push	{r4, r5, r6, lr}
90019eae:	694a      	ldr	r2, [r1, #20]
90019eb0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90019eb2:	684b      	ldr	r3, [r1, #4]
90019eb4:	1b54      	subs	r4, r2, r5
90019eb6:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90019eb8:	f000 8106 	beq.w	9001a0c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90019ebc:	1b9b      	subs	r3, r3, r6
90019ebe:	d003      	beq.n	90019ec8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90019ec0:	4363      	muls	r3, r4
90019ec2:	2210      	movs	r2, #16
90019ec4:	fb93 f3f2 	sdiv	r3, r3, r2
90019ec8:	680c      	ldr	r4, [r1, #0]
90019eca:	698a      	ldr	r2, [r1, #24]
90019ecc:	1b65      	subs	r5, r4, r5
90019ece:	f000 80fd 	beq.w	9001a0cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90019ed2:	1b92      	subs	r2, r2, r6
90019ed4:	d003      	beq.n	90019ede <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90019ed6:	436a      	muls	r2, r5
90019ed8:	2410      	movs	r4, #16
90019eda:	fb92 f2f4 	sdiv	r2, r2, r4
90019ede:	1a9b      	subs	r3, r3, r2
90019ee0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001a108 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90019ee4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019ee8:	460a      	mov	r2, r1
90019eea:	ee07 3a90 	vmov	s15, r3
90019eee:	f100 040c 	add.w	r4, r0, #12
90019ef2:	4603      	mov	r3, r0
90019ef4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019ef8:	ee67 7a84 	vmul.f32	s15, s15, s8
90019efc:	ee87 3a27 	vdiv.f32	s6, s14, s15
90019f00:	eeb1 6a43 	vneg.f32	s12, s6
90019f04:	edd2 7a02 	vldr	s15, [r2, #8]
90019f08:	3214      	adds	r2, #20
90019f0a:	eec7 6a27 	vdiv.f32	s13, s14, s15
90019f0e:	ece3 6a01 	vstmia	r3!, {s13}
90019f12:	429c      	cmp	r4, r3
90019f14:	ed52 7a02 	vldr	s15, [r2, #-8]
90019f18:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019f1c:	edc3 7a02 	vstr	s15, [r3, #8]
90019f20:	ed52 7a01 	vldr	s15, [r2, #-4]
90019f24:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019f28:	edc3 7a05 	vstr	s15, [r3, #20]
90019f2c:	d1ea      	bne.n	90019f04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90019f2e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019f30:	698b      	ldr	r3, [r1, #24]
90019f32:	edd0 4a02 	vldr	s9, [r0, #8]
90019f36:	1a9b      	subs	r3, r3, r2
90019f38:	edd0 3a00 	vldr	s7, [r0]
90019f3c:	edd0 6a01 	vldr	s13, [r0, #4]
90019f40:	ee07 3a90 	vmov	s15, r3
90019f44:	684b      	ldr	r3, [r1, #4]
90019f46:	ee76 6ae4 	vsub.f32	s13, s13, s9
90019f4a:	ed90 5a05 	vldr	s10, [r0, #20]
90019f4e:	1a9b      	subs	r3, r3, r2
90019f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019f54:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019f58:	ed90 2a03 	vldr	s4, [r0, #12]
90019f5c:	ee07 3a10 	vmov	s14, r3
90019f60:	edd0 5a04 	vldr	s11, [r0, #16]
90019f64:	ee67 7a84 	vmul.f32	s15, s15, s8
90019f68:	ed90 1a07 	vldr	s2, [r0, #28]
90019f6c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019f70:	edd0 2a06 	vldr	s5, [r0, #24]
90019f74:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019f78:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90019f7c:	ee27 7a04 	vmul.f32	s14, s14, s8
90019f80:	ee32 5a45 	vsub.f32	s10, s4, s10
90019f84:	eee6 7a87 	vfma.f32	s15, s13, s14
90019f88:	ee67 7a83 	vmul.f32	s15, s15, s6
90019f8c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90019f90:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019f92:	694a      	ldr	r2, [r1, #20]
90019f94:	1b13      	subs	r3, r2, r4
90019f96:	ee07 3a10 	vmov	s14, r3
90019f9a:	680b      	ldr	r3, [r1, #0]
90019f9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019fa0:	1b1b      	subs	r3, r3, r4
90019fa2:	ee27 7a04 	vmul.f32	s14, s14, s8
90019fa6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90019faa:	ee07 3a10 	vmov	s14, r3
90019fae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019fb2:	ee27 7a04 	vmul.f32	s14, s14, s8
90019fb6:	eee6 4a87 	vfma.f32	s9, s13, s14
90019fba:	ee64 4a86 	vmul.f32	s9, s9, s12
90019fbe:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90019fc2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019fc4:	698b      	ldr	r3, [r1, #24]
90019fc6:	1a9b      	subs	r3, r3, r2
90019fc8:	ee06 3a90 	vmov	s13, r3
90019fcc:	684b      	ldr	r3, [r1, #4]
90019fce:	1a9b      	subs	r3, r3, r2
90019fd0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90019fd4:	ee07 3a10 	vmov	s14, r3
90019fd8:	ee66 6a84 	vmul.f32	s13, s13, s8
90019fdc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019fe0:	ee65 6a66 	vnmul.f32	s13, s10, s13
90019fe4:	ee27 7a04 	vmul.f32	s14, s14, s8
90019fe8:	eee5 6a87 	vfma.f32	s13, s11, s14
90019fec:	ee66 6a83 	vmul.f32	s13, s13, s6
90019ff0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90019ff4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019ff6:	694a      	ldr	r2, [r1, #20]
90019ff8:	1b13      	subs	r3, r2, r4
90019ffa:	ee07 3a10 	vmov	s14, r3
90019ffe:	680b      	ldr	r3, [r1, #0]
9001a000:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a004:	1b1b      	subs	r3, r3, r4
9001a006:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a00a:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001a00e:	ee07 3a10 	vmov	s14, r3
9001a012:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a016:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a01a:	eea5 5a87 	vfma.f32	s10, s11, s14
9001a01e:	edd0 5a08 	vldr	s11, [r0, #32]
9001a022:	ee31 1a65 	vsub.f32	s2, s2, s11
9001a026:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001a02a:	ee25 5a06 	vmul.f32	s10, s10, s12
9001a02e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001a032:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a034:	698b      	ldr	r3, [r1, #24]
9001a036:	1a9b      	subs	r3, r3, r2
9001a038:	ee07 3a10 	vmov	s14, r3
9001a03c:	684b      	ldr	r3, [r1, #4]
9001a03e:	1a9b      	subs	r3, r3, r2
9001a040:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a044:	ee01 3a90 	vmov	s3, r3
9001a048:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a04c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001a050:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001a054:	ee61 1a84 	vmul.f32	s3, s3, s8
9001a058:	eea1 7a21 	vfma.f32	s14, s2, s3
9001a05c:	ee27 7a03 	vmul.f32	s14, s14, s6
9001a060:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a064:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a066:	694a      	ldr	r2, [r1, #20]
9001a068:	1b13      	subs	r3, r2, r4
9001a06a:	ee03 3a10 	vmov	s6, r3
9001a06e:	680b      	ldr	r3, [r1, #0]
9001a070:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a074:	1b1b      	subs	r3, r3, r4
9001a076:	ee23 3a04 	vmul.f32	s6, s6, s8
9001a07a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001a07e:	ee03 3a10 	vmov	s6, r3
9001a082:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a086:	ee23 4a04 	vmul.f32	s8, s6, s8
9001a08a:	eee1 5a04 	vfma.f32	s11, s2, s8
9001a08e:	ee25 6a86 	vmul.f32	s12, s11, s12
9001a092:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001a096:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001a09a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001a09e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001a0a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a0a6:	dd13      	ble.n	9001a0d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001a0a8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a0ac:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001a0b0:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a0b2:	eee3 7a87 	vfma.f32	s15, s7, s14
9001a0b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a0ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a0be:	dd15      	ble.n	9001a0ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001a0c0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a0c4:	6403      	str	r3, [r0, #64]	@ 0x40
9001a0c6:	bd70      	pop	{r4, r5, r6, pc}
9001a0c8:	4623      	mov	r3, r4
9001a0ca:	e6fd      	b.n	90019ec8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a0cc:	462a      	mov	r2, r5
9001a0ce:	e706      	b.n	90019ede <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a0d0:	d502      	bpl.n	9001a0d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001a0d2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a0d6:	e7e9      	b.n	9001a0ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001a0d8:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001a0dc:	eea3 2a85 	vfma.f32	s4, s7, s10
9001a0e0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001a0e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a0e8:	dade      	bge.n	9001a0a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001a0ea:	e7f2      	b.n	9001a0d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001a0ec:	d502      	bpl.n	9001a0f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001a0ee:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a0f2:	e7e7      	b.n	9001a0c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001a0f4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001a0f8:	eee3 4a86 	vfma.f32	s9, s7, s12
9001a0fc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001a100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a104:	dadc      	bge.n	9001a0c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001a106:	e7f2      	b.n	9001a0ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001a108:	3d800000 	.word	0x3d800000

9001a10c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001a10c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a110:	2714      	movs	r7, #20
9001a112:	435f      	muls	r7, r3
9001a114:	eb02 0c07 	add.w	ip, r2, r7
9001a118:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001a11c:	f115 0e0f 	adds.w	lr, r5, #15
9001a120:	f100 80a2 	bmi.w	9001a268 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001a124:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001a128:	9c08      	ldr	r4, [sp, #32]
9001a12a:	2614      	movs	r6, #20
9001a12c:	f8c0 e014 	str.w	lr, [r0, #20]
9001a130:	4366      	muls	r6, r4
9001a132:	eb02 0806 	add.w	r8, r2, r6
9001a136:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001a13a:	f115 040f 	adds.w	r4, r5, #15
9001a13e:	f100 809f 	bmi.w	9001a280 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001a142:	1124      	asrs	r4, r4, #4
9001a144:	eba4 040e 	sub.w	r4, r4, lr
9001a148:	6184      	str	r4, [r0, #24]
9001a14a:	2c00      	cmp	r4, #0
9001a14c:	f000 808a 	beq.w	9001a264 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001a150:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001a154:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001a158:	5995      	ldr	r5, [r2, r6]
9001a15a:	eba4 0809 	sub.w	r8, r4, r9
9001a15e:	59d4      	ldr	r4, [r2, r7]
9001a160:	eba5 0a04 	sub.w	sl, r5, r4
9001a164:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001a168:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001a16c:	fb0e fe05 	mul.w	lr, lr, r5
9001a170:	fb0a ee19 	mls	lr, sl, r9, lr
9001a174:	fb08 e404 	mla	r4, r8, r4, lr
9001a178:	3c01      	subs	r4, #1
9001a17a:	19a4      	adds	r4, r4, r6
9001a17c:	f100 808c 	bmi.w	9001a298 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001a180:	fb94 fef6 	sdiv	lr, r4, r6
9001a184:	fb06 441e 	mls	r4, r6, lr, r4
9001a188:	f8c0 e000 	str.w	lr, [r0]
9001a18c:	6104      	str	r4, [r0, #16]
9001a18e:	2d00      	cmp	r5, #0
9001a190:	f2c0 8095 	blt.w	9001a2be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001a194:	fb95 f4f6 	sdiv	r4, r5, r6
9001a198:	fb06 5514 	mls	r5, r6, r4, r5
9001a19c:	6044      	str	r4, [r0, #4]
9001a19e:	6085      	str	r5, [r0, #8]
9001a1a0:	60c6      	str	r6, [r0, #12]
9001a1a2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001a1a6:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001a1aa:	6945      	ldr	r5, [r0, #20]
9001a1ac:	59d2      	ldr	r2, [r2, r7]
9001a1ae:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001a1b2:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001a2e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001a1b6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a1ba:	ee07 4a10 	vmov	s14, r4
9001a1be:	6804      	ldr	r4, [r0, #0]
9001a1c0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001a1c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a1c8:	ee07 2a90 	vmov	s15, r2
9001a1cc:	ee27 7a26 	vmul.f32	s14, s14, s13
9001a1d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a1d4:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a1d8:	edd3 6a00 	vldr	s13, [r3]
9001a1dc:	eee6 6a07 	vfma.f32	s13, s12, s14
9001a1e0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001a1e4:	eee6 6a27 	vfma.f32	s13, s12, s15
9001a1e8:	edc0 6a07 	vstr	s13, [r0, #28]
9001a1ec:	edd0 6a01 	vldr	s13, [r0, #4]
9001a1f0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001a1f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a1f8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a1fc:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a200:	ed80 6a08 	vstr	s12, [r0, #32]
9001a204:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001a206:	6242      	str	r2, [r0, #36]	@ 0x24
9001a208:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001a20c:	ed93 6a03 	vldr	s12, [r3, #12]
9001a210:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a214:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a218:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001a21c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001a220:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a224:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001a228:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a22c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001a230:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a232:	6302      	str	r2, [r0, #48]	@ 0x30
9001a234:	ed93 6a06 	vldr	s12, [r3, #24]
9001a238:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001a23c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a240:	eeb0 7a46 	vmov.f32	s14, s12
9001a244:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001a248:	eea6 7a27 	vfma.f32	s14, s12, s15
9001a24c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a250:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001a254:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001a258:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a25c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001a260:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001a262:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a264:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a268:	2410      	movs	r4, #16
9001a26a:	f1c5 0501 	rsb	r5, r5, #1
9001a26e:	fb9e fef4 	sdiv	lr, lr, r4
9001a272:	f015 050f 	ands.w	r5, r5, #15
9001a276:	bf18      	it	ne
9001a278:	2501      	movne	r5, #1
9001a27a:	ebae 0e05 	sub.w	lr, lr, r5
9001a27e:	e753      	b.n	9001a128 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001a280:	f04f 0910 	mov.w	r9, #16
9001a284:	f1c5 0501 	rsb	r5, r5, #1
9001a288:	fb94 f4f9 	sdiv	r4, r4, r9
9001a28c:	f015 050f 	ands.w	r5, r5, #15
9001a290:	bf18      	it	ne
9001a292:	2501      	movne	r5, #1
9001a294:	1b64      	subs	r4, r4, r5
9001a296:	e755      	b.n	9001a144 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001a298:	4264      	negs	r4, r4
9001a29a:	fb94 fef6 	sdiv	lr, r4, r6
9001a29e:	f1ce 0800 	rsb	r8, lr, #0
9001a2a2:	fb06 441e 	mls	r4, r6, lr, r4
9001a2a6:	f8c0 8000 	str.w	r8, [r0]
9001a2aa:	6104      	str	r4, [r0, #16]
9001a2ac:	2c00      	cmp	r4, #0
9001a2ae:	f43f af6e 	beq.w	9001a18e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001a2b2:	ea6f 0e0e 	mvn.w	lr, lr
9001a2b6:	1b34      	subs	r4, r6, r4
9001a2b8:	f8c0 e000 	str.w	lr, [r0]
9001a2bc:	e766      	b.n	9001a18c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001a2be:	426d      	negs	r5, r5
9001a2c0:	fb95 f4f6 	sdiv	r4, r5, r6
9001a2c4:	f1c4 0e00 	rsb	lr, r4, #0
9001a2c8:	fb06 5514 	mls	r5, r6, r4, r5
9001a2cc:	f8c0 e004 	str.w	lr, [r0, #4]
9001a2d0:	6085      	str	r5, [r0, #8]
9001a2d2:	2d00      	cmp	r5, #0
9001a2d4:	f43f af64 	beq.w	9001a1a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001a2d8:	43e4      	mvns	r4, r4
9001a2da:	1b75      	subs	r5, r6, r5
9001a2dc:	6044      	str	r4, [r0, #4]
9001a2de:	e75e      	b.n	9001a19e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001a2e0:	3d800000 	.word	0x3d800000

9001a2e4 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001a2e4:	4602      	mov	r2, r0
9001a2e6:	b148      	cbz	r0, 9001a2fc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001a2e8:	2300      	movs	r3, #0
9001a2ea:	b298      	uxth	r0, r3
9001a2ec:	3301      	adds	r3, #1
9001a2ee:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001a2f2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001a2f6:	2900      	cmp	r1, #0
9001a2f8:	d1f7      	bne.n	9001a2ea <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001a2fa:	4770      	bx	lr
9001a2fc:	4770      	bx	lr

9001a2fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001a2fe:	b530      	push	{r4, r5, lr}
9001a300:	4604      	mov	r4, r0
9001a302:	b159      	cbz	r1, 9001a31c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001a304:	b148      	cbz	r0, 9001a31a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a306:	2300      	movs	r3, #0
9001a308:	b298      	uxth	r0, r3
9001a30a:	4282      	cmp	r2, r0
9001a30c:	d905      	bls.n	9001a31a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a30e:	5ccd      	ldrb	r5, [r1, r3]
9001a310:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001a314:	3301      	adds	r3, #1
9001a316:	2d00      	cmp	r5, #0
9001a318:	d1f6      	bne.n	9001a308 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001a31a:	bd30      	pop	{r4, r5, pc}
9001a31c:	4608      	mov	r0, r1
9001a31e:	e7fc      	b.n	9001a31a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001a320 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001a320:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a322:	b08b      	sub	sp, #44	@ 0x2c
9001a324:	468c      	mov	ip, r1
9001a326:	4604      	mov	r4, r0
9001a328:	2100      	movs	r1, #0
9001a32a:	261f      	movs	r6, #31
9001a32c:	af01      	add	r7, sp, #4
9001a32e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a332:	1e71      	subs	r1, r6, #1
9001a334:	fb94 fef3 	sdiv	lr, r4, r3
9001a338:	fb03 441e 	mls	r4, r3, lr, r4
9001a33c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001a340:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001a344:	b2ec      	uxtb	r4, r5
9001a346:	2d09      	cmp	r5, #9
9001a348:	bfd4      	ite	le
9001a34a:	3430      	addle	r4, #48	@ 0x30
9001a34c:	3457      	addgt	r4, #87	@ 0x57
9001a34e:	b2e4      	uxtb	r4, r4
9001a350:	55bc      	strb	r4, [r7, r6]
9001a352:	4674      	mov	r4, lr
9001a354:	b974      	cbnz	r4, 9001a374 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001a356:	2800      	cmp	r0, #0
9001a358:	da05      	bge.n	9001a366 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001a35a:	ab0a      	add	r3, sp, #40	@ 0x28
9001a35c:	4419      	add	r1, r3
9001a35e:	232d      	movs	r3, #45	@ 0x2d
9001a360:	f801 3c24 	strb.w	r3, [r1, #-36]
9001a364:	1eb1      	subs	r1, r6, #2
9001a366:	3101      	adds	r1, #1
9001a368:	4660      	mov	r0, ip
9001a36a:	4439      	add	r1, r7
9001a36c:	f7ff ffc7 	bl	9001a2fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a370:	b00b      	add	sp, #44	@ 0x2c
9001a372:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a374:	460e      	mov	r6, r1
9001a376:	e7dc      	b.n	9001a332 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001a378 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001a378:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a37a:	468c      	mov	ip, r1
9001a37c:	b08b      	sub	sp, #44	@ 0x2c
9001a37e:	2100      	movs	r1, #0
9001a380:	ae01      	add	r6, sp, #4
9001a382:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a386:	211f      	movs	r1, #31
9001a388:	fbb0 f7f3 	udiv	r7, r0, r3
9001a38c:	fb03 0517 	mls	r5, r3, r7, r0
9001a390:	4638      	mov	r0, r7
9001a392:	b2ec      	uxtb	r4, r5
9001a394:	2d09      	cmp	r5, #9
9001a396:	bfd4      	ite	le
9001a398:	3430      	addle	r4, #48	@ 0x30
9001a39a:	3457      	addgt	r4, #87	@ 0x57
9001a39c:	b2e4      	uxtb	r4, r4
9001a39e:	558c      	strb	r4, [r1, r6]
9001a3a0:	1e4c      	subs	r4, r1, #1
9001a3a2:	b92f      	cbnz	r7, 9001a3b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001a3a4:	4431      	add	r1, r6
9001a3a6:	4660      	mov	r0, ip
9001a3a8:	f7ff ffa9 	bl	9001a2fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a3ac:	b00b      	add	sp, #44	@ 0x2c
9001a3ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a3b0:	4621      	mov	r1, r4
9001a3b2:	e7e9      	b.n	9001a388 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001a3b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001a3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a3b8:	b085      	sub	sp, #20
9001a3ba:	4691      	mov	r9, r2
9001a3bc:	6802      	ldr	r2, [r0, #0]
9001a3be:	4688      	mov	r8, r1
9001a3c0:	461c      	mov	r4, r3
9001a3c2:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001a3c6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001a3ca:	4683      	mov	fp, r0
9001a3cc:	4610      	mov	r0, r2
9001a3ce:	9103      	str	r1, [sp, #12]
9001a3d0:	9302      	str	r3, [sp, #8]
9001a3d2:	9201      	str	r2, [sp, #4]
9001a3d4:	f7ff ff86 	bl	9001a2e4 <_ZN8touchgfx7Unicode6strlenEPKt>
9001a3d8:	f1b8 0f00 	cmp.w	r8, #0
9001a3dc:	bf0c      	ite	eq
9001a3de:	4684      	moveq	ip, r0
9001a3e0:	f100 0c01 	addne.w	ip, r0, #1
9001a3e4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001a3e8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001a3ec:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001a3ee:	fa1f fc8c 	uxth.w	ip, ip
9001a3f2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a3f4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001a3f8:	9903      	ldr	r1, [sp, #12]
9001a3fa:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001a3fe:	d041      	beq.n	9001a484 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a400:	d834      	bhi.n	9001a46c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001a402:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001a406:	d059      	beq.n	9001a4bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001a408:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001a40c:	d03a      	beq.n	9001a484 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a40e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001a412:	d034      	beq.n	9001a47e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a414:	2400      	movs	r4, #0
9001a416:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001a41a:	3a01      	subs	r2, #1
9001a41c:	b169      	cbz	r1, 9001a43a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a41e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001a420:	458c      	cmp	ip, r1
9001a422:	da09      	bge.n	9001a438 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a424:	eba1 010c 	sub.w	r1, r1, ip
9001a428:	b289      	uxth	r1, r1
9001a42a:	b933      	cbnz	r3, 9001a43a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a42c:	2e00      	cmp	r6, #0
9001a42e:	d051      	beq.n	9001a4d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a430:	2800      	cmp	r0, #0
9001a432:	d04f      	beq.n	9001a4d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a434:	440c      	add	r4, r1
9001a436:	b2a4      	uxth	r4, r4
9001a438:	2100      	movs	r1, #0
9001a43a:	682b      	ldr	r3, [r5, #0]
9001a43c:	4293      	cmp	r3, r2
9001a43e:	da07      	bge.n	9001a450 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a440:	f1b8 0f00 	cmp.w	r8, #0
9001a444:	d004      	beq.n	9001a450 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a446:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001a44a:	682b      	ldr	r3, [r5, #0]
9001a44c:	3301      	adds	r3, #1
9001a44e:	602b      	str	r3, [r5, #0]
9001a450:	2730      	movs	r7, #48	@ 0x30
9001a452:	2c00      	cmp	r4, #0
9001a454:	d04e      	beq.n	9001a4f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a456:	682e      	ldr	r6, [r5, #0]
9001a458:	3c01      	subs	r4, #1
9001a45a:	42b2      	cmp	r2, r6
9001a45c:	b2a4      	uxth	r4, r4
9001a45e:	dd49      	ble.n	9001a4f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a460:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a464:	682b      	ldr	r3, [r5, #0]
9001a466:	3301      	adds	r3, #1
9001a468:	602b      	str	r3, [r5, #0]
9001a46a:	e7f2      	b.n	9001a452 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001a46c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001a470:	d01d      	beq.n	9001a4ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001a472:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001a476:	d002      	beq.n	9001a47e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a478:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001a47c:	e7c9      	b.n	9001a412 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001a47e:	4684      	mov	ip, r0
9001a480:	f04f 0800 	mov.w	r8, #0
9001a484:	2c00      	cmp	r4, #0
9001a486:	d0c6      	beq.n	9001a416 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a488:	b947      	cbnz	r7, 9001a49c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a48a:	2801      	cmp	r0, #1
9001a48c:	d106      	bne.n	9001a49c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a48e:	8814      	ldrh	r4, [r2, #0]
9001a490:	2c30      	cmp	r4, #48	@ 0x30
9001a492:	bf02      	ittt	eq
9001a494:	3202      	addeq	r2, #2
9001a496:	4638      	moveq	r0, r7
9001a498:	f8cb 2000 	streq.w	r2, [fp]
9001a49c:	45bc      	cmp	ip, r7
9001a49e:	da14      	bge.n	9001a4ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001a4a0:	b2bf      	uxth	r7, r7
9001a4a2:	eba7 040c 	sub.w	r4, r7, ip
9001a4a6:	46bc      	mov	ip, r7
9001a4a8:	b2a4      	uxth	r4, r4
9001a4aa:	2600      	movs	r6, #0
9001a4ac:	e7b3      	b.n	9001a416 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a4ae:	4684      	mov	ip, r0
9001a4b0:	b16c      	cbz	r4, 9001a4ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001a4b2:	42b8      	cmp	r0, r7
9001a4b4:	dd00      	ble.n	9001a4b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001a4b6:	b2b8      	uxth	r0, r7
9001a4b8:	2400      	movs	r4, #0
9001a4ba:	e003      	b.n	9001a4c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001a4bc:	f04f 0c01 	mov.w	ip, #1
9001a4c0:	2400      	movs	r4, #0
9001a4c2:	4660      	mov	r0, ip
9001a4c4:	4626      	mov	r6, r4
9001a4c6:	46a0      	mov	r8, r4
9001a4c8:	e7a5      	b.n	9001a416 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a4ca:	2400      	movs	r4, #0
9001a4cc:	e7ed      	b.n	9001a4aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001a4ce:	4626      	mov	r6, r4
9001a4d0:	46a0      	mov	r8, r4
9001a4d2:	e7a0      	b.n	9001a416 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a4d4:	2900      	cmp	r1, #0
9001a4d6:	d0b0      	beq.n	9001a43a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a4d8:	2720      	movs	r7, #32
9001a4da:	682e      	ldr	r6, [r5, #0]
9001a4dc:	2900      	cmp	r1, #0
9001a4de:	d0ac      	beq.n	9001a43a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a4e0:	3901      	subs	r1, #1
9001a4e2:	4296      	cmp	r6, r2
9001a4e4:	b289      	uxth	r1, r1
9001a4e6:	daa7      	bge.n	9001a438 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a4e8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a4ec:	682b      	ldr	r3, [r5, #0]
9001a4ee:	3301      	adds	r3, #1
9001a4f0:	602b      	str	r3, [r5, #0]
9001a4f2:	e7f2      	b.n	9001a4da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001a4f4:	b188      	cbz	r0, 9001a51a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a4f6:	682b      	ldr	r3, [r5, #0]
9001a4f8:	3801      	subs	r0, #1
9001a4fa:	429a      	cmp	r2, r3
9001a4fc:	b280      	uxth	r0, r0
9001a4fe:	dd0c      	ble.n	9001a51a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a500:	f8db 3000 	ldr.w	r3, [fp]
9001a504:	1c9c      	adds	r4, r3, #2
9001a506:	f8cb 4000 	str.w	r4, [fp]
9001a50a:	881c      	ldrh	r4, [r3, #0]
9001a50c:	682b      	ldr	r3, [r5, #0]
9001a50e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001a512:	682b      	ldr	r3, [r5, #0]
9001a514:	3301      	adds	r3, #1
9001a516:	602b      	str	r3, [r5, #0]
9001a518:	e7ec      	b.n	9001a4f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a51a:	2620      	movs	r6, #32
9001a51c:	b151      	cbz	r1, 9001a534 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a51e:	6828      	ldr	r0, [r5, #0]
9001a520:	3901      	subs	r1, #1
9001a522:	4282      	cmp	r2, r0
9001a524:	b289      	uxth	r1, r1
9001a526:	dd05      	ble.n	9001a534 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a528:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001a52c:	682b      	ldr	r3, [r5, #0]
9001a52e:	3301      	adds	r3, #1
9001a530:	602b      	str	r3, [r5, #0]
9001a532:	e7f3      	b.n	9001a51c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001a534:	b005      	add	sp, #20
9001a536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a53a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001a53a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a53e:	2400      	movs	r4, #0
9001a540:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001a544:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001a548:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001a54c:	8014      	strh	r4, [r2, #0]
9001a54e:	701c      	strb	r4, [r3, #0]
9001a550:	f888 4000 	strb.w	r4, [r8]
9001a554:	f88c 4000 	strb.w	r4, [ip]
9001a558:	f88e 4000 	strb.w	r4, [lr]
9001a55c:	703c      	strb	r4, [r7, #0]
9001a55e:	6804      	ldr	r4, [r0, #0]
9001a560:	b1a4      	cbz	r4, 9001a58c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001a562:	8824      	ldrh	r4, [r4, #0]
9001a564:	f04f 0901 	mov.w	r9, #1
9001a568:	b314      	cbz	r4, 9001a5b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a56a:	2c2b      	cmp	r4, #43	@ 0x2b
9001a56c:	d001      	beq.n	9001a572 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001a56e:	2c20      	cmp	r4, #32
9001a570:	d110      	bne.n	9001a594 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001a572:	8014      	strh	r4, [r2, #0]
9001a574:	6804      	ldr	r4, [r0, #0]
9001a576:	b10c      	cbz	r4, 9001a57c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001a578:	3402      	adds	r4, #2
9001a57a:	6004      	str	r4, [r0, #0]
9001a57c:	680c      	ldr	r4, [r1, #0]
9001a57e:	b10c      	cbz	r4, 9001a584 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001a580:	3401      	adds	r4, #1
9001a582:	600c      	str	r4, [r1, #0]
9001a584:	6804      	ldr	r4, [r0, #0]
9001a586:	b17c      	cbz	r4, 9001a5a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001a588:	8824      	ldrh	r4, [r4, #0]
9001a58a:	e7ed      	b.n	9001a568 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001a58c:	680c      	ldr	r4, [r1, #0]
9001a58e:	b17c      	cbz	r4, 9001a5b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a590:	7824      	ldrb	r4, [r4, #0]
9001a592:	e7e7      	b.n	9001a564 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001a594:	2c2d      	cmp	r4, #45	@ 0x2d
9001a596:	d102      	bne.n	9001a59e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001a598:	f883 9000 	strb.w	r9, [r3]
9001a59c:	e7ea      	b.n	9001a574 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001a59e:	2c23      	cmp	r4, #35	@ 0x23
9001a5a0:	d107      	bne.n	9001a5b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001a5a2:	f888 9000 	strb.w	r9, [r8]
9001a5a6:	e7e5      	b.n	9001a574 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001a5a8:	680c      	ldr	r4, [r1, #0]
9001a5aa:	b10c      	cbz	r4, 9001a5b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a5ac:	7824      	ldrb	r4, [r4, #0]
9001a5ae:	e7db      	b.n	9001a568 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001a5b0:	2400      	movs	r4, #0
9001a5b2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001a5b6:	2b09      	cmp	r3, #9
9001a5b8:	d901      	bls.n	9001a5be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001a5ba:	2c2a      	cmp	r4, #42	@ 0x2a
9001a5bc:	d122      	bne.n	9001a604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a5be:	2301      	movs	r3, #1
9001a5c0:	2c30      	cmp	r4, #48	@ 0x30
9001a5c2:	f88e 3000 	strb.w	r3, [lr]
9001a5c6:	d10d      	bne.n	9001a5e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001a5c8:	f88c 3000 	strb.w	r3, [ip]
9001a5cc:	6803      	ldr	r3, [r0, #0]
9001a5ce:	b10b      	cbz	r3, 9001a5d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001a5d0:	3302      	adds	r3, #2
9001a5d2:	6003      	str	r3, [r0, #0]
9001a5d4:	680b      	ldr	r3, [r1, #0]
9001a5d6:	b10b      	cbz	r3, 9001a5dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001a5d8:	3301      	adds	r3, #1
9001a5da:	600b      	str	r3, [r1, #0]
9001a5dc:	6803      	ldr	r3, [r0, #0]
9001a5de:	2b00      	cmp	r3, #0
9001a5e0:	d02f      	beq.n	9001a642 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001a5e2:	881c      	ldrh	r4, [r3, #0]
9001a5e4:	2c2a      	cmp	r4, #42	@ 0x2a
9001a5e6:	d135      	bne.n	9001a654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001a5e8:	f04f 33ff 	mov.w	r3, #4294967295
9001a5ec:	6033      	str	r3, [r6, #0]
9001a5ee:	6803      	ldr	r3, [r0, #0]
9001a5f0:	b10b      	cbz	r3, 9001a5f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001a5f2:	3302      	adds	r3, #2
9001a5f4:	6003      	str	r3, [r0, #0]
9001a5f6:	680b      	ldr	r3, [r1, #0]
9001a5f8:	b10b      	cbz	r3, 9001a5fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001a5fa:	3301      	adds	r3, #1
9001a5fc:	600b      	str	r3, [r1, #0]
9001a5fe:	6803      	ldr	r3, [r0, #0]
9001a600:	b31b      	cbz	r3, 9001a64a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001a602:	881c      	ldrh	r4, [r3, #0]
9001a604:	2c2e      	cmp	r4, #46	@ 0x2e
9001a606:	d11a      	bne.n	9001a63e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a608:	2301      	movs	r3, #1
9001a60a:	703b      	strb	r3, [r7, #0]
9001a60c:	6803      	ldr	r3, [r0, #0]
9001a60e:	b10b      	cbz	r3, 9001a614 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001a610:	3302      	adds	r3, #2
9001a612:	6003      	str	r3, [r0, #0]
9001a614:	680b      	ldr	r3, [r1, #0]
9001a616:	b10b      	cbz	r3, 9001a61c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001a618:	3301      	adds	r3, #1
9001a61a:	600b      	str	r3, [r1, #0]
9001a61c:	6803      	ldr	r3, [r0, #0]
9001a61e:	2b00      	cmp	r3, #0
9001a620:	d036      	beq.n	9001a690 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001a622:	881b      	ldrh	r3, [r3, #0]
9001a624:	2b2a      	cmp	r3, #42	@ 0x2a
9001a626:	d137      	bne.n	9001a698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001a628:	f04f 33ff 	mov.w	r3, #4294967295
9001a62c:	602b      	str	r3, [r5, #0]
9001a62e:	6803      	ldr	r3, [r0, #0]
9001a630:	b10b      	cbz	r3, 9001a636 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001a632:	3302      	adds	r3, #2
9001a634:	6003      	str	r3, [r0, #0]
9001a636:	680b      	ldr	r3, [r1, #0]
9001a638:	b10b      	cbz	r3, 9001a63e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a63a:	3301      	adds	r3, #1
9001a63c:	600b      	str	r3, [r1, #0]
9001a63e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a642:	680c      	ldr	r4, [r1, #0]
9001a644:	b134      	cbz	r4, 9001a654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001a646:	7824      	ldrb	r4, [r4, #0]
9001a648:	e7cc      	b.n	9001a5e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001a64a:	680b      	ldr	r3, [r1, #0]
9001a64c:	2b00      	cmp	r3, #0
9001a64e:	d0f6      	beq.n	9001a63e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a650:	781c      	ldrb	r4, [r3, #0]
9001a652:	e7d7      	b.n	9001a604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a654:	2300      	movs	r3, #0
9001a656:	220a      	movs	r2, #10
9001a658:	6033      	str	r3, [r6, #0]
9001a65a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001a65e:	fa1f f38c 	uxth.w	r3, ip
9001a662:	2b09      	cmp	r3, #9
9001a664:	d8ce      	bhi.n	9001a604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a666:	6833      	ldr	r3, [r6, #0]
9001a668:	fb02 c303 	mla	r3, r2, r3, ip
9001a66c:	6033      	str	r3, [r6, #0]
9001a66e:	6803      	ldr	r3, [r0, #0]
9001a670:	b10b      	cbz	r3, 9001a676 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001a672:	3302      	adds	r3, #2
9001a674:	6003      	str	r3, [r0, #0]
9001a676:	680b      	ldr	r3, [r1, #0]
9001a678:	b10b      	cbz	r3, 9001a67e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001a67a:	3301      	adds	r3, #1
9001a67c:	600b      	str	r3, [r1, #0]
9001a67e:	6803      	ldr	r3, [r0, #0]
9001a680:	b10b      	cbz	r3, 9001a686 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001a682:	881c      	ldrh	r4, [r3, #0]
9001a684:	e7e9      	b.n	9001a65a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a686:	680c      	ldr	r4, [r1, #0]
9001a688:	2c00      	cmp	r4, #0
9001a68a:	d0e6      	beq.n	9001a65a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a68c:	7824      	ldrb	r4, [r4, #0]
9001a68e:	e7e4      	b.n	9001a65a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a690:	680b      	ldr	r3, [r1, #0]
9001a692:	b10b      	cbz	r3, 9001a698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001a694:	781b      	ldrb	r3, [r3, #0]
9001a696:	e7c5      	b.n	9001a624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001a698:	2200      	movs	r2, #0
9001a69a:	240a      	movs	r4, #10
9001a69c:	602a      	str	r2, [r5, #0]
9001a69e:	3b30      	subs	r3, #48	@ 0x30
9001a6a0:	682a      	ldr	r2, [r5, #0]
9001a6a2:	b29e      	uxth	r6, r3
9001a6a4:	2e09      	cmp	r6, #9
9001a6a6:	d813      	bhi.n	9001a6d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001a6a8:	fb04 3302 	mla	r3, r4, r2, r3
9001a6ac:	602b      	str	r3, [r5, #0]
9001a6ae:	6803      	ldr	r3, [r0, #0]
9001a6b0:	b10b      	cbz	r3, 9001a6b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001a6b2:	3302      	adds	r3, #2
9001a6b4:	6003      	str	r3, [r0, #0]
9001a6b6:	680b      	ldr	r3, [r1, #0]
9001a6b8:	b10b      	cbz	r3, 9001a6be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001a6ba:	3301      	adds	r3, #1
9001a6bc:	600b      	str	r3, [r1, #0]
9001a6be:	6803      	ldr	r3, [r0, #0]
9001a6c0:	b10b      	cbz	r3, 9001a6c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001a6c2:	881b      	ldrh	r3, [r3, #0]
9001a6c4:	e7eb      	b.n	9001a69e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6c6:	680b      	ldr	r3, [r1, #0]
9001a6c8:	2b00      	cmp	r3, #0
9001a6ca:	d0e8      	beq.n	9001a69e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6cc:	781b      	ldrb	r3, [r3, #0]
9001a6ce:	e7e6      	b.n	9001a69e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6d0:	2a06      	cmp	r2, #6
9001a6d2:	bfa8      	it	ge
9001a6d4:	2206      	movge	r2, #6
9001a6d6:	602a      	str	r2, [r5, #0]
9001a6d8:	e7b1      	b.n	9001a63e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001a6da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001a6da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a6de:	b0a3      	sub	sp, #140	@ 0x8c
9001a6e0:	2600      	movs	r6, #0
9001a6e2:	4607      	mov	r7, r0
9001a6e4:	4688      	mov	r8, r1
9001a6e6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001a6ea:	4631      	mov	r1, r6
9001a6ec:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001a6ee:	4648      	mov	r0, r9
9001a6f0:	960d      	str	r6, [sp, #52]	@ 0x34
9001a6f2:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001a6f6:	2242      	movs	r2, #66	@ 0x42
9001a6f8:	f010 f866 	bl	9002a7c8 <memset>
9001a6fc:	b15f      	cbz	r7, 9001a716 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001a6fe:	f108 3aff 	add.w	sl, r8, #4294967295
9001a702:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001a704:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a706:	b152      	cbz	r2, 9001a71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001a708:	8812      	ldrh	r2, [r2, #0]
9001a70a:	b10a      	cbz	r2, 9001a710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001a70c:	459a      	cmp	sl, r3
9001a70e:	dc2e      	bgt.n	9001a76e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001a710:	2200      	movs	r2, #0
9001a712:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001a716:	4638      	mov	r0, r7
9001a718:	b023      	add	sp, #140	@ 0x8c
9001a71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a71e:	9a08      	ldr	r2, [sp, #32]
9001a720:	2a00      	cmp	r2, #0
9001a722:	d0f5      	beq.n	9001a710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001a724:	7812      	ldrb	r2, [r2, #0]
9001a726:	e7f0      	b.n	9001a70a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001a728:	2d00      	cmp	r5, #0
9001a72a:	d0ea      	beq.n	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a72c:	782a      	ldrb	r2, [r5, #0]
9001a72e:	b142      	cbz	r2, 9001a742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001a730:	2a25      	cmp	r2, #37	@ 0x25
9001a732:	d001      	beq.n	9001a738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001a734:	459a      	cmp	sl, r3
9001a736:	dc08      	bgt.n	9001a74a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001a738:	f1bb 0f00 	cmp.w	fp, #0
9001a73c:	d121      	bne.n	9001a782 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001a73e:	2d00      	cmp	r5, #0
9001a740:	d0df      	beq.n	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a742:	782a      	ldrb	r2, [r5, #0]
9001a744:	f04f 0b00 	mov.w	fp, #0
9001a748:	e01d      	b.n	9001a786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001a74a:	f1bb 0f00 	cmp.w	fp, #0
9001a74e:	d077      	beq.n	9001a840 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001a750:	f8bb 2000 	ldrh.w	r2, [fp]
9001a754:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001a758:	f1bb 0f00 	cmp.w	fp, #0
9001a75c:	d002      	beq.n	9001a764 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001a75e:	f10b 0202 	add.w	r2, fp, #2
9001a762:	9209      	str	r2, [sp, #36]	@ 0x24
9001a764:	b10d      	cbz	r5, 9001a76a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001a766:	3501      	adds	r5, #1
9001a768:	9508      	str	r5, [sp, #32]
9001a76a:	3301      	adds	r3, #1
9001a76c:	930d      	str	r3, [sp, #52]	@ 0x34
9001a76e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a770:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001a774:	f1bb 0f00 	cmp.w	fp, #0
9001a778:	d0d6      	beq.n	9001a728 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001a77a:	f8bb 2000 	ldrh.w	r2, [fp]
9001a77e:	2a00      	cmp	r2, #0
9001a780:	d1d6      	bne.n	9001a730 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001a782:	f8bb 2000 	ldrh.w	r2, [fp]
9001a786:	2a00      	cmp	r2, #0
9001a788:	d0bb      	beq.n	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a78a:	459a      	cmp	sl, r3
9001a78c:	ddb9      	ble.n	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a78e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001a792:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001a796:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001a79a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001a79e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001a7a2:	960e      	str	r6, [sp, #56]	@ 0x38
9001a7a4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001a7a8:	960f      	str	r6, [sp, #60]	@ 0x3c
9001a7aa:	f1bb 0f00 	cmp.w	fp, #0
9001a7ae:	d002      	beq.n	9001a7b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001a7b0:	f10b 0302 	add.w	r3, fp, #2
9001a7b4:	9309      	str	r3, [sp, #36]	@ 0x24
9001a7b6:	b10d      	cbz	r5, 9001a7bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001a7b8:	1c6b      	adds	r3, r5, #1
9001a7ba:	9308      	str	r3, [sp, #32]
9001a7bc:	ab0f      	add	r3, sp, #60	@ 0x3c
9001a7be:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001a7c2:	a908      	add	r1, sp, #32
9001a7c4:	a809      	add	r0, sp, #36	@ 0x24
9001a7c6:	9305      	str	r3, [sp, #20]
9001a7c8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001a7cc:	9304      	str	r3, [sp, #16]
9001a7ce:	ab0e      	add	r3, sp, #56	@ 0x38
9001a7d0:	9303      	str	r3, [sp, #12]
9001a7d2:	ab0c      	add	r3, sp, #48	@ 0x30
9001a7d4:	9302      	str	r3, [sp, #8]
9001a7d6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001a7da:	9301      	str	r3, [sp, #4]
9001a7dc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001a7e0:	9300      	str	r3, [sp, #0]
9001a7e2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001a7e6:	f7ff fea8 	bl	9001a53a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001a7ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a7ec:	2b00      	cmp	r3, #0
9001a7ee:	bfbf      	itttt	lt
9001a7f0:	6823      	ldrlt	r3, [r4, #0]
9001a7f2:	3404      	addlt	r4, #4
9001a7f4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a7f8:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001a7fa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001a7fc:	2b00      	cmp	r3, #0
9001a7fe:	bfbe      	ittt	lt
9001a800:	6823      	ldrlt	r3, [r4, #0]
9001a802:	3404      	addlt	r4, #4
9001a804:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a808:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001a80c:	bfb8      	it	lt
9001a80e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001a810:	b1d9      	cbz	r1, 9001a84a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001a812:	880b      	ldrh	r3, [r1, #0]
9001a814:	2b69      	cmp	r3, #105	@ 0x69
9001a816:	d01f      	beq.n	9001a858 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a818:	d82f      	bhi.n	9001a87a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001a81a:	2b58      	cmp	r3, #88	@ 0x58
9001a81c:	d01c      	beq.n	9001a858 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a81e:	d818      	bhi.n	9001a852 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001a820:	2b25      	cmp	r3, #37	@ 0x25
9001a822:	d034      	beq.n	9001a88e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001a824:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a826:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001a82a:	f1bb 0f00 	cmp.w	fp, #0
9001a82e:	f000 80b7 	beq.w	9001a9a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001a832:	f8bb 5000 	ldrh.w	r5, [fp]
9001a836:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001a83a:	3301      	adds	r3, #1
9001a83c:	930d      	str	r3, [sp, #52]	@ 0x34
9001a83e:	e029      	b.n	9001a894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a840:	b10d      	cbz	r5, 9001a846 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001a842:	782a      	ldrb	r2, [r5, #0]
9001a844:	e786      	b.n	9001a754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a846:	462a      	mov	r2, r5
9001a848:	e784      	b.n	9001a754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a84a:	2a00      	cmp	r2, #0
9001a84c:	d0ea      	beq.n	9001a824 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a84e:	7813      	ldrb	r3, [r2, #0]
9001a850:	e7e0      	b.n	9001a814 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001a852:	3b63      	subs	r3, #99	@ 0x63
9001a854:	2b01      	cmp	r3, #1
9001a856:	d8e5      	bhi.n	9001a824 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a858:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001a85c:	b329      	cbz	r1, 9001a8aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001a85e:	880b      	ldrh	r3, [r1, #0]
9001a860:	2b69      	cmp	r3, #105	@ 0x69
9001a862:	d063      	beq.n	9001a92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a864:	d825      	bhi.n	9001a8b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001a866:	2b63      	cmp	r3, #99	@ 0x63
9001a868:	d038      	beq.n	9001a8dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001a86a:	2b64      	cmp	r3, #100	@ 0x64
9001a86c:	d05e      	beq.n	9001a92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a86e:	2b58      	cmp	r3, #88	@ 0x58
9001a870:	d07a      	beq.n	9001a968 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001a872:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001a876:	4625      	mov	r5, r4
9001a878:	e036      	b.n	9001a8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a87a:	2b73      	cmp	r3, #115	@ 0x73
9001a87c:	d0ec      	beq.n	9001a858 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a87e:	d802      	bhi.n	9001a886 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001a880:	2b6f      	cmp	r3, #111	@ 0x6f
9001a882:	d1cf      	bne.n	9001a824 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a884:	e7e8      	b.n	9001a858 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a886:	2b75      	cmp	r3, #117	@ 0x75
9001a888:	d0e6      	beq.n	9001a858 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a88a:	2b78      	cmp	r3, #120	@ 0x78
9001a88c:	e7f9      	b.n	9001a882 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001a88e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a890:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001a894:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a896:	b10b      	cbz	r3, 9001a89c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001a898:	3302      	adds	r3, #2
9001a89a:	9309      	str	r3, [sp, #36]	@ 0x24
9001a89c:	9b08      	ldr	r3, [sp, #32]
9001a89e:	2b00      	cmp	r3, #0
9001a8a0:	f43f af2f 	beq.w	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a8a4:	3301      	adds	r3, #1
9001a8a6:	9308      	str	r3, [sp, #32]
9001a8a8:	e72b      	b.n	9001a702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a8aa:	2a00      	cmp	r2, #0
9001a8ac:	d0e1      	beq.n	9001a872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a8ae:	7813      	ldrb	r3, [r2, #0]
9001a8b0:	e7d6      	b.n	9001a860 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001a8b2:	2b73      	cmp	r3, #115	@ 0x73
9001a8b4:	d036      	beq.n	9001a924 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001a8b6:	d807      	bhi.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001a8b8:	2b6f      	cmp	r3, #111	@ 0x6f
9001a8ba:	d1da      	bne.n	9001a872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a8bc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a8be:	1d25      	adds	r5, r4, #4
9001a8c0:	2308      	movs	r3, #8
9001a8c2:	eba8 0202 	sub.w	r2, r8, r2
9001a8c6:	e049      	b.n	9001a95c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a8c8:	2b75      	cmp	r3, #117	@ 0x75
9001a8ca:	d042      	beq.n	9001a952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001a8cc:	2b78      	cmp	r3, #120	@ 0x78
9001a8ce:	d1d0      	bne.n	9001a872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a8d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a8d2:	1d25      	adds	r5, r4, #4
9001a8d4:	2310      	movs	r3, #16
9001a8d6:	eba8 0202 	sub.w	r2, r8, r2
9001a8da:	e03f      	b.n	9001a95c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a8dc:	6823      	ldr	r3, [r4, #0]
9001a8de:	1d25      	adds	r5, r4, #4
9001a8e0:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001a8e4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001a8e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a8ea:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001a8ee:	2b00      	cmp	r3, #0
9001a8f0:	d051      	beq.n	9001a996 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001a8f2:	881a      	ldrh	r2, [r3, #0]
9001a8f4:	a80d      	add	r0, sp, #52	@ 0x34
9001a8f6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001a8fa:	462c      	mov	r4, r5
9001a8fc:	9005      	str	r0, [sp, #20]
9001a8fe:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001a902:	9004      	str	r0, [sp, #16]
9001a904:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001a906:	9003      	str	r0, [sp, #12]
9001a908:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001a90c:	9002      	str	r0, [sp, #8]
9001a90e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001a910:	9001      	str	r0, [sp, #4]
9001a912:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001a916:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001a91a:	9000      	str	r0, [sp, #0]
9001a91c:	a810      	add	r0, sp, #64	@ 0x40
9001a91e:	f7ff fd49 	bl	9001a3b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001a922:	e7b7      	b.n	9001a894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a924:	1d25      	adds	r5, r4, #4
9001a926:	6823      	ldr	r3, [r4, #0]
9001a928:	9310      	str	r3, [sp, #64]	@ 0x40
9001a92a:	e7dd      	b.n	9001a8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a92c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a92e:	230a      	movs	r3, #10
9001a930:	4649      	mov	r1, r9
9001a932:	6820      	ldr	r0, [r4, #0]
9001a934:	eba8 0202 	sub.w	r2, r8, r2
9001a938:	1d25      	adds	r5, r4, #4
9001a93a:	b292      	uxth	r2, r2
9001a93c:	f7ff fcf0 	bl	9001a320 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001a940:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001a944:	2b2d      	cmp	r3, #45	@ 0x2d
9001a946:	d1cf      	bne.n	9001a8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a948:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001a94c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a94e:	3302      	adds	r3, #2
9001a950:	e7ea      	b.n	9001a928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001a952:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a954:	1d25      	adds	r5, r4, #4
9001a956:	230a      	movs	r3, #10
9001a958:	eba8 0202 	sub.w	r2, r8, r2
9001a95c:	b292      	uxth	r2, r2
9001a95e:	4649      	mov	r1, r9
9001a960:	6820      	ldr	r0, [r4, #0]
9001a962:	f7ff fd09 	bl	9001a378 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a966:	e7bf      	b.n	9001a8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a968:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a96a:	2310      	movs	r3, #16
9001a96c:	4649      	mov	r1, r9
9001a96e:	6820      	ldr	r0, [r4, #0]
9001a970:	eba8 0202 	sub.w	r2, r8, r2
9001a974:	1d25      	adds	r5, r4, #4
9001a976:	b292      	uxth	r2, r2
9001a978:	f7ff fcfe 	bl	9001a378 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a97c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001a980:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001a984:	2b00      	cmp	r3, #0
9001a986:	d0af      	beq.n	9001a8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a988:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001a98c:	2919      	cmp	r1, #25
9001a98e:	d8f7      	bhi.n	9001a980 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a990:	3b20      	subs	r3, #32
9001a992:	8013      	strh	r3, [r2, #0]
9001a994:	e7f4      	b.n	9001a980 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a996:	9a08      	ldr	r2, [sp, #32]
9001a998:	2a00      	cmp	r2, #0
9001a99a:	d0ab      	beq.n	9001a8f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a99c:	7812      	ldrb	r2, [r2, #0]
9001a99e:	e7a9      	b.n	9001a8f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a9a0:	2d00      	cmp	r5, #0
9001a9a2:	f43f af48 	beq.w	9001a836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001a9a6:	782d      	ldrb	r5, [r5, #0]
9001a9a8:	e745      	b.n	9001a836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001a9aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001a9aa:	b507      	push	{r0, r1, r2, lr}
9001a9ac:	9300      	str	r3, [sp, #0]
9001a9ae:	4613      	mov	r3, r2
9001a9b0:	2200      	movs	r2, #0
9001a9b2:	f7ff fe92 	bl	9001a6da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001a9b6:	b003      	add	sp, #12
9001a9b8:	f85d fb04 	ldr.w	pc, [sp], #4

9001a9bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001a9bc:	b40c      	push	{r2, r3}
9001a9be:	b507      	push	{r0, r1, r2, lr}
9001a9c0:	ab04      	add	r3, sp, #16
9001a9c2:	f853 2b04 	ldr.w	r2, [r3], #4
9001a9c6:	9301      	str	r3, [sp, #4]
9001a9c8:	f7ff ffef 	bl	9001a9aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001a9cc:	b003      	add	sp, #12
9001a9ce:	f85d eb04 	ldr.w	lr, [sp], #4
9001a9d2:	b002      	add	sp, #8
9001a9d4:	4770      	bx	lr
	...

9001a9d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001a9d8:	4b01      	ldr	r3, [pc, #4]	@ (9001a9e0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001a9da:	6018      	str	r0, [r3, #0]
9001a9dc:	4770      	bx	lr
9001a9de:	bf00      	nop
9001a9e0:	24023524 	.word	0x24023524

9001a9e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001a9e4:	4b06      	ldr	r3, [pc, #24]	@ (9001aa00 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001a9e6:	881a      	ldrh	r2, [r3, #0]
9001a9e8:	4282      	cmp	r2, r0
9001a9ea:	d807      	bhi.n	9001a9fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001a9ec:	4b05      	ldr	r3, [pc, #20]	@ (9001aa04 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001a9ee:	881b      	ldrh	r3, [r3, #0]
9001a9f0:	4413      	add	r3, r2
9001a9f2:	4298      	cmp	r0, r3
9001a9f4:	bfac      	ite	ge
9001a9f6:	2000      	movge	r0, #0
9001a9f8:	2001      	movlt	r0, #1
9001a9fa:	4770      	bx	lr
9001a9fc:	2000      	movs	r0, #0
9001a9fe:	4770      	bx	lr
9001aa00:	24023544 	.word	0x24023544
9001aa04:	24023548 	.word	0x24023548

9001aa08 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001aa08:	b508      	push	{r3, lr}
9001aa0a:	4601      	mov	r1, r0
9001aa0c:	f7ff ffea 	bl	9001a9e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001aa10:	b118      	cbz	r0, 9001aa1a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001aa12:	4b02      	ldr	r3, [pc, #8]	@ (9001aa1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001aa14:	681b      	ldr	r3, [r3, #0]
9001aa16:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001aa1a:	bd08      	pop	{r3, pc}
9001aa1c:	24023528 	.word	0x24023528

9001aa20 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001aa20:	b5f0      	push	{r4, r5, r6, r7, lr}
9001aa22:	4c24      	ldr	r4, [pc, #144]	@ (9001aab4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001aa24:	6823      	ldr	r3, [r4, #0]
9001aa26:	2b00      	cmp	r3, #0
9001aa28:	d042      	beq.n	9001aab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001aa2a:	4a23      	ldr	r2, [pc, #140]	@ (9001aab8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001aa2c:	4d23      	ldr	r5, [pc, #140]	@ (9001aabc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001aa2e:	8811      	ldrh	r1, [r2, #0]
9001aa30:	f8b5 c000 	ldrh.w	ip, [r5]
9001aa34:	4822      	ldr	r0, [pc, #136]	@ (9001aac0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001aa36:	4461      	add	r1, ip
9001aa38:	1c4a      	adds	r2, r1, #1
9001aa3a:	008f      	lsls	r7, r1, #2
9001aa3c:	f022 0201 	bic.w	r2, r2, #1
9001aa40:	19de      	adds	r6, r3, r7
9001aa42:	0412      	lsls	r2, r2, #16
9001aa44:	6006      	str	r6, [r0, #0]
9001aa46:	4e1f      	ldr	r6, [pc, #124]	@ (9001aac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001aa48:	0c12      	lsrs	r2, r2, #16
9001aa4a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001aa4e:	19da      	adds	r2, r3, r7
9001aa50:	6032      	str	r2, [r6, #0]
9001aa52:	220e      	movs	r2, #14
9001aa54:	fb02 f20c 	mul.w	r2, r2, ip
9001aa58:	3203      	adds	r2, #3
9001aa5a:	f022 0203 	bic.w	r2, r2, #3
9001aa5e:	443a      	add	r2, r7
9001aa60:	4f19      	ldr	r7, [pc, #100]	@ (9001aac8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001aa62:	4413      	add	r3, r2
9001aa64:	603b      	str	r3, [r7, #0]
9001aa66:	2300      	movs	r3, #0
9001aa68:	4f18      	ldr	r7, [pc, #96]	@ (9001aacc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001aa6a:	469c      	mov	ip, r3
9001aa6c:	803b      	strh	r3, [r7, #0]
9001aa6e:	4f18      	ldr	r7, [pc, #96]	@ (9001aad0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001aa70:	683f      	ldr	r7, [r7, #0]
9001aa72:	1aba      	subs	r2, r7, r2
9001aa74:	4f17      	ldr	r7, [pc, #92]	@ (9001aad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001aa76:	603a      	str	r2, [r7, #0]
9001aa78:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001aa7c:	4a16      	ldr	r2, [pc, #88]	@ (9001aad8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001aa7e:	8013      	strh	r3, [r2, #0]
9001aa80:	428b      	cmp	r3, r1
9001aa82:	d10d      	bne.n	9001aaa0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001aa84:	882d      	ldrh	r5, [r5, #0]
9001aa86:	2300      	movs	r3, #0
9001aa88:	6830      	ldr	r0, [r6, #0]
9001aa8a:	240e      	movs	r4, #14
9001aa8c:	429d      	cmp	r5, r3
9001aa8e:	d90f      	bls.n	9001aab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001aa90:	fb04 0203 	mla	r2, r4, r3, r0
9001aa94:	3301      	adds	r3, #1
9001aa96:	7b11      	ldrb	r1, [r2, #12]
9001aa98:	f36f 1145 	bfc	r1, #5, #1
9001aa9c:	7311      	strb	r1, [r2, #12]
9001aa9e:	e7f5      	b.n	9001aa8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001aaa0:	6822      	ldr	r2, [r4, #0]
9001aaa2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001aaa6:	6802      	ldr	r2, [r0, #0]
9001aaa8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001aaac:	3301      	adds	r3, #1
9001aaae:	e7e7      	b.n	9001aa80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001aab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001aab2:	bf00      	nop
9001aab4:	24023528 	.word	0x24023528
9001aab8:	24023544 	.word	0x24023544
9001aabc:	24023548 	.word	0x24023548
9001aac0:	2402353c 	.word	0x2402353c
9001aac4:	2402352c 	.word	0x2402352c
9001aac8:	24023534 	.word	0x24023534
9001aacc:	24023546 	.word	0x24023546
9001aad0:	24023530 	.word	0x24023530
9001aad4:	24023540 	.word	0x24023540
9001aad8:	24023538 	.word	0x24023538

9001aadc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001aadc:	4b06      	ldr	r3, [pc, #24]	@ (9001aaf8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001aade:	681b      	ldr	r3, [r3, #0]
9001aae0:	b943      	cbnz	r3, 9001aaf4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001aae2:	b139      	cbz	r1, 9001aaf4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001aae4:	4b05      	ldr	r3, [pc, #20]	@ (9001aafc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001aae6:	801a      	strh	r2, [r3, #0]
9001aae8:	4b05      	ldr	r3, [pc, #20]	@ (9001ab00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001aaea:	6019      	str	r1, [r3, #0]
9001aaec:	4b05      	ldr	r3, [pc, #20]	@ (9001ab04 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001aaee:	6018      	str	r0, [r3, #0]
9001aaf0:	f7ff bf96 	b.w	9001aa20 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001aaf4:	4770      	bx	lr
9001aaf6:	bf00      	nop
9001aaf8:	24023534 	.word	0x24023534
9001aafc:	24023548 	.word	0x24023548
9001ab00:	24023530 	.word	0x24023530
9001ab04:	24023528 	.word	0x24023528

9001ab08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001ab08:	b470      	push	{r4, r5, r6}
9001ab0a:	4c07      	ldr	r4, [pc, #28]	@ (9001ab28 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001ab0c:	4605      	mov	r5, r0
9001ab0e:	4610      	mov	r0, r2
9001ab10:	9a03      	ldr	r2, [sp, #12]
9001ab12:	6826      	ldr	r6, [r4, #0]
9001ab14:	b936      	cbnz	r6, 9001ab24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001ab16:	6025      	str	r5, [r4, #0]
9001ab18:	4c04      	ldr	r4, [pc, #16]	@ (9001ab2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001ab1a:	8021      	strh	r1, [r4, #0]
9001ab1c:	4619      	mov	r1, r3
9001ab1e:	bc70      	pop	{r4, r5, r6}
9001ab20:	f7ff bfdc 	b.w	9001aadc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001ab24:	bc70      	pop	{r4, r5, r6}
9001ab26:	4770      	bx	lr
9001ab28:	2402354c 	.word	0x2402354c
9001ab2c:	24023544 	.word	0x24023544

9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001ab30:	4a12      	ldr	r2, [pc, #72]	@ (9001ab7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001ab32:	8803      	ldrh	r3, [r0, #0]
9001ab34:	8812      	ldrh	r2, [r2, #0]
9001ab36:	4293      	cmp	r3, r2
9001ab38:	d207      	bcs.n	9001ab4a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001ab3a:	4a11      	ldr	r2, [pc, #68]	@ (9001ab80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001ab3c:	2114      	movs	r1, #20
9001ab3e:	6812      	ldr	r2, [r2, #0]
9001ab40:	fb01 2303 	mla	r3, r1, r3, r2
9001ab44:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001ab48:	4770      	bx	lr
9001ab4a:	490e      	ldr	r1, [pc, #56]	@ (9001ab84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001ab4c:	8809      	ldrh	r1, [r1, #0]
9001ab4e:	4411      	add	r1, r2
9001ab50:	428b      	cmp	r3, r1
9001ab52:	da04      	bge.n	9001ab5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001ab54:	1a9b      	subs	r3, r3, r2
9001ab56:	4a0c      	ldr	r2, [pc, #48]	@ (9001ab88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001ab58:	210e      	movs	r1, #14
9001ab5a:	6812      	ldr	r2, [r2, #0]
9001ab5c:	e7f0      	b.n	9001ab40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001ab5e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ab62:	4293      	cmp	r3, r2
9001ab64:	d108      	bne.n	9001ab78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001ab66:	4b09      	ldr	r3, [pc, #36]	@ (9001ab8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001ab68:	781b      	ldrb	r3, [r3, #0]
9001ab6a:	b91b      	cbnz	r3, 9001ab74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001ab6c:	4b08      	ldr	r3, [pc, #32]	@ (9001ab90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001ab6e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001ab72:	4770      	bx	lr
9001ab74:	4b07      	ldr	r3, [pc, #28]	@ (9001ab94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001ab76:	e7fa      	b.n	9001ab6e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001ab78:	2000      	movs	r0, #0
9001ab7a:	4770      	bx	lr
9001ab7c:	24023544 	.word	0x24023544
9001ab80:	2402354c 	.word	0x2402354c
9001ab84:	24023548 	.word	0x24023548
9001ab88:	2402352c 	.word	0x2402352c
9001ab8c:	240234b4 	.word	0x240234b4
9001ab90:	240234b6 	.word	0x240234b6
9001ab94:	240234b8 	.word	0x240234b8

9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001ab98:	4a12      	ldr	r2, [pc, #72]	@ (9001abe4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001ab9a:	8803      	ldrh	r3, [r0, #0]
9001ab9c:	8812      	ldrh	r2, [r2, #0]
9001ab9e:	4293      	cmp	r3, r2
9001aba0:	d207      	bcs.n	9001abb2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001aba2:	4a11      	ldr	r2, [pc, #68]	@ (9001abe8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001aba4:	2114      	movs	r1, #20
9001aba6:	6812      	ldr	r2, [r2, #0]
9001aba8:	fb01 2303 	mla	r3, r1, r3, r2
9001abac:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001abb0:	4770      	bx	lr
9001abb2:	490e      	ldr	r1, [pc, #56]	@ (9001abec <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001abb4:	8809      	ldrh	r1, [r1, #0]
9001abb6:	4411      	add	r1, r2
9001abb8:	428b      	cmp	r3, r1
9001abba:	da04      	bge.n	9001abc6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001abbc:	1a9b      	subs	r3, r3, r2
9001abbe:	4a0c      	ldr	r2, [pc, #48]	@ (9001abf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001abc0:	210e      	movs	r1, #14
9001abc2:	6812      	ldr	r2, [r2, #0]
9001abc4:	e7f0      	b.n	9001aba8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001abc6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001abca:	4293      	cmp	r3, r2
9001abcc:	d108      	bne.n	9001abe0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001abce:	4b09      	ldr	r3, [pc, #36]	@ (9001abf4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001abd0:	781b      	ldrb	r3, [r3, #0]
9001abd2:	b91b      	cbnz	r3, 9001abdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001abd4:	4b08      	ldr	r3, [pc, #32]	@ (9001abf8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001abd6:	f9b3 0000 	ldrsh.w	r0, [r3]
9001abda:	4770      	bx	lr
9001abdc:	4b07      	ldr	r3, [pc, #28]	@ (9001abfc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001abde:	e7fa      	b.n	9001abd6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001abe0:	2000      	movs	r0, #0
9001abe2:	4770      	bx	lr
9001abe4:	24023544 	.word	0x24023544
9001abe8:	2402354c 	.word	0x2402354c
9001abec:	24023548 	.word	0x24023548
9001abf0:	2402352c 	.word	0x2402352c
9001abf4:	240234b4 	.word	0x240234b4
9001abf8:	240234b8 	.word	0x240234b8
9001abfc:	240234b6 	.word	0x240234b6

9001ac00 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001ac00:	4a22      	ldr	r2, [pc, #136]	@ (9001ac8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001ac02:	b530      	push	{r4, r5, lr}
9001ac04:	880b      	ldrh	r3, [r1, #0]
9001ac06:	8812      	ldrh	r2, [r2, #0]
9001ac08:	4293      	cmp	r3, r2
9001ac0a:	d213      	bcs.n	9001ac34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001ac0c:	4a20      	ldr	r2, [pc, #128]	@ (9001ac90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001ac0e:	2114      	movs	r1, #20
9001ac10:	6812      	ldr	r2, [r2, #0]
9001ac12:	fb01 2303 	mla	r3, r1, r3, r2
9001ac16:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001ac1a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001ac1e:	8a1a      	ldrh	r2, [r3, #16]
9001ac20:	8a5b      	ldrh	r3, [r3, #18]
9001ac22:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001ac26:	8004      	strh	r4, [r0, #0]
9001ac28:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001ac2c:	8041      	strh	r1, [r0, #2]
9001ac2e:	8082      	strh	r2, [r0, #4]
9001ac30:	80c3      	strh	r3, [r0, #6]
9001ac32:	e024      	b.n	9001ac7e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001ac34:	4917      	ldr	r1, [pc, #92]	@ (9001ac94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001ac36:	8809      	ldrh	r1, [r1, #0]
9001ac38:	4411      	add	r1, r2
9001ac3a:	428b      	cmp	r3, r1
9001ac3c:	da10      	bge.n	9001ac60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001ac3e:	1a9b      	subs	r3, r3, r2
9001ac40:	220e      	movs	r2, #14
9001ac42:	4353      	muls	r3, r2
9001ac44:	4a14      	ldr	r2, [pc, #80]	@ (9001ac98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001ac46:	6811      	ldr	r1, [r2, #0]
9001ac48:	18ca      	adds	r2, r1, r3
9001ac4a:	5ecd      	ldrsh	r5, [r1, r3]
9001ac4c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001ac50:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001ac54:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001ac58:	8005      	strh	r5, [r0, #0]
9001ac5a:	8044      	strh	r4, [r0, #2]
9001ac5c:	8081      	strh	r1, [r0, #4]
9001ac5e:	e7e7      	b.n	9001ac30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001ac60:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ac64:	4293      	cmp	r3, r2
9001ac66:	d10b      	bne.n	9001ac80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001ac68:	4b0c      	ldr	r3, [pc, #48]	@ (9001ac9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001ac6a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001ac6e:	4b0c      	ldr	r3, [pc, #48]	@ (9001aca0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001ac70:	8081      	strh	r1, [r0, #4]
9001ac72:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ac76:	2300      	movs	r3, #0
9001ac78:	80c2      	strh	r2, [r0, #6]
9001ac7a:	8003      	strh	r3, [r0, #0]
9001ac7c:	8043      	strh	r3, [r0, #2]
9001ac7e:	bd30      	pop	{r4, r5, pc}
9001ac80:	2300      	movs	r3, #0
9001ac82:	8003      	strh	r3, [r0, #0]
9001ac84:	8043      	strh	r3, [r0, #2]
9001ac86:	8083      	strh	r3, [r0, #4]
9001ac88:	e7d2      	b.n	9001ac30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001ac8a:	bf00      	nop
9001ac8c:	24023544 	.word	0x24023544
9001ac90:	2402354c 	.word	0x2402354c
9001ac94:	24023548 	.word	0x24023548
9001ac98:	2402352c 	.word	0x2402352c
9001ac9c:	240234b0 	.word	0x240234b0
9001aca0:	240234b2 	.word	0x240234b2

9001aca4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001aca4:	4a17      	ldr	r2, [pc, #92]	@ (9001ad04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001aca6:	8803      	ldrh	r3, [r0, #0]
9001aca8:	8812      	ldrh	r2, [r2, #0]
9001acaa:	4293      	cmp	r3, r2
9001acac:	d213      	bcs.n	9001acd6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001acae:	4a16      	ldr	r2, [pc, #88]	@ (9001ad08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001acb0:	2114      	movs	r1, #20
9001acb2:	6812      	ldr	r2, [r2, #0]
9001acb4:	fb01 2303 	mla	r3, r1, r3, r2
9001acb8:	8a1a      	ldrh	r2, [r3, #16]
9001acba:	8919      	ldrh	r1, [r3, #8]
9001acbc:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001acc0:	428a      	cmp	r2, r1
9001acc2:	db1d      	blt.n	9001ad00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001acc4:	8a58      	ldrh	r0, [r3, #18]
9001acc6:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001acca:	895b      	ldrh	r3, [r3, #10]
9001accc:	4298      	cmp	r0, r3
9001acce:	bfac      	ite	ge
9001acd0:	2000      	movge	r0, #0
9001acd2:	2001      	movlt	r0, #1
9001acd4:	4770      	bx	lr
9001acd6:	490d      	ldr	r1, [pc, #52]	@ (9001ad0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001acd8:	8809      	ldrh	r1, [r1, #0]
9001acda:	4411      	add	r1, r2
9001acdc:	428b      	cmp	r3, r1
9001acde:	da0d      	bge.n	9001acfc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001ace0:	1a9b      	subs	r3, r3, r2
9001ace2:	4a0b      	ldr	r2, [pc, #44]	@ (9001ad10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001ace4:	210e      	movs	r1, #14
9001ace6:	6812      	ldr	r2, [r2, #0]
9001ace8:	fb01 2303 	mla	r3, r1, r3, r2
9001acec:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001acf0:	891a      	ldrh	r2, [r3, #8]
9001acf2:	4291      	cmp	r1, r2
9001acf4:	db04      	blt.n	9001ad00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001acf6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001acfa:	e7e6      	b.n	9001acca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001acfc:	2000      	movs	r0, #0
9001acfe:	4770      	bx	lr
9001ad00:	2001      	movs	r0, #1
9001ad02:	4770      	bx	lr
9001ad04:	24023544 	.word	0x24023544
9001ad08:	2402354c 	.word	0x2402354c
9001ad0c:	24023548 	.word	0x24023548
9001ad10:	2402352c 	.word	0x2402352c

9001ad14 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001ad14:	4a12      	ldr	r2, [pc, #72]	@ (9001ad60 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001ad16:	8803      	ldrh	r3, [r0, #0]
9001ad18:	8811      	ldrh	r1, [r2, #0]
9001ad1a:	428b      	cmp	r3, r1
9001ad1c:	d20b      	bcs.n	9001ad36 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001ad1e:	4a11      	ldr	r2, [pc, #68]	@ (9001ad64 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ad20:	6812      	ldr	r2, [r2, #0]
9001ad22:	b112      	cbz	r2, 9001ad2a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001ad24:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ad28:	b9c0      	cbnz	r0, 9001ad5c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001ad2a:	4a0f      	ldr	r2, [pc, #60]	@ (9001ad68 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001ad2c:	6811      	ldr	r1, [r2, #0]
9001ad2e:	2214      	movs	r2, #20
9001ad30:	4353      	muls	r3, r2
9001ad32:	58c8      	ldr	r0, [r1, r3]
9001ad34:	4770      	bx	lr
9001ad36:	4a0d      	ldr	r2, [pc, #52]	@ (9001ad6c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001ad38:	8812      	ldrh	r2, [r2, #0]
9001ad3a:	440a      	add	r2, r1
9001ad3c:	4293      	cmp	r3, r2
9001ad3e:	da04      	bge.n	9001ad4a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001ad40:	4a08      	ldr	r2, [pc, #32]	@ (9001ad64 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ad42:	6812      	ldr	r2, [r2, #0]
9001ad44:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ad48:	4770      	bx	lr
9001ad4a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ad4e:	4293      	cmp	r3, r2
9001ad50:	d103      	bne.n	9001ad5a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001ad52:	4b07      	ldr	r3, [pc, #28]	@ (9001ad70 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001ad54:	681b      	ldr	r3, [r3, #0]
9001ad56:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001ad58:	4770      	bx	lr
9001ad5a:	2000      	movs	r0, #0
9001ad5c:	4770      	bx	lr
9001ad5e:	bf00      	nop
9001ad60:	24023544 	.word	0x24023544
9001ad64:	24023528 	.word	0x24023528
9001ad68:	2402354c 	.word	0x2402354c
9001ad6c:	24023548 	.word	0x24023548
9001ad70:	240234bc 	.word	0x240234bc

9001ad74 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001ad74:	4b24      	ldr	r3, [pc, #144]	@ (9001ae08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001ad76:	8802      	ldrh	r2, [r0, #0]
9001ad78:	8818      	ldrh	r0, [r3, #0]
9001ad7a:	4282      	cmp	r2, r0
9001ad7c:	d221      	bcs.n	9001adc2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001ad7e:	4b23      	ldr	r3, [pc, #140]	@ (9001ae0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001ad80:	6819      	ldr	r1, [r3, #0]
9001ad82:	2314      	movs	r3, #20
9001ad84:	fb03 1302 	mla	r3, r3, r2, r1
9001ad88:	6858      	ldr	r0, [r3, #4]
9001ad8a:	2800      	cmp	r0, #0
9001ad8c:	d03a      	beq.n	9001ae04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad8e:	4920      	ldr	r1, [pc, #128]	@ (9001ae10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001ad90:	6809      	ldr	r1, [r1, #0]
9001ad92:	2900      	cmp	r1, #0
9001ad94:	d036      	beq.n	9001ae04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad96:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001ad9a:	2900      	cmp	r1, #0
9001ad9c:	d032      	beq.n	9001ae04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad9e:	891a      	ldrh	r2, [r3, #8]
9001ada0:	8958      	ldrh	r0, [r3, #10]
9001ada2:	4350      	muls	r0, r2
9001ada4:	7c5a      	ldrb	r2, [r3, #17]
9001ada6:	7cdb      	ldrb	r3, [r3, #19]
9001ada8:	0952      	lsrs	r2, r2, #5
9001adaa:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001adae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001adb2:	2b0b      	cmp	r3, #11
9001adb4:	bf18      	it	ne
9001adb6:	0040      	lslne	r0, r0, #1
9001adb8:	3003      	adds	r0, #3
9001adba:	f020 0003 	bic.w	r0, r0, #3
9001adbe:	4408      	add	r0, r1
9001adc0:	4770      	bx	lr
9001adc2:	4b14      	ldr	r3, [pc, #80]	@ (9001ae14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001adc4:	881b      	ldrh	r3, [r3, #0]
9001adc6:	4403      	add	r3, r0
9001adc8:	429a      	cmp	r2, r3
9001adca:	da1a      	bge.n	9001ae02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001adcc:	4b12      	ldr	r3, [pc, #72]	@ (9001ae18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001adce:	1a10      	subs	r0, r2, r0
9001add0:	210e      	movs	r1, #14
9001add2:	681b      	ldr	r3, [r3, #0]
9001add4:	fb01 3000 	mla	r0, r1, r0, r3
9001add8:	7b03      	ldrb	r3, [r0, #12]
9001adda:	f003 031f 	and.w	r3, r3, #31
9001adde:	2b0b      	cmp	r3, #11
9001ade0:	d10b      	bne.n	9001adfa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001ade2:	8903      	ldrh	r3, [r0, #8]
9001ade4:	8940      	ldrh	r0, [r0, #10]
9001ade6:	4358      	muls	r0, r3
9001ade8:	4b09      	ldr	r3, [pc, #36]	@ (9001ae10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001adea:	3003      	adds	r0, #3
9001adec:	6819      	ldr	r1, [r3, #0]
9001adee:	f020 0303 	bic.w	r3, r0, #3
9001adf2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001adf6:	4418      	add	r0, r3
9001adf8:	4770      	bx	lr
9001adfa:	2b0d      	cmp	r3, #13
9001adfc:	d101      	bne.n	9001ae02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001adfe:	300d      	adds	r0, #13
9001ae00:	4770      	bx	lr
9001ae02:	2000      	movs	r0, #0
9001ae04:	4770      	bx	lr
9001ae06:	bf00      	nop
9001ae08:	24023544 	.word	0x24023544
9001ae0c:	2402354c 	.word	0x2402354c
9001ae10:	24023528 	.word	0x24023528
9001ae14:	24023548 	.word	0x24023548
9001ae18:	2402352c 	.word	0x2402352c

9001ae1c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001ae1c:	4b1f      	ldr	r3, [pc, #124]	@ (9001ae9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001ae1e:	b510      	push	{r4, lr}
9001ae20:	8802      	ldrh	r2, [r0, #0]
9001ae22:	881b      	ldrh	r3, [r3, #0]
9001ae24:	429a      	cmp	r2, r3
9001ae26:	d21a      	bcs.n	9001ae5e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001ae28:	4b1d      	ldr	r3, [pc, #116]	@ (9001aea0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001ae2a:	2114      	movs	r1, #20
9001ae2c:	681b      	ldr	r3, [r3, #0]
9001ae2e:	fb01 3102 	mla	r1, r1, r2, r3
9001ae32:	7c4b      	ldrb	r3, [r1, #17]
9001ae34:	0958      	lsrs	r0, r3, #5
9001ae36:	7ccb      	ldrb	r3, [r1, #19]
9001ae38:	491a      	ldr	r1, [pc, #104]	@ (9001aea4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001ae3a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001ae3e:	6809      	ldr	r1, [r1, #0]
9001ae40:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001ae44:	b2d8      	uxtb	r0, r3
9001ae46:	b149      	cbz	r1, 9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae48:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001ae4c:	b132      	cbz	r2, 9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae4e:	2b0e      	cmp	r3, #14
9001ae50:	d021      	beq.n	9001ae96 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001ae52:	280f      	cmp	r0, #15
9001ae54:	d01d      	beq.n	9001ae92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001ae56:	2810      	cmp	r0, #16
9001ae58:	bf08      	it	eq
9001ae5a:	2002      	moveq	r0, #2
9001ae5c:	bd10      	pop	{r4, pc}
9001ae5e:	4912      	ldr	r1, [pc, #72]	@ (9001aea8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001ae60:	8809      	ldrh	r1, [r1, #0]
9001ae62:	4419      	add	r1, r3
9001ae64:	428a      	cmp	r2, r1
9001ae66:	da09      	bge.n	9001ae7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001ae68:	1ad3      	subs	r3, r2, r3
9001ae6a:	4a10      	ldr	r2, [pc, #64]	@ (9001aeac <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001ae6c:	210e      	movs	r1, #14
9001ae6e:	6812      	ldr	r2, [r2, #0]
9001ae70:	fb01 2303 	mla	r3, r1, r3, r2
9001ae74:	7b18      	ldrb	r0, [r3, #12]
9001ae76:	f000 001f 	and.w	r0, r0, #31
9001ae7a:	e7ef      	b.n	9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae7c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001ae80:	429a      	cmp	r2, r3
9001ae82:	d108      	bne.n	9001ae96 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001ae84:	f7f6 fa2c 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
9001ae88:	6803      	ldr	r3, [r0, #0]
9001ae8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ae8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ae90:	4718      	bx	r3
9001ae92:	2001      	movs	r0, #1
9001ae94:	e7e2      	b.n	9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae96:	2000      	movs	r0, #0
9001ae98:	e7e0      	b.n	9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae9a:	bf00      	nop
9001ae9c:	24023544 	.word	0x24023544
9001aea0:	2402354c 	.word	0x2402354c
9001aea4:	24023528 	.word	0x24023528
9001aea8:	24023548 	.word	0x24023548
9001aeac:	2402352c 	.word	0x2402352c

9001aeb0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001aeb0:	2010      	movs	r0, #16
9001aeb2:	4770      	bx	lr

9001aeb4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001aeb4:	4b02      	ldr	r3, [pc, #8]	@ (9001aec0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001aeb6:	8818      	ldrh	r0, [r3, #0]
9001aeb8:	0040      	lsls	r0, r0, #1
9001aeba:	b280      	uxth	r0, r0
9001aebc:	4770      	bx	lr
9001aebe:	bf00      	nop
9001aec0:	240234b6 	.word	0x240234b6

9001aec4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001aec4:	2bff      	cmp	r3, #255	@ 0xff
9001aec6:	d05e      	beq.n	9001af86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001aec8:	2a0b      	cmp	r2, #11
9001aeca:	d058      	beq.n	9001af7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001aecc:	d80e      	bhi.n	9001aeec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001aece:	2a03      	cmp	r2, #3
9001aed0:	d04d      	beq.n	9001af6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001aed2:	d804      	bhi.n	9001aede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001aed4:	2a01      	cmp	r2, #1
9001aed6:	d04c      	beq.n	9001af72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001aed8:	d94d      	bls.n	9001af76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001aeda:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001aedc:	e031      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aede:	2a09      	cmp	r2, #9
9001aee0:	d04d      	beq.n	9001af7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001aee2:	d84a      	bhi.n	9001af7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001aee4:	2a08      	cmp	r2, #8
9001aee6:	d048      	beq.n	9001af7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001aee8:	2300      	movs	r3, #0
9001aeea:	e02a      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aeec:	2a2f      	cmp	r2, #47	@ 0x2f
9001aeee:	d02c      	beq.n	9001af4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001aef0:	d811      	bhi.n	9001af16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001aef2:	2a2d      	cmp	r2, #45	@ 0x2d
9001aef4:	d018      	beq.n	9001af28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001aef6:	d831      	bhi.n	9001af5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001aef8:	2a2c      	cmp	r2, #44	@ 0x2c
9001aefa:	d1f5      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aefc:	684a      	ldr	r2, [r1, #4]
9001aefe:	7813      	ldrb	r3, [r2, #0]
9001af00:	7852      	ldrb	r2, [r2, #1]
9001af02:	2a00      	cmp	r2, #0
9001af04:	d1f0      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af06:	2b01      	cmp	r3, #1
9001af08:	d01d      	beq.n	9001af46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001af0a:	2b00      	cmp	r3, #0
9001af0c:	d02d      	beq.n	9001af6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001af0e:	2b02      	cmp	r3, #2
9001af10:	d1ea      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af12:	68c3      	ldr	r3, [r0, #12]
9001af14:	e015      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af16:	2a31      	cmp	r2, #49	@ 0x31
9001af18:	d004      	beq.n	9001af24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001af1a:	d332      	bcc.n	9001af82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001af1c:	2a32      	cmp	r2, #50	@ 0x32
9001af1e:	d030      	beq.n	9001af82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001af20:	2a33      	cmp	r2, #51	@ 0x33
9001af22:	d1e1      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af24:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001af26:	e00c      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af28:	684a      	ldr	r2, [r1, #4]
9001af2a:	7813      	ldrb	r3, [r2, #0]
9001af2c:	7852      	ldrb	r2, [r2, #1]
9001af2e:	2a00      	cmp	r2, #0
9001af30:	d1da      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af32:	2b01      	cmp	r3, #1
9001af34:	d004      	beq.n	9001af40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001af36:	d30f      	bcc.n	9001af58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001af38:	2b02      	cmp	r3, #2
9001af3a:	d1d5      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af3c:	6943      	ldr	r3, [r0, #20]
9001af3e:	e000      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af40:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001af42:	4618      	mov	r0, r3
9001af44:	4770      	bx	lr
9001af46:	69c3      	ldr	r3, [r0, #28]
9001af48:	e7fb      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af4a:	684b      	ldr	r3, [r1, #4]
9001af4c:	781a      	ldrb	r2, [r3, #0]
9001af4e:	785b      	ldrb	r3, [r3, #1]
9001af50:	2b00      	cmp	r3, #0
9001af52:	d1c9      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af54:	2a00      	cmp	r2, #0
9001af56:	d1f4      	bne.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af58:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001af5a:	e7f2      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af5c:	684b      	ldr	r3, [r1, #4]
9001af5e:	781a      	ldrb	r2, [r3, #0]
9001af60:	785b      	ldrb	r3, [r3, #1]
9001af62:	2b00      	cmp	r3, #0
9001af64:	d1c0      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af66:	2a00      	cmp	r2, #0
9001af68:	d1eb      	bne.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af6a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001af6c:	e7e9      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af6e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001af70:	e7e7      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af72:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001af74:	e7e5      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af76:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001af78:	e7e3      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af7a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001af7c:	e7e1      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af7e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001af80:	e7df      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af82:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001af84:	e7dd      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af86:	2a0b      	cmp	r2, #11
9001af88:	d059      	beq.n	9001b03e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001af8a:	d80e      	bhi.n	9001afaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001af8c:	2a03      	cmp	r2, #3
9001af8e:	d050      	beq.n	9001b032 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001af90:	d804      	bhi.n	9001af9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001af92:	2a01      	cmp	r2, #1
9001af94:	d04f      	beq.n	9001b036 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001af96:	d950      	bls.n	9001b03a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001af98:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001af9a:	e7d2      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af9c:	2a09      	cmp	r2, #9
9001af9e:	d04e      	beq.n	9001b03e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001afa0:	d801      	bhi.n	9001afa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001afa2:	2a08      	cmp	r2, #8
9001afa4:	d1a0      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afa6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001afa8:	e7cb      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afaa:	2a2f      	cmp	r2, #47	@ 0x2f
9001afac:	d02d      	beq.n	9001b00a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001afae:	d811      	bhi.n	9001afd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001afb0:	2a2d      	cmp	r2, #45	@ 0x2d
9001afb2:	d018      	beq.n	9001afe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001afb4:	d833      	bhi.n	9001b01e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001afb6:	2a2c      	cmp	r2, #44	@ 0x2c
9001afb8:	d196      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afba:	684a      	ldr	r2, [r1, #4]
9001afbc:	7813      	ldrb	r3, [r2, #0]
9001afbe:	7852      	ldrb	r2, [r2, #1]
9001afc0:	2a00      	cmp	r2, #0
9001afc2:	d191      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afc4:	2b01      	cmp	r3, #1
9001afc6:	d01e      	beq.n	9001b006 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001afc8:	2b00      	cmp	r3, #0
9001afca:	d030      	beq.n	9001b02e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001afcc:	2b02      	cmp	r3, #2
9001afce:	d18b      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afd0:	6903      	ldr	r3, [r0, #16]
9001afd2:	e7b6      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afd4:	2a31      	cmp	r2, #49	@ 0x31
9001afd6:	d004      	beq.n	9001afe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001afd8:	d333      	bcc.n	9001b042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001afda:	2a32      	cmp	r2, #50	@ 0x32
9001afdc:	d031      	beq.n	9001b042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001afde:	2a33      	cmp	r2, #51	@ 0x33
9001afe0:	d182      	bne.n	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afe2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001afe4:	e7ad      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afe6:	684a      	ldr	r2, [r1, #4]
9001afe8:	7813      	ldrb	r3, [r2, #0]
9001afea:	7852      	ldrb	r2, [r2, #1]
9001afec:	2a00      	cmp	r2, #0
9001afee:	f47f af7b 	bne.w	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aff2:	2b01      	cmp	r3, #1
9001aff4:	d005      	beq.n	9001b002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001aff6:	d310      	bcc.n	9001b01a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001aff8:	2b02      	cmp	r3, #2
9001affa:	f47f af75 	bne.w	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001affe:	6983      	ldr	r3, [r0, #24]
9001b000:	e79f      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b002:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001b004:	e79d      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b006:	6a03      	ldr	r3, [r0, #32]
9001b008:	e79b      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b00a:	684b      	ldr	r3, [r1, #4]
9001b00c:	781a      	ldrb	r2, [r3, #0]
9001b00e:	785b      	ldrb	r3, [r3, #1]
9001b010:	2b00      	cmp	r3, #0
9001b012:	f47f af69 	bne.w	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b016:	2a00      	cmp	r2, #0
9001b018:	d193      	bne.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b01a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001b01c:	e791      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b01e:	684b      	ldr	r3, [r1, #4]
9001b020:	781a      	ldrb	r2, [r3, #0]
9001b022:	785b      	ldrb	r3, [r3, #1]
9001b024:	2b00      	cmp	r3, #0
9001b026:	f47f af5f 	bne.w	9001aee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b02a:	2a00      	cmp	r2, #0
9001b02c:	d189      	bne.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b02e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001b030:	e787      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b032:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001b034:	e785      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b036:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001b038:	e783      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b03a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001b03c:	e781      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b03e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001b040:	e77f      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b042:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001b044:	e77d      	b.n	9001af42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001b046 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b04a:	b087      	sub	sp, #28
9001b04c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b04e:	9205      	str	r2, [sp, #20]
9001b050:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b054:	9101      	str	r1, [sp, #4]
9001b056:	9202      	str	r2, [sp, #8]
9001b058:	6841      	ldr	r1, [r0, #4]
9001b05a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b05e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b062:	fb01 2404 	mla	r4, r1, r4, r2
9001b066:	6802      	ldr	r2, [r0, #0]
9001b068:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b06c:	f8de 2000 	ldr.w	r2, [lr]
9001b070:	9203      	str	r2, [sp, #12]
9001b072:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b076:	3204      	adds	r2, #4
9001b078:	9204      	str	r2, [sp, #16]
9001b07a:	9a02      	ldr	r2, [sp, #8]
9001b07c:	43d6      	mvns	r6, r2
9001b07e:	b2f6      	uxtb	r6, r6
9001b080:	9a01      	ldr	r2, [sp, #4]
9001b082:	2a00      	cmp	r2, #0
9001b084:	dc03      	bgt.n	9001b08e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b086:	9a05      	ldr	r2, [sp, #20]
9001b088:	2a00      	cmp	r2, #0
9001b08a:	f340 8129 	ble.w	9001b2e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b08e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b090:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b094:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b098:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b09a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b09e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b0a2:	2b00      	cmp	r3, #0
9001b0a4:	dd0e      	ble.n	9001b0c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b0a6:	1408      	asrs	r0, r1, #16
9001b0a8:	d405      	bmi.n	9001b0b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b0aa:	4560      	cmp	r0, ip
9001b0ac:	da03      	bge.n	9001b0b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b0ae:	1410      	asrs	r0, r2, #16
9001b0b0:	d401      	bmi.n	9001b0b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b0b2:	42b8      	cmp	r0, r7
9001b0b4:	db07      	blt.n	9001b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b0b6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b0b8:	3b01      	subs	r3, #1
9001b0ba:	3402      	adds	r4, #2
9001b0bc:	4401      	add	r1, r0
9001b0be:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b0c0:	4402      	add	r2, r0
9001b0c2:	e7ee      	b.n	9001b0a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b0c4:	d071      	beq.n	9001b1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0c6:	1e58      	subs	r0, r3, #1
9001b0c8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b0ca:	fb05 1500 	mla	r5, r5, r0, r1
9001b0ce:	142d      	asrs	r5, r5, #16
9001b0d0:	d45f      	bmi.n	9001b192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0d2:	4565      	cmp	r5, ip
9001b0d4:	da5d      	bge.n	9001b192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0d6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b0d8:	fb05 2000 	mla	r0, r5, r0, r2
9001b0dc:	1400      	asrs	r0, r0, #16
9001b0de:	d458      	bmi.n	9001b192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0e0:	42b8      	cmp	r0, r7
9001b0e2:	da56      	bge.n	9001b192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0e4:	4699      	mov	r9, r3
9001b0e6:	46a2      	mov	sl, r4
9001b0e8:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001b0ec:	f1b9 0f00 	cmp.w	r9, #0
9001b0f0:	dd57      	ble.n	9001b1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001b0f2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001b0f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b0fa:	9803      	ldr	r0, [sp, #12]
9001b0fc:	140d      	asrs	r5, r1, #16
9001b0fe:	f109 39ff 	add.w	r9, r9, #4294967295
9001b102:	fb07 000c 	mla	r0, r7, ip, r0
9001b106:	5d40      	ldrb	r0, [r0, r5]
9001b108:	9d04      	ldr	r5, [sp, #16]
9001b10a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b10e:	f8ba 5000 	ldrh.w	r5, [sl]
9001b112:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b116:	122f      	asrs	r7, r5, #8
9001b118:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b11c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b120:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b124:	00ed      	lsls	r5, r5, #3
9001b126:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001b12a:	fb17 f706 	smulbb	r7, r7, r6
9001b12e:	b2ed      	uxtb	r5, r5
9001b130:	fb18 f806 	smulbb	r8, r8, r6
9001b134:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b138:	10c7      	asrs	r7, r0, #3
9001b13a:	fb15 f506 	smulbb	r5, r5, r6
9001b13e:	00c0      	lsls	r0, r0, #3
9001b140:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b144:	fa1f fc8c 	uxth.w	ip, ip
9001b148:	b2c0      	uxtb	r0, r0
9001b14a:	fb07 870b 	mla	r7, r7, fp, r8
9001b14e:	fb00 500b 	mla	r0, r0, fp, r5
9001b152:	f10c 0501 	add.w	r5, ip, #1
9001b156:	b2bf      	uxth	r7, r7
9001b158:	b280      	uxth	r0, r0
9001b15a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b15e:	f107 0801 	add.w	r8, r7, #1
9001b162:	1c45      	adds	r5, r0, #1
9001b164:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b168:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b16c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b170:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b172:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b176:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b17a:	4401      	add	r1, r0
9001b17c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001b180:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b182:	ea45 0c0c 	orr.w	ip, r5, ip
9001b186:	4402      	add	r2, r0
9001b188:	ea4c 0c08 	orr.w	ip, ip, r8
9001b18c:	f82a cb02 	strh.w	ip, [sl], #2
9001b190:	e7ac      	b.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b192:	f04f 0800 	mov.w	r8, #0
9001b196:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001b19a:	eb03 0008 	add.w	r0, r3, r8
9001b19e:	2800      	cmp	r0, #0
9001b1a0:	dc41      	bgt.n	9001b226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001b1a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b1a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b1aa:	9b01      	ldr	r3, [sp, #4]
9001b1ac:	2b00      	cmp	r3, #0
9001b1ae:	f340 8097 	ble.w	9001b2e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b1b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b1b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b1b8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b1bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b1c0:	eef0 6a62 	vmov.f32	s13, s5
9001b1c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b1c8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b1cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1d0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b1d4:	eef0 6a43 	vmov.f32	s13, s6
9001b1d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1dc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b1e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b1e4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b1e8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b1ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b1f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b1f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b1f8:	ee12 2a90 	vmov	r2, s5
9001b1fc:	eef0 2a47 	vmov.f32	s5, s14
9001b200:	fb92 f3f3 	sdiv	r3, r2, r3
9001b204:	ee13 2a10 	vmov	r2, s6
9001b208:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b20a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b20c:	eeb0 3a67 	vmov.f32	s6, s15
9001b210:	fb92 f3f3 	sdiv	r3, r2, r3
9001b214:	9314      	str	r3, [sp, #80]	@ 0x50
9001b216:	9b01      	ldr	r3, [sp, #4]
9001b218:	9a05      	ldr	r2, [sp, #20]
9001b21a:	3b01      	subs	r3, #1
9001b21c:	9301      	str	r3, [sp, #4]
9001b21e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b220:	bf08      	it	eq
9001b222:	4613      	moveq	r3, r2
9001b224:	e72c      	b.n	9001b080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001b226:	140f      	asrs	r7, r1, #16
9001b228:	d453      	bmi.n	9001b2d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b22a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b22e:	42bd      	cmp	r5, r7
9001b230:	dd4f      	ble.n	9001b2d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b232:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b236:	d44c      	bmi.n	9001b2d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b238:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b23c:	4560      	cmp	r0, ip
9001b23e:	dd48      	ble.n	9001b2d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b240:	9803      	ldr	r0, [sp, #12]
9001b242:	b22d      	sxth	r5, r5
9001b244:	fb0c 0505 	mla	r5, ip, r5, r0
9001b248:	5de8      	ldrb	r0, [r5, r7]
9001b24a:	9d04      	ldr	r5, [sp, #16]
9001b24c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b250:	f06f 0501 	mvn.w	r5, #1
9001b254:	fb05 fb08 	mul.w	fp, r5, r8
9001b258:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b25c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b260:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b264:	122f      	asrs	r7, r5, #8
9001b266:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b26a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b26e:	00ed      	lsls	r5, r5, #3
9001b270:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b274:	fb17 f706 	smulbb	r7, r7, r6
9001b278:	b2ed      	uxtb	r5, r5
9001b27a:	fb19 f906 	smulbb	r9, r9, r6
9001b27e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b282:	10c7      	asrs	r7, r0, #3
9001b284:	fb15 f506 	smulbb	r5, r5, r6
9001b288:	00c0      	lsls	r0, r0, #3
9001b28a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b28e:	fa1f fc8c 	uxth.w	ip, ip
9001b292:	b2c0      	uxtb	r0, r0
9001b294:	fb07 970a 	mla	r7, r7, sl, r9
9001b298:	fb00 500a 	mla	r0, r0, sl, r5
9001b29c:	f10c 0501 	add.w	r5, ip, #1
9001b2a0:	b2bf      	uxth	r7, r7
9001b2a2:	b280      	uxth	r0, r0
9001b2a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b2a8:	f107 0901 	add.w	r9, r7, #1
9001b2ac:	1c45      	adds	r5, r0, #1
9001b2ae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b2b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b2b6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b2ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b2be:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b2c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b2c6:	ea45 0c0c 	orr.w	ip, r5, ip
9001b2ca:	ea4c 0c09 	orr.w	ip, ip, r9
9001b2ce:	f824 c00b 	strh.w	ip, [r4, fp]
9001b2d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b2d4:	f108 38ff 	add.w	r8, r8, #4294967295
9001b2d8:	4401      	add	r1, r0
9001b2da:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b2dc:	4402      	add	r2, r0
9001b2de:	e75c      	b.n	9001b19a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001b2e0:	b007      	add	sp, #28
9001b2e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b2e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b2ea:	b085      	sub	sp, #20
9001b2ec:	4693      	mov	fp, r2
9001b2ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b2f2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b2f4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b2f6:	6870      	ldr	r0, [r6, #4]
9001b2f8:	9100      	str	r1, [sp, #0]
9001b2fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b2fe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001b302:	fb00 2404 	mla	r4, r0, r4, r2
9001b306:	6832      	ldr	r2, [r6, #0]
9001b308:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b30c:	682a      	ldr	r2, [r5, #0]
9001b30e:	9201      	str	r2, [sp, #4]
9001b310:	686a      	ldr	r2, [r5, #4]
9001b312:	3204      	adds	r2, #4
9001b314:	9202      	str	r2, [sp, #8]
9001b316:	9a00      	ldr	r2, [sp, #0]
9001b318:	2a00      	cmp	r2, #0
9001b31a:	dc03      	bgt.n	9001b324 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b31c:	f1bb 0f00 	cmp.w	fp, #0
9001b320:	f340 80a0 	ble.w	9001b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b324:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b326:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b32a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b32e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b330:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b334:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b338:	2b00      	cmp	r3, #0
9001b33a:	dd0c      	ble.n	9001b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b33c:	1406      	asrs	r6, r0, #16
9001b33e:	d405      	bmi.n	9001b34c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b340:	454e      	cmp	r6, r9
9001b342:	da03      	bge.n	9001b34c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b344:	1416      	asrs	r6, r2, #16
9001b346:	d401      	bmi.n	9001b34c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b348:	4546      	cmp	r6, r8
9001b34a:	db05      	blt.n	9001b358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b34c:	4470      	add	r0, lr
9001b34e:	4462      	add	r2, ip
9001b350:	3b01      	subs	r3, #1
9001b352:	3402      	adds	r4, #2
9001b354:	e7f0      	b.n	9001b338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b356:	d00f      	beq.n	9001b378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b358:	1e5e      	subs	r6, r3, #1
9001b35a:	fb0e 0706 	mla	r7, lr, r6, r0
9001b35e:	143f      	asrs	r7, r7, #16
9001b360:	d541      	bpl.n	9001b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001b362:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b366:	4698      	mov	r8, r3
9001b368:	9603      	str	r6, [sp, #12]
9001b36a:	f1b8 0f00 	cmp.w	r8, #0
9001b36e:	dc59      	bgt.n	9001b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b370:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b374:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b378:	9b00      	ldr	r3, [sp, #0]
9001b37a:	2b00      	cmp	r3, #0
9001b37c:	dd72      	ble.n	9001b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b37e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b382:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b384:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b388:	eeb0 6a62 	vmov.f32	s12, s5
9001b38c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b390:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b394:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b398:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b39c:	eeb0 6a43 	vmov.f32	s12, s6
9001b3a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b3a4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b3a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b3ac:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b3b0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b3b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b3b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b3bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b3c0:	ee12 2a90 	vmov	r2, s5
9001b3c4:	eef0 2a47 	vmov.f32	s5, s14
9001b3c8:	fb92 fef3 	sdiv	lr, r2, r3
9001b3cc:	ee13 2a10 	vmov	r2, s6
9001b3d0:	eeb0 3a67 	vmov.f32	s6, s15
9001b3d4:	fb92 fcf3 	sdiv	ip, r2, r3
9001b3d8:	9b00      	ldr	r3, [sp, #0]
9001b3da:	3b01      	subs	r3, #1
9001b3dc:	9300      	str	r3, [sp, #0]
9001b3de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b3e0:	bf08      	it	eq
9001b3e2:	465b      	moveq	r3, fp
9001b3e4:	e797      	b.n	9001b316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b3e6:	454f      	cmp	r7, r9
9001b3e8:	dabb      	bge.n	9001b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3ea:	fb0c 2606 	mla	r6, ip, r6, r2
9001b3ee:	1436      	asrs	r6, r6, #16
9001b3f0:	d4b7      	bmi.n	9001b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3f2:	4546      	cmp	r6, r8
9001b3f4:	dab5      	bge.n	9001b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3f6:	461e      	mov	r6, r3
9001b3f8:	46a0      	mov	r8, r4
9001b3fa:	2e00      	cmp	r6, #0
9001b3fc:	ddb8      	ble.n	9001b370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b3fe:	1417      	asrs	r7, r2, #16
9001b400:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b404:	9901      	ldr	r1, [sp, #4]
9001b406:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b40a:	4462      	add	r2, ip
9001b40c:	4470      	add	r0, lr
9001b40e:	fb0a 1707 	mla	r7, sl, r7, r1
9001b412:	9902      	ldr	r1, [sp, #8]
9001b414:	3e01      	subs	r6, #1
9001b416:	f817 7009 	ldrb.w	r7, [r7, r9]
9001b41a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b41e:	f828 7b02 	strh.w	r7, [r8], #2
9001b422:	e7ea      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001b424:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b428:	d417      	bmi.n	9001b45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b42a:	68ae      	ldr	r6, [r5, #8]
9001b42c:	454e      	cmp	r6, r9
9001b42e:	dd14      	ble.n	9001b45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b430:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b434:	d411      	bmi.n	9001b45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b436:	68ef      	ldr	r7, [r5, #12]
9001b438:	4557      	cmp	r7, sl
9001b43a:	dd0e      	ble.n	9001b45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b43c:	9f01      	ldr	r7, [sp, #4]
9001b43e:	b236      	sxth	r6, r6
9001b440:	f06f 0101 	mvn.w	r1, #1
9001b444:	fb0a 7606 	mla	r6, sl, r6, r7
9001b448:	9f02      	ldr	r7, [sp, #8]
9001b44a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001b44e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b452:	fb01 f608 	mul.w	r6, r1, r8
9001b456:	9903      	ldr	r1, [sp, #12]
9001b458:	538f      	strh	r7, [r1, r6]
9001b45a:	4470      	add	r0, lr
9001b45c:	4462      	add	r2, ip
9001b45e:	f108 38ff 	add.w	r8, r8, #4294967295
9001b462:	e782      	b.n	9001b36a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b464:	b005      	add	sp, #20
9001b466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b46a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b46e:	b087      	sub	sp, #28
9001b470:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b472:	9205      	str	r2, [sp, #20]
9001b474:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b478:	9102      	str	r1, [sp, #8]
9001b47a:	9203      	str	r2, [sp, #12]
9001b47c:	6861      	ldr	r1, [r4, #4]
9001b47e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b482:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b486:	fb01 2000 	mla	r0, r1, r0, r2
9001b48a:	6822      	ldr	r2, [r4, #0]
9001b48c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001b490:	9200      	str	r2, [sp, #0]
9001b492:	f8dc 2000 	ldr.w	r2, [ip]
9001b496:	9204      	str	r2, [sp, #16]
9001b498:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b49c:	3204      	adds	r2, #4
9001b49e:	9201      	str	r2, [sp, #4]
9001b4a0:	9a03      	ldr	r2, [sp, #12]
9001b4a2:	43d5      	mvns	r5, r2
9001b4a4:	b2ed      	uxtb	r5, r5
9001b4a6:	9a02      	ldr	r2, [sp, #8]
9001b4a8:	2a00      	cmp	r2, #0
9001b4aa:	dc03      	bgt.n	9001b4b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001b4ac:	9a05      	ldr	r2, [sp, #20]
9001b4ae:	2a00      	cmp	r2, #0
9001b4b0:	f340 812c 	ble.w	9001b70c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b4b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b4b6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001b4ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b4be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b4c0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001b4c4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b4c8:	2b00      	cmp	r3, #0
9001b4ca:	dd10      	ble.n	9001b4ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b4cc:	140c      	asrs	r4, r1, #16
9001b4ce:	d405      	bmi.n	9001b4dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4d0:	4574      	cmp	r4, lr
9001b4d2:	da03      	bge.n	9001b4dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4d4:	1414      	asrs	r4, r2, #16
9001b4d6:	d401      	bmi.n	9001b4dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4d8:	42bc      	cmp	r4, r7
9001b4da:	db09      	blt.n	9001b4f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001b4dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b4de:	3b01      	subs	r3, #1
9001b4e0:	9800      	ldr	r0, [sp, #0]
9001b4e2:	4421      	add	r1, r4
9001b4e4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b4e6:	3002      	adds	r0, #2
9001b4e8:	4422      	add	r2, r4
9001b4ea:	9000      	str	r0, [sp, #0]
9001b4ec:	e7ec      	b.n	9001b4c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b4ee:	d071      	beq.n	9001b5d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001b4f0:	1e5c      	subs	r4, r3, #1
9001b4f2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b4f4:	fb06 1604 	mla	r6, r6, r4, r1
9001b4f8:	1436      	asrs	r6, r6, #16
9001b4fa:	d45d      	bmi.n	9001b5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b4fc:	4576      	cmp	r6, lr
9001b4fe:	da5b      	bge.n	9001b5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b500:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001b502:	fb06 2404 	mla	r4, r6, r4, r2
9001b506:	1424      	asrs	r4, r4, #16
9001b508:	d456      	bmi.n	9001b5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b50a:	42bc      	cmp	r4, r7
9001b50c:	da54      	bge.n	9001b5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b50e:	4698      	mov	r8, r3
9001b510:	f8dd 9000 	ldr.w	r9, [sp]
9001b514:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001b518:	f1b8 0f00 	cmp.w	r8, #0
9001b51c:	dd54      	ble.n	9001b5c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b51e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b522:	1414      	asrs	r4, r2, #16
9001b524:	9804      	ldr	r0, [sp, #16]
9001b526:	140e      	asrs	r6, r1, #16
9001b528:	f108 38ff 	add.w	r8, r8, #4294967295
9001b52c:	fb07 0404 	mla	r4, r7, r4, r0
9001b530:	9801      	ldr	r0, [sp, #4]
9001b532:	f814 e006 	ldrb.w	lr, [r4, r6]
9001b536:	f8b9 4000 	ldrh.w	r4, [r9]
9001b53a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b53e:	1227      	asrs	r7, r4, #8
9001b540:	eb00 0b0e 	add.w	fp, r0, lr
9001b544:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001b548:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b54c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b54e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001b552:	f89b b001 	ldrb.w	fp, [fp, #1]
9001b556:	4401      	add	r1, r0
9001b558:	fb16 f60a 	smulbb	r6, r6, sl
9001b55c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b55e:	fb1b fb0a 	smulbb	fp, fp, sl
9001b562:	fb07 6705 	mla	r7, r7, r5, r6
9001b566:	10e6      	asrs	r6, r4, #3
9001b568:	00e4      	lsls	r4, r4, #3
9001b56a:	4402      	add	r2, r0
9001b56c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b570:	b2bf      	uxth	r7, r7
9001b572:	b2e4      	uxtb	r4, r4
9001b574:	fb06 b605 	mla	r6, r6, r5, fp
9001b578:	fb14 f405 	smulbb	r4, r4, r5
9001b57c:	b2b6      	uxth	r6, r6
9001b57e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001b582:	1c7c      	adds	r4, r7, #1
9001b584:	f106 0b01 	add.w	fp, r6, #1
9001b588:	fa1f fe8e 	uxth.w	lr, lr
9001b58c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b590:	f10e 0401 	add.w	r4, lr, #1
9001b594:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b598:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b59c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001b5a0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b5a4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b5a8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b5ac:	4327      	orrs	r7, r4
9001b5ae:	ea47 070b 	orr.w	r7, r7, fp
9001b5b2:	f829 7b02 	strh.w	r7, [r9], #2
9001b5b6:	e7af      	b.n	9001b518 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001b5b8:	f04f 0e00 	mov.w	lr, #0
9001b5bc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001b5c0:	eb03 040e 	add.w	r4, r3, lr
9001b5c4:	2c00      	cmp	r4, #0
9001b5c6:	dc43      	bgt.n	9001b650 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001b5c8:	9a00      	ldr	r2, [sp, #0]
9001b5ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b5ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001b5d2:	9300      	str	r3, [sp, #0]
9001b5d4:	9b02      	ldr	r3, [sp, #8]
9001b5d6:	2b00      	cmp	r3, #0
9001b5d8:	f340 8098 	ble.w	9001b70c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b5dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b5e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b5e2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b5e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b5ea:	eef0 6a62 	vmov.f32	s13, s5
9001b5ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b5f2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b5f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b5fa:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b5fe:	eef0 6a43 	vmov.f32	s13, s6
9001b602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b606:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b60a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b60e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b612:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b616:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b61a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b61e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b622:	ee12 2a90 	vmov	r2, s5
9001b626:	eef0 2a47 	vmov.f32	s5, s14
9001b62a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b62e:	ee13 2a10 	vmov	r2, s6
9001b632:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b634:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b636:	eeb0 3a67 	vmov.f32	s6, s15
9001b63a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b63e:	9314      	str	r3, [sp, #80]	@ 0x50
9001b640:	9b02      	ldr	r3, [sp, #8]
9001b642:	9a05      	ldr	r2, [sp, #20]
9001b644:	3b01      	subs	r3, #1
9001b646:	9302      	str	r3, [sp, #8]
9001b648:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b64a:	bf08      	it	eq
9001b64c:	4613      	moveq	r3, r2
9001b64e:	e72a      	b.n	9001b4a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b650:	140f      	asrs	r7, r1, #16
9001b652:	d454      	bmi.n	9001b6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b654:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001b658:	42be      	cmp	r6, r7
9001b65a:	dd50      	ble.n	9001b6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b65c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001b660:	d44d      	bmi.n	9001b6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b662:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001b666:	4544      	cmp	r4, r8
9001b668:	dd49      	ble.n	9001b6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b66a:	9c04      	ldr	r4, [sp, #16]
9001b66c:	b236      	sxth	r6, r6
9001b66e:	f06f 0001 	mvn.w	r0, #1
9001b672:	fb08 4606 	mla	r6, r8, r6, r4
9001b676:	9c01      	ldr	r4, [sp, #4]
9001b678:	fb00 fa0e 	mul.w	sl, r0, lr
9001b67c:	9800      	ldr	r0, [sp, #0]
9001b67e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001b682:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001b686:	eb04 0b08 	add.w	fp, r4, r8
9001b68a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001b68e:	9801      	ldr	r0, [sp, #4]
9001b690:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001b694:	1227      	asrs	r7, r4, #8
9001b696:	f89b b001 	ldrb.w	fp, [fp, #1]
9001b69a:	fb16 f609 	smulbb	r6, r6, r9
9001b69e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b6a2:	f810 8008 	ldrb.w	r8, [r0, r8]
9001b6a6:	fb1b fb09 	smulbb	fp, fp, r9
9001b6aa:	fb07 6705 	mla	r7, r7, r5, r6
9001b6ae:	10e6      	asrs	r6, r4, #3
9001b6b0:	00e4      	lsls	r4, r4, #3
9001b6b2:	9800      	ldr	r0, [sp, #0]
9001b6b4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b6b8:	b2bf      	uxth	r7, r7
9001b6ba:	b2e4      	uxtb	r4, r4
9001b6bc:	fb06 b605 	mla	r6, r6, r5, fp
9001b6c0:	fb14 f405 	smulbb	r4, r4, r5
9001b6c4:	b2b6      	uxth	r6, r6
9001b6c6:	fb08 4809 	mla	r8, r8, r9, r4
9001b6ca:	1c7c      	adds	r4, r7, #1
9001b6cc:	f106 0b01 	add.w	fp, r6, #1
9001b6d0:	fa1f f888 	uxth.w	r8, r8
9001b6d4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b6d8:	f108 0401 	add.w	r4, r8, #1
9001b6dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b6e0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b6e4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001b6e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b6ec:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b6f0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b6f4:	4327      	orrs	r7, r4
9001b6f6:	ea47 070b 	orr.w	r7, r7, fp
9001b6fa:	f820 700a 	strh.w	r7, [r0, sl]
9001b6fe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b700:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b704:	4401      	add	r1, r0
9001b706:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b708:	4402      	add	r2, r0
9001b70a:	e759      	b.n	9001b5c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b70c:	b007      	add	sp, #28
9001b70e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001b714 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b718:	b085      	sub	sp, #20
9001b71a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b71e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b720:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b722:	9203      	str	r2, [sp, #12]
9001b724:	6870      	ldr	r0, [r6, #4]
9001b726:	686f      	ldr	r7, [r5, #4]
9001b728:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001b72c:	3704      	adds	r7, #4
9001b72e:	9101      	str	r1, [sp, #4]
9001b730:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b734:	fb00 2404 	mla	r4, r0, r4, r2
9001b738:	6832      	ldr	r2, [r6, #0]
9001b73a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b73e:	682a      	ldr	r2, [r5, #0]
9001b740:	9202      	str	r2, [sp, #8]
9001b742:	9a01      	ldr	r2, [sp, #4]
9001b744:	2a00      	cmp	r2, #0
9001b746:	dc03      	bgt.n	9001b750 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b748:	9a03      	ldr	r2, [sp, #12]
9001b74a:	2a00      	cmp	r2, #0
9001b74c:	f340 80cc 	ble.w	9001b8e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b750:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b752:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b756:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b75a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b75c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b760:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b764:	2b00      	cmp	r3, #0
9001b766:	dd0d      	ble.n	9001b784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b768:	1406      	asrs	r6, r0, #16
9001b76a:	d405      	bmi.n	9001b778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b76c:	454e      	cmp	r6, r9
9001b76e:	da03      	bge.n	9001b778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b770:	1416      	asrs	r6, r2, #16
9001b772:	d401      	bmi.n	9001b778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b774:	4546      	cmp	r6, r8
9001b776:	db06      	blt.n	9001b786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b778:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001b77a:	4460      	add	r0, ip
9001b77c:	3b01      	subs	r3, #1
9001b77e:	3402      	adds	r4, #2
9001b780:	4432      	add	r2, r6
9001b782:	e7ef      	b.n	9001b764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001b784:	d00f      	beq.n	9001b7a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b786:	1e5e      	subs	r6, r3, #1
9001b788:	fb0c 0e06 	mla	lr, ip, r6, r0
9001b78c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001b790:	d543      	bpl.n	9001b81a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001b792:	4698      	mov	r8, r3
9001b794:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001b798:	f1b8 0f00 	cmp.w	r8, #0
9001b79c:	dc71      	bgt.n	9001b882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001b79e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b7a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b7a6:	9b01      	ldr	r3, [sp, #4]
9001b7a8:	2b00      	cmp	r3, #0
9001b7aa:	f340 809d 	ble.w	9001b8e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b7ae:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b7b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b7b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b7b8:	eeb0 6a62 	vmov.f32	s12, s5
9001b7bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7c0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7c8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b7cc:	eeb0 6a43 	vmov.f32	s12, s6
9001b7d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7d4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b7d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7dc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7e0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b7e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b7e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b7ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b7f0:	ee12 2a90 	vmov	r2, s5
9001b7f4:	eef0 2a47 	vmov.f32	s5, s14
9001b7f8:	fb92 fcf3 	sdiv	ip, r2, r3
9001b7fc:	ee13 2a10 	vmov	r2, s6
9001b800:	eeb0 3a67 	vmov.f32	s6, s15
9001b804:	fb92 f3f3 	sdiv	r3, r2, r3
9001b808:	9312      	str	r3, [sp, #72]	@ 0x48
9001b80a:	9b01      	ldr	r3, [sp, #4]
9001b80c:	9a03      	ldr	r2, [sp, #12]
9001b80e:	3b01      	subs	r3, #1
9001b810:	9301      	str	r3, [sp, #4]
9001b812:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b814:	bf08      	it	eq
9001b816:	4613      	moveq	r3, r2
9001b818:	e793      	b.n	9001b742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001b81a:	45ce      	cmp	lr, r9
9001b81c:	dab9      	bge.n	9001b792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b81e:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b820:	fb01 2606 	mla	r6, r1, r6, r2
9001b824:	1436      	asrs	r6, r6, #16
9001b826:	d4b4      	bmi.n	9001b792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b828:	4546      	cmp	r6, r8
9001b82a:	dab2      	bge.n	9001b792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b82c:	4698      	mov	r8, r3
9001b82e:	46a2      	mov	sl, r4
9001b830:	f1b8 0f00 	cmp.w	r8, #0
9001b834:	ddb3      	ble.n	9001b79e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b836:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b83a:	1416      	asrs	r6, r2, #16
9001b83c:	9902      	ldr	r1, [sp, #8]
9001b83e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001b842:	f108 38ff 	add.w	r8, r8, #4294967295
9001b846:	4460      	add	r0, ip
9001b848:	fb09 1606 	mla	r6, r9, r6, r1
9001b84c:	4928      	ldr	r1, [pc, #160]	@ (9001b8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001b84e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001b852:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b856:	eb07 0b0e 	add.w	fp, r7, lr
9001b85a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001b85e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001b862:	00f6      	lsls	r6, r6, #3
9001b864:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001b868:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b86a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b86e:	440a      	add	r2, r1
9001b870:	ea49 0606 	orr.w	r6, r9, r6
9001b874:	f817 900e 	ldrb.w	r9, [r7, lr]
9001b878:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001b87c:	f82a 6b02 	strh.w	r6, [sl], #2
9001b880:	e7d6      	b.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b882:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b886:	d429      	bmi.n	9001b8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b888:	68ae      	ldr	r6, [r5, #8]
9001b88a:	454e      	cmp	r6, r9
9001b88c:	dd26      	ble.n	9001b8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b88e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001b892:	d423      	bmi.n	9001b8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b894:	68e9      	ldr	r1, [r5, #12]
9001b896:	4559      	cmp	r1, fp
9001b898:	dd20      	ble.n	9001b8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b89a:	fa0f fe86 	sxth.w	lr, r6
9001b89e:	9902      	ldr	r1, [sp, #8]
9001b8a0:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001b8a4:	f06f 0101 	mvn.w	r1, #1
9001b8a8:	f81e e009 	ldrb.w	lr, [lr, r9]
9001b8ac:	fb01 f908 	mul.w	r9, r1, r8
9001b8b0:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001b8b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b8b8:	eb07 060e 	add.w	r6, r7, lr
9001b8bc:	f896 b002 	ldrb.w	fp, [r6, #2]
9001b8c0:	7876      	ldrb	r6, [r6, #1]
9001b8c2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001b8c6:	00f6      	lsls	r6, r6, #3
9001b8c8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b8cc:	ea4b 0606 	orr.w	r6, fp, r6
9001b8d0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001b8d4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001b8d8:	f82a 6009 	strh.w	r6, [sl, r9]
9001b8dc:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b8de:	4460      	add	r0, ip
9001b8e0:	f108 38ff 	add.w	r8, r8, #4294967295
9001b8e4:	440a      	add	r2, r1
9001b8e6:	e757      	b.n	9001b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b8e8:	b005      	add	sp, #20
9001b8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b8ee:	bf00      	nop
9001b8f0:	fffff800 	.word	0xfffff800

9001b8f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b8f8:	b087      	sub	sp, #28
9001b8fa:	468b      	mov	fp, r1
9001b8fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b900:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b902:	9204      	str	r2, [sp, #16]
9001b904:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b908:	6841      	ldr	r1, [r0, #4]
9001b90a:	9205      	str	r2, [sp, #20]
9001b90c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b910:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b914:	fb01 2404 	mla	r4, r1, r4, r2
9001b918:	6802      	ldr	r2, [r0, #0]
9001b91a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b91e:	f8dc 2000 	ldr.w	r2, [ip]
9001b922:	9201      	str	r2, [sp, #4]
9001b924:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b928:	3204      	adds	r2, #4
9001b92a:	9202      	str	r2, [sp, #8]
9001b92c:	f1bb 0f00 	cmp.w	fp, #0
9001b930:	dc03      	bgt.n	9001b93a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001b932:	9a04      	ldr	r2, [sp, #16]
9001b934:	2a00      	cmp	r2, #0
9001b936:	f340 8138 	ble.w	9001bbaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b93a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b93c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b940:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b944:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b946:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001b94a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b94e:	2b00      	cmp	r3, #0
9001b950:	dd0e      	ble.n	9001b970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b952:	1402      	asrs	r2, r0, #16
9001b954:	d405      	bmi.n	9001b962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b956:	42ba      	cmp	r2, r7
9001b958:	da03      	bge.n	9001b962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b95a:	140a      	asrs	r2, r1, #16
9001b95c:	d401      	bmi.n	9001b962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b95e:	42b2      	cmp	r2, r6
9001b960:	db07      	blt.n	9001b972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b962:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b964:	3b01      	subs	r3, #1
9001b966:	3402      	adds	r4, #2
9001b968:	4410      	add	r0, r2
9001b96a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b96c:	4411      	add	r1, r2
9001b96e:	e7ee      	b.n	9001b94e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001b970:	d019      	beq.n	9001b9a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b972:	1e5a      	subs	r2, r3, #1
9001b974:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b976:	fb05 0502 	mla	r5, r5, r2, r0
9001b97a:	142d      	asrs	r5, r5, #16
9001b97c:	d409      	bmi.n	9001b992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b97e:	42bd      	cmp	r5, r7
9001b980:	da07      	bge.n	9001b992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b982:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b984:	fb05 1202 	mla	r2, r5, r2, r1
9001b988:	1412      	asrs	r2, r2, #16
9001b98a:	d402      	bmi.n	9001b992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b98c:	42b2      	cmp	r2, r6
9001b98e:	f2c0 80ac 	blt.w	9001baea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001b992:	f04f 0e00 	mov.w	lr, #0
9001b996:	eb03 020e 	add.w	r2, r3, lr
9001b99a:	2a00      	cmp	r2, #0
9001b99c:	dc3e      	bgt.n	9001ba1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b99e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b9a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b9a6:	f1bb 0f00 	cmp.w	fp, #0
9001b9aa:	f340 80fe 	ble.w	9001bbaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b9ae:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b9b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b9b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b9b8:	f1bb 0b01 	subs.w	fp, fp, #1
9001b9bc:	eeb0 6a62 	vmov.f32	s12, s5
9001b9c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b9c4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b9c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b9cc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b9d0:	eeb0 6a43 	vmov.f32	s12, s6
9001b9d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b9d8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b9dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b9e0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b9e4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b9e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b9ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b9f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b9f4:	ee12 2a90 	vmov	r2, s5
9001b9f8:	eef0 2a47 	vmov.f32	s5, s14
9001b9fc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ba00:	ee13 2a10 	vmov	r2, s6
9001ba04:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ba06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba08:	eeb0 3a67 	vmov.f32	s6, s15
9001ba0c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ba10:	9a04      	ldr	r2, [sp, #16]
9001ba12:	9314      	str	r3, [sp, #80]	@ 0x50
9001ba14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba16:	bf08      	it	eq
9001ba18:	4613      	moveq	r3, r2
9001ba1a:	e787      	b.n	9001b92c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ba1c:	1406      	asrs	r6, r0, #16
9001ba1e:	d45d      	bmi.n	9001badc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba20:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001ba24:	42b5      	cmp	r5, r6
9001ba26:	dd59      	ble.n	9001badc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba28:	140f      	asrs	r7, r1, #16
9001ba2a:	d457      	bmi.n	9001badc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba2c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001ba30:	42ba      	cmp	r2, r7
9001ba32:	dd53      	ble.n	9001badc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba34:	9a01      	ldr	r2, [sp, #4]
9001ba36:	b22d      	sxth	r5, r5
9001ba38:	fb07 2505 	mla	r5, r7, r5, r2
9001ba3c:	5daa      	ldrb	r2, [r5, r6]
9001ba3e:	9d02      	ldr	r5, [sp, #8]
9001ba40:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ba44:	0e2e      	lsrs	r6, r5, #24
9001ba46:	d049      	beq.n	9001badc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba48:	f06f 0201 	mvn.w	r2, #1
9001ba4c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ba50:	fb02 f20e 	mul.w	r2, r2, lr
9001ba54:	f834 8002 	ldrh.w	r8, [r4, r2]
9001ba58:	9203      	str	r2, [sp, #12]
9001ba5a:	9a05      	ldr	r2, [sp, #20]
9001ba5c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001ba60:	4356      	muls	r6, r2
9001ba62:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ba66:	1c72      	adds	r2, r6, #1
9001ba68:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ba6c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ba70:	b2ed      	uxtb	r5, r5
9001ba72:	1212      	asrs	r2, r2, #8
9001ba74:	fa1f f982 	uxth.w	r9, r2
9001ba78:	43d2      	mvns	r2, r2
9001ba7a:	fb16 f609 	smulbb	r6, r6, r9
9001ba7e:	b2d2      	uxtb	r2, r2
9001ba80:	fb15 f509 	smulbb	r5, r5, r9
9001ba84:	fb07 6702 	mla	r7, r7, r2, r6
9001ba88:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ba8c:	fb1a fa09 	smulbb	sl, sl, r9
9001ba90:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ba94:	b2bf      	uxth	r7, r7
9001ba96:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ba9a:	fa5f f888 	uxtb.w	r8, r8
9001ba9e:	fb06 a602 	mla	r6, r6, r2, sl
9001baa2:	fb08 5502 	mla	r5, r8, r2, r5
9001baa6:	1c7a      	adds	r2, r7, #1
9001baa8:	b2b6      	uxth	r6, r6
9001baaa:	b2ad      	uxth	r5, r5
9001baac:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bab0:	9a03      	ldr	r2, [sp, #12]
9001bab2:	f105 0a01 	add.w	sl, r5, #1
9001bab6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001baba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001babe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bac2:	ea4a 0707 	orr.w	r7, sl, r7
9001bac6:	f106 0a01 	add.w	sl, r6, #1
9001baca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bace:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bad2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bad6:	ea47 070a 	orr.w	r7, r7, sl
9001bada:	52a7      	strh	r7, [r4, r2]
9001badc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bade:	f10e 3eff 	add.w	lr, lr, #4294967295
9001bae2:	4410      	add	r0, r2
9001bae4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bae6:	4411      	add	r1, r2
9001bae8:	e755      	b.n	9001b996 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001baea:	f04f 0800 	mov.w	r8, #0
9001baee:	eba3 0208 	sub.w	r2, r3, r8
9001baf2:	2a00      	cmp	r2, #0
9001baf4:	f77f af53 	ble.w	9001b99e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001baf8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001bafc:	140a      	asrs	r2, r1, #16
9001bafe:	9f01      	ldr	r7, [sp, #4]
9001bb00:	1405      	asrs	r5, r0, #16
9001bb02:	fb06 7202 	mla	r2, r6, r2, r7
9001bb06:	5d52      	ldrb	r2, [r2, r5]
9001bb08:	9d02      	ldr	r5, [sp, #8]
9001bb0a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001bb0e:	0e2e      	lsrs	r6, r5, #24
9001bb10:	d044      	beq.n	9001bb9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001bb12:	9a05      	ldr	r2, [sp, #20]
9001bb14:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001bb18:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001bb1c:	4356      	muls	r6, r2
9001bb1e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001bb22:	1c72      	adds	r2, r6, #1
9001bb24:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bb28:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001bb2c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bb30:	b2ed      	uxtb	r5, r5
9001bb32:	1212      	asrs	r2, r2, #8
9001bb34:	fa1f f982 	uxth.w	r9, r2
9001bb38:	43d2      	mvns	r2, r2
9001bb3a:	fb16 f609 	smulbb	r6, r6, r9
9001bb3e:	b2d2      	uxtb	r2, r2
9001bb40:	fb15 f509 	smulbb	r5, r5, r9
9001bb44:	fb07 6702 	mla	r7, r7, r2, r6
9001bb48:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001bb4c:	fb1a fa09 	smulbb	sl, sl, r9
9001bb50:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bb54:	b2bf      	uxth	r7, r7
9001bb56:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bb5a:	fa5f fe8e 	uxtb.w	lr, lr
9001bb5e:	fb06 a602 	mla	r6, r6, r2, sl
9001bb62:	fb0e 5502 	mla	r5, lr, r2, r5
9001bb66:	1c7a      	adds	r2, r7, #1
9001bb68:	b2b6      	uxth	r6, r6
9001bb6a:	b2ad      	uxth	r5, r5
9001bb6c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bb70:	f105 0a01 	add.w	sl, r5, #1
9001bb74:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001bb78:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bb7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bb80:	ea4a 0707 	orr.w	r7, sl, r7
9001bb84:	f106 0a01 	add.w	sl, r6, #1
9001bb88:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bb8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bb90:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bb94:	ea47 070a 	orr.w	r7, r7, sl
9001bb98:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001bb9c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bb9e:	f108 0801 	add.w	r8, r8, #1
9001bba2:	4410      	add	r0, r2
9001bba4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bba6:	4411      	add	r1, r2
9001bba8:	e7a1      	b.n	9001baee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001bbaa:	b007      	add	sp, #28
9001bbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bbb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bbb4:	b085      	sub	sp, #20
9001bbb6:	468b      	mov	fp, r1
9001bbb8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bbbc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bbbe:	9203      	str	r2, [sp, #12]
9001bbc0:	6841      	ldr	r1, [r0, #4]
9001bbc2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001bbc6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bbca:	fb01 2404 	mla	r4, r1, r4, r2
9001bbce:	6802      	ldr	r2, [r0, #0]
9001bbd0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbd4:	f8de 2000 	ldr.w	r2, [lr]
9001bbd8:	9200      	str	r2, [sp, #0]
9001bbda:	f8de 2004 	ldr.w	r2, [lr, #4]
9001bbde:	3204      	adds	r2, #4
9001bbe0:	9201      	str	r2, [sp, #4]
9001bbe2:	f1bb 0f00 	cmp.w	fp, #0
9001bbe6:	dc03      	bgt.n	9001bbf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001bbe8:	9a03      	ldr	r2, [sp, #12]
9001bbea:	2a00      	cmp	r2, #0
9001bbec:	f340 8153 	ble.w	9001be96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001bbf0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bbf2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001bbf6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bbfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bbfc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001bc00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bc04:	2b00      	cmp	r3, #0
9001bc06:	dd0e      	ble.n	9001bc26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bc08:	1408      	asrs	r0, r1, #16
9001bc0a:	d405      	bmi.n	9001bc18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bc0c:	42b8      	cmp	r0, r7
9001bc0e:	da03      	bge.n	9001bc18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bc10:	1410      	asrs	r0, r2, #16
9001bc12:	d401      	bmi.n	9001bc18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bc14:	42b0      	cmp	r0, r6
9001bc16:	db07      	blt.n	9001bc28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001bc18:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bc1a:	3b01      	subs	r3, #1
9001bc1c:	3402      	adds	r4, #2
9001bc1e:	4401      	add	r1, r0
9001bc20:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bc22:	4402      	add	r2, r0
9001bc24:	e7ee      	b.n	9001bc04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001bc26:	d017      	beq.n	9001bc58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bc28:	1e58      	subs	r0, r3, #1
9001bc2a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bc2c:	fb05 1500 	mla	r5, r5, r0, r1
9001bc30:	142d      	asrs	r5, r5, #16
9001bc32:	d409      	bmi.n	9001bc48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc34:	42bd      	cmp	r5, r7
9001bc36:	da07      	bge.n	9001bc48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bc3a:	fb05 2000 	mla	r0, r5, r0, r2
9001bc3e:	1400      	asrs	r0, r0, #16
9001bc40:	d402      	bmi.n	9001bc48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc42:	42b0      	cmp	r0, r6
9001bc44:	f2c0 80bc 	blt.w	9001bdc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001bc48:	2600      	movs	r6, #0
9001bc4a:	1998      	adds	r0, r3, r6
9001bc4c:	2800      	cmp	r0, #0
9001bc4e:	dc3e      	bgt.n	9001bcce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001bc50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc58:	f1bb 0f00 	cmp.w	fp, #0
9001bc5c:	f340 811b 	ble.w	9001be96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001bc60:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bc66:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc6a:	f1bb 0b01 	subs.w	fp, fp, #1
9001bc6e:	eeb0 6a62 	vmov.f32	s12, s5
9001bc72:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc76:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bc82:	eeb0 6a43 	vmov.f32	s12, s6
9001bc86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc8a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bc8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc92:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc96:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bc9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bca2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bca6:	ee12 2a90 	vmov	r2, s5
9001bcaa:	eef0 2a47 	vmov.f32	s5, s14
9001bcae:	fb92 f3f3 	sdiv	r3, r2, r3
9001bcb2:	ee13 2a10 	vmov	r2, s6
9001bcb6:	9311      	str	r3, [sp, #68]	@ 0x44
9001bcb8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bcba:	eeb0 3a67 	vmov.f32	s6, s15
9001bcbe:	fb92 f3f3 	sdiv	r3, r2, r3
9001bcc2:	9a03      	ldr	r2, [sp, #12]
9001bcc4:	9312      	str	r3, [sp, #72]	@ 0x48
9001bcc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bcc8:	bf08      	it	eq
9001bcca:	4613      	moveq	r3, r2
9001bccc:	e789      	b.n	9001bbe2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001bcce:	140f      	asrs	r7, r1, #16
9001bcd0:	d426      	bmi.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcd2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bcd6:	42bd      	cmp	r5, r7
9001bcd8:	dd22      	ble.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcda:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bcde:	d41f      	bmi.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bce0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001bce4:	4560      	cmp	r0, ip
9001bce6:	dd1b      	ble.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bce8:	9800      	ldr	r0, [sp, #0]
9001bcea:	b22d      	sxth	r5, r5
9001bcec:	fb0c 0505 	mla	r5, ip, r5, r0
9001bcf0:	5de8      	ldrb	r0, [r5, r7]
9001bcf2:	9d01      	ldr	r5, [sp, #4]
9001bcf4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001bcf8:	0e07      	lsrs	r7, r0, #24
9001bcfa:	2fff      	cmp	r7, #255	@ 0xff
9001bcfc:	d116      	bne.n	9001bd2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bcfe:	f06f 0501 	mvn.w	r5, #1
9001bd02:	fb05 f706 	mul.w	r7, r5, r6
9001bd06:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001bd0a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001bd0e:	0945      	lsrs	r5, r0, #5
9001bd10:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bd14:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001bd18:	ea4c 0505 	orr.w	r5, ip, r5
9001bd1c:	4305      	orrs	r5, r0
9001bd1e:	53e5      	strh	r5, [r4, r7]
9001bd20:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bd22:	3e01      	subs	r6, #1
9001bd24:	4401      	add	r1, r0
9001bd26:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bd28:	4402      	add	r2, r0
9001bd2a:	e78e      	b.n	9001bc4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001bd2c:	b2fd      	uxtb	r5, r7
9001bd2e:	2f00      	cmp	r7, #0
9001bd30:	d0f6      	beq.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bd32:	f06f 0701 	mvn.w	r7, #1
9001bd36:	fa1f f985 	uxth.w	r9, r5
9001bd3a:	43ed      	mvns	r5, r5
9001bd3c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001bd40:	4377      	muls	r7, r6
9001bd42:	fb1a fa09 	smulbb	sl, sl, r9
9001bd46:	b2ed      	uxtb	r5, r5
9001bd48:	f834 8007 	ldrh.w	r8, [r4, r7]
9001bd4c:	9702      	str	r7, [sp, #8]
9001bd4e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001bd52:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001bd56:	fb17 f709 	smulbb	r7, r7, r9
9001bd5a:	b2c0      	uxtb	r0, r0
9001bd5c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bd60:	fb10 f009 	smulbb	r0, r0, r9
9001bd64:	fb0c 7c05 	mla	ip, ip, r5, r7
9001bd68:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001bd6c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bd70:	fa1f fc8c 	uxth.w	ip, ip
9001bd74:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bd78:	fa5f f888 	uxtb.w	r8, r8
9001bd7c:	fb07 a705 	mla	r7, r7, r5, sl
9001bd80:	fb08 0005 	mla	r0, r8, r5, r0
9001bd84:	f10c 0501 	add.w	r5, ip, #1
9001bd88:	b2bf      	uxth	r7, r7
9001bd8a:	b280      	uxth	r0, r0
9001bd8c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bd90:	f100 0a01 	add.w	sl, r0, #1
9001bd94:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bd98:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001bd9c:	9802      	ldr	r0, [sp, #8]
9001bd9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bda2:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bda6:	f107 0a01 	add.w	sl, r7, #1
9001bdaa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bdae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bdb2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bdb6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bdba:	f824 c000 	strh.w	ip, [r4, r0]
9001bdbe:	e7af      	b.n	9001bd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bdc0:	f04f 0800 	mov.w	r8, #0
9001bdc4:	eba3 0008 	sub.w	r0, r3, r8
9001bdc8:	2800      	cmp	r0, #0
9001bdca:	f77f af41 	ble.w	9001bc50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bdce:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001bdd2:	1410      	asrs	r0, r2, #16
9001bdd4:	9f00      	ldr	r7, [sp, #0]
9001bdd6:	140d      	asrs	r5, r1, #16
9001bdd8:	fb06 7000 	mla	r0, r6, r0, r7
9001bddc:	5d40      	ldrb	r0, [r0, r5]
9001bdde:	9d01      	ldr	r5, [sp, #4]
9001bde0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001bde4:	0e2e      	lsrs	r6, r5, #24
9001bde6:	2eff      	cmp	r6, #255	@ 0xff
9001bde8:	d112      	bne.n	9001be10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001bdea:	482c      	ldr	r0, [pc, #176]	@ (9001be9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001bdec:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001bdf0:	0968      	lsrs	r0, r5, #5
9001bdf2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bdf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001bdfa:	4330      	orrs	r0, r6
9001bdfc:	4328      	orrs	r0, r5
9001bdfe:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001be02:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001be04:	f108 0801 	add.w	r8, r8, #1
9001be08:	4401      	add	r1, r0
9001be0a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001be0c:	4402      	add	r2, r0
9001be0e:	e7d9      	b.n	9001bdc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001be10:	b2f0      	uxtb	r0, r6
9001be12:	2e00      	cmp	r6, #0
9001be14:	d0f5      	beq.n	9001be02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001be16:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001be1a:	fa1f f980 	uxth.w	r9, r0
9001be1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001be22:	43c0      	mvns	r0, r0
9001be24:	ea4f 272c 	mov.w	r7, ip, asr #8
9001be28:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001be2c:	fb16 f609 	smulbb	r6, r6, r9
9001be30:	b2c0      	uxtb	r0, r0
9001be32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001be36:	b2ed      	uxtb	r5, r5
9001be38:	fb1a fa09 	smulbb	sl, sl, r9
9001be3c:	fb07 6700 	mla	r7, r7, r0, r6
9001be40:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001be44:	fb15 f509 	smulbb	r5, r5, r9
9001be48:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001be4c:	b2bf      	uxth	r7, r7
9001be4e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001be52:	fa5f fc8c 	uxtb.w	ip, ip
9001be56:	fb06 a600 	mla	r6, r6, r0, sl
9001be5a:	fb0c 5500 	mla	r5, ip, r0, r5
9001be5e:	1c78      	adds	r0, r7, #1
9001be60:	b2b6      	uxth	r6, r6
9001be62:	b2ad      	uxth	r5, r5
9001be64:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001be68:	f105 0a01 	add.w	sl, r5, #1
9001be6c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001be70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001be74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001be78:	ea4a 0707 	orr.w	r7, sl, r7
9001be7c:	f106 0a01 	add.w	sl, r6, #1
9001be80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001be84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001be88:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001be8c:	ea47 070a 	orr.w	r7, r7, sl
9001be90:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001be94:	e7b5      	b.n	9001be02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001be96:	b005      	add	sp, #20
9001be98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001be9c:	fffff800 	.word	0xfffff800

9001bea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bea4:	b087      	sub	sp, #28
9001bea6:	468b      	mov	fp, r1
9001bea8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001beac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001beae:	9204      	str	r2, [sp, #16]
9001beb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001beb4:	6861      	ldr	r1, [r4, #4]
9001beb6:	9205      	str	r2, [sp, #20]
9001beb8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001bebc:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001bec0:	fb01 2000 	mla	r0, r1, r0, r2
9001bec4:	6822      	ldr	r2, [r4, #0]
9001bec6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001beca:	f8de 2000 	ldr.w	r2, [lr]
9001bece:	9201      	str	r2, [sp, #4]
9001bed0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001bed4:	9202      	str	r2, [sp, #8]
9001bed6:	f1bb 0f00 	cmp.w	fp, #0
9001beda:	dc03      	bgt.n	9001bee4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001bedc:	9a04      	ldr	r2, [sp, #16]
9001bede:	2a00      	cmp	r2, #0
9001bee0:	f340 8142 	ble.w	9001c168 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001bee4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001bee6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001beea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001beee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bef0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001bef4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bef8:	2b00      	cmp	r3, #0
9001befa:	dd0e      	ble.n	9001bf1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001befc:	140c      	asrs	r4, r1, #16
9001befe:	d405      	bmi.n	9001bf0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bf00:	42bc      	cmp	r4, r7
9001bf02:	da03      	bge.n	9001bf0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bf04:	1414      	asrs	r4, r2, #16
9001bf06:	d401      	bmi.n	9001bf0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bf08:	42b4      	cmp	r4, r6
9001bf0a:	db07      	blt.n	9001bf1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bf0c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001bf0e:	3b01      	subs	r3, #1
9001bf10:	3002      	adds	r0, #2
9001bf12:	4421      	add	r1, r4
9001bf14:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bf16:	4422      	add	r2, r4
9001bf18:	e7ee      	b.n	9001bef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001bf1a:	d019      	beq.n	9001bf50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001bf1c:	1e5c      	subs	r4, r3, #1
9001bf1e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001bf20:	fb05 1504 	mla	r5, r5, r4, r1
9001bf24:	142d      	asrs	r5, r5, #16
9001bf26:	d409      	bmi.n	9001bf3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf28:	42bd      	cmp	r5, r7
9001bf2a:	da07      	bge.n	9001bf3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf2c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001bf2e:	fb05 2404 	mla	r4, r5, r4, r2
9001bf32:	1424      	asrs	r4, r4, #16
9001bf34:	d402      	bmi.n	9001bf3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf36:	42b4      	cmp	r4, r6
9001bf38:	f2c0 80b1 	blt.w	9001c09e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001bf3c:	f04f 0800 	mov.w	r8, #0
9001bf40:	eb03 0408 	add.w	r4, r3, r8
9001bf44:	2c00      	cmp	r4, #0
9001bf46:	dc3e      	bgt.n	9001bfc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001bf48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bf4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001bf50:	f1bb 0f00 	cmp.w	fp, #0
9001bf54:	f340 8108 	ble.w	9001c168 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001bf58:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bf5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bf5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bf62:	f1bb 0b01 	subs.w	fp, fp, #1
9001bf66:	eeb0 6a62 	vmov.f32	s12, s5
9001bf6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bf6e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bf72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf76:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001bf7a:	eeb0 6a43 	vmov.f32	s12, s6
9001bf7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf82:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001bf86:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bf8a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bf8e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bf92:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bf96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bf9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bf9e:	ee12 2a90 	vmov	r2, s5
9001bfa2:	eef0 2a47 	vmov.f32	s5, s14
9001bfa6:	fb92 f3f3 	sdiv	r3, r2, r3
9001bfaa:	ee13 2a10 	vmov	r2, s6
9001bfae:	9313      	str	r3, [sp, #76]	@ 0x4c
9001bfb0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bfb2:	eeb0 3a67 	vmov.f32	s6, s15
9001bfb6:	fb92 f3f3 	sdiv	r3, r2, r3
9001bfba:	9a04      	ldr	r2, [sp, #16]
9001bfbc:	9314      	str	r3, [sp, #80]	@ 0x50
9001bfbe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bfc0:	bf08      	it	eq
9001bfc2:	4613      	moveq	r3, r2
9001bfc4:	e787      	b.n	9001bed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001bfc6:	140e      	asrs	r6, r1, #16
9001bfc8:	d462      	bmi.n	9001c090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfca:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bfce:	42b5      	cmp	r5, r6
9001bfd0:	dd5e      	ble.n	9001c090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfd2:	1417      	asrs	r7, r2, #16
9001bfd4:	d45c      	bmi.n	9001c090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfd6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001bfda:	42bc      	cmp	r4, r7
9001bfdc:	dd58      	ble.n	9001c090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfde:	b22d      	sxth	r5, r5
9001bfe0:	9c02      	ldr	r4, [sp, #8]
9001bfe2:	fb07 6505 	mla	r5, r7, r5, r6
9001bfe6:	5d66      	ldrb	r6, [r4, r5]
9001bfe8:	2e00      	cmp	r6, #0
9001bfea:	d051      	beq.n	9001c090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfec:	9c01      	ldr	r4, [sp, #4]
9001bfee:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001bff2:	f06f 0401 	mvn.w	r4, #1
9001bff6:	fb04 f408 	mul.w	r4, r4, r8
9001bffa:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001bffe:	5b05      	ldrh	r5, [r0, r4]
9001c000:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c004:	9403      	str	r4, [sp, #12]
9001c006:	9c05      	ldr	r4, [sp, #20]
9001c008:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c00c:	4366      	muls	r6, r4
9001c00e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c012:	1c74      	adds	r4, r6, #1
9001c014:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c018:	122e      	asrs	r6, r5, #8
9001c01a:	1224      	asrs	r4, r4, #8
9001c01c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c020:	00ed      	lsls	r5, r5, #3
9001c022:	b2a7      	uxth	r7, r4
9001c024:	43e4      	mvns	r4, r4
9001c026:	b2ed      	uxtb	r5, r5
9001c028:	b2e4      	uxtb	r4, r4
9001c02a:	fb16 f604 	smulbb	r6, r6, r4
9001c02e:	fb15 f504 	smulbb	r5, r5, r4
9001c032:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c036:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001c03a:	fb1a fa04 	smulbb	sl, sl, r4
9001c03e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c042:	fa1f fc8c 	uxth.w	ip, ip
9001c046:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c04a:	fa5f f989 	uxtb.w	r9, r9
9001c04e:	fb06 a607 	mla	r6, r6, r7, sl
9001c052:	f10c 0401 	add.w	r4, ip, #1
9001c056:	fb09 5507 	mla	r5, r9, r7, r5
9001c05a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c05e:	9c03      	ldr	r4, [sp, #12]
9001c060:	b2ad      	uxth	r5, r5
9001c062:	b2b6      	uxth	r6, r6
9001c064:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c068:	f105 0a01 	add.w	sl, r5, #1
9001c06c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c070:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c074:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c078:	f106 0a01 	add.w	sl, r6, #1
9001c07c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c080:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c084:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c088:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c08c:	f820 c004 	strh.w	ip, [r0, r4]
9001c090:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c092:	f108 38ff 	add.w	r8, r8, #4294967295
9001c096:	4421      	add	r1, r4
9001c098:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c09a:	4422      	add	r2, r4
9001c09c:	e750      	b.n	9001bf40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c09e:	f04f 0900 	mov.w	r9, #0
9001c0a2:	eba3 0409 	sub.w	r4, r3, r9
9001c0a6:	2c00      	cmp	r4, #0
9001c0a8:	f77f af4e 	ble.w	9001bf48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c0ac:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c0b0:	140d      	asrs	r5, r1, #16
9001c0b2:	1414      	asrs	r4, r2, #16
9001c0b4:	fb06 5404 	mla	r4, r6, r4, r5
9001c0b8:	9d02      	ldr	r5, [sp, #8]
9001c0ba:	5d2e      	ldrb	r6, [r5, r4]
9001c0bc:	2e00      	cmp	r6, #0
9001c0be:	d04c      	beq.n	9001c15a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001c0c0:	9d01      	ldr	r5, [sp, #4]
9001c0c2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001c0c6:	9c05      	ldr	r4, [sp, #20]
9001c0c8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c0cc:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c0d0:	4366      	muls	r6, r4
9001c0d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c0d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c0da:	1c74      	adds	r4, r6, #1
9001c0dc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c0e0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c0e4:	122e      	asrs	r6, r5, #8
9001c0e6:	1224      	asrs	r4, r4, #8
9001c0e8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c0ec:	00ed      	lsls	r5, r5, #3
9001c0ee:	b2a7      	uxth	r7, r4
9001c0f0:	43e4      	mvns	r4, r4
9001c0f2:	b2ed      	uxtb	r5, r5
9001c0f4:	b2e4      	uxtb	r4, r4
9001c0f6:	fb16 f604 	smulbb	r6, r6, r4
9001c0fa:	fb15 f504 	smulbb	r5, r5, r4
9001c0fe:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c102:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c106:	fb1a fa04 	smulbb	sl, sl, r4
9001c10a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c10e:	fa1f fc8c 	uxth.w	ip, ip
9001c112:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c116:	fa5f f888 	uxtb.w	r8, r8
9001c11a:	fb06 a607 	mla	r6, r6, r7, sl
9001c11e:	f10c 0401 	add.w	r4, ip, #1
9001c122:	fb08 5507 	mla	r5, r8, r7, r5
9001c126:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c12a:	b2ad      	uxth	r5, r5
9001c12c:	b2b6      	uxth	r6, r6
9001c12e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c132:	f105 0a01 	add.w	sl, r5, #1
9001c136:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c13a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c13e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c142:	f106 0a01 	add.w	sl, r6, #1
9001c146:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c14a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c14e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c152:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c156:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c15a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c15c:	f109 0901 	add.w	r9, r9, #1
9001c160:	4421      	add	r1, r4
9001c162:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c164:	4422      	add	r2, r4
9001c166:	e79c      	b.n	9001c0a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001c168:	b007      	add	sp, #28
9001c16a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c16e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c16e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c172:	b085      	sub	sp, #20
9001c174:	468b      	mov	fp, r1
9001c176:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c17a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c17c:	9203      	str	r2, [sp, #12]
9001c17e:	6861      	ldr	r1, [r4, #4]
9001c180:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001c184:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001c188:	fb01 2000 	mla	r0, r1, r0, r2
9001c18c:	6822      	ldr	r2, [r4, #0]
9001c18e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c192:	f8d8 2000 	ldr.w	r2, [r8]
9001c196:	9200      	str	r2, [sp, #0]
9001c198:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001c19c:	9201      	str	r2, [sp, #4]
9001c19e:	f1bb 0f00 	cmp.w	fp, #0
9001c1a2:	dc03      	bgt.n	9001c1ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c1a4:	9a03      	ldr	r2, [sp, #12]
9001c1a6:	2a00      	cmp	r2, #0
9001c1a8:	f340 8146 	ble.w	9001c438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c1ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c1ae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c1b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c1b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c1b8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c1bc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c1c0:	2b00      	cmp	r3, #0
9001c1c2:	dd0e      	ble.n	9001c1e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c1c4:	140c      	asrs	r4, r1, #16
9001c1c6:	d405      	bmi.n	9001c1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1c8:	42bc      	cmp	r4, r7
9001c1ca:	da03      	bge.n	9001c1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1cc:	1414      	asrs	r4, r2, #16
9001c1ce:	d401      	bmi.n	9001c1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1d0:	42b4      	cmp	r4, r6
9001c1d2:	db07      	blt.n	9001c1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c1d4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c1d6:	3b01      	subs	r3, #1
9001c1d8:	3002      	adds	r0, #2
9001c1da:	4421      	add	r1, r4
9001c1dc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c1de:	4422      	add	r2, r4
9001c1e0:	e7ee      	b.n	9001c1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c1e2:	d017      	beq.n	9001c214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c1e4:	1e5c      	subs	r4, r3, #1
9001c1e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c1e8:	fb05 1504 	mla	r5, r5, r4, r1
9001c1ec:	142d      	asrs	r5, r5, #16
9001c1ee:	d409      	bmi.n	9001c204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1f0:	42bd      	cmp	r5, r7
9001c1f2:	da07      	bge.n	9001c204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c1f6:	fb05 2404 	mla	r4, r5, r4, r2
9001c1fa:	1424      	asrs	r4, r4, #16
9001c1fc:	d402      	bmi.n	9001c204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1fe:	42b4      	cmp	r4, r6
9001c200:	f2c0 80b3 	blt.w	9001c36a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001c204:	2600      	movs	r6, #0
9001c206:	199c      	adds	r4, r3, r6
9001c208:	2c00      	cmp	r4, #0
9001c20a:	dc3e      	bgt.n	9001c28a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c20c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c210:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c214:	f1bb 0f00 	cmp.w	fp, #0
9001c218:	f340 810e 	ble.w	9001c438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c21c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c220:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c222:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c226:	f1bb 0b01 	subs.w	fp, fp, #1
9001c22a:	eeb0 6a62 	vmov.f32	s12, s5
9001c22e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c232:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c236:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c23a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c23e:	eeb0 6a43 	vmov.f32	s12, s6
9001c242:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c246:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c24a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c24e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c252:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c256:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c25a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c25e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c262:	ee12 2a90 	vmov	r2, s5
9001c266:	eef0 2a47 	vmov.f32	s5, s14
9001c26a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c26e:	ee13 2a10 	vmov	r2, s6
9001c272:	9311      	str	r3, [sp, #68]	@ 0x44
9001c274:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c276:	eeb0 3a67 	vmov.f32	s6, s15
9001c27a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c27e:	9a03      	ldr	r2, [sp, #12]
9001c280:	9312      	str	r3, [sp, #72]	@ 0x48
9001c282:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c284:	bf08      	it	eq
9001c286:	4613      	moveq	r3, r2
9001c288:	e789      	b.n	9001c19e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c28a:	140f      	asrs	r7, r1, #16
9001c28c:	d418      	bmi.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c28e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c292:	42bd      	cmp	r5, r7
9001c294:	dd14      	ble.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c296:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c29a:	d411      	bmi.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c29c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001c2a0:	4564      	cmp	r4, ip
9001c2a2:	dd0d      	ble.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c2a4:	b22d      	sxth	r5, r5
9001c2a6:	9c01      	ldr	r4, [sp, #4]
9001c2a8:	fb0c 7505 	mla	r5, ip, r5, r7
9001c2ac:	5d64      	ldrb	r4, [r4, r5]
9001c2ae:	2cff      	cmp	r4, #255	@ 0xff
9001c2b0:	d10c      	bne.n	9001c2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c2b2:	9c00      	ldr	r4, [sp, #0]
9001c2b4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001c2b8:	f06f 0401 	mvn.w	r4, #1
9001c2bc:	4374      	muls	r4, r6
9001c2be:	5305      	strh	r5, [r0, r4]
9001c2c0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c2c2:	3e01      	subs	r6, #1
9001c2c4:	4421      	add	r1, r4
9001c2c6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c2c8:	4422      	add	r2, r4
9001c2ca:	e79c      	b.n	9001c206 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c2cc:	2c00      	cmp	r4, #0
9001c2ce:	d0f7      	beq.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c2d0:	9f00      	ldr	r7, [sp, #0]
9001c2d2:	fa1f fc84 	uxth.w	ip, r4
9001c2d6:	43e4      	mvns	r4, r4
9001c2d8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001c2dc:	f06f 0501 	mvn.w	r5, #1
9001c2e0:	b2e4      	uxtb	r4, r4
9001c2e2:	4375      	muls	r5, r6
9001c2e4:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001c2e8:	9502      	str	r5, [sp, #8]
9001c2ea:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c2ee:	5b45      	ldrh	r5, [r0, r5]
9001c2f0:	122f      	asrs	r7, r5, #8
9001c2f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c2f6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c2fa:	00ed      	lsls	r5, r5, #3
9001c2fc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c300:	fb17 f704 	smulbb	r7, r7, r4
9001c304:	b2ed      	uxtb	r5, r5
9001c306:	fb1a fa04 	smulbb	sl, sl, r4
9001c30a:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001c30e:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001c312:	fb15 f504 	smulbb	r5, r5, r4
9001c316:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c31a:	fa1f fe8e 	uxth.w	lr, lr
9001c31e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c322:	fa5f f989 	uxtb.w	r9, r9
9001c326:	fb07 a70c 	mla	r7, r7, ip, sl
9001c32a:	f10e 0401 	add.w	r4, lr, #1
9001c32e:	fb09 550c 	mla	r5, r9, ip, r5
9001c332:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001c336:	9c02      	ldr	r4, [sp, #8]
9001c338:	b2ad      	uxth	r5, r5
9001c33a:	b2bf      	uxth	r7, r7
9001c33c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c340:	f105 0a01 	add.w	sl, r5, #1
9001c344:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c348:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c34c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001c350:	f107 0a01 	add.w	sl, r7, #1
9001c354:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c358:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c35c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c360:	ea4e 0e0a 	orr.w	lr, lr, sl
9001c364:	f820 e004 	strh.w	lr, [r0, r4]
9001c368:	e7aa      	b.n	9001c2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c36a:	f04f 0900 	mov.w	r9, #0
9001c36e:	eba3 0409 	sub.w	r4, r3, r9
9001c372:	2c00      	cmp	r4, #0
9001c374:	f77f af4a 	ble.w	9001c20c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c378:	1414      	asrs	r4, r2, #16
9001c37a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c37e:	140d      	asrs	r5, r1, #16
9001c380:	fb06 5504 	mla	r5, r6, r4, r5
9001c384:	9c01      	ldr	r4, [sp, #4]
9001c386:	5d64      	ldrb	r4, [r4, r5]
9001c388:	2cff      	cmp	r4, #255	@ 0xff
9001c38a:	d10b      	bne.n	9001c3a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c38c:	9c00      	ldr	r4, [sp, #0]
9001c38e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001c392:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001c396:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c398:	f109 0901 	add.w	r9, r9, #1
9001c39c:	4421      	add	r1, r4
9001c39e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c3a0:	4422      	add	r2, r4
9001c3a2:	e7e4      	b.n	9001c36e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001c3a4:	2c00      	cmp	r4, #0
9001c3a6:	d0f6      	beq.n	9001c396 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c3a8:	9e00      	ldr	r6, [sp, #0]
9001c3aa:	b2a7      	uxth	r7, r4
9001c3ac:	43e4      	mvns	r4, r4
9001c3ae:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001c3b2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c3b6:	b2e4      	uxtb	r4, r4
9001c3b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c3bc:	122e      	asrs	r6, r5, #8
9001c3be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c3c2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c3c6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c3ca:	00ed      	lsls	r5, r5, #3
9001c3cc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c3d0:	fb16 f604 	smulbb	r6, r6, r4
9001c3d4:	b2ed      	uxtb	r5, r5
9001c3d6:	fb1a fa04 	smulbb	sl, sl, r4
9001c3da:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c3de:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c3e2:	fb15 f504 	smulbb	r5, r5, r4
9001c3e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c3ea:	fa1f fc8c 	uxth.w	ip, ip
9001c3ee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c3f2:	fa5f fe8e 	uxtb.w	lr, lr
9001c3f6:	fb06 a607 	mla	r6, r6, r7, sl
9001c3fa:	f10c 0401 	add.w	r4, ip, #1
9001c3fe:	fb0e 5507 	mla	r5, lr, r7, r5
9001c402:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c406:	b2ad      	uxth	r5, r5
9001c408:	b2b6      	uxth	r6, r6
9001c40a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c40e:	f105 0a01 	add.w	sl, r5, #1
9001c412:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c416:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c41a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c41e:	f106 0a01 	add.w	sl, r6, #1
9001c422:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c426:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c42a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c42e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c432:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c436:	e7ae      	b.n	9001c396 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c438:	b005      	add	sp, #20
9001c43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c43e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c43e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c442:	b085      	sub	sp, #20
9001c444:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c446:	9203      	str	r2, [sp, #12]
9001c448:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001c44c:	9100      	str	r1, [sp, #0]
9001c44e:	9201      	str	r2, [sp, #4]
9001c450:	6841      	ldr	r1, [r0, #4]
9001c452:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001c456:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c45a:	fb01 2404 	mla	r4, r1, r4, r2
9001c45e:	6802      	ldr	r2, [r0, #0]
9001c460:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c464:	f8de 2000 	ldr.w	r2, [lr]
9001c468:	9202      	str	r2, [sp, #8]
9001c46a:	9a01      	ldr	r2, [sp, #4]
9001c46c:	43d6      	mvns	r6, r2
9001c46e:	b2f6      	uxtb	r6, r6
9001c470:	9a00      	ldr	r2, [sp, #0]
9001c472:	2a00      	cmp	r2, #0
9001c474:	dc03      	bgt.n	9001c47e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c476:	9a03      	ldr	r2, [sp, #12]
9001c478:	2a00      	cmp	r2, #0
9001c47a:	f340 8124 	ble.w	9001c6c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c47e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c480:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c484:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c488:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c48a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c48e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c492:	2b00      	cmp	r3, #0
9001c494:	dd0e      	ble.n	9001c4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c496:	1408      	asrs	r0, r1, #16
9001c498:	d405      	bmi.n	9001c4a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c49a:	4560      	cmp	r0, ip
9001c49c:	da03      	bge.n	9001c4a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c49e:	1410      	asrs	r0, r2, #16
9001c4a0:	d401      	bmi.n	9001c4a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c4a2:	42b8      	cmp	r0, r7
9001c4a4:	db07      	blt.n	9001c4b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c4a6:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c4a8:	3b01      	subs	r3, #1
9001c4aa:	3402      	adds	r4, #2
9001c4ac:	4401      	add	r1, r0
9001c4ae:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c4b0:	4402      	add	r2, r0
9001c4b2:	e7ee      	b.n	9001c492 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c4b4:	d06e      	beq.n	9001c594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c4b6:	1e58      	subs	r0, r3, #1
9001c4b8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c4ba:	fb05 1500 	mla	r5, r5, r0, r1
9001c4be:	142d      	asrs	r5, r5, #16
9001c4c0:	d45c      	bmi.n	9001c57c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4c2:	4565      	cmp	r5, ip
9001c4c4:	da5a      	bge.n	9001c57c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4c6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c4c8:	fb05 2000 	mla	r0, r5, r0, r2
9001c4cc:	1400      	asrs	r0, r0, #16
9001c4ce:	d455      	bmi.n	9001c57c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4d0:	42b8      	cmp	r0, r7
9001c4d2:	da53      	bge.n	9001c57c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4d4:	4699      	mov	r9, r3
9001c4d6:	46a2      	mov	sl, r4
9001c4d8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001c4dc:	f1b9 0f00 	cmp.w	r9, #0
9001c4e0:	dd54      	ble.n	9001c58c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c4e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c4e6:	140d      	asrs	r5, r1, #16
9001c4e8:	1410      	asrs	r0, r2, #16
9001c4ea:	f109 39ff 	add.w	r9, r9, #4294967295
9001c4ee:	fb07 5000 	mla	r0, r7, r0, r5
9001c4f2:	9d02      	ldr	r5, [sp, #8]
9001c4f4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c4f8:	f8ba 5000 	ldrh.w	r5, [sl]
9001c4fc:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c500:	122f      	asrs	r7, r5, #8
9001c502:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c506:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c50a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c50e:	00ed      	lsls	r5, r5, #3
9001c510:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001c514:	fb17 f706 	smulbb	r7, r7, r6
9001c518:	b2ed      	uxtb	r5, r5
9001c51a:	fb18 f806 	smulbb	r8, r8, r6
9001c51e:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c522:	10c7      	asrs	r7, r0, #3
9001c524:	fb15 f506 	smulbb	r5, r5, r6
9001c528:	00c0      	lsls	r0, r0, #3
9001c52a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c52e:	fa1f fc8c 	uxth.w	ip, ip
9001c532:	b2c0      	uxtb	r0, r0
9001c534:	fb07 870b 	mla	r7, r7, fp, r8
9001c538:	fb00 500b 	mla	r0, r0, fp, r5
9001c53c:	f10c 0501 	add.w	r5, ip, #1
9001c540:	b2bf      	uxth	r7, r7
9001c542:	b280      	uxth	r0, r0
9001c544:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c548:	f107 0801 	add.w	r8, r7, #1
9001c54c:	1c45      	adds	r5, r0, #1
9001c54e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001c552:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c556:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c55a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c55c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c560:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c564:	4401      	add	r1, r0
9001c566:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001c56a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c56c:	ea45 0c0c 	orr.w	ip, r5, ip
9001c570:	4402      	add	r2, r0
9001c572:	ea4c 0c08 	orr.w	ip, ip, r8
9001c576:	f82a cb02 	strh.w	ip, [sl], #2
9001c57a:	e7af      	b.n	9001c4dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c57c:	f04f 0800 	mov.w	r8, #0
9001c580:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001c584:	eb03 0008 	add.w	r0, r3, r8
9001c588:	2800      	cmp	r0, #0
9001c58a:	dc41      	bgt.n	9001c610 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001c58c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c590:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c594:	9b00      	ldr	r3, [sp, #0]
9001c596:	2b00      	cmp	r3, #0
9001c598:	f340 8095 	ble.w	9001c6c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c59c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c5a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c5a2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c5a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c5aa:	eef0 6a62 	vmov.f32	s13, s5
9001c5ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c5b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c5b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c5ba:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001c5be:	eef0 6a43 	vmov.f32	s13, s6
9001c5c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c5c6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001c5ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c5ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c5d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c5d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c5da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c5de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c5e2:	ee12 2a90 	vmov	r2, s5
9001c5e6:	eef0 2a47 	vmov.f32	s5, s14
9001c5ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001c5ee:	ee13 2a10 	vmov	r2, s6
9001c5f2:	9311      	str	r3, [sp, #68]	@ 0x44
9001c5f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c5f6:	eeb0 3a67 	vmov.f32	s6, s15
9001c5fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001c5fe:	9312      	str	r3, [sp, #72]	@ 0x48
9001c600:	9b00      	ldr	r3, [sp, #0]
9001c602:	9a03      	ldr	r2, [sp, #12]
9001c604:	3b01      	subs	r3, #1
9001c606:	9300      	str	r3, [sp, #0]
9001c608:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c60a:	bf08      	it	eq
9001c60c:	4613      	moveq	r3, r2
9001c60e:	e72f      	b.n	9001c470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c610:	140f      	asrs	r7, r1, #16
9001c612:	d451      	bmi.n	9001c6b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c614:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c618:	42bd      	cmp	r5, r7
9001c61a:	dd4d      	ble.n	9001c6b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c61c:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c620:	d44a      	bmi.n	9001c6b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c622:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c626:	4560      	cmp	r0, ip
9001c628:	dd46      	ble.n	9001c6b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c62a:	b22d      	sxth	r5, r5
9001c62c:	9802      	ldr	r0, [sp, #8]
9001c62e:	fb0c 7505 	mla	r5, ip, r5, r7
9001c632:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001c636:	f06f 0501 	mvn.w	r5, #1
9001c63a:	fb05 fb08 	mul.w	fp, r5, r8
9001c63e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c642:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c646:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c64a:	122f      	asrs	r7, r5, #8
9001c64c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c650:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c654:	00ed      	lsls	r5, r5, #3
9001c656:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c65a:	fb17 f706 	smulbb	r7, r7, r6
9001c65e:	b2ed      	uxtb	r5, r5
9001c660:	fb19 f906 	smulbb	r9, r9, r6
9001c664:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c668:	10c7      	asrs	r7, r0, #3
9001c66a:	fb15 f506 	smulbb	r5, r5, r6
9001c66e:	00c0      	lsls	r0, r0, #3
9001c670:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c674:	fa1f fc8c 	uxth.w	ip, ip
9001c678:	b2c0      	uxtb	r0, r0
9001c67a:	fb07 970a 	mla	r7, r7, sl, r9
9001c67e:	fb00 500a 	mla	r0, r0, sl, r5
9001c682:	f10c 0501 	add.w	r5, ip, #1
9001c686:	b2bf      	uxth	r7, r7
9001c688:	b280      	uxth	r0, r0
9001c68a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c68e:	f107 0901 	add.w	r9, r7, #1
9001c692:	1c45      	adds	r5, r0, #1
9001c694:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c698:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c69c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c6a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c6a4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c6a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c6ac:	ea45 0c0c 	orr.w	ip, r5, ip
9001c6b0:	ea4c 0c09 	orr.w	ip, ip, r9
9001c6b4:	f824 c00b 	strh.w	ip, [r4, fp]
9001c6b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c6ba:	f108 38ff 	add.w	r8, r8, #4294967295
9001c6be:	4401      	add	r1, r0
9001c6c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c6c2:	4402      	add	r2, r0
9001c6c4:	e75e      	b.n	9001c584 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001c6c6:	b005      	add	sp, #20
9001c6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c6cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6d0:	b085      	sub	sp, #20
9001c6d2:	4693      	mov	fp, r2
9001c6d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c6d8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c6da:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c6dc:	6870      	ldr	r0, [r6, #4]
9001c6de:	9101      	str	r1, [sp, #4]
9001c6e0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c6e4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001c6e8:	fb00 2404 	mla	r4, r0, r4, r2
9001c6ec:	6832      	ldr	r2, [r6, #0]
9001c6ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c6f2:	682a      	ldr	r2, [r5, #0]
9001c6f4:	9202      	str	r2, [sp, #8]
9001c6f6:	9a01      	ldr	r2, [sp, #4]
9001c6f8:	2a00      	cmp	r2, #0
9001c6fa:	dc03      	bgt.n	9001c704 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c6fc:	f1bb 0f00 	cmp.w	fp, #0
9001c700:	f340 809a 	ble.w	9001c838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c704:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c706:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c70a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c70e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c710:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c714:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c718:	2b00      	cmp	r3, #0
9001c71a:	dd0c      	ble.n	9001c736 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001c71c:	1406      	asrs	r6, r0, #16
9001c71e:	d405      	bmi.n	9001c72c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c720:	454e      	cmp	r6, r9
9001c722:	da03      	bge.n	9001c72c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c724:	1416      	asrs	r6, r2, #16
9001c726:	d401      	bmi.n	9001c72c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c728:	4546      	cmp	r6, r8
9001c72a:	db05      	blt.n	9001c738 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c72c:	4470      	add	r0, lr
9001c72e:	4462      	add	r2, ip
9001c730:	3b01      	subs	r3, #1
9001c732:	3402      	adds	r4, #2
9001c734:	e7f0      	b.n	9001c718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c736:	d00f      	beq.n	9001c758 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001c738:	1e5e      	subs	r6, r3, #1
9001c73a:	fb0e 0706 	mla	r7, lr, r6, r0
9001c73e:	143f      	asrs	r7, r7, #16
9001c740:	d541      	bpl.n	9001c7c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001c742:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c746:	4698      	mov	r8, r3
9001c748:	9603      	str	r6, [sp, #12]
9001c74a:	f1b8 0f00 	cmp.w	r8, #0
9001c74e:	dc56      	bgt.n	9001c7fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001c750:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c754:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c758:	9b01      	ldr	r3, [sp, #4]
9001c75a:	2b00      	cmp	r3, #0
9001c75c:	dd6c      	ble.n	9001c838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c75e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c762:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c764:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c768:	eeb0 6a62 	vmov.f32	s12, s5
9001c76c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c770:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c774:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c778:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c77c:	eeb0 6a43 	vmov.f32	s12, s6
9001c780:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c784:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c788:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c78c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c790:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c794:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c798:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c79c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c7a0:	ee12 2a90 	vmov	r2, s5
9001c7a4:	eef0 2a47 	vmov.f32	s5, s14
9001c7a8:	fb92 fef3 	sdiv	lr, r2, r3
9001c7ac:	ee13 2a10 	vmov	r2, s6
9001c7b0:	eeb0 3a67 	vmov.f32	s6, s15
9001c7b4:	fb92 fcf3 	sdiv	ip, r2, r3
9001c7b8:	9b01      	ldr	r3, [sp, #4]
9001c7ba:	3b01      	subs	r3, #1
9001c7bc:	9301      	str	r3, [sp, #4]
9001c7be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c7c0:	bf08      	it	eq
9001c7c2:	465b      	moveq	r3, fp
9001c7c4:	e797      	b.n	9001c6f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c7c6:	454f      	cmp	r7, r9
9001c7c8:	dabb      	bge.n	9001c742 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7ca:	fb0c 2606 	mla	r6, ip, r6, r2
9001c7ce:	1436      	asrs	r6, r6, #16
9001c7d0:	d4b7      	bmi.n	9001c742 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7d2:	4546      	cmp	r6, r8
9001c7d4:	dab5      	bge.n	9001c742 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7d6:	461e      	mov	r6, r3
9001c7d8:	46a0      	mov	r8, r4
9001c7da:	2e00      	cmp	r6, #0
9001c7dc:	ddb8      	ble.n	9001c750 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c7de:	1417      	asrs	r7, r2, #16
9001c7e0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c7e4:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c7e8:	9902      	ldr	r1, [sp, #8]
9001c7ea:	4470      	add	r0, lr
9001c7ec:	4462      	add	r2, ip
9001c7ee:	fb0a 9707 	mla	r7, sl, r7, r9
9001c7f2:	3e01      	subs	r6, #1
9001c7f4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c7f8:	f828 7b02 	strh.w	r7, [r8], #2
9001c7fc:	e7ed      	b.n	9001c7da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001c7fe:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c802:	d414      	bmi.n	9001c82e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c804:	68ae      	ldr	r6, [r5, #8]
9001c806:	454e      	cmp	r6, r9
9001c808:	dd11      	ble.n	9001c82e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c80a:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c80e:	d40e      	bmi.n	9001c82e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c810:	68ef      	ldr	r7, [r5, #12]
9001c812:	4557      	cmp	r7, sl
9001c814:	dd0b      	ble.n	9001c82e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c816:	b236      	sxth	r6, r6
9001c818:	f06f 0101 	mvn.w	r1, #1
9001c81c:	9f02      	ldr	r7, [sp, #8]
9001c81e:	fb0a 9606 	mla	r6, sl, r6, r9
9001c822:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c826:	fb01 f608 	mul.w	r6, r1, r8
9001c82a:	9903      	ldr	r1, [sp, #12]
9001c82c:	538f      	strh	r7, [r1, r6]
9001c82e:	4470      	add	r0, lr
9001c830:	4462      	add	r2, ip
9001c832:	f108 38ff 	add.w	r8, r8, #4294967295
9001c836:	e788      	b.n	9001c74a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c838:	b005      	add	sp, #20
9001c83a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c83e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c83e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c842:	b087      	sub	sp, #28
9001c844:	468b      	mov	fp, r1
9001c846:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c84a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c84c:	9203      	str	r2, [sp, #12]
9001c84e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c852:	6841      	ldr	r1, [r0, #4]
9001c854:	9204      	str	r2, [sp, #16]
9001c856:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c85a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001c85e:	fb01 2505 	mla	r5, r1, r5, r2
9001c862:	6802      	ldr	r2, [r0, #0]
9001c864:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001c868:	f8d9 2000 	ldr.w	r2, [r9]
9001c86c:	9201      	str	r2, [sp, #4]
9001c86e:	f1bb 0f00 	cmp.w	fp, #0
9001c872:	dc03      	bgt.n	9001c87c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c874:	9a03      	ldr	r2, [sp, #12]
9001c876:	2a00      	cmp	r2, #0
9001c878:	f340 8158 	ble.w	9001cb2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c87c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c87e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c882:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c886:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c888:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c88c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c890:	2b00      	cmp	r3, #0
9001c892:	dd0e      	ble.n	9001c8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c894:	1402      	asrs	r2, r0, #16
9001c896:	d405      	bmi.n	9001c8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c898:	42ba      	cmp	r2, r7
9001c89a:	da03      	bge.n	9001c8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c89c:	140a      	asrs	r2, r1, #16
9001c89e:	d401      	bmi.n	9001c8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c8a0:	42b2      	cmp	r2, r6
9001c8a2:	db07      	blt.n	9001c8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c8a4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c8a6:	3b01      	subs	r3, #1
9001c8a8:	3502      	adds	r5, #2
9001c8aa:	4410      	add	r0, r2
9001c8ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c8ae:	4411      	add	r1, r2
9001c8b0:	e7ee      	b.n	9001c890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c8b2:	d017      	beq.n	9001c8e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c8b4:	1e5a      	subs	r2, r3, #1
9001c8b6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c8b8:	fb04 0402 	mla	r4, r4, r2, r0
9001c8bc:	1424      	asrs	r4, r4, #16
9001c8be:	d409      	bmi.n	9001c8d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8c0:	42bc      	cmp	r4, r7
9001c8c2:	da07      	bge.n	9001c8d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c8c6:	fb04 1202 	mla	r2, r4, r2, r1
9001c8ca:	1412      	asrs	r2, r2, #16
9001c8cc:	d402      	bmi.n	9001c8d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8ce:	42b2      	cmp	r2, r6
9001c8d0:	f2c0 80bf 	blt.w	9001ca52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c8d4:	2700      	movs	r7, #0
9001c8d6:	19da      	adds	r2, r3, r7
9001c8d8:	2a00      	cmp	r2, #0
9001c8da:	dc3e      	bgt.n	9001c95a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c8dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c8e0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c8e4:	f1bb 0f00 	cmp.w	fp, #0
9001c8e8:	f340 8120 	ble.w	9001cb2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c8ec:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c8f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c8f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c8f6:	f1bb 0b01 	subs.w	fp, fp, #1
9001c8fa:	eeb0 6a62 	vmov.f32	s12, s5
9001c8fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c902:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c906:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c90a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c90e:	eeb0 6a43 	vmov.f32	s12, s6
9001c912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c916:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c91a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c91e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c922:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c926:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c92a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c92e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c932:	ee12 2a90 	vmov	r2, s5
9001c936:	eef0 2a47 	vmov.f32	s5, s14
9001c93a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c93e:	ee13 2a10 	vmov	r2, s6
9001c942:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c944:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c946:	eeb0 3a67 	vmov.f32	s6, s15
9001c94a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c94e:	9a03      	ldr	r2, [sp, #12]
9001c950:	9314      	str	r3, [sp, #80]	@ 0x50
9001c952:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c954:	bf08      	it	eq
9001c956:	4613      	moveq	r3, r2
9001c958:	e789      	b.n	9001c86e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c95a:	1406      	asrs	r6, r0, #16
9001c95c:	d42d      	bmi.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c95e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001c962:	42b4      	cmp	r4, r6
9001c964:	dd29      	ble.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c966:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001c96a:	d426      	bmi.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c96c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c970:	4562      	cmp	r2, ip
9001c972:	dd22      	ble.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c974:	b224      	sxth	r4, r4
9001c976:	9a01      	ldr	r2, [sp, #4]
9001c978:	fb0c 6404 	mla	r4, ip, r4, r6
9001c97c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001c980:	0e22      	lsrs	r2, r4, #24
9001c982:	d01a      	beq.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c984:	9e04      	ldr	r6, [sp, #16]
9001c986:	4372      	muls	r2, r6
9001c988:	1c56      	adds	r6, r2, #1
9001c98a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c98e:	0a26      	lsrs	r6, r4, #8
9001c990:	1212      	asrs	r2, r2, #8
9001c992:	9605      	str	r6, [sp, #20]
9001c994:	2aff      	cmp	r2, #255	@ 0xff
9001c996:	d116      	bne.n	9001c9c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001c998:	f06f 0201 	mvn.w	r2, #1
9001c99c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c9a0:	fb02 fc07 	mul.w	ip, r2, r7
9001c9a4:	0962      	lsrs	r2, r4, #5
9001c9a6:	f026 0607 	bic.w	r6, r6, #7
9001c9aa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c9ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c9b2:	4316      	orrs	r6, r2
9001c9b4:	4326      	orrs	r6, r4
9001c9b6:	f825 600c 	strh.w	r6, [r5, ip]
9001c9ba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c9bc:	3f01      	subs	r7, #1
9001c9be:	4410      	add	r0, r2
9001c9c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c9c2:	4411      	add	r1, r2
9001c9c4:	e787      	b.n	9001c8d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c9c6:	f06f 0601 	mvn.w	r6, #1
9001c9ca:	fa1f fa82 	uxth.w	sl, r2
9001c9ce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001c9d2:	43d2      	mvns	r2, r2
9001c9d4:	437e      	muls	r6, r7
9001c9d6:	b2e4      	uxtb	r4, r4
9001c9d8:	fb1c fc0a 	smulbb	ip, ip, sl
9001c9dc:	b2d2      	uxtb	r2, r2
9001c9de:	f835 8006 	ldrh.w	r8, [r5, r6]
9001c9e2:	fb14 f40a 	smulbb	r4, r4, sl
9001c9e6:	9602      	str	r6, [sp, #8]
9001c9e8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c9ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c9f0:	fb16 f60a 	smulbb	r6, r6, sl
9001c9f4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c9f8:	fb0e ce02 	mla	lr, lr, r2, ip
9001c9fc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ca00:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ca04:	fa1f fe8e 	uxth.w	lr, lr
9001ca08:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001ca0c:	fa5f f888 	uxtb.w	r8, r8
9001ca10:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ca14:	fb08 4402 	mla	r4, r8, r2, r4
9001ca18:	f10e 0201 	add.w	r2, lr, #1
9001ca1c:	fa1f fc8c 	uxth.w	ip, ip
9001ca20:	b2a4      	uxth	r4, r4
9001ca22:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ca26:	9a02      	ldr	r2, [sp, #8]
9001ca28:	1c66      	adds	r6, r4, #1
9001ca2a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ca2e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ca32:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ca36:	ea46 0e0e 	orr.w	lr, r6, lr
9001ca3a:	f10c 0601 	add.w	r6, ip, #1
9001ca3e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ca42:	0976      	lsrs	r6, r6, #5
9001ca44:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ca48:	ea4e 0e06 	orr.w	lr, lr, r6
9001ca4c:	f825 e002 	strh.w	lr, [r5, r2]
9001ca50:	e7b3      	b.n	9001c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ca52:	f04f 0800 	mov.w	r8, #0
9001ca56:	eba3 0208 	sub.w	r2, r3, r8
9001ca5a:	2a00      	cmp	r2, #0
9001ca5c:	f77f af3e 	ble.w	9001c8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca60:	1404      	asrs	r4, r0, #16
9001ca62:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001ca66:	140a      	asrs	r2, r1, #16
9001ca68:	fb06 4202 	mla	r2, r6, r2, r4
9001ca6c:	9c01      	ldr	r4, [sp, #4]
9001ca6e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001ca72:	0e22      	lsrs	r2, r4, #24
9001ca74:	d015      	beq.n	9001caa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001ca76:	9e04      	ldr	r6, [sp, #16]
9001ca78:	4372      	muls	r2, r6
9001ca7a:	1c56      	adds	r6, r2, #1
9001ca7c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ca80:	0a26      	lsrs	r6, r4, #8
9001ca82:	1212      	asrs	r2, r2, #8
9001ca84:	2aff      	cmp	r2, #255	@ 0xff
9001ca86:	d113      	bne.n	9001cab0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ca88:	0962      	lsrs	r2, r4, #5
9001ca8a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ca8e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ca92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ca96:	f026 0607 	bic.w	r6, r6, #7
9001ca9a:	4316      	orrs	r6, r2
9001ca9c:	4326      	orrs	r6, r4
9001ca9e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001caa2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001caa4:	f108 0801 	add.w	r8, r8, #1
9001caa8:	4410      	add	r0, r2
9001caaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001caac:	4411      	add	r1, r2
9001caae:	e7d2      	b.n	9001ca56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001cab0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001cab4:	fa1f fa82 	uxth.w	sl, r2
9001cab8:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001cabc:	43d2      	mvns	r2, r2
9001cabe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cac2:	fb17 f70a 	smulbb	r7, r7, sl
9001cac6:	b2d2      	uxtb	r2, r2
9001cac8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cacc:	b2e4      	uxtb	r4, r4
9001cace:	b2f6      	uxtb	r6, r6
9001cad0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001cad4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001cad8:	fb14 f40a 	smulbb	r4, r4, sl
9001cadc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cae0:	fa1f fc8c 	uxth.w	ip, ip
9001cae4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cae8:	fb16 f60a 	smulbb	r6, r6, sl
9001caec:	fa5f fe8e 	uxtb.w	lr, lr
9001caf0:	fb0e 4402 	mla	r4, lr, r2, r4
9001caf4:	fb07 6702 	mla	r7, r7, r2, r6
9001caf8:	f10c 0201 	add.w	r2, ip, #1
9001cafc:	b2a4      	uxth	r4, r4
9001cafe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001cb02:	1c66      	adds	r6, r4, #1
9001cb04:	b2bf      	uxth	r7, r7
9001cb06:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cb0a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001cb0e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001cb12:	ea46 0c0c 	orr.w	ip, r6, ip
9001cb16:	1c7e      	adds	r6, r7, #1
9001cb18:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001cb1c:	0976      	lsrs	r6, r6, #5
9001cb1e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cb22:	ea4c 0c06 	orr.w	ip, ip, r6
9001cb26:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001cb2a:	e7ba      	b.n	9001caa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001cb2c:	b007      	add	sp, #28
9001cb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001cb34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb38:	b085      	sub	sp, #20
9001cb3a:	468b      	mov	fp, r1
9001cb3c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cb40:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cb42:	9203      	str	r2, [sp, #12]
9001cb44:	6841      	ldr	r1, [r0, #4]
9001cb46:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001cb4a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cb4e:	fb01 2404 	mla	r4, r1, r4, r2
9001cb52:	6802      	ldr	r2, [r0, #0]
9001cb54:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cb58:	f8d8 2000 	ldr.w	r2, [r8]
9001cb5c:	9201      	str	r2, [sp, #4]
9001cb5e:	f1bb 0f00 	cmp.w	fp, #0
9001cb62:	dc03      	bgt.n	9001cb6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cb64:	9a03      	ldr	r2, [sp, #12]
9001cb66:	2a00      	cmp	r2, #0
9001cb68:	f340 814f 	ble.w	9001ce0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001cb6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001cb6e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001cb72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cb76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001cb78:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001cb7c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cb80:	2b00      	cmp	r3, #0
9001cb82:	dd0e      	ble.n	9001cba2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001cb84:	1408      	asrs	r0, r1, #16
9001cb86:	d405      	bmi.n	9001cb94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb88:	42b8      	cmp	r0, r7
9001cb8a:	da03      	bge.n	9001cb94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb8c:	1410      	asrs	r0, r2, #16
9001cb8e:	d401      	bmi.n	9001cb94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb90:	42b0      	cmp	r0, r6
9001cb92:	db07      	blt.n	9001cba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cb94:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cb96:	3b01      	subs	r3, #1
9001cb98:	3402      	adds	r4, #2
9001cb9a:	4401      	add	r1, r0
9001cb9c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cb9e:	4402      	add	r2, r0
9001cba0:	e7ee      	b.n	9001cb80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001cba2:	d017      	beq.n	9001cbd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cba4:	1e58      	subs	r0, r3, #1
9001cba6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001cba8:	fb05 1500 	mla	r5, r5, r0, r1
9001cbac:	142d      	asrs	r5, r5, #16
9001cbae:	d409      	bmi.n	9001cbc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cbb0:	42bd      	cmp	r5, r7
9001cbb2:	da07      	bge.n	9001cbc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cbb4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001cbb6:	fb05 2000 	mla	r0, r5, r0, r2
9001cbba:	1400      	asrs	r0, r0, #16
9001cbbc:	d402      	bmi.n	9001cbc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cbbe:	42b0      	cmp	r0, r6
9001cbc0:	f2c0 80ba 	blt.w	9001cd38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001cbc4:	2600      	movs	r6, #0
9001cbc6:	1998      	adds	r0, r3, r6
9001cbc8:	2800      	cmp	r0, #0
9001cbca:	dc3e      	bgt.n	9001cc4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001cbcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cbd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cbd4:	f1bb 0f00 	cmp.w	fp, #0
9001cbd8:	f340 8117 	ble.w	9001ce0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001cbdc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cbe0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cbe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cbe6:	f1bb 0b01 	subs.w	fp, fp, #1
9001cbea:	eeb0 6a62 	vmov.f32	s12, s5
9001cbee:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cbf2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cbf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbfa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001cbfe:	eeb0 6a43 	vmov.f32	s12, s6
9001cc02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cc06:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001cc0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cc0e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cc12:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cc16:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cc1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cc1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cc22:	ee12 2a90 	vmov	r2, s5
9001cc26:	eef0 2a47 	vmov.f32	s5, s14
9001cc2a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc2e:	ee13 2a10 	vmov	r2, s6
9001cc32:	9311      	str	r3, [sp, #68]	@ 0x44
9001cc34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc36:	eeb0 3a67 	vmov.f32	s6, s15
9001cc3a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc3e:	9a03      	ldr	r2, [sp, #12]
9001cc40:	9312      	str	r3, [sp, #72]	@ 0x48
9001cc42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc44:	bf08      	it	eq
9001cc46:	4613      	moveq	r3, r2
9001cc48:	e789      	b.n	9001cb5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001cc4a:	140f      	asrs	r7, r1, #16
9001cc4c:	d424      	bmi.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc4e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001cc52:	42bd      	cmp	r5, r7
9001cc54:	dd20      	ble.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc56:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cc5a:	d41d      	bmi.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc5c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001cc60:	4560      	cmp	r0, ip
9001cc62:	dd19      	ble.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc64:	b22d      	sxth	r5, r5
9001cc66:	9801      	ldr	r0, [sp, #4]
9001cc68:	fb0c 7505 	mla	r5, ip, r5, r7
9001cc6c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001cc70:	0e07      	lsrs	r7, r0, #24
9001cc72:	2fff      	cmp	r7, #255	@ 0xff
9001cc74:	d116      	bne.n	9001cca4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cc76:	f06f 0501 	mvn.w	r5, #1
9001cc7a:	fb05 f706 	mul.w	r7, r5, r6
9001cc7e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001cc82:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001cc86:	0945      	lsrs	r5, r0, #5
9001cc88:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001cc8c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cc90:	ea4c 0505 	orr.w	r5, ip, r5
9001cc94:	4305      	orrs	r5, r0
9001cc96:	53e5      	strh	r5, [r4, r7]
9001cc98:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cc9a:	3e01      	subs	r6, #1
9001cc9c:	4401      	add	r1, r0
9001cc9e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cca0:	4402      	add	r2, r0
9001cca2:	e790      	b.n	9001cbc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001cca4:	b2fd      	uxtb	r5, r7
9001cca6:	2f00      	cmp	r7, #0
9001cca8:	d0f6      	beq.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ccaa:	f06f 0701 	mvn.w	r7, #1
9001ccae:	fa1f f985 	uxth.w	r9, r5
9001ccb2:	43ed      	mvns	r5, r5
9001ccb4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ccb8:	4377      	muls	r7, r6
9001ccba:	fb1a fa09 	smulbb	sl, sl, r9
9001ccbe:	b2ed      	uxtb	r5, r5
9001ccc0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001ccc4:	9702      	str	r7, [sp, #8]
9001ccc6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ccca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ccce:	fb17 f709 	smulbb	r7, r7, r9
9001ccd2:	b2c0      	uxtb	r0, r0
9001ccd4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ccd8:	fb10 f009 	smulbb	r0, r0, r9
9001ccdc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001cce0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001cce4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cce8:	fa1f fc8c 	uxth.w	ip, ip
9001ccec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ccf0:	fa5f fe8e 	uxtb.w	lr, lr
9001ccf4:	fb07 a705 	mla	r7, r7, r5, sl
9001ccf8:	fb0e 0005 	mla	r0, lr, r5, r0
9001ccfc:	f10c 0501 	add.w	r5, ip, #1
9001cd00:	b2bf      	uxth	r7, r7
9001cd02:	b280      	uxth	r0, r0
9001cd04:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cd08:	f100 0a01 	add.w	sl, r0, #1
9001cd0c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cd10:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001cd14:	9802      	ldr	r0, [sp, #8]
9001cd16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cd1a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cd1e:	f107 0a01 	add.w	sl, r7, #1
9001cd22:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001cd26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cd2a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cd2e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cd32:	f824 c000 	strh.w	ip, [r4, r0]
9001cd36:	e7af      	b.n	9001cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cd38:	f04f 0e00 	mov.w	lr, #0
9001cd3c:	eba3 000e 	sub.w	r0, r3, lr
9001cd40:	2800      	cmp	r0, #0
9001cd42:	f77f af43 	ble.w	9001cbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cd46:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001cd4a:	140d      	asrs	r5, r1, #16
9001cd4c:	1410      	asrs	r0, r2, #16
9001cd4e:	fb06 5000 	mla	r0, r6, r0, r5
9001cd52:	9d01      	ldr	r5, [sp, #4]
9001cd54:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001cd58:	0e2e      	lsrs	r6, r5, #24
9001cd5a:	2eff      	cmp	r6, #255	@ 0xff
9001cd5c:	d112      	bne.n	9001cd84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001cd5e:	482c      	ldr	r0, [pc, #176]	@ (9001ce10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001cd60:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001cd64:	0968      	lsrs	r0, r5, #5
9001cd66:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cd6a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001cd6e:	4330      	orrs	r0, r6
9001cd70:	4328      	orrs	r0, r5
9001cd72:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001cd76:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cd78:	f10e 0e01 	add.w	lr, lr, #1
9001cd7c:	4401      	add	r1, r0
9001cd7e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cd80:	4402      	add	r2, r0
9001cd82:	e7db      	b.n	9001cd3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001cd84:	b2f0      	uxtb	r0, r6
9001cd86:	2e00      	cmp	r6, #0
9001cd88:	d0f5      	beq.n	9001cd76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001cd8a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001cd8e:	fa1f f980 	uxth.w	r9, r0
9001cd92:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cd96:	43c0      	mvns	r0, r0
9001cd98:	ea4f 272c 	mov.w	r7, ip, asr #8
9001cd9c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cda0:	fb16 f609 	smulbb	r6, r6, r9
9001cda4:	b2c0      	uxtb	r0, r0
9001cda6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cdaa:	b2ed      	uxtb	r5, r5
9001cdac:	fb1a fa09 	smulbb	sl, sl, r9
9001cdb0:	fb07 6700 	mla	r7, r7, r0, r6
9001cdb4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001cdb8:	fb15 f509 	smulbb	r5, r5, r9
9001cdbc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cdc0:	b2bf      	uxth	r7, r7
9001cdc2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cdc6:	fa5f fc8c 	uxtb.w	ip, ip
9001cdca:	fb06 a600 	mla	r6, r6, r0, sl
9001cdce:	fb0c 5500 	mla	r5, ip, r0, r5
9001cdd2:	1c78      	adds	r0, r7, #1
9001cdd4:	b2b6      	uxth	r6, r6
9001cdd6:	b2ad      	uxth	r5, r5
9001cdd8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001cddc:	f105 0a01 	add.w	sl, r5, #1
9001cde0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cde4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cde8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cdec:	ea4a 0707 	orr.w	r7, sl, r7
9001cdf0:	f106 0a01 	add.w	sl, r6, #1
9001cdf4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cdf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cdfc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ce00:	ea47 070a 	orr.w	r7, r7, sl
9001ce04:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001ce08:	e7b5      	b.n	9001cd76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ce0a:	b005      	add	sp, #20
9001ce0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ce10:	fffff800 	.word	0xfffff800

9001ce14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ce14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce18:	b087      	sub	sp, #28
9001ce1a:	468b      	mov	fp, r1
9001ce1c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ce20:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ce22:	9203      	str	r2, [sp, #12]
9001ce24:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ce28:	6841      	ldr	r1, [r0, #4]
9001ce2a:	9204      	str	r2, [sp, #16]
9001ce2c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001ce30:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ce34:	fb01 2404 	mla	r4, r1, r4, r2
9001ce38:	6802      	ldr	r2, [r0, #0]
9001ce3a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ce3e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001ce42:	3201      	adds	r2, #1
9001ce44:	f022 0201 	bic.w	r2, r2, #1
9001ce48:	9200      	str	r2, [sp, #0]
9001ce4a:	f8d9 2000 	ldr.w	r2, [r9]
9001ce4e:	9201      	str	r2, [sp, #4]
9001ce50:	f1bb 0f00 	cmp.w	fp, #0
9001ce54:	dc03      	bgt.n	9001ce5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ce56:	9a03      	ldr	r2, [sp, #12]
9001ce58:	2a00      	cmp	r2, #0
9001ce5a:	f340 816a 	ble.w	9001d132 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001ce5e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ce60:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001ce64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ce68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ce6a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ce6e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ce72:	2b00      	cmp	r3, #0
9001ce74:	dd0e      	ble.n	9001ce94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ce76:	1402      	asrs	r2, r0, #16
9001ce78:	d405      	bmi.n	9001ce86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce7a:	42ba      	cmp	r2, r7
9001ce7c:	da03      	bge.n	9001ce86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce7e:	140a      	asrs	r2, r1, #16
9001ce80:	d401      	bmi.n	9001ce86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce82:	42b2      	cmp	r2, r6
9001ce84:	db07      	blt.n	9001ce96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001ce86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ce88:	3b01      	subs	r3, #1
9001ce8a:	3402      	adds	r4, #2
9001ce8c:	4410      	add	r0, r2
9001ce8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce90:	4411      	add	r1, r2
9001ce92:	e7ee      	b.n	9001ce72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001ce94:	d017      	beq.n	9001cec6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ce96:	1e5a      	subs	r2, r3, #1
9001ce98:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ce9a:	fb05 0502 	mla	r5, r5, r2, r0
9001ce9e:	142d      	asrs	r5, r5, #16
9001cea0:	d409      	bmi.n	9001ceb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cea2:	42bd      	cmp	r5, r7
9001cea4:	da07      	bge.n	9001ceb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cea6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001cea8:	fb05 1202 	mla	r2, r5, r2, r1
9001ceac:	1412      	asrs	r2, r2, #16
9001ceae:	d402      	bmi.n	9001ceb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ceb0:	42b2      	cmp	r2, r6
9001ceb2:	f2c0 80c8 	blt.w	9001d046 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001ceb6:	2700      	movs	r7, #0
9001ceb8:	19da      	adds	r2, r3, r7
9001ceba:	2a00      	cmp	r2, #0
9001cebc:	dc3e      	bgt.n	9001cf3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001cebe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cec2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cec6:	f1bb 0f00 	cmp.w	fp, #0
9001ceca:	f340 8132 	ble.w	9001d132 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001cece:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ced2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ced4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ced8:	f1bb 0b01 	subs.w	fp, fp, #1
9001cedc:	eeb0 6a62 	vmov.f32	s12, s5
9001cee0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cee4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cee8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ceec:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001cef0:	eeb0 6a43 	vmov.f32	s12, s6
9001cef4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cef8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001cefc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cf00:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cf04:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cf08:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cf0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cf10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cf14:	ee12 2a90 	vmov	r2, s5
9001cf18:	eef0 2a47 	vmov.f32	s5, s14
9001cf1c:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf20:	ee13 2a10 	vmov	r2, s6
9001cf24:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cf26:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cf28:	eeb0 3a67 	vmov.f32	s6, s15
9001cf2c:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf30:	9a03      	ldr	r2, [sp, #12]
9001cf32:	9314      	str	r3, [sp, #80]	@ 0x50
9001cf34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cf36:	bf08      	it	eq
9001cf38:	4613      	moveq	r3, r2
9001cf3a:	e789      	b.n	9001ce50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001cf3c:	1405      	asrs	r5, r0, #16
9001cf3e:	d436      	bmi.n	9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf40:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001cf44:	42aa      	cmp	r2, r5
9001cf46:	dd32      	ble.n	9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf48:	140e      	asrs	r6, r1, #16
9001cf4a:	d430      	bmi.n	9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf4c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001cf50:	42b2      	cmp	r2, r6
9001cf52:	dd2c      	ble.n	9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf54:	9a00      	ldr	r2, [sp, #0]
9001cf56:	fb06 5502 	mla	r5, r6, r2, r5
9001cf5a:	9e01      	ldr	r6, [sp, #4]
9001cf5c:	086a      	lsrs	r2, r5, #1
9001cf5e:	5cb2      	ldrb	r2, [r6, r2]
9001cf60:	07ee      	lsls	r6, r5, #31
9001cf62:	bf54      	ite	pl
9001cf64:	f002 020f 	andpl.w	r2, r2, #15
9001cf68:	1112      	asrmi	r2, r2, #4
9001cf6a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cf6e:	b2d2      	uxtb	r2, r2
9001cf70:	b1ea      	cbz	r2, 9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf72:	9d04      	ldr	r5, [sp, #16]
9001cf74:	436a      	muls	r2, r5
9001cf76:	1c55      	adds	r5, r2, #1
9001cf78:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001cf7c:	4d6e      	ldr	r5, [pc, #440]	@ (9001d138 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001cf7e:	1212      	asrs	r2, r2, #8
9001cf80:	682d      	ldr	r5, [r5, #0]
9001cf82:	2aff      	cmp	r2, #255	@ 0xff
9001cf84:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001cf88:	9605      	str	r6, [sp, #20]
9001cf8a:	d116      	bne.n	9001cfba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001cf8c:	f06f 0201 	mvn.w	r2, #1
9001cf90:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001cf94:	fb02 fc07 	mul.w	ip, r2, r7
9001cf98:	096a      	lsrs	r2, r5, #5
9001cf9a:	f026 0607 	bic.w	r6, r6, #7
9001cf9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cfa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cfa6:	4316      	orrs	r6, r2
9001cfa8:	432e      	orrs	r6, r5
9001cfaa:	f824 600c 	strh.w	r6, [r4, ip]
9001cfae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cfb0:	3f01      	subs	r7, #1
9001cfb2:	4410      	add	r0, r2
9001cfb4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cfb6:	4411      	add	r1, r2
9001cfb8:	e77e      	b.n	9001ceb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001cfba:	f06f 0601 	mvn.w	r6, #1
9001cfbe:	fa1f fa82 	uxth.w	sl, r2
9001cfc2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001cfc6:	43d2      	mvns	r2, r2
9001cfc8:	437e      	muls	r6, r7
9001cfca:	b2ed      	uxtb	r5, r5
9001cfcc:	fb1c fc0a 	smulbb	ip, ip, sl
9001cfd0:	b2d2      	uxtb	r2, r2
9001cfd2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001cfd6:	fb15 f50a 	smulbb	r5, r5, sl
9001cfda:	9602      	str	r6, [sp, #8]
9001cfdc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001cfe0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001cfe4:	fb16 f60a 	smulbb	r6, r6, sl
9001cfe8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001cfec:	fb0e ce02 	mla	lr, lr, r2, ip
9001cff0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001cff4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cff8:	fa1f fe8e 	uxth.w	lr, lr
9001cffc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001d000:	fa5f f888 	uxtb.w	r8, r8
9001d004:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d008:	fb08 5502 	mla	r5, r8, r2, r5
9001d00c:	f10e 0201 	add.w	r2, lr, #1
9001d010:	fa1f fc8c 	uxth.w	ip, ip
9001d014:	b2ad      	uxth	r5, r5
9001d016:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d01a:	9a02      	ldr	r2, [sp, #8]
9001d01c:	1c6e      	adds	r6, r5, #1
9001d01e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001d022:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001d026:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d02a:	ea46 0e0e 	orr.w	lr, r6, lr
9001d02e:	f10c 0601 	add.w	r6, ip, #1
9001d032:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d036:	0976      	lsrs	r6, r6, #5
9001d038:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d03c:	ea4e 0e06 	orr.w	lr, lr, r6
9001d040:	f824 e002 	strh.w	lr, [r4, r2]
9001d044:	e7b3      	b.n	9001cfae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d046:	f04f 0800 	mov.w	r8, #0
9001d04a:	eba3 0208 	sub.w	r2, r3, r8
9001d04e:	2a00      	cmp	r2, #0
9001d050:	f77f af35 	ble.w	9001cebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d054:	1402      	asrs	r2, r0, #16
9001d056:	9e00      	ldr	r6, [sp, #0]
9001d058:	140d      	asrs	r5, r1, #16
9001d05a:	fb06 2505 	mla	r5, r6, r5, r2
9001d05e:	9e01      	ldr	r6, [sp, #4]
9001d060:	086a      	lsrs	r2, r5, #1
9001d062:	07ed      	lsls	r5, r5, #31
9001d064:	5cb2      	ldrb	r2, [r6, r2]
9001d066:	bf54      	ite	pl
9001d068:	f002 020f 	andpl.w	r2, r2, #15
9001d06c:	1112      	asrmi	r2, r2, #4
9001d06e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d072:	b2d2      	uxtb	r2, r2
9001d074:	b1c2      	cbz	r2, 9001d0a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d076:	9d04      	ldr	r5, [sp, #16]
9001d078:	436a      	muls	r2, r5
9001d07a:	1c55      	adds	r5, r2, #1
9001d07c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d080:	4d2d      	ldr	r5, [pc, #180]	@ (9001d138 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d082:	1212      	asrs	r2, r2, #8
9001d084:	682e      	ldr	r6, [r5, #0]
9001d086:	2aff      	cmp	r2, #255	@ 0xff
9001d088:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001d08c:	d113      	bne.n	9001d0b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d08e:	0972      	lsrs	r2, r6, #5
9001d090:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001d094:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001d098:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d09c:	f025 0507 	bic.w	r5, r5, #7
9001d0a0:	4315      	orrs	r5, r2
9001d0a2:	4335      	orrs	r5, r6
9001d0a4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001d0a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d0aa:	f108 0801 	add.w	r8, r8, #1
9001d0ae:	4410      	add	r0, r2
9001d0b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d0b2:	4411      	add	r1, r2
9001d0b4:	e7c9      	b.n	9001d04a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d0b6:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d0ba:	fa1f fa82 	uxth.w	sl, r2
9001d0be:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001d0c2:	43d2      	mvns	r2, r2
9001d0c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d0c8:	fb17 f70a 	smulbb	r7, r7, sl
9001d0cc:	b2d2      	uxtb	r2, r2
9001d0ce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d0d2:	b2f6      	uxtb	r6, r6
9001d0d4:	b2ed      	uxtb	r5, r5
9001d0d6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d0da:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d0de:	fb16 f60a 	smulbb	r6, r6, sl
9001d0e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d0e6:	fa1f fc8c 	uxth.w	ip, ip
9001d0ea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d0ee:	fb15 f50a 	smulbb	r5, r5, sl
9001d0f2:	fa5f fe8e 	uxtb.w	lr, lr
9001d0f6:	fb0e 6602 	mla	r6, lr, r2, r6
9001d0fa:	fb07 5702 	mla	r7, r7, r2, r5
9001d0fe:	f10c 0201 	add.w	r2, ip, #1
9001d102:	b2b6      	uxth	r6, r6
9001d104:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d108:	1c75      	adds	r5, r6, #1
9001d10a:	b2bf      	uxth	r7, r7
9001d10c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d110:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d114:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d118:	ea45 0c0c 	orr.w	ip, r5, ip
9001d11c:	1c7d      	adds	r5, r7, #1
9001d11e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001d122:	096d      	lsrs	r5, r5, #5
9001d124:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d128:	ea4c 0c05 	orr.w	ip, ip, r5
9001d12c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001d130:	e7ba      	b.n	9001d0a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d132:	b007      	add	sp, #28
9001d134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d138:	240234cc 	.word	0x240234cc

9001d13c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d13c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d140:	b087      	sub	sp, #28
9001d142:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d146:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001d450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001d14a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d14c:	9101      	str	r1, [sp, #4]
9001d14e:	9205      	str	r2, [sp, #20]
9001d150:	6841      	ldr	r1, [r0, #4]
9001d152:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001d156:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d15a:	fb01 2404 	mla	r4, r1, r4, r2
9001d15e:	6802      	ldr	r2, [r0, #0]
9001d160:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d164:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d168:	3201      	adds	r2, #1
9001d16a:	f022 0201 	bic.w	r2, r2, #1
9001d16e:	9202      	str	r2, [sp, #8]
9001d170:	f8db 2000 	ldr.w	r2, [fp]
9001d174:	9203      	str	r2, [sp, #12]
9001d176:	9a01      	ldr	r2, [sp, #4]
9001d178:	2a00      	cmp	r2, #0
9001d17a:	dc03      	bgt.n	9001d184 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001d17c:	9a05      	ldr	r2, [sp, #20]
9001d17e:	2a00      	cmp	r2, #0
9001d180:	f340 8162 	ble.w	9001d448 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d184:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d186:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001d18a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d18e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d190:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001d194:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d198:	2b00      	cmp	r3, #0
9001d19a:	dd0e      	ble.n	9001d1ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d19c:	1402      	asrs	r2, r0, #16
9001d19e:	d405      	bmi.n	9001d1ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d1a0:	42ba      	cmp	r2, r7
9001d1a2:	da03      	bge.n	9001d1ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d1a4:	140a      	asrs	r2, r1, #16
9001d1a6:	d401      	bmi.n	9001d1ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d1a8:	42b2      	cmp	r2, r6
9001d1aa:	db07      	blt.n	9001d1bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d1ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d1ae:	3b01      	subs	r3, #1
9001d1b0:	3402      	adds	r4, #2
9001d1b2:	4410      	add	r0, r2
9001d1b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d1b6:	4411      	add	r1, r2
9001d1b8:	e7ee      	b.n	9001d198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001d1ba:	d017      	beq.n	9001d1ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001d1bc:	1e5a      	subs	r2, r3, #1
9001d1be:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d1c0:	fb05 0502 	mla	r5, r5, r2, r0
9001d1c4:	142d      	asrs	r5, r5, #16
9001d1c6:	d409      	bmi.n	9001d1dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1c8:	42bd      	cmp	r5, r7
9001d1ca:	da07      	bge.n	9001d1dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d1ce:	fb05 1202 	mla	r2, r5, r2, r1
9001d1d2:	1412      	asrs	r2, r2, #16
9001d1d4:	d402      	bmi.n	9001d1dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1d6:	42b2      	cmp	r2, r6
9001d1d8:	f2c0 80c3 	blt.w	9001d362 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001d1dc:	2500      	movs	r5, #0
9001d1de:	195a      	adds	r2, r3, r5
9001d1e0:	2a00      	cmp	r2, #0
9001d1e2:	dc3f      	bgt.n	9001d264 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d1e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d1e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d1ec:	9b01      	ldr	r3, [sp, #4]
9001d1ee:	2b00      	cmp	r3, #0
9001d1f0:	f340 812a 	ble.w	9001d448 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d1f4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d1f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d1fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d1fe:	eeb0 6a62 	vmov.f32	s12, s5
9001d202:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d206:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d20a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d20e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d212:	eeb0 6a43 	vmov.f32	s12, s6
9001d216:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d21a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d21e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d222:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d226:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d22a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d22e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d232:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d236:	ee12 2a90 	vmov	r2, s5
9001d23a:	eef0 2a47 	vmov.f32	s5, s14
9001d23e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d242:	ee13 2a10 	vmov	r2, s6
9001d246:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d248:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d24a:	eeb0 3a67 	vmov.f32	s6, s15
9001d24e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d252:	9314      	str	r3, [sp, #80]	@ 0x50
9001d254:	9b01      	ldr	r3, [sp, #4]
9001d256:	9a05      	ldr	r2, [sp, #20]
9001d258:	3b01      	subs	r3, #1
9001d25a:	9301      	str	r3, [sp, #4]
9001d25c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d25e:	bf08      	it	eq
9001d260:	4613      	moveq	r3, r2
9001d262:	e788      	b.n	9001d176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001d264:	1406      	asrs	r6, r0, #16
9001d266:	d42c      	bmi.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d268:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d26c:	42b2      	cmp	r2, r6
9001d26e:	dd28      	ble.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d270:	140f      	asrs	r7, r1, #16
9001d272:	d426      	bmi.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d274:	f8db 200c 	ldr.w	r2, [fp, #12]
9001d278:	42ba      	cmp	r2, r7
9001d27a:	dd22      	ble.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d27c:	9a02      	ldr	r2, [sp, #8]
9001d27e:	fb07 6602 	mla	r6, r7, r2, r6
9001d282:	9f03      	ldr	r7, [sp, #12]
9001d284:	0872      	lsrs	r2, r6, #1
9001d286:	07f6      	lsls	r6, r6, #31
9001d288:	5cba      	ldrb	r2, [r7, r2]
9001d28a:	bf54      	ite	pl
9001d28c:	f002 020f 	andpl.w	r2, r2, #15
9001d290:	1112      	asrmi	r2, r2, #4
9001d292:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d296:	b2d2      	uxtb	r2, r2
9001d298:	2aff      	cmp	r2, #255	@ 0xff
9001d29a:	d118      	bne.n	9001d2ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001d29c:	f06f 0601 	mvn.w	r6, #1
9001d2a0:	f8d8 2000 	ldr.w	r2, [r8]
9001d2a4:	fb06 f705 	mul.w	r7, r6, r5
9001d2a8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001d2ac:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001d2b0:	0956      	lsrs	r6, r2, #5
9001d2b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d2b6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d2ba:	ea4c 0606 	orr.w	r6, ip, r6
9001d2be:	4316      	orrs	r6, r2
9001d2c0:	53e6      	strh	r6, [r4, r7]
9001d2c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d2c4:	3d01      	subs	r5, #1
9001d2c6:	4410      	add	r0, r2
9001d2c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d2ca:	4411      	add	r1, r2
9001d2cc:	e787      	b.n	9001d1de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d2ce:	2a00      	cmp	r2, #0
9001d2d0:	d0f7      	beq.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d2d2:	f06f 0601 	mvn.w	r6, #1
9001d2d6:	f8d8 c000 	ldr.w	ip, [r8]
9001d2da:	fa1f f982 	uxth.w	r9, r2
9001d2de:	43d2      	mvns	r2, r2
9001d2e0:	436e      	muls	r6, r5
9001d2e2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001d2e6:	b2d2      	uxtb	r2, r2
9001d2e8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001d2ec:	fb1a fa09 	smulbb	sl, sl, r9
9001d2f0:	9604      	str	r6, [sp, #16]
9001d2f2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001d2f6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001d2fa:	fb16 f609 	smulbb	r6, r6, r9
9001d2fe:	fa5f fc8c 	uxtb.w	ip, ip
9001d302:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d306:	fb1c fc09 	smulbb	ip, ip, r9
9001d30a:	fb07 6702 	mla	r7, r7, r2, r6
9001d30e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d312:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d316:	b2bf      	uxth	r7, r7
9001d318:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d31c:	fa5f fe8e 	uxtb.w	lr, lr
9001d320:	fb06 a602 	mla	r6, r6, r2, sl
9001d324:	fb0e cc02 	mla	ip, lr, r2, ip
9001d328:	1c7a      	adds	r2, r7, #1
9001d32a:	b2b6      	uxth	r6, r6
9001d32c:	fa1f fc8c 	uxth.w	ip, ip
9001d330:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d334:	9a04      	ldr	r2, [sp, #16]
9001d336:	f10c 0a01 	add.w	sl, ip, #1
9001d33a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d33e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001d342:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d346:	ea4a 0707 	orr.w	r7, sl, r7
9001d34a:	f106 0a01 	add.w	sl, r6, #1
9001d34e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d352:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d356:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d35a:	ea47 070a 	orr.w	r7, r7, sl
9001d35e:	52a7      	strh	r7, [r4, r2]
9001d360:	e7af      	b.n	9001d2c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d362:	f04f 0e00 	mov.w	lr, #0
9001d366:	eba3 020e 	sub.w	r2, r3, lr
9001d36a:	2a00      	cmp	r2, #0
9001d36c:	f77f af3a 	ble.w	9001d1e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d370:	1402      	asrs	r2, r0, #16
9001d372:	9e02      	ldr	r6, [sp, #8]
9001d374:	140d      	asrs	r5, r1, #16
9001d376:	fb06 2505 	mla	r5, r6, r5, r2
9001d37a:	9e03      	ldr	r6, [sp, #12]
9001d37c:	086a      	lsrs	r2, r5, #1
9001d37e:	07ed      	lsls	r5, r5, #31
9001d380:	5cb2      	ldrb	r2, [r6, r2]
9001d382:	bf54      	ite	pl
9001d384:	f002 020f 	andpl.w	r2, r2, #15
9001d388:	1112      	asrmi	r2, r2, #4
9001d38a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d38e:	b2d2      	uxtb	r2, r2
9001d390:	2aff      	cmp	r2, #255	@ 0xff
9001d392:	d115      	bne.n	9001d3c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001d394:	f8d8 5000 	ldr.w	r5, [r8]
9001d398:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001d39c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001d3a0:	096a      	lsrs	r2, r5, #5
9001d3a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d3a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d3aa:	4332      	orrs	r2, r6
9001d3ac:	432a      	orrs	r2, r5
9001d3ae:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001d3b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d3b4:	f10e 0e01 	add.w	lr, lr, #1
9001d3b8:	4410      	add	r0, r2
9001d3ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d3bc:	4411      	add	r1, r2
9001d3be:	e7d2      	b.n	9001d366 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001d3c0:	2a00      	cmp	r2, #0
9001d3c2:	d0f6      	beq.n	9001d3b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d3c4:	f8d8 7000 	ldr.w	r7, [r8]
9001d3c8:	fa1f f982 	uxth.w	r9, r2
9001d3cc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d3d0:	43d2      	mvns	r2, r2
9001d3d2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001d3d6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001d3da:	ea4f 262c 	mov.w	r6, ip, asr #8
9001d3de:	fb15 f509 	smulbb	r5, r5, r9
9001d3e2:	b2d2      	uxtb	r2, r2
9001d3e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d3e8:	b2ff      	uxtb	r7, r7
9001d3ea:	fb1a fa09 	smulbb	sl, sl, r9
9001d3ee:	fb06 5602 	mla	r6, r6, r2, r5
9001d3f2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d3f6:	fb17 f709 	smulbb	r7, r7, r9
9001d3fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d3fe:	b2b6      	uxth	r6, r6
9001d400:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d404:	fa5f fc8c 	uxtb.w	ip, ip
9001d408:	fb05 a502 	mla	r5, r5, r2, sl
9001d40c:	fb0c 7702 	mla	r7, ip, r2, r7
9001d410:	1c72      	adds	r2, r6, #1
9001d412:	b2ad      	uxth	r5, r5
9001d414:	b2bf      	uxth	r7, r7
9001d416:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001d41a:	f107 0a01 	add.w	sl, r7, #1
9001d41e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d422:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d426:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d42a:	ea4a 0606 	orr.w	r6, sl, r6
9001d42e:	f105 0a01 	add.w	sl, r5, #1
9001d432:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d436:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d43a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d43e:	ea46 060a 	orr.w	r6, r6, sl
9001d442:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001d446:	e7b4      	b.n	9001d3b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d448:	b007      	add	sp, #28
9001d44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d44e:	bf00      	nop
9001d450:	240234cc 	.word	0x240234cc

9001d454 <_ZN8touchgfx8LCD16bppD1Ev>:
9001d454:	4770      	bx	lr

9001d456 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001d456:	4770      	bx	lr

9001d458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001d458:	4770      	bx	lr

9001d45a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001d45a:	4770      	bx	lr

9001d45c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001d45c:	4770      	bx	lr

9001d45e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001d45e:	4770      	bx	lr

9001d460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001d460:	4770      	bx	lr

9001d462 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001d462:	4770      	bx	lr

9001d464 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001d464:	4770      	bx	lr

9001d466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d466:	4770      	bx	lr

9001d468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d468:	4770      	bx	lr

9001d46a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d46a:	4770      	bx	lr

9001d46c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d46c:	4770      	bx	lr

9001d46e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d46e:	4770      	bx	lr

9001d470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d470:	4770      	bx	lr

9001d472 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d472:	4770      	bx	lr

9001d474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d474:	4770      	bx	lr

9001d476 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d476:	4770      	bx	lr

9001d478 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d478:	4770      	bx	lr

9001d47a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d47a:	4770      	bx	lr

9001d47c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d47c:	4770      	bx	lr

9001d47e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d47e:	4770      	bx	lr

9001d480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d480:	4770      	bx	lr

9001d482 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d482:	4770      	bx	lr

9001d484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d484:	4770      	bx	lr

9001d486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d486:	4770      	bx	lr

9001d488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001d488:	4770      	bx	lr

9001d48a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d48a:	4770      	bx	lr

9001d48c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001d48c:	4770      	bx	lr

9001d48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d48e:	4770      	bx	lr

9001d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d490:	4770      	bx	lr

9001d492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d492:	4770      	bx	lr

9001d494 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d494:	4770      	bx	lr

9001d496 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001d496:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d49a:	b088      	sub	sp, #32
9001d49c:	4606      	mov	r6, r0
9001d49e:	4688      	mov	r8, r1
9001d4a0:	4691      	mov	r9, r2
9001d4a2:	ac08      	add	r4, sp, #32
9001d4a4:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001d4a8:	4620      	mov	r0, r4
9001d4aa:	f7fd fc33 	bl	9001ad14 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d4ae:	6833      	ldr	r3, [r6, #0]
9001d4b0:	4605      	mov	r5, r0
9001d4b2:	4620      	mov	r0, r4
9001d4b4:	699f      	ldr	r7, [r3, #24]
9001d4b6:	f7fd fb3b 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d4ba:	4682      	mov	sl, r0
9001d4bc:	4620      	mov	r0, r4
9001d4be:	f7fd fb6b 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d4c2:	9500      	str	r5, [sp, #0]
9001d4c4:	464b      	mov	r3, r9
9001d4c6:	4642      	mov	r2, r8
9001d4c8:	4631      	mov	r1, r6
9001d4ca:	e9cd a001 	strd	sl, r0, [sp, #4]
9001d4ce:	a806      	add	r0, sp, #24
9001d4d0:	47b8      	blx	r7
9001d4d2:	4628      	mov	r0, r5
9001d4d4:	b008      	add	sp, #32
9001d4d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001d4dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001d4dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001d4e0:	2300      	movs	r3, #0
9001d4e2:	9300      	str	r3, [sp, #0]
9001d4e4:	4b3d      	ldr	r3, [pc, #244]	@ (9001d5dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001d4e6:	781b      	ldrb	r3, [r3, #0]
9001d4e8:	2b00      	cmp	r3, #0
9001d4ea:	d137      	bne.n	9001d55c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001d4ec:	4a3c      	ldr	r2, [pc, #240]	@ (9001d5e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d4ee:	f9b2 2000 	ldrsh.w	r2, [r2]
9001d4f2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001d4f6:	2b00      	cmp	r3, #0
9001d4f8:	d132      	bne.n	9001d560 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001d4fa:	4b3a      	ldr	r3, [pc, #232]	@ (9001d5e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d4fc:	f9b3 3000 	ldrsh.w	r3, [r3]
9001d500:	ac02      	add	r4, sp, #8
9001d502:	6808      	ldr	r0, [r1, #0]
9001d504:	f8ad 3006 	strh.w	r3, [sp, #6]
9001d508:	ab02      	add	r3, sp, #8
9001d50a:	6849      	ldr	r1, [r1, #4]
9001d50c:	4d36      	ldr	r5, [pc, #216]	@ (9001d5e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001d50e:	c303      	stmia	r3!, {r0, r1}
9001d510:	4669      	mov	r1, sp
9001d512:	4620      	mov	r0, r4
9001d514:	f7f9 fd2a 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d518:	4668      	mov	r0, sp
9001d51a:	f7f9 fcff 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d51e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001d522:	f8bd 2000 	ldrh.w	r2, [sp]
9001d526:	462f      	mov	r7, r5
9001d528:	6828      	ldr	r0, [r5, #0]
9001d52a:	4413      	add	r3, r2
9001d52c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001d530:	f8ad 3008 	strh.w	r3, [sp, #8]
9001d534:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001d538:	4413      	add	r3, r2
9001d53a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001d53e:	6803      	ldr	r3, [r0, #0]
9001d540:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001d542:	4798      	blx	r3
9001d544:	f010 0f01 	tst.w	r0, #1
9001d548:	d00c      	beq.n	9001d564 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001d54a:	6828      	ldr	r0, [r5, #0]
9001d54c:	6803      	ldr	r3, [r0, #0]
9001d54e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001d552:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001d554:	4798      	blx	r3
9001d556:	b004      	add	sp, #16
9001d558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d55c:	4a21      	ldr	r2, [pc, #132]	@ (9001d5e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d55e:	e7c6      	b.n	9001d4ee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001d560:	4b1f      	ldr	r3, [pc, #124]	@ (9001d5e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d562:	e7cb      	b.n	9001d4fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001d564:	6838      	ldr	r0, [r7, #0]
9001d566:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001d56a:	6803      	ldr	r3, [r0, #0]
9001d56c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001d570:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001d574:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d576:	4798      	blx	r3
9001d578:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001d57c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d580:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001d584:	fb16 3602 	smlabb	r6, r6, r2, r3
9001d588:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d58c:	6838      	ldr	r0, [r7, #0]
9001d58e:	6803      	ldr	r3, [r0, #0]
9001d590:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d592:	4798      	blx	r3
9001d594:	4a12      	ldr	r2, [pc, #72]	@ (9001d5e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d596:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001d59a:	8813      	ldrh	r3, [r2, #0]
9001d59c:	4691      	mov	r9, r2
9001d59e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001d5a2:	435d      	muls	r5, r3
9001d5a4:	fb03 1404 	mla	r4, r3, r4, r1
9001d5a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d5ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d5b0:	6838      	ldr	r0, [r7, #0]
9001d5b2:	42ac      	cmp	r4, r5
9001d5b4:	6803      	ldr	r3, [r0, #0]
9001d5b6:	d20e      	bcs.n	9001d5d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001d5b8:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001d5bc:	4632      	mov	r2, r6
9001d5be:	4643      	mov	r3, r8
9001d5c0:	4621      	mov	r1, r4
9001d5c2:	47d0      	blx	sl
9001d5c4:	f8b9 3000 	ldrh.w	r3, [r9]
9001d5c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d5cc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001d5d0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d5d4:	e7ec      	b.n	9001d5b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001d5d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d5d8:	4798      	blx	r3
9001d5da:	e7bc      	b.n	9001d556 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001d5dc:	240234b4 	.word	0x240234b4
9001d5e0:	240234b6 	.word	0x240234b6
9001d5e4:	240234b8 	.word	0x240234b8
9001d5e8:	240234bc 	.word	0x240234bc

9001d5ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001d5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5f0:	b08b      	sub	sp, #44	@ 0x2c
9001d5f2:	460f      	mov	r7, r1
9001d5f4:	4616      	mov	r6, r2
9001d5f6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001d5fa:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001d5fe:	f1bb 0f00 	cmp.w	fp, #0
9001d602:	d04a      	beq.n	9001d69a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d604:	6810      	ldr	r0, [r2, #0]
9001d606:	ad06      	add	r5, sp, #24
9001d608:	6851      	ldr	r1, [r2, #4]
9001d60a:	c503      	stmia	r5!, {r0, r1}
9001d60c:	6818      	ldr	r0, [r3, #0]
9001d60e:	ad08      	add	r5, sp, #32
9001d610:	6859      	ldr	r1, [r3, #4]
9001d612:	c503      	stmia	r5!, {r0, r1}
9001d614:	a806      	add	r0, sp, #24
9001d616:	f7f9 fc81 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d61a:	4631      	mov	r1, r6
9001d61c:	a808      	add	r0, sp, #32
9001d61e:	f7f9 fca5 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d622:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001d626:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001d62a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001d62e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001d632:	fb16 2103 	smlabb	r1, r6, r3, r2
9001d636:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001d63a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001d63e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001d642:	4f5f      	ldr	r7, [pc, #380]	@ (9001d7c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d644:	440a      	add	r2, r1
9001d646:	6838      	ldr	r0, [r7, #0]
9001d648:	46b9      	mov	r9, r7
9001d64a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001d64e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001d652:	4413      	add	r3, r2
9001d654:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001d658:	6803      	ldr	r3, [r0, #0]
9001d65a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001d65c:	4798      	blx	r3
9001d65e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d662:	d11d      	bne.n	9001d6a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001d664:	b9fc      	cbnz	r4, 9001d6a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d666:	f010 0f01 	tst.w	r0, #1
9001d66a:	d01c      	beq.n	9001d6a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d66c:	f8d9 0000 	ldr.w	r0, [r9]
9001d670:	2700      	movs	r7, #0
9001d672:	b2ad      	uxth	r5, r5
9001d674:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001d678:	6801      	ldr	r1, [r0, #0]
9001d67a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001d67e:	f8cd b00c 	str.w	fp, [sp, #12]
9001d682:	9501      	str	r5, [sp, #4]
9001d684:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001d688:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001d68c:	9402      	str	r4, [sp, #8]
9001d68e:	fa1f f488 	uxth.w	r4, r8
9001d692:	9400      	str	r4, [sp, #0]
9001d694:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001d696:	4631      	mov	r1, r6
9001d698:	47a0      	blx	r4
9001d69a:	b00b      	add	sp, #44	@ 0x2c
9001d69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d6a0:	f010 0f04 	tst.w	r0, #4
9001d6a4:	e7e1      	b.n	9001d66a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001d6a6:	f8d9 0000 	ldr.w	r0, [r9]
9001d6aa:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001d6ae:	6803      	ldr	r3, [r0, #0]
9001d6b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d6b2:	4798      	blx	r3
9001d6b4:	4b43      	ldr	r3, [pc, #268]	@ (9001d7c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001d6b6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001d6ba:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d6be:	881a      	ldrh	r2, [r3, #0]
9001d6c0:	469a      	mov	sl, r3
9001d6c2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001d6c6:	fb05 f502 	mul.w	r5, r5, r2
9001d6ca:	fb02 1404 	mla	r4, r2, r4, r1
9001d6ce:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d6d2:	d059      	beq.n	9001d788 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001d6d4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001d6d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d6dc:	fa1f f28b 	uxth.w	r2, fp
9001d6e0:	469e      	mov	lr, r3
9001d6e2:	fa1f f989 	uxth.w	r9, r9
9001d6e6:	42ac      	cmp	r4, r5
9001d6e8:	d264      	bcs.n	9001d7b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d6ea:	eb04 0a07 	add.w	sl, r4, r7
9001d6ee:	4554      	cmp	r4, sl
9001d6f0:	d23d      	bcs.n	9001d76e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001d6f2:	8821      	ldrh	r1, [r4, #0]
9001d6f4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001d6f8:	1208      	asrs	r0, r1, #8
9001d6fa:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001d6fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001d702:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001d706:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d70a:	00c9      	lsls	r1, r1, #3
9001d70c:	fb10 f009 	smulbb	r0, r0, r9
9001d710:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d714:	b2c9      	uxtb	r1, r1
9001d716:	fb0c 0c02 	mla	ip, ip, r2, r0
9001d71a:	10d8      	asrs	r0, r3, #3
9001d71c:	fb1b fb09 	smulbb	fp, fp, r9
9001d720:	00db      	lsls	r3, r3, #3
9001d722:	fa1f fc8c 	uxth.w	ip, ip
9001d726:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001d72a:	fb11 f109 	smulbb	r1, r1, r9
9001d72e:	b2db      	uxtb	r3, r3
9001d730:	fb00 b002 	mla	r0, r0, r2, fp
9001d734:	f10c 0b01 	add.w	fp, ip, #1
9001d738:	fb03 1302 	mla	r3, r3, r2, r1
9001d73c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001d740:	b29b      	uxth	r3, r3
9001d742:	b280      	uxth	r0, r0
9001d744:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001d748:	f103 0c01 	add.w	ip, r3, #1
9001d74c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d750:	1c43      	adds	r3, r0, #1
9001d752:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001d756:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d75a:	0940      	lsrs	r0, r0, #5
9001d75c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001d760:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001d764:	ea4c 0c00 	orr.w	ip, ip, r0
9001d768:	f824 cb02 	strh.w	ip, [r4], #2
9001d76c:	e7bf      	b.n	9001d6ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001d76e:	f8be 3000 	ldrh.w	r3, [lr]
9001d772:	eba3 0308 	sub.w	r3, r3, r8
9001d776:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d77a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d77e:	eba3 0308 	sub.w	r3, r3, r8
9001d782:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d786:	e7ae      	b.n	9001d6e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001d788:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d78c:	f8d9 0000 	ldr.w	r0, [r9]
9001d790:	42ac      	cmp	r4, r5
9001d792:	6803      	ldr	r3, [r0, #0]
9001d794:	d20e      	bcs.n	9001d7b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d796:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001d79a:	4632      	mov	r2, r6
9001d79c:	463b      	mov	r3, r7
9001d79e:	4621      	mov	r1, r4
9001d7a0:	47c0      	blx	r8
9001d7a2:	f8ba 3000 	ldrh.w	r3, [sl]
9001d7a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d7aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d7ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d7b2:	e7eb      	b.n	9001d78c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001d7b4:	4b02      	ldr	r3, [pc, #8]	@ (9001d7c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d7b6:	6818      	ldr	r0, [r3, #0]
9001d7b8:	6803      	ldr	r3, [r0, #0]
9001d7ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d7bc:	4798      	blx	r3
9001d7be:	e76c      	b.n	9001d69a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d7c0:	240234bc 	.word	0x240234bc
9001d7c4:	240234b6 	.word	0x240234b6

9001d7c8 <_ZN8touchgfx8LCD16bppD0Ev>:
9001d7c8:	b510      	push	{r4, lr}
9001d7ca:	4604      	mov	r4, r0
9001d7cc:	218c      	movs	r1, #140	@ 0x8c
9001d7ce:	f00c f9e6 	bl	90029b9e <_ZdlPvj>
9001d7d2:	4620      	mov	r0, r4
9001d7d4:	bd10      	pop	{r4, pc}

9001d7d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001d7d6:	b510      	push	{r4, lr}
9001d7d8:	4604      	mov	r4, r0
9001d7da:	2104      	movs	r1, #4
9001d7dc:	f00c f9df 	bl	90029b9e <_ZdlPvj>
9001d7e0:	4620      	mov	r0, r4
9001d7e2:	bd10      	pop	{r4, pc}

9001d7e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001d7e4:	b510      	push	{r4, lr}
9001d7e6:	4604      	mov	r4, r0
9001d7e8:	2104      	movs	r1, #4
9001d7ea:	f00c f9d8 	bl	90029b9e <_ZdlPvj>
9001d7ee:	4620      	mov	r0, r4
9001d7f0:	bd10      	pop	{r4, pc}

9001d7f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001d7f2:	b510      	push	{r4, lr}
9001d7f4:	4604      	mov	r4, r0
9001d7f6:	f640 0144 	movw	r1, #2116	@ 0x844
9001d7fa:	f00c f9d0 	bl	90029b9e <_ZdlPvj>
9001d7fe:	4620      	mov	r0, r4
9001d800:	bd10      	pop	{r4, pc}

9001d802 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001d802:	b510      	push	{r4, lr}
9001d804:	4604      	mov	r4, r0
9001d806:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001d80a:	f00c f9c8 	bl	90029b9e <_ZdlPvj>
9001d80e:	4620      	mov	r0, r4
9001d810:	bd10      	pop	{r4, pc}

9001d812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d812:	b510      	push	{r4, lr}
9001d814:	4604      	mov	r4, r0
9001d816:	2104      	movs	r1, #4
9001d818:	f00c f9c1 	bl	90029b9e <_ZdlPvj>
9001d81c:	4620      	mov	r0, r4
9001d81e:	bd10      	pop	{r4, pc}

9001d820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d820:	b510      	push	{r4, lr}
9001d822:	4604      	mov	r4, r0
9001d824:	2104      	movs	r1, #4
9001d826:	f00c f9ba 	bl	90029b9e <_ZdlPvj>
9001d82a:	4620      	mov	r0, r4
9001d82c:	bd10      	pop	{r4, pc}

9001d82e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d82e:	b510      	push	{r4, lr}
9001d830:	4604      	mov	r4, r0
9001d832:	2104      	movs	r1, #4
9001d834:	f00c f9b3 	bl	90029b9e <_ZdlPvj>
9001d838:	4620      	mov	r0, r4
9001d83a:	bd10      	pop	{r4, pc}

9001d83c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d83c:	b510      	push	{r4, lr}
9001d83e:	4604      	mov	r4, r0
9001d840:	2104      	movs	r1, #4
9001d842:	f00c f9ac 	bl	90029b9e <_ZdlPvj>
9001d846:	4620      	mov	r0, r4
9001d848:	bd10      	pop	{r4, pc}

9001d84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d84a:	b510      	push	{r4, lr}
9001d84c:	4604      	mov	r4, r0
9001d84e:	2104      	movs	r1, #4
9001d850:	f00c f9a5 	bl	90029b9e <_ZdlPvj>
9001d854:	4620      	mov	r0, r4
9001d856:	bd10      	pop	{r4, pc}

9001d858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001d858:	b510      	push	{r4, lr}
9001d85a:	4604      	mov	r4, r0
9001d85c:	2104      	movs	r1, #4
9001d85e:	f00c f99e 	bl	90029b9e <_ZdlPvj>
9001d862:	4620      	mov	r0, r4
9001d864:	bd10      	pop	{r4, pc}

9001d866 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d866:	b510      	push	{r4, lr}
9001d868:	4604      	mov	r4, r0
9001d86a:	2104      	movs	r1, #4
9001d86c:	f00c f997 	bl	90029b9e <_ZdlPvj>
9001d870:	4620      	mov	r0, r4
9001d872:	bd10      	pop	{r4, pc}

9001d874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001d874:	b510      	push	{r4, lr}
9001d876:	4604      	mov	r4, r0
9001d878:	2104      	movs	r1, #4
9001d87a:	f00c f990 	bl	90029b9e <_ZdlPvj>
9001d87e:	4620      	mov	r0, r4
9001d880:	bd10      	pop	{r4, pc}

9001d882 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d882:	b510      	push	{r4, lr}
9001d884:	4604      	mov	r4, r0
9001d886:	2104      	movs	r1, #4
9001d888:	f00c f989 	bl	90029b9e <_ZdlPvj>
9001d88c:	4620      	mov	r0, r4
9001d88e:	bd10      	pop	{r4, pc}

9001d890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d890:	b510      	push	{r4, lr}
9001d892:	4604      	mov	r4, r0
9001d894:	2104      	movs	r1, #4
9001d896:	f00c f982 	bl	90029b9e <_ZdlPvj>
9001d89a:	4620      	mov	r0, r4
9001d89c:	bd10      	pop	{r4, pc}

9001d89e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d89e:	b510      	push	{r4, lr}
9001d8a0:	4604      	mov	r4, r0
9001d8a2:	2104      	movs	r1, #4
9001d8a4:	f00c f97b 	bl	90029b9e <_ZdlPvj>
9001d8a8:	4620      	mov	r0, r4
9001d8aa:	bd10      	pop	{r4, pc}

9001d8ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d8ac:	b510      	push	{r4, lr}
9001d8ae:	4604      	mov	r4, r0
9001d8b0:	2104      	movs	r1, #4
9001d8b2:	f00c f974 	bl	90029b9e <_ZdlPvj>
9001d8b6:	4620      	mov	r0, r4
9001d8b8:	bd10      	pop	{r4, pc}

9001d8ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d8ba:	b510      	push	{r4, lr}
9001d8bc:	4604      	mov	r4, r0
9001d8be:	2104      	movs	r1, #4
9001d8c0:	f00c f96d 	bl	90029b9e <_ZdlPvj>
9001d8c4:	4620      	mov	r0, r4
9001d8c6:	bd10      	pop	{r4, pc}

9001d8c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d8c8:	b510      	push	{r4, lr}
9001d8ca:	4604      	mov	r4, r0
9001d8cc:	2104      	movs	r1, #4
9001d8ce:	f00c f966 	bl	90029b9e <_ZdlPvj>
9001d8d2:	4620      	mov	r0, r4
9001d8d4:	bd10      	pop	{r4, pc}

9001d8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d8d6:	b510      	push	{r4, lr}
9001d8d8:	4604      	mov	r4, r0
9001d8da:	2104      	movs	r1, #4
9001d8dc:	f00c f95f 	bl	90029b9e <_ZdlPvj>
9001d8e0:	4620      	mov	r0, r4
9001d8e2:	bd10      	pop	{r4, pc}

9001d8e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d8e4:	b510      	push	{r4, lr}
9001d8e6:	4604      	mov	r4, r0
9001d8e8:	2104      	movs	r1, #4
9001d8ea:	f00c f958 	bl	90029b9e <_ZdlPvj>
9001d8ee:	4620      	mov	r0, r4
9001d8f0:	bd10      	pop	{r4, pc}

9001d8f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d8f2:	b510      	push	{r4, lr}
9001d8f4:	4604      	mov	r4, r0
9001d8f6:	2104      	movs	r1, #4
9001d8f8:	f00c f951 	bl	90029b9e <_ZdlPvj>
9001d8fc:	4620      	mov	r0, r4
9001d8fe:	bd10      	pop	{r4, pc}

9001d900 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d900:	b510      	push	{r4, lr}
9001d902:	4604      	mov	r4, r0
9001d904:	2104      	movs	r1, #4
9001d906:	f00c f94a 	bl	90029b9e <_ZdlPvj>
9001d90a:	4620      	mov	r0, r4
9001d90c:	bd10      	pop	{r4, pc}

9001d90e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d90e:	b510      	push	{r4, lr}
9001d910:	4604      	mov	r4, r0
9001d912:	2104      	movs	r1, #4
9001d914:	f00c f943 	bl	90029b9e <_ZdlPvj>
9001d918:	4620      	mov	r0, r4
9001d91a:	bd10      	pop	{r4, pc}

9001d91c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d91c:	b510      	push	{r4, lr}
9001d91e:	4604      	mov	r4, r0
9001d920:	2104      	movs	r1, #4
9001d922:	f00c f93c 	bl	90029b9e <_ZdlPvj>
9001d926:	4620      	mov	r0, r4
9001d928:	bd10      	pop	{r4, pc}

9001d92a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d92a:	b510      	push	{r4, lr}
9001d92c:	4604      	mov	r4, r0
9001d92e:	2104      	movs	r1, #4
9001d930:	f00c f935 	bl	90029b9e <_ZdlPvj>
9001d934:	4620      	mov	r0, r4
9001d936:	bd10      	pop	{r4, pc}

9001d938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d938:	b510      	push	{r4, lr}
9001d93a:	4604      	mov	r4, r0
9001d93c:	2104      	movs	r1, #4
9001d93e:	f00c f92e 	bl	90029b9e <_ZdlPvj>
9001d942:	4620      	mov	r0, r4
9001d944:	bd10      	pop	{r4, pc}

9001d946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d946:	b510      	push	{r4, lr}
9001d948:	4604      	mov	r4, r0
9001d94a:	2104      	movs	r1, #4
9001d94c:	f00c f927 	bl	90029b9e <_ZdlPvj>
9001d950:	4620      	mov	r0, r4
9001d952:	bd10      	pop	{r4, pc}

9001d954 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d954:	b510      	push	{r4, lr}
9001d956:	4604      	mov	r4, r0
9001d958:	2104      	movs	r1, #4
9001d95a:	f00c f920 	bl	90029b9e <_ZdlPvj>
9001d95e:	4620      	mov	r0, r4
9001d960:	bd10      	pop	{r4, pc}

9001d962 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001d962:	b510      	push	{r4, lr}
9001d964:	4604      	mov	r4, r0
9001d966:	2104      	movs	r1, #4
9001d968:	f00c f919 	bl	90029b9e <_ZdlPvj>
9001d96c:	4620      	mov	r0, r4
9001d96e:	bd10      	pop	{r4, pc}

9001d970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001d970:	b510      	push	{r4, lr}
9001d972:	4604      	mov	r4, r0
9001d974:	2104      	movs	r1, #4
9001d976:	f00c f912 	bl	90029b9e <_ZdlPvj>
9001d97a:	4620      	mov	r0, r4
9001d97c:	bd10      	pop	{r4, pc}

9001d97e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001d97e:	b510      	push	{r4, lr}
9001d980:	4604      	mov	r4, r0
9001d982:	2104      	movs	r1, #4
9001d984:	f00c f90b 	bl	90029b9e <_ZdlPvj>
9001d988:	4620      	mov	r0, r4
9001d98a:	bd10      	pop	{r4, pc}

9001d98c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001d98c:	b510      	push	{r4, lr}
9001d98e:	4604      	mov	r4, r0
9001d990:	2104      	movs	r1, #4
9001d992:	f00c f904 	bl	90029b9e <_ZdlPvj>
9001d996:	4620      	mov	r0, r4
9001d998:	bd10      	pop	{r4, pc}
	...

9001d99c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001d99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d9a0:	b08f      	sub	sp, #60	@ 0x3c
9001d9a2:	4616      	mov	r6, r2
9001d9a4:	4682      	mov	sl, r0
9001d9a6:	460d      	mov	r5, r1
9001d9a8:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001d9ac:	9205      	str	r2, [sp, #20]
9001d9ae:	2a00      	cmp	r2, #0
9001d9b0:	f000 82b7 	beq.w	9001df22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001d9b4:	6830      	ldr	r0, [r6, #0]
9001d9b6:	ac0a      	add	r4, sp, #40	@ 0x28
9001d9b8:	6871      	ldr	r1, [r6, #4]
9001d9ba:	c403      	stmia	r4!, {r0, r1}
9001d9bc:	6818      	ldr	r0, [r3, #0]
9001d9be:	ac0c      	add	r4, sp, #48	@ 0x30
9001d9c0:	6859      	ldr	r1, [r3, #4]
9001d9c2:	c403      	stmia	r4!, {r0, r1}
9001d9c4:	a80a      	add	r0, sp, #40	@ 0x28
9001d9c6:	f7f9 faa9 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d9ca:	4631      	mov	r1, r6
9001d9cc:	a80c      	add	r0, sp, #48	@ 0x30
9001d9ce:	f7f9 facd 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d9d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001d9d6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d9da:	bfdb      	ittet	le
9001d9dc:	b293      	uxthle	r3, r2
9001d9de:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d9e2:	2301      	movgt	r3, #1
9001d9e4:	fb91 f3f3 	sdivle	r3, r1, r3
9001d9e8:	9300      	str	r3, [sp, #0]
9001d9ea:	f105 0308 	add.w	r3, r5, #8
9001d9ee:	9900      	ldr	r1, [sp, #0]
9001d9f0:	9306      	str	r3, [sp, #24]
9001d9f2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001d9f6:	440b      	add	r3, r1
9001d9f8:	3b01      	subs	r3, #1
9001d9fa:	fb93 f3f1 	sdiv	r3, r3, r1
9001d9fe:	3b01      	subs	r3, #1
9001da00:	9906      	ldr	r1, [sp, #24]
9001da02:	b29b      	uxth	r3, r3
9001da04:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001da08:	9900      	ldr	r1, [sp, #0]
9001da0a:	9307      	str	r3, [sp, #28]
9001da0c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001da10:	fb93 f0f1 	sdiv	r0, r3, r1
9001da14:	b284      	uxth	r4, r0
9001da16:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001da1a:	9402      	str	r4, [sp, #8]
9001da1c:	9d02      	ldr	r5, [sp, #8]
9001da1e:	9c00      	ldr	r4, [sp, #0]
9001da20:	fb05 3414 	mls	r4, r5, r4, r3
9001da24:	fb14 f402 	smulbb	r4, r4, r2
9001da28:	440c      	add	r4, r1
9001da2a:	b2a4      	uxth	r4, r4
9001da2c:	2d00      	cmp	r5, #0
9001da2e:	d06c      	beq.n	9001db0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001da30:	1e6a      	subs	r2, r5, #1
9001da32:	9806      	ldr	r0, [sp, #24]
9001da34:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001da38:	9a07      	ldr	r2, [sp, #28]
9001da3a:	ba36      	rev	r6, r6
9001da3c:	4416      	add	r6, r2
9001da3e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001da42:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001da46:	4411      	add	r1, r2
9001da48:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001da4c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001dd7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001da50:	4413      	add	r3, r2
9001da52:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001da56:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001da5a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001da5e:	9301      	str	r3, [sp, #4]
9001da60:	4bc4      	ldr	r3, [pc, #784]	@ (9001dd74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001da62:	6818      	ldr	r0, [r3, #0]
9001da64:	6803      	ldr	r3, [r0, #0]
9001da66:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001da68:	4798      	blx	r3
9001da6a:	4bc3      	ldr	r3, [pc, #780]	@ (9001dd78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001da6c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001da70:	881b      	ldrh	r3, [r3, #0]
9001da72:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001da76:	fb03 2808 	mla	r8, r3, r8, r2
9001da7a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001da7e:	436b      	muls	r3, r5
9001da80:	2500      	movs	r5, #0
9001da82:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001da86:	4629      	mov	r1, r5
9001da88:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001da8c:	9309      	str	r3, [sp, #36]	@ 0x24
9001da8e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001da92:	fb94 f3f3 	sdiv	r3, r4, r3
9001da96:	9304      	str	r3, [sp, #16]
9001da98:	f10a 0304 	add.w	r3, sl, #4
9001da9c:	4618      	mov	r0, r3
9001da9e:	9308      	str	r3, [sp, #32]
9001daa0:	f00c fe92 	bl	9002a7c8 <memset>
9001daa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001daa6:	4543      	cmp	r3, r8
9001daa8:	f240 8236 	bls.w	9001df18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001daac:	2203      	movs	r2, #3
9001daae:	2107      	movs	r1, #7
9001dab0:	200b      	movs	r0, #11
9001dab2:	2c00      	cmp	r4, #0
9001dab4:	f000 8131 	beq.w	9001dd1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001dab8:	7833      	ldrb	r3, [r6, #0]
9001daba:	b2db      	uxtb	r3, r3
9001dabc:	2bfe      	cmp	r3, #254	@ 0xfe
9001dabe:	d126      	bne.n	9001db0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001dac0:	f896 e001 	ldrb.w	lr, [r6, #1]
9001dac4:	3c01      	subs	r4, #1
9001dac6:	f896 c002 	ldrb.w	ip, [r6, #2]
9001daca:	1d37      	adds	r7, r6, #4
9001dacc:	fa5f fe8e 	uxtb.w	lr, lr
9001dad0:	f896 b003 	ldrb.w	fp, [r6, #3]
9001dad4:	fa5f fc8c 	uxtb.w	ip, ip
9001dad8:	f36e 0507 	bfi	r5, lr, #0, #8
9001dadc:	fa5f fb8b 	uxtb.w	fp, fp
9001dae0:	b2a4      	uxth	r4, r4
9001dae2:	f36c 250f 	bfi	r5, ip, #8, #8
9001dae6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001daea:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001daee:	f36b 4517 	bfi	r5, fp, #16, #8
9001daf2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001daf6:	0e2b      	lsrs	r3, r5, #24
9001daf8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001dafc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001db00:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001db04:	605d      	str	r5, [r3, #4]
9001db06:	463e      	mov	r6, r7
9001db08:	e7d3      	b.n	9001dab2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001db0a:	9e07      	ldr	r6, [sp, #28]
9001db0c:	e797      	b.n	9001da3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001db0e:	2bff      	cmp	r3, #255	@ 0xff
9001db10:	d127      	bne.n	9001db62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001db12:	f896 c001 	ldrb.w	ip, [r6, #1]
9001db16:	3c01      	subs	r4, #1
9001db18:	78b3      	ldrb	r3, [r6, #2]
9001db1a:	1d77      	adds	r7, r6, #5
9001db1c:	fa5f fc8c 	uxtb.w	ip, ip
9001db20:	f896 e003 	ldrb.w	lr, [r6, #3]
9001db24:	b2db      	uxtb	r3, r3
9001db26:	f896 b004 	ldrb.w	fp, [r6, #4]
9001db2a:	f36c 0507 	bfi	r5, ip, #0, #8
9001db2e:	fa5f fe8e 	uxtb.w	lr, lr
9001db32:	fa5f fb8b 	uxtb.w	fp, fp
9001db36:	f363 250f 	bfi	r5, r3, #8, #8
9001db3a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001db3e:	b2a4      	uxth	r4, r4
9001db40:	fb12 330e 	smlabb	r3, r2, lr, r3
9001db44:	f36e 4517 	bfi	r5, lr, #16, #8
9001db48:	fb11 330c 	smlabb	r3, r1, ip, r3
9001db4c:	f36b 651f 	bfi	r5, fp, #24, #8
9001db50:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001db54:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001db58:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001db5c:	f8cb 5004 	str.w	r5, [fp, #4]
9001db60:	e7d1      	b.n	9001db06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001db62:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001db66:	f106 0701 	add.w	r7, r6, #1
9001db6a:	d107      	bne.n	9001db7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001db6c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001db70:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001db74:	685d      	ldr	r5, [r3, #4]
9001db76:	3c01      	subs	r4, #1
9001db78:	b2a4      	uxth	r4, r4
9001db7a:	e7c4      	b.n	9001db06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001db7c:	f1bc 0f01 	cmp.w	ip, #1
9001db80:	d12c      	bne.n	9001dbdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001db82:	f003 0e03 	and.w	lr, r3, #3
9001db86:	f003 0c0c 	and.w	ip, r3, #12
9001db8a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001db8e:	f1ae 0e02 	sub.w	lr, lr, #2
9001db92:	f1ac 0c08 	sub.w	ip, ip, #8
9001db96:	3b02      	subs	r3, #2
9001db98:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001db9c:	fa5f fe8e 	uxtb.w	lr, lr
9001dba0:	f36e 0507 	bfi	r5, lr, #0, #8
9001dba4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001dba8:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001dbac:	f36c 250f 	bfi	r5, ip, #8, #8
9001dbb0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001dbb4:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dbb8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001dbbc:	b2db      	uxtb	r3, r3
9001dbbe:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001dbc2:	f363 4517 	bfi	r5, r3, #16, #8
9001dbc6:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001dbca:	0e2e      	lsrs	r6, r5, #24
9001dbcc:	fb10 c606 	smlabb	r6, r0, r6, ip
9001dbd0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001dbd4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001dbd8:	6075      	str	r5, [r6, #4]
9001dbda:	e7cc      	b.n	9001db76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001dbdc:	f1bc 0f02 	cmp.w	ip, #2
9001dbe0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dbe4:	d12a      	bne.n	9001dc3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001dbe6:	1cb7      	adds	r7, r6, #2
9001dbe8:	7876      	ldrb	r6, [r6, #1]
9001dbea:	3b20      	subs	r3, #32
9001dbec:	b2f6      	uxtb	r6, r6
9001dbee:	f006 0c0f 	and.w	ip, r6, #15
9001dbf2:	1136      	asrs	r6, r6, #4
9001dbf4:	f1ac 0c08 	sub.w	ip, ip, #8
9001dbf8:	3e08      	subs	r6, #8
9001dbfa:	449c      	add	ip, r3
9001dbfc:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001dc00:	fa5f fc8c 	uxtb.w	ip, ip
9001dc04:	f36c 0507 	bfi	r5, ip, #0, #8
9001dc08:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001dc0c:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001dc10:	4433      	add	r3, r6
9001dc12:	fa5f fe8e 	uxtb.w	lr, lr
9001dc16:	f36e 250f 	bfi	r5, lr, #8, #8
9001dc1a:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001dc1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dc22:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001dc26:	b2db      	uxtb	r3, r3
9001dc28:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001dc2c:	f363 4517 	bfi	r5, r3, #16, #8
9001dc30:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001dc34:	0e2e      	lsrs	r6, r5, #24
9001dc36:	fb10 e606 	smlabb	r6, r0, r6, lr
9001dc3a:	e7c9      	b.n	9001dbd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001dc3c:	1c5e      	adds	r6, r3, #1
9001dc3e:	42a6      	cmp	r6, r4
9001dc40:	dd4e      	ble.n	9001dce0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001dc42:	1b36      	subs	r6, r6, r4
9001dc44:	2e00      	cmp	r6, #0
9001dc46:	dc4e      	bgt.n	9001dce6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001dc48:	f8dd b004 	ldr.w	fp, [sp, #4]
9001dc4c:	2400      	movs	r4, #0
9001dc4e:	f1bb 0f00 	cmp.w	fp, #0
9001dc52:	f340 8122 	ble.w	9001de9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001dc56:	1c7b      	adds	r3, r7, #1
9001dc58:	9303      	str	r3, [sp, #12]
9001dc5a:	783b      	ldrb	r3, [r7, #0]
9001dc5c:	b2db      	uxtb	r3, r3
9001dc5e:	2bfe      	cmp	r3, #254	@ 0xfe
9001dc60:	d160      	bne.n	9001dd24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001dc62:	7879      	ldrb	r1, [r7, #1]
9001dc64:	1d3b      	adds	r3, r7, #4
9001dc66:	78ba      	ldrb	r2, [r7, #2]
9001dc68:	b2c9      	uxtb	r1, r1
9001dc6a:	78f8      	ldrb	r0, [r7, #3]
9001dc6c:	b2d2      	uxtb	r2, r2
9001dc6e:	9303      	str	r3, [sp, #12]
9001dc70:	f361 0507 	bfi	r5, r1, #0, #8
9001dc74:	b2c0      	uxtb	r0, r0
9001dc76:	2303      	movs	r3, #3
9001dc78:	f362 250f 	bfi	r5, r2, #8, #8
9001dc7c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dc80:	fb13 2200 	smlabb	r2, r3, r0, r2
9001dc84:	f360 4517 	bfi	r5, r0, #16, #8
9001dc88:	2307      	movs	r3, #7
9001dc8a:	0e2e      	lsrs	r6, r5, #24
9001dc8c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001dc90:	230b      	movs	r3, #11
9001dc92:	fb13 1306 	smlabb	r3, r3, r6, r1
9001dc96:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dc9a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dc9e:	605d      	str	r5, [r3, #4]
9001dca0:	2601      	movs	r6, #1
9001dca2:	4637      	mov	r7, r6
9001dca4:	0e2b      	lsrs	r3, r5, #24
9001dca6:	ebab 0b07 	sub.w	fp, fp, r7
9001dcaa:	eba6 0607 	sub.w	r6, r6, r7
9001dcae:	f040 80d3 	bne.w	9001de58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001dcb2:	b18c      	cbz	r4, 9001dcd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001dcb4:	4648      	mov	r0, r9
9001dcb6:	00a1      	lsls	r1, r4, #2
9001dcb8:	f7e4 fe2a 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001dcbc:	9b05      	ldr	r3, [sp, #20]
9001dcbe:	4622      	mov	r2, r4
9001dcc0:	4649      	mov	r1, r9
9001dcc2:	4640      	mov	r0, r8
9001dcc4:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001dcc8:	f7e4 fe90 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001dccc:	4b2b      	ldr	r3, [pc, #172]	@ (9001dd7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001dcce:	4a2c      	ldr	r2, [pc, #176]	@ (9001dd80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001dcd0:	4599      	cmp	r9, r3
9001dcd2:	bf08      	it	eq
9001dcd4:	4613      	moveq	r3, r2
9001dcd6:	4699      	mov	r9, r3
9001dcd8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001dcdc:	2400      	movs	r4, #0
9001dcde:	e0da      	b.n	9001de96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001dce0:	1ba6      	subs	r6, r4, r6
9001dce2:	b2b4      	uxth	r4, r6
9001dce4:	e70f      	b.n	9001db06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001dce6:	9b01      	ldr	r3, [sp, #4]
9001dce8:	9a01      	ldr	r2, [sp, #4]
9001dcea:	42b3      	cmp	r3, r6
9001dcec:	bfa8      	it	ge
9001dcee:	4633      	movge	r3, r6
9001dcf0:	0e2c      	lsrs	r4, r5, #24
9001dcf2:	eba2 0b03 	sub.w	fp, r2, r3
9001dcf6:	eba6 0603 	sub.w	r6, r6, r3
9001dcfa:	d00b      	beq.n	9001dd14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001dcfc:	f1a9 0104 	sub.w	r1, r9, #4
9001dd00:	461a      	mov	r2, r3
9001dd02:	2a00      	cmp	r2, #0
9001dd04:	dc02      	bgt.n	9001dd0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001dd06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001dd0a:	e7a0      	b.n	9001dc4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dd0c:	f841 5f04 	str.w	r5, [r1, #4]!
9001dd10:	3a01      	subs	r2, #1
9001dd12:	e7f6      	b.n	9001dd02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001dd14:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001dd18:	e799      	b.n	9001dc4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dd1a:	4637      	mov	r7, r6
9001dd1c:	f8dd b004 	ldr.w	fp, [sp, #4]
9001dd20:	4626      	mov	r6, r4
9001dd22:	e794      	b.n	9001dc4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dd24:	2bff      	cmp	r3, #255	@ 0xff
9001dd26:	d11d      	bne.n	9001dd64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001dd28:	7878      	ldrb	r0, [r7, #1]
9001dd2a:	1d7b      	adds	r3, r7, #5
9001dd2c:	78ba      	ldrb	r2, [r7, #2]
9001dd2e:	b2c0      	uxtb	r0, r0
9001dd30:	78fe      	ldrb	r6, [r7, #3]
9001dd32:	b2d2      	uxtb	r2, r2
9001dd34:	9303      	str	r3, [sp, #12]
9001dd36:	f360 0507 	bfi	r5, r0, #0, #8
9001dd3a:	793b      	ldrb	r3, [r7, #4]
9001dd3c:	b2f6      	uxtb	r6, r6
9001dd3e:	b2d9      	uxtb	r1, r3
9001dd40:	f362 250f 	bfi	r5, r2, #8, #8
9001dd44:	2303      	movs	r3, #3
9001dd46:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dd4a:	f366 4517 	bfi	r5, r6, #16, #8
9001dd4e:	fb13 2206 	smlabb	r2, r3, r6, r2
9001dd52:	2307      	movs	r3, #7
9001dd54:	f361 651f 	bfi	r5, r1, #24, #8
9001dd58:	fb13 2000 	smlabb	r0, r3, r0, r2
9001dd5c:	230b      	movs	r3, #11
9001dd5e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001dd62:	e798      	b.n	9001dc96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001dd64:	119e      	asrs	r6, r3, #6
9001dd66:	d10d      	bne.n	9001dd84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001dd68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dd6c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dd70:	685d      	ldr	r5, [r3, #4]
9001dd72:	e795      	b.n	9001dca0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001dd74:	240234bc 	.word	0x240234bc
9001dd78:	240234b6 	.word	0x240234b6
9001dd7c:	24000180 	.word	0x24000180
9001dd80:	24000280 	.word	0x24000280
9001dd84:	2e01      	cmp	r6, #1
9001dd86:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001dd8a:	d12b      	bne.n	9001dde4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001dd8c:	f003 0003 	and.w	r0, r3, #3
9001dd90:	f003 020c 	and.w	r2, r3, #12
9001dd94:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001dd98:	3802      	subs	r0, #2
9001dd9a:	3a08      	subs	r2, #8
9001dd9c:	1e9f      	subs	r7, r3, #2
9001dd9e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001dda2:	b2c0      	uxtb	r0, r0
9001dda4:	f360 0507 	bfi	r5, r0, #0, #8
9001dda8:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001ddac:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001ddb0:	f362 250f 	bfi	r5, r2, #8, #8
9001ddb4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001ddb8:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001ddbc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001ddc0:	2703      	movs	r7, #3
9001ddc2:	b2db      	uxtb	r3, r3
9001ddc4:	fb17 2203 	smlabb	r2, r7, r3, r2
9001ddc8:	2707      	movs	r7, #7
9001ddca:	f363 4517 	bfi	r5, r3, #16, #8
9001ddce:	230b      	movs	r3, #11
9001ddd0:	fb17 2000 	smlabb	r0, r7, r0, r2
9001ddd4:	fb13 0101 	smlabb	r1, r3, r1, r0
9001ddd8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001dddc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001dde0:	604d      	str	r5, [r1, #4]
9001dde2:	e75e      	b.n	9001dca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001dde4:	2e02      	cmp	r6, #2
9001dde6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ddea:	d12f      	bne.n	9001de4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001ddec:	7878      	ldrb	r0, [r7, #1]
9001ddee:	1cba      	adds	r2, r7, #2
9001ddf0:	3b20      	subs	r3, #32
9001ddf2:	b2c0      	uxtb	r0, r0
9001ddf4:	9203      	str	r2, [sp, #12]
9001ddf6:	f000 020f 	and.w	r2, r0, #15
9001ddfa:	1100      	asrs	r0, r0, #4
9001ddfc:	3a08      	subs	r2, #8
9001ddfe:	3808      	subs	r0, #8
9001de00:	441a      	add	r2, r3
9001de02:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001de06:	b2d2      	uxtb	r2, r2
9001de08:	f362 0507 	bfi	r5, r2, #0, #8
9001de0c:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001de10:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001de14:	4403      	add	r3, r0
9001de16:	b2f6      	uxtb	r6, r6
9001de18:	f366 250f 	bfi	r5, r6, #8, #8
9001de1c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001de20:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001de24:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001de28:	2003      	movs	r0, #3
9001de2a:	b2db      	uxtb	r3, r3
9001de2c:	fb10 6603 	smlabb	r6, r0, r3, r6
9001de30:	2007      	movs	r0, #7
9001de32:	f363 4517 	bfi	r5, r3, #16, #8
9001de36:	230b      	movs	r3, #11
9001de38:	fb10 6202 	smlabb	r2, r0, r2, r6
9001de3c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001de40:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001de44:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001de48:	604d      	str	r5, [r1, #4]
9001de4a:	e729      	b.n	9001dca0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001de4c:	1c5e      	adds	r6, r3, #1
9001de4e:	465f      	mov	r7, fp
9001de50:	45b3      	cmp	fp, r6
9001de52:	bfa8      	it	ge
9001de54:	4637      	movge	r7, r6
9001de56:	e725      	b.n	9001dca4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001de58:	193b      	adds	r3, r7, r4
9001de5a:	2b40      	cmp	r3, #64	@ 0x40
9001de5c:	dd13      	ble.n	9001de86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001de5e:	4648      	mov	r0, r9
9001de60:	00a1      	lsls	r1, r4, #2
9001de62:	f7e4 fd55 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001de66:	4649      	mov	r1, r9
9001de68:	9b05      	ldr	r3, [sp, #20]
9001de6a:	4622      	mov	r2, r4
9001de6c:	4640      	mov	r0, r8
9001de6e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001de72:	f7e4 fdbb 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001de76:	4b2c      	ldr	r3, [pc, #176]	@ (9001df28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001de78:	2400      	movs	r4, #0
9001de7a:	4599      	cmp	r9, r3
9001de7c:	bf0c      	ite	eq
9001de7e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001df34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001de82:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001df28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001de86:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001de8a:	463b      	mov	r3, r7
9001de8c:	3b01      	subs	r3, #1
9001de8e:	f842 5b04 	str.w	r5, [r2], #4
9001de92:	d1fb      	bne.n	9001de8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001de94:	443c      	add	r4, r7
9001de96:	9f03      	ldr	r7, [sp, #12]
9001de98:	e6d9      	b.n	9001dc4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001de9a:	b15c      	cbz	r4, 9001deb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001de9c:	00a1      	lsls	r1, r4, #2
9001de9e:	4648      	mov	r0, r9
9001dea0:	f7e4 fd36 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001dea4:	4640      	mov	r0, r8
9001dea6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001deaa:	9b05      	ldr	r3, [sp, #20]
9001deac:	4622      	mov	r2, r4
9001deae:	4649      	mov	r1, r9
9001deb0:	f7e4 fd9c 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001deb4:	4b1d      	ldr	r3, [pc, #116]	@ (9001df2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001deb6:	9a01      	ldr	r2, [sp, #4]
9001deb8:	881b      	ldrh	r3, [r3, #0]
9001deba:	1a9b      	subs	r3, r3, r2
9001debc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001dec0:	9b04      	ldr	r3, [sp, #16]
9001dec2:	3301      	adds	r3, #1
9001dec4:	9304      	str	r3, [sp, #16]
9001dec6:	9a04      	ldr	r2, [sp, #16]
9001dec8:	9b00      	ldr	r3, [sp, #0]
9001deca:	4293      	cmp	r3, r2
9001decc:	d11d      	bne.n	9001df0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001dece:	9b02      	ldr	r3, [sp, #8]
9001ded0:	2500      	movs	r5, #0
9001ded2:	9a02      	ldr	r2, [sp, #8]
9001ded4:	f103 0b01 	add.w	fp, r3, #1
9001ded8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001dedc:	9b06      	ldr	r3, [sp, #24]
9001dede:	4629      	mov	r1, r5
9001dee0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001dee4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001dee8:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001deec:	1ba4      	subs	r4, r4, r6
9001deee:	9b07      	ldr	r3, [sp, #28]
9001def0:	ba3f      	rev	r7, r7
9001def2:	9808      	ldr	r0, [sp, #32]
9001def4:	b2a4      	uxth	r4, r4
9001def6:	441f      	add	r7, r3
9001def8:	f00c fc66 	bl	9002a7c8 <memset>
9001defc:	f8cd b008 	str.w	fp, [sp, #8]
9001df00:	9504      	str	r5, [sp, #16]
9001df02:	f7e4 fcfb 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001df06:	463e      	mov	r6, r7
9001df08:	e5cc      	b.n	9001daa4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001df0a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001df0e:	9b01      	ldr	r3, [sp, #4]
9001df10:	1ae4      	subs	r4, r4, r3
9001df12:	1ba4      	subs	r4, r4, r6
9001df14:	b2a4      	uxth	r4, r4
9001df16:	e7f4      	b.n	9001df02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001df18:	4b05      	ldr	r3, [pc, #20]	@ (9001df30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001df1a:	6818      	ldr	r0, [r3, #0]
9001df1c:	6803      	ldr	r3, [r0, #0]
9001df1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001df20:	4798      	blx	r3
9001df22:	b00f      	add	sp, #60	@ 0x3c
9001df24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df28:	24000180 	.word	0x24000180
9001df2c:	240234b6 	.word	0x240234b6
9001df30:	240234bc 	.word	0x240234bc
9001df34:	24000280 	.word	0x24000280

9001df38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001df38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df3c:	b08f      	sub	sp, #60	@ 0x3c
9001df3e:	461c      	mov	r4, r3
9001df40:	9205      	str	r2, [sp, #20]
9001df42:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001df46:	9100      	str	r1, [sp, #0]
9001df48:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001df4a:	9201      	str	r2, [sp, #4]
9001df4c:	2a00      	cmp	r2, #0
9001df4e:	f000 8116 	beq.w	9001e17e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001df52:	6820      	ldr	r0, [r4, #0]
9001df54:	aa0a      	add	r2, sp, #40	@ 0x28
9001df56:	6861      	ldr	r1, [r4, #4]
9001df58:	c203      	stmia	r2!, {r0, r1}
9001df5a:	6818      	ldr	r0, [r3, #0]
9001df5c:	aa0c      	add	r2, sp, #48	@ 0x30
9001df5e:	6859      	ldr	r1, [r3, #4]
9001df60:	c203      	stmia	r2!, {r0, r1}
9001df62:	a80a      	add	r0, sp, #40	@ 0x28
9001df64:	f7f8 ffda 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001df68:	4621      	mov	r1, r4
9001df6a:	a80c      	add	r0, sp, #48	@ 0x30
9001df6c:	f7f8 fffe 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001df70:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001df74:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001df78:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001df7c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001df80:	bfdb      	ittet	le
9001df82:	b2b3      	uxthle	r3, r6
9001df84:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001df88:	2301      	movgt	r3, #1
9001df8a:	fb92 f3f3 	sdivle	r3, r2, r3
9001df8e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001df92:	441d      	add	r5, r3
9001df94:	fb92 f1f3 	sdiv	r1, r2, r3
9001df98:	fa1f fc81 	uxth.w	ip, r1
9001df9c:	3d01      	subs	r5, #1
9001df9e:	fb0c 2413 	mls	r4, ip, r3, r2
9001dfa2:	4661      	mov	r1, ip
9001dfa4:	fb14 f406 	smulbb	r4, r4, r6
9001dfa8:	4404      	add	r4, r0
9001dfaa:	fb95 f5f3 	sdiv	r5, r5, r3
9001dfae:	b2a4      	uxth	r4, r4
9001dfb0:	b131      	cbz	r1, 9001dfc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001dfb2:	9b05      	ldr	r3, [sp, #20]
9001dfb4:	9900      	ldr	r1, [sp, #0]
9001dfb6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001dfba:	ba1b      	rev	r3, r3
9001dfbc:	4419      	add	r1, r3
9001dfbe:	9100      	str	r1, [sp, #0]
9001dfc0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001dfc4:	b2ad      	uxth	r5, r5
9001dfc6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001dfca:	4418      	add	r0, r3
9001dfcc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001dfd0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001dfd4:	00ad      	lsls	r5, r5, #2
9001dfd6:	441a      	add	r2, r3
9001dfd8:	4b6a      	ldr	r3, [pc, #424]	@ (9001e184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001dfda:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001dfde:	6818      	ldr	r0, [r3, #0]
9001dfe0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001dfe4:	6803      	ldr	r3, [r0, #0]
9001dfe6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001dfe8:	4798      	blx	r3
9001dfea:	4967      	ldr	r1, [pc, #412]	@ (9001e188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001dfec:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001dff0:	2c00      	cmp	r4, #0
9001dff2:	880b      	ldrh	r3, [r1, #0]
9001dff4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001dff8:	bf0c      	ite	eq
9001dffa:	46c6      	moveq	lr, r8
9001dffc:	f04f 0e00 	movne.w	lr, #0
9001e000:	9109      	str	r1, [sp, #36]	@ 0x24
9001e002:	fb03 c202 	mla	r2, r3, r2, ip
9001e006:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e00a:	4373      	muls	r3, r6
9001e00c:	fa1f fe8e 	uxth.w	lr, lr
9001e010:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e014:	9103      	str	r1, [sp, #12]
9001e016:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e01a:	9306      	str	r3, [sp, #24]
9001e01c:	1d2b      	adds	r3, r5, #4
9001e01e:	9307      	str	r3, [sp, #28]
9001e020:	9b01      	ldr	r3, [sp, #4]
9001e022:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001e026:	2300      	movs	r3, #0
9001e028:	b292      	uxth	r2, r2
9001e02a:	9302      	str	r3, [sp, #8]
9001e02c:	9204      	str	r2, [sp, #16]
9001e02e:	9a06      	ldr	r2, [sp, #24]
9001e030:	4282      	cmp	r2, r0
9001e032:	f240 809f 	bls.w	9001e174 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e036:	b963      	cbnz	r3, 9001e052 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e038:	9b00      	ldr	r3, [sp, #0]
9001e03a:	781a      	ldrb	r2, [r3, #0]
9001e03c:	0993      	lsrs	r3, r2, #6
9001e03e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e042:	9202      	str	r2, [sp, #8]
9001e044:	1e5a      	subs	r2, r3, #1
9001e046:	2a02      	cmp	r2, #2
9001e048:	d815      	bhi.n	9001e076 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e04a:	9a00      	ldr	r2, [sp, #0]
9001e04c:	b29b      	uxth	r3, r3
9001e04e:	3201      	adds	r2, #1
9001e050:	9200      	str	r2, [sp, #0]
9001e052:	b1b4      	cbz	r4, 9001e082 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e054:	429c      	cmp	r4, r3
9001e056:	bf91      	iteee	ls
9001e058:	1b1c      	subls	r4, r3, r4
9001e05a:	1ae4      	subhi	r4, r4, r3
9001e05c:	4671      	movhi	r1, lr
9001e05e:	f04f 0a00 	movhi.w	sl, #0
9001e062:	bf9b      	ittet	ls
9001e064:	fa1f fa84 	uxthls.w	sl, r4
9001e068:	2400      	movls	r4, #0
9001e06a:	b2a4      	uxthhi	r4, r4
9001e06c:	fa1f f188 	uxthls.w	r1, r8
9001e070:	4653      	mov	r3, sl
9001e072:	468e      	mov	lr, r1
9001e074:	e7db      	b.n	9001e02e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e076:	9a00      	ldr	r2, [sp, #0]
9001e078:	9b00      	ldr	r3, [sp, #0]
9001e07a:	3202      	adds	r2, #2
9001e07c:	785b      	ldrb	r3, [r3, #1]
9001e07e:	9200      	str	r2, [sp, #0]
9001e080:	e7e7      	b.n	9001e052 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e082:	2202      	movs	r2, #2
9001e084:	9907      	ldr	r1, [sp, #28]
9001e086:	4573      	cmp	r3, lr
9001e088:	4615      	mov	r5, r2
9001e08a:	9a02      	ldr	r2, [sp, #8]
9001e08c:	bf24      	itt	cs
9001e08e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e092:	46f1      	movcs	r9, lr
9001e094:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e098:	9905      	ldr	r1, [sp, #20]
9001e09a:	bf34      	ite	cc
9001e09c:	4699      	movcc	r9, r3
9001e09e:	fa1f fa8a 	uxthcs.w	sl, sl
9001e0a2:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e0a6:	bf38      	it	cc
9001e0a8:	ebae 0103 	subcc.w	r1, lr, r3
9001e0ac:	9a01      	ldr	r2, [sp, #4]
9001e0ae:	bf2e      	itee	cs
9001e0b0:	4621      	movcs	r1, r4
9001e0b2:	b289      	uxthcc	r1, r1
9001e0b4:	46a2      	movcc	sl, r4
9001e0b6:	2aff      	cmp	r2, #255	@ 0xff
9001e0b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e0bc:	d105      	bne.n	9001e0ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e0be:	4481      	add	r9, r0
9001e0c0:	4581      	cmp	r9, r0
9001e0c2:	d045      	beq.n	9001e150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e0c4:	f820 cb02 	strh.w	ip, [r0], #2
9001e0c8:	e7fa      	b.n	9001e0c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e0ca:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e0ce:	9d03      	ldr	r5, [sp, #12]
9001e0d0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e0d4:	4481      	add	r9, r0
9001e0d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e0da:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001e0de:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001e0e2:	fa5f fc8c 	uxtb.w	ip, ip
9001e0e6:	436a      	muls	r2, r5
9001e0e8:	fb0b fb05 	mul.w	fp, fp, r5
9001e0ec:	fb0c fc05 	mul.w	ip, ip, r5
9001e0f0:	9208      	str	r2, [sp, #32]
9001e0f2:	4581      	cmp	r9, r0
9001e0f4:	d02c      	beq.n	9001e150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e0f6:	8802      	ldrh	r2, [r0, #0]
9001e0f8:	9d04      	ldr	r5, [sp, #16]
9001e0fa:	1216      	asrs	r6, r2, #8
9001e0fc:	9f04      	ldr	r7, [sp, #16]
9001e0fe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e102:	fb16 f605 	smulbb	r6, r6, r5
9001e106:	9d08      	ldr	r5, [sp, #32]
9001e108:	442e      	add	r6, r5
9001e10a:	10d5      	asrs	r5, r2, #3
9001e10c:	00d2      	lsls	r2, r2, #3
9001e10e:	b2b6      	uxth	r6, r6
9001e110:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e114:	b2d2      	uxtb	r2, r2
9001e116:	fb15 f507 	smulbb	r5, r5, r7
9001e11a:	fb12 f207 	smulbb	r2, r2, r7
9001e11e:	1c77      	adds	r7, r6, #1
9001e120:	445d      	add	r5, fp
9001e122:	4462      	add	r2, ip
9001e124:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e128:	b2ad      	uxth	r5, r5
9001e12a:	b292      	uxth	r2, r2
9001e12c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e130:	1c57      	adds	r7, r2, #1
9001e132:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e136:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e13a:	4316      	orrs	r6, r2
9001e13c:	1c6a      	adds	r2, r5, #1
9001e13e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e142:	096d      	lsrs	r5, r5, #5
9001e144:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e148:	432e      	orrs	r6, r5
9001e14a:	f820 6b02 	strh.w	r6, [r0], #2
9001e14e:	e7d0      	b.n	9001e0f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e150:	4573      	cmp	r3, lr
9001e152:	d38d      	bcc.n	9001e070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e154:	fa1f f188 	uxth.w	r1, r8
9001e158:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e15c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e15e:	1a64      	subs	r4, r4, r1
9001e160:	881b      	ldrh	r3, [r3, #0]
9001e162:	b2a4      	uxth	r4, r4
9001e164:	eba3 0308 	sub.w	r3, r3, r8
9001e168:	2c00      	cmp	r4, #0
9001e16a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e16e:	bf18      	it	ne
9001e170:	2100      	movne	r1, #0
9001e172:	e77d      	b.n	9001e070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e174:	4b03      	ldr	r3, [pc, #12]	@ (9001e184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e176:	6818      	ldr	r0, [r3, #0]
9001e178:	6803      	ldr	r3, [r0, #0]
9001e17a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e17c:	4798      	blx	r3
9001e17e:	b00f      	add	sp, #60	@ 0x3c
9001e180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e184:	240234bc 	.word	0x240234bc
9001e188:	240234b6 	.word	0x240234b6

9001e18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e190:	b09f      	sub	sp, #124	@ 0x7c
9001e192:	461d      	mov	r5, r3
9001e194:	4604      	mov	r4, r0
9001e196:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001e198:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001e19c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001e1a0:	9209      	str	r2, [sp, #36]	@ 0x24
9001e1a2:	2a00      	cmp	r2, #0
9001e1a4:	f000 81ed 	beq.w	9001e582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e1a8:	6828      	ldr	r0, [r5, #0]
9001e1aa:	aa1a      	add	r2, sp, #104	@ 0x68
9001e1ac:	6869      	ldr	r1, [r5, #4]
9001e1ae:	c203      	stmia	r2!, {r0, r1}
9001e1b0:	6818      	ldr	r0, [r3, #0]
9001e1b2:	aa1c      	add	r2, sp, #112	@ 0x70
9001e1b4:	6859      	ldr	r1, [r3, #4]
9001e1b6:	c203      	stmia	r2!, {r0, r1}
9001e1b8:	a81a      	add	r0, sp, #104	@ 0x68
9001e1ba:	f7f8 feaf 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e1be:	4629      	mov	r1, r5
9001e1c0:	a81c      	add	r0, sp, #112	@ 0x70
9001e1c2:	f7f8 fed3 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e1c6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e1ca:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001e1ce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e1d2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001e1d6:	bfdb      	ittet	le
9001e1d8:	b29a      	uxthle	r2, r3
9001e1da:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e1de:	2201      	movgt	r2, #1
9001e1e0:	fb91 f2f2 	sdivle	r2, r1, r2
9001e1e4:	9202      	str	r2, [sp, #8]
9001e1e6:	9802      	ldr	r0, [sp, #8]
9001e1e8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001e1ec:	9902      	ldr	r1, [sp, #8]
9001e1ee:	fb92 f0f0 	sdiv	r0, r2, r0
9001e1f2:	b280      	uxth	r0, r0
9001e1f4:	4488      	add	r8, r1
9001e1f6:	9010      	str	r0, [sp, #64]	@ 0x40
9001e1f8:	f108 38ff 	add.w	r8, r8, #4294967295
9001e1fc:	9802      	ldr	r0, [sp, #8]
9001e1fe:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001e200:	fb05 2510 	mls	r5, r5, r0, r2
9001e204:	fb98 f8f1 	sdiv	r8, r8, r1
9001e208:	fb15 f503 	smulbb	r5, r5, r3
9001e20c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001e210:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001e214:	f108 0801 	add.w	r8, r8, #1
9001e218:	440d      	add	r5, r1
9001e21a:	4419      	add	r1, r3
9001e21c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001e220:	fa1f f888 	uxth.w	r8, r8
9001e224:	441a      	add	r2, r3
9001e226:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001e22a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001e22e:	b2ad      	uxth	r5, r5
9001e230:	9304      	str	r3, [sp, #16]
9001e232:	4b94      	ldr	r3, [pc, #592]	@ (9001e484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e234:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001e238:	6818      	ldr	r0, [r3, #0]
9001e23a:	6803      	ldr	r3, [r0, #0]
9001e23c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e23e:	4798      	blx	r3
9001e240:	4b91      	ldr	r3, [pc, #580]	@ (9001e488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e242:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001e246:	2d00      	cmp	r5, #0
9001e248:	881a      	ldrh	r2, [r3, #0]
9001e24a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001e24e:	fb02 f606 	mul.w	r6, r2, r6
9001e252:	fb02 7101 	mla	r1, r2, r1, r7
9001e256:	9318      	str	r3, [sp, #96]	@ 0x60
9001e258:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e25c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001e260:	f04f 0100 	mov.w	r1, #0
9001e264:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e268:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e26a:	4b88      	ldr	r3, [pc, #544]	@ (9001e48c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e26c:	920a      	str	r2, [sp, #40]	@ 0x28
9001e26e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e270:	eba3 0304 	sub.w	r3, r3, r4
9001e274:	910d      	str	r1, [sp, #52]	@ 0x34
9001e276:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e27a:	9319      	str	r3, [sp, #100]	@ 0x64
9001e27c:	f108 0204 	add.w	r2, r8, #4
9001e280:	9211      	str	r2, [sp, #68]	@ 0x44
9001e282:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e284:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001e288:	9215      	str	r2, [sp, #84]	@ 0x54
9001e28a:	9a04      	ldr	r2, [sp, #16]
9001e28c:	bf18      	it	ne
9001e28e:	2200      	movne	r2, #0
9001e290:	b292      	uxth	r2, r2
9001e292:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001e294:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e296:	fa11 f383 	uxtah	r3, r1, r3
9001e29a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001e29c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e2a0:	3304      	adds	r3, #4
9001e2a2:	9306      	str	r3, [sp, #24]
9001e2a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e2a6:	4283      	cmp	r3, r0
9001e2a8:	f240 8166 	bls.w	9001e578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e2ac:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001e2b0:	f04f 0a01 	mov.w	sl, #1
9001e2b4:	9902      	ldr	r1, [sp, #8]
9001e2b6:	9e06      	ldr	r6, [sp, #24]
9001e2b8:	46d3      	mov	fp, sl
9001e2ba:	4657      	mov	r7, sl
9001e2bc:	7836      	ldrb	r6, [r6, #0]
9001e2be:	fbb5 f3f3 	udiv	r3, r5, r3
9001e2c2:	1acb      	subs	r3, r1, r3
9001e2c4:	9612      	str	r6, [sp, #72]	@ 0x48
9001e2c6:	3601      	adds	r6, #1
9001e2c8:	b29b      	uxth	r3, r3
9001e2ca:	9605      	str	r6, [sp, #20]
9001e2cc:	9316      	str	r3, [sp, #88]	@ 0x58
9001e2ce:	9b06      	ldr	r3, [sp, #24]
9001e2d0:	7859      	ldrb	r1, [r3, #1]
9001e2d2:	789b      	ldrb	r3, [r3, #2]
9001e2d4:	021b      	lsls	r3, r3, #8
9001e2d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e2da:	9906      	ldr	r1, [sp, #24]
9001e2dc:	78c9      	ldrb	r1, [r1, #3]
9001e2de:	430b      	orrs	r3, r1
9001e2e0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001e2e2:	4419      	add	r1, r3
9001e2e4:	1c4e      	adds	r6, r1, #1
9001e2e6:	7849      	ldrb	r1, [r1, #1]
9001e2e8:	9603      	str	r6, [sp, #12]
9001e2ea:	0209      	lsls	r1, r1, #8
9001e2ec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e2ee:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001e2f2:	5cf3      	ldrb	r3, [r6, r3]
9001e2f4:	4319      	orrs	r1, r3
9001e2f6:	b28b      	uxth	r3, r1
9001e2f8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001e2fc:	930c      	str	r3, [sp, #48]	@ 0x30
9001e2fe:	2300      	movs	r3, #0
9001e300:	9307      	str	r3, [sp, #28]
9001e302:	469c      	mov	ip, r3
9001e304:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001e308:	930e      	str	r3, [sp, #56]	@ 0x38
9001e30a:	2d00      	cmp	r5, #0
9001e30c:	d07e      	beq.n	9001e40c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e30e:	42af      	cmp	r7, r5
9001e310:	d26e      	bcs.n	9001e3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e312:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e314:	1bed      	subs	r5, r5, r7
9001e316:	9201      	str	r2, [sp, #4]
9001e318:	4283      	cmp	r3, r0
9001e31a:	b2ad      	uxth	r5, r5
9001e31c:	d802      	bhi.n	9001e324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e31e:	e073      	b.n	9001e408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e320:	2b00      	cmp	r3, #0
9001e322:	d15f      	bne.n	9001e3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e324:	9b03      	ldr	r3, [sp, #12]
9001e326:	f1cb 0207 	rsb	r2, fp, #7
9001e32a:	785b      	ldrb	r3, [r3, #1]
9001e32c:	4093      	lsls	r3, r2
9001e32e:	005b      	lsls	r3, r3, #1
9001e330:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e334:	9b03      	ldr	r3, [sp, #12]
9001e336:	781b      	ldrb	r3, [r3, #0]
9001e338:	fa43 f30b 	asr.w	r3, r3, fp
9001e33c:	b2db      	uxtb	r3, r3
9001e33e:	4313      	orrs	r3, r2
9001e340:	f10b 0201 	add.w	r2, fp, #1
9001e344:	fa5f fb82 	uxtb.w	fp, r2
9001e348:	9a03      	ldr	r2, [sp, #12]
9001e34a:	b29f      	uxth	r7, r3
9001e34c:	f1bb 0f08 	cmp.w	fp, #8
9001e350:	bf13      	iteet	ne
9001e352:	3201      	addne	r2, #1
9001e354:	3202      	addeq	r2, #2
9001e356:	f04f 0b00 	moveq.w	fp, #0
9001e35a:	9203      	strne	r2, [sp, #12]
9001e35c:	bf08      	it	eq
9001e35e:	9203      	streq	r2, [sp, #12]
9001e360:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e362:	42ba      	cmp	r2, r7
9001e364:	d309      	bcc.n	9001e37a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e366:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001e36a:	2301      	movs	r3, #1
9001e36c:	9a05      	ldr	r2, [sp, #20]
9001e36e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001e372:	d30e      	bcc.n	9001e392 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e374:	469a      	mov	sl, r3
9001e376:	2600      	movs	r6, #0
9001e378:	e035      	b.n	9001e3e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e37a:	9b05      	ldr	r3, [sp, #20]
9001e37c:	429f      	cmp	r7, r3
9001e37e:	d318      	bcc.n	9001e3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e380:	eb04 030a 	add.w	r3, r4, sl
9001e384:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001e388:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001e38c:	f10a 0301 	add.w	r3, sl, #1
9001e390:	b29b      	uxth	r3, r3
9001e392:	9a05      	ldr	r2, [sp, #20]
9001e394:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001e398:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e39c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001e39e:	7116      	strb	r6, [r2, #4]
9001e3a0:	f10a 0601 	add.w	r6, sl, #1
9001e3a4:	80d1      	strh	r1, [r2, #6]
9001e3a6:	7156      	strb	r6, [r2, #5]
9001e3a8:	9a05      	ldr	r2, [sp, #20]
9001e3aa:	3201      	adds	r2, #1
9001e3ac:	b292      	uxth	r2, r2
9001e3ae:	9205      	str	r2, [sp, #20]
9001e3b0:	e7e0      	b.n	9001e374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e3b2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e3b6:	463a      	mov	r2, r7
9001e3b8:	795b      	ldrb	r3, [r3, #5]
9001e3ba:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001e3be:	4426      	add	r6, r4
9001e3c0:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001e3c2:	eb01 0c06 	add.w	ip, r1, r6
9001e3c6:	f1bc 0f00 	cmp.w	ip, #0
9001e3ca:	dd07      	ble.n	9001e3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e3cc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e3d0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e3d4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e3d8:	88d2      	ldrh	r2, [r2, #6]
9001e3da:	e7f1      	b.n	9001e3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e3dc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001e3e0:	b29b      	uxth	r3, r3
9001e3e2:	e7c3      	b.n	9001e36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e3e4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e3e6:	970c      	str	r7, [sp, #48]	@ 0x30
9001e3e8:	46b4      	mov	ip, r6
9001e3ea:	9a01      	ldr	r2, [sp, #4]
9001e3ec:	461f      	mov	r7, r3
9001e3ee:	e78c      	b.n	9001e30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e3f0:	1b7b      	subs	r3, r7, r5
9001e3f2:	eb0c 0605 	add.w	r6, ip, r5
9001e3f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e3fa:	b29b      	uxth	r3, r3
9001e3fc:	b2b6      	uxth	r6, r6
9001e3fe:	9201      	str	r2, [sp, #4]
9001e400:	2500      	movs	r5, #0
9001e402:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e404:	4282      	cmp	r2, r0
9001e406:	d88b      	bhi.n	9001e320 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e408:	9a01      	ldr	r2, [sp, #4]
9001e40a:	e74b      	b.n	9001e2a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e40c:	4297      	cmp	r7, r2
9001e40e:	d332      	bcc.n	9001e476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e410:	1abb      	subs	r3, r7, r2
9001e412:	9208      	str	r2, [sp, #32]
9001e414:	9501      	str	r5, [sp, #4]
9001e416:	b29b      	uxth	r3, r3
9001e418:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e41a:	29ff      	cmp	r1, #255	@ 0xff
9001e41c:	9908      	ldr	r1, [sp, #32]
9001e41e:	eb0c 0601 	add.w	r6, ip, r1
9001e422:	d135      	bne.n	9001e490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e424:	f1a0 0e02 	sub.w	lr, r0, #2
9001e428:	b2b6      	uxth	r6, r6
9001e42a:	45b4      	cmp	ip, r6
9001e42c:	f040 808c 	bne.w	9001e548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e430:	9908      	ldr	r1, [sp, #32]
9001e432:	4297      	cmp	r7, r2
9001e434:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e438:	d3e2      	bcc.n	9001e400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e43a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001e43c:	9904      	ldr	r1, [sp, #16]
9001e43e:	8812      	ldrh	r2, [r2, #0]
9001e440:	1a52      	subs	r2, r2, r1
9001e442:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001e444:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e448:	9a07      	ldr	r2, [sp, #28]
9001e44a:	3201      	adds	r2, #1
9001e44c:	428a      	cmp	r2, r1
9001e44e:	9207      	str	r2, [sp, #28]
9001e450:	f040 8087 	bne.w	9001e562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e454:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001e458:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001e45c:	9b04      	ldr	r3, [sp, #16]
9001e45e:	1bed      	subs	r5, r5, r7
9001e460:	b2ad      	uxth	r5, r5
9001e462:	2d00      	cmp	r5, #0
9001e464:	bf08      	it	eq
9001e466:	461a      	moveq	r2, r3
9001e468:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e46a:	bf18      	it	ne
9001e46c:	2200      	movne	r2, #0
9001e46e:	3301      	adds	r3, #1
9001e470:	b292      	uxth	r2, r2
9001e472:	930d      	str	r3, [sp, #52]	@ 0x34
9001e474:	e70d      	b.n	9001e292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e476:	1bd1      	subs	r1, r2, r7
9001e478:	9708      	str	r7, [sp, #32]
9001e47a:	b28b      	uxth	r3, r1
9001e47c:	9301      	str	r3, [sp, #4]
9001e47e:	462b      	mov	r3, r5
9001e480:	e7ca      	b.n	9001e418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e482:	bf00      	nop
9001e484:	240234bc 	.word	0x240234bc
9001e488:	240234b6 	.word	0x240234b6
9001e48c:	fffff7fb 	.word	0xfffff7fb
9001e490:	b2b6      	uxth	r6, r6
9001e492:	900b      	str	r0, [sp, #44]	@ 0x2c
9001e494:	45b4      	cmp	ip, r6
9001e496:	d0cb      	beq.n	9001e430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001e498:	f10c 0101 	add.w	r1, ip, #1
9001e49c:	44a4      	add	ip, r4
9001e49e:	9117      	str	r1, [sp, #92]	@ 0x5c
9001e4a0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001e4a4:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e4a6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e4aa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e4ac:	ea4f 2825 	mov.w	r8, r5, asr #8
9001e4b0:	f8b1 c000 	ldrh.w	ip, [r1]
9001e4b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e4b6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001e4ba:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001e4be:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001e4c2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e4c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e4ca:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e4ce:	fb1e fe01 	smulbb	lr, lr, r1
9001e4d2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e4d4:	fa5f fc8c 	uxtb.w	ip, ip
9001e4d8:	fb08 e801 	mla	r8, r8, r1, lr
9001e4dc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001e4e0:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e4e2:	00ed      	lsls	r5, r5, #3
9001e4e4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e4e8:	fa1f f888 	uxth.w	r8, r8
9001e4ec:	fb19 f901 	smulbb	r9, r9, r1
9001e4f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e4f2:	b2ed      	uxtb	r5, r5
9001e4f4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001e4f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e4fa:	fb1c fc01 	smulbb	ip, ip, r1
9001e4fe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e500:	fa1f fe8e 	uxth.w	lr, lr
9001e504:	fb05 c501 	mla	r5, r5, r1, ip
9001e508:	f108 0c01 	add.w	ip, r8, #1
9001e50c:	f10e 0901 	add.w	r9, lr, #1
9001e510:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e512:	b2ad      	uxth	r5, r5
9001e514:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001e518:	f105 0c01 	add.w	ip, r5, #1
9001e51c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001e520:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001e524:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e528:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e52c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e530:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e534:	ea4c 0808 	orr.w	r8, ip, r8
9001e538:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001e53c:	ea48 0809 	orr.w	r8, r8, r9
9001e540:	f821 8b02 	strh.w	r8, [r1], #2
9001e544:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e546:	e7a5      	b.n	9001e494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001e548:	f10c 0801 	add.w	r8, ip, #1
9001e54c:	44a4      	add	ip, r4
9001e54e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e550:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001e554:	fa1f fc88 	uxth.w	ip, r8
9001e558:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e55c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001e560:	e763      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001e562:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e566:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001e56a:	1aad      	subs	r5, r5, r2
9001e56c:	b2ad      	uxth	r5, r5
9001e56e:	2d00      	cmp	r5, #0
9001e570:	bf18      	it	ne
9001e572:	2200      	movne	r2, #0
9001e574:	9201      	str	r2, [sp, #4]
9001e576:	e744      	b.n	9001e402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001e578:	4b03      	ldr	r3, [pc, #12]	@ (9001e588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001e57a:	6818      	ldr	r0, [r3, #0]
9001e57c:	6803      	ldr	r3, [r0, #0]
9001e57e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e580:	4798      	blx	r3
9001e582:	b01f      	add	sp, #124	@ 0x7c
9001e584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e588:	240234bc 	.word	0x240234bc

9001e58c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001e58c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e590:	b093      	sub	sp, #76	@ 0x4c
9001e592:	4616      	mov	r6, r2
9001e594:	460d      	mov	r5, r1
9001e596:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001e59a:	9003      	str	r0, [sp, #12]
9001e59c:	9201      	str	r2, [sp, #4]
9001e59e:	2a00      	cmp	r2, #0
9001e5a0:	f000 8303 	beq.w	9001ebaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001e5a4:	6830      	ldr	r0, [r6, #0]
9001e5a6:	ac0e      	add	r4, sp, #56	@ 0x38
9001e5a8:	6871      	ldr	r1, [r6, #4]
9001e5aa:	c403      	stmia	r4!, {r0, r1}
9001e5ac:	6818      	ldr	r0, [r3, #0]
9001e5ae:	ac10      	add	r4, sp, #64	@ 0x40
9001e5b0:	6859      	ldr	r1, [r3, #4]
9001e5b2:	c403      	stmia	r4!, {r0, r1}
9001e5b4:	a80e      	add	r0, sp, #56	@ 0x38
9001e5b6:	f7f8 fcb1 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e5ba:	4631      	mov	r1, r6
9001e5bc:	a810      	add	r0, sp, #64	@ 0x40
9001e5be:	f7f8 fcd5 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e5c2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001e5c6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001e5ca:	bfdb      	ittet	le
9001e5cc:	b293      	uxthle	r3, r2
9001e5ce:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e5d2:	2301      	movgt	r3, #1
9001e5d4:	fb91 f3f3 	sdivle	r3, r1, r3
9001e5d8:	9304      	str	r3, [sp, #16]
9001e5da:	f105 0308 	add.w	r3, r5, #8
9001e5de:	9904      	ldr	r1, [sp, #16]
9001e5e0:	9308      	str	r3, [sp, #32]
9001e5e2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001e5e6:	440b      	add	r3, r1
9001e5e8:	3b01      	subs	r3, #1
9001e5ea:	fb93 f3f1 	sdiv	r3, r3, r1
9001e5ee:	3b01      	subs	r3, #1
9001e5f0:	9908      	ldr	r1, [sp, #32]
9001e5f2:	b29b      	uxth	r3, r3
9001e5f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e5f8:	9904      	ldr	r1, [sp, #16]
9001e5fa:	9309      	str	r3, [sp, #36]	@ 0x24
9001e5fc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001e600:	fb93 f0f1 	sdiv	r0, r3, r1
9001e604:	b284      	uxth	r4, r0
9001e606:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001e60a:	9405      	str	r4, [sp, #20]
9001e60c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001e610:	fb05 3914 	mls	r9, r5, r4, r3
9001e614:	fb19 f902 	smulbb	r9, r9, r2
9001e618:	4489      	add	r9, r1
9001e61a:	fa1f f989 	uxth.w	r9, r9
9001e61e:	2d00      	cmp	r5, #0
9001e620:	d05d      	beq.n	9001e6de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001e622:	1e6a      	subs	r2, r5, #1
9001e624:	9808      	ldr	r0, [sp, #32]
9001e626:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001e62a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e62c:	fa9a fa8a 	rev.w	sl, sl
9001e630:	4492      	add	sl, r2
9001e632:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001e636:	f04f 0600 	mov.w	r6, #0
9001e63a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001e63e:	4411      	add	r1, r2
9001e640:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e644:	4413      	add	r3, r2
9001e646:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001e64a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001e64e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001e652:	9302      	str	r3, [sp, #8]
9001e654:	4bca      	ldr	r3, [pc, #808]	@ (9001e980 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001e656:	6818      	ldr	r0, [r3, #0]
9001e658:	6803      	ldr	r3, [r0, #0]
9001e65a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e65c:	4798      	blx	r3
9001e65e:	4bc9      	ldr	r3, [pc, #804]	@ (9001e984 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001e660:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001e664:	2100      	movs	r1, #0
9001e666:	881b      	ldrh	r3, [r3, #0]
9001e668:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001e66c:	fb03 2404 	mla	r4, r3, r4, r2
9001e670:	2280      	movs	r2, #128	@ 0x80
9001e672:	436b      	muls	r3, r5
9001e674:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e678:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e67c:	930d      	str	r3, [sp, #52]	@ 0x34
9001e67e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001e682:	fb99 f3f3 	sdiv	r3, r9, r3
9001e686:	9306      	str	r3, [sp, #24]
9001e688:	9b01      	ldr	r3, [sp, #4]
9001e68a:	43db      	mvns	r3, r3
9001e68c:	b2db      	uxtb	r3, r3
9001e68e:	930a      	str	r3, [sp, #40]	@ 0x28
9001e690:	9b03      	ldr	r3, [sp, #12]
9001e692:	3304      	adds	r3, #4
9001e694:	4618      	mov	r0, r3
9001e696:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e698:	f00c f896 	bl	9002a7c8 <memset>
9001e69c:	4bba      	ldr	r3, [pc, #744]	@ (9001e988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001e69e:	9300      	str	r3, [sp, #0]
9001e6a0:	2300      	movs	r3, #0
9001e6a2:	9307      	str	r3, [sp, #28]
9001e6a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e6a6:	42a3      	cmp	r3, r4
9001e6a8:	f240 827a 	bls.w	9001eba0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001e6ac:	f04f 0e07 	mov.w	lr, #7
9001e6b0:	f1b9 0f00 	cmp.w	r9, #0
9001e6b4:	f000 8159 	beq.w	9001e96a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001e6b8:	f89a 5000 	ldrb.w	r5, [sl]
9001e6bc:	f10a 0701 	add.w	r7, sl, #1
9001e6c0:	b2ed      	uxtb	r5, r5
9001e6c2:	11aa      	asrs	r2, r5, #6
9001e6c4:	d10e      	bne.n	9001e6e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001e6c6:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e6ca:	9b03      	ldr	r3, [sp, #12]
9001e6cc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001e6d0:	88ae      	ldrh	r6, [r5, #4]
9001e6d2:	f109 39ff 	add.w	r9, r9, #4294967295
9001e6d6:	fa1f f989 	uxth.w	r9, r9
9001e6da:	46ba      	mov	sl, r7
9001e6dc:	e7e8      	b.n	9001e6b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001e6de:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001e6e2:	e7a6      	b.n	9001e632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001e6e4:	2a01      	cmp	r2, #1
9001e6e6:	d129      	bne.n	9001e73c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001e6e8:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001e6ec:	f005 0203 	and.w	r2, r5, #3
9001e6f0:	2103      	movs	r1, #3
9001e6f2:	3b02      	subs	r3, #2
9001e6f4:	4413      	add	r3, r2
9001e6f6:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001e6fa:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001e6fe:	f003 031f 	and.w	r3, r3, #31
9001e702:	3a02      	subs	r2, #2
9001e704:	3d02      	subs	r5, #2
9001e706:	f363 0604 	bfi	r6, r3, #0, #5
9001e70a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001e70e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e712:	f362 164a 	bfi	r6, r2, #5, #6
9001e716:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e71a:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001e71e:	f005 051f 	and.w	r5, r5, #31
9001e722:	fb11 2205 	smlabb	r2, r1, r5, r2
9001e726:	f365 26cf 	bfi	r6, r5, #11, #5
9001e72a:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001e72e:	9a03      	ldr	r2, [sp, #12]
9001e730:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e734:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e738:	809e      	strh	r6, [r3, #4]
9001e73a:	e7ca      	b.n	9001e6d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001e73c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e740:	2a02      	cmp	r2, #2
9001e742:	b2ab      	uxth	r3, r5
9001e744:	d136      	bne.n	9001e7b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001e746:	2101      	movs	r1, #1
9001e748:	fb12 1205 	smlabb	r2, r2, r5, r1
9001e74c:	4492      	add	sl, r2
9001e74e:	463a      	mov	r2, r7
9001e750:	4552      	cmp	r2, sl
9001e752:	d01c      	beq.n	9001e78e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001e754:	4694      	mov	ip, r2
9001e756:	f04f 0b03 	mov.w	fp, #3
9001e75a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001e75e:	7852      	ldrb	r2, [r2, #1]
9001e760:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001e764:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001e768:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001e76c:	f001 021f 	and.w	r2, r1, #31
9001e770:	460e      	mov	r6, r1
9001e772:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e776:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001e77a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e77e:	9a03      	ldr	r2, [sp, #12]
9001e780:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e784:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e788:	4662      	mov	r2, ip
9001e78a:	8081      	strh	r1, [r0, #4]
9001e78c:	e7e0      	b.n	9001e750 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001e78e:	4599      	cmp	r9, r3
9001e790:	d20b      	bcs.n	9001e7aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001e792:	eba5 0509 	sub.w	r5, r5, r9
9001e796:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001e79a:	2d00      	cmp	r5, #0
9001e79c:	f300 8208 	bgt.w	9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001e7a0:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e7a4:	2301      	movs	r3, #1
9001e7a6:	9307      	str	r3, [sp, #28]
9001e7a8:	e00c      	b.n	9001e7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e7aa:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001e7ae:	eba9 0903 	sub.w	r9, r9, r3
9001e7b2:	e790      	b.n	9001e6d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001e7b4:	4599      	cmp	r9, r3
9001e7b6:	d2fa      	bcs.n	9001e7ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001e7b8:	eba5 0509 	sub.w	r5, r5, r9
9001e7bc:	2d00      	cmp	r5, #0
9001e7be:	dc1d      	bgt.n	9001e7fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001e7c0:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e7c4:	f04f 0b00 	mov.w	fp, #0
9001e7c8:	f1b8 0f00 	cmp.w	r8, #0
9001e7cc:	f340 81a0 	ble.w	9001eb10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001e7d0:	783b      	ldrb	r3, [r7, #0]
9001e7d2:	f107 0a01 	add.w	sl, r7, #1
9001e7d6:	b2db      	uxtb	r3, r3
9001e7d8:	119a      	asrs	r2, r3, #6
9001e7da:	f040 80d7 	bne.w	9001e98c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001e7de:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e7e2:	9a03      	ldr	r2, [sp, #12]
9001e7e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e7e8:	889e      	ldrh	r6, [r3, #4]
9001e7ea:	9b01      	ldr	r3, [sp, #4]
9001e7ec:	2bff      	cmp	r3, #255	@ 0xff
9001e7ee:	f040 81e8 	bne.w	9001ebc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001e7f2:	8026      	strh	r6, [r4, #0]
9001e7f4:	f108 38ff 	add.w	r8, r8, #4294967295
9001e7f8:	3402      	adds	r4, #2
9001e7fa:	e0be      	b.n	9001e97a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e7fc:	9b02      	ldr	r3, [sp, #8]
9001e7fe:	9a02      	ldr	r2, [sp, #8]
9001e800:	42ab      	cmp	r3, r5
9001e802:	bfa8      	it	ge
9001e804:	462b      	movge	r3, r5
9001e806:	eba2 0803 	sub.w	r8, r2, r3
9001e80a:	9a07      	ldr	r2, [sp, #28]
9001e80c:	1aed      	subs	r5, r5, r3
9001e80e:	2a00      	cmp	r2, #0
9001e810:	d05a      	beq.n	9001e8c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001e812:	9a01      	ldr	r2, [sp, #4]
9001e814:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e818:	2aff      	cmp	r2, #255	@ 0xff
9001e81a:	d049      	beq.n	9001e8b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e81c:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001e820:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001e824:	42a3      	cmp	r3, r4
9001e826:	f240 80a5 	bls.w	9001e974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e82a:	46bc      	mov	ip, r7
9001e82c:	8820      	ldrh	r0, [r4, #0]
9001e82e:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001e832:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001e836:	7879      	ldrb	r1, [r7, #1]
9001e838:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001e83c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001e840:	fb1a fa09 	smulbb	sl, sl, r9
9001e844:	b212      	sxth	r2, r2
9001e846:	b291      	uxth	r1, r2
9001e848:	00d2      	lsls	r2, r2, #3
9001e84a:	120f      	asrs	r7, r1, #8
9001e84c:	10c9      	asrs	r1, r1, #3
9001e84e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e852:	b2d2      	uxtb	r2, r2
9001e854:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e858:	fb07 a70e 	mla	r7, r7, lr, sl
9001e85c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001e860:	00c0      	lsls	r0, r0, #3
9001e862:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e866:	b2bf      	uxth	r7, r7
9001e868:	b2c0      	uxtb	r0, r0
9001e86a:	fb1a fa09 	smulbb	sl, sl, r9
9001e86e:	fb10 f009 	smulbb	r0, r0, r9
9001e872:	fb01 a10e 	mla	r1, r1, lr, sl
9001e876:	fb02 020e 	mla	r2, r2, lr, r0
9001e87a:	1c78      	adds	r0, r7, #1
9001e87c:	b289      	uxth	r1, r1
9001e87e:	b292      	uxth	r2, r2
9001e880:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e884:	f101 0a01 	add.w	sl, r1, #1
9001e888:	1c50      	adds	r0, r2, #1
9001e88a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001e88e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e892:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e896:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e89a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e89e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e8a2:	4307      	orrs	r7, r0
9001e8a4:	ea47 070a 	orr.w	r7, r7, sl
9001e8a8:	f824 7b02 	strh.w	r7, [r4], #2
9001e8ac:	4667      	mov	r7, ip
9001e8ae:	e7b9      	b.n	9001e824 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001e8b0:	42a3      	cmp	r3, r4
9001e8b2:	d95f      	bls.n	9001e974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e8b4:	463a      	mov	r2, r7
9001e8b6:	f812 1b02 	ldrb.w	r1, [r2], #2
9001e8ba:	7878      	ldrb	r0, [r7, #1]
9001e8bc:	4617      	mov	r7, r2
9001e8be:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001e8c2:	f824 1b02 	strh.w	r1, [r4], #2
9001e8c6:	e7f3      	b.n	9001e8b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e8c8:	9901      	ldr	r1, [sp, #4]
9001e8ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e8ce:	b2b2      	uxth	r2, r6
9001e8d0:	29ff      	cmp	r1, #255	@ 0xff
9001e8d2:	d044      	beq.n	9001e95e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e8d4:	ea4f 2922 	mov.w	r9, r2, asr #8
9001e8d8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e8dc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e8e0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001e8e4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001e8e8:	4608      	mov	r0, r1
9001e8ea:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e8ee:	fb09 f901 	mul.w	r9, r9, r1
9001e8f2:	fb0e fe01 	mul.w	lr, lr, r1
9001e8f6:	00d1      	lsls	r1, r2, #3
9001e8f8:	b2c9      	uxtb	r1, r1
9001e8fa:	4341      	muls	r1, r0
9001e8fc:	429c      	cmp	r4, r3
9001e8fe:	f4bf af61 	bcs.w	9001e7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e902:	8822      	ldrh	r2, [r4, #0]
9001e904:	1210      	asrs	r0, r2, #8
9001e906:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001e90a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e90e:	00d2      	lsls	r2, r2, #3
9001e910:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e914:	fb00 900a 	mla	r0, r0, sl, r9
9001e918:	b2d2      	uxtb	r2, r2
9001e91a:	fb0c ec0a 	mla	ip, ip, sl, lr
9001e91e:	b280      	uxth	r0, r0
9001e920:	fb02 120a 	mla	r2, r2, sl, r1
9001e924:	fa1f fc8c 	uxth.w	ip, ip
9001e928:	b292      	uxth	r2, r2
9001e92a:	f100 0b01 	add.w	fp, r0, #1
9001e92e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001e932:	1c50      	adds	r0, r2, #1
9001e934:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e938:	f10c 0201 	add.w	r2, ip, #1
9001e93c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001e940:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e944:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e948:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001e94c:	ea40 0b0b 	orr.w	fp, r0, fp
9001e950:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001e954:	ea4b 0b0c 	orr.w	fp, fp, ip
9001e958:	f824 bb02 	strh.w	fp, [r4], #2
9001e95c:	e7ce      	b.n	9001e8fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001e95e:	429c      	cmp	r4, r3
9001e960:	f4bf af30 	bcs.w	9001e7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e964:	f824 2b02 	strh.w	r2, [r4], #2
9001e968:	e7f9      	b.n	9001e95e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e96a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e96e:	4657      	mov	r7, sl
9001e970:	464d      	mov	r5, r9
9001e972:	e727      	b.n	9001e7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e974:	2300      	movs	r3, #0
9001e976:	e716      	b.n	9001e7a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001e978:	44bb      	add	fp, r7
9001e97a:	4657      	mov	r7, sl
9001e97c:	e724      	b.n	9001e7c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001e97e:	bf00      	nop
9001e980:	240234bc 	.word	0x240234bc
9001e984:	240234b6 	.word	0x240234b6
9001e988:	24000180 	.word	0x24000180
9001e98c:	2a01      	cmp	r2, #1
9001e98e:	d12a      	bne.n	9001e9e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001e990:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001e994:	f003 0203 	and.w	r2, r3, #3
9001e998:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001e99c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e9a0:	3902      	subs	r1, #2
9001e9a2:	3802      	subs	r0, #2
9001e9a4:	3b02      	subs	r3, #2
9001e9a6:	4411      	add	r1, r2
9001e9a8:	f001 011f 	and.w	r1, r1, #31
9001e9ac:	f361 0604 	bfi	r6, r1, #0, #5
9001e9b0:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001e9b4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e9b8:	f360 164a 	bfi	r6, r0, #5, #6
9001e9bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e9c0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001e9c4:	f002 031f 	and.w	r3, r2, #31
9001e9c8:	2203      	movs	r2, #3
9001e9ca:	f363 26cf 	bfi	r6, r3, #11, #5
9001e9ce:	fb12 0303 	smlabb	r3, r2, r3, r0
9001e9d2:	2207      	movs	r2, #7
9001e9d4:	fb12 3301 	smlabb	r3, r2, r1, r3
9001e9d8:	9a03      	ldr	r2, [sp, #12]
9001e9da:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e9de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e9e2:	809e      	strh	r6, [r3, #4]
9001e9e4:	e701      	b.n	9001e7ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001e9e6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001e9ea:	4647      	mov	r7, r8
9001e9ec:	45a8      	cmp	r8, r5
9001e9ee:	bfa8      	it	ge
9001e9f0:	462f      	movge	r7, r5
9001e9f2:	2a02      	cmp	r2, #2
9001e9f4:	d154      	bne.n	9001eaa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001e9f6:	9b01      	ldr	r3, [sp, #4]
9001e9f8:	2bff      	cmp	r3, #255	@ 0xff
9001e9fa:	d01a      	beq.n	9001ea32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e9fc:	eb0b 0307 	add.w	r3, fp, r7
9001ea00:	2b40      	cmp	r3, #64	@ 0x40
9001ea02:	dd16      	ble.n	9001ea32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001ea04:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001ea08:	9800      	ldr	r0, [sp, #0]
9001ea0a:	4649      	mov	r1, r9
9001ea0c:	f7e3 ff80 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001ea10:	465a      	mov	r2, fp
9001ea12:	9b01      	ldr	r3, [sp, #4]
9001ea14:	4620      	mov	r0, r4
9001ea16:	9900      	ldr	r1, [sp, #0]
9001ea18:	444c      	add	r4, r9
9001ea1a:	f7e3 ffbf 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001ea1e:	9b00      	ldr	r3, [sp, #0]
9001ea20:	f04f 0b00 	mov.w	fp, #0
9001ea24:	461a      	mov	r2, r3
9001ea26:	4b6a      	ldr	r3, [pc, #424]	@ (9001ebd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ea28:	429a      	cmp	r2, r3
9001ea2a:	bf0c      	ite	eq
9001ea2c:	4b69      	ldreq	r3, [pc, #420]	@ (9001ebd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001ea2e:	4b68      	ldrne	r3, [pc, #416]	@ (9001ebd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ea30:	9300      	str	r3, [sp, #0]
9001ea32:	4652      	mov	r2, sl
9001ea34:	2100      	movs	r1, #0
9001ea36:	42a9      	cmp	r1, r5
9001ea38:	da2c      	bge.n	9001ea94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001ea3a:	4694      	mov	ip, r2
9001ea3c:	f04f 0903 	mov.w	r9, #3
9001ea40:	42b9      	cmp	r1, r7
9001ea42:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001ea46:	7852      	ldrb	r2, [r2, #1]
9001ea48:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001ea4c:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001ea50:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001ea54:	f003 021f 	and.w	r2, r3, #31
9001ea58:	461e      	mov	r6, r3
9001ea5a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ea5e:	fb19 000e 	smlabb	r0, r9, lr, r0
9001ea62:	f04f 0e07 	mov.w	lr, #7
9001ea66:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001ea6a:	9a03      	ldr	r2, [sp, #12]
9001ea6c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ea70:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ea74:	8083      	strh	r3, [r0, #4]
9001ea76:	da0a      	bge.n	9001ea8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001ea78:	9a01      	ldr	r2, [sp, #4]
9001ea7a:	2aff      	cmp	r2, #255	@ 0xff
9001ea7c:	bf13      	iteet	ne
9001ea7e:	9a00      	ldrne	r2, [sp, #0]
9001ea80:	8023      	strheq	r3, [r4, #0]
9001ea82:	3402      	addeq	r4, #2
9001ea84:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001ea88:	bf18      	it	ne
9001ea8a:	f10b 0b01 	addne.w	fp, fp, #1
9001ea8e:	3101      	adds	r1, #1
9001ea90:	4662      	mov	r2, ip
9001ea92:	e7d0      	b.n	9001ea36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001ea94:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001ea98:	eba8 0807 	sub.w	r8, r8, r7
9001ea9c:	1bed      	subs	r5, r5, r7
9001ea9e:	e76c      	b.n	9001e97a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001eaa0:	9b01      	ldr	r3, [sp, #4]
9001eaa2:	eba8 0807 	sub.w	r8, r8, r7
9001eaa6:	1bed      	subs	r5, r5, r7
9001eaa8:	fa1f f986 	uxth.w	r9, r6
9001eaac:	2bff      	cmp	r3, #255	@ 0xff
9001eaae:	d027      	beq.n	9001eb00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001eab0:	eb0b 0307 	add.w	r3, fp, r7
9001eab4:	2b40      	cmp	r3, #64	@ 0x40
9001eab6:	dd18      	ble.n	9001eaea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001eab8:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001eabc:	9800      	ldr	r0, [sp, #0]
9001eabe:	4619      	mov	r1, r3
9001eac0:	930c      	str	r3, [sp, #48]	@ 0x30
9001eac2:	f7e3 ff25 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001eac6:	465a      	mov	r2, fp
9001eac8:	9b01      	ldr	r3, [sp, #4]
9001eaca:	4620      	mov	r0, r4
9001eacc:	9900      	ldr	r1, [sp, #0]
9001eace:	f04f 0b00 	mov.w	fp, #0
9001ead2:	f7e3 ff63 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001ead6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001ead8:	441c      	add	r4, r3
9001eada:	9b00      	ldr	r3, [sp, #0]
9001eadc:	461a      	mov	r2, r3
9001eade:	4b3c      	ldr	r3, [pc, #240]	@ (9001ebd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eae0:	429a      	cmp	r2, r3
9001eae2:	bf0c      	ite	eq
9001eae4:	4b3b      	ldreq	r3, [pc, #236]	@ (9001ebd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001eae6:	4b3a      	ldrne	r3, [pc, #232]	@ (9001ebd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eae8:	9300      	str	r3, [sp, #0]
9001eaea:	9b00      	ldr	r3, [sp, #0]
9001eaec:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001eaf0:	463b      	mov	r3, r7
9001eaf2:	2b00      	cmp	r3, #0
9001eaf4:	f43f af40 	beq.w	9001e978 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001eaf8:	f822 9b02 	strh.w	r9, [r2], #2
9001eafc:	3b01      	subs	r3, #1
9001eafe:	e7f8      	b.n	9001eaf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001eb00:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001eb04:	42a7      	cmp	r7, r4
9001eb06:	f67f af38 	bls.w	9001e97a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001eb0a:	f824 9b02 	strh.w	r9, [r4], #2
9001eb0e:	e7f9      	b.n	9001eb04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001eb10:	f1bb 0f00 	cmp.w	fp, #0
9001eb14:	d00c      	beq.n	9001eb30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001eb16:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001eb1a:	9800      	ldr	r0, [sp, #0]
9001eb1c:	4641      	mov	r1, r8
9001eb1e:	f7e3 fef7 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001eb22:	4620      	mov	r0, r4
9001eb24:	4444      	add	r4, r8
9001eb26:	9b01      	ldr	r3, [sp, #4]
9001eb28:	465a      	mov	r2, fp
9001eb2a:	9900      	ldr	r1, [sp, #0]
9001eb2c:	f7e3 ff36 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001eb30:	4b29      	ldr	r3, [pc, #164]	@ (9001ebd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001eb32:	9a02      	ldr	r2, [sp, #8]
9001eb34:	881b      	ldrh	r3, [r3, #0]
9001eb36:	1a9b      	subs	r3, r3, r2
9001eb38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eb3c:	9b06      	ldr	r3, [sp, #24]
9001eb3e:	3301      	adds	r3, #1
9001eb40:	9306      	str	r3, [sp, #24]
9001eb42:	9a06      	ldr	r2, [sp, #24]
9001eb44:	9b04      	ldr	r3, [sp, #16]
9001eb46:	4293      	cmp	r3, r2
9001eb48:	d120      	bne.n	9001eb8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001eb4a:	9b05      	ldr	r3, [sp, #20]
9001eb4c:	2100      	movs	r1, #0
9001eb4e:	9a05      	ldr	r2, [sp, #20]
9001eb50:	f04f 0600 	mov.w	r6, #0
9001eb54:	f103 0801 	add.w	r8, r3, #1
9001eb58:	9b08      	ldr	r3, [sp, #32]
9001eb5a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001eb5e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001eb62:	2280      	movs	r2, #128	@ 0x80
9001eb64:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001eb68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001eb6a:	ba3f      	rev	r7, r7
9001eb6c:	eba9 0905 	sub.w	r9, r9, r5
9001eb70:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001eb72:	441f      	add	r7, r3
9001eb74:	f00b fe28 	bl	9002a7c8 <memset>
9001eb78:	fa1f f989 	uxth.w	r9, r9
9001eb7c:	2300      	movs	r3, #0
9001eb7e:	f8cd 8014 	str.w	r8, [sp, #20]
9001eb82:	9306      	str	r3, [sp, #24]
9001eb84:	f7e3 feba 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001eb88:	46ba      	mov	sl, r7
9001eb8a:	e58b      	b.n	9001e6a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001eb8c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001eb90:	9b02      	ldr	r3, [sp, #8]
9001eb92:	eba9 0903 	sub.w	r9, r9, r3
9001eb96:	eba9 0505 	sub.w	r5, r9, r5
9001eb9a:	fa1f f985 	uxth.w	r9, r5
9001eb9e:	e7f1      	b.n	9001eb84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001eba0:	4b0e      	ldr	r3, [pc, #56]	@ (9001ebdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001eba2:	6818      	ldr	r0, [r3, #0]
9001eba4:	6803      	ldr	r3, [r0, #0]
9001eba6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001eba8:	4798      	blx	r3
9001ebaa:	b013      	add	sp, #76	@ 0x4c
9001ebac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ebb0:	9b02      	ldr	r3, [sp, #8]
9001ebb2:	9a02      	ldr	r2, [sp, #8]
9001ebb4:	42ab      	cmp	r3, r5
9001ebb6:	bfa8      	it	ge
9001ebb8:	462b      	movge	r3, r5
9001ebba:	eba2 0803 	sub.w	r8, r2, r3
9001ebbe:	1aed      	subs	r5, r5, r3
9001ebc0:	e627      	b.n	9001e812 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001ebc2:	f108 38ff 	add.w	r8, r8, #4294967295
9001ebc6:	fa1f f986 	uxth.w	r9, r6
9001ebca:	2500      	movs	r5, #0
9001ebcc:	2701      	movs	r7, #1
9001ebce:	e76f      	b.n	9001eab0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001ebd0:	24000180 	.word	0x24000180
9001ebd4:	24000280 	.word	0x24000280
9001ebd8:	240234b6 	.word	0x240234b6
9001ebdc:	240234bc 	.word	0x240234bc

9001ebe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ebe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebe4:	b08f      	sub	sp, #60	@ 0x3c
9001ebe6:	461c      	mov	r4, r3
9001ebe8:	460f      	mov	r7, r1
9001ebea:	9203      	str	r2, [sp, #12]
9001ebec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ebf0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001ebf2:	9202      	str	r2, [sp, #8]
9001ebf4:	2a00      	cmp	r2, #0
9001ebf6:	f000 8128 	beq.w	9001ee4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001ebfa:	6820      	ldr	r0, [r4, #0]
9001ebfc:	aa0a      	add	r2, sp, #40	@ 0x28
9001ebfe:	6861      	ldr	r1, [r4, #4]
9001ec00:	c203      	stmia	r2!, {r0, r1}
9001ec02:	6818      	ldr	r0, [r3, #0]
9001ec04:	aa0c      	add	r2, sp, #48	@ 0x30
9001ec06:	6859      	ldr	r1, [r3, #4]
9001ec08:	c203      	stmia	r2!, {r0, r1}
9001ec0a:	a80a      	add	r0, sp, #40	@ 0x28
9001ec0c:	f7f8 f986 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ec10:	4621      	mov	r1, r4
9001ec12:	a80c      	add	r0, sp, #48	@ 0x30
9001ec14:	f7f8 f9aa 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ec18:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001ec1c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001ec20:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ec24:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001ec28:	bfdb      	ittet	le
9001ec2a:	b2b3      	uxthle	r3, r6
9001ec2c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001ec30:	2301      	movgt	r3, #1
9001ec32:	fb92 f3f3 	sdivle	r3, r2, r3
9001ec36:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001ec3a:	441d      	add	r5, r3
9001ec3c:	fb92 f1f3 	sdiv	r1, r2, r3
9001ec40:	fa1f fc81 	uxth.w	ip, r1
9001ec44:	3d01      	subs	r5, #1
9001ec46:	fb0c 2413 	mls	r4, ip, r3, r2
9001ec4a:	4661      	mov	r1, ip
9001ec4c:	fb14 f406 	smulbb	r4, r4, r6
9001ec50:	4404      	add	r4, r0
9001ec52:	fb95 f5f3 	sdiv	r5, r5, r3
9001ec56:	b2a4      	uxth	r4, r4
9001ec58:	b121      	cbz	r1, 9001ec64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001ec5a:	9b03      	ldr	r3, [sp, #12]
9001ec5c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ec60:	ba1b      	rev	r3, r3
9001ec62:	441f      	add	r7, r3
9001ec64:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001ec68:	b2ad      	uxth	r5, r5
9001ec6a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001ec6e:	4418      	add	r0, r3
9001ec70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001ec74:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001ec78:	00ad      	lsls	r5, r5, #2
9001ec7a:	441a      	add	r2, r3
9001ec7c:	4b74      	ldr	r3, [pc, #464]	@ (9001ee50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ec7e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001ec82:	6818      	ldr	r0, [r3, #0]
9001ec84:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001ec88:	6803      	ldr	r3, [r0, #0]
9001ec8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ec8c:	4798      	blx	r3
9001ec8e:	4a71      	ldr	r2, [pc, #452]	@ (9001ee54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001ec90:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001ec94:	2c00      	cmp	r4, #0
9001ec96:	8813      	ldrh	r3, [r2, #0]
9001ec98:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001ec9c:	bf0c      	ite	eq
9001ec9e:	46c8      	moveq	r8, r9
9001eca0:	f04f 0800 	movne.w	r8, #0
9001eca4:	9209      	str	r2, [sp, #36]	@ 0x24
9001eca6:	fb03 c101 	mla	r1, r3, r1, ip
9001ecaa:	4373      	muls	r3, r6
9001ecac:	fa1f f888 	uxth.w	r8, r8
9001ecb0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ecb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ecb8:	9304      	str	r3, [sp, #16]
9001ecba:	1d2b      	adds	r3, r5, #4
9001ecbc:	9305      	str	r3, [sp, #20]
9001ecbe:	2300      	movs	r3, #0
9001ecc0:	9301      	str	r3, [sp, #4]
9001ecc2:	9a04      	ldr	r2, [sp, #16]
9001ecc4:	4282      	cmp	r2, r0
9001ecc6:	f240 80bb 	bls.w	9001ee40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001ecca:	b95b      	cbnz	r3, 9001ece4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001eccc:	783a      	ldrb	r2, [r7, #0]
9001ecce:	0993      	lsrs	r3, r2, #6
9001ecd0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ecd4:	9201      	str	r2, [sp, #4]
9001ecd6:	1e5a      	subs	r2, r3, #1
9001ecd8:	2a02      	cmp	r2, #2
9001ecda:	bf8d      	iteet	hi
9001ecdc:	787b      	ldrbhi	r3, [r7, #1]
9001ecde:	3701      	addls	r7, #1
9001ece0:	b29b      	uxthls	r3, r3
9001ece2:	3702      	addhi	r7, #2
9001ece4:	b184      	cbz	r4, 9001ed08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ece6:	429c      	cmp	r4, r3
9001ece8:	bf91      	iteee	ls
9001ecea:	1b1c      	subls	r4, r3, r4
9001ecec:	1ae4      	subhi	r4, r4, r3
9001ecee:	46c4      	movhi	ip, r8
9001ecf0:	f04f 0a00 	movhi.w	sl, #0
9001ecf4:	bf9b      	ittet	ls
9001ecf6:	fa1f fa84 	uxthls.w	sl, r4
9001ecfa:	2400      	movls	r4, #0
9001ecfc:	b2a4      	uxthhi	r4, r4
9001ecfe:	fa1f fc89 	uxthls.w	ip, r9
9001ed02:	4653      	mov	r3, sl
9001ed04:	46e0      	mov	r8, ip
9001ed06:	e7dc      	b.n	9001ecc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001ed08:	2204      	movs	r2, #4
9001ed0a:	9905      	ldr	r1, [sp, #20]
9001ed0c:	4543      	cmp	r3, r8
9001ed0e:	4615      	mov	r5, r2
9001ed10:	9a01      	ldr	r2, [sp, #4]
9001ed12:	bf24      	itt	cs
9001ed14:	eba3 0a08 	subcs.w	sl, r3, r8
9001ed18:	46c6      	movcs	lr, r8
9001ed1a:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ed1e:	9903      	ldr	r1, [sp, #12]
9001ed20:	bf3c      	itt	cc
9001ed22:	eba8 0c03 	subcc.w	ip, r8, r3
9001ed26:	469e      	movcc	lr, r3
9001ed28:	588a      	ldr	r2, [r1, r2]
9001ed2a:	bf26      	itte	cs
9001ed2c:	fa1f fa8a 	uxthcs.w	sl, sl
9001ed30:	46a4      	movcs	ip, r4
9001ed32:	fa1f fc8c 	uxthcc.w	ip, ip
9001ed36:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001ed3a:	bf38      	it	cc
9001ed3c:	46a2      	movcc	sl, r4
9001ed3e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001ed42:	2900      	cmp	r1, #0
9001ed44:	d066      	beq.n	9001ee14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001ed46:	29ff      	cmp	r1, #255	@ 0xff
9001ed48:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001ed4c:	d114      	bne.n	9001ed78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ed4e:	9d02      	ldr	r5, [sp, #8]
9001ed50:	2dff      	cmp	r5, #255	@ 0xff
9001ed52:	d111      	bne.n	9001ed78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ed54:	0951      	lsrs	r1, r2, #5
9001ed56:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ed5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ed5e:	4486      	add	lr, r0
9001ed60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ed64:	f026 0607 	bic.w	r6, r6, #7
9001ed68:	430e      	orrs	r6, r1
9001ed6a:	4316      	orrs	r6, r2
9001ed6c:	b2b6      	uxth	r6, r6
9001ed6e:	4586      	cmp	lr, r0
9001ed70:	d051      	beq.n	9001ee16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ed72:	f820 6b02 	strh.w	r6, [r0], #2
9001ed76:	e7fa      	b.n	9001ed6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ed78:	9d02      	ldr	r5, [sp, #8]
9001ed7a:	b2f6      	uxtb	r6, r6
9001ed7c:	4486      	add	lr, r0
9001ed7e:	4369      	muls	r1, r5
9001ed80:	1c4d      	adds	r5, r1, #1
9001ed82:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001ed86:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001ed8a:	b2d2      	uxtb	r2, r2
9001ed8c:	122d      	asrs	r5, r5, #8
9001ed8e:	ea6f 0b05 	mvn.w	fp, r5
9001ed92:	b2ad      	uxth	r5, r5
9001ed94:	fb11 f105 	smulbb	r1, r1, r5
9001ed98:	fa5f fb8b 	uxtb.w	fp, fp
9001ed9c:	fb16 f605 	smulbb	r6, r6, r5
9001eda0:	fb12 f205 	smulbb	r2, r2, r5
9001eda4:	b289      	uxth	r1, r1
9001eda6:	b2b6      	uxth	r6, r6
9001eda8:	b292      	uxth	r2, r2
9001edaa:	9106      	str	r1, [sp, #24]
9001edac:	9607      	str	r6, [sp, #28]
9001edae:	9208      	str	r2, [sp, #32]
9001edb0:	4586      	cmp	lr, r0
9001edb2:	d030      	beq.n	9001ee16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001edb4:	8802      	ldrh	r2, [r0, #0]
9001edb6:	9906      	ldr	r1, [sp, #24]
9001edb8:	1216      	asrs	r6, r2, #8
9001edba:	10d5      	asrs	r5, r2, #3
9001edbc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001edc0:	00d2      	lsls	r2, r2, #3
9001edc2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001edc6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001edca:	b2d2      	uxtb	r2, r2
9001edcc:	fb06 160b 	mla	r6, r6, fp, r1
9001edd0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001edd4:	9907      	ldr	r1, [sp, #28]
9001edd6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001edda:	b2b6      	uxth	r6, r6
9001eddc:	fb05 150b 	mla	r5, r5, fp, r1
9001ede0:	9908      	ldr	r1, [sp, #32]
9001ede2:	fb02 120b 	mla	r2, r2, fp, r1
9001ede6:	1c71      	adds	r1, r6, #1
9001ede8:	b2ad      	uxth	r5, r5
9001edea:	b292      	uxth	r2, r2
9001edec:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001edf0:	1c51      	adds	r1, r2, #1
9001edf2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001edf6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001edfa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001edfe:	4316      	orrs	r6, r2
9001ee00:	1c6a      	adds	r2, r5, #1
9001ee02:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ee06:	096d      	lsrs	r5, r5, #5
9001ee08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ee0c:	432e      	orrs	r6, r5
9001ee0e:	f820 6b02 	strh.w	r6, [r0], #2
9001ee12:	e7cd      	b.n	9001edb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001ee14:	4470      	add	r0, lr
9001ee16:	4543      	cmp	r3, r8
9001ee18:	f4ff af73 	bcc.w	9001ed02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ee1c:	fa1f fc89 	uxth.w	ip, r9
9001ee20:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001ee24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ee26:	eba4 040c 	sub.w	r4, r4, ip
9001ee2a:	881b      	ldrh	r3, [r3, #0]
9001ee2c:	b2a4      	uxth	r4, r4
9001ee2e:	eba3 0309 	sub.w	r3, r3, r9
9001ee32:	2c00      	cmp	r4, #0
9001ee34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee38:	bf18      	it	ne
9001ee3a:	f04f 0c00 	movne.w	ip, #0
9001ee3e:	e760      	b.n	9001ed02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ee40:	4b03      	ldr	r3, [pc, #12]	@ (9001ee50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ee42:	6818      	ldr	r0, [r3, #0]
9001ee44:	6803      	ldr	r3, [r0, #0]
9001ee46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ee48:	4798      	blx	r3
9001ee4a:	b00f      	add	sp, #60	@ 0x3c
9001ee4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ee50:	240234bc 	.word	0x240234bc
9001ee54:	240234b6 	.word	0x240234b6

9001ee58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ee58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee5c:	b093      	sub	sp, #76	@ 0x4c
9001ee5e:	461c      	mov	r4, r3
9001ee60:	9205      	str	r2, [sp, #20]
9001ee62:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001ee66:	9101      	str	r1, [sp, #4]
9001ee68:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001ee6a:	9202      	str	r2, [sp, #8]
9001ee6c:	2a00      	cmp	r2, #0
9001ee6e:	f000 812e 	beq.w	9001f0ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ee72:	6820      	ldr	r0, [r4, #0]
9001ee74:	aa0e      	add	r2, sp, #56	@ 0x38
9001ee76:	6861      	ldr	r1, [r4, #4]
9001ee78:	c203      	stmia	r2!, {r0, r1}
9001ee7a:	6818      	ldr	r0, [r3, #0]
9001ee7c:	aa10      	add	r2, sp, #64	@ 0x40
9001ee7e:	6859      	ldr	r1, [r3, #4]
9001ee80:	c203      	stmia	r2!, {r0, r1}
9001ee82:	a80e      	add	r0, sp, #56	@ 0x38
9001ee84:	f7f8 f84a 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ee88:	4621      	mov	r1, r4
9001ee8a:	a810      	add	r0, sp, #64	@ 0x40
9001ee8c:	f7f8 f86e 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ee90:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001ee94:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001ee98:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ee9c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001eea0:	bfdb      	ittet	le
9001eea2:	b2b3      	uxthle	r3, r6
9001eea4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001eea8:	2301      	movgt	r3, #1
9001eeaa:	fb92 f3f3 	sdivle	r3, r2, r3
9001eeae:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001eeb2:	441d      	add	r5, r3
9001eeb4:	fb92 f1f3 	sdiv	r1, r2, r3
9001eeb8:	fa1f fc81 	uxth.w	ip, r1
9001eebc:	3d01      	subs	r5, #1
9001eebe:	fb0c 2413 	mls	r4, ip, r3, r2
9001eec2:	4661      	mov	r1, ip
9001eec4:	fb14 f406 	smulbb	r4, r4, r6
9001eec8:	4404      	add	r4, r0
9001eeca:	fb95 f5f3 	sdiv	r5, r5, r3
9001eece:	b2a4      	uxth	r4, r4
9001eed0:	b131      	cbz	r1, 9001eee0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001eed2:	9b05      	ldr	r3, [sp, #20]
9001eed4:	9901      	ldr	r1, [sp, #4]
9001eed6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001eeda:	ba1b      	rev	r3, r3
9001eedc:	4419      	add	r1, r3
9001eede:	9101      	str	r1, [sp, #4]
9001eee0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001eee4:	b2ad      	uxth	r5, r5
9001eee6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001eeea:	4418      	add	r0, r3
9001eeec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001eef0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001eef4:	00ad      	lsls	r5, r5, #2
9001eef6:	441a      	add	r2, r3
9001eef8:	4b76      	ldr	r3, [pc, #472]	@ (9001f0d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001eefa:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001eefe:	6818      	ldr	r0, [r3, #0]
9001ef00:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001ef04:	6803      	ldr	r3, [r0, #0]
9001ef06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ef08:	4798      	blx	r3
9001ef0a:	4973      	ldr	r1, [pc, #460]	@ (9001f0d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001ef0c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001ef10:	2c00      	cmp	r4, #0
9001ef12:	880b      	ldrh	r3, [r1, #0]
9001ef14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001ef18:	910d      	str	r1, [sp, #52]	@ 0x34
9001ef1a:	fb03 c202 	mla	r2, r3, r2, ip
9001ef1e:	bf08      	it	eq
9001ef20:	46dc      	moveq	ip, fp
9001ef22:	fb03 f306 	mul.w	r3, r3, r6
9001ef26:	bf18      	it	ne
9001ef28:	f04f 0c00 	movne.w	ip, #0
9001ef2c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ef30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ef34:	fa1f fc8c 	uxth.w	ip, ip
9001ef38:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ef3c:	9106      	str	r1, [sp, #24]
9001ef3e:	9308      	str	r3, [sp, #32]
9001ef40:	1d2b      	adds	r3, r5, #4
9001ef42:	9309      	str	r3, [sp, #36]	@ 0x24
9001ef44:	9b02      	ldr	r3, [sp, #8]
9001ef46:	43da      	mvns	r2, r3
9001ef48:	2300      	movs	r3, #0
9001ef4a:	b2d2      	uxtb	r2, r2
9001ef4c:	9303      	str	r3, [sp, #12]
9001ef4e:	9207      	str	r2, [sp, #28]
9001ef50:	9a08      	ldr	r2, [sp, #32]
9001ef52:	4282      	cmp	r2, r0
9001ef54:	f240 80b6 	bls.w	9001f0c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ef58:	b963      	cbnz	r3, 9001ef74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ef5a:	9b01      	ldr	r3, [sp, #4]
9001ef5c:	781a      	ldrb	r2, [r3, #0]
9001ef5e:	0993      	lsrs	r3, r2, #6
9001ef60:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ef64:	9203      	str	r2, [sp, #12]
9001ef66:	1e5a      	subs	r2, r3, #1
9001ef68:	2a02      	cmp	r2, #2
9001ef6a:	d815      	bhi.n	9001ef98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ef6c:	9a01      	ldr	r2, [sp, #4]
9001ef6e:	b29b      	uxth	r3, r3
9001ef70:	3201      	adds	r2, #1
9001ef72:	9201      	str	r2, [sp, #4]
9001ef74:	b1b4      	cbz	r4, 9001efa4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ef76:	429c      	cmp	r4, r3
9001ef78:	bf91      	iteee	ls
9001ef7a:	1b1c      	subls	r4, r3, r4
9001ef7c:	1ae4      	subhi	r4, r4, r3
9001ef7e:	4666      	movhi	r6, ip
9001ef80:	f04f 0800 	movhi.w	r8, #0
9001ef84:	bf9b      	ittet	ls
9001ef86:	fa1f f884 	uxthls.w	r8, r4
9001ef8a:	2400      	movls	r4, #0
9001ef8c:	b2a4      	uxthhi	r4, r4
9001ef8e:	fa1f f68b 	uxthls.w	r6, fp
9001ef92:	4643      	mov	r3, r8
9001ef94:	46b4      	mov	ip, r6
9001ef96:	e7db      	b.n	9001ef50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ef98:	9a01      	ldr	r2, [sp, #4]
9001ef9a:	9b01      	ldr	r3, [sp, #4]
9001ef9c:	3202      	adds	r2, #2
9001ef9e:	785b      	ldrb	r3, [r3, #1]
9001efa0:	9201      	str	r2, [sp, #4]
9001efa2:	e7e7      	b.n	9001ef74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001efa4:	2203      	movs	r2, #3
9001efa6:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001efa8:	4563      	cmp	r3, ip
9001efaa:	4615      	mov	r5, r2
9001efac:	9a03      	ldr	r2, [sp, #12]
9001efae:	bf2c      	ite	cs
9001efb0:	eba3 080c 	subcs.w	r8, r3, ip
9001efb4:	ebac 0603 	subcc.w	r6, ip, r3
9001efb8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001efbc:	9905      	ldr	r1, [sp, #20]
9001efbe:	bf24      	itt	cs
9001efc0:	fa1f f888 	uxthcs.w	r8, r8
9001efc4:	46e1      	movcs	r9, ip
9001efc6:	eb01 0502 	add.w	r5, r1, r2
9001efca:	9902      	ldr	r1, [sp, #8]
9001efcc:	bf2f      	iteee	cs
9001efce:	4626      	movcs	r6, r4
9001efd0:	b2b6      	uxthcc	r6, r6
9001efd2:	4699      	movcc	r9, r3
9001efd4:	46a0      	movcc	r8, r4
9001efd6:	29ff      	cmp	r1, #255	@ 0xff
9001efd8:	d04a      	beq.n	9001f070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001efda:	9f06      	ldr	r7, [sp, #24]
9001efdc:	46ca      	mov	sl, r9
9001efde:	78a9      	ldrb	r1, [r5, #2]
9001efe0:	9004      	str	r0, [sp, #16]
9001efe2:	4379      	muls	r1, r7
9001efe4:	910a      	str	r1, [sp, #40]	@ 0x28
9001efe6:	7869      	ldrb	r1, [r5, #1]
9001efe8:	4379      	muls	r1, r7
9001efea:	910b      	str	r1, [sp, #44]	@ 0x2c
9001efec:	9905      	ldr	r1, [sp, #20]
9001efee:	5c8a      	ldrb	r2, [r1, r2]
9001eff0:	437a      	muls	r2, r7
9001eff2:	920c      	str	r2, [sp, #48]	@ 0x30
9001eff4:	f1ba 0f00 	cmp.w	sl, #0
9001eff8:	d03d      	beq.n	9001f076 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001effa:	9a04      	ldr	r2, [sp, #16]
9001effc:	f10a 3aff 	add.w	sl, sl, #4294967295
9001f000:	9f07      	ldr	r7, [sp, #28]
9001f002:	8812      	ldrh	r2, [r2, #0]
9001f004:	fa1f fa8a 	uxth.w	sl, sl
9001f008:	46be      	mov	lr, r7
9001f00a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001f00c:	1215      	asrs	r5, r2, #8
9001f00e:	10d1      	asrs	r1, r2, #3
9001f010:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f014:	00d2      	lsls	r2, r2, #3
9001f016:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f01a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f01e:	b2d2      	uxtb	r2, r2
9001f020:	fb05 750e 	mla	r5, r5, lr, r7
9001f024:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f028:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001f02a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f02e:	b2ad      	uxth	r5, r5
9001f030:	fb01 710e 	mla	r1, r1, lr, r7
9001f034:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001f036:	fb02 720e 	mla	r2, r2, lr, r7
9001f03a:	f105 0e01 	add.w	lr, r5, #1
9001f03e:	b289      	uxth	r1, r1
9001f040:	b292      	uxth	r2, r2
9001f042:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f046:	f102 0e01 	add.w	lr, r2, #1
9001f04a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f04e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001f052:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f056:	4315      	orrs	r5, r2
9001f058:	1c4a      	adds	r2, r1, #1
9001f05a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f05e:	9a04      	ldr	r2, [sp, #16]
9001f060:	0949      	lsrs	r1, r1, #5
9001f062:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f066:	430d      	orrs	r5, r1
9001f068:	f822 5b02 	strh.w	r5, [r2], #2
9001f06c:	9204      	str	r2, [sp, #16]
9001f06e:	e7c1      	b.n	9001eff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001f070:	4649      	mov	r1, r9
9001f072:	4686      	mov	lr, r0
9001f074:	b999      	cbnz	r1, 9001f09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001f076:	4563      	cmp	r3, ip
9001f078:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001f07c:	d389      	bcc.n	9001ef92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f07e:	fa1f f68b 	uxth.w	r6, fp
9001f082:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001f086:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f088:	1ba4      	subs	r4, r4, r6
9001f08a:	881b      	ldrh	r3, [r3, #0]
9001f08c:	b2a4      	uxth	r4, r4
9001f08e:	eba3 030b 	sub.w	r3, r3, fp
9001f092:	2c00      	cmp	r4, #0
9001f094:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f098:	bf18      	it	ne
9001f09a:	2600      	movne	r6, #0
9001f09c:	e779      	b.n	9001ef92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f09e:	78aa      	ldrb	r2, [r5, #2]
9001f0a0:	3901      	subs	r1, #1
9001f0a2:	4f0e      	ldr	r7, [pc, #56]	@ (9001f0dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001f0a4:	b289      	uxth	r1, r1
9001f0a6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001f0aa:	786a      	ldrb	r2, [r5, #1]
9001f0ac:	00d2      	lsls	r2, r2, #3
9001f0ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f0b2:	ea4a 0202 	orr.w	r2, sl, r2
9001f0b6:	f895 a000 	ldrb.w	sl, [r5]
9001f0ba:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001f0be:	f82e 2b02 	strh.w	r2, [lr], #2
9001f0c2:	e7d7      	b.n	9001f074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001f0c4:	4b03      	ldr	r3, [pc, #12]	@ (9001f0d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f0c6:	6818      	ldr	r0, [r3, #0]
9001f0c8:	6803      	ldr	r3, [r0, #0]
9001f0ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f0cc:	4798      	blx	r3
9001f0ce:	b013      	add	sp, #76	@ 0x4c
9001f0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f0d4:	240234bc 	.word	0x240234bc
9001f0d8:	240234b6 	.word	0x240234b6
9001f0dc:	fffff800 	.word	0xfffff800

9001f0e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f0e4:	b09d      	sub	sp, #116	@ 0x74
9001f0e6:	461c      	mov	r4, r3
9001f0e8:	4683      	mov	fp, r0
9001f0ea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f0ec:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001f0f0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001f0f4:	920e      	str	r2, [sp, #56]	@ 0x38
9001f0f6:	2a00      	cmp	r2, #0
9001f0f8:	f000 81e4 	beq.w	9001f4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f0fc:	6820      	ldr	r0, [r4, #0]
9001f0fe:	aa18      	add	r2, sp, #96	@ 0x60
9001f100:	6861      	ldr	r1, [r4, #4]
9001f102:	c203      	stmia	r2!, {r0, r1}
9001f104:	6818      	ldr	r0, [r3, #0]
9001f106:	aa1a      	add	r2, sp, #104	@ 0x68
9001f108:	6859      	ldr	r1, [r3, #4]
9001f10a:	c203      	stmia	r2!, {r0, r1}
9001f10c:	a818      	add	r0, sp, #96	@ 0x60
9001f10e:	f7f7 ff05 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f112:	4621      	mov	r1, r4
9001f114:	a81a      	add	r0, sp, #104	@ 0x68
9001f116:	f7f7 ff29 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f11a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001f11e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001f122:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f126:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f12a:	bfdb      	ittet	le
9001f12c:	b29a      	uxthle	r2, r3
9001f12e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f132:	2201      	movgt	r2, #1
9001f134:	fb91 f2f2 	sdivle	r2, r1, r2
9001f138:	9202      	str	r2, [sp, #8]
9001f13a:	9802      	ldr	r0, [sp, #8]
9001f13c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001f140:	9902      	ldr	r1, [sp, #8]
9001f142:	fb92 f0f0 	sdiv	r0, r2, r0
9001f146:	b280      	uxth	r0, r0
9001f148:	440c      	add	r4, r1
9001f14a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001f14c:	3c01      	subs	r4, #1
9001f14e:	9802      	ldr	r0, [sp, #8]
9001f150:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001f152:	fb05 2510 	mls	r5, r5, r0, r2
9001f156:	fb94 f4f1 	sdiv	r4, r4, r1
9001f15a:	fb15 f503 	smulbb	r5, r5, r3
9001f15e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001f162:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001f166:	3401      	adds	r4, #1
9001f168:	440d      	add	r5, r1
9001f16a:	4419      	add	r1, r3
9001f16c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001f170:	b2a4      	uxth	r4, r4
9001f172:	441a      	add	r2, r3
9001f174:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f178:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001f17c:	00a4      	lsls	r4, r4, #2
9001f17e:	9306      	str	r3, [sp, #24]
9001f180:	b2ad      	uxth	r5, r5
9001f182:	4bb3      	ldr	r3, [pc, #716]	@ (9001f450 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f184:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001f188:	6818      	ldr	r0, [r3, #0]
9001f18a:	6803      	ldr	r3, [r0, #0]
9001f18c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f18e:	4798      	blx	r3
9001f190:	4bb0      	ldr	r3, [pc, #704]	@ (9001f454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f192:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001f196:	2d00      	cmp	r5, #0
9001f198:	881a      	ldrh	r2, [r3, #0]
9001f19a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001f19e:	fb02 f606 	mul.w	r6, r2, r6
9001f1a2:	fb02 7101 	mla	r1, r2, r1, r7
9001f1a6:	9316      	str	r3, [sp, #88]	@ 0x58
9001f1a8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f1ac:	4baa      	ldr	r3, [pc, #680]	@ (9001f458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f1ae:	bf18      	it	ne
9001f1b0:	2100      	movne	r1, #0
9001f1b2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f1b6:	eba3 030b 	sub.w	r3, r3, fp
9001f1ba:	920a      	str	r2, [sp, #40]	@ 0x28
9001f1bc:	f104 0204 	add.w	r2, r4, #4
9001f1c0:	9317      	str	r3, [sp, #92]	@ 0x5c
9001f1c2:	9213      	str	r2, [sp, #76]	@ 0x4c
9001f1c4:	9a06      	ldr	r2, [sp, #24]
9001f1c6:	bf08      	it	eq
9001f1c8:	4611      	moveq	r1, r2
9001f1ca:	2200      	movs	r2, #0
9001f1cc:	b289      	uxth	r1, r1
9001f1ce:	920d      	str	r2, [sp, #52]	@ 0x34
9001f1d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f1d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f1d4:	fa12 f383 	uxtah	r3, r2, r3
9001f1d8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f1da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f1de:	3304      	adds	r3, #4
9001f1e0:	9308      	str	r3, [sp, #32]
9001f1e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f1e4:	4543      	cmp	r3, r8
9001f1e6:	f240 8168 	bls.w	9001f4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f1ea:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001f1ee:	f04f 0e01 	mov.w	lr, #1
9001f1f2:	9a02      	ldr	r2, [sp, #8]
9001f1f4:	9808      	ldr	r0, [sp, #32]
9001f1f6:	fbb5 f3f3 	udiv	r3, r5, r3
9001f1fa:	1ad3      	subs	r3, r2, r3
9001f1fc:	7800      	ldrb	r0, [r0, #0]
9001f1fe:	b29b      	uxth	r3, r3
9001f200:	9010      	str	r0, [sp, #64]	@ 0x40
9001f202:	3001      	adds	r0, #1
9001f204:	9314      	str	r3, [sp, #80]	@ 0x50
9001f206:	9b08      	ldr	r3, [sp, #32]
9001f208:	9007      	str	r0, [sp, #28]
9001f20a:	785a      	ldrb	r2, [r3, #1]
9001f20c:	789b      	ldrb	r3, [r3, #2]
9001f20e:	021b      	lsls	r3, r3, #8
9001f210:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f214:	9a08      	ldr	r2, [sp, #32]
9001f216:	78d2      	ldrb	r2, [r2, #3]
9001f218:	4313      	orrs	r3, r2
9001f21a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f21c:	441a      	add	r2, r3
9001f21e:	1c50      	adds	r0, r2, #1
9001f220:	7852      	ldrb	r2, [r2, #1]
9001f222:	9005      	str	r0, [sp, #20]
9001f224:	0212      	lsls	r2, r2, #8
9001f226:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f228:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f22c:	5cc3      	ldrb	r3, [r0, r3]
9001f22e:	431a      	orrs	r2, r3
9001f230:	b293      	uxth	r3, r2
9001f232:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001f236:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f238:	2300      	movs	r3, #0
9001f23a:	9309      	str	r3, [sp, #36]	@ 0x24
9001f23c:	2301      	movs	r3, #1
9001f23e:	9301      	str	r3, [sp, #4]
9001f240:	9304      	str	r3, [sp, #16]
9001f242:	2300      	movs	r3, #0
9001f244:	9303      	str	r3, [sp, #12]
9001f246:	2d00      	cmp	r5, #0
9001f248:	d07d      	beq.n	9001f346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f24a:	45ae      	cmp	lr, r5
9001f24c:	d26c      	bcs.n	9001f328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f24e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f250:	eba5 050e 	sub.w	r5, r5, lr
9001f254:	460c      	mov	r4, r1
9001f256:	4543      	cmp	r3, r8
9001f258:	b2ad      	uxth	r5, r5
9001f25a:	d802      	bhi.n	9001f262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f25c:	e071      	b.n	9001f342 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f25e:	2b00      	cmp	r3, #0
9001f260:	d15d      	bne.n	9001f31e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f262:	9b05      	ldr	r3, [sp, #20]
9001f264:	9a04      	ldr	r2, [sp, #16]
9001f266:	785b      	ldrb	r3, [r3, #1]
9001f268:	f1c2 0207 	rsb	r2, r2, #7
9001f26c:	9904      	ldr	r1, [sp, #16]
9001f26e:	4093      	lsls	r3, r2
9001f270:	005b      	lsls	r3, r3, #1
9001f272:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f276:	9b05      	ldr	r3, [sp, #20]
9001f278:	781b      	ldrb	r3, [r3, #0]
9001f27a:	410b      	asrs	r3, r1
9001f27c:	3101      	adds	r1, #1
9001f27e:	b2c9      	uxtb	r1, r1
9001f280:	b2db      	uxtb	r3, r3
9001f282:	2908      	cmp	r1, #8
9001f284:	9104      	str	r1, [sp, #16]
9001f286:	9905      	ldr	r1, [sp, #20]
9001f288:	ea43 0302 	orr.w	r3, r3, r2
9001f28c:	bf0c      	ite	eq
9001f28e:	3102      	addeq	r1, #2
9001f290:	3101      	addne	r1, #1
9001f292:	b29a      	uxth	r2, r3
9001f294:	bf05      	ittet	eq
9001f296:	9105      	streq	r1, [sp, #20]
9001f298:	2100      	moveq	r1, #0
9001f29a:	9105      	strne	r1, [sp, #20]
9001f29c:	9104      	streq	r1, [sp, #16]
9001f29e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001f2a0:	4291      	cmp	r1, r2
9001f2a2:	d30a      	bcc.n	9001f2ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f2a4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001f2a8:	2301      	movs	r3, #1
9001f2aa:	9907      	ldr	r1, [sp, #28]
9001f2ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f2b0:	d30f      	bcc.n	9001f2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f2b2:	2100      	movs	r1, #0
9001f2b4:	9301      	str	r3, [sp, #4]
9001f2b6:	9103      	str	r1, [sp, #12]
9001f2b8:	e032      	b.n	9001f320 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f2ba:	9b07      	ldr	r3, [sp, #28]
9001f2bc:	429a      	cmp	r2, r3
9001f2be:	d318      	bcc.n	9001f2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f2c0:	9b01      	ldr	r3, [sp, #4]
9001f2c2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001f2c6:	445b      	add	r3, fp
9001f2c8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f2cc:	9b01      	ldr	r3, [sp, #4]
9001f2ce:	3301      	adds	r3, #1
9001f2d0:	b29b      	uxth	r3, r3
9001f2d2:	9907      	ldr	r1, [sp, #28]
9001f2d4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001f2d8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f2dc:	7108      	strb	r0, [r1, #4]
9001f2de:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f2e0:	80c8      	strh	r0, [r1, #6]
9001f2e2:	9801      	ldr	r0, [sp, #4]
9001f2e4:	3001      	adds	r0, #1
9001f2e6:	7148      	strb	r0, [r1, #5]
9001f2e8:	9907      	ldr	r1, [sp, #28]
9001f2ea:	3101      	adds	r1, #1
9001f2ec:	b289      	uxth	r1, r1
9001f2ee:	9107      	str	r1, [sp, #28]
9001f2f0:	e7df      	b.n	9001f2b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f2f2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f2f6:	4611      	mov	r1, r2
9001f2f8:	795b      	ldrb	r3, [r3, #5]
9001f2fa:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001f2fe:	4458      	add	r0, fp
9001f300:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001f302:	4406      	add	r6, r0
9001f304:	2e00      	cmp	r6, #0
9001f306:	dd06      	ble.n	9001f316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f308:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f30c:	790e      	ldrb	r6, [r1, #4]
9001f30e:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f312:	88c9      	ldrh	r1, [r1, #6]
9001f314:	e7f4      	b.n	9001f300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f316:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001f31a:	b29b      	uxth	r3, r3
9001f31c:	e7c5      	b.n	9001f2aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f31e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f320:	4621      	mov	r1, r4
9001f322:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f324:	469e      	mov	lr, r3
9001f326:	e78e      	b.n	9001f246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f328:	9a03      	ldr	r2, [sp, #12]
9001f32a:	ebae 0305 	sub.w	r3, lr, r5
9001f32e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f332:	442a      	add	r2, r5
9001f334:	b29b      	uxth	r3, r3
9001f336:	b292      	uxth	r2, r2
9001f338:	9203      	str	r2, [sp, #12]
9001f33a:	2500      	movs	r5, #0
9001f33c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f33e:	4542      	cmp	r2, r8
9001f340:	d88d      	bhi.n	9001f25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f342:	4621      	mov	r1, r4
9001f344:	e74d      	b.n	9001f1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f346:	458e      	cmp	lr, r1
9001f348:	f04f 0900 	mov.w	r9, #0
9001f34c:	bf2b      	itete	cs
9001f34e:	ebae 0301 	subcs.w	r3, lr, r1
9001f352:	eba1 040e 	subcc.w	r4, r1, lr
9001f356:	462c      	movcs	r4, r5
9001f358:	462b      	movcc	r3, r5
9001f35a:	bf27      	ittee	cs
9001f35c:	b29b      	uxthcs	r3, r3
9001f35e:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001f360:	b2a4      	uxthcc	r4, r4
9001f362:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001f366:	9a03      	ldr	r2, [sp, #12]
9001f368:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001f36a:	444a      	add	r2, r9
9001f36c:	4548      	cmp	r0, r9
9001f36e:	b292      	uxth	r2, r2
9001f370:	d074      	beq.n	9001f45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f372:	2004      	movs	r0, #4
9001f374:	445a      	add	r2, fp
9001f376:	4605      	mov	r5, r0
9001f378:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001f37c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f37e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f382:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f384:	5880      	ldr	r0, [r0, r2]
9001f386:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f38a:	d014      	beq.n	9001f3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f38c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f390:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f394:	d112      	bne.n	9001f3bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f396:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f398:	2aff      	cmp	r2, #255	@ 0xff
9001f39a:	d10f      	bne.n	9001f3bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f39c:	0942      	lsrs	r2, r0, #5
9001f39e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001f3a2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f3a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f3aa:	f025 0507 	bic.w	r5, r5, #7
9001f3ae:	4315      	orrs	r5, r2
9001f3b0:	4305      	orrs	r5, r0
9001f3b2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f3b6:	f109 0901 	add.w	r9, r9, #1
9001f3ba:	e7d4      	b.n	9001f366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f3bc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f3c0:	b2ed      	uxtb	r5, r5
9001f3c2:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f3c6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f3ca:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001f3ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f3d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f3d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f3da:	9215      	str	r2, [sp, #84]	@ 0x54
9001f3dc:	fa5f fc8c 	uxtb.w	ip, ip
9001f3e0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f3e2:	b2c0      	uxtb	r0, r0
9001f3e4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f3e8:	fb02 fa0a 	mul.w	sl, r2, sl
9001f3ec:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f3f0:	f10a 0201 	add.w	r2, sl, #1
9001f3f4:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f3f8:	1212      	asrs	r2, r2, #8
9001f3fa:	fa1f fa82 	uxth.w	sl, r2
9001f3fe:	43d2      	mvns	r2, r2
9001f400:	fb16 f60a 	smulbb	r6, r6, sl
9001f404:	b2d2      	uxtb	r2, r2
9001f406:	fb10 f00a 	smulbb	r0, r0, sl
9001f40a:	fb07 6702 	mla	r7, r7, r2, r6
9001f40e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001f410:	fb0c 0002 	mla	r0, ip, r2, r0
9001f414:	fb15 f50a 	smulbb	r5, r5, sl
9001f418:	b2bf      	uxth	r7, r7
9001f41a:	b280      	uxth	r0, r0
9001f41c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f420:	fb06 5602 	mla	r6, r6, r2, r5
9001f424:	1c7a      	adds	r2, r7, #1
9001f426:	1c45      	adds	r5, r0, #1
9001f428:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f42c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f430:	b2b6      	uxth	r6, r6
9001f432:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f436:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f43a:	432f      	orrs	r7, r5
9001f43c:	1c75      	adds	r5, r6, #1
9001f43e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f442:	096d      	lsrs	r5, r5, #5
9001f444:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f448:	432f      	orrs	r7, r5
9001f44a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f44e:	e7b2      	b.n	9001f3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f450:	240234bc 	.word	0x240234bc
9001f454:	240234b6 	.word	0x240234b6
9001f458:	fffff7fb 	.word	0xfffff7fb
9001f45c:	9203      	str	r2, [sp, #12]
9001f45e:	458e      	cmp	lr, r1
9001f460:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f462:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f466:	f4ff af68 	bcc.w	9001f33a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f46a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001f46c:	9906      	ldr	r1, [sp, #24]
9001f46e:	8812      	ldrh	r2, [r2, #0]
9001f470:	1a52      	subs	r2, r2, r1
9001f472:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001f474:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f478:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f47a:	3201      	adds	r2, #1
9001f47c:	428a      	cmp	r2, r1
9001f47e:	9209      	str	r2, [sp, #36]	@ 0x24
9001f480:	d111      	bne.n	9001f4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f482:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001f486:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001f48a:	9b06      	ldr	r3, [sp, #24]
9001f48c:	eba5 0509 	sub.w	r5, r5, r9
9001f490:	b2ad      	uxth	r5, r5
9001f492:	2d00      	cmp	r5, #0
9001f494:	bf08      	it	eq
9001f496:	4619      	moveq	r1, r3
9001f498:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f49a:	bf18      	it	ne
9001f49c:	2100      	movne	r1, #0
9001f49e:	3301      	adds	r3, #1
9001f4a0:	b289      	uxth	r1, r1
9001f4a2:	930d      	str	r3, [sp, #52]	@ 0x34
9001f4a4:	e694      	b.n	9001f1d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f4a6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f4aa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001f4ae:	1b2d      	subs	r5, r5, r4
9001f4b0:	b2ad      	uxth	r5, r5
9001f4b2:	2d00      	cmp	r5, #0
9001f4b4:	bf18      	it	ne
9001f4b6:	2400      	movne	r4, #0
9001f4b8:	e740      	b.n	9001f33c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f4ba:	4b04      	ldr	r3, [pc, #16]	@ (9001f4cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f4bc:	6818      	ldr	r0, [r3, #0]
9001f4be:	6803      	ldr	r3, [r0, #0]
9001f4c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f4c2:	4798      	blx	r3
9001f4c4:	b01d      	add	sp, #116	@ 0x74
9001f4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f4ca:	bf00      	nop
9001f4cc:	240234bc 	.word	0x240234bc

9001f4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f4d4:	b09f      	sub	sp, #124	@ 0x7c
9001f4d6:	461d      	mov	r5, r3
9001f4d8:	4604      	mov	r4, r0
9001f4da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f4dc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001f4e0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001f4e4:	920a      	str	r2, [sp, #40]	@ 0x28
9001f4e6:	2a00      	cmp	r2, #0
9001f4e8:	f000 81fe 	beq.w	9001f8e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f4ec:	6828      	ldr	r0, [r5, #0]
9001f4ee:	aa1a      	add	r2, sp, #104	@ 0x68
9001f4f0:	6869      	ldr	r1, [r5, #4]
9001f4f2:	c203      	stmia	r2!, {r0, r1}
9001f4f4:	6818      	ldr	r0, [r3, #0]
9001f4f6:	aa1c      	add	r2, sp, #112	@ 0x70
9001f4f8:	6859      	ldr	r1, [r3, #4]
9001f4fa:	c203      	stmia	r2!, {r0, r1}
9001f4fc:	a81a      	add	r0, sp, #104	@ 0x68
9001f4fe:	f7f7 fd0d 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f502:	4629      	mov	r1, r5
9001f504:	a81c      	add	r0, sp, #112	@ 0x70
9001f506:	f7f7 fd31 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f50a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f50e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f512:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f516:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001f51a:	bfdb      	ittet	le
9001f51c:	b29a      	uxthle	r2, r3
9001f51e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f522:	2201      	movgt	r2, #1
9001f524:	fb91 f2f2 	sdivle	r2, r1, r2
9001f528:	9201      	str	r2, [sp, #4]
9001f52a:	9801      	ldr	r0, [sp, #4]
9001f52c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001f530:	9901      	ldr	r1, [sp, #4]
9001f532:	fb92 f0f0 	sdiv	r0, r2, r0
9001f536:	b280      	uxth	r0, r0
9001f538:	440e      	add	r6, r1
9001f53a:	9010      	str	r0, [sp, #64]	@ 0x40
9001f53c:	3e01      	subs	r6, #1
9001f53e:	9801      	ldr	r0, [sp, #4]
9001f540:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001f542:	fb05 2510 	mls	r5, r5, r0, r2
9001f546:	fb96 f6f1 	sdiv	r6, r6, r1
9001f54a:	fb15 f503 	smulbb	r5, r5, r3
9001f54e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001f552:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001f556:	3601      	adds	r6, #1
9001f558:	440d      	add	r5, r1
9001f55a:	4419      	add	r1, r3
9001f55c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001f560:	b2b6      	uxth	r6, r6
9001f562:	441a      	add	r2, r3
9001f564:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001f568:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001f56c:	b2ad      	uxth	r5, r5
9001f56e:	9304      	str	r3, [sp, #16]
9001f570:	4b96      	ldr	r3, [pc, #600]	@ (9001f7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f572:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001f576:	6818      	ldr	r0, [r3, #0]
9001f578:	6803      	ldr	r3, [r0, #0]
9001f57a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f57c:	4798      	blx	r3
9001f57e:	4b94      	ldr	r3, [pc, #592]	@ (9001f7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f580:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001f584:	2d00      	cmp	r5, #0
9001f586:	881a      	ldrh	r2, [r3, #0]
9001f588:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001f58c:	fb02 f707 	mul.w	r7, r2, r7
9001f590:	fb02 c101 	mla	r1, r2, r1, ip
9001f594:	9318      	str	r3, [sp, #96]	@ 0x60
9001f596:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f59a:	4b8e      	ldr	r3, [pc, #568]	@ (9001f7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f59c:	bf18      	it	ne
9001f59e:	2100      	movne	r1, #0
9001f5a0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f5a4:	eba3 0304 	sub.w	r3, r3, r4
9001f5a8:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f5aa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f5ac:	9319      	str	r3, [sp, #100]	@ 0x64
9001f5ae:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f5b2:	f106 0204 	add.w	r2, r6, #4
9001f5b6:	9206      	str	r2, [sp, #24]
9001f5b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f5ba:	ea6f 0202 	mvn.w	r2, r2
9001f5be:	b2d2      	uxtb	r2, r2
9001f5c0:	9215      	str	r2, [sp, #84]	@ 0x54
9001f5c2:	9a04      	ldr	r2, [sp, #16]
9001f5c4:	bf08      	it	eq
9001f5c6:	4611      	moveq	r1, r2
9001f5c8:	2200      	movs	r2, #0
9001f5ca:	b289      	uxth	r1, r1
9001f5cc:	920d      	str	r2, [sp, #52]	@ 0x34
9001f5ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001f5d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f5d2:	fa12 f383 	uxtah	r3, r2, r3
9001f5d6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f5d8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f5dc:	3304      	adds	r3, #4
9001f5de:	9307      	str	r3, [sp, #28]
9001f5e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f5e2:	455b      	cmp	r3, fp
9001f5e4:	f240 817b 	bls.w	9001f8de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f5e8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001f5ec:	f04f 0801 	mov.w	r8, #1
9001f5f0:	9a01      	ldr	r2, [sp, #4]
9001f5f2:	9807      	ldr	r0, [sp, #28]
9001f5f4:	46c4      	mov	ip, r8
9001f5f6:	f8cd 8008 	str.w	r8, [sp, #8]
9001f5fa:	7800      	ldrb	r0, [r0, #0]
9001f5fc:	fbb5 f3f3 	udiv	r3, r5, r3
9001f600:	1ad3      	subs	r3, r2, r3
9001f602:	9011      	str	r0, [sp, #68]	@ 0x44
9001f604:	3001      	adds	r0, #1
9001f606:	b29b      	uxth	r3, r3
9001f608:	9005      	str	r0, [sp, #20]
9001f60a:	9316      	str	r3, [sp, #88]	@ 0x58
9001f60c:	9b07      	ldr	r3, [sp, #28]
9001f60e:	785a      	ldrb	r2, [r3, #1]
9001f610:	789b      	ldrb	r3, [r3, #2]
9001f612:	021b      	lsls	r3, r3, #8
9001f614:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f618:	9a07      	ldr	r2, [sp, #28]
9001f61a:	78d2      	ldrb	r2, [r2, #3]
9001f61c:	4313      	orrs	r3, r2
9001f61e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f620:	441a      	add	r2, r3
9001f622:	1c50      	adds	r0, r2, #1
9001f624:	7852      	ldrb	r2, [r2, #1]
9001f626:	9003      	str	r0, [sp, #12]
9001f628:	0212      	lsls	r2, r2, #8
9001f62a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f62c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f630:	5cc3      	ldrb	r3, [r0, r3]
9001f632:	431a      	orrs	r2, r3
9001f634:	b293      	uxth	r3, r2
9001f636:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001f63a:	930c      	str	r3, [sp, #48]	@ 0x30
9001f63c:	2300      	movs	r3, #0
9001f63e:	9308      	str	r3, [sp, #32]
9001f640:	461a      	mov	r2, r3
9001f642:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f646:	930e      	str	r3, [sp, #56]	@ 0x38
9001f648:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001f64c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f64e:	2d00      	cmp	r5, #0
9001f650:	d07d      	beq.n	9001f74e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f652:	45ac      	cmp	ip, r5
9001f654:	d26d      	bcs.n	9001f732 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f656:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f658:	eba5 050c 	sub.w	r5, r5, ip
9001f65c:	4608      	mov	r0, r1
9001f65e:	455b      	cmp	r3, fp
9001f660:	b2ad      	uxth	r5, r5
9001f662:	d802      	bhi.n	9001f66a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f664:	e071      	b.n	9001f74a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f666:	2b00      	cmp	r3, #0
9001f668:	d15d      	bne.n	9001f726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f66a:	9b03      	ldr	r3, [sp, #12]
9001f66c:	9a02      	ldr	r2, [sp, #8]
9001f66e:	785b      	ldrb	r3, [r3, #1]
9001f670:	f1c2 0207 	rsb	r2, r2, #7
9001f674:	9902      	ldr	r1, [sp, #8]
9001f676:	4093      	lsls	r3, r2
9001f678:	005b      	lsls	r3, r3, #1
9001f67a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f67e:	9b03      	ldr	r3, [sp, #12]
9001f680:	781b      	ldrb	r3, [r3, #0]
9001f682:	410b      	asrs	r3, r1
9001f684:	3101      	adds	r1, #1
9001f686:	b2c9      	uxtb	r1, r1
9001f688:	b2db      	uxtb	r3, r3
9001f68a:	2908      	cmp	r1, #8
9001f68c:	9102      	str	r1, [sp, #8]
9001f68e:	9903      	ldr	r1, [sp, #12]
9001f690:	ea43 0302 	orr.w	r3, r3, r2
9001f694:	bf0c      	ite	eq
9001f696:	3102      	addeq	r1, #2
9001f698:	3101      	addne	r1, #1
9001f69a:	b29a      	uxth	r2, r3
9001f69c:	bf05      	ittet	eq
9001f69e:	9103      	streq	r1, [sp, #12]
9001f6a0:	2100      	moveq	r1, #0
9001f6a2:	9103      	strne	r1, [sp, #12]
9001f6a4:	9102      	streq	r1, [sp, #8]
9001f6a6:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f6a8:	4291      	cmp	r1, r2
9001f6aa:	d30a      	bcc.n	9001f6c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f6ac:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001f6b0:	2301      	movs	r3, #1
9001f6b2:	9905      	ldr	r1, [sp, #20]
9001f6b4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f6b8:	d30f      	bcc.n	9001f6da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f6ba:	2100      	movs	r1, #0
9001f6bc:	4698      	mov	r8, r3
9001f6be:	9100      	str	r1, [sp, #0]
9001f6c0:	e032      	b.n	9001f728 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f6c2:	9b05      	ldr	r3, [sp, #20]
9001f6c4:	429a      	cmp	r2, r3
9001f6c6:	d318      	bcc.n	9001f6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f6c8:	eb04 0308 	add.w	r3, r4, r8
9001f6cc:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001f6d0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f6d4:	f108 0301 	add.w	r3, r8, #1
9001f6d8:	b29b      	uxth	r3, r3
9001f6da:	9905      	ldr	r1, [sp, #20]
9001f6dc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001f6e0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f6e4:	710e      	strb	r6, [r1, #4]
9001f6e6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001f6e8:	80ce      	strh	r6, [r1, #6]
9001f6ea:	f108 0601 	add.w	r6, r8, #1
9001f6ee:	714e      	strb	r6, [r1, #5]
9001f6f0:	9905      	ldr	r1, [sp, #20]
9001f6f2:	3101      	adds	r1, #1
9001f6f4:	b289      	uxth	r1, r1
9001f6f6:	9105      	str	r1, [sp, #20]
9001f6f8:	e7df      	b.n	9001f6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f6fa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f6fe:	4611      	mov	r1, r2
9001f700:	795b      	ldrb	r3, [r3, #5]
9001f702:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001f706:	4426      	add	r6, r4
9001f708:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001f70a:	4437      	add	r7, r6
9001f70c:	2f00      	cmp	r7, #0
9001f70e:	dd06      	ble.n	9001f71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f710:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f714:	790f      	ldrb	r7, [r1, #4]
9001f716:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f71a:	88c9      	ldrh	r1, [r1, #6]
9001f71c:	e7f4      	b.n	9001f708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f71e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001f722:	b29b      	uxth	r3, r3
9001f724:	e7c5      	b.n	9001f6b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f726:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f728:	920c      	str	r2, [sp, #48]	@ 0x30
9001f72a:	4601      	mov	r1, r0
9001f72c:	9a00      	ldr	r2, [sp, #0]
9001f72e:	469c      	mov	ip, r3
9001f730:	e78d      	b.n	9001f64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f732:	ebac 0305 	sub.w	r3, ip, r5
9001f736:	1957      	adds	r7, r2, r5
9001f738:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f73c:	b2ba      	uxth	r2, r7
9001f73e:	b29b      	uxth	r3, r3
9001f740:	9200      	str	r2, [sp, #0]
9001f742:	2500      	movs	r5, #0
9001f744:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f746:	455a      	cmp	r2, fp
9001f748:	d88d      	bhi.n	9001f666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f74a:	4601      	mov	r1, r0
9001f74c:	e748      	b.n	9001f5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f74e:	458c      	cmp	ip, r1
9001f750:	bf27      	ittee	cs
9001f752:	ebac 0301 	subcs.w	r3, ip, r1
9001f756:	4628      	movcs	r0, r5
9001f758:	eba1 000c 	subcc.w	r0, r1, ip
9001f75c:	462b      	movcc	r3, r5
9001f75e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001f760:	bf27      	ittee	cs
9001f762:	b29b      	uxthcs	r3, r3
9001f764:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001f766:	b280      	uxthcc	r0, r0
9001f768:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001f76c:	2dff      	cmp	r5, #255	@ 0xff
9001f76e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001f770:	eb02 0705 	add.w	r7, r2, r5
9001f774:	b2bd      	uxth	r5, r7
9001f776:	9500      	str	r5, [sp, #0]
9001f778:	d12e      	bne.n	9001f7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f77a:	465e      	mov	r6, fp
9001f77c:	9d00      	ldr	r5, [sp, #0]
9001f77e:	42aa      	cmp	r2, r5
9001f780:	f040 8083 	bne.w	9001f88a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f784:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f786:	458c      	cmp	ip, r1
9001f788:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f78c:	d3d9      	bcc.n	9001f742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f78e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001f790:	9904      	ldr	r1, [sp, #16]
9001f792:	8812      	ldrh	r2, [r2, #0]
9001f794:	1a52      	subs	r2, r2, r1
9001f796:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001f798:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f79c:	9a08      	ldr	r2, [sp, #32]
9001f79e:	3201      	adds	r2, #1
9001f7a0:	428a      	cmp	r2, r1
9001f7a2:	9208      	str	r2, [sp, #32]
9001f7a4:	f040 8091 	bne.w	9001f8ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f7a8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001f7ac:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001f7b0:	9b04      	ldr	r3, [sp, #16]
9001f7b2:	eba5 050c 	sub.w	r5, r5, ip
9001f7b6:	b2ad      	uxth	r5, r5
9001f7b8:	2d00      	cmp	r5, #0
9001f7ba:	bf08      	it	eq
9001f7bc:	4619      	moveq	r1, r3
9001f7be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f7c0:	bf18      	it	ne
9001f7c2:	2100      	movne	r1, #0
9001f7c4:	3301      	adds	r3, #1
9001f7c6:	b289      	uxth	r1, r1
9001f7c8:	930d      	str	r3, [sp, #52]	@ 0x34
9001f7ca:	e700      	b.n	9001f5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f7cc:	240234bc 	.word	0x240234bc
9001f7d0:	240234b6 	.word	0x240234b6
9001f7d4:	fffff7fb 	.word	0xfffff7fb
9001f7d8:	46d9      	mov	r9, fp
9001f7da:	9d00      	ldr	r5, [sp, #0]
9001f7dc:	42aa      	cmp	r2, r5
9001f7de:	d0d1      	beq.n	9001f784 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f7e0:	1c55      	adds	r5, r2, #1
9001f7e2:	4422      	add	r2, r4
9001f7e4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001f7e8:	9a06      	ldr	r2, [sp, #24]
9001f7ea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f7ee:	9517      	str	r5, [sp, #92]	@ 0x5c
9001f7f0:	4472      	add	r2, lr
9001f7f2:	9212      	str	r2, [sp, #72]	@ 0x48
9001f7f4:	f8b9 2000 	ldrh.w	r2, [r9]
9001f7f8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f7fa:	1216      	asrs	r6, r2, #8
9001f7fc:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f800:	10d5      	asrs	r5, r2, #3
9001f802:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f804:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f808:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f80c:	00d2      	lsls	r2, r2, #3
9001f80e:	fb1a fa07 	smulbb	sl, sl, r7
9001f812:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f816:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f818:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f81c:	b2d2      	uxtb	r2, r2
9001f81e:	fb06 a607 	mla	r6, r6, r7, sl
9001f822:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f824:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f828:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f82c:	b2b6      	uxth	r6, r6
9001f82e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f830:	fb1a fa07 	smulbb	sl, sl, r7
9001f834:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f836:	fb05 a507 	mla	r5, r5, r7, sl
9001f83a:	9f06      	ldr	r7, [sp, #24]
9001f83c:	f106 0a01 	add.w	sl, r6, #1
9001f840:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f844:	b2ad      	uxth	r5, r5
9001f846:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f848:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f84c:	f105 0a01 	add.w	sl, r5, #1
9001f850:	fb1e fe07 	smulbb	lr, lr, r7
9001f854:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f856:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f85a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f85e:	fb02 e207 	mla	r2, r2, r7, lr
9001f862:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f866:	b292      	uxth	r2, r2
9001f868:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f86c:	f102 0e01 	add.w	lr, r2, #1
9001f870:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f874:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f878:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f87c:	ea4e 0606 	orr.w	r6, lr, r6
9001f880:	ea46 060a 	orr.w	r6, r6, sl
9001f884:	f829 6b02 	strh.w	r6, [r9], #2
9001f888:	e7a7      	b.n	9001f7da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f88a:	f102 0e01 	add.w	lr, r2, #1
9001f88e:	4422      	add	r2, r4
9001f890:	9f06      	ldr	r7, [sp, #24]
9001f892:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001f896:	9a06      	ldr	r2, [sp, #24]
9001f898:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f89c:	eb02 0a05 	add.w	sl, r2, r5
9001f8a0:	4a13      	ldr	r2, [pc, #76]	@ (9001f8f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f8a2:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f8a6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f8aa:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f8ae:	00d2      	lsls	r2, r2, #3
9001f8b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f8b4:	ea49 0202 	orr.w	r2, r9, r2
9001f8b8:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f8bc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f8c0:	f826 2b02 	strh.w	r2, [r6], #2
9001f8c4:	fa1f f28e 	uxth.w	r2, lr
9001f8c8:	e758      	b.n	9001f77c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f8ca:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f8ce:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f8d2:	1a2d      	subs	r5, r5, r0
9001f8d4:	b2ad      	uxth	r5, r5
9001f8d6:	2d00      	cmp	r5, #0
9001f8d8:	bf18      	it	ne
9001f8da:	2000      	movne	r0, #0
9001f8dc:	e732      	b.n	9001f744 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f8de:	4b05      	ldr	r3, [pc, #20]	@ (9001f8f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f8e0:	6818      	ldr	r0, [r3, #0]
9001f8e2:	6803      	ldr	r3, [r0, #0]
9001f8e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f8e6:	4798      	blx	r3
9001f8e8:	b01f      	add	sp, #124	@ 0x7c
9001f8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f8ee:	bf00      	nop
9001f8f0:	fffff800 	.word	0xfffff800
9001f8f4:	240234bc 	.word	0x240234bc

9001f8f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f8f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f8fc:	b091      	sub	sp, #68	@ 0x44
9001f8fe:	469b      	mov	fp, r3
9001f900:	4616      	mov	r6, r2
9001f902:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f906:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001f90a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f90e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001f912:	4604      	mov	r4, r0
9001f914:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001f918:	4640      	mov	r0, r8
9001f91a:	460d      	mov	r5, r1
9001f91c:	4659      	mov	r1, fp
9001f91e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f922:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f926:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001f92a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001f92e:	f7f1 f9f3 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
9001f932:	4631      	mov	r1, r6
9001f934:	4640      	mov	r0, r8
9001f936:	f7f1 f9ef 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
9001f93a:	4b74      	ldr	r3, [pc, #464]	@ (9001fb0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f93c:	8818      	ldrh	r0, [r3, #0]
9001f93e:	4b74      	ldr	r3, [pc, #464]	@ (9001fb10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f940:	b202      	sxth	r2, r0
9001f942:	8819      	ldrh	r1, [r3, #0]
9001f944:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f948:	b20e      	sxth	r6, r1
9001f94a:	2b00      	cmp	r3, #0
9001f94c:	da07      	bge.n	9001f95e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f94e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001f952:	4463      	add	r3, ip
9001f954:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001f958:	2300      	movs	r3, #0
9001f95a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001f95e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f962:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f966:	1ad2      	subs	r2, r2, r3
9001f968:	4594      	cmp	ip, r2
9001f96a:	bfc4      	itt	gt
9001f96c:	1ac2      	subgt	r2, r0, r3
9001f96e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001f972:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f976:	2a00      	cmp	r2, #0
9001f978:	da07      	bge.n	9001f98a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f97a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001f97e:	4462      	add	r2, ip
9001f980:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001f984:	2200      	movs	r2, #0
9001f986:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001f98a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001f98e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f992:	eba6 060a 	sub.w	r6, r6, sl
9001f996:	42b2      	cmp	r2, r6
9001f998:	bfc4      	itt	gt
9001f99a:	eba1 020a 	subgt.w	r2, r1, sl
9001f99e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001f9a2:	4a5c      	ldr	r2, [pc, #368]	@ (9001fb14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f9a4:	7812      	ldrb	r2, [r2, #0]
9001f9a6:	b9a2      	cbnz	r2, 9001f9d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f9a8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f9ac:	4286      	cmp	r6, r0
9001f9ae:	4640      	mov	r0, r8
9001f9b0:	9303      	str	r3, [sp, #12]
9001f9b2:	bf14      	ite	ne
9001f9b4:	2600      	movne	r6, #0
9001f9b6:	2601      	moveq	r6, #1
9001f9b8:	f7f1 f9f1 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001f9bc:	9b03      	ldr	r3, [sp, #12]
9001f9be:	b160      	cbz	r0, 9001f9da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f9c0:	2300      	movs	r3, #0
9001f9c2:	8023      	strh	r3, [r4, #0]
9001f9c4:	8063      	strh	r3, [r4, #2]
9001f9c6:	80a3      	strh	r3, [r4, #4]
9001f9c8:	4620      	mov	r0, r4
9001f9ca:	80e3      	strh	r3, [r4, #6]
9001f9cc:	b011      	add	sp, #68	@ 0x44
9001f9ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f9d2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f9d6:	428e      	cmp	r6, r1
9001f9d8:	e7e9      	b.n	9001f9ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f9da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f9de:	a90e      	add	r1, sp, #56	@ 0x38
9001f9e0:	900e      	str	r0, [sp, #56]	@ 0x38
9001f9e2:	a80c      	add	r0, sp, #48	@ 0x30
9001f9e4:	9205      	str	r2, [sp, #20]
9001f9e6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f9ea:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001f9ee:	9206      	str	r2, [sp, #24]
9001f9f0:	f8bb 2000 	ldrh.w	r2, [fp]
9001f9f4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001f9f8:	1a9b      	subs	r3, r3, r2
9001f9fa:	b21b      	sxth	r3, r3
9001f9fc:	9303      	str	r3, [sp, #12]
9001f9fe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001fa02:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001fb1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001fa06:	ebaa 0a03 	sub.w	sl, sl, r3
9001fa0a:	fa0f f38a 	sxth.w	r3, sl
9001fa0e:	9304      	str	r3, [sp, #16]
9001fa10:	9b03      	ldr	r3, [sp, #12]
9001fa12:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001fa16:	9b04      	ldr	r3, [sp, #16]
9001fa18:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001fa1c:	9b05      	ldr	r3, [sp, #20]
9001fa1e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001fa22:	9b06      	ldr	r3, [sp, #24]
9001fa24:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001fa28:	f7f7 faa0 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fa2c:	4640      	mov	r0, r8
9001fa2e:	f7f7 fa75 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa32:	a80e      	add	r0, sp, #56	@ 0x38
9001fa34:	f7f7 fa72 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa38:	4b37      	ldr	r3, [pc, #220]	@ (9001fb18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001fa3a:	4628      	mov	r0, r5
9001fa3c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001fa40:	881b      	ldrh	r3, [r3, #0]
9001fa42:	9307      	str	r3, [sp, #28]
9001fa44:	682b      	ldr	r3, [r5, #0]
9001fa46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fa48:	4798      	blx	r3
9001fa4a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001fa4e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001fa52:	4681      	mov	r9, r0
9001fa54:	f8db 0000 	ldr.w	r0, [fp]
9001fa58:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001fa5c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001fa5e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001fa62:	6803      	ldr	r3, [r0, #0]
9001fa64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fa66:	4798      	blx	r3
9001fa68:	4607      	mov	r7, r0
9001fa6a:	f8db 0000 	ldr.w	r0, [fp]
9001fa6e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001fa72:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fa76:	6803      	ldr	r3, [r0, #0]
9001fa78:	9109      	str	r1, [sp, #36]	@ 0x24
9001fa7a:	9208      	str	r2, [sp, #32]
9001fa7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001fa7e:	4798      	blx	r3
9001fa80:	f010 0f01 	tst.w	r0, #1
9001fa84:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001fa88:	d012      	beq.n	9001fab0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001fa8a:	f8db 0000 	ldr.w	r0, [fp]
9001fa8e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001fa92:	6803      	ldr	r3, [r0, #0]
9001fa94:	9200      	str	r2, [sp, #0]
9001fa96:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001fa98:	462b      	mov	r3, r5
9001fa9a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001fa9e:	47b0      	blx	r6
9001faa0:	9b03      	ldr	r3, [sp, #12]
9001faa2:	8023      	strh	r3, [r4, #0]
9001faa4:	9b04      	ldr	r3, [sp, #16]
9001faa6:	8063      	strh	r3, [r4, #2]
9001faa8:	9b05      	ldr	r3, [sp, #20]
9001faaa:	80a3      	strh	r3, [r4, #4]
9001faac:	9b06      	ldr	r3, [sp, #24]
9001faae:	e78b      	b.n	9001f9c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001fab0:	fb09 f202 	mul.w	r2, r9, r2
9001fab4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001fab8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001fabc:	440f      	add	r7, r1
9001fabe:	b166      	cbz	r6, 9001fada <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001fac0:	9a07      	ldr	r2, [sp, #28]
9001fac2:	4592      	cmp	sl, r2
9001fac4:	d109      	bne.n	9001fada <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001fac6:	f8db 0000 	ldr.w	r0, [fp]
9001faca:	fb09 f303 	mul.w	r3, r9, r3
9001face:	4629      	mov	r1, r5
9001fad0:	6802      	ldr	r2, [r0, #0]
9001fad2:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001fad4:	463a      	mov	r2, r7
9001fad6:	47b0      	blx	r6
9001fad8:	e7e2      	b.n	9001faa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001fada:	fb0a f303 	mul.w	r3, sl, r3
9001fade:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001fae2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001fb1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001fae6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001faea:	4545      	cmp	r5, r8
9001faec:	d2d8      	bcs.n	9001faa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001faee:	f8db 0000 	ldr.w	r0, [fp]
9001faf2:	4629      	mov	r1, r5
9001faf4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001faf8:	4435      	add	r5, r6
9001fafa:	6802      	ldr	r2, [r0, #0]
9001fafc:	005b      	lsls	r3, r3, #1
9001fafe:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9001fb02:	463a      	mov	r2, r7
9001fb04:	47d0      	blx	sl
9001fb06:	444f      	add	r7, r9
9001fb08:	e7ef      	b.n	9001faea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001fb0a:	bf00      	nop
9001fb0c:	240234b0 	.word	0x240234b0
9001fb10:	240234b2 	.word	0x240234b2
9001fb14:	240234b4 	.word	0x240234b4
9001fb18:	240234b6 	.word	0x240234b6
9001fb1c:	240234bc 	.word	0x240234bc

9001fb20 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001fb20:	b5f0      	push	{r4, r5, r6, r7, lr}
9001fb22:	4606      	mov	r6, r0
9001fb24:	b087      	sub	sp, #28
9001fb26:	460c      	mov	r4, r1
9001fb28:	4617      	mov	r7, r2
9001fb2a:	461d      	mov	r5, r3
9001fb2c:	b333      	cbz	r3, 9001fb7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fb2e:	4608      	mov	r0, r1
9001fb30:	f7f1 f935 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001fb34:	bb10      	cbnz	r0, 9001fb7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fb36:	6820      	ldr	r0, [r4, #0]
9001fb38:	ab04      	add	r3, sp, #16
9001fb3a:	6861      	ldr	r1, [r4, #4]
9001fb3c:	4c1b      	ldr	r4, [pc, #108]	@ (9001fbac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001fb3e:	c303      	stmia	r3!, {r0, r1}
9001fb40:	a804      	add	r0, sp, #16
9001fb42:	f7f7 f9eb 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb46:	6820      	ldr	r0, [r4, #0]
9001fb48:	6803      	ldr	r3, [r0, #0]
9001fb4a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001fb4c:	4798      	blx	r3
9001fb4e:	2dff      	cmp	r5, #255	@ 0xff
9001fb50:	d016      	beq.n	9001fb80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001fb52:	f010 0f08 	tst.w	r0, #8
9001fb56:	6820      	ldr	r0, [r4, #0]
9001fb58:	d015      	beq.n	9001fb86 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001fb5a:	2400      	movs	r4, #0
9001fb5c:	6801      	ldr	r1, [r0, #0]
9001fb5e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001fb62:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001fb66:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001fb6a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001fb6e:	9401      	str	r4, [sp, #4]
9001fb70:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001fb74:	9400      	str	r4, [sp, #0]
9001fb76:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
9001fb78:	4639      	mov	r1, r7
9001fb7a:	47a0      	blx	r4
9001fb7c:	b007      	add	sp, #28
9001fb7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001fb80:	f010 0f02 	tst.w	r0, #2
9001fb84:	e7e7      	b.n	9001fb56 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001fb86:	6803      	ldr	r3, [r0, #0]
9001fb88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fb8a:	4798      	blx	r3
9001fb8c:	4b08      	ldr	r3, [pc, #32]	@ (9001fbb0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001fb8e:	4601      	mov	r1, r0
9001fb90:	4630      	mov	r0, r6
9001fb92:	881a      	ldrh	r2, [r3, #0]
9001fb94:	6833      	ldr	r3, [r6, #0]
9001fb96:	e9cd 7500 	strd	r7, r5, [sp]
9001fb9a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001fb9c:	ab04      	add	r3, sp, #16
9001fb9e:	47a8      	blx	r5
9001fba0:	6820      	ldr	r0, [r4, #0]
9001fba2:	6803      	ldr	r3, [r0, #0]
9001fba4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fba6:	4798      	blx	r3
9001fba8:	e7e8      	b.n	9001fb7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fbaa:	bf00      	nop
9001fbac:	240234bc 	.word	0x240234bc
9001fbb0:	240234b6 	.word	0x240234b6

9001fbb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001fbb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fbb8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001fbbc:	4688      	mov	r8, r1
9001fbbe:	4614      	mov	r4, r2
9001fbc0:	461d      	mov	r5, r3
9001fbc2:	9e08      	ldr	r6, [sp, #32]
9001fbc4:	2f00      	cmp	r7, #0
9001fbc6:	f000 80ab 	beq.w	9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fbca:	4618      	mov	r0, r3
9001fbcc:	f7f1 f8e7 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001fbd0:	2800      	cmp	r0, #0
9001fbd2:	f040 80a5 	bne.w	9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fbd6:	f9b5 1000 	ldrsh.w	r1, [r5]
9001fbda:	2fff      	cmp	r7, #255	@ 0xff
9001fbdc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001fbe0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001fbe4:	fb04 1303 	mla	r3, r4, r3, r1
9001fbe8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001fbec:	eba4 0200 	sub.w	r2, r4, r0
9001fbf0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001fbf4:	fb04 f505 	mul.w	r5, r4, r5
9001fbf8:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001fbfc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001fc00:	d04a      	beq.n	9001fc98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001fc02:	b2bc      	uxth	r4, r7
9001fc04:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001fc08:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001fc0c:	fa5f f788 	uxtb.w	r7, r8
9001fc10:	b2f3      	uxtb	r3, r6
9001fc12:	0040      	lsls	r0, r0, #1
9001fc14:	fb0e fe04 	mul.w	lr, lr, r4
9001fc18:	4367      	muls	r7, r4
9001fc1a:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001fc1e:	4363      	muls	r3, r4
9001fc20:	fa1f fc8c 	uxth.w	ip, ip
9001fc24:	42a9      	cmp	r1, r5
9001fc26:	d27b      	bcs.n	9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fc28:	eb01 0900 	add.w	r9, r1, r0
9001fc2c:	4549      	cmp	r1, r9
9001fc2e:	d231      	bcs.n	9001fc94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001fc30:	880a      	ldrh	r2, [r1, #0]
9001fc32:	1214      	asrs	r4, r2, #8
9001fc34:	10d6      	asrs	r6, r2, #3
9001fc36:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001fc3a:	00d2      	lsls	r2, r2, #3
9001fc3c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001fc40:	b2d2      	uxtb	r2, r2
9001fc42:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001fc46:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fc4a:	fb14 f40c 	smulbb	r4, r4, ip
9001fc4e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001fc52:	fb12 f20c 	smulbb	r2, r2, ip
9001fc56:	fb16 f60c 	smulbb	r6, r6, ip
9001fc5a:	4474      	add	r4, lr
9001fc5c:	441a      	add	r2, r3
9001fc5e:	b2a4      	uxth	r4, r4
9001fc60:	443e      	add	r6, r7
9001fc62:	b292      	uxth	r2, r2
9001fc64:	f104 0a01 	add.w	sl, r4, #1
9001fc68:	b2b6      	uxth	r6, r6
9001fc6a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001fc6e:	f102 0a01 	add.w	sl, r2, #1
9001fc72:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001fc76:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001fc7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fc7e:	4322      	orrs	r2, r4
9001fc80:	1c74      	adds	r4, r6, #1
9001fc82:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001fc86:	0976      	lsrs	r6, r6, #5
9001fc88:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001fc8c:	4332      	orrs	r2, r6
9001fc8e:	f821 2b02 	strh.w	r2, [r1], #2
9001fc92:	e7cb      	b.n	9001fc2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001fc94:	4441      	add	r1, r8
9001fc96:	e7c5      	b.n	9001fc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001fc98:	0973      	lsrs	r3, r6, #5
9001fc9a:	4f22      	ldr	r7, [pc, #136]	@ (9001fd24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001fc9c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001fca0:	ea08 0707 	and.w	r7, r8, r7
9001fca4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fca8:	433b      	orrs	r3, r7
9001fcaa:	07e7      	lsls	r7, r4, #31
9001fcac:	ea43 0306 	orr.w	r3, r3, r6
9001fcb0:	b29b      	uxth	r3, r3
9001fcb2:	d50b      	bpl.n	9001fccc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001fcb4:	0040      	lsls	r0, r0, #1
9001fcb6:	0052      	lsls	r2, r2, #1
9001fcb8:	42a9      	cmp	r1, r5
9001fcba:	d231      	bcs.n	9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fcbc:	180c      	adds	r4, r1, r0
9001fcbe:	42a1      	cmp	r1, r4
9001fcc0:	d202      	bcs.n	9001fcc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001fcc2:	f821 3b02 	strh.w	r3, [r1], #2
9001fcc6:	e7fa      	b.n	9001fcbe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001fcc8:	4411      	add	r1, r2
9001fcca:	e7f5      	b.n	9001fcb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001fccc:	078e      	lsls	r6, r1, #30
9001fcce:	d008      	beq.n	9001fce2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001fcd0:	0066      	lsls	r6, r4, #1
9001fcd2:	460a      	mov	r2, r1
9001fcd4:	42aa      	cmp	r2, r5
9001fcd6:	d202      	bcs.n	9001fcde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001fcd8:	8013      	strh	r3, [r2, #0]
9001fcda:	4432      	add	r2, r6
9001fcdc:	e7fa      	b.n	9001fcd4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001fcde:	3102      	adds	r1, #2
9001fce0:	3801      	subs	r0, #1
9001fce2:	07c2      	lsls	r2, r0, #31
9001fce4:	d50b      	bpl.n	9001fcfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001fce6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001fcea:	0066      	lsls	r6, r4, #1
9001fcec:	3a01      	subs	r2, #1
9001fcee:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001fcf2:	42aa      	cmp	r2, r5
9001fcf4:	d202      	bcs.n	9001fcfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001fcf6:	8013      	strh	r3, [r2, #0]
9001fcf8:	4432      	add	r2, r6
9001fcfa:	e7fa      	b.n	9001fcf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001fcfc:	3801      	subs	r0, #1
9001fcfe:	b178      	cbz	r0, 9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fd00:	1040      	asrs	r0, r0, #1
9001fd02:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001fd06:	0080      	lsls	r0, r0, #2
9001fd08:	0064      	lsls	r4, r4, #1
9001fd0a:	42a9      	cmp	r1, r5
9001fd0c:	d208      	bcs.n	9001fd20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fd0e:	180e      	adds	r6, r1, r0
9001fd10:	460a      	mov	r2, r1
9001fd12:	42b2      	cmp	r2, r6
9001fd14:	d202      	bcs.n	9001fd1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001fd16:	f842 3b04 	str.w	r3, [r2], #4
9001fd1a:	e7fa      	b.n	9001fd12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001fd1c:	4421      	add	r1, r4
9001fd1e:	e7f4      	b.n	9001fd0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001fd20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fd24:	00fff800 	.word	0x00fff800

9001fd28 <_ZN8touchgfx8LCD16bppC1Ev>:
9001fd28:	2200      	movs	r2, #0
9001fd2a:	4912      	ldr	r1, [pc, #72]	@ (9001fd74 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001fd2c:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001fd30:	6001      	str	r1, [r0, #0]
9001fd32:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001fd36:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001fd3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001fd3e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001fd42:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001fd46:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001fd4a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001fd4e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001fd52:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001fd56:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001fd5a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001fd5e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001fd62:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001fd66:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001fd6a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001fd6e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001fd72:	4770      	bx	lr
9001fd74:	9002eab4 	.word	0x9002eab4

9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001fd78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd7c:	b08d      	sub	sp, #52	@ 0x34
9001fd7e:	460d      	mov	r5, r1
9001fd80:	4604      	mov	r4, r0
9001fd82:	4699      	mov	r9, r3
9001fd84:	6808      	ldr	r0, [r1, #0]
9001fd86:	ab08      	add	r3, sp, #32
9001fd88:	6849      	ldr	r1, [r1, #4]
9001fd8a:	c303      	stmia	r3!, {r0, r1}
9001fd8c:	6810      	ldr	r0, [r2, #0]
9001fd8e:	ab0a      	add	r3, sp, #40	@ 0x28
9001fd90:	6851      	ldr	r1, [r2, #4]
9001fd92:	c303      	stmia	r3!, {r0, r1}
9001fd94:	a808      	add	r0, sp, #32
9001fd96:	f7f7 f8c1 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fd9a:	4629      	mov	r1, r5
9001fd9c:	a80a      	add	r0, sp, #40	@ 0x28
9001fd9e:	4d67      	ldr	r5, [pc, #412]	@ (9001ff3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fda0:	f7f7 f8e4 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fda4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001fda8:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001fdac:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001fdb0:	6828      	ldr	r0, [r5, #0]
9001fdb2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fdb6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001fdba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001fdbe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fdc2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001fdc6:	440a      	add	r2, r1
9001fdc8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001fdcc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001fdd0:	4413      	add	r3, r2
9001fdd2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001fdd6:	6803      	ldr	r3, [r0, #0]
9001fdd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001fdda:	4798      	blx	r3
9001fddc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001fde0:	d119      	bne.n	9001fe16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001fde2:	f010 0f20 	tst.w	r0, #32
9001fde6:	6828      	ldr	r0, [r5, #0]
9001fde8:	d018      	beq.n	9001fe1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001fdea:	2500      	movs	r5, #0
9001fdec:	6801      	ldr	r1, [r0, #0]
9001fdee:	b2b6      	uxth	r6, r6
9001fdf0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001fdf4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001fdf8:	9601      	str	r6, [sp, #4]
9001fdfa:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001fdfe:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001fe02:	9502      	str	r5, [sp, #8]
9001fe04:	fa1f f588 	uxth.w	r5, r8
9001fe08:	9500      	str	r5, [sp, #0]
9001fe0a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9001fe0c:	4621      	mov	r1, r4
9001fe0e:	47a8      	blx	r5
9001fe10:	b00d      	add	sp, #52	@ 0x34
9001fe12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe16:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001fe1a:	e7e4      	b.n	9001fde6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001fe1c:	6803      	ldr	r3, [r0, #0]
9001fe1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fe20:	4798      	blx	r3
9001fe22:	4947      	ldr	r1, [pc, #284]	@ (9001ff40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001fe24:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fe28:	880b      	ldrh	r3, [r1, #0]
9001fe2a:	468a      	mov	sl, r1
9001fe2c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001fe30:	fb03 5202 	mla	r2, r3, r2, r5
9001fe34:	4373      	muls	r3, r6
9001fe36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fe3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fe3e:	9307      	str	r3, [sp, #28]
9001fe40:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fe44:	9306      	str	r3, [sp, #24]
9001fe46:	9b07      	ldr	r3, [sp, #28]
9001fe48:	4298      	cmp	r0, r3
9001fe4a:	d270      	bcs.n	9001ff2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001fe4c:	9b06      	ldr	r3, [sp, #24]
9001fe4e:	4621      	mov	r1, r4
9001fe50:	eb00 0b03 	add.w	fp, r0, r3
9001fe54:	4558      	cmp	r0, fp
9001fe56:	d25d      	bcs.n	9001ff14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001fe58:	f851 4b04 	ldr.w	r4, [r1], #4
9001fe5c:	0e23      	lsrs	r3, r4, #24
9001fe5e:	d014      	beq.n	9001fe8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fe60:	2bff      	cmp	r3, #255	@ 0xff
9001fe62:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001fe66:	d112      	bne.n	9001fe8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fe68:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001fe6c:	d10f      	bne.n	9001fe8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fe6e:	0963      	lsrs	r3, r4, #5
9001fe70:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001fe74:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001fe78:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fe7c:	f02c 0c07 	bic.w	ip, ip, #7
9001fe80:	ea43 0c0c 	orr.w	ip, r3, ip
9001fe84:	ea4c 0404 	orr.w	r4, ip, r4
9001fe88:	8004      	strh	r4, [r0, #0]
9001fe8a:	3002      	adds	r0, #2
9001fe8c:	e7e2      	b.n	9001fe54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001fe8e:	fb09 f303 	mul.w	r3, r9, r3
9001fe92:	8807      	ldrh	r7, [r0, #0]
9001fe94:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001fe98:	fa5f fc8c 	uxtb.w	ip, ip
9001fe9c:	1c5a      	adds	r2, r3, #1
9001fe9e:	123e      	asrs	r6, r7, #8
9001fea0:	10fd      	asrs	r5, r7, #3
9001fea2:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001fea6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001feaa:	00ff      	lsls	r7, r7, #3
9001feac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001feb0:	1212      	asrs	r2, r2, #8
9001feb2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001feb6:	b293      	uxth	r3, r2
9001feb8:	43d2      	mvns	r2, r2
9001feba:	b2ff      	uxtb	r7, r7
9001febc:	fb1e fe03 	smulbb	lr, lr, r3
9001fec0:	b2d2      	uxtb	r2, r2
9001fec2:	fb1c fc03 	smulbb	ip, ip, r3
9001fec6:	b2e4      	uxtb	r4, r4
9001fec8:	fb06 e602 	mla	r6, r6, r2, lr
9001fecc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fed0:	fb14 f403 	smulbb	r4, r4, r3
9001fed4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001fed8:	b2b6      	uxth	r6, r6
9001feda:	fb05 c502 	mla	r5, r5, r2, ip
9001fede:	fb07 4702 	mla	r7, r7, r2, r4
9001fee2:	f106 0e01 	add.w	lr, r6, #1
9001fee6:	b2ad      	uxth	r5, r5
9001fee8:	b2bf      	uxth	r7, r7
9001feea:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001feee:	f105 0c01 	add.w	ip, r5, #1
9001fef2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001fef6:	1c7e      	adds	r6, r7, #1
9001fef8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fefc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001ff00:	096d      	lsrs	r5, r5, #5
9001ff02:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ff06:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ff0a:	ea46 060e 	orr.w	r6, r6, lr
9001ff0e:	432e      	orrs	r6, r5
9001ff10:	8006      	strh	r6, [r0, #0]
9001ff12:	e7ba      	b.n	9001fe8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001ff14:	f8ba 3000 	ldrh.w	r3, [sl]
9001ff18:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001ff1c:	eba3 0308 	sub.w	r3, r3, r8
9001ff20:	eba4 0408 	sub.w	r4, r4, r8
9001ff24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ff28:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001ff2c:	e78b      	b.n	9001fe46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001ff2e:	4b03      	ldr	r3, [pc, #12]	@ (9001ff3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001ff30:	6818      	ldr	r0, [r3, #0]
9001ff32:	6803      	ldr	r3, [r0, #0]
9001ff34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ff36:	4798      	blx	r3
9001ff38:	e76a      	b.n	9001fe10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001ff3a:	bf00      	nop
9001ff3c:	240234bc 	.word	0x240234bc
9001ff40:	240234b6 	.word	0x240234b6

9001ff44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001ff44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001ff48:	b085      	sub	sp, #20
9001ff4a:	6810      	ldr	r0, [r2, #0]
9001ff4c:	460c      	mov	r4, r1
9001ff4e:	6851      	ldr	r1, [r2, #4]
9001ff50:	466d      	mov	r5, sp
9001ff52:	4616      	mov	r6, r2
9001ff54:	c503      	stmia	r5!, {r0, r1}
9001ff56:	6818      	ldr	r0, [r3, #0]
9001ff58:	6859      	ldr	r1, [r3, #4]
9001ff5a:	c503      	stmia	r5!, {r0, r1}
9001ff5c:	4668      	mov	r0, sp
9001ff5e:	4d2e      	ldr	r5, [pc, #184]	@ (90020018 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001ff60:	f7f6 ffdc 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff64:	4631      	mov	r1, r6
9001ff66:	a802      	add	r0, sp, #8
9001ff68:	4e2c      	ldr	r6, [pc, #176]	@ (9002001c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001ff6a:	f7f6 ffff 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff6e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001ff72:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001ff76:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ff7a:	6828      	ldr	r0, [r5, #0]
9001ff7c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ff80:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001ff84:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001ff88:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001ff8c:	f8bd 1000 	ldrh.w	r1, [sp]
9001ff90:	440a      	add	r2, r1
9001ff92:	f8ad 2008 	strh.w	r2, [sp, #8]
9001ff96:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ff9a:	4413      	add	r3, r2
9001ff9c:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ffa0:	6803      	ldr	r3, [r0, #0]
9001ffa2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ffa4:	4798      	blx	r3
9001ffa6:	8833      	ldrh	r3, [r6, #0]
9001ffa8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001ffac:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001ffb0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ffb4:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90020020 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001ffb8:	fb03 1202 	mla	r2, r3, r2, r1
9001ffbc:	fb08 f303 	mul.w	r3, r8, r3
9001ffc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ffc4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ffc8:	4298      	cmp	r0, r3
9001ffca:	d21d      	bcs.n	90020008 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001ffcc:	eb00 080c 	add.w	r8, r0, ip
9001ffd0:	4540      	cmp	r0, r8
9001ffd2:	d20f      	bcs.n	9001fff4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001ffd4:	f854 1b04 	ldr.w	r1, [r4], #4
9001ffd8:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001ffdc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001ffe0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001ffe4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ffe8:	ea42 0209 	orr.w	r2, r2, r9
9001ffec:	430a      	orrs	r2, r1
9001ffee:	f820 2b02 	strh.w	r2, [r0], #2
9001fff2:	e7ed      	b.n	9001ffd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001fff4:	8832      	ldrh	r2, [r6, #0]
9001fff6:	1bd2      	subs	r2, r2, r7
9001fff8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fffc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90020000:	1bd2      	subs	r2, r2, r7
90020002:	eb04 0482 	add.w	r4, r4, r2, lsl #2
90020006:	e7df      	b.n	9001ffc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
90020008:	6828      	ldr	r0, [r5, #0]
9002000a:	6803      	ldr	r3, [r0, #0]
9002000c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002000e:	4798      	blx	r3
90020010:	b005      	add	sp, #20
90020012:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90020016:	bf00      	nop
90020018:	240234bc 	.word	0x240234bc
9002001c:	240234b6 	.word	0x240234b6
90020020:	fffff800 	.word	0xfffff800

90020024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90020024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020028:	b08e      	sub	sp, #56	@ 0x38
9002002a:	460e      	mov	r6, r1
9002002c:	4604      	mov	r4, r0
9002002e:	461d      	mov	r5, r3
90020030:	6808      	ldr	r0, [r1, #0]
90020032:	ab0a      	add	r3, sp, #40	@ 0x28
90020034:	6849      	ldr	r1, [r1, #4]
90020036:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9002020c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9002003a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90020210 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9002003e:	c303      	stmia	r3!, {r0, r1}
90020040:	6810      	ldr	r0, [r2, #0]
90020042:	ab0c      	add	r3, sp, #48	@ 0x30
90020044:	6851      	ldr	r1, [r2, #4]
90020046:	c303      	stmia	r3!, {r0, r1}
90020048:	a80a      	add	r0, sp, #40	@ 0x28
9002004a:	f7f6 ff67 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002004e:	4631      	mov	r1, r6
90020050:	a80c      	add	r0, sp, #48	@ 0x30
90020052:	f7f6 ff8b 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020056:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002005a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9002005e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90020062:	f8d8 0000 	ldr.w	r0, [r8]
90020066:	fb11 2103 	smlabb	r1, r1, r3, r2
9002006a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9002006e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020072:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90020076:	440c      	add	r4, r1
90020078:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9002007c:	440a      	add	r2, r1
9002007e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90020082:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90020086:	4413      	add	r3, r2
90020088:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9002008c:	6803      	ldr	r3, [r0, #0]
9002008e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020090:	4798      	blx	r3
90020092:	2dff      	cmp	r5, #255	@ 0xff
90020094:	d124      	bne.n	900200e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90020096:	f010 0f01 	tst.w	r0, #1
9002009a:	f8d8 0000 	ldr.w	r0, [r8]
9002009e:	d022      	beq.n	900200e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
900200a0:	2100      	movs	r1, #0
900200a2:	f04f 0e01 	mov.w	lr, #1
900200a6:	f8d0 c000 	ldr.w	ip, [r0]
900200aa:	b2b6      	uxth	r6, r6
900200ac:	f8cd e018 	str.w	lr, [sp, #24]
900200b0:	b2bf      	uxth	r7, r7
900200b2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900200b6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
900200ba:	e9cd 1107 	strd	r1, r1, [sp, #28]
900200be:	f8b9 e000 	ldrh.w	lr, [r9]
900200c2:	9503      	str	r5, [sp, #12]
900200c4:	9601      	str	r6, [sp, #4]
900200c6:	9700      	str	r7, [sp, #0]
900200c8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
900200cc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900200d0:	9102      	str	r1, [sp, #8]
900200d2:	4621      	mov	r1, r4
900200d4:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
900200d8:	47a8      	blx	r5
900200da:	b00e      	add	sp, #56	@ 0x38
900200dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900200e0:	f010 0f04 	tst.w	r0, #4
900200e4:	e7d9      	b.n	9002009a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
900200e6:	6803      	ldr	r3, [r0, #0]
900200e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900200ea:	4798      	blx	r3
900200ec:	f8b9 3000 	ldrh.w	r3, [r9]
900200f0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
900200f4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
900200f8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
900200fc:	435e      	muls	r6, r3
900200fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90020102:	2dff      	cmp	r5, #255	@ 0xff
90020104:	fb03 1202 	mla	r2, r3, r2, r1
90020108:	ebac 0c07 	sub.w	ip, ip, r7
9002010c:	eba3 0707 	sub.w	r7, r3, r7
90020110:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020114:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020118:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9002011c:	ea4f 0747 	mov.w	r7, r7, lsl #1
90020120:	d049      	beq.n	900201b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90020122:	43eb      	mvns	r3, r5
90020124:	fa1f f985 	uxth.w	r9, r5
90020128:	b2db      	uxtb	r3, r3
9002012a:	42b0      	cmp	r0, r6
9002012c:	d266      	bcs.n	900201fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9002012e:	eb00 0a0e 	add.w	sl, r0, lr
90020132:	4550      	cmp	r0, sl
90020134:	4621      	mov	r1, r4
90020136:	f104 0403 	add.w	r4, r4, #3
9002013a:	d25b      	bcs.n	900201f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9002013c:	8802      	ldrh	r2, [r0, #0]
9002013e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90020142:	ea4f 2822 	mov.w	r8, r2, asr #8
90020146:	fb11 f109 	smulbb	r1, r1, r9
9002014a:	10d5      	asrs	r5, r2, #3
9002014c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90020150:	00d2      	lsls	r2, r2, #3
90020152:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020156:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9002015a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002015e:	fb08 1803 	mla	r8, r8, r3, r1
90020162:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90020166:	b2d2      	uxtb	r2, r2
90020168:	fb11 f109 	smulbb	r1, r1, r9
9002016c:	fa1f f888 	uxth.w	r8, r8
90020170:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020174:	fb05 1503 	mla	r5, r5, r3, r1
90020178:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002017c:	fb11 f109 	smulbb	r1, r1, r9
90020180:	b2ad      	uxth	r5, r5
90020182:	fb02 1203 	mla	r2, r2, r3, r1
90020186:	f108 0101 	add.w	r1, r8, #1
9002018a:	b292      	uxth	r2, r2
9002018c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90020190:	1c51      	adds	r1, r2, #1
90020192:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90020196:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002019a:	1c69      	adds	r1, r5, #1
9002019c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900201a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900201a4:	096d      	lsrs	r5, r5, #5
900201a6:	ea42 0208 	orr.w	r2, r2, r8
900201aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900201ae:	432a      	orrs	r2, r5
900201b0:	f820 2b02 	strh.w	r2, [r0], #2
900201b4:	e7bd      	b.n	90020132 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
900201b6:	4a14      	ldr	r2, [pc, #80]	@ (90020208 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
900201b8:	42b0      	cmp	r0, r6
900201ba:	d21f      	bcs.n	900201fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900201bc:	eb00 050e 	add.w	r5, r0, lr
900201c0:	42a8      	cmp	r0, r5
900201c2:	4621      	mov	r1, r4
900201c4:	f104 0403 	add.w	r4, r4, #3
900201c8:	d210      	bcs.n	900201ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
900201ca:	f814 3c02 	ldrb.w	r3, [r4, #-2]
900201ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900201d2:	00db      	lsls	r3, r3, #3
900201d4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
900201d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900201dc:	430b      	orrs	r3, r1
900201de:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900201e2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
900201e6:	f820 3b02 	strh.w	r3, [r0], #2
900201ea:	e7e9      	b.n	900201c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
900201ec:	4438      	add	r0, r7
900201ee:	eb01 040c 	add.w	r4, r1, ip
900201f2:	e7e1      	b.n	900201b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
900201f4:	4438      	add	r0, r7
900201f6:	eb01 040c 	add.w	r4, r1, ip
900201fa:	e796      	b.n	9002012a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
900201fc:	4b03      	ldr	r3, [pc, #12]	@ (9002020c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
900201fe:	6818      	ldr	r0, [r3, #0]
90020200:	6803      	ldr	r3, [r0, #0]
90020202:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020204:	4798      	blx	r3
90020206:	e768      	b.n	900200da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90020208:	fffff800 	.word	0xfffff800
9002020c:	240234bc 	.word	0x240234bc
90020210:	240234b6 	.word	0x240234b6

90020214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90020214:	b4f0      	push	{r4, r5, r6, r7}
90020216:	4616      	mov	r6, r2
90020218:	461c      	mov	r4, r3
9002021a:	460d      	mov	r5, r1
9002021c:	9a04      	ldr	r2, [sp, #16]
9002021e:	2e01      	cmp	r6, #1
90020220:	f89d 3014 	ldrb.w	r3, [sp, #20]
90020224:	f89d 7018 	ldrb.w	r7, [sp, #24]
90020228:	d012      	beq.n	90020250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9002022a:	d303      	bcc.n	90020234 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9002022c:	2e02      	cmp	r6, #2
9002022e:	d00a      	beq.n	90020246 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90020230:	bcf0      	pop	{r4, r5, r6, r7}
90020232:	4770      	bx	lr
90020234:	6805      	ldr	r5, [r0, #0]
90020236:	e9cd 3704 	strd	r3, r7, [sp, #16]
9002023a:	68ed      	ldr	r5, [r5, #12]
9002023c:	4613      	mov	r3, r2
9002023e:	4622      	mov	r2, r4
90020240:	46ac      	mov	ip, r5
90020242:	bcf0      	pop	{r4, r5, r6, r7}
90020244:	4760      	bx	ip
90020246:	4621      	mov	r1, r4
90020248:	4628      	mov	r0, r5
9002024a:	bcf0      	pop	{r4, r5, r6, r7}
9002024c:	f7ff bd94 	b.w	9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020250:	4621      	mov	r1, r4
90020252:	4628      	mov	r0, r5
90020254:	bcf0      	pop	{r4, r5, r6, r7}
90020256:	f7ff bee5 	b.w	90020024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9002025c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9002025c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020260:	b093      	sub	sp, #76	@ 0x4c
90020262:	4681      	mov	r9, r0
90020264:	4688      	mov	r8, r1
90020266:	6810      	ldr	r0, [r2, #0]
90020268:	6851      	ldr	r1, [r2, #4]
9002026a:	ac0e      	add	r4, sp, #56	@ 0x38
9002026c:	4616      	mov	r6, r2
9002026e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90020272:	4f6b      	ldr	r7, [pc, #428]	@ (90020420 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90020274:	c403      	stmia	r4!, {r0, r1}
90020276:	6818      	ldr	r0, [r3, #0]
90020278:	ac10      	add	r4, sp, #64	@ 0x40
9002027a:	6859      	ldr	r1, [r3, #4]
9002027c:	c403      	stmia	r4!, {r0, r1}
9002027e:	a80e      	add	r0, sp, #56	@ 0x38
90020280:	f7f6 fe4c 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020284:	4631      	mov	r1, r6
90020286:	a810      	add	r0, sp, #64	@ 0x40
90020288:	4e66      	ldr	r6, [pc, #408]	@ (90020424 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9002028a:	f7f6 fe6f 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002028e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020292:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90020296:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9002029a:	6830      	ldr	r0, [r6, #0]
9002029c:	fb11 2103 	smlabb	r1, r1, r3, r2
900202a0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
900202a4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
900202a8:	4489      	add	r9, r1
900202aa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
900202ae:	440a      	add	r2, r1
900202b0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
900202b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
900202b8:	4413      	add	r3, r2
900202ba:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
900202be:	6803      	ldr	r3, [r0, #0]
900202c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900202c2:	4798      	blx	r3
900202c4:	f010 0f80 	tst.w	r0, #128	@ 0x80
900202c8:	6830      	ldr	r0, [r6, #0]
900202ca:	d01d      	beq.n	90020308 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
900202cc:	2200      	movs	r2, #0
900202ce:	6801      	ldr	r1, [r0, #0]
900202d0:	b2a4      	uxth	r4, r4
900202d2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900202d6:	b2ad      	uxth	r5, r5
900202d8:	e9cd 2208 	strd	r2, r2, [sp, #32]
900202dc:	220b      	movs	r2, #11
900202de:	9207      	str	r2, [sp, #28]
900202e0:	883a      	ldrh	r2, [r7, #0]
900202e2:	9502      	str	r5, [sp, #8]
900202e4:	9206      	str	r2, [sp, #24]
900202e6:	2201      	movs	r2, #1
900202e8:	9401      	str	r4, [sp, #4]
900202ea:	e9cd a204 	strd	sl, r2, [sp, #16]
900202ee:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
900202f2:	9203      	str	r2, [sp, #12]
900202f4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
900202f8:	9200      	str	r2, [sp, #0]
900202fa:	4642      	mov	r2, r8
900202fc:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
900202fe:	4649      	mov	r1, r9
90020300:	47a0      	blx	r4
90020302:	b013      	add	sp, #76	@ 0x4c
90020304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020308:	6803      	ldr	r3, [r0, #0]
9002030a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002030c:	4798      	blx	r3
9002030e:	883b      	ldrh	r3, [r7, #0]
90020310:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020314:	f04f 0e04 	mov.w	lr, #4
90020318:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9002031c:	435d      	muls	r5, r3
9002031e:	fb03 1202 	mla	r2, r3, r2, r1
90020322:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020326:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002032a:	920c      	str	r2, [sp, #48]	@ 0x30
9002032c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90020330:	1b12      	subs	r2, r2, r4
90020332:	920d      	str	r2, [sp, #52]	@ 0x34
90020334:	0062      	lsls	r2, r4, #1
90020336:	1b1c      	subs	r4, r3, r4
90020338:	920a      	str	r2, [sp, #40]	@ 0x28
9002033a:	0063      	lsls	r3, r4, #1
9002033c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002033e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020340:	4298      	cmp	r0, r3
90020342:	d266      	bcs.n	90020412 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90020344:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020346:	eb00 0b03 	add.w	fp, r0, r3
9002034a:	4558      	cmp	r0, fp
9002034c:	d25c      	bcs.n	90020408 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9002034e:	f819 3b01 	ldrb.w	r3, [r9], #1
90020352:	fb1e e303 	smlabb	r3, lr, r3, lr
90020356:	f858 2003 	ldr.w	r2, [r8, r3]
9002035a:	0e11      	lsrs	r1, r2, #24
9002035c:	d012      	beq.n	90020384 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002035e:	29ff      	cmp	r1, #255	@ 0xff
90020360:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020364:	d110      	bne.n	90020388 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020366:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002036a:	d10d      	bne.n	90020388 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002036c:	0953      	lsrs	r3, r2, #5
9002036e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90020372:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020376:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002037a:	f027 0707 	bic.w	r7, r7, #7
9002037e:	431f      	orrs	r7, r3
90020380:	433a      	orrs	r2, r7
90020382:	8002      	strh	r2, [r0, #0]
90020384:	3002      	adds	r0, #2
90020386:	e7e0      	b.n	9002034a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020388:	fb0a f101 	mul.w	r1, sl, r1
9002038c:	8806      	ldrh	r6, [r0, #0]
9002038e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90020392:	b2d2      	uxtb	r2, r2
90020394:	1c4b      	adds	r3, r1, #1
90020396:	1235      	asrs	r5, r6, #8
90020398:	10f4      	asrs	r4, r6, #3
9002039a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002039e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900203a2:	00f6      	lsls	r6, r6, #3
900203a4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900203a8:	121b      	asrs	r3, r3, #8
900203aa:	b2f6      	uxtb	r6, r6
900203ac:	b299      	uxth	r1, r3
900203ae:	43db      	mvns	r3, r3
900203b0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900203b4:	fb1c fc01 	smulbb	ip, ip, r1
900203b8:	b2db      	uxtb	r3, r3
900203ba:	fb12 f201 	smulbb	r2, r2, r1
900203be:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900203c2:	fb05 c503 	mla	r5, r5, r3, ip
900203c6:	b2ff      	uxtb	r7, r7
900203c8:	fb06 2203 	mla	r2, r6, r3, r2
900203cc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900203d0:	fb17 f701 	smulbb	r7, r7, r1
900203d4:	b2ad      	uxth	r5, r5
900203d6:	b292      	uxth	r2, r2
900203d8:	fb04 7403 	mla	r4, r4, r3, r7
900203dc:	f105 0c01 	add.w	ip, r5, #1
900203e0:	1c57      	adds	r7, r2, #1
900203e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900203e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900203ea:	b2a4      	uxth	r4, r4
900203ec:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900203f0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900203f4:	433d      	orrs	r5, r7
900203f6:	1c67      	adds	r7, r4, #1
900203f8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900203fc:	0964      	lsrs	r4, r4, #5
900203fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90020402:	4325      	orrs	r5, r4
90020404:	8005      	strh	r5, [r0, #0]
90020406:	e7bd      	b.n	90020384 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90020408:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002040a:	4418      	add	r0, r3
9002040c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002040e:	4499      	add	r9, r3
90020410:	e795      	b.n	9002033e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90020412:	4b04      	ldr	r3, [pc, #16]	@ (90020424 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020414:	6818      	ldr	r0, [r3, #0]
90020416:	6803      	ldr	r3, [r0, #0]
90020418:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002041a:	4798      	blx	r3
9002041c:	e771      	b.n	90020302 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9002041e:	bf00      	nop
90020420:	240234b6 	.word	0x240234b6
90020424:	240234bc 	.word	0x240234bc

90020428 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90020428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002042c:	b087      	sub	sp, #28
9002042e:	4680      	mov	r8, r0
90020430:	460d      	mov	r5, r1
90020432:	4614      	mov	r4, r2
90020434:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
90020438:	2e00      	cmp	r6, #0
9002043a:	f000 80b9 	beq.w	900205b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9002043e:	6810      	ldr	r0, [r2, #0]
90020440:	af02      	add	r7, sp, #8
90020442:	6851      	ldr	r1, [r2, #4]
90020444:	c703      	stmia	r7!, {r0, r1}
90020446:	6818      	ldr	r0, [r3, #0]
90020448:	af04      	add	r7, sp, #16
9002044a:	6859      	ldr	r1, [r3, #4]
9002044c:	c703      	stmia	r7!, {r0, r1}
9002044e:	a802      	add	r0, sp, #8
90020450:	f7f6 fd64 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020454:	4621      	mov	r1, r4
90020456:	a804      	add	r0, sp, #16
90020458:	f7f6 fd88 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002045c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020460:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020464:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020468:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9002046c:	fb14 2103 	smlabb	r1, r4, r3, r2
90020470:	eb08 0401 	add.w	r4, r8, r1
90020474:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020478:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002047c:	440a      	add	r2, r1
9002047e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90020482:	f8ad 2010 	strh.w	r2, [sp, #16]
90020486:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002048a:	4413      	add	r3, r2
9002048c:	f8ad 3012 	strh.w	r3, [sp, #18]
90020490:	4b49      	ldr	r3, [pc, #292]	@ (900205b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020492:	6818      	ldr	r0, [r3, #0]
90020494:	6803      	ldr	r3, [r0, #0]
90020496:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020498:	4798      	blx	r3
9002049a:	4b48      	ldr	r3, [pc, #288]	@ (900205bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9002049c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
900204a0:	2eff      	cmp	r6, #255	@ 0xff
900204a2:	881a      	ldrh	r2, [r3, #0]
900204a4:	f9bd c010 	ldrsh.w	ip, [sp, #16]
900204a8:	fb02 c101 	mla	r1, r2, r1, ip
900204ac:	fb02 f207 	mul.w	r2, r2, r7
900204b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900204b4:	f105 0104 	add.w	r1, r5, #4
900204b8:	461d      	mov	r5, r3
900204ba:	d05a      	beq.n	90020572 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
900204bc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
900204c0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900204c4:	b2b6      	uxth	r6, r6
900204c6:	9301      	str	r3, [sp, #4]
900204c8:	fa1f fe8e 	uxth.w	lr, lr
900204cc:	4282      	cmp	r2, r0
900204ce:	d96a      	bls.n	900205a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900204d0:	eb00 0b0a 	add.w	fp, r0, sl
900204d4:	4583      	cmp	fp, r0
900204d6:	d940      	bls.n	9002055a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900204d8:	8805      	ldrh	r5, [r0, #0]
900204da:	f814 3b01 	ldrb.w	r3, [r4], #1
900204de:	122f      	asrs	r7, r5, #8
900204e0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900204e4:	ea4f 09e5 	mov.w	r9, r5, asr #3
900204e8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900204ec:	00ed      	lsls	r5, r5, #3
900204ee:	ea4f 2c23 	mov.w	ip, r3, asr #8
900204f2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900204f6:	fb17 f70e 	smulbb	r7, r7, lr
900204fa:	b2ed      	uxtb	r5, r5
900204fc:	fb19 f90e 	smulbb	r9, r9, lr
90020500:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020504:	fb15 f50e 	smulbb	r5, r5, lr
90020508:	fb0c 7c06 	mla	ip, ip, r6, r7
9002050c:	10df      	asrs	r7, r3, #3
9002050e:	00db      	lsls	r3, r3, #3
90020510:	fa1f fc8c 	uxth.w	ip, ip
90020514:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020518:	b2db      	uxtb	r3, r3
9002051a:	fb07 9706 	mla	r7, r7, r6, r9
9002051e:	f10c 0901 	add.w	r9, ip, #1
90020522:	fb03 5306 	mla	r3, r3, r6, r5
90020526:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9002052a:	b29b      	uxth	r3, r3
9002052c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90020530:	b2bf      	uxth	r7, r7
90020532:	f103 0c01 	add.w	ip, r3, #1
90020536:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002053a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002053e:	ea4c 0c09 	orr.w	ip, ip, r9
90020542:	f107 0901 	add.w	r9, r7, #1
90020546:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9002054a:	097f      	lsrs	r7, r7, #5
9002054c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90020550:	ea4c 0c07 	orr.w	ip, ip, r7
90020554:	f820 cb02 	strh.w	ip, [r0], #2
90020558:	e7bc      	b.n	900204d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9002055a:	9b01      	ldr	r3, [sp, #4]
9002055c:	881b      	ldrh	r3, [r3, #0]
9002055e:	eba3 0308 	sub.w	r3, r3, r8
90020562:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020566:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002056a:	eba3 0308 	sub.w	r3, r3, r8
9002056e:	441c      	add	r4, r3
90020570:	e7ac      	b.n	900204cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90020572:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020576:	4282      	cmp	r2, r0
90020578:	d915      	bls.n	900205a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002057a:	eb00 060a 	add.w	r6, r0, sl
9002057e:	4286      	cmp	r6, r0
90020580:	d906      	bls.n	90020590 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90020582:	f814 3b01 	ldrb.w	r3, [r4], #1
90020586:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002058a:	f820 3b02 	strh.w	r3, [r0], #2
9002058e:	e7f6      	b.n	9002057e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90020590:	882b      	ldrh	r3, [r5, #0]
90020592:	eba3 0308 	sub.w	r3, r3, r8
90020596:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002059a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002059e:	eba3 0308 	sub.w	r3, r3, r8
900205a2:	441c      	add	r4, r3
900205a4:	e7e7      	b.n	90020576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
900205a6:	4b04      	ldr	r3, [pc, #16]	@ (900205b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900205a8:	6818      	ldr	r0, [r3, #0]
900205aa:	6803      	ldr	r3, [r0, #0]
900205ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900205ae:	4798      	blx	r3
900205b0:	b007      	add	sp, #28
900205b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900205b6:	bf00      	nop
900205b8:	240234bc 	.word	0x240234bc
900205bc:	240234b6 	.word	0x240234b6

900205c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
900205c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900205c4:	b091      	sub	sp, #68	@ 0x44
900205c6:	4680      	mov	r8, r0
900205c8:	460f      	mov	r7, r1
900205ca:	4614      	mov	r4, r2
900205cc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
900205d0:	2d00      	cmp	r5, #0
900205d2:	d051      	beq.n	90020678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900205d4:	6810      	ldr	r0, [r2, #0]
900205d6:	ae0c      	add	r6, sp, #48	@ 0x30
900205d8:	6851      	ldr	r1, [r2, #4]
900205da:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 900207dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
900205de:	c603      	stmia	r6!, {r0, r1}
900205e0:	6818      	ldr	r0, [r3, #0]
900205e2:	ae0e      	add	r6, sp, #56	@ 0x38
900205e4:	6859      	ldr	r1, [r3, #4]
900205e6:	c603      	stmia	r6!, {r0, r1}
900205e8:	a80c      	add	r0, sp, #48	@ 0x30
900205ea:	f7f6 fc97 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900205ee:	4621      	mov	r1, r4
900205f0:	a80e      	add	r0, sp, #56	@ 0x38
900205f2:	f7f6 fcbb 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900205f6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
900205fa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900205fe:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90020602:	f8d9 0000 	ldr.w	r0, [r9]
90020606:	fb11 2103 	smlabb	r1, r1, r3, r2
9002060a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9002060e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90020612:	eb08 0401 	add.w	r4, r8, r1
90020616:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9002061a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 900207e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9002061e:	440a      	add	r2, r1
90020620:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90020624:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90020628:	4413      	add	r3, r2
9002062a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9002062e:	6803      	ldr	r3, [r0, #0]
90020630:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020632:	4798      	blx	r3
90020634:	f010 0f80 	tst.w	r0, #128	@ 0x80
90020638:	f8d9 0000 	ldr.w	r0, [r9]
9002063c:	d01f      	beq.n	9002067e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9002063e:	2200      	movs	r2, #0
90020640:	6801      	ldr	r1, [r0, #0]
90020642:	b2b6      	uxth	r6, r6
90020644:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020648:	e9cd 2208 	strd	r2, r2, [sp, #32]
9002064c:	220b      	movs	r2, #11
9002064e:	9207      	str	r2, [sp, #28]
90020650:	f8b8 2000 	ldrh.w	r2, [r8]
90020654:	9601      	str	r6, [sp, #4]
90020656:	9206      	str	r2, [sp, #24]
90020658:	2201      	movs	r2, #1
9002065a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9002065e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90020662:	9203      	str	r2, [sp, #12]
90020664:	fa1f f28a 	uxth.w	r2, sl
90020668:	9202      	str	r2, [sp, #8]
9002066a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9002066e:	9200      	str	r2, [sp, #0]
90020670:	463a      	mov	r2, r7
90020672:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
90020674:	4621      	mov	r1, r4
90020676:	47a8      	blx	r5
90020678:	b011      	add	sp, #68	@ 0x44
9002067a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002067e:	6803      	ldr	r3, [r0, #0]
90020680:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020684:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020686:	4798      	blx	r3
90020688:	f8b8 2000 	ldrh.w	r2, [r8]
9002068c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020690:	2dff      	cmp	r5, #255	@ 0xff
90020692:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90020696:	fb0a fa02 	mul.w	sl, sl, r2
9002069a:	fb02 1303 	mla	r3, r2, r3, r1
9002069e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900206a2:	d062      	beq.n	9002076a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
900206a4:	ea6f 0c05 	mvn.w	ip, r5
900206a8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
900206ac:	b2ad      	uxth	r5, r5
900206ae:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
900206b2:	fa5f fc8c 	uxtb.w	ip, ip
900206b6:	930a      	str	r3, [sp, #40]	@ 0x28
900206b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900206ba:	4298      	cmp	r0, r3
900206bc:	f080 8085 	bcs.w	900207ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
900206c0:	eb00 0b09 	add.w	fp, r0, r9
900206c4:	4558      	cmp	r0, fp
900206c6:	d246      	bcs.n	90020756 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
900206c8:	f814 eb01 	ldrb.w	lr, [r4], #1
900206cc:	2303      	movs	r3, #3
900206ce:	2204      	movs	r2, #4
900206d0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
900206d4:	8803      	ldrh	r3, [r0, #0]
900206d6:	eb07 0a0e 	add.w	sl, r7, lr
900206da:	1219      	asrs	r1, r3, #8
900206dc:	10da      	asrs	r2, r3, #3
900206de:	f817 e00e 	ldrb.w	lr, [r7, lr]
900206e2:	f89a 8002 	ldrb.w	r8, [sl, #2]
900206e6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900206ea:	00db      	lsls	r3, r3, #3
900206ec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900206f0:	fb18 f805 	smulbb	r8, r8, r5
900206f4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
900206f8:	fb1e fe05 	smulbb	lr, lr, r5
900206fc:	b2db      	uxtb	r3, r3
900206fe:	fb01 810c 	mla	r1, r1, ip, r8
90020702:	f89a 8001 	ldrb.w	r8, [sl, #1]
90020706:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9002070a:	fb18 f805 	smulbb	r8, r8, r5
9002070e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90020712:	b289      	uxth	r1, r1
90020714:	fb02 820c 	mla	r2, r2, ip, r8
90020718:	fb03 e30c 	mla	r3, r3, ip, lr
9002071c:	f101 0801 	add.w	r8, r1, #1
90020720:	b292      	uxth	r2, r2
90020722:	b29b      	uxth	r3, r3
90020724:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020728:	f102 0801 	add.w	r8, r2, #1
9002072c:	f103 0e01 	add.w	lr, r3, #1
90020730:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020734:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020738:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9002073c:	ea4f 1858 	mov.w	r8, r8, lsr #5
90020740:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020744:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90020748:	ea4e 0101 	orr.w	r1, lr, r1
9002074c:	ea41 0108 	orr.w	r1, r1, r8
90020750:	f820 1b02 	strh.w	r1, [r0], #2
90020754:	e7b6      	b.n	900206c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020756:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020758:	881b      	ldrh	r3, [r3, #0]
9002075a:	1b9b      	subs	r3, r3, r6
9002075c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020760:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020764:	1b9b      	subs	r3, r3, r6
90020766:	441c      	add	r4, r3
90020768:	e7a6      	b.n	900206b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002076a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002076e:	2203      	movs	r2, #3
90020770:	2504      	movs	r5, #4
90020772:	4919      	ldr	r1, [pc, #100]	@ (900207d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020774:	4550      	cmp	r0, sl
90020776:	d228      	bcs.n	900207ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020778:	eb00 0c09 	add.w	ip, r0, r9
9002077c:	4560      	cmp	r0, ip
9002077e:	4623      	mov	r3, r4
90020780:	d219      	bcs.n	900207b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020782:	f893 e000 	ldrb.w	lr, [r3]
90020786:	3401      	adds	r4, #1
90020788:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9002078c:	eb07 0b0e 	add.w	fp, r7, lr
90020790:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020794:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020798:	f89b b001 	ldrb.w	fp, [fp, #1]
9002079c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
900207a0:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
900207a4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
900207a8:	ea43 030b 	orr.w	r3, r3, fp
900207ac:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
900207b0:	f820 3b02 	strh.w	r3, [r0], #2
900207b4:	e7e2      	b.n	9002077c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
900207b6:	f8b8 3000 	ldrh.w	r3, [r8]
900207ba:	1b9b      	subs	r3, r3, r6
900207bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900207c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900207c4:	1b9b      	subs	r3, r3, r6
900207c6:	441c      	add	r4, r3
900207c8:	e7d4      	b.n	90020774 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
900207ca:	4b04      	ldr	r3, [pc, #16]	@ (900207dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
900207cc:	6818      	ldr	r0, [r3, #0]
900207ce:	6803      	ldr	r3, [r0, #0]
900207d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900207d2:	4798      	blx	r3
900207d4:	e750      	b.n	90020678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900207d6:	bf00      	nop
900207d8:	fffff800 	.word	0xfffff800
900207dc:	240234bc 	.word	0x240234bc
900207e0:	240234b6 	.word	0x240234b6

900207e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
900207e4:	b4f0      	push	{r4, r5, r6, r7}
900207e6:	460c      	mov	r4, r1
900207e8:	4611      	mov	r1, r2
900207ea:	f89d 5014 	ldrb.w	r5, [sp, #20]
900207ee:	461a      	mov	r2, r3
900207f0:	780f      	ldrb	r7, [r1, #0]
900207f2:	9b04      	ldr	r3, [sp, #16]
900207f4:	2f01      	cmp	r7, #1
900207f6:	784e      	ldrb	r6, [r1, #1]
900207f8:	d038      	beq.n	9002086c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
900207fa:	d31f      	bcc.n	9002083c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
900207fc:	2f02      	cmp	r7, #2
900207fe:	d14d      	bne.n	9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020800:	2e03      	cmp	r6, #3
90020802:	d84b      	bhi.n	9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020804:	e8df f006 	tbb	[pc, r6]
90020808:	17140702 	.word	0x17140702
9002080c:	9504      	str	r5, [sp, #16]
9002080e:	4620      	mov	r0, r4
90020810:	bcf0      	pop	{r4, r5, r6, r7}
90020812:	f7ff be09 	b.w	90020428 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90020816:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020818:	2800      	cmp	r0, #0
9002081a:	d03f      	beq.n	9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9002081c:	6806      	ldr	r6, [r0, #0]
9002081e:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020822:	68b5      	ldr	r5, [r6, #8]
90020824:	4613      	mov	r3, r2
90020826:	46ac      	mov	ip, r5
90020828:	460a      	mov	r2, r1
9002082a:	4621      	mov	r1, r4
9002082c:	bcf0      	pop	{r4, r5, r6, r7}
9002082e:	4760      	bx	ip
90020830:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020834:	e7f0      	b.n	90020818 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020836:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002083a:	e7ed      	b.n	90020818 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9002083c:	2e03      	cmp	r6, #3
9002083e:	d82d      	bhi.n	9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020840:	e8df f006 	tbb	[pc, r6]
90020844:	110e0702 	.word	0x110e0702
90020848:	9504      	str	r5, [sp, #16]
9002084a:	4620      	mov	r0, r4
9002084c:	bcf0      	pop	{r4, r5, r6, r7}
9002084e:	f7ff bd05 	b.w	9002025c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90020852:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020854:	b310      	cbz	r0, 9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020856:	6806      	ldr	r6, [r0, #0]
90020858:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002085c:	68f5      	ldr	r5, [r6, #12]
9002085e:	e7e1      	b.n	90020824 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020860:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020864:	e7f6      	b.n	90020854 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020866:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002086a:	e7f3      	b.n	90020854 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9002086c:	2e03      	cmp	r6, #3
9002086e:	d815      	bhi.n	9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020870:	e8df f006 	tbb	[pc, r6]
90020874:	110e0702 	.word	0x110e0702
90020878:	9504      	str	r5, [sp, #16]
9002087a:	4620      	mov	r0, r4
9002087c:	bcf0      	pop	{r4, r5, r6, r7}
9002087e:	f7ff be9f 	b.w	900205c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020882:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020884:	b150      	cbz	r0, 9002089c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020886:	6806      	ldr	r6, [r0, #0]
90020888:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002088c:	6935      	ldr	r5, [r6, #16]
9002088e:	e7c9      	b.n	90020824 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020890:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020894:	e7f6      	b.n	90020884 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020896:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002089a:	e7f3      	b.n	90020884 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002089c:	bcf0      	pop	{r4, r5, r6, r7}
9002089e:	4770      	bx	lr

900208a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
900208a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900208a4:	b087      	sub	sp, #28
900208a6:	4604      	mov	r4, r0
900208a8:	460e      	mov	r6, r1
900208aa:	6810      	ldr	r0, [r2, #0]
900208ac:	6851      	ldr	r1, [r2, #4]
900208ae:	ad02      	add	r5, sp, #8
900208b0:	4617      	mov	r7, r2
900208b2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
900208b6:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90020ae8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
900208ba:	c503      	stmia	r5!, {r0, r1}
900208bc:	6818      	ldr	r0, [r3, #0]
900208be:	ad04      	add	r5, sp, #16
900208c0:	6859      	ldr	r1, [r3, #4]
900208c2:	c503      	stmia	r5!, {r0, r1}
900208c4:	a802      	add	r0, sp, #8
900208c6:	f7f6 fb29 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900208ca:	4639      	mov	r1, r7
900208cc:	a804      	add	r0, sp, #16
900208ce:	f7f6 fb4d 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900208d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900208d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900208da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900208de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900208e2:	fb11 2103 	smlabb	r1, r1, r3, r2
900208e6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
900208ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
900208ee:	440e      	add	r6, r1
900208f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900208f4:	440a      	add	r2, r1
900208f6:	f8ad 2010 	strh.w	r2, [sp, #16]
900208fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900208fe:	4413      	add	r3, r2
90020900:	f8ad 3012 	strh.w	r3, [sp, #18]
90020904:	4b77      	ldr	r3, [pc, #476]	@ (90020ae4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020906:	6818      	ldr	r0, [r3, #0]
90020908:	6803      	ldr	r3, [r0, #0]
9002090a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002090c:	4798      	blx	r3
9002090e:	f8b9 b000 	ldrh.w	fp, [r9]
90020912:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020916:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002091a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002091e:	fb05 f50b 	mul.w	r5, r5, fp
90020922:	fb0b 2303 	mla	r3, fp, r3, r2
90020926:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002092a:	ea4f 0348 	mov.w	r3, r8, lsl #1
9002092e:	9300      	str	r3, [sp, #0]
90020930:	d069      	beq.n	90020a06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90020932:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90020936:	4558      	cmp	r0, fp
90020938:	f080 80cc 	bcs.w	90020ad4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002093c:	9b00      	ldr	r3, [sp, #0]
9002093e:	4631      	mov	r1, r6
90020940:	18c3      	adds	r3, r0, r3
90020942:	9301      	str	r3, [sp, #4]
90020944:	9b01      	ldr	r3, [sp, #4]
90020946:	4298      	cmp	r0, r3
90020948:	d24f      	bcs.n	900209ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9002094a:	f811 2b01 	ldrb.w	r2, [r1], #1
9002094e:	2a00      	cmp	r2, #0
90020950:	d048      	beq.n	900209e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020952:	fb0a f202 	mul.w	r2, sl, r2
90020956:	1c53      	adds	r3, r2, #1
90020958:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002095c:	121b      	asrs	r3, r3, #8
9002095e:	d041      	beq.n	900209e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020960:	8802      	ldrh	r2, [r0, #0]
90020962:	b29e      	uxth	r6, r3
90020964:	f8b4 c000 	ldrh.w	ip, [r4]
90020968:	43db      	mvns	r3, r3
9002096a:	1215      	asrs	r5, r2, #8
9002096c:	b2db      	uxtb	r3, r3
9002096e:	ea4f 272c 	mov.w	r7, ip, asr #8
90020972:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020976:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002097a:	fb15 f503 	smulbb	r5, r5, r3
9002097e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020982:	00d2      	lsls	r2, r2, #3
90020984:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020988:	fb07 5706 	mla	r7, r7, r6, r5
9002098c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020990:	b2d2      	uxtb	r2, r2
90020992:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020996:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002099a:	fb1e fe03 	smulbb	lr, lr, r3
9002099e:	b2bf      	uxth	r7, r7
900209a0:	fb12 f203 	smulbb	r2, r2, r3
900209a4:	fa5f fc8c 	uxtb.w	ip, ip
900209a8:	fb05 e506 	mla	r5, r5, r6, lr
900209ac:	f107 0e01 	add.w	lr, r7, #1
900209b0:	fb0c 2c06 	mla	ip, ip, r6, r2
900209b4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
900209b8:	fa1f fc8c 	uxth.w	ip, ip
900209bc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
900209c0:	b2ad      	uxth	r5, r5
900209c2:	f10c 0701 	add.w	r7, ip, #1
900209c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900209ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900209ce:	ea47 070e 	orr.w	r7, r7, lr
900209d2:	f105 0e01 	add.w	lr, r5, #1
900209d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900209da:	096d      	lsrs	r5, r5, #5
900209dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900209e0:	432f      	orrs	r7, r5
900209e2:	8007      	strh	r7, [r0, #0]
900209e4:	3002      	adds	r0, #2
900209e6:	3402      	adds	r4, #2
900209e8:	e7ac      	b.n	90020944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
900209ea:	f8b9 3000 	ldrh.w	r3, [r9]
900209ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900209f2:	eba3 0308 	sub.w	r3, r3, r8
900209f6:	eba6 0608 	sub.w	r6, r6, r8
900209fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900209fe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020a02:	440e      	add	r6, r1
90020a04:	e797      	b.n	90020936 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90020a06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90020a0a:	42a8      	cmp	r0, r5
90020a0c:	d262      	bcs.n	90020ad4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020a0e:	9b00      	ldr	r3, [sp, #0]
90020a10:	4631      	mov	r1, r6
90020a12:	eb00 0b03 	add.w	fp, r0, r3
90020a16:	4558      	cmp	r0, fp
90020a18:	d24e      	bcs.n	90020ab8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90020a1a:	f811 3b01 	ldrb.w	r3, [r1], #1
90020a1e:	b12b      	cbz	r3, 90020a2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020a20:	2bff      	cmp	r3, #255	@ 0xff
90020a22:	f8b4 e000 	ldrh.w	lr, [r4]
90020a26:	d104      	bne.n	90020a32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020a28:	f8a0 e000 	strh.w	lr, [r0]
90020a2c:	3002      	adds	r0, #2
90020a2e:	3402      	adds	r4, #2
90020a30:	e7f1      	b.n	90020a16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90020a32:	8802      	ldrh	r2, [r0, #0]
90020a34:	b29f      	uxth	r7, r3
90020a36:	43db      	mvns	r3, r3
90020a38:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020a3c:	1216      	asrs	r6, r2, #8
90020a3e:	b2db      	uxtb	r3, r3
90020a40:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020a44:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020a48:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020a4c:	00d2      	lsls	r2, r2, #3
90020a4e:	fb16 f603 	smulbb	r6, r6, r3
90020a52:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020a56:	b2d2      	uxtb	r2, r2
90020a58:	fb0c 6c07 	mla	ip, ip, r7, r6
90020a5c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020a60:	fb1a fa03 	smulbb	sl, sl, r3
90020a64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020a68:	fa1f fc8c 	uxth.w	ip, ip
90020a6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020a70:	fb12 f303 	smulbb	r3, r2, r3
90020a74:	fa5f fe8e 	uxtb.w	lr, lr
90020a78:	fb06 a607 	mla	r6, r6, r7, sl
90020a7c:	f10c 0201 	add.w	r2, ip, #1
90020a80:	fb0e 3307 	mla	r3, lr, r7, r3
90020a84:	b2b6      	uxth	r6, r6
90020a86:	b29b      	uxth	r3, r3
90020a88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020a8c:	f106 0a01 	add.w	sl, r6, #1
90020a90:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020a94:	f103 0c01 	add.w	ip, r3, #1
90020a98:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020a9c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020aa0:	0976      	lsrs	r6, r6, #5
90020aa2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020aa6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020aaa:	ea4c 0c02 	orr.w	ip, ip, r2
90020aae:	ea4c 0c06 	orr.w	ip, ip, r6
90020ab2:	f8a0 c000 	strh.w	ip, [r0]
90020ab6:	e7b9      	b.n	90020a2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020ab8:	f8b9 3000 	ldrh.w	r3, [r9]
90020abc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020ac0:	eba3 0308 	sub.w	r3, r3, r8
90020ac4:	eba6 0608 	sub.w	r6, r6, r8
90020ac8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020acc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020ad0:	440e      	add	r6, r1
90020ad2:	e79a      	b.n	90020a0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020ad4:	4b03      	ldr	r3, [pc, #12]	@ (90020ae4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020ad6:	6818      	ldr	r0, [r3, #0]
90020ad8:	6803      	ldr	r3, [r0, #0]
90020ada:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020adc:	4798      	blx	r3
90020ade:	b007      	add	sp, #28
90020ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ae4:	240234bc 	.word	0x240234bc
90020ae8:	240234b6 	.word	0x240234b6

90020aec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020af0:	b089      	sub	sp, #36	@ 0x24
90020af2:	4607      	mov	r7, r0
90020af4:	4688      	mov	r8, r1
90020af6:	4692      	mov	sl, r2
90020af8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90020afc:	4699      	mov	r9, r3
90020afe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020b00:	2e00      	cmp	r6, #0
90020b02:	d048      	beq.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020b04:	4608      	mov	r0, r1
90020b06:	f7fa f813 	bl	9001ab30 <_ZNK8touchgfx6Bitmap8getWidthEv>
90020b0a:	4605      	mov	r5, r0
90020b0c:	4640      	mov	r0, r8
90020b0e:	f7fa f843 	bl	9001ab98 <_ZNK8touchgfx6Bitmap9getHeightEv>
90020b12:	f8ad 000e 	strh.w	r0, [sp, #14]
90020b16:	4640      	mov	r0, r8
90020b18:	f8ad a008 	strh.w	sl, [sp, #8]
90020b1c:	f8ad 500c 	strh.w	r5, [sp, #12]
90020b20:	f8ad 900a 	strh.w	r9, [sp, #10]
90020b24:	f7fa f8f6 	bl	9001ad14 <_ZNK8touchgfx6Bitmap7getDataEv>
90020b28:	4605      	mov	r5, r0
90020b2a:	4640      	mov	r0, r8
90020b2c:	f7fa f922 	bl	9001ad74 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90020b30:	4682      	mov	sl, r0
90020b32:	4640      	mov	r0, r8
90020b34:	f7fa f972 	bl	9001ae1c <_ZNK8touchgfx6Bitmap9getFormatEv>
90020b38:	2810      	cmp	r0, #16
90020b3a:	d82c      	bhi.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020b3c:	e8df f010 	tbh	[pc, r0, lsl #1]
90020b40:	00ba00ca 	.word	0x00ba00ca
90020b44:	002b0011 	.word	0x002b0011
90020b48:	002b002b 	.word	0x002b002b
90020b4c:	002b002b 	.word	0x002b002b
90020b50:	002b002b 	.word	0x002b002b
90020b54:	00c1002b 	.word	0x00c1002b
90020b58:	002b002b 	.word	0x002b002b
90020b5c:	002b0180 	.word	0x002b0180
90020b60:	0173      	.short	0x0173
90020b62:	4bbc      	ldr	r3, [pc, #752]	@ (90020e54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90020b64:	6818      	ldr	r0, [r3, #0]
90020b66:	6803      	ldr	r3, [r0, #0]
90020b68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020b6a:	4798      	blx	r3
90020b6c:	2eff      	cmp	r6, #255	@ 0xff
90020b6e:	d101      	bne.n	90020b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020b70:	0683      	lsls	r3, r0, #26
90020b72:	d506      	bpl.n	90020b82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90020b74:	4633      	mov	r3, r6
90020b76:	4622      	mov	r2, r4
90020b78:	a902      	add	r1, sp, #8
90020b7a:	4628      	mov	r0, r5
90020b7c:	f7ff f8fc 	bl	9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020b80:	e009      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020b82:	4640      	mov	r0, r8
90020b84:	f7fa f88e 	bl	9001aca4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020b88:	b940      	cbnz	r0, 90020b9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
90020b8a:	4623      	mov	r3, r4
90020b8c:	aa02      	add	r2, sp, #8
90020b8e:	4629      	mov	r1, r5
90020b90:	4638      	mov	r0, r7
90020b92:	f7ff f9d7 	bl	9001ff44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020b96:	b009      	add	sp, #36	@ 0x24
90020b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b9c:	f10d 0918 	add.w	r9, sp, #24
90020ba0:	4641      	mov	r1, r8
90020ba2:	f10d 0810 	add.w	r8, sp, #16
90020ba6:	4648      	mov	r0, r9
90020ba8:	f7fa f82a 	bl	9001ac00 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020bac:	e899 0003 	ldmia.w	r9, {r0, r1}
90020bb0:	e888 0003 	stmia.w	r8, {r0, r1}
90020bb4:	4640      	mov	r0, r8
90020bb6:	4621      	mov	r1, r4
90020bb8:	f7f0 f8ae 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90020bbc:	4640      	mov	r0, r8
90020bbe:	f7f0 f8ee 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90020bc2:	2800      	cmp	r0, #0
90020bc4:	d1d6      	bne.n	90020b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020bc6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020bca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020bce:	4293      	cmp	r3, r2
90020bd0:	dd12      	ble.n	90020bf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90020bd2:	1a9b      	subs	r3, r3, r2
90020bd4:	f9b4 0000 	ldrsh.w	r0, [r4]
90020bd8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020bdc:	f8ad 0018 	strh.w	r0, [sp, #24]
90020be0:	4628      	mov	r0, r5
90020be2:	f8ad 201a 	strh.w	r2, [sp, #26]
90020be6:	464a      	mov	r2, r9
90020be8:	f8ad 101c 	strh.w	r1, [sp, #28]
90020bec:	a902      	add	r1, sp, #8
90020bee:	f8ad 301e 	strh.w	r3, [sp, #30]
90020bf2:	4633      	mov	r3, r6
90020bf4:	f7ff f8c0 	bl	9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020bf8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020bfc:	f9b4 2000 	ldrsh.w	r2, [r4]
90020c00:	4293      	cmp	r3, r2
90020c02:	dd12      	ble.n	90020c2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
90020c04:	1a9b      	subs	r3, r3, r2
90020c06:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020c0a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020c0e:	f8ad 2018 	strh.w	r2, [sp, #24]
90020c12:	464a      	mov	r2, r9
90020c14:	f8ad 001a 	strh.w	r0, [sp, #26]
90020c18:	4628      	mov	r0, r5
90020c1a:	f8ad 301c 	strh.w	r3, [sp, #28]
90020c1e:	23ff      	movs	r3, #255	@ 0xff
90020c20:	f8ad 101e 	strh.w	r1, [sp, #30]
90020c24:	a902      	add	r1, sp, #8
90020c26:	f7ff f8a7 	bl	9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020c2a:	4643      	mov	r3, r8
90020c2c:	aa02      	add	r2, sp, #8
90020c2e:	4629      	mov	r1, r5
90020c30:	4638      	mov	r0, r7
90020c32:	f7ff f987 	bl	9001ff44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020c36:	88a2      	ldrh	r2, [r4, #4]
90020c38:	8823      	ldrh	r3, [r4, #0]
90020c3a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020c3e:	4413      	add	r3, r2
90020c40:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020c44:	440a      	add	r2, r1
90020c46:	b29b      	uxth	r3, r3
90020c48:	b292      	uxth	r2, r2
90020c4a:	b218      	sxth	r0, r3
90020c4c:	b211      	sxth	r1, r2
90020c4e:	4288      	cmp	r0, r1
90020c50:	dd12      	ble.n	90020c78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90020c52:	1a9b      	subs	r3, r3, r2
90020c54:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020c58:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90020c5c:	464a      	mov	r2, r9
90020c5e:	f8ad 1018 	strh.w	r1, [sp, #24]
90020c62:	a902      	add	r1, sp, #8
90020c64:	f8ad 301c 	strh.w	r3, [sp, #28]
90020c68:	23ff      	movs	r3, #255	@ 0xff
90020c6a:	f8ad 001e 	strh.w	r0, [sp, #30]
90020c6e:	4628      	mov	r0, r5
90020c70:	f8ad 601a 	strh.w	r6, [sp, #26]
90020c74:	f7ff f880 	bl	9001fd78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020c78:	88e2      	ldrh	r2, [r4, #6]
90020c7a:	8863      	ldrh	r3, [r4, #2]
90020c7c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020c80:	4413      	add	r3, r2
90020c82:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020c86:	440a      	add	r2, r1
90020c88:	b29b      	uxth	r3, r3
90020c8a:	b292      	uxth	r2, r2
90020c8c:	b218      	sxth	r0, r3
90020c8e:	b211      	sxth	r1, r2
90020c90:	4288      	cmp	r0, r1
90020c92:	dd80      	ble.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020c94:	1a9b      	subs	r3, r3, r2
90020c96:	f9b4 6000 	ldrsh.w	r6, [r4]
90020c9a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020c9e:	464a      	mov	r2, r9
90020ca0:	f8ad 301e 	strh.w	r3, [sp, #30]
90020ca4:	23ff      	movs	r3, #255	@ 0xff
90020ca6:	f8ad 6018 	strh.w	r6, [sp, #24]
90020caa:	f8ad 101a 	strh.w	r1, [sp, #26]
90020cae:	f8ad 001c 	strh.w	r0, [sp, #28]
90020cb2:	e761      	b.n	90020b78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90020cb4:	4633      	mov	r3, r6
90020cb6:	4622      	mov	r2, r4
90020cb8:	a902      	add	r1, sp, #8
90020cba:	4628      	mov	r0, r5
90020cbc:	f7ff f9b2 	bl	90020024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020cc0:	e769      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020cc2:	e9cd 4600 	strd	r4, r6, [sp]
90020cc6:	ab02      	add	r3, sp, #8
90020cc8:	4652      	mov	r2, sl
90020cca:	4629      	mov	r1, r5
90020ccc:	4638      	mov	r0, r7
90020cce:	f7ff fd89 	bl	900207e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020cd2:	e760      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020cd4:	4640      	mov	r0, r8
90020cd6:	f7f9 ffe5 	bl	9001aca4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020cda:	b948      	cbnz	r0, 90020cf0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90020cdc:	683b      	ldr	r3, [r7, #0]
90020cde:	aa02      	add	r2, sp, #8
90020ce0:	4629      	mov	r1, r5
90020ce2:	e9cd 6000 	strd	r6, r0, [sp]
90020ce6:	4638      	mov	r0, r7
90020ce8:	68de      	ldr	r6, [r3, #12]
90020cea:	4623      	mov	r3, r4
90020cec:	47b0      	blx	r6
90020cee:	e752      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020cf0:	f10d 0918 	add.w	r9, sp, #24
90020cf4:	4641      	mov	r1, r8
90020cf6:	f10d 0810 	add.w	r8, sp, #16
90020cfa:	4648      	mov	r0, r9
90020cfc:	f7f9 ff80 	bl	9001ac00 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020d00:	e899 0003 	ldmia.w	r9, {r0, r1}
90020d04:	e888 0003 	stmia.w	r8, {r0, r1}
90020d08:	4640      	mov	r0, r8
90020d0a:	4621      	mov	r1, r4
90020d0c:	f7f0 f804 	bl	90010d18 <_ZN8touchgfx4RectaNERKS0_>
90020d10:	4640      	mov	r0, r8
90020d12:	f7f0 f844 	bl	90010d9e <_ZNK8touchgfx4Rect7isEmptyEv>
90020d16:	b138      	cbz	r0, 90020d28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
90020d18:	4623      	mov	r3, r4
90020d1a:	9600      	str	r6, [sp, #0]
90020d1c:	aa02      	add	r2, sp, #8
90020d1e:	4651      	mov	r1, sl
90020d20:	4628      	mov	r0, r5
90020d22:	f7ff fdbd 	bl	900208a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020d26:	e736      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020d28:	683b      	ldr	r3, [r7, #0]
90020d2a:	aa02      	add	r2, sp, #8
90020d2c:	4629      	mov	r1, r5
90020d2e:	e9cd 6000 	strd	r6, r0, [sp]
90020d32:	4638      	mov	r0, r7
90020d34:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90020d38:	4643      	mov	r3, r8
90020d3a:	47d8      	blx	fp
90020d3c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020d40:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020d44:	4293      	cmp	r3, r2
90020d46:	dd13      	ble.n	90020d70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90020d48:	f9b4 0000 	ldrsh.w	r0, [r4]
90020d4c:	1a9b      	subs	r3, r3, r2
90020d4e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020d52:	f8ad 0018 	strh.w	r0, [sp, #24]
90020d56:	4628      	mov	r0, r5
90020d58:	f8ad 201a 	strh.w	r2, [sp, #26]
90020d5c:	aa02      	add	r2, sp, #8
90020d5e:	f8ad 101c 	strh.w	r1, [sp, #28]
90020d62:	4651      	mov	r1, sl
90020d64:	f8ad 301e 	strh.w	r3, [sp, #30]
90020d68:	464b      	mov	r3, r9
90020d6a:	9600      	str	r6, [sp, #0]
90020d6c:	f7ff fd98 	bl	900208a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020d70:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020d74:	f9b4 2000 	ldrsh.w	r2, [r4]
90020d78:	4293      	cmp	r3, r2
90020d7a:	dd13      	ble.n	90020da4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90020d7c:	1a9b      	subs	r3, r3, r2
90020d7e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020d82:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020d86:	f8ad 2018 	strh.w	r2, [sp, #24]
90020d8a:	aa02      	add	r2, sp, #8
90020d8c:	f8ad 001a 	strh.w	r0, [sp, #26]
90020d90:	4628      	mov	r0, r5
90020d92:	f8ad 301c 	strh.w	r3, [sp, #28]
90020d96:	464b      	mov	r3, r9
90020d98:	f8ad 101e 	strh.w	r1, [sp, #30]
90020d9c:	4651      	mov	r1, sl
90020d9e:	9600      	str	r6, [sp, #0]
90020da0:	f7ff fd7e 	bl	900208a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020da4:	88a2      	ldrh	r2, [r4, #4]
90020da6:	8823      	ldrh	r3, [r4, #0]
90020da8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020dac:	4413      	add	r3, r2
90020dae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020db2:	440a      	add	r2, r1
90020db4:	b29b      	uxth	r3, r3
90020db6:	b292      	uxth	r2, r2
90020db8:	b218      	sxth	r0, r3
90020dba:	b211      	sxth	r1, r2
90020dbc:	4288      	cmp	r0, r1
90020dbe:	dd13      	ble.n	90020de8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90020dc0:	1a9b      	subs	r3, r3, r2
90020dc2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020dc6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90020dca:	aa02      	add	r2, sp, #8
90020dcc:	f8ad 1018 	strh.w	r1, [sp, #24]
90020dd0:	4651      	mov	r1, sl
90020dd2:	f8ad 301c 	strh.w	r3, [sp, #28]
90020dd6:	464b      	mov	r3, r9
90020dd8:	f8ad 001e 	strh.w	r0, [sp, #30]
90020ddc:	4628      	mov	r0, r5
90020dde:	9600      	str	r6, [sp, #0]
90020de0:	f8ad 701a 	strh.w	r7, [sp, #26]
90020de4:	f7ff fd5c 	bl	900208a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020de8:	88e2      	ldrh	r2, [r4, #6]
90020dea:	8863      	ldrh	r3, [r4, #2]
90020dec:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020df0:	4413      	add	r3, r2
90020df2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020df6:	440a      	add	r2, r1
90020df8:	b29b      	uxth	r3, r3
90020dfa:	b292      	uxth	r2, r2
90020dfc:	b218      	sxth	r0, r3
90020dfe:	b211      	sxth	r1, r2
90020e00:	4288      	cmp	r0, r1
90020e02:	f77f aec8 	ble.w	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e06:	f9b4 7000 	ldrsh.w	r7, [r4]
90020e0a:	1a9b      	subs	r3, r3, r2
90020e0c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020e10:	f8ad 301e 	strh.w	r3, [sp, #30]
90020e14:	464b      	mov	r3, r9
90020e16:	f8ad 7018 	strh.w	r7, [sp, #24]
90020e1a:	f8ad 101a 	strh.w	r1, [sp, #26]
90020e1e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020e22:	9600      	str	r6, [sp, #0]
90020e24:	e77a      	b.n	90020d1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90020e26:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020e2a:	2800      	cmp	r0, #0
90020e2c:	f43f aeb3 	beq.w	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e30:	6803      	ldr	r3, [r0, #0]
90020e32:	9600      	str	r6, [sp, #0]
90020e34:	68de      	ldr	r6, [r3, #12]
90020e36:	4623      	mov	r3, r4
90020e38:	aa02      	add	r2, sp, #8
90020e3a:	4629      	mov	r1, r5
90020e3c:	47b0      	blx	r6
90020e3e:	e6aa      	b.n	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e40:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020e44:	2800      	cmp	r0, #0
90020e46:	f43f aea6 	beq.w	90020b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e4a:	6803      	ldr	r3, [r0, #0]
90020e4c:	9600      	str	r6, [sp, #0]
90020e4e:	689e      	ldr	r6, [r3, #8]
90020e50:	e7f1      	b.n	90020e36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90020e52:	bf00      	nop
90020e54:	240234bc 	.word	0x240234bc

90020e58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020e58:	b180      	cbz	r0, 90020e7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90020e5a:	2903      	cmp	r1, #3
90020e5c:	d81c      	bhi.n	90020e98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020e5e:	e8df f001 	tbb	[pc, r1]
90020e62:	1d02      	.short	0x1d02
90020e64:	1f08      	.short	0x1f08
90020e66:	4b10      	ldr	r3, [pc, #64]	@ (90020ea8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020e68:	8818      	ldrh	r0, [r3, #0]
90020e6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020e6e:	4240      	negs	r0, r0
90020e70:	4770      	bx	lr
90020e72:	4b0d      	ldr	r3, [pc, #52]	@ (90020ea8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020e74:	8818      	ldrh	r0, [r3, #0]
90020e76:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020e7a:	4770      	bx	lr
90020e7c:	2903      	cmp	r1, #3
90020e7e:	d80b      	bhi.n	90020e98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020e80:	a301      	add	r3, pc, #4	@ (adr r3, 90020e88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020e82:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020e86:	bf00      	nop
90020e88:	90020e9d 	.word	0x90020e9d
90020e8c:	90020e73 	.word	0x90020e73
90020e90:	90020ea1 	.word	0x90020ea1
90020e94:	90020e67 	.word	0x90020e67
90020e98:	2000      	movs	r0, #0
90020e9a:	4770      	bx	lr
90020e9c:	2001      	movs	r0, #1
90020e9e:	4770      	bx	lr
90020ea0:	f04f 30ff 	mov.w	r0, #4294967295
90020ea4:	4770      	bx	lr
90020ea6:	bf00      	nop
90020ea8:	240234b6 	.word	0x240234b6

90020eac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020eac:	b180      	cbz	r0, 90020ed0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020eae:	2903      	cmp	r1, #3
90020eb0:	d81c      	bhi.n	90020eec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020eb2:	e8df f001 	tbb	[pc, r1]
90020eb6:	021d      	.short	0x021d
90020eb8:	071f      	.short	0x071f
90020eba:	4b10      	ldr	r3, [pc, #64]	@ (90020efc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020ebc:	8818      	ldrh	r0, [r3, #0]
90020ebe:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020ec2:	4770      	bx	lr
90020ec4:	4b0d      	ldr	r3, [pc, #52]	@ (90020efc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020ec6:	8818      	ldrh	r0, [r3, #0]
90020ec8:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020ecc:	4240      	negs	r0, r0
90020ece:	4770      	bx	lr
90020ed0:	2903      	cmp	r1, #3
90020ed2:	d80b      	bhi.n	90020eec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020ed4:	a301      	add	r3, pc, #4	@ (adr r3, 90020edc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020ed6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020eda:	bf00      	nop
90020edc:	90020ebb 	.word	0x90020ebb
90020ee0:	90020ef5 	.word	0x90020ef5
90020ee4:	90020ec5 	.word	0x90020ec5
90020ee8:	90020ef1 	.word	0x90020ef1
90020eec:	2000      	movs	r0, #0
90020eee:	4770      	bx	lr
90020ef0:	2001      	movs	r0, #1
90020ef2:	4770      	bx	lr
90020ef4:	f04f 30ff 	mov.w	r0, #4294967295
90020ef8:	4770      	bx	lr
90020efa:	bf00      	nop
90020efc:	240234b6 	.word	0x240234b6

90020f00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020f04:	b099      	sub	sp, #100	@ 0x64
90020f06:	910b      	str	r1, [sp, #44]	@ 0x2c
90020f08:	a914      	add	r1, sp, #80	@ 0x50
90020f0a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
90020f0e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90020f12:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
90020f16:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
90020f1a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90020f1e:	e881 000c 	stmia.w	r1, {r2, r3}
90020f22:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
90020f26:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90020f2a:	9309      	str	r3, [sp, #36]	@ 0x24
90020f2c:	f891 900d 	ldrb.w	r9, [r1, #13]
90020f30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90020f34:	ea4f 1749 	mov.w	r7, r9, lsl #5
90020f38:	9310      	str	r3, [sp, #64]	@ 0x40
90020f3a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90020f3e:	930c      	str	r3, [sp, #48]	@ 0x30
90020f40:	f407 7380 	and.w	r3, r7, #256	@ 0x100
90020f44:	798f      	ldrb	r7, [r1, #6]
90020f46:	431f      	orrs	r7, r3
90020f48:	f000 8195 	beq.w	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f4c:	ea4f 1909 	mov.w	r9, r9, lsl #4
90020f50:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90020f54:	f891 9007 	ldrb.w	r9, [r1, #7]
90020f58:	ea59 0903 	orrs.w	r9, r9, r3
90020f5c:	f000 818b 	beq.w	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f60:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020f64:	b29b      	uxth	r3, r3
90020f66:	2d00      	cmp	r5, #0
90020f68:	f000 812e 	beq.w	900211c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90020f6c:	1aed      	subs	r5, r5, r3
90020f6e:	b2ad      	uxth	r5, r5
90020f70:	042b      	lsls	r3, r5, #16
90020f72:	d502      	bpl.n	90020f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020f74:	1b64      	subs	r4, r4, r5
90020f76:	2500      	movs	r5, #0
90020f78:	b224      	sxth	r4, r4
90020f7a:	f9b2 1000 	ldrsh.w	r1, [r2]
90020f7e:	a814      	add	r0, sp, #80	@ 0x50
90020f80:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90020f84:	428c      	cmp	r4, r1
90020f86:	b28b      	uxth	r3, r1
90020f88:	bfbf      	itttt	lt
90020f8a:	18ed      	addlt	r5, r5, r3
90020f8c:	1b2c      	sublt	r4, r5, r4
90020f8e:	b2a5      	uxthlt	r5, r4
90020f90:	460c      	movlt	r4, r1
90020f92:	8891      	ldrh	r1, [r2, #4]
90020f94:	440b      	add	r3, r1
90020f96:	4621      	mov	r1, r4
90020f98:	b21b      	sxth	r3, r3
90020f9a:	930f      	str	r3, [sp, #60]	@ 0x3c
90020f9c:	88d3      	ldrh	r3, [r2, #6]
90020f9e:	8852      	ldrh	r2, [r2, #2]
90020fa0:	4413      	add	r3, r2
90020fa2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90020fa4:	b21b      	sxth	r3, r3
90020fa6:	930d      	str	r3, [sp, #52]	@ 0x34
90020fa8:	4bbd      	ldr	r3, [pc, #756]	@ (900212a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90020faa:	f893 b000 	ldrb.w	fp, [r3]
90020fae:	f10b 3cff 	add.w	ip, fp, #4294967295
90020fb2:	f1dc 0300 	rsbs	r3, ip, #0
90020fb6:	eb43 030c 	adc.w	r3, r3, ip
90020fba:	930e      	str	r3, [sp, #56]	@ 0x38
90020fbc:	4653      	mov	r3, sl
90020fbe:	f7f5 fe22 	bl	90016c06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020fc2:	4621      	mov	r1, r4
90020fc4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90020fc8:	4653      	mov	r3, sl
90020fca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90020fcc:	a814      	add	r0, sp, #80	@ 0x50
90020fce:	f7f5 fe37 	bl	90016c40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020fd2:	a918      	add	r1, sp, #96	@ 0x60
90020fd4:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020fd8:	a817      	add	r0, sp, #92	@ 0x5c
90020fda:	f7f5 ff5d 	bl	90016e98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020fde:	f1ba 0f00 	cmp.w	sl, #0
90020fe2:	f040 80f4 	bne.w	900211ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90020fe6:	f1bb 0f01 	cmp.w	fp, #1
90020fea:	f040 80f8 	bne.w	900211de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90020fee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020ff0:	2b00      	cmp	r3, #0
90020ff2:	f040 8145 	bne.w	90021280 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90020ff6:	b2ba      	uxth	r2, r7
90020ff8:	b905      	cbnz	r5, 90020ffc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020ffa:	b16e      	cbz	r6, 90021018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90020ffc:	fb06 5302 	mla	r3, r6, r2, r5
90021000:	9828      	ldr	r0, [sp, #160]	@ 0xa0
90021002:	4631      	mov	r1, r6
90021004:	fb08 f303 	mul.w	r3, r8, r3
90021008:	f003 0607 	and.w	r6, r3, #7
9002100c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90021010:	9328      	str	r3, [sp, #160]	@ 0xa0
90021012:	eba9 0301 	sub.w	r3, r9, r1
90021016:	930a      	str	r3, [sp, #40]	@ 0x28
90021018:	4651      	mov	r1, sl
9002101a:	980e      	ldr	r0, [sp, #56]	@ 0x38
9002101c:	f7ff ff1c 	bl	90020e58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90021020:	4681      	mov	r9, r0
90021022:	980e      	ldr	r0, [sp, #56]	@ 0x38
90021024:	f7ff ff42 	bl	90020eac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90021028:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002102a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002102c:	4683      	mov	fp, r0
9002102e:	eba3 0a01 	sub.w	sl, r3, r1
90021032:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021034:	459a      	cmp	sl, r3
90021036:	bfa8      	it	ge
90021038:	469a      	movge	sl, r3
9002103a:	f1ba 0f00 	cmp.w	sl, #0
9002103e:	f340 811a 	ble.w	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021042:	1b64      	subs	r4, r4, r5
90021044:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021046:	1b1c      	subs	r4, r3, r4
90021048:	42bc      	cmp	r4, r7
9002104a:	bfd4      	ite	le
9002104c:	ebc5 0504 	rsble	r5, r5, r4
90021050:	ebc5 0507 	rsbgt	r5, r5, r7
90021054:	2d00      	cmp	r5, #0
90021056:	f340 810e 	ble.w	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002105a:	1b52      	subs	r2, r2, r5
9002105c:	fb08 f302 	mul.w	r3, r8, r2
90021060:	930f      	str	r3, [sp, #60]	@ 0x3c
90021062:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021064:	2b00      	cmp	r3, #0
90021066:	f040 8116 	bne.w	90021296 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9002106a:	4b8e      	ldr	r3, [pc, #568]	@ (900212a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9002106c:	6818      	ldr	r0, [r3, #0]
9002106e:	6803      	ldr	r3, [r0, #0]
90021070:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021072:	4798      	blx	r3
90021074:	2301      	movs	r3, #1
90021076:	4a8c      	ldr	r2, [pc, #560]	@ (900212a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90021078:	fa03 f308 	lsl.w	r3, r3, r8
9002107c:	8811      	ldrh	r1, [r2, #0]
9002107e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
90021082:	3b01      	subs	r3, #1
90021084:	b2db      	uxtb	r3, r3
90021086:	930e      	str	r3, [sp, #56]	@ 0x38
90021088:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
9002108c:	fb01 2303 	mla	r3, r1, r3, r2
90021090:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021094:	930a      	str	r3, [sp, #40]	@ 0x28
90021096:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021098:	f3c3 4307 	ubfx	r3, r3, #16, #8
9002109c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002109e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900210a0:	0a19      	lsrs	r1, r3, #8
900210a2:	b2cb      	uxtb	r3, r1
900210a4:	9312      	str	r3, [sp, #72]	@ 0x48
900210a6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900210a8:	b2db      	uxtb	r3, r3
900210aa:	9311      	str	r3, [sp, #68]	@ 0x44
900210ac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900210ae:	095a      	lsrs	r2, r3, #5
900210b0:	4b7e      	ldr	r3, [pc, #504]	@ (900212ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
900210b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900210b6:	400b      	ands	r3, r1
900210b8:	4313      	orrs	r3, r2
900210ba:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900210bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900210c0:	4313      	orrs	r3, r2
900210c2:	b29b      	uxth	r3, r3
900210c4:	9310      	str	r3, [sp, #64]	@ 0x40
900210c6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900210c8:	781a      	ldrb	r2, [r3, #0]
900210ca:	ea4f 0349 	mov.w	r3, r9, lsl #1
900210ce:	fb05 b919 	mls	r9, r5, r9, fp
900210d2:	4132      	asrs	r2, r6
900210d4:	fb03 fb05 	mul.w	fp, r3, r5
900210d8:	930d      	str	r3, [sp, #52]	@ 0x34
900210da:	b2d2      	uxtb	r2, r2
900210dc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
900210e0:	f11a 3aff 	adds.w	sl, sl, #4294967295
900210e4:	f0c0 80f5 	bcc.w	900212d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
900210e8:	46ae      	mov	lr, r5
900210ea:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
900210ee:	f11e 3eff 	adds.w	lr, lr, #4294967295
900210f2:	f0c0 80dd 	bcc.w	900212b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
900210f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900210f8:	4013      	ands	r3, r2
900210fa:	d055      	beq.n	900211a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
900210fc:	20ff      	movs	r0, #255	@ 0xff
900210fe:	990e      	ldr	r1, [sp, #56]	@ 0x38
90021100:	fb90 f1f1 	sdiv	r1, r0, r1
90021104:	434b      	muls	r3, r1
90021106:	2bfe      	cmp	r3, #254	@ 0xfe
90021108:	dd03      	ble.n	90021112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9002110a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002110c:	4281      	cmp	r1, r0
9002110e:	f000 80c4 	beq.w	9002129a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90021112:	990c      	ldr	r1, [sp, #48]	@ 0x30
90021114:	f8bc 4000 	ldrh.w	r4, [ip]
90021118:	fb11 f303 	smulbb	r3, r1, r3
9002111c:	1220      	asrs	r0, r4, #8
9002111e:	b29b      	uxth	r3, r3
90021120:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021124:	1c59      	adds	r1, r3, #1
90021126:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9002112a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002112e:	10e1      	asrs	r1, r4, #3
90021130:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021134:	00e4      	lsls	r4, r4, #3
90021136:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002113a:	b29f      	uxth	r7, r3
9002113c:	43db      	mvns	r3, r3
9002113e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90021142:	b2db      	uxtb	r3, r3
90021144:	b2e4      	uxtb	r4, r4
90021146:	9309      	str	r3, [sp, #36]	@ 0x24
90021148:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002114a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002114e:	fb13 f907 	smulbb	r9, r3, r7
90021152:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021154:	fb00 9003 	mla	r0, r0, r3, r9
90021158:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002115a:	fb13 f907 	smulbb	r9, r3, r7
9002115e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021160:	b280      	uxth	r0, r0
90021162:	fb01 9103 	mla	r1, r1, r3, r9
90021166:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021168:	fb13 f707 	smulbb	r7, r3, r7
9002116c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002116e:	b289      	uxth	r1, r1
90021170:	fb04 7403 	mla	r4, r4, r3, r7
90021174:	1c43      	adds	r3, r0, #1
90021176:	b2a4      	uxth	r4, r4
90021178:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002117c:	f104 0901 	add.w	r9, r4, #1
90021180:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90021184:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90021188:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9002118c:	ea49 0000 	orr.w	r0, r9, r0
90021190:	f101 0901 	add.w	r9, r1, #1
90021194:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90021198:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002119c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900211a0:	ea40 0009 	orr.w	r0, r0, r9
900211a4:	f8ac 0000 	strh.w	r0, [ip]
900211a8:	4446      	add	r6, r8
900211aa:	b2b6      	uxth	r6, r6
900211ac:	2e07      	cmp	r6, #7
900211ae:	bf89      	itett	hi
900211b0:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
900211b2:	fa42 f208 	asrls.w	r2, r2, r8
900211b6:	2600      	movhi	r6, #0
900211b8:	785a      	ldrbhi	r2, [r3, #1]
900211ba:	bf8a      	itet	hi
900211bc:	3301      	addhi	r3, #1
900211be:	b2d2      	uxtbls	r2, r2
900211c0:	9328      	strhi	r3, [sp, #160]	@ 0xa0
900211c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900211c4:	449c      	add	ip, r3
900211c6:	e792      	b.n	900210ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
900211c8:	441c      	add	r4, r3
900211ca:	b224      	sxth	r4, r4
900211cc:	e6d5      	b.n	90020f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
900211ce:	f1ba 0f01 	cmp.w	sl, #1
900211d2:	f47f af0c 	bne.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900211d6:	f1bb 0f01 	cmp.w	fp, #1
900211da:	f47f af08 	bne.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900211de:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 900212a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
900211e2:	f8db 0000 	ldr.w	r0, [fp]
900211e6:	6803      	ldr	r3, [r0, #0]
900211e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900211ea:	4798      	blx	r3
900211ec:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900211f0:	465a      	mov	r2, fp
900211f2:	d006      	beq.n	90021202 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900211f4:	f1b8 0f04 	cmp.w	r8, #4
900211f8:	d140      	bne.n	9002127c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
900211fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900211fc:	3300      	adds	r3, #0
900211fe:	bf18      	it	ne
90021200:	2301      	movne	r3, #1
90021202:	0580      	lsls	r0, r0, #22
90021204:	d56e      	bpl.n	900212e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90021206:	f1b8 0f08 	cmp.w	r8, #8
9002120a:	d16b      	bne.n	900212e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9002120c:	2b00      	cmp	r3, #0
9002120e:	bf0c      	ite	eq
90021210:	f44f 7100 	moveq.w	r1, #512	@ 0x200
90021214:	f44f 7180 	movne.w	r1, #256	@ 0x100
90021218:	2d00      	cmp	r5, #0
9002121a:	f47f aee8 	bne.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002121e:	2e00      	cmp	r6, #0
90021220:	f47f aee5 	bne.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90021224:	19e3      	adds	r3, r4, r7
90021226:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90021228:	4283      	cmp	r3, r0
9002122a:	f73f aee0 	bgt.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002122e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021230:	980d      	ldr	r0, [sp, #52]	@ 0x34
90021232:	444b      	add	r3, r9
90021234:	4283      	cmp	r3, r0
90021236:	f73f aeda 	bgt.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002123a:	b2bf      	uxth	r7, r7
9002123c:	f1b8 0f08 	cmp.w	r8, #8
90021240:	6810      	ldr	r0, [r2, #0]
90021242:	f04f 0500 	mov.w	r5, #0
90021246:	bf18      	it	ne
90021248:	3701      	addne	r7, #1
9002124a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
9002124e:	6804      	ldr	r4, [r0, #0]
90021250:	bf18      	it	ne
90021252:	f027 0701 	bicne.w	r7, r7, #1
90021256:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9002125a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002125e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90021260:	bf18      	it	ne
90021262:	b2bf      	uxthne	r7, r7
90021264:	9104      	str	r1, [sp, #16]
90021266:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90021268:	e9cd 7900 	strd	r7, r9, [sp]
9002126c:	e9cd 7102 	strd	r7, r1, [sp, #8]
90021270:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90021272:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90021274:	47a0      	blx	r4
90021276:	b019      	add	sp, #100	@ 0x64
90021278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002127c:	2300      	movs	r3, #0
9002127e:	e7c0      	b.n	90021202 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90021280:	2208      	movs	r2, #8
90021282:	fb92 f3f8 	sdiv	r3, r2, r8
90021286:	1e5a      	subs	r2, r3, #1
90021288:	443a      	add	r2, r7
9002128a:	fb92 f2f3 	sdiv	r2, r2, r3
9002128e:	fb12 f203 	smulbb	r2, r2, r3
90021292:	b292      	uxth	r2, r2
90021294:	e6b0      	b.n	90020ff8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90021296:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90021298:	e6ec      	b.n	90021074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9002129a:	9810      	ldr	r0, [sp, #64]	@ 0x40
9002129c:	e782      	b.n	900211a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9002129e:	bf00      	nop
900212a0:	240234b4 	.word	0x240234b4
900212a4:	240234bc 	.word	0x240234bc
900212a8:	240234b6 	.word	0x240234b6
900212ac:	00fff800 	.word	0x00fff800
900212b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900212b2:	b153      	cbz	r3, 900212ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
900212b4:	441e      	add	r6, r3
900212b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900212b8:	b2b6      	uxth	r6, r6
900212ba:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
900212be:	f006 0607 	and.w	r6, r6, #7
900212c2:	781a      	ldrb	r2, [r3, #0]
900212c4:	9328      	str	r3, [sp, #160]	@ 0xa0
900212c6:	4132      	asrs	r2, r6
900212c8:	b2d2      	uxtb	r2, r2
900212ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900212cc:	445b      	add	r3, fp
900212ce:	930a      	str	r3, [sp, #40]	@ 0x28
900212d0:	e706      	b.n	900210e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
900212d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900212d4:	2b00      	cmp	r3, #0
900212d6:	d1ce      	bne.n	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900212d8:	4b05      	ldr	r3, [pc, #20]	@ (900212f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
900212da:	6818      	ldr	r0, [r3, #0]
900212dc:	6803      	ldr	r3, [r0, #0]
900212de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900212e0:	4798      	blx	r3
900212e2:	e7c8      	b.n	90021276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900212e4:	2b00      	cmp	r3, #0
900212e6:	f43f ae82 	beq.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900212ea:	f44f 7180 	mov.w	r1, #256	@ 0x100
900212ee:	e793      	b.n	90021218 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
900212f0:	240234bc 	.word	0x240234bc

900212f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
900212f4:	b538      	push	{r3, r4, r5, lr}
900212f6:	4c15      	ldr	r4, [pc, #84]	@ (9002134c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
900212f8:	4605      	mov	r5, r0
900212fa:	7823      	ldrb	r3, [r4, #0]
900212fc:	f3bf 8f5b 	dmb	ish
90021300:	07da      	lsls	r2, r3, #31
90021302:	d40b      	bmi.n	9002131c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021304:	4620      	mov	r0, r4
90021306:	f008 fc4c 	bl	90029ba2 <__cxa_guard_acquire>
9002130a:	b138      	cbz	r0, 9002131c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9002130c:	4620      	mov	r0, r4
9002130e:	f008 fc54 	bl	90029bba <__cxa_guard_release>
90021312:	4a0f      	ldr	r2, [pc, #60]	@ (90021350 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90021314:	490f      	ldr	r1, [pc, #60]	@ (90021354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90021316:	4810      	ldr	r0, [pc, #64]	@ (90021358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021318:	f008 fc3c 	bl	90029b94 <__aeabi_atexit>
9002131c:	4c0f      	ldr	r4, [pc, #60]	@ (9002135c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9002131e:	7823      	ldrb	r3, [r4, #0]
90021320:	f3bf 8f5b 	dmb	ish
90021324:	07db      	lsls	r3, r3, #31
90021326:	d40b      	bmi.n	90021340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021328:	4620      	mov	r0, r4
9002132a:	f008 fc3a 	bl	90029ba2 <__cxa_guard_acquire>
9002132e:	b138      	cbz	r0, 90021340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021330:	4620      	mov	r0, r4
90021332:	f008 fc42 	bl	90029bba <__cxa_guard_release>
90021336:	4a06      	ldr	r2, [pc, #24]	@ (90021350 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90021338:	4909      	ldr	r1, [pc, #36]	@ (90021360 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002133a:	480a      	ldr	r0, [pc, #40]	@ (90021364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002133c:	f008 fc2a 	bl	90029b94 <__aeabi_atexit>
90021340:	4b05      	ldr	r3, [pc, #20]	@ (90021358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021342:	616b      	str	r3, [r5, #20]
90021344:	4b07      	ldr	r3, [pc, #28]	@ (90021364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90021346:	61ab      	str	r3, [r5, #24]
90021348:	bd38      	pop	{r3, r4, r5, pc}
9002134a:	bf00      	nop
9002134c:	240235a0 	.word	0x240235a0
90021350:	24000000 	.word	0x24000000
90021354:	9001d491 	.word	0x9001d491
90021358:	240000d4 	.word	0x240000d4
9002135c:	240235a4 	.word	0x240235a4
90021360:	9001d48f 	.word	0x9001d48f
90021364:	240000d8 	.word	0x240000d8

90021368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90021368:	b538      	push	{r3, r4, r5, lr}
9002136a:	4c15      	ldr	r4, [pc, #84]	@ (900213c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9002136c:	4605      	mov	r5, r0
9002136e:	7823      	ldrb	r3, [r4, #0]
90021370:	f3bf 8f5b 	dmb	ish
90021374:	07da      	lsls	r2, r3, #31
90021376:	d40b      	bmi.n	90021390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021378:	4620      	mov	r0, r4
9002137a:	f008 fc12 	bl	90029ba2 <__cxa_guard_acquire>
9002137e:	b138      	cbz	r0, 90021390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021380:	4620      	mov	r0, r4
90021382:	f008 fc1a 	bl	90029bba <__cxa_guard_release>
90021386:	4a0f      	ldr	r2, [pc, #60]	@ (900213c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021388:	490f      	ldr	r1, [pc, #60]	@ (900213c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002138a:	4810      	ldr	r0, [pc, #64]	@ (900213cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002138c:	f008 fc02 	bl	90029b94 <__aeabi_atexit>
90021390:	4c0f      	ldr	r4, [pc, #60]	@ (900213d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90021392:	7823      	ldrb	r3, [r4, #0]
90021394:	f3bf 8f5b 	dmb	ish
90021398:	07db      	lsls	r3, r3, #31
9002139a:	d40b      	bmi.n	900213b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002139c:	4620      	mov	r0, r4
9002139e:	f008 fc00 	bl	90029ba2 <__cxa_guard_acquire>
900213a2:	b138      	cbz	r0, 900213b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900213a4:	4620      	mov	r0, r4
900213a6:	f008 fc08 	bl	90029bba <__cxa_guard_release>
900213aa:	4a06      	ldr	r2, [pc, #24]	@ (900213c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900213ac:	4909      	ldr	r1, [pc, #36]	@ (900213d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
900213ae:	480a      	ldr	r0, [pc, #40]	@ (900213d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900213b0:	f008 fbf0 	bl	90029b94 <__aeabi_atexit>
900213b4:	4b05      	ldr	r3, [pc, #20]	@ (900213cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900213b6:	60eb      	str	r3, [r5, #12]
900213b8:	4b07      	ldr	r3, [pc, #28]	@ (900213d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900213ba:	612b      	str	r3, [r5, #16]
900213bc:	bd38      	pop	{r3, r4, r5, pc}
900213be:	bf00      	nop
900213c0:	24023578 	.word	0x24023578
900213c4:	24000000 	.word	0x24000000
900213c8:	9001d495 	.word	0x9001d495
900213cc:	240000ac 	.word	0x240000ac
900213d0:	2402357c 	.word	0x2402357c
900213d4:	9001d493 	.word	0x9001d493
900213d8:	240000b0 	.word	0x240000b0

900213dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
900213dc:	b510      	push	{r4, lr}
900213de:	4604      	mov	r4, r0
900213e0:	f7ff ff88 	bl	900212f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900213e4:	4620      	mov	r0, r4
900213e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900213ea:	f7ff bfbd 	b.w	90021368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900213f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900213f0:	b538      	push	{r3, r4, r5, lr}
900213f2:	4c15      	ldr	r4, [pc, #84]	@ (90021448 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900213f4:	4605      	mov	r5, r0
900213f6:	7823      	ldrb	r3, [r4, #0]
900213f8:	f3bf 8f5b 	dmb	ish
900213fc:	07da      	lsls	r2, r3, #31
900213fe:	d40b      	bmi.n	90021418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021400:	4620      	mov	r0, r4
90021402:	f008 fbce 	bl	90029ba2 <__cxa_guard_acquire>
90021406:	b138      	cbz	r0, 90021418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021408:	4620      	mov	r0, r4
9002140a:	f008 fbd6 	bl	90029bba <__cxa_guard_release>
9002140e:	4a0f      	ldr	r2, [pc, #60]	@ (9002144c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021410:	490f      	ldr	r1, [pc, #60]	@ (90021450 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90021412:	4810      	ldr	r0, [pc, #64]	@ (90021454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021414:	f008 fbbe 	bl	90029b94 <__aeabi_atexit>
90021418:	4c0f      	ldr	r4, [pc, #60]	@ (90021458 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002141a:	7823      	ldrb	r3, [r4, #0]
9002141c:	f3bf 8f5b 	dmb	ish
90021420:	07db      	lsls	r3, r3, #31
90021422:	d40b      	bmi.n	9002143c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021424:	4620      	mov	r0, r4
90021426:	f008 fbbc 	bl	90029ba2 <__cxa_guard_acquire>
9002142a:	b138      	cbz	r0, 9002143c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9002142c:	4620      	mov	r0, r4
9002142e:	f008 fbc4 	bl	90029bba <__cxa_guard_release>
90021432:	4a06      	ldr	r2, [pc, #24]	@ (9002144c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021434:	4909      	ldr	r1, [pc, #36]	@ (9002145c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90021436:	480a      	ldr	r0, [pc, #40]	@ (90021460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021438:	f008 fbac 	bl	90029b94 <__aeabi_atexit>
9002143c:	4b05      	ldr	r3, [pc, #20]	@ (90021454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9002143e:	626b      	str	r3, [r5, #36]	@ 0x24
90021440:	4b07      	ldr	r3, [pc, #28]	@ (90021460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021442:	62ab      	str	r3, [r5, #40]	@ 0x28
90021444:	bd38      	pop	{r3, r4, r5, pc}
90021446:	bf00      	nop
90021448:	240235a8 	.word	0x240235a8
9002144c:	24000000 	.word	0x24000000
90021450:	9001d489 	.word	0x9001d489
90021454:	240000dc 	.word	0x240000dc
90021458:	240235ac 	.word	0x240235ac
9002145c:	9001d487 	.word	0x9001d487
90021460:	240000e0 	.word	0x240000e0

90021464 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90021464:	b538      	push	{r3, r4, r5, lr}
90021466:	4c15      	ldr	r4, [pc, #84]	@ (900214bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90021468:	4605      	mov	r5, r0
9002146a:	7823      	ldrb	r3, [r4, #0]
9002146c:	f3bf 8f5b 	dmb	ish
90021470:	07da      	lsls	r2, r3, #31
90021472:	d40b      	bmi.n	9002148c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021474:	4620      	mov	r0, r4
90021476:	f008 fb94 	bl	90029ba2 <__cxa_guard_acquire>
9002147a:	b138      	cbz	r0, 9002148c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002147c:	4620      	mov	r0, r4
9002147e:	f008 fb9c 	bl	90029bba <__cxa_guard_release>
90021482:	4a0f      	ldr	r2, [pc, #60]	@ (900214c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021484:	490f      	ldr	r1, [pc, #60]	@ (900214c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90021486:	4810      	ldr	r0, [pc, #64]	@ (900214c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021488:	f008 fb84 	bl	90029b94 <__aeabi_atexit>
9002148c:	4c0f      	ldr	r4, [pc, #60]	@ (900214cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002148e:	7823      	ldrb	r3, [r4, #0]
90021490:	f3bf 8f5b 	dmb	ish
90021494:	07db      	lsls	r3, r3, #31
90021496:	d40b      	bmi.n	900214b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021498:	4620      	mov	r0, r4
9002149a:	f008 fb82 	bl	90029ba2 <__cxa_guard_acquire>
9002149e:	b138      	cbz	r0, 900214b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900214a0:	4620      	mov	r0, r4
900214a2:	f008 fb8a 	bl	90029bba <__cxa_guard_release>
900214a6:	4a06      	ldr	r2, [pc, #24]	@ (900214c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900214a8:	4909      	ldr	r1, [pc, #36]	@ (900214d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
900214aa:	480a      	ldr	r0, [pc, #40]	@ (900214d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900214ac:	f008 fb72 	bl	90029b94 <__aeabi_atexit>
900214b0:	4b05      	ldr	r3, [pc, #20]	@ (900214c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900214b2:	61eb      	str	r3, [r5, #28]
900214b4:	4b07      	ldr	r3, [pc, #28]	@ (900214d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900214b6:	622b      	str	r3, [r5, #32]
900214b8:	bd38      	pop	{r3, r4, r5, pc}
900214ba:	bf00      	nop
900214bc:	24023580 	.word	0x24023580
900214c0:	24000000 	.word	0x24000000
900214c4:	9001d48d 	.word	0x9001d48d
900214c8:	240000b4 	.word	0x240000b4
900214cc:	24023584 	.word	0x24023584
900214d0:	9001d48b 	.word	0x9001d48b
900214d4:	240000b8 	.word	0x240000b8

900214d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
900214d8:	b510      	push	{r4, lr}
900214da:	4604      	mov	r4, r0
900214dc:	f7ff ff88 	bl	900213f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
900214e0:	4620      	mov	r0, r4
900214e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900214e6:	f7ff bfbd 	b.w	90021464 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900214ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900214ec:	b538      	push	{r3, r4, r5, lr}
900214ee:	4c15      	ldr	r4, [pc, #84]	@ (90021544 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900214f0:	4605      	mov	r5, r0
900214f2:	7823      	ldrb	r3, [r4, #0]
900214f4:	f3bf 8f5b 	dmb	ish
900214f8:	07da      	lsls	r2, r3, #31
900214fa:	d40b      	bmi.n	90021514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900214fc:	4620      	mov	r0, r4
900214fe:	f008 fb50 	bl	90029ba2 <__cxa_guard_acquire>
90021502:	b138      	cbz	r0, 90021514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021504:	4620      	mov	r0, r4
90021506:	f008 fb58 	bl	90029bba <__cxa_guard_release>
9002150a:	4a0f      	ldr	r2, [pc, #60]	@ (90021548 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9002150c:	490f      	ldr	r1, [pc, #60]	@ (9002154c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9002150e:	4810      	ldr	r0, [pc, #64]	@ (90021550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021510:	f008 fb40 	bl	90029b94 <__aeabi_atexit>
90021514:	4c0f      	ldr	r4, [pc, #60]	@ (90021554 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90021516:	7823      	ldrb	r3, [r4, #0]
90021518:	f3bf 8f5b 	dmb	ish
9002151c:	07db      	lsls	r3, r3, #31
9002151e:	d40b      	bmi.n	90021538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021520:	4620      	mov	r0, r4
90021522:	f008 fb3e 	bl	90029ba2 <__cxa_guard_acquire>
90021526:	b138      	cbz	r0, 90021538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021528:	4620      	mov	r0, r4
9002152a:	f008 fb46 	bl	90029bba <__cxa_guard_release>
9002152e:	4a06      	ldr	r2, [pc, #24]	@ (90021548 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021530:	4909      	ldr	r1, [pc, #36]	@ (90021558 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021532:	480a      	ldr	r0, [pc, #40]	@ (9002155c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021534:	f008 fb2e 	bl	90029b94 <__aeabi_atexit>
90021538:	4b05      	ldr	r3, [pc, #20]	@ (90021550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002153a:	636b      	str	r3, [r5, #52]	@ 0x34
9002153c:	4b07      	ldr	r3, [pc, #28]	@ (9002155c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9002153e:	63ab      	str	r3, [r5, #56]	@ 0x38
90021540:	bd38      	pop	{r3, r4, r5, pc}
90021542:	bf00      	nop
90021544:	240235b8 	.word	0x240235b8
90021548:	24000000 	.word	0x24000000
9002154c:	9001d481 	.word	0x9001d481
90021550:	240000ec 	.word	0x240000ec
90021554:	240235bc 	.word	0x240235bc
90021558:	9001d47f 	.word	0x9001d47f
9002155c:	240000f0 	.word	0x240000f0

90021560 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90021560:	b538      	push	{r3, r4, r5, lr}
90021562:	4c15      	ldr	r4, [pc, #84]	@ (900215b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90021564:	4605      	mov	r5, r0
90021566:	7823      	ldrb	r3, [r4, #0]
90021568:	f3bf 8f5b 	dmb	ish
9002156c:	07da      	lsls	r2, r3, #31
9002156e:	d40b      	bmi.n	90021588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021570:	4620      	mov	r0, r4
90021572:	f008 fb16 	bl	90029ba2 <__cxa_guard_acquire>
90021576:	b138      	cbz	r0, 90021588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021578:	4620      	mov	r0, r4
9002157a:	f008 fb1e 	bl	90029bba <__cxa_guard_release>
9002157e:	4a0f      	ldr	r2, [pc, #60]	@ (900215bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021580:	490f      	ldr	r1, [pc, #60]	@ (900215c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90021582:	4810      	ldr	r0, [pc, #64]	@ (900215c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021584:	f008 fb06 	bl	90029b94 <__aeabi_atexit>
90021588:	4c0f      	ldr	r4, [pc, #60]	@ (900215c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002158a:	7823      	ldrb	r3, [r4, #0]
9002158c:	f3bf 8f5b 	dmb	ish
90021590:	07db      	lsls	r3, r3, #31
90021592:	d40b      	bmi.n	900215ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021594:	4620      	mov	r0, r4
90021596:	f008 fb04 	bl	90029ba2 <__cxa_guard_acquire>
9002159a:	b138      	cbz	r0, 900215ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002159c:	4620      	mov	r0, r4
9002159e:	f008 fb0c 	bl	90029bba <__cxa_guard_release>
900215a2:	4a06      	ldr	r2, [pc, #24]	@ (900215bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900215a4:	4909      	ldr	r1, [pc, #36]	@ (900215cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900215a6:	480a      	ldr	r0, [pc, #40]	@ (900215d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900215a8:	f008 faf4 	bl	90029b94 <__aeabi_atexit>
900215ac:	4b05      	ldr	r3, [pc, #20]	@ (900215c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900215ae:	62eb      	str	r3, [r5, #44]	@ 0x2c
900215b0:	4b07      	ldr	r3, [pc, #28]	@ (900215d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900215b2:	632b      	str	r3, [r5, #48]	@ 0x30
900215b4:	bd38      	pop	{r3, r4, r5, pc}
900215b6:	bf00      	nop
900215b8:	24023588 	.word	0x24023588
900215bc:	24000000 	.word	0x24000000
900215c0:	9001d485 	.word	0x9001d485
900215c4:	240000bc 	.word	0x240000bc
900215c8:	2402358c 	.word	0x2402358c
900215cc:	9001d483 	.word	0x9001d483
900215d0:	240000c0 	.word	0x240000c0

900215d4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
900215d4:	b510      	push	{r4, lr}
900215d6:	4604      	mov	r4, r0
900215d8:	f7ff ff88 	bl	900214ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
900215dc:	4620      	mov	r0, r4
900215de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900215e2:	f7ff bfbd 	b.w	90021560 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

900215e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
900215e8:	b538      	push	{r3, r4, r5, lr}
900215ea:	4c15      	ldr	r4, [pc, #84]	@ (90021640 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
900215ec:	4605      	mov	r5, r0
900215ee:	7823      	ldrb	r3, [r4, #0]
900215f0:	f3bf 8f5b 	dmb	ish
900215f4:	07da      	lsls	r2, r3, #31
900215f6:	d40b      	bmi.n	90021610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900215f8:	4620      	mov	r0, r4
900215fa:	f008 fad2 	bl	90029ba2 <__cxa_guard_acquire>
900215fe:	b138      	cbz	r0, 90021610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021600:	4620      	mov	r0, r4
90021602:	f008 fada 	bl	90029bba <__cxa_guard_release>
90021606:	4a0f      	ldr	r2, [pc, #60]	@ (90021644 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021608:	490f      	ldr	r1, [pc, #60]	@ (90021648 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002160a:	4810      	ldr	r0, [pc, #64]	@ (9002164c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002160c:	f008 fac2 	bl	90029b94 <__aeabi_atexit>
90021610:	4c0f      	ldr	r4, [pc, #60]	@ (90021650 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021612:	7823      	ldrb	r3, [r4, #0]
90021614:	f3bf 8f5b 	dmb	ish
90021618:	07db      	lsls	r3, r3, #31
9002161a:	d40b      	bmi.n	90021634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9002161c:	4620      	mov	r0, r4
9002161e:	f008 fac0 	bl	90029ba2 <__cxa_guard_acquire>
90021622:	b138      	cbz	r0, 90021634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021624:	4620      	mov	r0, r4
90021626:	f008 fac8 	bl	90029bba <__cxa_guard_release>
9002162a:	4a06      	ldr	r2, [pc, #24]	@ (90021644 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9002162c:	4909      	ldr	r1, [pc, #36]	@ (90021654 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9002162e:	480a      	ldr	r0, [pc, #40]	@ (90021658 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021630:	f008 fab0 	bl	90029b94 <__aeabi_atexit>
90021634:	4b05      	ldr	r3, [pc, #20]	@ (9002164c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021636:	656b      	str	r3, [r5, #84]	@ 0x54
90021638:	4b07      	ldr	r3, [pc, #28]	@ (90021658 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002163a:	65ab      	str	r3, [r5, #88]	@ 0x58
9002163c:	bd38      	pop	{r3, r4, r5, pc}
9002163e:	bf00      	nop
90021640:	240235c0 	.word	0x240235c0
90021644:	24000000 	.word	0x24000000
90021648:	9001d471 	.word	0x9001d471
9002164c:	240000f4 	.word	0x240000f4
90021650:	240235c4 	.word	0x240235c4
90021654:	9001d46f 	.word	0x9001d46f
90021658:	240000f8 	.word	0x240000f8

9002165c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9002165c:	b538      	push	{r3, r4, r5, lr}
9002165e:	4c15      	ldr	r4, [pc, #84]	@ (900216b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90021660:	4605      	mov	r5, r0
90021662:	7823      	ldrb	r3, [r4, #0]
90021664:	f3bf 8f5b 	dmb	ish
90021668:	07da      	lsls	r2, r3, #31
9002166a:	d40b      	bmi.n	90021684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9002166c:	4620      	mov	r0, r4
9002166e:	f008 fa98 	bl	90029ba2 <__cxa_guard_acquire>
90021672:	b138      	cbz	r0, 90021684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021674:	4620      	mov	r0, r4
90021676:	f008 faa0 	bl	90029bba <__cxa_guard_release>
9002167a:	4a0f      	ldr	r2, [pc, #60]	@ (900216b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002167c:	490f      	ldr	r1, [pc, #60]	@ (900216bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002167e:	4810      	ldr	r0, [pc, #64]	@ (900216c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021680:	f008 fa88 	bl	90029b94 <__aeabi_atexit>
90021684:	4c0f      	ldr	r4, [pc, #60]	@ (900216c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90021686:	7823      	ldrb	r3, [r4, #0]
90021688:	f3bf 8f5b 	dmb	ish
9002168c:	07db      	lsls	r3, r3, #31
9002168e:	d40b      	bmi.n	900216a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021690:	4620      	mov	r0, r4
90021692:	f008 fa86 	bl	90029ba2 <__cxa_guard_acquire>
90021696:	b138      	cbz	r0, 900216a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021698:	4620      	mov	r0, r4
9002169a:	f008 fa8e 	bl	90029bba <__cxa_guard_release>
9002169e:	4a06      	ldr	r2, [pc, #24]	@ (900216b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900216a0:	4909      	ldr	r1, [pc, #36]	@ (900216c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
900216a2:	480a      	ldr	r0, [pc, #40]	@ (900216cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900216a4:	f008 fa76 	bl	90029b94 <__aeabi_atexit>
900216a8:	4b05      	ldr	r3, [pc, #20]	@ (900216c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900216aa:	64eb      	str	r3, [r5, #76]	@ 0x4c
900216ac:	4b07      	ldr	r3, [pc, #28]	@ (900216cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900216ae:	652b      	str	r3, [r5, #80]	@ 0x50
900216b0:	bd38      	pop	{r3, r4, r5, pc}
900216b2:	bf00      	nop
900216b4:	240235c8 	.word	0x240235c8
900216b8:	24000000 	.word	0x24000000
900216bc:	9001d475 	.word	0x9001d475
900216c0:	240000fc 	.word	0x240000fc
900216c4:	240235cc 	.word	0x240235cc
900216c8:	9001d473 	.word	0x9001d473
900216cc:	24000100 	.word	0x24000100

900216d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
900216d0:	b538      	push	{r3, r4, r5, lr}
900216d2:	4c15      	ldr	r4, [pc, #84]	@ (90021728 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
900216d4:	4605      	mov	r5, r0
900216d6:	7823      	ldrb	r3, [r4, #0]
900216d8:	f3bf 8f5b 	dmb	ish
900216dc:	07da      	lsls	r2, r3, #31
900216de:	d40b      	bmi.n	900216f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900216e0:	4620      	mov	r0, r4
900216e2:	f008 fa5e 	bl	90029ba2 <__cxa_guard_acquire>
900216e6:	b138      	cbz	r0, 900216f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900216e8:	4620      	mov	r0, r4
900216ea:	f008 fa66 	bl	90029bba <__cxa_guard_release>
900216ee:	4a0f      	ldr	r2, [pc, #60]	@ (9002172c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900216f0:	490f      	ldr	r1, [pc, #60]	@ (90021730 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900216f2:	4810      	ldr	r0, [pc, #64]	@ (90021734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900216f4:	f008 fa4e 	bl	90029b94 <__aeabi_atexit>
900216f8:	4c0f      	ldr	r4, [pc, #60]	@ (90021738 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900216fa:	7823      	ldrb	r3, [r4, #0]
900216fc:	f3bf 8f5b 	dmb	ish
90021700:	07db      	lsls	r3, r3, #31
90021702:	d40b      	bmi.n	9002171c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021704:	4620      	mov	r0, r4
90021706:	f008 fa4c 	bl	90029ba2 <__cxa_guard_acquire>
9002170a:	b138      	cbz	r0, 9002171c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9002170c:	4620      	mov	r0, r4
9002170e:	f008 fa54 	bl	90029bba <__cxa_guard_release>
90021712:	4a06      	ldr	r2, [pc, #24]	@ (9002172c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021714:	4909      	ldr	r1, [pc, #36]	@ (9002173c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90021716:	480a      	ldr	r0, [pc, #40]	@ (90021740 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021718:	f008 fa3c 	bl	90029b94 <__aeabi_atexit>
9002171c:	4b05      	ldr	r3, [pc, #20]	@ (90021734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9002171e:	646b      	str	r3, [r5, #68]	@ 0x44
90021720:	4b07      	ldr	r3, [pc, #28]	@ (90021740 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021722:	64ab      	str	r3, [r5, #72]	@ 0x48
90021724:	bd38      	pop	{r3, r4, r5, pc}
90021726:	bf00      	nop
90021728:	24023590 	.word	0x24023590
9002172c:	24000000 	.word	0x24000000
90021730:	9001d479 	.word	0x9001d479
90021734:	240000c4 	.word	0x240000c4
90021738:	24023594 	.word	0x24023594
9002173c:	9001d477 	.word	0x9001d477
90021740:	240000c8 	.word	0x240000c8

90021744 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021744:	b538      	push	{r3, r4, r5, lr}
90021746:	4c15      	ldr	r4, [pc, #84]	@ (9002179c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90021748:	4605      	mov	r5, r0
9002174a:	7823      	ldrb	r3, [r4, #0]
9002174c:	f3bf 8f5b 	dmb	ish
90021750:	07da      	lsls	r2, r3, #31
90021752:	d40b      	bmi.n	9002176c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021754:	4620      	mov	r0, r4
90021756:	f008 fa24 	bl	90029ba2 <__cxa_guard_acquire>
9002175a:	b138      	cbz	r0, 9002176c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9002175c:	4620      	mov	r0, r4
9002175e:	f008 fa2c 	bl	90029bba <__cxa_guard_release>
90021762:	4a0f      	ldr	r2, [pc, #60]	@ (900217a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021764:	490f      	ldr	r1, [pc, #60]	@ (900217a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90021766:	4810      	ldr	r0, [pc, #64]	@ (900217a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021768:	f008 fa14 	bl	90029b94 <__aeabi_atexit>
9002176c:	4c0f      	ldr	r4, [pc, #60]	@ (900217ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9002176e:	7823      	ldrb	r3, [r4, #0]
90021770:	f3bf 8f5b 	dmb	ish
90021774:	07db      	lsls	r3, r3, #31
90021776:	d40b      	bmi.n	90021790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021778:	4620      	mov	r0, r4
9002177a:	f008 fa12 	bl	90029ba2 <__cxa_guard_acquire>
9002177e:	b138      	cbz	r0, 90021790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021780:	4620      	mov	r0, r4
90021782:	f008 fa1a 	bl	90029bba <__cxa_guard_release>
90021786:	4a06      	ldr	r2, [pc, #24]	@ (900217a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021788:	4909      	ldr	r1, [pc, #36]	@ (900217b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002178a:	480a      	ldr	r0, [pc, #40]	@ (900217b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002178c:	f008 fa02 	bl	90029b94 <__aeabi_atexit>
90021790:	4b05      	ldr	r3, [pc, #20]	@ (900217a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021792:	63eb      	str	r3, [r5, #60]	@ 0x3c
90021794:	4b07      	ldr	r3, [pc, #28]	@ (900217b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021796:	642b      	str	r3, [r5, #64]	@ 0x40
90021798:	bd38      	pop	{r3, r4, r5, pc}
9002179a:	bf00      	nop
9002179c:	240235b0 	.word	0x240235b0
900217a0:	24000000 	.word	0x24000000
900217a4:	9001d47d 	.word	0x9001d47d
900217a8:	240000e4 	.word	0x240000e4
900217ac:	240235b4 	.word	0x240235b4
900217b0:	9001d47b 	.word	0x9001d47b
900217b4:	240000e8 	.word	0x240000e8

900217b8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
900217b8:	b510      	push	{r4, lr}
900217ba:	4604      	mov	r4, r0
900217bc:	f7ff ff14 	bl	900215e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
900217c0:	4620      	mov	r0, r4
900217c2:	f7ff ff85 	bl	900216d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
900217c6:	4620      	mov	r0, r4
900217c8:	f7ff ff48 	bl	9002165c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
900217cc:	4620      	mov	r0, r4
900217ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900217d2:	f7ff bfb7 	b.w	90021744 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

900217d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
900217d8:	b538      	push	{r3, r4, r5, lr}
900217da:	4c15      	ldr	r4, [pc, #84]	@ (90021830 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
900217dc:	4605      	mov	r5, r0
900217de:	7823      	ldrb	r3, [r4, #0]
900217e0:	f3bf 8f5b 	dmb	ish
900217e4:	07da      	lsls	r2, r3, #31
900217e6:	d40b      	bmi.n	90021800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900217e8:	4620      	mov	r0, r4
900217ea:	f008 f9da 	bl	90029ba2 <__cxa_guard_acquire>
900217ee:	b138      	cbz	r0, 90021800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900217f0:	4620      	mov	r0, r4
900217f2:	f008 f9e2 	bl	90029bba <__cxa_guard_release>
900217f6:	4a0f      	ldr	r2, [pc, #60]	@ (90021834 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900217f8:	490f      	ldr	r1, [pc, #60]	@ (90021838 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
900217fa:	4810      	ldr	r0, [pc, #64]	@ (9002183c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900217fc:	f008 f9ca 	bl	90029b94 <__aeabi_atexit>
90021800:	4c0f      	ldr	r4, [pc, #60]	@ (90021840 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021802:	7823      	ldrb	r3, [r4, #0]
90021804:	f3bf 8f5b 	dmb	ish
90021808:	07db      	lsls	r3, r3, #31
9002180a:	d40b      	bmi.n	90021824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9002180c:	4620      	mov	r0, r4
9002180e:	f008 f9c8 	bl	90029ba2 <__cxa_guard_acquire>
90021812:	b138      	cbz	r0, 90021824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021814:	4620      	mov	r0, r4
90021816:	f008 f9d0 	bl	90029bba <__cxa_guard_release>
9002181a:	4a06      	ldr	r2, [pc, #24]	@ (90021834 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002181c:	4909      	ldr	r1, [pc, #36]	@ (90021844 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9002181e:	480a      	ldr	r0, [pc, #40]	@ (90021848 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021820:	f008 f9b8 	bl	90029b94 <__aeabi_atexit>
90021824:	4b05      	ldr	r3, [pc, #20]	@ (9002183c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021826:	666b      	str	r3, [r5, #100]	@ 0x64
90021828:	4b07      	ldr	r3, [pc, #28]	@ (90021848 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002182a:	66ab      	str	r3, [r5, #104]	@ 0x68
9002182c:	bd38      	pop	{r3, r4, r5, pc}
9002182e:	bf00      	nop
90021830:	24023598 	.word	0x24023598
90021834:	24000000 	.word	0x24000000
90021838:	9001d469 	.word	0x9001d469
9002183c:	240000cc 	.word	0x240000cc
90021840:	2402359c 	.word	0x2402359c
90021844:	9001d467 	.word	0x9001d467
90021848:	240000d0 	.word	0x240000d0

9002184c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9002184c:	b538      	push	{r3, r4, r5, lr}
9002184e:	4c15      	ldr	r4, [pc, #84]	@ (900218a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90021850:	4605      	mov	r5, r0
90021852:	7823      	ldrb	r3, [r4, #0]
90021854:	f3bf 8f5b 	dmb	ish
90021858:	07da      	lsls	r2, r3, #31
9002185a:	d40b      	bmi.n	90021874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9002185c:	4620      	mov	r0, r4
9002185e:	f008 f9a0 	bl	90029ba2 <__cxa_guard_acquire>
90021862:	b138      	cbz	r0, 90021874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021864:	4620      	mov	r0, r4
90021866:	f008 f9a8 	bl	90029bba <__cxa_guard_release>
9002186a:	4a0f      	ldr	r2, [pc, #60]	@ (900218a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9002186c:	490f      	ldr	r1, [pc, #60]	@ (900218ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9002186e:	4810      	ldr	r0, [pc, #64]	@ (900218b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021870:	f008 f990 	bl	90029b94 <__aeabi_atexit>
90021874:	4c0f      	ldr	r4, [pc, #60]	@ (900218b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021876:	7823      	ldrb	r3, [r4, #0]
90021878:	f3bf 8f5b 	dmb	ish
9002187c:	07db      	lsls	r3, r3, #31
9002187e:	d40b      	bmi.n	90021898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021880:	4620      	mov	r0, r4
90021882:	f008 f98e 	bl	90029ba2 <__cxa_guard_acquire>
90021886:	b138      	cbz	r0, 90021898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021888:	4620      	mov	r0, r4
9002188a:	f008 f996 	bl	90029bba <__cxa_guard_release>
9002188e:	4a06      	ldr	r2, [pc, #24]	@ (900218a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021890:	4909      	ldr	r1, [pc, #36]	@ (900218b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021892:	480a      	ldr	r0, [pc, #40]	@ (900218bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021894:	f008 f97e 	bl	90029b94 <__aeabi_atexit>
90021898:	4b05      	ldr	r3, [pc, #20]	@ (900218b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002189a:	65eb      	str	r3, [r5, #92]	@ 0x5c
9002189c:	4b07      	ldr	r3, [pc, #28]	@ (900218bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002189e:	662b      	str	r3, [r5, #96]	@ 0x60
900218a0:	bd38      	pop	{r3, r4, r5, pc}
900218a2:	bf00      	nop
900218a4:	24023570 	.word	0x24023570
900218a8:	24000000 	.word	0x24000000
900218ac:	9001d46d 	.word	0x9001d46d
900218b0:	240000a4 	.word	0x240000a4
900218b4:	24023574 	.word	0x24023574
900218b8:	9001d46b 	.word	0x9001d46b
900218bc:	240000a8 	.word	0x240000a8

900218c0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
900218c0:	b510      	push	{r4, lr}
900218c2:	4604      	mov	r4, r0
900218c4:	f7ff ff88 	bl	900217d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
900218c8:	4620      	mov	r0, r4
900218ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900218ce:	f7ff bfbd 	b.w	9002184c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

900218d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
900218d4:	b538      	push	{r3, r4, r5, lr}
900218d6:	4c15      	ldr	r4, [pc, #84]	@ (9002192c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
900218d8:	4605      	mov	r5, r0
900218da:	7823      	ldrb	r3, [r4, #0]
900218dc:	f3bf 8f5b 	dmb	ish
900218e0:	07da      	lsls	r2, r3, #31
900218e2:	d40b      	bmi.n	900218fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900218e4:	4620      	mov	r0, r4
900218e6:	f008 f95c 	bl	90029ba2 <__cxa_guard_acquire>
900218ea:	b138      	cbz	r0, 900218fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900218ec:	4620      	mov	r0, r4
900218ee:	f008 f964 	bl	90029bba <__cxa_guard_release>
900218f2:	4a0f      	ldr	r2, [pc, #60]	@ (90021930 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900218f4:	490f      	ldr	r1, [pc, #60]	@ (90021934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900218f6:	4810      	ldr	r0, [pc, #64]	@ (90021938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900218f8:	f008 f94c 	bl	90029b94 <__aeabi_atexit>
900218fc:	4c0f      	ldr	r4, [pc, #60]	@ (9002193c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900218fe:	7823      	ldrb	r3, [r4, #0]
90021900:	f3bf 8f5b 	dmb	ish
90021904:	07db      	lsls	r3, r3, #31
90021906:	d40b      	bmi.n	90021920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021908:	4620      	mov	r0, r4
9002190a:	f008 f94a 	bl	90029ba2 <__cxa_guard_acquire>
9002190e:	b138      	cbz	r0, 90021920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021910:	4620      	mov	r0, r4
90021912:	f008 f952 	bl	90029bba <__cxa_guard_release>
90021916:	4a06      	ldr	r2, [pc, #24]	@ (90021930 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021918:	4909      	ldr	r1, [pc, #36]	@ (90021940 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002191a:	480a      	ldr	r0, [pc, #40]	@ (90021944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002191c:	f008 f93a 	bl	90029b94 <__aeabi_atexit>
90021920:	4b05      	ldr	r3, [pc, #20]	@ (90021938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021922:	676b      	str	r3, [r5, #116]	@ 0x74
90021924:	4b07      	ldr	r3, [pc, #28]	@ (90021944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021926:	67ab      	str	r3, [r5, #120]	@ 0x78
90021928:	bd38      	pop	{r3, r4, r5, pc}
9002192a:	bf00      	nop
9002192c:	24023568 	.word	0x24023568
90021930:	24000000 	.word	0x24000000
90021934:	9001d461 	.word	0x9001d461
90021938:	2400009c 	.word	0x2400009c
9002193c:	2402356c 	.word	0x2402356c
90021940:	9001d45f 	.word	0x9001d45f
90021944:	240000a0 	.word	0x240000a0

90021948 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90021948:	b538      	push	{r3, r4, r5, lr}
9002194a:	4c15      	ldr	r4, [pc, #84]	@ (900219a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9002194c:	4605      	mov	r5, r0
9002194e:	7823      	ldrb	r3, [r4, #0]
90021950:	f3bf 8f5b 	dmb	ish
90021954:	07da      	lsls	r2, r3, #31
90021956:	d40b      	bmi.n	90021970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021958:	4620      	mov	r0, r4
9002195a:	f008 f922 	bl	90029ba2 <__cxa_guard_acquire>
9002195e:	b138      	cbz	r0, 90021970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021960:	4620      	mov	r0, r4
90021962:	f008 f92a 	bl	90029bba <__cxa_guard_release>
90021966:	4a0f      	ldr	r2, [pc, #60]	@ (900219a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021968:	490f      	ldr	r1, [pc, #60]	@ (900219a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002196a:	4810      	ldr	r0, [pc, #64]	@ (900219ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9002196c:	f008 f912 	bl	90029b94 <__aeabi_atexit>
90021970:	4c0f      	ldr	r4, [pc, #60]	@ (900219b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021972:	7823      	ldrb	r3, [r4, #0]
90021974:	f3bf 8f5b 	dmb	ish
90021978:	07db      	lsls	r3, r3, #31
9002197a:	d40b      	bmi.n	90021994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9002197c:	4620      	mov	r0, r4
9002197e:	f008 f910 	bl	90029ba2 <__cxa_guard_acquire>
90021982:	b138      	cbz	r0, 90021994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021984:	4620      	mov	r0, r4
90021986:	f008 f918 	bl	90029bba <__cxa_guard_release>
9002198a:	4a06      	ldr	r2, [pc, #24]	@ (900219a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002198c:	4909      	ldr	r1, [pc, #36]	@ (900219b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9002198e:	480a      	ldr	r0, [pc, #40]	@ (900219b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021990:	f008 f900 	bl	90029b94 <__aeabi_atexit>
90021994:	4b05      	ldr	r3, [pc, #20]	@ (900219ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021996:	66eb      	str	r3, [r5, #108]	@ 0x6c
90021998:	4b07      	ldr	r3, [pc, #28]	@ (900219b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002199a:	672b      	str	r3, [r5, #112]	@ 0x70
9002199c:	bd38      	pop	{r3, r4, r5, pc}
9002199e:	bf00      	nop
900219a0:	24023560 	.word	0x24023560
900219a4:	24000000 	.word	0x24000000
900219a8:	9001d465 	.word	0x9001d465
900219ac:	24000094 	.word	0x24000094
900219b0:	24023564 	.word	0x24023564
900219b4:	9001d463 	.word	0x9001d463
900219b8:	24000098 	.word	0x24000098

900219bc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
900219bc:	b510      	push	{r4, lr}
900219be:	4604      	mov	r4, r0
900219c0:	f7ff ff88 	bl	900218d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
900219c4:	4620      	mov	r0, r4
900219c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900219ca:	f7ff bfbd 	b.w	90021948 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

900219ce <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
900219ce:	b510      	push	{r4, lr}
900219d0:	4604      	mov	r4, r0
900219d2:	f7ff fff3 	bl	900219bc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
900219d6:	4620      	mov	r0, r4
900219d8:	f7ff ff72 	bl	900218c0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
900219dc:	4620      	mov	r0, r4
900219de:	f7ff fdf9 	bl	900215d4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
900219e2:	4620      	mov	r0, r4
900219e4:	f7ff fcfa 	bl	900213dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
900219e8:	4620      	mov	r0, r4
900219ea:	f7ff fd75 	bl	900214d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
900219ee:	4620      	mov	r0, r4
900219f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900219f4:	f7ff bee0 	b.w	900217b8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900219f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
900219f8:	b538      	push	{r3, r4, r5, lr}
900219fa:	4c0b      	ldr	r4, [pc, #44]	@ (90021a28 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
900219fc:	4605      	mov	r5, r0
900219fe:	7823      	ldrb	r3, [r4, #0]
90021a00:	f3bf 8f5b 	dmb	ish
90021a04:	07db      	lsls	r3, r3, #31
90021a06:	d40b      	bmi.n	90021a20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021a08:	4620      	mov	r0, r4
90021a0a:	f008 f8ca 	bl	90029ba2 <__cxa_guard_acquire>
90021a0e:	b138      	cbz	r0, 90021a20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021a10:	4620      	mov	r0, r4
90021a12:	f008 f8d2 	bl	90029bba <__cxa_guard_release>
90021a16:	4a05      	ldr	r2, [pc, #20]	@ (90021a2c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90021a18:	4905      	ldr	r1, [pc, #20]	@ (90021a30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90021a1a:	4806      	ldr	r0, [pc, #24]	@ (90021a34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021a1c:	f008 f8ba 	bl	90029b94 <__aeabi_atexit>
90021a20:	4b04      	ldr	r3, [pc, #16]	@ (90021a34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021a22:	67eb      	str	r3, [r5, #124]	@ 0x7c
90021a24:	bd38      	pop	{r3, r4, r5, pc}
90021a26:	bf00      	nop
90021a28:	24023554 	.word	0x24023554
90021a2c:	24000000 	.word	0x24000000
90021a30:	9001d45d 	.word	0x9001d45d
90021a34:	2400008c 	.word	0x2400008c

90021a38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90021a38:	b538      	push	{r3, r4, r5, lr}
90021a3a:	4c0b      	ldr	r4, [pc, #44]	@ (90021a68 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021a3c:	4605      	mov	r5, r0
90021a3e:	7823      	ldrb	r3, [r4, #0]
90021a40:	f3bf 8f5b 	dmb	ish
90021a44:	07db      	lsls	r3, r3, #31
90021a46:	d40b      	bmi.n	90021a60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021a48:	4620      	mov	r0, r4
90021a4a:	f008 f8aa 	bl	90029ba2 <__cxa_guard_acquire>
90021a4e:	b138      	cbz	r0, 90021a60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021a50:	4620      	mov	r0, r4
90021a52:	f008 f8b2 	bl	90029bba <__cxa_guard_release>
90021a56:	4a05      	ldr	r2, [pc, #20]	@ (90021a6c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90021a58:	4905      	ldr	r1, [pc, #20]	@ (90021a70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90021a5a:	4806      	ldr	r0, [pc, #24]	@ (90021a74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021a5c:	f008 f89a 	bl	90029b94 <__aeabi_atexit>
90021a60:	4b04      	ldr	r3, [pc, #16]	@ (90021a74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021a62:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90021a66:	bd38      	pop	{r3, r4, r5, pc}
90021a68:	24023558 	.word	0x24023558
90021a6c:	24000000 	.word	0x24000000
90021a70:	9001d45b 	.word	0x9001d45b
90021a74:	24000090 	.word	0x24000090

90021a78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021a78:	b570      	push	{r4, r5, r6, lr}
90021a7a:	4d0d      	ldr	r5, [pc, #52]	@ (90021ab0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021a7c:	4606      	mov	r6, r0
90021a7e:	4c0d      	ldr	r4, [pc, #52]	@ (90021ab4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021a80:	782b      	ldrb	r3, [r5, #0]
90021a82:	f3bf 8f5b 	dmb	ish
90021a86:	f013 0f01 	tst.w	r3, #1
90021a8a:	d10d      	bne.n	90021aa8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021a8c:	4628      	mov	r0, r5
90021a8e:	f008 f888 	bl	90029ba2 <__cxa_guard_acquire>
90021a92:	b148      	cbz	r0, 90021aa8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021a94:	4b08      	ldr	r3, [pc, #32]	@ (90021ab8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021a96:	4628      	mov	r0, r5
90021a98:	6023      	str	r3, [r4, #0]
90021a9a:	f008 f88e 	bl	90029bba <__cxa_guard_release>
90021a9e:	4a07      	ldr	r2, [pc, #28]	@ (90021abc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021aa0:	4620      	mov	r0, r4
90021aa2:	4907      	ldr	r1, [pc, #28]	@ (90021ac0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021aa4:	f008 f876 	bl	90029b94 <__aeabi_atexit>
90021aa8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90021aac:	bd70      	pop	{r4, r5, r6, pc}
90021aae:	bf00      	nop
90021ab0:	2402355c 	.word	0x2402355c
90021ab4:	240236d4 	.word	0x240236d4
90021ab8:	9002e850 	.word	0x9002e850
90021abc:	24000000 	.word	0x24000000
90021ac0:	9001d459 	.word	0x9001d459

90021ac4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021ac4:	b510      	push	{r4, lr}
90021ac6:	4604      	mov	r4, r0
90021ac8:	f7ff ff96 	bl	900219f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021acc:	4620      	mov	r0, r4
90021ace:	f7ff ffb3 	bl	90021a38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021ad2:	4620      	mov	r0, r4
90021ad4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021ad8:	f7ff bfce 	b.w	90021a78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021adc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90021adc:	b570      	push	{r4, r5, r6, lr}
90021ade:	4d0d      	ldr	r5, [pc, #52]	@ (90021b14 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90021ae0:	4606      	mov	r6, r0
90021ae2:	4c0d      	ldr	r4, [pc, #52]	@ (90021b18 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90021ae4:	782b      	ldrb	r3, [r5, #0]
90021ae6:	f3bf 8f5b 	dmb	ish
90021aea:	f013 0f01 	tst.w	r3, #1
90021aee:	d10d      	bne.n	90021b0c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021af0:	4628      	mov	r0, r5
90021af2:	f008 f856 	bl	90029ba2 <__cxa_guard_acquire>
90021af6:	b148      	cbz	r0, 90021b0c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021af8:	4b08      	ldr	r3, [pc, #32]	@ (90021b1c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90021afa:	4628      	mov	r0, r5
90021afc:	6023      	str	r3, [r4, #0]
90021afe:	f008 f85c 	bl	90029bba <__cxa_guard_release>
90021b02:	4a07      	ldr	r2, [pc, #28]	@ (90021b20 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90021b04:	4620      	mov	r0, r4
90021b06:	4907      	ldr	r1, [pc, #28]	@ (90021b24 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90021b08:	f008 f844 	bl	90029b94 <__aeabi_atexit>
90021b0c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90021b10:	bd70      	pop	{r4, r5, r6, pc}
90021b12:	bf00      	nop
90021b14:	24023550 	.word	0x24023550
90021b18:	240235d0 	.word	0x240235d0
90021b1c:	9002e86c 	.word	0x9002e86c
90021b20:	24000000 	.word	0x24000000
90021b24:	9001d457 	.word	0x9001d457

90021b28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b2c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90021b30:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90021b34:	2d00      	cmp	r5, #0
90021b36:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90021b3a:	fb05 4c0e 	mla	ip, r5, lr, r4
90021b3e:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90021b42:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90021b46:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90021b4a:	eb02 0a0c 	add.w	sl, r2, ip
90021b4e:	8808      	ldrh	r0, [r1, #0]
90021b50:	f2c0 80b0 	blt.w	90021cb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021b54:	45ab      	cmp	fp, r5
90021b56:	f340 80ad 	ble.w	90021cb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021b5a:	2c00      	cmp	r4, #0
90021b5c:	f2c0 80a8 	blt.w	90021cb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021b60:	45a6      	cmp	lr, r4
90021b62:	f340 80a5 	ble.w	90021cb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021b66:	f812 200c 	ldrb.w	r2, [r2, ip]
90021b6a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021b6e:	1c62      	adds	r2, r4, #1
90021b70:	f100 80a3 	bmi.w	90021cba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021b74:	4596      	cmp	lr, r2
90021b76:	f340 80a0 	ble.w	90021cba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021b7a:	f1b9 0f00 	cmp.w	r9, #0
90021b7e:	f000 809c 	beq.w	90021cba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021b82:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021b86:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021b8a:	3501      	adds	r5, #1
90021b8c:	f100 8099 	bmi.w	90021cc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021b90:	45ab      	cmp	fp, r5
90021b92:	f340 8096 	ble.w	90021cc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021b96:	2f00      	cmp	r7, #0
90021b98:	f000 8093 	beq.w	90021cc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021b9c:	2c00      	cmp	r4, #0
90021b9e:	f2c0 808e 	blt.w	90021cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021ba2:	45a6      	cmp	lr, r4
90021ba4:	f340 808b 	ble.w	90021cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021ba8:	f81a 200e 	ldrb.w	r2, [sl, lr]
90021bac:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021bb0:	3401      	adds	r4, #1
90021bb2:	f100 8089 	bmi.w	90021cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021bb6:	45a6      	cmp	lr, r4
90021bb8:	f340 8086 	ble.w	90021cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021bbc:	f1b9 0f00 	cmp.w	r9, #0
90021bc0:	f000 8082 	beq.w	90021cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021bc4:	44d6      	add	lr, sl
90021bc6:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021bca:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90021bce:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021bd2:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90021bd6:	fb19 fe07 	smulbb	lr, r9, r7
90021bda:	f1c7 0210 	rsb	r2, r7, #16
90021bde:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021be2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90021be6:	eba2 0209 	sub.w	r2, r2, r9
90021bea:	ea44 0808 	orr.w	r8, r4, r8
90021bee:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021bf2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021bf6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021bfa:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021bfe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021c02:	ea44 0c0c 	orr.w	ip, r4, ip
90021c06:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021c0a:	fb04 f40c 	mul.w	r4, r4, ip
90021c0e:	fb02 4808 	mla	r8, r2, r8, r4
90021c12:	041a      	lsls	r2, r3, #16
90021c14:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021c18:	b2b4      	uxth	r4, r6
90021c1a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021c1e:	43f6      	mvns	r6, r6
90021c20:	4313      	orrs	r3, r2
90021c22:	042a      	lsls	r2, r5, #16
90021c24:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021c28:	b2f6      	uxtb	r6, r6
90021c2a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021c2e:	fb0e 8303 	mla	r3, lr, r3, r8
90021c32:	432a      	orrs	r2, r5
90021c34:	fb07 3202 	mla	r2, r7, r2, r3
90021c38:	10c7      	asrs	r7, r0, #3
90021c3a:	0d53      	lsrs	r3, r2, #21
90021c3c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021c40:	0952      	lsrs	r2, r2, #5
90021c42:	fb17 f706 	smulbb	r7, r7, r6
90021c46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021c4a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021c4e:	431a      	orrs	r2, r3
90021c50:	b293      	uxth	r3, r2
90021c52:	1202      	asrs	r2, r0, #8
90021c54:	121d      	asrs	r5, r3, #8
90021c56:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90021c5a:	00c0      	lsls	r0, r0, #3
90021c5c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90021c60:	fb12 f206 	smulbb	r2, r2, r6
90021c64:	b2c0      	uxtb	r0, r0
90021c66:	fb05 2504 	mla	r5, r5, r4, r2
90021c6a:	10da      	asrs	r2, r3, #3
90021c6c:	fb10 f006 	smulbb	r0, r0, r6
90021c70:	00db      	lsls	r3, r3, #3
90021c72:	b2ad      	uxth	r5, r5
90021c74:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021c78:	b2db      	uxtb	r3, r3
90021c7a:	fb02 7204 	mla	r2, r2, r4, r7
90021c7e:	fb03 0004 	mla	r0, r3, r4, r0
90021c82:	1c6b      	adds	r3, r5, #1
90021c84:	b292      	uxth	r2, r2
90021c86:	b280      	uxth	r0, r0
90021c88:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021c8c:	1c43      	adds	r3, r0, #1
90021c8e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021c92:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021c96:	1c50      	adds	r0, r2, #1
90021c98:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90021c9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021ca0:	0952      	lsrs	r2, r2, #5
90021ca2:	432b      	orrs	r3, r5
90021ca4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021ca8:	4313      	orrs	r3, r2
90021caa:	800b      	strh	r3, [r1, #0]
90021cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021cb0:	4680      	mov	r8, r0
90021cb2:	e75c      	b.n	90021b6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021cb4:	4684      	mov	ip, r0
90021cb6:	4680      	mov	r8, r0
90021cb8:	e767      	b.n	90021b8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021cba:	4684      	mov	ip, r0
90021cbc:	e765      	b.n	90021b8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021cbe:	4605      	mov	r5, r0
90021cc0:	e776      	b.n	90021bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021cc2:	4603      	mov	r3, r0
90021cc4:	4605      	mov	r5, r0
90021cc6:	e782      	b.n	90021bce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90021cc8:	4603      	mov	r3, r0
90021cca:	e780      	b.n	90021bce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90021ccc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021cd0:	b099      	sub	sp, #100	@ 0x64
90021cd2:	9215      	str	r2, [sp, #84]	@ 0x54
90021cd4:	9309      	str	r3, [sp, #36]	@ 0x24
90021cd6:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90021cd8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90021cdc:	9016      	str	r0, [sp, #88]	@ 0x58
90021cde:	930d      	str	r3, [sp, #52]	@ 0x34
90021ce0:	6850      	ldr	r0, [r2, #4]
90021ce2:	910c      	str	r1, [sp, #48]	@ 0x30
90021ce4:	6812      	ldr	r2, [r2, #0]
90021ce6:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90021cea:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90021cee:	fb00 1303 	mla	r3, r0, r3, r1
90021cf2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90021cf6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021cf8:	681b      	ldr	r3, [r3, #0]
90021cfa:	930b      	str	r3, [sp, #44]	@ 0x2c
90021cfc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021cfe:	685e      	ldr	r6, [r3, #4]
90021d00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021d02:	3604      	adds	r6, #4
90021d04:	43db      	mvns	r3, r3
90021d06:	b2db      	uxtb	r3, r3
90021d08:	930a      	str	r3, [sp, #40]	@ 0x28
90021d0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021d0c:	2b00      	cmp	r3, #0
90021d0e:	dc03      	bgt.n	90021d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021d10:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90021d12:	2b00      	cmp	r3, #0
90021d14:	f340 8225 	ble.w	90022162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021d18:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021d1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021d1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021d22:	1e48      	subs	r0, r1, #1
90021d24:	1e57      	subs	r7, r2, #1
90021d26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021d28:	2b00      	cmp	r3, #0
90021d2a:	f340 80e3 	ble.w	90021ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021d2e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90021d32:	ea4f 4325 	mov.w	r3, r5, asr #16
90021d36:	d406      	bmi.n	90021d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021d38:	4584      	cmp	ip, r0
90021d3a:	da04      	bge.n	90021d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021d3c:	2b00      	cmp	r3, #0
90021d3e:	db02      	blt.n	90021d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021d40:	42bb      	cmp	r3, r7
90021d42:	f2c0 80d8 	blt.w	90021ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021d46:	f11c 0c01 	adds.w	ip, ip, #1
90021d4a:	f100 80c9 	bmi.w	90021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021d4e:	4561      	cmp	r1, ip
90021d50:	f2c0 80c6 	blt.w	90021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021d54:	3301      	adds	r3, #1
90021d56:	f100 80c3 	bmi.w	90021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021d5a:	429a      	cmp	r2, r3
90021d5c:	f2c0 80c0 	blt.w	90021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021d60:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90021d64:	4647      	mov	r7, r8
90021d66:	f1bb 0f00 	cmp.w	fp, #0
90021d6a:	f340 80e3 	ble.w	90021f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90021d6e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90021d70:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021d74:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021d76:	f3ca 3003 	ubfx	r0, sl, #12, #4
90021d7a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021d7e:	ea5f 422a 	movs.w	r2, sl, asr #16
90021d82:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021d86:	689b      	ldr	r3, [r3, #8]
90021d88:	f100 8121 	bmi.w	90021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021d8c:	f103 39ff 	add.w	r9, r3, #4294967295
90021d90:	454a      	cmp	r2, r9
90021d92:	f280 811c 	bge.w	90021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021d96:	f1bc 0f00 	cmp.w	ip, #0
90021d9a:	f2c0 8118 	blt.w	90021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021d9e:	f10e 39ff 	add.w	r9, lr, #4294967295
90021da2:	45cc      	cmp	ip, r9
90021da4:	f280 8113 	bge.w	90021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021da8:	b21b      	sxth	r3, r3
90021daa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021dac:	fb0c 2203 	mla	r2, ip, r3, r2
90021db0:	eb04 0902 	add.w	r9, r4, r2
90021db4:	5ca2      	ldrb	r2, [r4, r2]
90021db6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90021dba:	2800      	cmp	r0, #0
90021dbc:	f000 80fe 	beq.w	90021fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021dc0:	f899 2001 	ldrb.w	r2, [r9, #1]
90021dc4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021dc8:	9211      	str	r2, [sp, #68]	@ 0x44
90021dca:	b151      	cbz	r1, 90021de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021dcc:	eb09 0203 	add.w	r2, r9, r3
90021dd0:	f819 3003 	ldrb.w	r3, [r9, r3]
90021dd4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021dd8:	930f      	str	r3, [sp, #60]	@ 0x3c
90021dda:	7853      	ldrb	r3, [r2, #1]
90021ddc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021de0:	9312      	str	r3, [sp, #72]	@ 0x48
90021de2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021de4:	fb10 f201 	smulbb	r2, r0, r1
90021de8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021dea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021dee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021df2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021df6:	10d2      	asrs	r2, r2, #3
90021df8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021dfc:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021e00:	ea4c 0c03 	orr.w	ip, ip, r3
90021e04:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021e06:	041b      	lsls	r3, r3, #16
90021e08:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021e0c:	4323      	orrs	r3, r4
90021e0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021e10:	4353      	muls	r3, r2
90021e12:	fb09 330c 	mla	r3, r9, ip, r3
90021e16:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021e1a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021e1e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021e22:	ea4c 0e0e 	orr.w	lr, ip, lr
90021e26:	f1c1 0c10 	rsb	ip, r1, #16
90021e2a:	ebac 0c00 	sub.w	ip, ip, r0
90021e2e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021e32:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021e36:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021e3a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021e3c:	0418      	lsls	r0, r3, #16
90021e3e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021e42:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021e46:	4318      	orrs	r0, r3
90021e48:	fb02 c200 	mla	r2, r2, r0, ip
90021e4c:	8838      	ldrh	r0, [r7, #0]
90021e4e:	0d53      	lsrs	r3, r2, #21
90021e50:	0952      	lsrs	r2, r2, #5
90021e52:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021e56:	1201      	asrs	r1, r0, #8
90021e58:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021e5c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021e60:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021e64:	00c0      	lsls	r0, r0, #3
90021e66:	431a      	orrs	r2, r3
90021e68:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90021e6c:	fb11 f104 	smulbb	r1, r1, r4
90021e70:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90021e74:	b292      	uxth	r2, r2
90021e76:	fb1e fe04 	smulbb	lr, lr, r4
90021e7a:	b2c0      	uxtb	r0, r0
90021e7c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021e80:	fb10 f004 	smulbb	r0, r0, r4
90021e84:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021e88:	fb0c 1c03 	mla	ip, ip, r3, r1
90021e8c:	10d1      	asrs	r1, r2, #3
90021e8e:	00d2      	lsls	r2, r2, #3
90021e90:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021e94:	fa1f fc8c 	uxth.w	ip, ip
90021e98:	b2d2      	uxtb	r2, r2
90021e9a:	fb01 e103 	mla	r1, r1, r3, lr
90021e9e:	fb02 0303 	mla	r3, r2, r3, r0
90021ea2:	b289      	uxth	r1, r1
90021ea4:	b29a      	uxth	r2, r3
90021ea6:	f10c 0301 	add.w	r3, ip, #1
90021eaa:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021eae:	1c53      	adds	r3, r2, #1
90021eb0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021eb4:	1c4a      	adds	r2, r1, #1
90021eb6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90021eba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021ebe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021ec2:	0949      	lsrs	r1, r1, #5
90021ec4:	ea43 030c 	orr.w	r3, r3, ip
90021ec8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021ecc:	430b      	orrs	r3, r1
90021ece:	803b      	strh	r3, [r7, #0]
90021ed0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021ed2:	3702      	adds	r7, #2
90021ed4:	f10b 3bff 	add.w	fp, fp, #4294967295
90021ed8:	449a      	add	sl, r3
90021eda:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021edc:	441d      	add	r5, r3
90021ede:	e742      	b.n	90021d66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021ee0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021ee2:	f108 0802 	add.w	r8, r8, #2
90021ee6:	449a      	add	sl, r3
90021ee8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021eea:	441d      	add	r5, r3
90021eec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021eee:	3b01      	subs	r3, #1
90021ef0:	9309      	str	r3, [sp, #36]	@ 0x24
90021ef2:	e718      	b.n	90021d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021ef4:	d023      	beq.n	90021f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021ef6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021ef8:	9825      	ldr	r0, [sp, #148]	@ 0x94
90021efa:	3b01      	subs	r3, #1
90021efc:	fb00 a003 	mla	r0, r0, r3, sl
90021f00:	1400      	asrs	r0, r0, #16
90021f02:	f53f af2d 	bmi.w	90021d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f06:	3901      	subs	r1, #1
90021f08:	4288      	cmp	r0, r1
90021f0a:	f6bf af29 	bge.w	90021d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f0e:	9926      	ldr	r1, [sp, #152]	@ 0x98
90021f10:	fb01 5303 	mla	r3, r1, r3, r5
90021f14:	141b      	asrs	r3, r3, #16
90021f16:	f53f af23 	bmi.w	90021d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f1a:	3a01      	subs	r2, #1
90021f1c:	4293      	cmp	r3, r2
90021f1e:	f6bf af1f 	bge.w	90021d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f22:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90021f26:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90021f2a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90021f2e:	f1be 0f00 	cmp.w	lr, #0
90021f32:	dc6c      	bgt.n	9002200e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021f34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021f36:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021f3a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021f3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021f40:	2b00      	cmp	r3, #0
90021f42:	f340 810e 	ble.w	90022162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021f46:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021f4a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021f4c:	ee30 0a04 	vadd.f32	s0, s0, s8
90021f50:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021f54:	eef0 6a62 	vmov.f32	s13, s5
90021f58:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021f5c:	ee31 1a05 	vadd.f32	s2, s2, s10
90021f60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021f64:	ee16 aa90 	vmov	sl, s13
90021f68:	eef0 6a43 	vmov.f32	s13, s6
90021f6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021f70:	ee16 5a90 	vmov	r5, s13
90021f74:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021f78:	ee61 7a27 	vmul.f32	s15, s2, s15
90021f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021f80:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021f88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021f8c:	ee12 2a90 	vmov	r2, s5
90021f90:	eef0 2a47 	vmov.f32	s5, s14
90021f94:	fb92 f3f3 	sdiv	r3, r2, r3
90021f98:	ee13 2a10 	vmov	r2, s6
90021f9c:	9325      	str	r3, [sp, #148]	@ 0x94
90021f9e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021fa0:	eeb0 3a67 	vmov.f32	s6, s15
90021fa4:	fb92 f3f3 	sdiv	r3, r2, r3
90021fa8:	9326      	str	r3, [sp, #152]	@ 0x98
90021faa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021fac:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90021fae:	3b01      	subs	r3, #1
90021fb0:	930c      	str	r3, [sp, #48]	@ 0x30
90021fb2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021fb4:	bf08      	it	eq
90021fb6:	4613      	moveq	r3, r2
90021fb8:	9309      	str	r3, [sp, #36]	@ 0x24
90021fba:	e6a6      	b.n	90021d0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021fbc:	2900      	cmp	r1, #0
90021fbe:	f43f af10 	beq.w	90021de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021fc2:	f819 3003 	ldrb.w	r3, [r9, r3]
90021fc6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021fca:	930f      	str	r3, [sp, #60]	@ 0x3c
90021fcc:	e709      	b.n	90021de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021fce:	f112 0901 	adds.w	r9, r2, #1
90021fd2:	f53f af7d 	bmi.w	90021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021fd6:	454b      	cmp	r3, r9
90021fd8:	f6ff af7a 	blt.w	90021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021fdc:	f11c 0901 	adds.w	r9, ip, #1
90021fe0:	f53f af76 	bmi.w	90021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021fe4:	45ce      	cmp	lr, r9
90021fe6:	f6ff af73 	blt.w	90021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021fea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021fec:	b21b      	sxth	r3, r3
90021fee:	9202      	str	r2, [sp, #8]
90021ff0:	fa0f f28e 	sxth.w	r2, lr
90021ff4:	9300      	str	r3, [sp, #0]
90021ff6:	4633      	mov	r3, r6
90021ff8:	9201      	str	r2, [sp, #4]
90021ffa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021ffc:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022000:	e9cd c003 	strd	ip, r0, [sp, #12]
90022004:	4639      	mov	r1, r7
90022006:	9816      	ldr	r0, [sp, #88]	@ 0x58
90022008:	f7ff fd8e 	bl	90021b28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9002200c:	e760      	b.n	90021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002200e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022010:	ea4f 422a 	mov.w	r2, sl, asr #16
90022014:	1429      	asrs	r1, r5, #16
90022016:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022018:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002201c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90022020:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022024:	fb03 2101 	mla	r1, r3, r1, r2
90022028:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002202a:	440a      	add	r2, r1
9002202c:	5c61      	ldrb	r1, [r4, r1]
9002202e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90022032:	f1bc 0f00 	cmp.w	ip, #0
90022036:	f000 808c 	beq.w	90022152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9002203a:	7857      	ldrb	r7, [r2, #1]
9002203c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90022040:	9413      	str	r4, [sp, #76]	@ 0x4c
90022042:	b140      	cbz	r0, 90022056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022044:	18d7      	adds	r7, r2, r3
90022046:	5cd3      	ldrb	r3, [r2, r3]
90022048:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002204c:	9310      	str	r3, [sp, #64]	@ 0x40
9002204e:	787b      	ldrb	r3, [r7, #1]
90022050:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022054:	9314      	str	r3, [sp, #80]	@ 0x50
90022056:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022058:	fb1c f200 	smulbb	r2, ip, r0
9002205c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002205e:	f10e 3eff 	add.w	lr, lr, #4294967295
90022062:	041f      	lsls	r7, r3, #16
90022064:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022068:	10d2      	asrs	r2, r2, #3
9002206a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
9002206e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90022072:	431f      	orrs	r7, r3
90022074:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90022078:	9317      	str	r3, [sp, #92]	@ 0x5c
9002207a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002207c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002207e:	041b      	lsls	r3, r3, #16
90022080:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022084:	ea43 030b 	orr.w	r3, r3, fp
90022088:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002208c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022090:	4353      	muls	r3, r2
90022092:	fb04 3707 	mla	r7, r4, r7, r3
90022096:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002209a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002209c:	ea43 0b01 	orr.w	fp, r3, r1
900220a0:	f1c0 0110 	rsb	r1, r0, #16
900220a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900220a6:	eba1 0c0c 	sub.w	ip, r1, ip
900220aa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900220ae:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900220b2:	fb0c 770b 	mla	r7, ip, fp, r7
900220b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900220ba:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
900220be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900220c2:	ea4c 0c0b 	orr.w	ip, ip, fp
900220c6:	fb02 770c 	mla	r7, r2, ip, r7
900220ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900220cc:	0d79      	lsrs	r1, r7, #21
900220ce:	8812      	ldrh	r2, [r2, #0]
900220d0:	097f      	lsrs	r7, r7, #5
900220d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900220d6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900220da:	430f      	orrs	r7, r1
900220dc:	1211      	asrs	r1, r2, #8
900220de:	b2bb      	uxth	r3, r7
900220e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900220e4:	10d7      	asrs	r7, r2, #3
900220e6:	fb11 f104 	smulbb	r1, r1, r4
900220ea:	1218      	asrs	r0, r3, #8
900220ec:	00d2      	lsls	r2, r2, #3
900220ee:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900220f2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900220f6:	fb17 f704 	smulbb	r7, r7, r4
900220fa:	b2d2      	uxtb	r2, r2
900220fc:	fb00 1009 	mla	r0, r0, r9, r1
90022100:	10d9      	asrs	r1, r3, #3
90022102:	fb12 f204 	smulbb	r2, r2, r4
90022106:	00db      	lsls	r3, r3, #3
90022108:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002210c:	b280      	uxth	r0, r0
9002210e:	b2db      	uxtb	r3, r3
90022110:	fb01 7109 	mla	r1, r1, r9, r7
90022114:	fb03 2309 	mla	r3, r3, r9, r2
90022118:	1c42      	adds	r2, r0, #1
9002211a:	b289      	uxth	r1, r1
9002211c:	b29b      	uxth	r3, r3
9002211e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022122:	1c4f      	adds	r7, r1, #1
90022124:	1c5a      	adds	r2, r3, #1
90022126:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002212a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002212e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022132:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022134:	0949      	lsrs	r1, r1, #5
90022136:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002213a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002213e:	4310      	orrs	r0, r2
90022140:	4308      	orrs	r0, r1
90022142:	f823 0b02 	strh.w	r0, [r3], #2
90022146:	930e      	str	r3, [sp, #56]	@ 0x38
90022148:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002214a:	449a      	add	sl, r3
9002214c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002214e:	441d      	add	r5, r3
90022150:	e6ed      	b.n	90021f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90022152:	2800      	cmp	r0, #0
90022154:	f43f af7f 	beq.w	90022056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022158:	5cd3      	ldrb	r3, [r2, r3]
9002215a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002215e:	9310      	str	r3, [sp, #64]	@ 0x40
90022160:	e779      	b.n	90022056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022162:	b019      	add	sp, #100	@ 0x64
90022164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90022168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002216c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90022170:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90022174:	f1b8 0f00 	cmp.w	r8, #0
90022178:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
9002217c:	fb08 470e 	mla	r7, r8, lr, r4
90022180:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90022184:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90022188:	eb02 0907 	add.w	r9, r2, r7
9002218c:	8808      	ldrh	r0, [r1, #0]
9002218e:	db67      	blt.n	90022260 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022190:	45c2      	cmp	sl, r8
90022192:	dd65      	ble.n	90022260 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022194:	2c00      	cmp	r4, #0
90022196:	db61      	blt.n	9002225c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022198:	45a6      	cmp	lr, r4
9002219a:	dd5f      	ble.n	9002225c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002219c:	5dd2      	ldrb	r2, [r2, r7]
9002219e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900221a2:	1c62      	adds	r2, r4, #1
900221a4:	d45f      	bmi.n	90022266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900221a6:	4596      	cmp	lr, r2
900221a8:	dd5d      	ble.n	90022266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900221aa:	2d00      	cmp	r5, #0
900221ac:	d05b      	beq.n	90022266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900221ae:	f899 2001 	ldrb.w	r2, [r9, #1]
900221b2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
900221b6:	f118 0801 	adds.w	r8, r8, #1
900221ba:	d458      	bmi.n	9002226e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
900221bc:	45c2      	cmp	sl, r8
900221be:	dd56      	ble.n	9002226e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
900221c0:	2e00      	cmp	r6, #0
900221c2:	d054      	beq.n	9002226e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
900221c4:	2c00      	cmp	r4, #0
900221c6:	db50      	blt.n	9002226a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
900221c8:	45a6      	cmp	lr, r4
900221ca:	dd4e      	ble.n	9002226a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
900221cc:	f819 200e 	ldrb.w	r2, [r9, lr]
900221d0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
900221d4:	3401      	adds	r4, #1
900221d6:	d407      	bmi.n	900221e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900221d8:	45a6      	cmp	lr, r4
900221da:	dd05      	ble.n	900221e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900221dc:	b125      	cbz	r5, 900221e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900221de:	44ce      	add	lr, r9
900221e0:	f89e 0001 	ldrb.w	r0, [lr, #1]
900221e4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900221e8:	fb15 f406 	smulbb	r4, r5, r6
900221ec:	ea4f 430c 	mov.w	r3, ip, lsl #16
900221f0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900221f4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900221f8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900221fc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022200:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022204:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022208:	ea43 0c0c 	orr.w	ip, r3, ip
9002220c:	f1c6 0310 	rsb	r3, r6, #16
90022210:	ea4e 0707 	orr.w	r7, lr, r7
90022214:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022218:	1b5b      	subs	r3, r3, r5
9002221a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002221e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022222:	437d      	muls	r5, r7
90022224:	fb03 5c0c 	mla	ip, r3, ip, r5
90022228:	0403      	lsls	r3, r0, #16
9002222a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002222e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022232:	4318      	orrs	r0, r3
90022234:	0413      	lsls	r3, r2, #16
90022236:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002223a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002223e:	fb04 c000 	mla	r0, r4, r0, ip
90022242:	4313      	orrs	r3, r2
90022244:	fb06 0003 	mla	r0, r6, r3, r0
90022248:	0d43      	lsrs	r3, r0, #21
9002224a:	0940      	lsrs	r0, r0, #5
9002224c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022250:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022254:	4318      	orrs	r0, r3
90022256:	8008      	strh	r0, [r1, #0]
90022258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002225c:	4684      	mov	ip, r0
9002225e:	e7a0      	b.n	900221a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90022260:	4607      	mov	r7, r0
90022262:	4684      	mov	ip, r0
90022264:	e7a7      	b.n	900221b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90022266:	4607      	mov	r7, r0
90022268:	e7a5      	b.n	900221b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002226a:	4602      	mov	r2, r0
9002226c:	e7b2      	b.n	900221d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9002226e:	4602      	mov	r2, r0
90022270:	e7ba      	b.n	900221e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90022272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022276:	b093      	sub	sp, #76	@ 0x4c
90022278:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002227c:	920f      	str	r2, [sp, #60]	@ 0x3c
9002227e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022280:	9010      	str	r0, [sp, #64]	@ 0x40
90022282:	9108      	str	r1, [sp, #32]
90022284:	6850      	ldr	r0, [r2, #4]
90022286:	9306      	str	r3, [sp, #24]
90022288:	6812      	ldr	r2, [r2, #0]
9002228a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002228e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90022292:	fb00 1303 	mla	r3, r0, r3, r1
90022296:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002229a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002229c:	681b      	ldr	r3, [r3, #0]
9002229e:	9307      	str	r3, [sp, #28]
900222a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900222a2:	685f      	ldr	r7, [r3, #4]
900222a4:	3704      	adds	r7, #4
900222a6:	9b08      	ldr	r3, [sp, #32]
900222a8:	2b00      	cmp	r3, #0
900222aa:	dc03      	bgt.n	900222b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900222ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900222ae:	2b00      	cmp	r3, #0
900222b0:	f340 81b2 	ble.w	90022618 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900222b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900222b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900222ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900222be:	1e48      	subs	r0, r1, #1
900222c0:	f102 3cff 	add.w	ip, r2, #4294967295
900222c4:	9b06      	ldr	r3, [sp, #24]
900222c6:	2b00      	cmp	r3, #0
900222c8:	f340 80a9 	ble.w	9002241e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
900222cc:	ea5f 4e24 	movs.w	lr, r4, asr #16
900222d0:	ea4f 4326 	mov.w	r3, r6, asr #16
900222d4:	d406      	bmi.n	900222e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900222d6:	4586      	cmp	lr, r0
900222d8:	da04      	bge.n	900222e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900222da:	2b00      	cmp	r3, #0
900222dc:	db02      	blt.n	900222e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900222de:	4563      	cmp	r3, ip
900222e0:	f2c0 809e 	blt.w	90022420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
900222e4:	f11e 0e01 	adds.w	lr, lr, #1
900222e8:	f100 808f 	bmi.w	9002240a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900222ec:	4571      	cmp	r1, lr
900222ee:	f2c0 808c 	blt.w	9002240a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900222f2:	3301      	adds	r3, #1
900222f4:	f100 8089 	bmi.w	9002240a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900222f8:	429a      	cmp	r2, r3
900222fa:	f2c0 8086 	blt.w	9002240a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900222fe:	f8dd b018 	ldr.w	fp, [sp, #24]
90022302:	46c8      	mov	r8, r9
90022304:	f1bb 0f00 	cmp.w	fp, #0
90022308:	f340 80a6 	ble.w	90022458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9002230c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9002230e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90022312:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022314:	f3c4 3003 	ubfx	r0, r4, #12, #4
90022318:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002231c:	1422      	asrs	r2, r4, #16
9002231e:	f3c6 3103 	ubfx	r1, r6, #12, #4
90022322:	689b      	ldr	r3, [r3, #8]
90022324:	f100 80e3 	bmi.w	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022328:	f103 3aff 	add.w	sl, r3, #4294967295
9002232c:	4552      	cmp	r2, sl
9002232e:	f280 80de 	bge.w	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022332:	f1bc 0f00 	cmp.w	ip, #0
90022336:	f2c0 80da 	blt.w	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002233a:	f10e 3aff 	add.w	sl, lr, #4294967295
9002233e:	45d4      	cmp	ip, sl
90022340:	f280 80d5 	bge.w	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022344:	b21b      	sxth	r3, r3
90022346:	9d07      	ldr	r5, [sp, #28]
90022348:	fb0c 2203 	mla	r2, ip, r3, r2
9002234c:	eb05 0a02 	add.w	sl, r5, r2
90022350:	5caa      	ldrb	r2, [r5, r2]
90022352:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90022356:	2800      	cmp	r0, #0
90022358:	f000 80c0 	beq.w	900224dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9002235c:	f89a 2001 	ldrb.w	r2, [sl, #1]
90022360:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90022364:	920b      	str	r2, [sp, #44]	@ 0x2c
90022366:	b151      	cbz	r1, 9002237e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022368:	eb0a 0203 	add.w	r2, sl, r3
9002236c:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022370:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022374:	9309      	str	r3, [sp, #36]	@ 0x24
90022376:	7853      	ldrb	r3, [r2, #1]
90022378:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002237c:	930c      	str	r3, [sp, #48]	@ 0x30
9002237e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022380:	fb10 f201 	smulbb	r2, r0, r1
90022384:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90022386:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002238a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002238e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022392:	10d2      	asrs	r2, r2, #3
90022394:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022398:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002239c:	ea4c 0c03 	orr.w	ip, ip, r3
900223a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900223a2:	041b      	lsls	r3, r3, #16
900223a4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900223a8:	432b      	orrs	r3, r5
900223aa:	4353      	muls	r3, r2
900223ac:	fb0a 330c 	mla	r3, sl, ip, r3
900223b0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900223b4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900223b8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900223bc:	ea4c 0e0e 	orr.w	lr, ip, lr
900223c0:	f1c1 0c10 	rsb	ip, r1, #16
900223c4:	ebac 0c00 	sub.w	ip, ip, r0
900223c8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900223cc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900223d0:	fb0c 3c0e 	mla	ip, ip, lr, r3
900223d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900223d6:	0418      	lsls	r0, r3, #16
900223d8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900223dc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900223e0:	4318      	orrs	r0, r3
900223e2:	fb02 c200 	mla	r2, r2, r0, ip
900223e6:	0d53      	lsrs	r3, r2, #21
900223e8:	0952      	lsrs	r2, r2, #5
900223ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900223ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900223f2:	431a      	orrs	r2, r3
900223f4:	f8a8 2000 	strh.w	r2, [r8]
900223f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900223fa:	f108 0802 	add.w	r8, r8, #2
900223fe:	f10b 3bff 	add.w	fp, fp, #4294967295
90022402:	441c      	add	r4, r3
90022404:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022406:	441e      	add	r6, r3
90022408:	e77c      	b.n	90022304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002240a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002240c:	f109 0902 	add.w	r9, r9, #2
90022410:	441c      	add	r4, r3
90022412:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022414:	441e      	add	r6, r3
90022416:	9b06      	ldr	r3, [sp, #24]
90022418:	3b01      	subs	r3, #1
9002241a:	9306      	str	r3, [sp, #24]
9002241c:	e752      	b.n	900222c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002241e:	d020      	beq.n	90022462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90022420:	9b06      	ldr	r3, [sp, #24]
90022422:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022424:	3b01      	subs	r3, #1
90022426:	fb00 4003 	mla	r0, r0, r3, r4
9002242a:	1400      	asrs	r0, r0, #16
9002242c:	f53f af67 	bmi.w	900222fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022430:	3901      	subs	r1, #1
90022432:	4288      	cmp	r0, r1
90022434:	f6bf af63 	bge.w	900222fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022438:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002243a:	fb01 6303 	mla	r3, r1, r3, r6
9002243e:	141b      	asrs	r3, r3, #16
90022440:	f53f af5d 	bmi.w	900222fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022444:	3a01      	subs	r2, #1
90022446:	4293      	cmp	r3, r2
90022448:	f6bf af59 	bge.w	900222fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002244c:	f8dd 8018 	ldr.w	r8, [sp, #24]
90022450:	46ca      	mov	sl, r9
90022452:	f1b8 0f00 	cmp.w	r8, #0
90022456:	dc67      	bgt.n	90022528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90022458:	9b06      	ldr	r3, [sp, #24]
9002245a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002245e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90022462:	9b08      	ldr	r3, [sp, #32]
90022464:	2b00      	cmp	r3, #0
90022466:	f340 80d7 	ble.w	90022618 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002246a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002246e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022470:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022474:	eeb0 6a62 	vmov.f32	s12, s5
90022478:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002247c:	ee31 1a05 	vadd.f32	s2, s2, s10
90022480:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022484:	ee16 4a10 	vmov	r4, s12
90022488:	eeb0 6a43 	vmov.f32	s12, s6
9002248c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022490:	ee16 6a10 	vmov	r6, s12
90022494:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022498:	ee61 7a27 	vmul.f32	s15, s2, s15
9002249c:	ee77 2a62 	vsub.f32	s5, s14, s5
900224a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900224a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900224a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900224ac:	ee12 2a90 	vmov	r2, s5
900224b0:	eef0 2a47 	vmov.f32	s5, s14
900224b4:	fb92 f3f3 	sdiv	r3, r2, r3
900224b8:	ee13 2a10 	vmov	r2, s6
900224bc:	931f      	str	r3, [sp, #124]	@ 0x7c
900224be:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900224c0:	eeb0 3a67 	vmov.f32	s6, s15
900224c4:	fb92 f3f3 	sdiv	r3, r2, r3
900224c8:	9320      	str	r3, [sp, #128]	@ 0x80
900224ca:	9b08      	ldr	r3, [sp, #32]
900224cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900224ce:	3b01      	subs	r3, #1
900224d0:	9308      	str	r3, [sp, #32]
900224d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900224d4:	bf08      	it	eq
900224d6:	4613      	moveq	r3, r2
900224d8:	9306      	str	r3, [sp, #24]
900224da:	e6e4      	b.n	900222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900224dc:	2900      	cmp	r1, #0
900224de:	f43f af4e 	beq.w	9002237e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900224e2:	f81a 3003 	ldrb.w	r3, [sl, r3]
900224e6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900224ea:	9309      	str	r3, [sp, #36]	@ 0x24
900224ec:	e747      	b.n	9002237e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900224ee:	f112 0a01 	adds.w	sl, r2, #1
900224f2:	d481      	bmi.n	900223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900224f4:	4553      	cmp	r3, sl
900224f6:	f6ff af7f 	blt.w	900223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900224fa:	f11c 0a01 	adds.w	sl, ip, #1
900224fe:	f53f af7b 	bmi.w	900223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022502:	45d6      	cmp	lr, sl
90022504:	f6ff af78 	blt.w	900223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022508:	b21b      	sxth	r3, r3
9002250a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002250e:	fa0f f28e 	sxth.w	r2, lr
90022512:	9300      	str	r3, [sp, #0]
90022514:	463b      	mov	r3, r7
90022516:	9201      	str	r2, [sp, #4]
90022518:	9a07      	ldr	r2, [sp, #28]
9002251a:	e9cd 0104 	strd	r0, r1, [sp, #16]
9002251e:	4641      	mov	r1, r8
90022520:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022522:	f7ff fe21 	bl	90022168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90022526:	e767      	b.n	900223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022528:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002252a:	1422      	asrs	r2, r4, #16
9002252c:	1431      	asrs	r1, r6, #16
9002252e:	9d07      	ldr	r5, [sp, #28]
90022530:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022534:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90022538:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002253c:	fb03 2101 	mla	r1, r3, r1, r2
90022540:	9a07      	ldr	r2, [sp, #28]
90022542:	440a      	add	r2, r1
90022544:	5c69      	ldrb	r1, [r5, r1]
90022546:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002254a:	f1be 0f00 	cmp.w	lr, #0
9002254e:	d05c      	beq.n	9002260a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90022550:	f892 c001 	ldrb.w	ip, [r2, #1]
90022554:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90022558:	950d      	str	r5, [sp, #52]	@ 0x34
9002255a:	b150      	cbz	r0, 90022572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002255c:	eb02 0c03 	add.w	ip, r2, r3
90022560:	5cd3      	ldrb	r3, [r2, r3]
90022562:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022566:	930a      	str	r3, [sp, #40]	@ 0x28
90022568:	f89c 3001 	ldrb.w	r3, [ip, #1]
9002256c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022570:	930e      	str	r3, [sp, #56]	@ 0x38
90022572:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022574:	fb1e f200 	smulbb	r2, lr, r0
90022578:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002257a:	f108 38ff 	add.w	r8, r8, #4294967295
9002257e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022582:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022586:	10d2      	asrs	r2, r2, #3
90022588:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002258c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022590:	ea4c 0c03 	orr.w	ip, ip, r3
90022594:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90022598:	9311      	str	r3, [sp, #68]	@ 0x44
9002259a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002259c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002259e:	041b      	lsls	r3, r3, #16
900225a0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900225a4:	ea43 030b 	orr.w	r3, r3, fp
900225a8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900225ac:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900225b0:	4353      	muls	r3, r2
900225b2:	fb05 3c0c 	mla	ip, r5, ip, r3
900225b6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
900225ba:	ea43 0b01 	orr.w	fp, r3, r1
900225be:	f1c0 0110 	rsb	r1, r0, #16
900225c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900225c4:	eba1 0e0e 	sub.w	lr, r1, lr
900225c8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900225cc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900225d0:	fb0e cc0b 	mla	ip, lr, fp, ip
900225d4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900225d8:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
900225dc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900225e0:	ea4b 0e0e 	orr.w	lr, fp, lr
900225e4:	fb02 cc0e 	mla	ip, r2, lr, ip
900225e8:	ea4f 535c 	mov.w	r3, ip, lsr #21
900225ec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900225f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900225f4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900225f8:	ea43 0c0c 	orr.w	ip, r3, ip
900225fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900225fe:	441c      	add	r4, r3
90022600:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022602:	f82a cb02 	strh.w	ip, [sl], #2
90022606:	441e      	add	r6, r3
90022608:	e723      	b.n	90022452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002260a:	2800      	cmp	r0, #0
9002260c:	d0b1      	beq.n	90022572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002260e:	5cd3      	ldrb	r3, [r2, r3]
90022610:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022614:	930a      	str	r3, [sp, #40]	@ 0x28
90022616:	e7ac      	b.n	90022572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022618:	b013      	add	sp, #76	@ 0x4c
9002261a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002261e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9002261e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022622:	880d      	ldrh	r5, [r1, #0]
90022624:	b087      	sub	sp, #28
90022626:	10ef      	asrs	r7, r5, #3
90022628:	9103      	str	r1, [sp, #12]
9002262a:	ea4f 2a25 	mov.w	sl, r5, asr #8
9002262e:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90022632:	00ed      	lsls	r5, r5, #3
90022634:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022638:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9002263c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90022640:	b2ed      	uxtb	r5, r5
90022642:	9701      	str	r7, [sp, #4]
90022644:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90022648:	9502      	str	r5, [sp, #8]
9002264a:	9d01      	ldr	r5, [sp, #4]
9002264c:	9902      	ldr	r1, [sp, #8]
9002264e:	022d      	lsls	r5, r5, #8
90022650:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90022654:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90022658:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9002265c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90022660:	430d      	orrs	r5, r1
90022662:	fb06 0709 	mla	r7, r6, r9, r0
90022666:	2e00      	cmp	r6, #0
90022668:	9505      	str	r5, [sp, #20]
9002266a:	eb02 0c07 	add.w	ip, r2, r7
9002266e:	f2c0 80b6 	blt.w	900227de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022672:	45b3      	cmp	fp, r6
90022674:	f340 80b3 	ble.w	900227de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022678:	2800      	cmp	r0, #0
9002267a:	f2c0 80ae 	blt.w	900227da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002267e:	4581      	cmp	r9, r0
90022680:	f340 80ab 	ble.w	900227da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022684:	5dd7      	ldrb	r7, [r2, r7]
90022686:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002268a:	441f      	add	r7, r3
9002268c:	1c42      	adds	r2, r0, #1
9002268e:	f100 80a9 	bmi.w	900227e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022692:	4591      	cmp	r9, r2
90022694:	f340 80a6 	ble.w	900227e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022698:	2c00      	cmp	r4, #0
9002269a:	f000 80a3 	beq.w	900227e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002269e:	f89c 5001 	ldrb.w	r5, [ip, #1]
900226a2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900226a6:	441d      	add	r5, r3
900226a8:	3601      	adds	r6, #1
900226aa:	f100 809f 	bmi.w	900227ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900226ae:	45b3      	cmp	fp, r6
900226b0:	f340 809c 	ble.w	900227ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900226b4:	f1be 0f00 	cmp.w	lr, #0
900226b8:	f000 8098 	beq.w	900227ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900226bc:	2800      	cmp	r0, #0
900226be:	f2c0 8093 	blt.w	900227e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900226c2:	4581      	cmp	r9, r0
900226c4:	f340 8090 	ble.w	900227e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900226c8:	f81c 6009 	ldrb.w	r6, [ip, r9]
900226cc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900226d0:	441e      	add	r6, r3
900226d2:	3001      	adds	r0, #1
900226d4:	f100 808d 	bmi.w	900227f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900226d8:	4581      	cmp	r9, r0
900226da:	f340 808a 	ble.w	900227f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900226de:	2c00      	cmp	r4, #0
900226e0:	f000 8087 	beq.w	900227f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900226e4:	44e1      	add	r9, ip
900226e6:	f899 2001 	ldrb.w	r2, [r9, #1]
900226ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900226ee:	4413      	add	r3, r2
900226f0:	b2a4      	uxth	r4, r4
900226f2:	f897 c002 	ldrb.w	ip, [r7, #2]
900226f6:	fa1f fe8e 	uxth.w	lr, lr
900226fa:	9901      	ldr	r1, [sp, #4]
900226fc:	fb04 fb0e 	mul.w	fp, r4, lr
90022700:	0124      	lsls	r4, r4, #4
90022702:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90022706:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
9002270a:	eba4 040b 	sub.w	r4, r4, fp
9002270e:	fa1f f08e 	uxth.w	r0, lr
90022712:	b2a2      	uxth	r2, r4
90022714:	78ac      	ldrb	r4, [r5, #2]
90022716:	eba9 0900 	sub.w	r9, r9, r0
9002271a:	fa1f fe88 	uxth.w	lr, r8
9002271e:	4354      	muls	r4, r2
90022720:	ea6f 0808 	mvn.w	r8, r8
90022724:	fa1f f989 	uxth.w	r9, r9
90022728:	fa5f f888 	uxtb.w	r8, r8
9002272c:	fb09 440c 	mla	r4, r9, ip, r4
90022730:	f896 c002 	ldrb.w	ip, [r6, #2]
90022734:	fb1a fa08 	smulbb	sl, sl, r8
90022738:	fb00 440c 	mla	r4, r0, ip, r4
9002273c:	f893 c002 	ldrb.w	ip, [r3, #2]
90022740:	fb0b 4c0c 	mla	ip, fp, ip, r4
90022744:	787c      	ldrb	r4, [r7, #1]
90022746:	783f      	ldrb	r7, [r7, #0]
90022748:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9002274c:	fb0c ac0e 	mla	ip, ip, lr, sl
90022750:	f895 a001 	ldrb.w	sl, [r5, #1]
90022754:	782d      	ldrb	r5, [r5, #0]
90022756:	fb02 fa0a 	mul.w	sl, r2, sl
9002275a:	fa1f fc8c 	uxth.w	ip, ip
9002275e:	436a      	muls	r2, r5
90022760:	7835      	ldrb	r5, [r6, #0]
90022762:	fb09 aa04 	mla	sl, r9, r4, sl
90022766:	7874      	ldrb	r4, [r6, #1]
90022768:	fb09 2207 	mla	r2, r9, r7, r2
9002276c:	fb00 aa04 	mla	sl, r0, r4, sl
90022770:	785c      	ldrb	r4, [r3, #1]
90022772:	fb00 2005 	mla	r0, r0, r5, r2
90022776:	781b      	ldrb	r3, [r3, #0]
90022778:	fb0b a404 	mla	r4, fp, r4, sl
9002277c:	fb11 fa08 	smulbb	sl, r1, r8
90022780:	fb0b 0b03 	mla	fp, fp, r3, r0
90022784:	9b02      	ldr	r3, [sp, #8]
90022786:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002278a:	fb13 f808 	smulbb	r8, r3, r8
9002278e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022792:	fb04 a40e 	mla	r4, r4, lr, sl
90022796:	f10c 0301 	add.w	r3, ip, #1
9002279a:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002279e:	b2a4      	uxth	r4, r4
900227a0:	fa1f fe8e 	uxth.w	lr, lr
900227a4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900227a8:	f104 0a01 	add.w	sl, r4, #1
900227ac:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
900227b0:	f10e 0c01 	add.w	ip, lr, #1
900227b4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900227b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900227bc:	0964      	lsrs	r4, r4, #5
900227be:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900227c2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900227c6:	ea4c 0c03 	orr.w	ip, ip, r3
900227ca:	9b03      	ldr	r3, [sp, #12]
900227cc:	ea4c 0c04 	orr.w	ip, ip, r4
900227d0:	f8a3 c000 	strh.w	ip, [r3]
900227d4:	b007      	add	sp, #28
900227d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900227da:	af05      	add	r7, sp, #20
900227dc:	e756      	b.n	9002268c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900227de:	ad05      	add	r5, sp, #20
900227e0:	462f      	mov	r7, r5
900227e2:	e761      	b.n	900226a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900227e4:	ad05      	add	r5, sp, #20
900227e6:	e75f      	b.n	900226a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900227e8:	ae05      	add	r6, sp, #20
900227ea:	e772      	b.n	900226d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900227ec:	ab05      	add	r3, sp, #20
900227ee:	461e      	mov	r6, r3
900227f0:	e77e      	b.n	900226f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900227f2:	ab05      	add	r3, sp, #20
900227f4:	e77c      	b.n	900226f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900227f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900227f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900227fa:	b095      	sub	sp, #84	@ 0x54
900227fc:	9212      	str	r2, [sp, #72]	@ 0x48
900227fe:	9309      	str	r3, [sp, #36]	@ 0x24
90022800:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022802:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90022806:	9013      	str	r0, [sp, #76]	@ 0x4c
90022808:	930f      	str	r3, [sp, #60]	@ 0x3c
9002280a:	6850      	ldr	r0, [r2, #4]
9002280c:	910e      	str	r1, [sp, #56]	@ 0x38
9002280e:	6812      	ldr	r2, [r2, #0]
90022810:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90022814:	fb00 1303 	mla	r3, r0, r3, r1
90022818:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002281c:	930a      	str	r3, [sp, #40]	@ 0x28
9002281e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022820:	681b      	ldr	r3, [r3, #0]
90022822:	930d      	str	r3, [sp, #52]	@ 0x34
90022824:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022826:	685c      	ldr	r4, [r3, #4]
90022828:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002282a:	3404      	adds	r4, #4
9002282c:	43db      	mvns	r3, r3
9002282e:	b2db      	uxtb	r3, r3
90022830:	930b      	str	r3, [sp, #44]	@ 0x2c
90022832:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022834:	2b00      	cmp	r3, #0
90022836:	dc03      	bgt.n	90022840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022838:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002283a:	2b00      	cmp	r3, #0
9002283c:	f340 8255 	ble.w	90022cea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022840:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002284a:	1e48      	subs	r0, r1, #1
9002284c:	1e55      	subs	r5, r2, #1
9002284e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022850:	2b00      	cmp	r3, #0
90022852:	f340 80f9 	ble.w	90022a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90022856:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90022858:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002285a:	1436      	asrs	r6, r6, #16
9002285c:	ea4f 4323 	mov.w	r3, r3, asr #16
90022860:	d406      	bmi.n	90022870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022862:	4286      	cmp	r6, r0
90022864:	da04      	bge.n	90022870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022866:	2b00      	cmp	r3, #0
90022868:	db02      	blt.n	90022870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002286a:	42ab      	cmp	r3, r5
9002286c:	f2c0 80ed 	blt.w	90022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022870:	3601      	adds	r6, #1
90022872:	f100 80da 	bmi.w	90022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022876:	42b1      	cmp	r1, r6
90022878:	f2c0 80d7 	blt.w	90022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002287c:	3301      	adds	r3, #1
9002287e:	f100 80d4 	bmi.w	90022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022882:	429a      	cmp	r2, r3
90022884:	f2c0 80d1 	blt.w	90022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022888:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002288a:	9311      	str	r3, [sp, #68]	@ 0x44
9002288c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002288e:	930c      	str	r3, [sp, #48]	@ 0x30
90022890:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022892:	2b00      	cmp	r3, #0
90022894:	f340 80fa 	ble.w	90022a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022898:	9826      	ldr	r0, [sp, #152]	@ 0x98
9002289a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002289c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002289e:	68c6      	ldr	r6, [r0, #12]
900228a0:	141d      	asrs	r5, r3, #16
900228a2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900228a4:	f3c2 3103 	ubfx	r1, r2, #12, #4
900228a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900228aa:	9a26      	ldr	r2, [sp, #152]	@ 0x98
900228ac:	1400      	asrs	r0, r0, #16
900228ae:	f3c3 3303 	ubfx	r3, r3, #12, #4
900228b2:	6892      	ldr	r2, [r2, #8]
900228b4:	f100 813e 	bmi.w	90022b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900228b8:	1e57      	subs	r7, r2, #1
900228ba:	42b8      	cmp	r0, r7
900228bc:	f280 813a 	bge.w	90022b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900228c0:	2d00      	cmp	r5, #0
900228c2:	f2c0 8137 	blt.w	90022b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900228c6:	1e77      	subs	r7, r6, #1
900228c8:	42bd      	cmp	r5, r7
900228ca:	f280 8133 	bge.w	90022b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900228ce:	b212      	sxth	r2, r2
900228d0:	fb05 0002 	mla	r0, r5, r2, r0
900228d4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900228d6:	f815 a000 	ldrb.w	sl, [r5, r0]
900228da:	182e      	adds	r6, r5, r0
900228dc:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900228e0:	eb04 050a 	add.w	r5, r4, sl
900228e4:	2b00      	cmp	r3, #0
900228e6:	f000 8117 	beq.w	90022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900228ea:	f896 c001 	ldrb.w	ip, [r6, #1]
900228ee:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900228f2:	44a4      	add	ip, r4
900228f4:	2900      	cmp	r1, #0
900228f6:	f000 8117 	beq.w	90022b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900228fa:	18b0      	adds	r0, r6, r2
900228fc:	5cb2      	ldrb	r2, [r6, r2]
900228fe:	7840      	ldrb	r0, [r0, #1]
90022900:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022904:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022908:	4422      	add	r2, r4
9002290a:	4420      	add	r0, r4
9002290c:	b29b      	uxth	r3, r3
9002290e:	f89c 7002 	ldrb.w	r7, [ip, #2]
90022912:	b289      	uxth	r1, r1
90022914:	f895 b002 	ldrb.w	fp, [r5, #2]
90022918:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002291a:	fb03 f901 	mul.w	r9, r3, r1
9002291e:	011b      	lsls	r3, r3, #4
90022920:	f8b6 e000 	ldrh.w	lr, [r6]
90022924:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022928:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
9002292c:	eba3 0309 	sub.w	r3, r3, r9
90022930:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90022934:	b289      	uxth	r1, r1
90022936:	f814 a00a 	ldrb.w	sl, [r4, sl]
9002293a:	b29b      	uxth	r3, r3
9002293c:	eba8 0801 	sub.w	r8, r8, r1
90022940:	435f      	muls	r7, r3
90022942:	fa1f f888 	uxth.w	r8, r8
90022946:	9310      	str	r3, [sp, #64]	@ 0x40
90022948:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002294a:	fb08 770b 	mla	r7, r8, fp, r7
9002294e:	f892 b002 	ldrb.w	fp, [r2, #2]
90022952:	fb01 770b 	mla	r7, r1, fp, r7
90022956:	f890 b002 	ldrb.w	fp, [r0, #2]
9002295a:	fb09 770b 	mla	r7, r9, fp, r7
9002295e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90022962:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90022966:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002296a:	fb1b fb03 	smulbb	fp, fp, r3
9002296e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022970:	fb07 b706 	mla	r7, r7, r6, fp
90022974:	f895 b001 	ldrb.w	fp, [r5, #1]
90022978:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002297c:	f89c c000 	ldrb.w	ip, [ip]
90022980:	b2bf      	uxth	r7, r7
90022982:	435d      	muls	r5, r3
90022984:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022986:	fb08 550b 	mla	r5, r8, fp, r5
9002298a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002298e:	fb01 550b 	mla	r5, r1, fp, r5
90022992:	f890 b001 	ldrb.w	fp, [r0, #1]
90022996:	fb09 550b 	mla	r5, r9, fp, r5
9002299a:	ea4f 0bee 	mov.w	fp, lr, asr #3
9002299e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900229a2:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900229a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
900229aa:	fa5f fe8e 	uxtb.w	lr, lr
900229ae:	fb1b fb03 	smulbb	fp, fp, r3
900229b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900229b4:	fb03 f30c 	mul.w	r3, r3, ip
900229b8:	f892 c000 	ldrb.w	ip, [r2]
900229bc:	fb05 b506 	mla	r5, r5, r6, fp
900229c0:	fb08 330a 	mla	r3, r8, sl, r3
900229c4:	b2ad      	uxth	r5, r5
900229c6:	fb01 330c 	mla	r3, r1, ip, r3
900229ca:	f890 c000 	ldrb.w	ip, [r0]
900229ce:	f105 0b01 	add.w	fp, r5, #1
900229d2:	fb09 3c0c 	mla	ip, r9, ip, r3
900229d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900229d8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900229dc:	fb1e fe03 	smulbb	lr, lr, r3
900229e0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900229e4:	1c7b      	adds	r3, r7, #1
900229e6:	096d      	lsrs	r5, r5, #5
900229e8:	fb0c e606 	mla	r6, ip, r6, lr
900229ec:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900229f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900229f4:	b2b6      	uxth	r6, r6
900229f6:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
900229fa:	1c77      	adds	r7, r6, #1
900229fc:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022a00:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022a04:	431f      	orrs	r7, r3
90022a06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022a08:	433d      	orrs	r5, r7
90022a0a:	801d      	strh	r5, [r3, #0]
90022a0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022a0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022a10:	3302      	adds	r3, #2
90022a12:	930c      	str	r3, [sp, #48]	@ 0x30
90022a14:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022a16:	4413      	add	r3, r2
90022a18:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022a1a:	931f      	str	r3, [sp, #124]	@ 0x7c
90022a1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022a1e:	4413      	add	r3, r2
90022a20:	9320      	str	r3, [sp, #128]	@ 0x80
90022a22:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022a24:	3b01      	subs	r3, #1
90022a26:	9311      	str	r3, [sp, #68]	@ 0x44
90022a28:	e732      	b.n	90022890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022a2a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022a2c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022a2e:	4433      	add	r3, r6
90022a30:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90022a32:	931f      	str	r3, [sp, #124]	@ 0x7c
90022a34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022a36:	4433      	add	r3, r6
90022a38:	9320      	str	r3, [sp, #128]	@ 0x80
90022a3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022a3c:	3b01      	subs	r3, #1
90022a3e:	9309      	str	r3, [sp, #36]	@ 0x24
90022a40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022a42:	3302      	adds	r3, #2
90022a44:	930a      	str	r3, [sp, #40]	@ 0x28
90022a46:	e702      	b.n	9002284e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022a48:	d027      	beq.n	90022a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022a4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022a4c:	9821      	ldr	r0, [sp, #132]	@ 0x84
90022a4e:	3b01      	subs	r3, #1
90022a50:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022a52:	fb00 5003 	mla	r0, r0, r3, r5
90022a56:	1400      	asrs	r0, r0, #16
90022a58:	f53f af16 	bmi.w	90022888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022a5c:	3901      	subs	r1, #1
90022a5e:	4288      	cmp	r0, r1
90022a60:	f6bf af12 	bge.w	90022888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022a64:	9922      	ldr	r1, [sp, #136]	@ 0x88
90022a66:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022a68:	fb01 0303 	mla	r3, r1, r3, r0
90022a6c:	141b      	asrs	r3, r3, #16
90022a6e:	f53f af0b 	bmi.w	90022888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022a72:	3a01      	subs	r2, #1
90022a74:	4293      	cmp	r3, r2
90022a76:	f6bf af07 	bge.w	90022888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022a7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022a7c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90022a80:	9311      	str	r3, [sp, #68]	@ 0x44
90022a82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022a84:	930c      	str	r3, [sp, #48]	@ 0x30
90022a86:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022a88:	2b00      	cmp	r3, #0
90022a8a:	dc70      	bgt.n	90022b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022a8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022a8e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022a90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022a94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022a98:	930a      	str	r3, [sp, #40]	@ 0x28
90022a9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022a9c:	2b00      	cmp	r3, #0
90022a9e:	f340 8124 	ble.w	90022cea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022aa2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022aa6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022aa8:	ee30 0a04 	vadd.f32	s0, s0, s8
90022aac:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022ab0:	eef0 6a62 	vmov.f32	s13, s5
90022ab4:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022ab8:	ee31 1a05 	vadd.f32	s2, s2, s10
90022abc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ac0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90022ac4:	eef0 6a43 	vmov.f32	s13, s6
90022ac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022acc:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90022ad0:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022ad4:	ee61 7a27 	vmul.f32	s15, s2, s15
90022ad8:	ee77 2a62 	vsub.f32	s5, s14, s5
90022adc:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022ae0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022ae4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022ae8:	ee12 2a90 	vmov	r2, s5
90022aec:	eef0 2a47 	vmov.f32	s5, s14
90022af0:	fb92 f3f3 	sdiv	r3, r2, r3
90022af4:	ee13 2a10 	vmov	r2, s6
90022af8:	9321      	str	r3, [sp, #132]	@ 0x84
90022afa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022afc:	eeb0 3a67 	vmov.f32	s6, s15
90022b00:	fb92 f3f3 	sdiv	r3, r2, r3
90022b04:	9322      	str	r3, [sp, #136]	@ 0x88
90022b06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022b08:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90022b0a:	3b01      	subs	r3, #1
90022b0c:	930e      	str	r3, [sp, #56]	@ 0x38
90022b0e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022b10:	bf08      	it	eq
90022b12:	4613      	moveq	r3, r2
90022b14:	9309      	str	r3, [sp, #36]	@ 0x24
90022b16:	e68c      	b.n	90022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022b18:	b149      	cbz	r1, 90022b2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022b1a:	5cb2      	ldrb	r2, [r6, r2]
90022b1c:	4628      	mov	r0, r5
90022b1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022b22:	4422      	add	r2, r4
90022b24:	46ac      	mov	ip, r5
90022b26:	e6f1      	b.n	9002290c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022b28:	4628      	mov	r0, r5
90022b2a:	462a      	mov	r2, r5
90022b2c:	e6ee      	b.n	9002290c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022b2e:	4628      	mov	r0, r5
90022b30:	462a      	mov	r2, r5
90022b32:	e7f7      	b.n	90022b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90022b34:	1c47      	adds	r7, r0, #1
90022b36:	f53f af69 	bmi.w	90022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022b3a:	42ba      	cmp	r2, r7
90022b3c:	f6ff af66 	blt.w	90022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022b40:	1c6f      	adds	r7, r5, #1
90022b42:	f53f af63 	bmi.w	90022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022b46:	42be      	cmp	r6, r7
90022b48:	f6ff af60 	blt.w	90022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022b4c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90022b4e:	b236      	sxth	r6, r6
90022b50:	b212      	sxth	r2, r2
90022b52:	9002      	str	r0, [sp, #8]
90022b54:	9601      	str	r6, [sp, #4]
90022b56:	9200      	str	r2, [sp, #0]
90022b58:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90022b5a:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022b5e:	e9cd 5303 	strd	r5, r3, [sp, #12]
90022b62:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90022b66:	4623      	mov	r3, r4
90022b68:	f7ff fd59 	bl	9002261e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022b6c:	e74e      	b.n	90022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022b6e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022b70:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022b72:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022b76:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022b78:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022b7a:	1400      	asrs	r0, r0, #16
90022b7c:	142d      	asrs	r5, r5, #16
90022b7e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022b80:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022b84:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022b88:	fb02 5000 	mla	r0, r2, r0, r5
90022b8c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022b8e:	f815 9000 	ldrb.w	r9, [r5, r0]
90022b92:	182e      	adds	r6, r5, r0
90022b94:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90022b98:	eb04 0509 	add.w	r5, r4, r9
90022b9c:	2b00      	cmp	r3, #0
90022b9e:	f000 8096 	beq.w	90022cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90022ba2:	7877      	ldrb	r7, [r6, #1]
90022ba4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022ba8:	4427      	add	r7, r4
90022baa:	2900      	cmp	r1, #0
90022bac:	f000 8097 	beq.w	90022cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022bb0:	18b0      	adds	r0, r6, r2
90022bb2:	5cb2      	ldrb	r2, [r6, r2]
90022bb4:	7840      	ldrb	r0, [r0, #1]
90022bb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022bba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022bbe:	4422      	add	r2, r4
90022bc0:	4420      	add	r0, r4
90022bc2:	b29b      	uxth	r3, r3
90022bc4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90022bc6:	b289      	uxth	r1, r1
90022bc8:	f895 b002 	ldrb.w	fp, [r5, #2]
90022bcc:	f8b6 c000 	ldrh.w	ip, [r6]
90022bd0:	fb03 f801 	mul.w	r8, r3, r1
90022bd4:	011b      	lsls	r3, r3, #4
90022bd6:	78be      	ldrb	r6, [r7, #2]
90022bd8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90022bdc:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022be0:	eba3 0308 	sub.w	r3, r3, r8
90022be4:	f814 9009 	ldrb.w	r9, [r4, r9]
90022be8:	b289      	uxth	r1, r1
90022bea:	b29b      	uxth	r3, r3
90022bec:	ebae 0e01 	sub.w	lr, lr, r1
90022bf0:	435e      	muls	r6, r3
90022bf2:	fa1f fe8e 	uxth.w	lr, lr
90022bf6:	9310      	str	r3, [sp, #64]	@ 0x40
90022bf8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022bfa:	fb0e 660b 	mla	r6, lr, fp, r6
90022bfe:	f892 b002 	ldrb.w	fp, [r2, #2]
90022c02:	fb01 660b 	mla	r6, r1, fp, r6
90022c06:	f890 b002 	ldrb.w	fp, [r0, #2]
90022c0a:	fb08 660b 	mla	r6, r8, fp, r6
90022c0e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90022c12:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90022c16:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022c1a:	fb1b fb03 	smulbb	fp, fp, r3
90022c1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022c20:	fb06 b60a 	mla	r6, r6, sl, fp
90022c24:	f895 b001 	ldrb.w	fp, [r5, #1]
90022c28:	787d      	ldrb	r5, [r7, #1]
90022c2a:	783f      	ldrb	r7, [r7, #0]
90022c2c:	b2b6      	uxth	r6, r6
90022c2e:	435d      	muls	r5, r3
90022c30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022c32:	fb0e 550b 	mla	r5, lr, fp, r5
90022c36:	f892 b001 	ldrb.w	fp, [r2, #1]
90022c3a:	fb01 550b 	mla	r5, r1, fp, r5
90022c3e:	f890 b001 	ldrb.w	fp, [r0, #1]
90022c42:	fb08 550b 	mla	r5, r8, fp, r5
90022c46:	ea4f 0bec 	mov.w	fp, ip, asr #3
90022c4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022c4e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022c52:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022c56:	fa5f fc8c 	uxtb.w	ip, ip
90022c5a:	fb1b fb03 	smulbb	fp, fp, r3
90022c5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022c60:	437b      	muls	r3, r7
90022c62:	7817      	ldrb	r7, [r2, #0]
90022c64:	fb05 b50a 	mla	r5, r5, sl, fp
90022c68:	fb0e 3309 	mla	r3, lr, r9, r3
90022c6c:	b2ad      	uxth	r5, r5
90022c6e:	fb01 3307 	mla	r3, r1, r7, r3
90022c72:	7807      	ldrb	r7, [r0, #0]
90022c74:	f105 0b01 	add.w	fp, r5, #1
90022c78:	fb08 3707 	mla	r7, r8, r7, r3
90022c7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022c7e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022c82:	fb1c fc03 	smulbb	ip, ip, r3
90022c86:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022c8a:	1c73      	adds	r3, r6, #1
90022c8c:	096d      	lsrs	r5, r5, #5
90022c8e:	fb07 c70a 	mla	r7, r7, sl, ip
90022c92:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90022c96:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022c9a:	b2bf      	uxth	r7, r7
90022c9c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022c9e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90022ca2:	1c7a      	adds	r2, r7, #1
90022ca4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022ca8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022cac:	4316      	orrs	r6, r2
90022cae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022cb0:	432e      	orrs	r6, r5
90022cb2:	f823 6b02 	strh.w	r6, [r3], #2
90022cb6:	930c      	str	r3, [sp, #48]	@ 0x30
90022cb8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022cba:	4413      	add	r3, r2
90022cbc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022cbe:	931f      	str	r3, [sp, #124]	@ 0x7c
90022cc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022cc2:	4413      	add	r3, r2
90022cc4:	9320      	str	r3, [sp, #128]	@ 0x80
90022cc6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022cc8:	3b01      	subs	r3, #1
90022cca:	9311      	str	r3, [sp, #68]	@ 0x44
90022ccc:	e6db      	b.n	90022a86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90022cce:	b149      	cbz	r1, 90022ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022cd0:	5cb2      	ldrb	r2, [r6, r2]
90022cd2:	4628      	mov	r0, r5
90022cd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022cd8:	4422      	add	r2, r4
90022cda:	462f      	mov	r7, r5
90022cdc:	e771      	b.n	90022bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022cde:	4628      	mov	r0, r5
90022ce0:	462a      	mov	r2, r5
90022ce2:	e76e      	b.n	90022bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022ce4:	4628      	mov	r0, r5
90022ce6:	462a      	mov	r2, r5
90022ce8:	e7f7      	b.n	90022cda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90022cea:	b015      	add	sp, #84	@ 0x54
90022cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022cf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022cf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022cf4:	880f      	ldrh	r7, [r1, #0]
90022cf6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90022cfa:	023c      	lsls	r4, r7, #8
90022cfc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90022d00:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90022d04:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90022d08:	017c      	lsls	r4, r7, #5
90022d0a:	00ff      	lsls	r7, r7, #3
90022d0c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90022d10:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90022d14:	b2ff      	uxtb	r7, r7
90022d16:	ea4b 0404 	orr.w	r4, fp, r4
90022d1a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90022d1e:	4327      	orrs	r7, r4
90022d20:	fb05 ca0e 	mla	sl, r5, lr, ip
90022d24:	2d00      	cmp	r5, #0
90022d26:	9701      	str	r7, [sp, #4]
90022d28:	eb02 080a 	add.w	r8, r2, sl
90022d2c:	db7e      	blt.n	90022e2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022d2e:	45a9      	cmp	r9, r5
90022d30:	dd7c      	ble.n	90022e2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022d32:	f1bc 0f00 	cmp.w	ip, #0
90022d36:	db77      	blt.n	90022e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022d38:	45e6      	cmp	lr, ip
90022d3a:	dd75      	ble.n	90022e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022d3c:	f812 700a 	ldrb.w	r7, [r2, sl]
90022d40:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022d44:	441f      	add	r7, r3
90022d46:	f11c 0201 	adds.w	r2, ip, #1
90022d4a:	d472      	bmi.n	90022e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022d4c:	4596      	cmp	lr, r2
90022d4e:	dd70      	ble.n	90022e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022d50:	2800      	cmp	r0, #0
90022d52:	d06e      	beq.n	90022e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022d54:	f898 4001 	ldrb.w	r4, [r8, #1]
90022d58:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90022d5c:	441c      	add	r4, r3
90022d5e:	3501      	adds	r5, #1
90022d60:	d46b      	bmi.n	90022e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022d62:	45a9      	cmp	r9, r5
90022d64:	dd69      	ble.n	90022e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022d66:	2e00      	cmp	r6, #0
90022d68:	d067      	beq.n	90022e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022d6a:	f1bc 0f00 	cmp.w	ip, #0
90022d6e:	db62      	blt.n	90022e36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022d70:	45e6      	cmp	lr, ip
90022d72:	dd60      	ble.n	90022e36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022d74:	f818 500e 	ldrb.w	r5, [r8, lr]
90022d78:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022d7c:	441d      	add	r5, r3
90022d7e:	f11c 0201 	adds.w	r2, ip, #1
90022d82:	d45d      	bmi.n	90022e40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022d84:	4596      	cmp	lr, r2
90022d86:	dd5b      	ble.n	90022e40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022d88:	2800      	cmp	r0, #0
90022d8a:	d059      	beq.n	90022e40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022d8c:	44c6      	add	lr, r8
90022d8e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022d92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022d96:	4413      	add	r3, r2
90022d98:	b280      	uxth	r0, r0
90022d9a:	f897 e002 	ldrb.w	lr, [r7, #2]
90022d9e:	b2b2      	uxth	r2, r6
90022da0:	f897 9000 	ldrb.w	r9, [r7]
90022da4:	787f      	ldrb	r7, [r7, #1]
90022da6:	fb00 f602 	mul.w	r6, r0, r2
90022daa:	0100      	lsls	r0, r0, #4
90022dac:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022db0:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022db4:	1b80      	subs	r0, r0, r6
90022db6:	fa1f fc82 	uxth.w	ip, r2
90022dba:	b282      	uxth	r2, r0
90022dbc:	78a0      	ldrb	r0, [r4, #2]
90022dbe:	eba8 080c 	sub.w	r8, r8, ip
90022dc2:	4350      	muls	r0, r2
90022dc4:	fa1f f888 	uxth.w	r8, r8
90022dc8:	fb08 0e0e 	mla	lr, r8, lr, r0
90022dcc:	78a8      	ldrb	r0, [r5, #2]
90022dce:	fb0c e000 	mla	r0, ip, r0, lr
90022dd2:	f893 e002 	ldrb.w	lr, [r3, #2]
90022dd6:	fb06 0e0e 	mla	lr, r6, lr, r0
90022dda:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90022dde:	f894 e000 	ldrb.w	lr, [r4]
90022de2:	fb02 fe0e 	mul.w	lr, r2, lr
90022de6:	fb08 e909 	mla	r9, r8, r9, lr
90022dea:	f895 e000 	ldrb.w	lr, [r5]
90022dee:	fb0c 990e 	mla	r9, ip, lr, r9
90022df2:	f893 e000 	ldrb.w	lr, [r3]
90022df6:	785b      	ldrb	r3, [r3, #1]
90022df8:	fb06 9e0e 	mla	lr, r6, lr, r9
90022dfc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022e00:	ea4e 0e00 	orr.w	lr, lr, r0
90022e04:	7860      	ldrb	r0, [r4, #1]
90022e06:	4350      	muls	r0, r2
90022e08:	786a      	ldrb	r2, [r5, #1]
90022e0a:	fb08 0007 	mla	r0, r8, r7, r0
90022e0e:	fb0c 0202 	mla	r2, ip, r2, r0
90022e12:	fb06 2303 	mla	r3, r6, r3, r2
90022e16:	095b      	lsrs	r3, r3, #5
90022e18:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022e1c:	ea4e 0303 	orr.w	r3, lr, r3
90022e20:	800b      	strh	r3, [r1, #0]
90022e22:	b003      	add	sp, #12
90022e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022e28:	af01      	add	r7, sp, #4
90022e2a:	e78c      	b.n	90022d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022e2c:	ac01      	add	r4, sp, #4
90022e2e:	4627      	mov	r7, r4
90022e30:	e795      	b.n	90022d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022e32:	ac01      	add	r4, sp, #4
90022e34:	e793      	b.n	90022d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022e36:	ad01      	add	r5, sp, #4
90022e38:	e7a1      	b.n	90022d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90022e3a:	ab01      	add	r3, sp, #4
90022e3c:	461d      	mov	r5, r3
90022e3e:	e7ab      	b.n	90022d98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022e40:	ab01      	add	r3, sp, #4
90022e42:	e7a9      	b.n	90022d98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022e48:	b08f      	sub	sp, #60	@ 0x3c
90022e4a:	920c      	str	r2, [sp, #48]	@ 0x30
90022e4c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90022e4e:	900d      	str	r0, [sp, #52]	@ 0x34
90022e50:	910a      	str	r1, [sp, #40]	@ 0x28
90022e52:	6850      	ldr	r0, [r2, #4]
90022e54:	9306      	str	r3, [sp, #24]
90022e56:	6812      	ldr	r2, [r2, #0]
90022e58:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90022e5c:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90022e60:	fb00 1303 	mla	r3, r0, r3, r1
90022e64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022e68:	9307      	str	r3, [sp, #28]
90022e6a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e6c:	681b      	ldr	r3, [r3, #0]
90022e6e:	9308      	str	r3, [sp, #32]
90022e70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e72:	685c      	ldr	r4, [r3, #4]
90022e74:	3404      	adds	r4, #4
90022e76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022e78:	2b00      	cmp	r3, #0
90022e7a:	dc03      	bgt.n	90022e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90022e7c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022e7e:	2b00      	cmp	r3, #0
90022e80:	f340 81d5 	ble.w	9002322e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022e84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022e8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022e8e:	1e48      	subs	r0, r1, #1
90022e90:	1e56      	subs	r6, r2, #1
90022e92:	9b06      	ldr	r3, [sp, #24]
90022e94:	2b00      	cmp	r3, #0
90022e96:	f340 80b6 	ble.w	90023006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022e9a:	ea5f 472b 	movs.w	r7, fp, asr #16
90022e9e:	ea4f 4325 	mov.w	r3, r5, asr #16
90022ea2:	d406      	bmi.n	90022eb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022ea4:	4287      	cmp	r7, r0
90022ea6:	da04      	bge.n	90022eb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022ea8:	2b00      	cmp	r3, #0
90022eaa:	db02      	blt.n	90022eb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022eac:	42b3      	cmp	r3, r6
90022eae:	f2c0 80ab 	blt.w	90023008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022eb2:	3701      	adds	r7, #1
90022eb4:	f100 809c 	bmi.w	90022ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022eb8:	42b9      	cmp	r1, r7
90022eba:	f2c0 8099 	blt.w	90022ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022ebe:	3301      	adds	r3, #1
90022ec0:	f100 8096 	bmi.w	90022ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022ec4:	429a      	cmp	r2, r3
90022ec6:	f2c0 8093 	blt.w	90022ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022eca:	9b06      	ldr	r3, [sp, #24]
90022ecc:	930b      	str	r3, [sp, #44]	@ 0x2c
90022ece:	9b07      	ldr	r3, [sp, #28]
90022ed0:	9309      	str	r3, [sp, #36]	@ 0x24
90022ed2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022ed4:	2b00      	cmp	r3, #0
90022ed6:	f340 80b4 	ble.w	90023042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022eda:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022edc:	142e      	asrs	r6, r5, #16
90022ede:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022ee0:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022ee4:	68c7      	ldr	r7, [r0, #12]
90022ee6:	ea5f 402b 	movs.w	r0, fp, asr #16
90022eea:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022eee:	6892      	ldr	r2, [r2, #8]
90022ef0:	f100 80fb 	bmi.w	900230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022ef4:	f102 3cff 	add.w	ip, r2, #4294967295
90022ef8:	4560      	cmp	r0, ip
90022efa:	f280 80f6 	bge.w	900230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022efe:	2e00      	cmp	r6, #0
90022f00:	f2c0 80f3 	blt.w	900230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f04:	f107 3cff 	add.w	ip, r7, #4294967295
90022f08:	4566      	cmp	r6, ip
90022f0a:	f280 80ee 	bge.w	900230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f0e:	b212      	sxth	r2, r2
90022f10:	fb06 0002 	mla	r0, r6, r2, r0
90022f14:	9e08      	ldr	r6, [sp, #32]
90022f16:	1837      	adds	r7, r6, r0
90022f18:	5c30      	ldrb	r0, [r6, r0]
90022f1a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022f1e:	eb04 0c08 	add.w	ip, r4, r8
90022f22:	2b00      	cmp	r3, #0
90022f24:	f000 80d3 	beq.w	900230ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022f28:	787e      	ldrb	r6, [r7, #1]
90022f2a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022f2e:	4426      	add	r6, r4
90022f30:	2900      	cmp	r1, #0
90022f32:	f000 80d4 	beq.w	900230de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022f36:	18b8      	adds	r0, r7, r2
90022f38:	5cba      	ldrb	r2, [r7, r2]
90022f3a:	7840      	ldrb	r0, [r0, #1]
90022f3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022f40:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022f44:	4422      	add	r2, r4
90022f46:	4420      	add	r0, r4
90022f48:	b29b      	uxth	r3, r3
90022f4a:	78b7      	ldrb	r7, [r6, #2]
90022f4c:	b289      	uxth	r1, r1
90022f4e:	f89c a002 	ldrb.w	sl, [ip, #2]
90022f52:	f89c c001 	ldrb.w	ip, [ip, #1]
90022f56:	fb03 f901 	mul.w	r9, r3, r1
90022f5a:	011b      	lsls	r3, r3, #4
90022f5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022f60:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022f64:	eba3 0309 	sub.w	r3, r3, r9
90022f68:	b289      	uxth	r1, r1
90022f6a:	b29b      	uxth	r3, r3
90022f6c:	ebae 0e01 	sub.w	lr, lr, r1
90022f70:	435f      	muls	r7, r3
90022f72:	fa1f fe8e 	uxth.w	lr, lr
90022f76:	fb0e 770a 	mla	r7, lr, sl, r7
90022f7a:	f892 a002 	ldrb.w	sl, [r2, #2]
90022f7e:	fb01 770a 	mla	r7, r1, sl, r7
90022f82:	f890 a002 	ldrb.w	sl, [r0, #2]
90022f86:	fb09 7a0a 	mla	sl, r9, sl, r7
90022f8a:	f814 7008 	ldrb.w	r7, [r4, r8]
90022f8e:	f896 8000 	ldrb.w	r8, [r6]
90022f92:	7876      	ldrb	r6, [r6, #1]
90022f94:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022f98:	fb03 f808 	mul.w	r8, r3, r8
90022f9c:	4373      	muls	r3, r6
90022f9e:	fb0e 8807 	mla	r8, lr, r7, r8
90022fa2:	7817      	ldrb	r7, [r2, #0]
90022fa4:	fb0e 330c 	mla	r3, lr, ip, r3
90022fa8:	fb01 8807 	mla	r8, r1, r7, r8
90022fac:	7807      	ldrb	r7, [r0, #0]
90022fae:	fb09 8707 	mla	r7, r9, r7, r8
90022fb2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022fb6:	ea47 070a 	orr.w	r7, r7, sl
90022fba:	f892 a001 	ldrb.w	sl, [r2, #1]
90022fbe:	fb01 310a 	mla	r1, r1, sl, r3
90022fc2:	f890 a001 	ldrb.w	sl, [r0, #1]
90022fc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022fc8:	fb09 1a0a 	mla	sl, r9, sl, r1
90022fcc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022fd0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022fd4:	ea47 070a 	orr.w	r7, r7, sl
90022fd8:	801f      	strh	r7, [r3, #0]
90022fda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022fdc:	3302      	adds	r3, #2
90022fde:	9309      	str	r3, [sp, #36]	@ 0x24
90022fe0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022fe2:	449b      	add	fp, r3
90022fe4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022fe6:	441d      	add	r5, r3
90022fe8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022fea:	3b01      	subs	r3, #1
90022fec:	930b      	str	r3, [sp, #44]	@ 0x2c
90022fee:	e770      	b.n	90022ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022ff0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022ff2:	449b      	add	fp, r3
90022ff4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022ff6:	441d      	add	r5, r3
90022ff8:	9b06      	ldr	r3, [sp, #24]
90022ffa:	3b01      	subs	r3, #1
90022ffc:	9306      	str	r3, [sp, #24]
90022ffe:	9b07      	ldr	r3, [sp, #28]
90023000:	3302      	adds	r3, #2
90023002:	9307      	str	r3, [sp, #28]
90023004:	e745      	b.n	90022e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90023006:	d023      	beq.n	90023050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90023008:	9b06      	ldr	r3, [sp, #24]
9002300a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002300c:	3b01      	subs	r3, #1
9002300e:	fb00 b003 	mla	r0, r0, r3, fp
90023012:	1400      	asrs	r0, r0, #16
90023014:	f53f af59 	bmi.w	90022eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023018:	3901      	subs	r1, #1
9002301a:	4288      	cmp	r0, r1
9002301c:	f6bf af55 	bge.w	90022eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023020:	991c      	ldr	r1, [sp, #112]	@ 0x70
90023022:	fb01 5303 	mla	r3, r1, r3, r5
90023026:	141b      	asrs	r3, r3, #16
90023028:	f53f af4f 	bmi.w	90022eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002302c:	3a01      	subs	r2, #1
9002302e:	4293      	cmp	r3, r2
90023030:	f6bf af4b 	bge.w	90022eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023034:	9b06      	ldr	r3, [sp, #24]
90023036:	9309      	str	r3, [sp, #36]	@ 0x24
90023038:	9b07      	ldr	r3, [sp, #28]
9002303a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002303c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002303e:	2b00      	cmp	r3, #0
90023040:	dc70      	bgt.n	90023124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90023042:	9b06      	ldr	r3, [sp, #24]
90023044:	9a07      	ldr	r2, [sp, #28]
90023046:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002304a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002304e:	9307      	str	r3, [sp, #28]
90023050:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023052:	2b00      	cmp	r3, #0
90023054:	f340 80eb 	ble.w	9002322e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90023058:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002305c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002305e:	ee30 0a04 	vadd.f32	s0, s0, s8
90023062:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023066:	eef0 6a62 	vmov.f32	s13, s5
9002306a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002306e:	ee31 1a05 	vadd.f32	s2, s2, s10
90023072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023076:	ee16 ba90 	vmov	fp, s13
9002307a:	eef0 6a43 	vmov.f32	s13, s6
9002307e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023082:	ee16 5a90 	vmov	r5, s13
90023086:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002308a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002308e:	ee77 2a62 	vsub.f32	s5, s14, s5
90023092:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023096:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002309a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002309e:	ee12 2a90 	vmov	r2, s5
900230a2:	eef0 2a47 	vmov.f32	s5, s14
900230a6:	fb92 f3f3 	sdiv	r3, r2, r3
900230aa:	ee13 2a10 	vmov	r2, s6
900230ae:	931b      	str	r3, [sp, #108]	@ 0x6c
900230b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900230b2:	eeb0 3a67 	vmov.f32	s6, s15
900230b6:	fb92 f3f3 	sdiv	r3, r2, r3
900230ba:	931c      	str	r3, [sp, #112]	@ 0x70
900230bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900230be:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900230c0:	3b01      	subs	r3, #1
900230c2:	930a      	str	r3, [sp, #40]	@ 0x28
900230c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900230c6:	bf08      	it	eq
900230c8:	4613      	moveq	r3, r2
900230ca:	9306      	str	r3, [sp, #24]
900230cc:	e6d3      	b.n	90022e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900230ce:	b149      	cbz	r1, 900230e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900230d0:	5cba      	ldrb	r2, [r7, r2]
900230d2:	4660      	mov	r0, ip
900230d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900230d8:	4422      	add	r2, r4
900230da:	4666      	mov	r6, ip
900230dc:	e734      	b.n	90022f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900230de:	4660      	mov	r0, ip
900230e0:	4662      	mov	r2, ip
900230e2:	e731      	b.n	90022f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900230e4:	4660      	mov	r0, ip
900230e6:	4662      	mov	r2, ip
900230e8:	e7f7      	b.n	900230da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900230ea:	f110 0c01 	adds.w	ip, r0, #1
900230ee:	f53f af74 	bmi.w	90022fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900230f2:	4562      	cmp	r2, ip
900230f4:	f6ff af71 	blt.w	90022fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900230f8:	f116 0c01 	adds.w	ip, r6, #1
900230fc:	f53f af6d 	bmi.w	90022fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023100:	4567      	cmp	r7, ip
90023102:	f6ff af6a 	blt.w	90022fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023106:	b23f      	sxth	r7, r7
90023108:	b212      	sxth	r2, r2
9002310a:	9701      	str	r7, [sp, #4]
9002310c:	9200      	str	r2, [sp, #0]
9002310e:	e9cd 3104 	strd	r3, r1, [sp, #16]
90023112:	e9cd 0602 	strd	r0, r6, [sp, #8]
90023116:	4623      	mov	r3, r4
90023118:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002311a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9002311e:	f7ff fde7 	bl	90022cf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90023122:	e75a      	b.n	90022fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023124:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023126:	ea4f 462b 	mov.w	r6, fp, asr #16
9002312a:	1428      	asrs	r0, r5, #16
9002312c:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023130:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90023134:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023138:	fb02 6000 	mla	r0, r2, r0, r6
9002313c:	9e08      	ldr	r6, [sp, #32]
9002313e:	f816 8000 	ldrb.w	r8, [r6, r0]
90023142:	1837      	adds	r7, r6, r0
90023144:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90023148:	eb04 0c08 	add.w	ip, r4, r8
9002314c:	2b00      	cmp	r3, #0
9002314e:	d060      	beq.n	90023212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90023150:	787e      	ldrb	r6, [r7, #1]
90023152:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023156:	4426      	add	r6, r4
90023158:	2900      	cmp	r1, #0
9002315a:	d062      	beq.n	90023222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9002315c:	18b8      	adds	r0, r7, r2
9002315e:	5cba      	ldrb	r2, [r7, r2]
90023160:	7840      	ldrb	r0, [r0, #1]
90023162:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023166:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002316a:	4422      	add	r2, r4
9002316c:	4420      	add	r0, r4
9002316e:	b29b      	uxth	r3, r3
90023170:	78b7      	ldrb	r7, [r6, #2]
90023172:	b289      	uxth	r1, r1
90023174:	f89c a002 	ldrb.w	sl, [ip, #2]
90023178:	f89c c001 	ldrb.w	ip, [ip, #1]
9002317c:	fb03 f901 	mul.w	r9, r3, r1
90023180:	011b      	lsls	r3, r3, #4
90023182:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023186:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002318a:	eba3 0309 	sub.w	r3, r3, r9
9002318e:	b289      	uxth	r1, r1
90023190:	b29b      	uxth	r3, r3
90023192:	ebae 0e01 	sub.w	lr, lr, r1
90023196:	435f      	muls	r7, r3
90023198:	fa1f fe8e 	uxth.w	lr, lr
9002319c:	fb0e 770a 	mla	r7, lr, sl, r7
900231a0:	f892 a002 	ldrb.w	sl, [r2, #2]
900231a4:	fb01 770a 	mla	r7, r1, sl, r7
900231a8:	f890 a002 	ldrb.w	sl, [r0, #2]
900231ac:	fb09 7a0a 	mla	sl, r9, sl, r7
900231b0:	f814 7008 	ldrb.w	r7, [r4, r8]
900231b4:	f896 8000 	ldrb.w	r8, [r6]
900231b8:	7876      	ldrb	r6, [r6, #1]
900231ba:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
900231be:	fb03 f808 	mul.w	r8, r3, r8
900231c2:	4373      	muls	r3, r6
900231c4:	7856      	ldrb	r6, [r2, #1]
900231c6:	fb0e 8807 	mla	r8, lr, r7, r8
900231ca:	7817      	ldrb	r7, [r2, #0]
900231cc:	fb0e 330c 	mla	r3, lr, ip, r3
900231d0:	fb01 8807 	mla	r8, r1, r7, r8
900231d4:	7807      	ldrb	r7, [r0, #0]
900231d6:	fb01 3306 	mla	r3, r1, r6, r3
900231da:	fb09 8707 	mla	r7, r9, r7, r8
900231de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900231e2:	ea47 070a 	orr.w	r7, r7, sl
900231e6:	f890 a001 	ldrb.w	sl, [r0, #1]
900231ea:	fb09 3a0a 	mla	sl, r9, sl, r3
900231ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900231f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900231f4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900231f8:	ea47 070a 	orr.w	r7, r7, sl
900231fc:	f823 7b02 	strh.w	r7, [r3], #2
90023200:	930b      	str	r3, [sp, #44]	@ 0x2c
90023202:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023204:	449b      	add	fp, r3
90023206:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023208:	441d      	add	r5, r3
9002320a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002320c:	3b01      	subs	r3, #1
9002320e:	9309      	str	r3, [sp, #36]	@ 0x24
90023210:	e714      	b.n	9002303c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90023212:	b149      	cbz	r1, 90023228 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90023214:	5cba      	ldrb	r2, [r7, r2]
90023216:	4660      	mov	r0, ip
90023218:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002321c:	4422      	add	r2, r4
9002321e:	4666      	mov	r6, ip
90023220:	e7a5      	b.n	9002316e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023222:	4660      	mov	r0, ip
90023224:	4662      	mov	r2, ip
90023226:	e7a2      	b.n	9002316e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023228:	4660      	mov	r0, ip
9002322a:	4662      	mov	r2, ip
9002322c:	e7f7      	b.n	9002321e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9002322e:	b00f      	add	sp, #60	@ 0x3c
90023230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90023234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023238:	b085      	sub	sp, #20
9002323a:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
9002323e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90023242:	9102      	str	r1, [sp, #8]
90023244:	2c00      	cmp	r4, #0
90023246:	fb04 710c 	mla	r1, r4, ip, r7
9002324a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
9002324e:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90023252:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90023256:	eb02 0e01 	add.w	lr, r2, r1
9002325a:	f2c0 8122 	blt.w	900234a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9002325e:	45a0      	cmp	r8, r4
90023260:	f340 811f 	ble.w	900234a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90023264:	2f00      	cmp	r7, #0
90023266:	f2c0 811a 	blt.w	9002349e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002326a:	45bc      	cmp	ip, r7
9002326c:	f340 8117 	ble.w	9002349e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90023270:	5c52      	ldrb	r2, [r2, r1]
90023272:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90023276:	1c7a      	adds	r2, r7, #1
90023278:	f100 8116 	bmi.w	900234a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002327c:	4594      	cmp	ip, r2
9002327e:	f340 8113 	ble.w	900234a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90023282:	2e00      	cmp	r6, #0
90023284:	f000 8112 	beq.w	900234ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90023288:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002328c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023290:	3401      	adds	r4, #1
90023292:	f100 810f 	bmi.w	900234b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023296:	45a0      	cmp	r8, r4
90023298:	f340 810c 	ble.w	900234b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002329c:	2800      	cmp	r0, #0
9002329e:	f000 810c 	beq.w	900234ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
900232a2:	2f00      	cmp	r7, #0
900232a4:	f2c0 8104 	blt.w	900234b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900232a8:	45bc      	cmp	ip, r7
900232aa:	f340 8101 	ble.w	900234b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900232ae:	f81e 200c 	ldrb.w	r2, [lr, ip]
900232b2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
900232b6:	3701      	adds	r7, #1
900232b8:	f100 8102 	bmi.w	900234c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
900232bc:	45bc      	cmp	ip, r7
900232be:	f340 80ff 	ble.w	900234c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
900232c2:	2e00      	cmp	r6, #0
900232c4:	f000 80fe 	beq.w	900234c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
900232c8:	44f4      	add	ip, lr
900232ca:	f89c 2001 	ldrb.w	r2, [ip, #1]
900232ce:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900232d2:	b2b6      	uxth	r6, r6
900232d4:	b280      	uxth	r0, r0
900232d6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900232da:	fb00 fe06 	mul.w	lr, r0, r6
900232de:	0136      	lsls	r6, r6, #4
900232e0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900232e4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900232e8:	eba6 070e 	sub.w	r7, r6, lr
900232ec:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900232f0:	ea4f 6914 	mov.w	r9, r4, lsr #24
900232f4:	b280      	uxth	r0, r0
900232f6:	b2bf      	uxth	r7, r7
900232f8:	1a1b      	subs	r3, r3, r0
900232fa:	ea4f 6812 	mov.w	r8, r2, lsr #24
900232fe:	fb0a f607 	mul.w	r6, sl, r7
90023302:	b29b      	uxth	r3, r3
90023304:	fb0b 6603 	mla	r6, fp, r3, r6
90023308:	fb00 6609 	mla	r6, r0, r9, r6
9002330c:	fb0e 6608 	mla	r6, lr, r8, r6
90023310:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023314:	9600      	str	r6, [sp, #0]
90023316:	2e00      	cmp	r6, #0
90023318:	f000 80be 	beq.w	90023498 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9002331c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023320:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90023324:	9e02      	ldr	r6, [sp, #8]
90023326:	fb0b fc0c 	mul.w	ip, fp, ip
9002332a:	fb0b f505 	mul.w	r5, fp, r5
9002332e:	8836      	ldrh	r6, [r6, #0]
90023330:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023334:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023338:	9501      	str	r5, [sp, #4]
9002333a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
9002333e:	44dc      	add	ip, fp
90023340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023344:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90023348:	9503      	str	r5, [sp, #12]
9002334a:	9d01      	ldr	r5, [sp, #4]
9002334c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90023350:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023354:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90023358:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002335c:	fb0a fc0c 	mul.w	ip, sl, ip
90023360:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023364:	fb0a fa01 	mul.w	sl, sl, r1
90023368:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002336c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023370:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90023374:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023378:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002337c:	4465      	add	r5, ip
9002337e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023382:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90023386:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002338a:	fb09 fc0c 	mul.w	ip, r9, ip
9002338e:	0a2d      	lsrs	r5, r5, #8
90023390:	fb09 f904 	mul.w	r9, r9, r4
90023394:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023398:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002339c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900233a0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900233a4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900233a8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900233ac:	437d      	muls	r5, r7
900233ae:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900233b2:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900233b6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900233ba:	4461      	add	r1, ip
900233bc:	fb08 f404 	mul.w	r4, r8, r4
900233c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900233c4:	fb08 f802 	mul.w	r8, r8, r2
900233c8:	0a09      	lsrs	r1, r1, #8
900233ca:	0a22      	lsrs	r2, r4, #8
900233cc:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900233d0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900233d4:	fb07 f70a 	mul.w	r7, r7, sl
900233d8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900233dc:	4414      	add	r4, r2
900233de:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900233e2:	0a24      	lsrs	r4, r4, #8
900233e4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900233e8:	9a03      	ldr	r2, [sp, #12]
900233ea:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900233ee:	fb02 5503 	mla	r5, r2, r3, r5
900233f2:	ea4f 2818 	mov.w	r8, r8, lsr #8
900233f6:	9a00      	ldr	r2, [sp, #0]
900233f8:	fb04 540e 	mla	r4, r4, lr, r5
900233fc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90023400:	1235      	asrs	r5, r6, #8
90023402:	fb01 4100 	mla	r1, r1, r0, r4
90023406:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002340a:	0a09      	lsrs	r1, r1, #8
9002340c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90023410:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90023414:	fb03 7101 	mla	r1, r3, r1, r7
90023418:	fb0e 1e08 	mla	lr, lr, r8, r1
9002341c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90023420:	fb00 e101 	mla	r1, r0, r1, lr
90023424:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90023428:	b287      	uxth	r7, r0
9002342a:	0a09      	lsrs	r1, r1, #8
9002342c:	437a      	muls	r2, r7
9002342e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023432:	1c53      	adds	r3, r2, #1
90023434:	4321      	orrs	r1, r4
90023436:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002343a:	0c0a      	lsrs	r2, r1, #16
9002343c:	f3c1 2407 	ubfx	r4, r1, #8, #8
90023440:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90023444:	b2c8      	uxtb	r0, r1
90023446:	fb12 f207 	smulbb	r2, r2, r7
9002344a:	fb14 f407 	smulbb	r4, r4, r7
9002344e:	b2db      	uxtb	r3, r3
90023450:	fb10 f007 	smulbb	r0, r0, r7
90023454:	fb05 2503 	mla	r5, r5, r3, r2
90023458:	10f2      	asrs	r2, r6, #3
9002345a:	00f6      	lsls	r6, r6, #3
9002345c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023460:	b2ad      	uxth	r5, r5
90023462:	b2f6      	uxtb	r6, r6
90023464:	fb02 4203 	mla	r2, r2, r3, r4
90023468:	fb06 0303 	mla	r3, r6, r3, r0
9002346c:	b294      	uxth	r4, r2
9002346e:	b299      	uxth	r1, r3
90023470:	1c6b      	adds	r3, r5, #1
90023472:	1c62      	adds	r2, r4, #1
90023474:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023478:	1c4b      	adds	r3, r1, #1
9002347a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002347e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023482:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023486:	0952      	lsrs	r2, r2, #5
90023488:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002348c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023490:	432b      	orrs	r3, r5
90023492:	4313      	orrs	r3, r2
90023494:	9a02      	ldr	r2, [sp, #8]
90023496:	8013      	strh	r3, [r2, #0]
90023498:	b005      	add	sp, #20
9002349a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002349e:	2500      	movs	r5, #0
900234a0:	e6e9      	b.n	90023276 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900234a2:	2100      	movs	r1, #0
900234a4:	460d      	mov	r5, r1
900234a6:	e6f3      	b.n	90023290 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900234a8:	2100      	movs	r1, #0
900234aa:	e6f1      	b.n	90023290 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900234ac:	4631      	mov	r1, r6
900234ae:	e6ef      	b.n	90023290 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900234b0:	2400      	movs	r4, #0
900234b2:	e700      	b.n	900232b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
900234b4:	2200      	movs	r2, #0
900234b6:	4614      	mov	r4, r2
900234b8:	e70b      	b.n	900232d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900234ba:	4602      	mov	r2, r0
900234bc:	4604      	mov	r4, r0
900234be:	e708      	b.n	900232d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900234c0:	2200      	movs	r2, #0
900234c2:	e706      	b.n	900232d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900234c4:	4632      	mov	r2, r6
900234c6:	e704      	b.n	900232d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

900234c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900234c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900234cc:	b09f      	sub	sp, #124	@ 0x7c
900234ce:	921b      	str	r2, [sp, #108]	@ 0x6c
900234d0:	9309      	str	r3, [sp, #36]	@ 0x24
900234d2:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900234d4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
900234d8:	901d      	str	r0, [sp, #116]	@ 0x74
900234da:	931c      	str	r3, [sp, #112]	@ 0x70
900234dc:	6850      	ldr	r0, [r2, #4]
900234de:	9119      	str	r1, [sp, #100]	@ 0x64
900234e0:	6812      	ldr	r2, [r2, #0]
900234e2:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900234e4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
900234e8:	fb00 1303 	mla	r3, r0, r3, r1
900234ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900234f0:	930c      	str	r3, [sp, #48]	@ 0x30
900234f2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900234f4:	681b      	ldr	r3, [r3, #0]
900234f6:	9312      	str	r3, [sp, #72]	@ 0x48
900234f8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900234fa:	685e      	ldr	r6, [r3, #4]
900234fc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90023500:	3604      	adds	r6, #4
90023502:	930d      	str	r3, [sp, #52]	@ 0x34
90023504:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023506:	2b00      	cmp	r3, #0
90023508:	dc03      	bgt.n	90023512 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002350a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002350c:	2b00      	cmp	r3, #0
9002350e:	f340 8387 	ble.w	90023c20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023512:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023514:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023518:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002351c:	1e48      	subs	r0, r1, #1
9002351e:	1e57      	subs	r7, r2, #1
90023520:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023522:	2b00      	cmp	r3, #0
90023524:	f340 8194 	ble.w	90023850 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90023528:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002352a:	142b      	asrs	r3, r5, #16
9002352c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023530:	d406      	bmi.n	90023540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023532:	4584      	cmp	ip, r0
90023534:	da04      	bge.n	90023540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023536:	2b00      	cmp	r3, #0
90023538:	db02      	blt.n	90023540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002353a:	42bb      	cmp	r3, r7
9002353c:	f2c0 8189 	blt.w	90023852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023540:	f11c 0c01 	adds.w	ip, ip, #1
90023544:	f100 8177 	bmi.w	90023836 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023548:	4561      	cmp	r1, ip
9002354a:	f2c0 8174 	blt.w	90023836 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002354e:	3301      	adds	r3, #1
90023550:	f100 8171 	bmi.w	90023836 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023554:	429a      	cmp	r2, r3
90023556:	f2c0 816e 	blt.w	90023836 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002355a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002355c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9002355e:	931a      	str	r3, [sp, #104]	@ 0x68
90023560:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90023562:	2b00      	cmp	r3, #0
90023564:	f340 8193 	ble.w	9002388e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90023568:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002356a:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002356e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023572:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023576:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023578:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9002357c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002357e:	141b      	asrs	r3, r3, #16
90023580:	f100 81d6 	bmi.w	90023930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023584:	f100 38ff 	add.w	r8, r0, #4294967295
90023588:	4543      	cmp	r3, r8
9002358a:	f280 81d1 	bge.w	90023930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002358e:	f1bc 0f00 	cmp.w	ip, #0
90023592:	f2c0 81cd 	blt.w	90023930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023596:	f10e 38ff 	add.w	r8, lr, #4294967295
9002359a:	45c4      	cmp	ip, r8
9002359c:	f280 81c8 	bge.w	90023930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900235a0:	b200      	sxth	r0, r0
900235a2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900235a4:	fb0c 3300 	mla	r3, ip, r0, r3
900235a8:	eb04 0803 	add.w	r8, r4, r3
900235ac:	5ce3      	ldrb	r3, [r4, r3]
900235ae:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900235b2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900235b6:	2a00      	cmp	r2, #0
900235b8:	f000 81af 	beq.w	9002391a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900235bc:	f898 c001 	ldrb.w	ip, [r8, #1]
900235c0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900235c4:	940e      	str	r4, [sp, #56]	@ 0x38
900235c6:	0e24      	lsrs	r4, r4, #24
900235c8:	9415      	str	r4, [sp, #84]	@ 0x54
900235ca:	b179      	cbz	r1, 900235ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900235cc:	eb08 0c00 	add.w	ip, r8, r0
900235d0:	f818 0000 	ldrb.w	r0, [r8, r0]
900235d4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900235d8:	900a      	str	r0, [sp, #40]	@ 0x28
900235da:	0e00      	lsrs	r0, r0, #24
900235dc:	9013      	str	r0, [sp, #76]	@ 0x4c
900235de:	f89c 0001 	ldrb.w	r0, [ip, #1]
900235e2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900235e6:	900f      	str	r0, [sp, #60]	@ 0x3c
900235e8:	0e00      	lsrs	r0, r0, #24
900235ea:	9016      	str	r0, [sp, #88]	@ 0x58
900235ec:	b292      	uxth	r2, r2
900235ee:	9815      	ldr	r0, [sp, #84]	@ 0x54
900235f0:	b289      	uxth	r1, r1
900235f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900235f4:	fb02 f901 	mul.w	r9, r2, r1
900235f8:	0112      	lsls	r2, r2, #4
900235fa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900235fe:	eba2 0809 	sub.w	r8, r2, r9
90023602:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023606:	b289      	uxth	r1, r1
90023608:	fa1f f888 	uxth.w	r8, r8
9002360c:	1a52      	subs	r2, r2, r1
9002360e:	fb08 f000 	mul.w	r0, r8, r0
90023612:	b292      	uxth	r2, r2
90023614:	fb02 000e 	mla	r0, r2, lr, r0
90023618:	fb01 0004 	mla	r0, r1, r4, r0
9002361c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002361e:	fb09 0004 	mla	r0, r9, r4, r0
90023622:	f3c0 2007 	ubfx	r0, r0, #8, #8
90023626:	2800      	cmp	r0, #0
90023628:	f000 80fa 	beq.w	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002362c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023630:	d01b      	beq.n	9002366a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90023632:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023636:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002363a:	fb0e fa0a 	mul.w	sl, lr, sl
9002363e:	fb0e fe03 	mul.w	lr, lr, r3
90023642:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023646:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002364a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002364e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023652:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023656:	4453      	add	r3, sl
90023658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002365c:	0a1b      	lsrs	r3, r3, #8
9002365e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023662:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023666:	ea43 030c 	orr.w	r3, r3, ip
9002366a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002366c:	2cff      	cmp	r4, #255	@ 0xff
9002366e:	d021      	beq.n	900236b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023670:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023672:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023676:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023678:	fb04 fb0b 	mul.w	fp, r4, fp
9002367c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002367e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023682:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023684:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023688:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002368c:	fb04 fa0a 	mul.w	sl, r4, sl
90023690:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023694:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023698:	44de      	add	lr, fp
9002369a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002369e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900236a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900236a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900236aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900236ae:	ea4e 040a 	orr.w	r4, lr, sl
900236b2:	940e      	str	r4, [sp, #56]	@ 0x38
900236b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900236b6:	2cff      	cmp	r4, #255	@ 0xff
900236b8:	d021      	beq.n	900236fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900236ba:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900236bc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900236c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900236c2:	fb04 fb0b 	mul.w	fp, r4, fp
900236c6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900236c8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900236cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900236ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900236d2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900236d6:	fb04 fa0a 	mul.w	sl, r4, sl
900236da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900236de:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900236e2:	44de      	add	lr, fp
900236e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900236e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900236ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900236f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900236f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900236f8:	ea4e 040a 	orr.w	r4, lr, sl
900236fc:	940a      	str	r4, [sp, #40]	@ 0x28
900236fe:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023700:	2cff      	cmp	r4, #255	@ 0xff
90023702:	d021      	beq.n	90023748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023704:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023706:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002370a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002370c:	fb04 fb0b 	mul.w	fp, r4, fp
90023710:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023712:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023716:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023718:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002371c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023720:	fb04 fa0a 	mul.w	sl, r4, sl
90023724:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023728:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002372c:	44de      	add	lr, fp
9002372e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023732:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023736:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002373a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002373e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023742:	ea4e 040a 	orr.w	r4, lr, sl
90023746:	940f      	str	r4, [sp, #60]	@ 0x3c
90023748:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002374a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002374e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023752:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023756:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023758:	fb08 fc0c 	mul.w	ip, r8, ip
9002375c:	fb02 cc0e 	mla	ip, r2, lr, ip
90023760:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023764:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023766:	fb01 cc0e 	mla	ip, r1, lr, ip
9002376a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002376e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023770:	fb09 cc0e 	mla	ip, r9, lr, ip
90023774:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023778:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002377a:	fb08 f80e 	mul.w	r8, r8, lr
9002377e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023782:	fb02 8303 	mla	r3, r2, r3, r8
90023786:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023788:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002378c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023790:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023792:	fb01 330a 	mla	r3, r1, sl, r3
90023796:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
9002379a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002379c:	fb09 3901 	mla	r9, r9, r1, r3
900237a0:	883b      	ldrh	r3, [r7, #0]
900237a2:	4342      	muls	r2, r0
900237a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900237a8:	1c50      	adds	r0, r2, #1
900237aa:	1219      	asrs	r1, r3, #8
900237ac:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900237b0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900237b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900237b8:	ea4c 0c09 	orr.w	ip, ip, r9
900237bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900237c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
900237c4:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900237c8:	b2c0      	uxtb	r0, r0
900237ca:	fb12 f204 	smulbb	r2, r2, r4
900237ce:	fa5f fc8c 	uxtb.w	ip, ip
900237d2:	fb1e fe04 	smulbb	lr, lr, r4
900237d6:	fb01 2100 	mla	r1, r1, r0, r2
900237da:	10da      	asrs	r2, r3, #3
900237dc:	fb1c fc04 	smulbb	ip, ip, r4
900237e0:	00db      	lsls	r3, r3, #3
900237e2:	b289      	uxth	r1, r1
900237e4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900237e8:	b2db      	uxtb	r3, r3
900237ea:	fb02 e200 	mla	r2, r2, r0, lr
900237ee:	fb03 c300 	mla	r3, r3, r0, ip
900237f2:	b292      	uxth	r2, r2
900237f4:	fa1f fc83 	uxth.w	ip, r3
900237f8:	1c4b      	adds	r3, r1, #1
900237fa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900237fe:	f10c 0301 	add.w	r3, ip, #1
90023802:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023806:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002380a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002380e:	430b      	orrs	r3, r1
90023810:	1c51      	adds	r1, r2, #1
90023812:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023816:	0952      	lsrs	r2, r2, #5
90023818:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002381c:	4313      	orrs	r3, r2
9002381e:	803b      	strh	r3, [r7, #0]
90023820:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023822:	3702      	adds	r7, #2
90023824:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023826:	441a      	add	r2, r3
90023828:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002382a:	441d      	add	r5, r3
9002382c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
9002382e:	9229      	str	r2, [sp, #164]	@ 0xa4
90023830:	3b01      	subs	r3, #1
90023832:	931a      	str	r3, [sp, #104]	@ 0x68
90023834:	e694      	b.n	90023560 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90023836:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023838:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002383a:	441c      	add	r4, r3
9002383c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002383e:	441d      	add	r5, r3
90023840:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023842:	9429      	str	r4, [sp, #164]	@ 0xa4
90023844:	3b01      	subs	r3, #1
90023846:	9309      	str	r3, [sp, #36]	@ 0x24
90023848:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002384a:	3302      	adds	r3, #2
9002384c:	930c      	str	r3, [sp, #48]	@ 0x30
9002384e:	e667      	b.n	90023520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023850:	d024      	beq.n	9002389c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90023852:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023854:	982b      	ldr	r0, [sp, #172]	@ 0xac
90023856:	3b01      	subs	r3, #1
90023858:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002385a:	fb00 4003 	mla	r0, r0, r3, r4
9002385e:	1400      	asrs	r0, r0, #16
90023860:	f53f ae7b 	bmi.w	9002355a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023864:	3901      	subs	r1, #1
90023866:	4288      	cmp	r0, r1
90023868:	f6bf ae77 	bge.w	9002355a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002386c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
9002386e:	fb01 5303 	mla	r3, r1, r3, r5
90023872:	141b      	asrs	r3, r3, #16
90023874:	f53f ae71 	bmi.w	9002355a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023878:	3a01      	subs	r2, #1
9002387a:	4293      	cmp	r3, r2
9002387c:	f6bf ae6d 	bge.w	9002355a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023880:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023884:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90023888:	f1bb 0f00 	cmp.w	fp, #0
9002388c:	dc70      	bgt.n	90023970 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002388e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023890:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023894:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023896:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002389a:	930c      	str	r3, [sp, #48]	@ 0x30
9002389c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002389e:	2b00      	cmp	r3, #0
900238a0:	f340 81be 	ble.w	90023c20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900238a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900238a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900238aa:	ee30 0a04 	vadd.f32	s0, s0, s8
900238ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
900238b2:	eef0 6a62 	vmov.f32	s13, s5
900238b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900238ba:	ee31 1a05 	vadd.f32	s2, s2, s10
900238be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900238c2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
900238c6:	eef0 6a43 	vmov.f32	s13, s6
900238ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900238ce:	ee16 5a90 	vmov	r5, s13
900238d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900238d6:	ee61 7a27 	vmul.f32	s15, s2, s15
900238da:	ee77 2a62 	vsub.f32	s5, s14, s5
900238de:	ee37 3ac3 	vsub.f32	s6, s15, s6
900238e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900238e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900238ea:	ee12 2a90 	vmov	r2, s5
900238ee:	eef0 2a47 	vmov.f32	s5, s14
900238f2:	fb92 f3f3 	sdiv	r3, r2, r3
900238f6:	ee13 2a10 	vmov	r2, s6
900238fa:	932b      	str	r3, [sp, #172]	@ 0xac
900238fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900238fe:	eeb0 3a67 	vmov.f32	s6, s15
90023902:	fb92 f3f3 	sdiv	r3, r2, r3
90023906:	932c      	str	r3, [sp, #176]	@ 0xb0
90023908:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002390a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9002390c:	3b01      	subs	r3, #1
9002390e:	9319      	str	r3, [sp, #100]	@ 0x64
90023910:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023912:	bf08      	it	eq
90023914:	4613      	moveq	r3, r2
90023916:	9309      	str	r3, [sp, #36]	@ 0x24
90023918:	e5f4      	b.n	90023504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002391a:	2900      	cmp	r1, #0
9002391c:	f43f ae66 	beq.w	900235ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023920:	f818 0000 	ldrb.w	r0, [r8, r0]
90023924:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023928:	900a      	str	r0, [sp, #40]	@ 0x28
9002392a:	0e00      	lsrs	r0, r0, #24
9002392c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002392e:	e65d      	b.n	900235ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023930:	f113 0801 	adds.w	r8, r3, #1
90023934:	f53f af74 	bmi.w	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023938:	4540      	cmp	r0, r8
9002393a:	f6ff af71 	blt.w	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002393e:	f11c 0801 	adds.w	r8, ip, #1
90023942:	f53f af6d 	bmi.w	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023946:	45c6      	cmp	lr, r8
90023948:	f6ff af6a 	blt.w	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002394c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
9002394e:	b200      	sxth	r0, r0
90023950:	9302      	str	r3, [sp, #8]
90023952:	fa0f f38e 	sxth.w	r3, lr
90023956:	9000      	str	r0, [sp, #0]
90023958:	9301      	str	r3, [sp, #4]
9002395a:	4633      	mov	r3, r6
9002395c:	981d      	ldr	r0, [sp, #116]	@ 0x74
9002395e:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023962:	e9cd c203 	strd	ip, r2, [sp, #12]
90023966:	4639      	mov	r1, r7
90023968:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002396a:	f7ff fc63 	bl	90023234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
9002396e:	e757      	b.n	90023820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023970:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023972:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023976:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023978:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002397c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002397e:	1427      	asrs	r7, r4, #16
90023980:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023982:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023986:	142b      	asrs	r3, r5, #16
90023988:	fb01 7303 	mla	r3, r1, r3, r7
9002398c:	18e7      	adds	r7, r4, r3
9002398e:	5ce3      	ldrb	r3, [r4, r3]
90023990:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023994:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023998:	2a00      	cmp	r2, #0
9002399a:	f000 8137 	beq.w	90023c0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002399e:	f897 e001 	ldrb.w	lr, [r7, #1]
900239a2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900239a6:	9410      	str	r4, [sp, #64]	@ 0x40
900239a8:	0e24      	lsrs	r4, r4, #24
900239aa:	9417      	str	r4, [sp, #92]	@ 0x5c
900239ac:	b170      	cbz	r0, 900239cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900239ae:	eb07 0e01 	add.w	lr, r7, r1
900239b2:	5c79      	ldrb	r1, [r7, r1]
900239b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900239b8:	910b      	str	r1, [sp, #44]	@ 0x2c
900239ba:	0e09      	lsrs	r1, r1, #24
900239bc:	9114      	str	r1, [sp, #80]	@ 0x50
900239be:	f89e 1001 	ldrb.w	r1, [lr, #1]
900239c2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900239c6:	9111      	str	r1, [sp, #68]	@ 0x44
900239c8:	0e09      	lsrs	r1, r1, #24
900239ca:	9118      	str	r1, [sp, #96]	@ 0x60
900239cc:	b292      	uxth	r2, r2
900239ce:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900239d0:	b280      	uxth	r0, r0
900239d2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900239d4:	fb02 f800 	mul.w	r8, r2, r0
900239d8:	0112      	lsls	r2, r2, #4
900239da:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900239de:	eba2 0e08 	sub.w	lr, r2, r8
900239e2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900239e6:	b280      	uxth	r0, r0
900239e8:	fa1f fe8e 	uxth.w	lr, lr
900239ec:	1a12      	subs	r2, r2, r0
900239ee:	fb0e f101 	mul.w	r1, lr, r1
900239f2:	b292      	uxth	r2, r2
900239f4:	fb02 110c 	mla	r1, r2, ip, r1
900239f8:	fb00 1104 	mla	r1, r0, r4, r1
900239fc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900239fe:	fb08 1104 	mla	r1, r8, r4, r1
90023a02:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023a06:	2900      	cmp	r1, #0
90023a08:	f000 80f5 	beq.w	90023bf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023a0c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023a10:	d019      	beq.n	90023a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023a12:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023a16:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023a1a:	fb0c fa0a 	mul.w	sl, ip, sl
90023a1e:	fb0c fc03 	mul.w	ip, ip, r3
90023a22:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023a26:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023a2a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023a2e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023a32:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023a36:	4453      	add	r3, sl
90023a38:	0a3f      	lsrs	r7, r7, #8
90023a3a:	0a1b      	lsrs	r3, r3, #8
90023a3c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023a40:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023a44:	433b      	orrs	r3, r7
90023a46:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023a48:	2cff      	cmp	r4, #255	@ 0xff
90023a4a:	d020      	beq.n	90023a8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023a4c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023a4e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023a52:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023a54:	4367      	muls	r7, r4
90023a56:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023a58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023a5c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023a60:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023a62:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023a66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023a6a:	fb04 fa0a 	mul.w	sl, r4, sl
90023a6e:	44bc      	add	ip, r7
90023a70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023a74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023a78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023a7c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023a80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023a84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023a88:	ea4c 040a 	orr.w	r4, ip, sl
90023a8c:	9410      	str	r4, [sp, #64]	@ 0x40
90023a8e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023a90:	2cff      	cmp	r4, #255	@ 0xff
90023a92:	d020      	beq.n	90023ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023a94:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023a96:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023a9a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023a9c:	4367      	muls	r7, r4
90023a9e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023aa0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023aa4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023aa8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023aaa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023aae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023ab2:	fb04 fa0a 	mul.w	sl, r4, sl
90023ab6:	44bc      	add	ip, r7
90023ab8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023abc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ac0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023ac4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023ac8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023acc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ad0:	ea4c 040a 	orr.w	r4, ip, sl
90023ad4:	940b      	str	r4, [sp, #44]	@ 0x2c
90023ad6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023ad8:	2cff      	cmp	r4, #255	@ 0xff
90023ada:	d020      	beq.n	90023b1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023adc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023ade:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023ae2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023ae4:	4367      	muls	r7, r4
90023ae6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023ae8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023aec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023af0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023af2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023af6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023afa:	fb04 fa0a 	mul.w	sl, r4, sl
90023afe:	44bc      	add	ip, r7
90023b00:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023b04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023b0c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023b10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023b18:	ea4c 040a 	orr.w	r4, ip, sl
90023b1c:	9411      	str	r4, [sp, #68]	@ 0x44
90023b1e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023b20:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90023b24:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023b28:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023b2c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023b2e:	fb0e f707 	mul.w	r7, lr, r7
90023b32:	fb02 770c 	mla	r7, r2, ip, r7
90023b36:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023b3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023b3c:	fb00 770c 	mla	r7, r0, ip, r7
90023b40:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023b44:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023b46:	fb08 770c 	mla	r7, r8, ip, r7
90023b4a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90023b4e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023b50:	fb0e fe0c 	mul.w	lr, lr, ip
90023b54:	0a3f      	lsrs	r7, r7, #8
90023b56:	fb02 e303 	mla	r3, r2, r3, lr
90023b5a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023b5c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90023b60:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023b64:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90023b66:	fb00 330a 	mla	r3, r0, sl, r3
90023b6a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90023b6e:	f8b9 0000 	ldrh.w	r0, [r9]
90023b72:	fb08 3c0c 	mla	ip, r8, ip, r3
90023b76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023b78:	1202      	asrs	r2, r0, #8
90023b7a:	434b      	muls	r3, r1
90023b7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b80:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023b84:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023b88:	1c59      	adds	r1, r3, #1
90023b8a:	ea47 070c 	orr.w	r7, r7, ip
90023b8e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023b92:	0c3b      	lsrs	r3, r7, #16
90023b94:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023b98:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023b9c:	b2ff      	uxtb	r7, r7
90023b9e:	fb13 f304 	smulbb	r3, r3, r4
90023ba2:	b2c9      	uxtb	r1, r1
90023ba4:	fb1c fc04 	smulbb	ip, ip, r4
90023ba8:	fb02 3201 	mla	r2, r2, r1, r3
90023bac:	10c3      	asrs	r3, r0, #3
90023bae:	fb17 f704 	smulbb	r7, r7, r4
90023bb2:	00c0      	lsls	r0, r0, #3
90023bb4:	b292      	uxth	r2, r2
90023bb6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023bba:	b2c0      	uxtb	r0, r0
90023bbc:	fb03 c301 	mla	r3, r3, r1, ip
90023bc0:	f102 0c01 	add.w	ip, r2, #1
90023bc4:	fb00 7001 	mla	r0, r0, r1, r7
90023bc8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90023bcc:	b280      	uxth	r0, r0
90023bce:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90023bd2:	b29b      	uxth	r3, r3
90023bd4:	1c42      	adds	r2, r0, #1
90023bd6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023bda:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023bde:	ea42 020c 	orr.w	r2, r2, ip
90023be2:	f103 0c01 	add.w	ip, r3, #1
90023be6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023bea:	095b      	lsrs	r3, r3, #5
90023bec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023bf0:	431a      	orrs	r2, r3
90023bf2:	f8a9 2000 	strh.w	r2, [r9]
90023bf6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023bf8:	f109 0902 	add.w	r9, r9, #2
90023bfc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023bfe:	f10b 3bff 	add.w	fp, fp, #4294967295
90023c02:	441a      	add	r2, r3
90023c04:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023c06:	9229      	str	r2, [sp, #164]	@ 0xa4
90023c08:	441d      	add	r5, r3
90023c0a:	e63d      	b.n	90023888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023c0c:	2800      	cmp	r0, #0
90023c0e:	f43f aedd 	beq.w	900239cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023c12:	5c79      	ldrb	r1, [r7, r1]
90023c14:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023c18:	910b      	str	r1, [sp, #44]	@ 0x2c
90023c1a:	0e09      	lsrs	r1, r1, #24
90023c1c:	9114      	str	r1, [sp, #80]	@ 0x50
90023c1e:	e6d5      	b.n	900239cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023c20:	b01f      	add	sp, #124	@ 0x7c
90023c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023c26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90023c26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023c2a:	b089      	sub	sp, #36	@ 0x24
90023c2c:	9101      	str	r1, [sp, #4]
90023c2e:	9801      	ldr	r0, [sp, #4]
90023c30:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90023c34:	8800      	ldrh	r0, [r0, #0]
90023c36:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90023c3a:	1206      	asrs	r6, r0, #8
90023c3c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90023c40:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90023c44:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90023c48:	9602      	str	r6, [sp, #8]
90023c4a:	10c6      	asrs	r6, r0, #3
90023c4c:	00c0      	lsls	r0, r0, #3
90023c4e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90023c52:	b2c0      	uxtb	r0, r0
90023c54:	9603      	str	r6, [sp, #12]
90023c56:	9004      	str	r0, [sp, #16]
90023c58:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90023c5c:	fb07 100c 	mla	r0, r7, ip, r1
90023c60:	2f00      	cmp	r7, #0
90023c62:	eb02 0e00 	add.w	lr, r2, r0
90023c66:	f2c0 810a 	blt.w	90023e7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023c6a:	45b8      	cmp	r8, r7
90023c6c:	f340 8107 	ble.w	90023e7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023c70:	2900      	cmp	r1, #0
90023c72:	f2c0 8102 	blt.w	90023e7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023c76:	458c      	cmp	ip, r1
90023c78:	f340 80ff 	ble.w	90023e7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023c7c:	5c12      	ldrb	r2, [r2, r0]
90023c7e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90023c82:	1c4a      	adds	r2, r1, #1
90023c84:	f100 80fe 	bmi.w	90023e84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023c88:	4594      	cmp	ip, r2
90023c8a:	f340 80fb 	ble.w	90023e84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023c8e:	2d00      	cmp	r5, #0
90023c90:	f000 80fa 	beq.w	90023e88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90023c94:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023c98:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90023c9c:	3701      	adds	r7, #1
90023c9e:	f100 80f7 	bmi.w	90023e90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023ca2:	45b8      	cmp	r8, r7
90023ca4:	f340 80f4 	ble.w	90023e90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023ca8:	2c00      	cmp	r4, #0
90023caa:	f000 80f4 	beq.w	90023e96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90023cae:	2900      	cmp	r1, #0
90023cb0:	eb0e 020c 	add.w	r2, lr, ip
90023cb4:	f2c0 80ea 	blt.w	90023e8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023cb8:	458c      	cmp	ip, r1
90023cba:	f340 80e7 	ble.w	90023e8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023cbe:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023cc2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90023cc6:	3101      	adds	r1, #1
90023cc8:	f100 80e8 	bmi.w	90023e9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023ccc:	458c      	cmp	ip, r1
90023cce:	f340 80e5 	ble.w	90023e9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023cd2:	2d00      	cmp	r5, #0
90023cd4:	f000 80e4 	beq.w	90023ea0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90023cd8:	7852      	ldrb	r2, [r2, #1]
90023cda:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023cde:	0e0b      	lsrs	r3, r1, #24
90023ce0:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90023ce4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90023ce8:	9300      	str	r3, [sp, #0]
90023cea:	b2a4      	uxth	r4, r4
90023cec:	b2ab      	uxth	r3, r5
90023cee:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90023cf2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90023cf6:	fb03 f904 	mul.w	r9, r3, r4
90023cfa:	011b      	lsls	r3, r3, #4
90023cfc:	fb0a f505 	mul.w	r5, sl, r5
90023d00:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023d04:	eba3 0e09 	sub.w	lr, r3, r9
90023d08:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90023d0c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90023d10:	0a28      	lsrs	r0, r5, #8
90023d12:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90023d16:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023d1a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023d1e:	fb0a f303 	mul.w	r3, sl, r3
90023d22:	fb08 f707 	mul.w	r7, r8, r7
90023d26:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90023d2a:	4405      	add	r5, r0
90023d2c:	fb08 fc0c 	mul.w	ip, r8, ip
90023d30:	b2a4      	uxth	r4, r4
90023d32:	0a2d      	lsrs	r5, r5, #8
90023d34:	fa1f fe8e 	uxth.w	lr, lr
90023d38:	1b12      	subs	r2, r2, r4
90023d3a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90023d3e:	b292      	uxth	r2, r2
90023d40:	9005      	str	r0, [sp, #20]
90023d42:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90023d46:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023d4a:	ea4f 201c 	mov.w	r0, ip, lsr #8
90023d4e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023d52:	0a1b      	lsrs	r3, r3, #8
90023d54:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023d58:	9306      	str	r3, [sp, #24]
90023d5a:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90023d5e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023d62:	4460      	add	r0, ip
90023d64:	fb0b f303 	mul.w	r3, fp, r3
90023d68:	fb0b f606 	mul.w	r6, fp, r6
90023d6c:	0a00      	lsrs	r0, r0, #8
90023d6e:	0a1d      	lsrs	r5, r3, #8
90023d70:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90023d74:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023d78:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023d7c:	441d      	add	r5, r3
90023d7e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90023d82:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023d86:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90023d8a:	0a2d      	lsrs	r5, r5, #8
90023d8c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023d90:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90023d94:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023d98:	0a36      	lsrs	r6, r6, #8
90023d9a:	0a1b      	lsrs	r3, r3, #8
90023d9c:	fb05 f50e 	mul.w	r5, r5, lr
90023da0:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023da4:	9307      	str	r3, [sp, #28]
90023da6:	0e0b      	lsrs	r3, r1, #24
90023da8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023dac:	fb0e f606 	mul.w	r6, lr, r6
90023db0:	435f      	muls	r7, r3
90023db2:	4359      	muls	r1, r3
90023db4:	9b05      	ldr	r3, [sp, #20]
90023db6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023dba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023dbe:	fb03 5502 	mla	r5, r3, r2, r5
90023dc2:	9b06      	ldr	r3, [sp, #24]
90023dc4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023dc8:	fb0e fe0b 	mul.w	lr, lr, fp
90023dcc:	44bc      	add	ip, r7
90023dce:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023dd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023dd6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023dda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023dde:	0a09      	lsrs	r1, r1, #8
90023de0:	fb0c 5509 	mla	r5, ip, r9, r5
90023de4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023de8:	fb00 5504 	mla	r5, r0, r4, r5
90023dec:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023df0:	9b07      	ldr	r3, [sp, #28]
90023df2:	fb02 6000 	mla	r0, r2, r0, r6
90023df6:	0a2d      	lsrs	r5, r5, #8
90023df8:	fb02 e20a 	mla	r2, r2, sl, lr
90023dfc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023e00:	fb09 0001 	mla	r0, r9, r1, r0
90023e04:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023e08:	fb04 0003 	mla	r0, r4, r3, r0
90023e0c:	9b00      	ldr	r3, [sp, #0]
90023e0e:	fb04 2408 	mla	r4, r4, r8, r2
90023e12:	9a04      	ldr	r2, [sp, #16]
90023e14:	0a00      	lsrs	r0, r0, #8
90023e16:	fb09 4903 	mla	r9, r9, r3, r4
90023e1a:	9b02      	ldr	r3, [sp, #8]
90023e1c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90023e20:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023e24:	4305      	orrs	r5, r0
90023e26:	fa5f f989 	uxtb.w	r9, r9
90023e2a:	fb03 f109 	mul.w	r1, r3, r9
90023e2e:	9b03      	ldr	r3, [sp, #12]
90023e30:	fb03 f309 	mul.w	r3, r3, r9
90023e34:	fb02 f909 	mul.w	r9, r2, r9
90023e38:	1c4a      	adds	r2, r1, #1
90023e3a:	1c58      	adds	r0, r3, #1
90023e3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023e40:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023e44:	0c2a      	lsrs	r2, r5, #16
90023e46:	0a2b      	lsrs	r3, r5, #8
90023e48:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90023e4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023e50:	0212      	lsls	r2, r2, #8
90023e52:	00db      	lsls	r3, r3, #3
90023e54:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90023e58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023e5c:	4313      	orrs	r3, r2
90023e5e:	f109 0201 	add.w	r2, r9, #1
90023e62:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023e66:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90023e6a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90023e6e:	431d      	orrs	r5, r3
90023e70:	9b01      	ldr	r3, [sp, #4]
90023e72:	801d      	strh	r5, [r3, #0]
90023e74:	b009      	add	sp, #36	@ 0x24
90023e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023e7a:	2000      	movs	r0, #0
90023e7c:	e701      	b.n	90023c82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90023e7e:	2600      	movs	r6, #0
90023e80:	4630      	mov	r0, r6
90023e82:	e70b      	b.n	90023c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023e84:	2600      	movs	r6, #0
90023e86:	e709      	b.n	90023c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023e88:	462e      	mov	r6, r5
90023e8a:	e707      	b.n	90023c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023e8c:	2700      	movs	r7, #0
90023e8e:	e71a      	b.n	90023cc6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023e90:	2100      	movs	r1, #0
90023e92:	460f      	mov	r7, r1
90023e94:	e723      	b.n	90023cde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023e96:	4621      	mov	r1, r4
90023e98:	4627      	mov	r7, r4
90023e9a:	e720      	b.n	90023cde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023e9c:	2100      	movs	r1, #0
90023e9e:	e71e      	b.n	90023cde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023ea0:	4629      	mov	r1, r5
90023ea2:	e71c      	b.n	90023cde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023ea4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ea8:	b09b      	sub	sp, #108	@ 0x6c
90023eaa:	9218      	str	r2, [sp, #96]	@ 0x60
90023eac:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023eae:	9019      	str	r0, [sp, #100]	@ 0x64
90023eb0:	9116      	str	r1, [sp, #88]	@ 0x58
90023eb2:	6850      	ldr	r0, [r2, #4]
90023eb4:	9307      	str	r3, [sp, #28]
90023eb6:	6812      	ldr	r2, [r2, #0]
90023eb8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90023eba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90023ebe:	fb00 1303 	mla	r3, r0, r3, r1
90023ec2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023ec6:	930a      	str	r3, [sp, #40]	@ 0x28
90023ec8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023eca:	681b      	ldr	r3, [r3, #0]
90023ecc:	930f      	str	r3, [sp, #60]	@ 0x3c
90023ece:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023ed0:	685e      	ldr	r6, [r3, #4]
90023ed2:	3604      	adds	r6, #4
90023ed4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023ed6:	2b00      	cmp	r3, #0
90023ed8:	dc03      	bgt.n	90023ee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023eda:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023edc:	2b00      	cmp	r3, #0
90023ede:	f340 8373 	ble.w	900245c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023ee2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023ee4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023ee8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023eec:	1e48      	subs	r0, r1, #1
90023eee:	1e57      	subs	r7, r2, #1
90023ef0:	9b07      	ldr	r3, [sp, #28]
90023ef2:	2b00      	cmp	r3, #0
90023ef4:	f340 818f 	ble.w	90024216 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023ef8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023efa:	142b      	asrs	r3, r5, #16
90023efc:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023f00:	d406      	bmi.n	90023f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f02:	4584      	cmp	ip, r0
90023f04:	da04      	bge.n	90023f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f06:	2b00      	cmp	r3, #0
90023f08:	db02      	blt.n	90023f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f0a:	42bb      	cmp	r3, r7
90023f0c:	f2c0 8184 	blt.w	90024218 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023f10:	f11c 0c01 	adds.w	ip, ip, #1
90023f14:	f100 8172 	bmi.w	900241fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023f18:	4561      	cmp	r1, ip
90023f1a:	f2c0 816f 	blt.w	900241fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023f1e:	3301      	adds	r3, #1
90023f20:	f100 816c 	bmi.w	900241fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023f24:	429a      	cmp	r2, r3
90023f26:	f2c0 8169 	blt.w	900241fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023f2a:	9b07      	ldr	r3, [sp, #28]
90023f2c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90023f2e:	9317      	str	r3, [sp, #92]	@ 0x5c
90023f30:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023f32:	2b00      	cmp	r3, #0
90023f34:	f340 818e 	ble.w	90024254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023f38:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023f3a:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023f3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023f42:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023f46:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023f48:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023f4c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023f4e:	141b      	asrs	r3, r3, #16
90023f50:	f100 81d1 	bmi.w	900242f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023f54:	f101 38ff 	add.w	r8, r1, #4294967295
90023f58:	4543      	cmp	r3, r8
90023f5a:	f280 81cc 	bge.w	900242f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023f5e:	f1bc 0f00 	cmp.w	ip, #0
90023f62:	f2c0 81c8 	blt.w	900242f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023f66:	f10e 38ff 	add.w	r8, lr, #4294967295
90023f6a:	45c4      	cmp	ip, r8
90023f6c:	f280 81c3 	bge.w	900242f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023f70:	b209      	sxth	r1, r1
90023f72:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023f74:	fb0c 3301 	mla	r3, ip, r1, r3
90023f78:	eb04 0803 	add.w	r8, r4, r3
90023f7c:	5ce3      	ldrb	r3, [r4, r3]
90023f7e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023f82:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023f86:	2a00      	cmp	r2, #0
90023f88:	f000 81aa 	beq.w	900242e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90023f8c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023f90:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023f94:	940b      	str	r4, [sp, #44]	@ 0x2c
90023f96:	0e24      	lsrs	r4, r4, #24
90023f98:	9412      	str	r4, [sp, #72]	@ 0x48
90023f9a:	b178      	cbz	r0, 90023fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023f9c:	eb08 0c01 	add.w	ip, r8, r1
90023fa0:	f818 1001 	ldrb.w	r1, [r8, r1]
90023fa4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023fa8:	9108      	str	r1, [sp, #32]
90023faa:	0e09      	lsrs	r1, r1, #24
90023fac:	9110      	str	r1, [sp, #64]	@ 0x40
90023fae:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023fb2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023fb6:	910c      	str	r1, [sp, #48]	@ 0x30
90023fb8:	0e09      	lsrs	r1, r1, #24
90023fba:	9113      	str	r1, [sp, #76]	@ 0x4c
90023fbc:	b292      	uxth	r2, r2
90023fbe:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023fc0:	b280      	uxth	r0, r0
90023fc2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023fc4:	fb02 f900 	mul.w	r9, r2, r0
90023fc8:	0112      	lsls	r2, r2, #4
90023fca:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023fce:	eba2 0809 	sub.w	r8, r2, r9
90023fd2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023fd6:	b280      	uxth	r0, r0
90023fd8:	fa1f f888 	uxth.w	r8, r8
90023fdc:	1a12      	subs	r2, r2, r0
90023fde:	fb08 f101 	mul.w	r1, r8, r1
90023fe2:	b292      	uxth	r2, r2
90023fe4:	fb02 110e 	mla	r1, r2, lr, r1
90023fe8:	fb00 1104 	mla	r1, r0, r4, r1
90023fec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023fee:	fb09 1104 	mla	r1, r9, r4, r1
90023ff2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023ff6:	2900      	cmp	r1, #0
90023ff8:	f000 80f5 	beq.w	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023ffc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024000:	d01b      	beq.n	9002403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024002:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024006:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002400a:	fb0e fa0a 	mul.w	sl, lr, sl
9002400e:	fb0e fe03 	mul.w	lr, lr, r3
90024012:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024016:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002401a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002401e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024022:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024026:	4453      	add	r3, sl
90024028:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002402c:	0a1b      	lsrs	r3, r3, #8
9002402e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024032:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024036:	ea43 030c 	orr.w	r3, r3, ip
9002403a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002403c:	2cff      	cmp	r4, #255	@ 0xff
9002403e:	d021      	beq.n	90024084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90024040:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024042:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024046:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024048:	fb04 fb0b 	mul.w	fp, r4, fp
9002404c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002404e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024052:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024054:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024058:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002405c:	fb04 fa0a 	mul.w	sl, r4, sl
90024060:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024064:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024068:	44de      	add	lr, fp
9002406a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002406e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024072:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024076:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002407a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002407e:	ea4e 040a 	orr.w	r4, lr, sl
90024082:	940b      	str	r4, [sp, #44]	@ 0x2c
90024084:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024086:	2cff      	cmp	r4, #255	@ 0xff
90024088:	d021      	beq.n	900240ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002408a:	9c08      	ldr	r4, [sp, #32]
9002408c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024090:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024092:	fb04 fb0b 	mul.w	fp, r4, fp
90024096:	9c08      	ldr	r4, [sp, #32]
90024098:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002409c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002409e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900240a2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900240a6:	fb04 fa0a 	mul.w	sl, r4, sl
900240aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900240ae:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900240b2:	44de      	add	lr, fp
900240b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900240b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900240bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900240c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900240c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900240c8:	ea4e 040a 	orr.w	r4, lr, sl
900240cc:	9408      	str	r4, [sp, #32]
900240ce:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900240d0:	2cff      	cmp	r4, #255	@ 0xff
900240d2:	d021      	beq.n	90024118 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
900240d4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900240d6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900240da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900240dc:	fb04 fb0b 	mul.w	fp, r4, fp
900240e0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900240e2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900240e6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900240e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900240ec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900240f0:	fb04 fa0a 	mul.w	sl, r4, sl
900240f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900240f8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900240fc:	44de      	add	lr, fp
900240fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024102:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024106:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002410a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002410e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024112:	ea4e 040a 	orr.w	r4, lr, sl
90024116:	940c      	str	r4, [sp, #48]	@ 0x30
90024118:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002411a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002411e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024122:	43c9      	mvns	r1, r1
90024124:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024128:	9c08      	ldr	r4, [sp, #32]
9002412a:	fb08 fc0c 	mul.w	ip, r8, ip
9002412e:	fb02 cc0e 	mla	ip, r2, lr, ip
90024132:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024136:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024138:	fb00 cc0e 	mla	ip, r0, lr, ip
9002413c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024140:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024142:	fb09 cc0e 	mla	ip, r9, lr, ip
90024146:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
9002414a:	fb08 f80e 	mul.w	r8, r8, lr
9002414e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024152:	fa5f fe81 	uxtb.w	lr, r1
90024156:	fb02 8303 	mla	r3, r2, r3, r8
9002415a:	9a08      	ldr	r2, [sp, #32]
9002415c:	f8b7 8000 	ldrh.w	r8, [r7]
90024160:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024164:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90024168:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002416a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
9002416e:	fb00 330a 	mla	r3, r0, sl, r3
90024172:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90024176:	ea4f 2228 	mov.w	r2, r8, asr #8
9002417a:	fb09 3900 	mla	r9, r9, r0, r3
9002417e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90024182:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90024186:	b2c9      	uxtb	r1, r1
90024188:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002418c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024190:	fb02 f20e 	mul.w	r2, r2, lr
90024194:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024198:	fb00 f00e 	mul.w	r0, r0, lr
9002419c:	1c53      	adds	r3, r2, #1
9002419e:	fb01 f10e 	mul.w	r1, r1, lr
900241a2:	ea4c 0c09 	orr.w	ip, ip, r9
900241a6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
900241aa:	ea4f 431c 	mov.w	r3, ip, lsr #16
900241ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900241b2:	4a60      	ldr	r2, [pc, #384]	@ (90024334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
900241b4:	b2db      	uxtb	r3, r3
900241b6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
900241ba:	1c43      	adds	r3, r0, #1
900241bc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900241c0:	ea4f 231c 	mov.w	r3, ip, lsr #8
900241c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900241c8:	00db      	lsls	r3, r3, #3
900241ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900241ce:	4313      	orrs	r3, r2
900241d0:	1c4a      	adds	r2, r1, #1
900241d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900241d6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900241da:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900241de:	ea4c 0c03 	orr.w	ip, ip, r3
900241e2:	f8a7 c000 	strh.w	ip, [r7]
900241e6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900241e8:	3702      	adds	r7, #2
900241ea:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900241ec:	441a      	add	r2, r3
900241ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900241f0:	441d      	add	r5, r3
900241f2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900241f4:	9225      	str	r2, [sp, #148]	@ 0x94
900241f6:	3b01      	subs	r3, #1
900241f8:	9317      	str	r3, [sp, #92]	@ 0x5c
900241fa:	e699      	b.n	90023f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900241fc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900241fe:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024200:	441c      	add	r4, r3
90024202:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024204:	441d      	add	r5, r3
90024206:	9b07      	ldr	r3, [sp, #28]
90024208:	9425      	str	r4, [sp, #148]	@ 0x94
9002420a:	3b01      	subs	r3, #1
9002420c:	9307      	str	r3, [sp, #28]
9002420e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024210:	3302      	adds	r3, #2
90024212:	930a      	str	r3, [sp, #40]	@ 0x28
90024214:	e66c      	b.n	90023ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90024216:	d024      	beq.n	90024262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90024218:	9b07      	ldr	r3, [sp, #28]
9002421a:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002421c:	3b01      	subs	r3, #1
9002421e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024220:	fb00 4003 	mla	r0, r0, r3, r4
90024224:	1400      	asrs	r0, r0, #16
90024226:	f53f ae80 	bmi.w	90023f2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002422a:	3901      	subs	r1, #1
9002422c:	4288      	cmp	r0, r1
9002422e:	f6bf ae7c 	bge.w	90023f2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024232:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90024234:	fb01 5303 	mla	r3, r1, r3, r5
90024238:	141b      	asrs	r3, r3, #16
9002423a:	f53f ae76 	bmi.w	90023f2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002423e:	3a01      	subs	r2, #1
90024240:	4293      	cmp	r3, r2
90024242:	f6bf ae72 	bge.w	90023f2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024246:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002424a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
9002424e:	f1bb 0f00 	cmp.w	fp, #0
90024252:	dc71      	bgt.n	90024338 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024254:	9b07      	ldr	r3, [sp, #28]
90024256:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002425a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002425c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024260:	930a      	str	r3, [sp, #40]	@ 0x28
90024262:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024264:	2b00      	cmp	r3, #0
90024266:	f340 81af 	ble.w	900245c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002426a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002426e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024270:	ee30 0a04 	vadd.f32	s0, s0, s8
90024274:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024278:	eef0 6a62 	vmov.f32	s13, s5
9002427c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024280:	ee31 1a05 	vadd.f32	s2, s2, s10
90024284:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024288:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
9002428c:	eef0 6a43 	vmov.f32	s13, s6
90024290:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024294:	ee16 5a90 	vmov	r5, s13
90024298:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002429c:	ee61 7a27 	vmul.f32	s15, s2, s15
900242a0:	ee77 2a62 	vsub.f32	s5, s14, s5
900242a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900242a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900242ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900242b0:	ee12 2a90 	vmov	r2, s5
900242b4:	eef0 2a47 	vmov.f32	s5, s14
900242b8:	fb92 f3f3 	sdiv	r3, r2, r3
900242bc:	ee13 2a10 	vmov	r2, s6
900242c0:	9327      	str	r3, [sp, #156]	@ 0x9c
900242c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900242c4:	eeb0 3a67 	vmov.f32	s6, s15
900242c8:	fb92 f3f3 	sdiv	r3, r2, r3
900242cc:	9328      	str	r3, [sp, #160]	@ 0xa0
900242ce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900242d0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900242d2:	3b01      	subs	r3, #1
900242d4:	9316      	str	r3, [sp, #88]	@ 0x58
900242d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900242d8:	bf08      	it	eq
900242da:	4613      	moveq	r3, r2
900242dc:	9307      	str	r3, [sp, #28]
900242de:	e5f9      	b.n	90023ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900242e0:	2800      	cmp	r0, #0
900242e2:	f43f ae6b 	beq.w	90023fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900242e6:	f818 1001 	ldrb.w	r1, [r8, r1]
900242ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900242ee:	9108      	str	r1, [sp, #32]
900242f0:	0e09      	lsrs	r1, r1, #24
900242f2:	9110      	str	r1, [sp, #64]	@ 0x40
900242f4:	e662      	b.n	90023fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900242f6:	f113 0801 	adds.w	r8, r3, #1
900242fa:	f53f af74 	bmi.w	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900242fe:	4541      	cmp	r1, r8
90024300:	f6ff af71 	blt.w	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024304:	f11c 0801 	adds.w	r8, ip, #1
90024308:	f53f af6d 	bmi.w	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002430c:	45c6      	cmp	lr, r8
9002430e:	f6ff af6a 	blt.w	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024312:	b209      	sxth	r1, r1
90024314:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90024318:	fa0f f38e 	sxth.w	r3, lr
9002431c:	9100      	str	r1, [sp, #0]
9002431e:	4639      	mov	r1, r7
90024320:	9301      	str	r3, [sp, #4]
90024322:	4633      	mov	r3, r6
90024324:	e9cd 2004 	strd	r2, r0, [sp, #16]
90024328:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002432a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9002432c:	f7ff fc7b 	bl	90023c26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90024330:	e759      	b.n	900241e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024332:	bf00      	nop
90024334:	fffff800 	.word	0xfffff800
90024338:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002433a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002433e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024340:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024344:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024346:	1427      	asrs	r7, r4, #16
90024348:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002434a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002434e:	142b      	asrs	r3, r5, #16
90024350:	fb01 7303 	mla	r3, r1, r3, r7
90024354:	18e7      	adds	r7, r4, r3
90024356:	5ce3      	ldrb	r3, [r4, r3]
90024358:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002435c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024360:	2a00      	cmp	r2, #0
90024362:	f000 8127 	beq.w	900245b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90024366:	f897 e001 	ldrb.w	lr, [r7, #1]
9002436a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002436e:	940d      	str	r4, [sp, #52]	@ 0x34
90024370:	0e24      	lsrs	r4, r4, #24
90024372:	9414      	str	r4, [sp, #80]	@ 0x50
90024374:	b170      	cbz	r0, 90024394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024376:	eb07 0e01 	add.w	lr, r7, r1
9002437a:	5c79      	ldrb	r1, [r7, r1]
9002437c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024380:	9109      	str	r1, [sp, #36]	@ 0x24
90024382:	0e09      	lsrs	r1, r1, #24
90024384:	9111      	str	r1, [sp, #68]	@ 0x44
90024386:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002438a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002438e:	910e      	str	r1, [sp, #56]	@ 0x38
90024390:	0e09      	lsrs	r1, r1, #24
90024392:	9115      	str	r1, [sp, #84]	@ 0x54
90024394:	b292      	uxth	r2, r2
90024396:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024398:	b280      	uxth	r0, r0
9002439a:	fb02 f800 	mul.w	r8, r2, r0
9002439e:	0112      	lsls	r2, r2, #4
900243a0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900243a4:	eba2 0e08 	sub.w	lr, r2, r8
900243a8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
900243ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900243ae:	b280      	uxth	r0, r0
900243b0:	fa1f fe8e 	uxth.w	lr, lr
900243b4:	1a09      	subs	r1, r1, r0
900243b6:	fb0e f202 	mul.w	r2, lr, r2
900243ba:	b289      	uxth	r1, r1
900243bc:	fb01 220c 	mla	r2, r1, ip, r2
900243c0:	fb00 2204 	mla	r2, r0, r4, r2
900243c4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900243c6:	fb08 2204 	mla	r2, r8, r4, r2
900243ca:	f3c2 2207 	ubfx	r2, r2, #8, #8
900243ce:	2a00      	cmp	r2, #0
900243d0:	f000 80e5 	beq.w	9002459e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
900243d4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900243d8:	d019      	beq.n	9002440e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
900243da:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900243de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900243e2:	fb0c fa0a 	mul.w	sl, ip, sl
900243e6:	fb0c fc03 	mul.w	ip, ip, r3
900243ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
900243ee:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900243f2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900243f6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900243fa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900243fe:	4453      	add	r3, sl
90024400:	0a3f      	lsrs	r7, r7, #8
90024402:	0a1b      	lsrs	r3, r3, #8
90024404:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024408:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002440c:	433b      	orrs	r3, r7
9002440e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024410:	2cff      	cmp	r4, #255	@ 0xff
90024412:	d020      	beq.n	90024456 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90024414:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024416:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002441a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002441c:	4367      	muls	r7, r4
9002441e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024420:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024424:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024428:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002442a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002442e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024432:	fb04 fa0a 	mul.w	sl, r4, sl
90024436:	44bc      	add	ip, r7
90024438:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002443c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024440:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024444:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002444c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024450:	ea4c 040a 	orr.w	r4, ip, sl
90024454:	940d      	str	r4, [sp, #52]	@ 0x34
90024456:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024458:	2cff      	cmp	r4, #255	@ 0xff
9002445a:	d020      	beq.n	9002449e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
9002445c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002445e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024462:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024464:	4367      	muls	r7, r4
90024466:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90024468:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002446c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024470:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024472:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024476:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002447a:	fb04 fa0a 	mul.w	sl, r4, sl
9002447e:	44bc      	add	ip, r7
90024480:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024484:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024488:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002448c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024490:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024494:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024498:	ea4c 040a 	orr.w	r4, ip, sl
9002449c:	9409      	str	r4, [sp, #36]	@ 0x24
9002449e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900244a0:	2cff      	cmp	r4, #255	@ 0xff
900244a2:	d020      	beq.n	900244e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900244a4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900244a6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900244aa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900244ac:	4367      	muls	r7, r4
900244ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900244b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900244b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900244b8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900244ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900244be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900244c2:	fb04 fa0a 	mul.w	sl, r4, sl
900244c6:	44bc      	add	ip, r7
900244c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900244cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900244d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900244d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900244d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900244dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900244e0:	ea4c 040a 	orr.w	r4, ip, sl
900244e4:	940e      	str	r4, [sp, #56]	@ 0x38
900244e6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900244e8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900244ec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900244f0:	43d2      	mvns	r2, r2
900244f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900244f6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900244f8:	b2d2      	uxtb	r2, r2
900244fa:	fb0e f707 	mul.w	r7, lr, r7
900244fe:	fb01 770c 	mla	r7, r1, ip, r7
90024502:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024506:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024508:	fb00 770c 	mla	r7, r0, ip, r7
9002450c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024510:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024512:	fb08 770c 	mla	r7, r8, ip, r7
90024516:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002451a:	fb0e fe0c 	mul.w	lr, lr, ip
9002451e:	0a3f      	lsrs	r7, r7, #8
90024520:	fb01 e303 	mla	r3, r1, r3, lr
90024524:	9909      	ldr	r1, [sp, #36]	@ 0x24
90024526:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002452a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002452e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90024530:	fb00 330a 	mla	r3, r0, sl, r3
90024534:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90024538:	fb08 3c0c 	mla	ip, r8, ip, r3
9002453c:	f8b9 3000 	ldrh.w	r3, [r9]
90024540:	1218      	asrs	r0, r3, #8
90024542:	10d9      	asrs	r1, r3, #3
90024544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024548:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002454c:	00db      	lsls	r3, r3, #3
9002454e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024552:	4350      	muls	r0, r2
90024554:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024558:	b2db      	uxtb	r3, r3
9002455a:	4351      	muls	r1, r2
9002455c:	ea47 070c 	orr.w	r7, r7, ip
90024560:	4353      	muls	r3, r2
90024562:	1c42      	adds	r2, r0, #1
90024564:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024568:	0c3a      	lsrs	r2, r7, #16
9002456a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002456e:	4a18      	ldr	r2, [pc, #96]	@ (900245d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024570:	b2c0      	uxtb	r0, r0
90024572:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90024576:	1c4a      	adds	r2, r1, #1
90024578:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002457c:	0a3a      	lsrs	r2, r7, #8
9002457e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024582:	00c9      	lsls	r1, r1, #3
90024584:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024588:	4301      	orrs	r1, r0
9002458a:	1c58      	adds	r0, r3, #1
9002458c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024590:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024594:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90024598:	4308      	orrs	r0, r1
9002459a:	f8a9 0000 	strh.w	r0, [r9]
9002459e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900245a0:	f109 0902 	add.w	r9, r9, #2
900245a4:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900245a6:	f10b 3bff 	add.w	fp, fp, #4294967295
900245aa:	441a      	add	r2, r3
900245ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900245ae:	9225      	str	r2, [sp, #148]	@ 0x94
900245b0:	441d      	add	r5, r3
900245b2:	e64c      	b.n	9002424e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900245b4:	2800      	cmp	r0, #0
900245b6:	f43f aeed 	beq.w	90024394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900245ba:	5c79      	ldrb	r1, [r7, r1]
900245bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900245c0:	9109      	str	r1, [sp, #36]	@ 0x24
900245c2:	0e09      	lsrs	r1, r1, #24
900245c4:	9111      	str	r1, [sp, #68]	@ 0x44
900245c6:	e6e5      	b.n	90024394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900245c8:	b01b      	add	sp, #108	@ 0x6c
900245ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900245ce:	bf00      	nop
900245d0:	fffff800 	.word	0xfffff800

900245d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900245d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900245d8:	b085      	sub	sp, #20
900245da:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
900245de:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
900245e2:	2800      	cmp	r0, #0
900245e4:	9103      	str	r1, [sp, #12]
900245e6:	fb00 7406 	mla	r4, r0, r6, r7
900245ea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
900245ee:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900245f2:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900245f6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900245fa:	eb03 0904 	add.w	r9, r3, r4
900245fe:	9501      	str	r5, [sp, #4]
90024600:	f2c0 8150 	blt.w	900248a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024604:	4583      	cmp	fp, r0
90024606:	f340 814d 	ble.w	900248a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002460a:	2f00      	cmp	r7, #0
9002460c:	f2c0 8146 	blt.w	9002489c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024610:	42be      	cmp	r6, r7
90024612:	f340 8143 	ble.w	9002489c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024616:	f813 c004 	ldrb.w	ip, [r3, r4]
9002461a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
9002461e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024622:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024626:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002462a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002462e:	4355      	muls	r5, r2
90024630:	fb0c f203 	mul.w	r2, ip, r3
90024634:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024638:	f605 0501 	addw	r5, r5, #2049	@ 0x801
9002463c:	441d      	add	r5, r3
9002463e:	f102 0320 	add.w	r3, r2, #32
90024642:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024646:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002464a:	0a1b      	lsrs	r3, r3, #8
9002464c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024650:	431c      	orrs	r4, r3
90024652:	1c7b      	adds	r3, r7, #1
90024654:	f100 812b 	bmi.w	900248ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024658:	429e      	cmp	r6, r3
9002465a:	f340 8128 	ble.w	900248ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002465e:	2900      	cmp	r1, #0
90024660:	f000 8128 	beq.w	900248b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90024664:	9a01      	ldr	r2, [sp, #4]
90024666:	f899 3001 	ldrb.w	r3, [r9, #1]
9002466a:	8855      	ldrh	r5, [r2, #2]
9002466c:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024670:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024674:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024678:	fb08 f802 	mul.w	r8, r8, r2
9002467c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024680:	435d      	muls	r5, r3
90024682:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024686:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002468a:	44d0      	add	r8, sl
9002468c:	f105 0a20 	add.w	sl, r5, #32
90024690:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024694:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024698:	0a2d      	lsrs	r5, r5, #8
9002469a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002469e:	432a      	orrs	r2, r5
900246a0:	3001      	adds	r0, #1
900246a2:	f100 810d 	bmi.w	900248c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900246a6:	4583      	cmp	fp, r0
900246a8:	f340 810a 	ble.w	900248c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900246ac:	f1be 0f00 	cmp.w	lr, #0
900246b0:	f000 810b 	beq.w	900248ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
900246b4:	2f00      	cmp	r7, #0
900246b6:	f2c0 8100 	blt.w	900248ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900246ba:	42be      	cmp	r6, r7
900246bc:	f340 80fd 	ble.w	900248ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900246c0:	9801      	ldr	r0, [sp, #4]
900246c2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
900246c6:	f819 5006 	ldrb.w	r5, [r9, r6]
900246ca:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900246ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900246d2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
900246d6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900246da:	fb0a fa00 	mul.w	sl, sl, r0
900246de:	fb05 f808 	mul.w	r8, r5, r8
900246e2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900246e6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
900246ea:	4482      	add	sl, r0
900246ec:	f108 0020 	add.w	r0, r8, #32
900246f0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900246f4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900246f8:	0a00      	lsrs	r0, r0, #8
900246fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900246fe:	ea4b 0b00 	orr.w	fp, fp, r0
90024702:	3701      	adds	r7, #1
90024704:	f100 80e6 	bmi.w	900248d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024708:	42be      	cmp	r6, r7
9002470a:	f340 80e3 	ble.w	900248d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002470e:	2900      	cmp	r1, #0
90024710:	f000 80e3 	beq.w	900248da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90024714:	3601      	adds	r6, #1
90024716:	9801      	ldr	r0, [sp, #4]
90024718:	f819 7006 	ldrb.w	r7, [r9, r6]
9002471c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024720:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024724:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90024728:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002472c:	fb09 f906 	mul.w	r9, r9, r6
90024730:	fb07 f800 	mul.w	r8, r7, r0
90024734:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90024738:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
9002473c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024740:	44d1      	add	r9, sl
90024742:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024746:	f108 0020 	add.w	r0, r8, #32
9002474a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002474e:	0a00      	lsrs	r0, r0, #8
90024750:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024754:	4330      	orrs	r0, r6
90024756:	b28e      	uxth	r6, r1
90024758:	fa1f f98e 	uxth.w	r9, lr
9002475c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024760:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024764:	fb06 f809 	mul.w	r8, r6, r9
90024768:	0136      	lsls	r6, r6, #4
9002476a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002476e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024772:	9601      	str	r6, [sp, #4]
90024774:	ea4a 0404 	orr.w	r4, sl, r4
90024778:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002477c:	fa1f f689 	uxth.w	r6, r9
90024780:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024784:	fb11 f90e 	smulbb	r9, r1, lr
90024788:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002478c:	9602      	str	r6, [sp, #8]
9002478e:	4626      	mov	r6, r4
90024790:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024794:	f1ce 0410 	rsb	r4, lr, #16
90024798:	ea4a 0202 	orr.w	r2, sl, r2
9002479c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900247a0:	1a64      	subs	r4, r4, r1
900247a2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900247a6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900247aa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900247ae:	434a      	muls	r2, r1
900247b0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900247b4:	ea4a 0000 	orr.w	r0, sl, r0
900247b8:	9903      	ldr	r1, [sp, #12]
900247ba:	fb04 2406 	mla	r4, r4, r6, r2
900247be:	9e02      	ldr	r6, [sp, #8]
900247c0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900247c4:	fb09 4200 	mla	r2, r9, r0, r4
900247c8:	ea4f 440b 	mov.w	r4, fp, lsl #16
900247cc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900247d0:	8808      	ldrh	r0, [r1, #0]
900247d2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900247d6:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
900247da:	ea44 0b0b 	orr.w	fp, r4, fp
900247de:	9c01      	ldr	r4, [sp, #4]
900247e0:	b289      	uxth	r1, r1
900247e2:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
900247e6:	fb0e 2e0b 	mla	lr, lr, fp, r2
900247ea:	1ba4      	subs	r4, r4, r6
900247ec:	9e01      	ldr	r6, [sp, #4]
900247ee:	ea4f 525e 	mov.w	r2, lr, lsr #21
900247f2:	eba6 0608 	sub.w	r6, r6, r8
900247f6:	b2a4      	uxth	r4, r4
900247f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900247fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024800:	b2b6      	uxth	r6, r6
90024802:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024806:	4373      	muls	r3, r6
90024808:	ea42 0e0e 	orr.w	lr, r2, lr
9002480c:	fb0c 3304 	mla	r3, ip, r4, r3
90024810:	9c02      	ldr	r4, [sp, #8]
90024812:	fa1f f28e 	uxth.w	r2, lr
90024816:	fb04 3505 	mla	r5, r4, r5, r3
9002481a:	10d4      	asrs	r4, r2, #3
9002481c:	fb08 5707 	mla	r7, r8, r7, r5
90024820:	1215      	asrs	r5, r2, #8
90024822:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90024826:	00d2      	lsls	r2, r2, #3
90024828:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002482c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024830:	b2d2      	uxtb	r2, r2
90024832:	434f      	muls	r7, r1
90024834:	1c7b      	adds	r3, r7, #1
90024836:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002483a:	1203      	asrs	r3, r0, #8
9002483c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024840:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024844:	b2ff      	uxtb	r7, r7
90024846:	fb13 f307 	smulbb	r3, r3, r7
9002484a:	fb05 3501 	mla	r5, r5, r1, r3
9002484e:	10c3      	asrs	r3, r0, #3
90024850:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024854:	b2ad      	uxth	r5, r5
90024856:	fb13 f307 	smulbb	r3, r3, r7
9002485a:	fb04 3401 	mla	r4, r4, r1, r3
9002485e:	00c3      	lsls	r3, r0, #3
90024860:	b2db      	uxtb	r3, r3
90024862:	b2a4      	uxth	r4, r4
90024864:	fb13 f307 	smulbb	r3, r3, r7
90024868:	fb02 3101 	mla	r1, r2, r1, r3
9002486c:	1c6b      	adds	r3, r5, #1
9002486e:	1c62      	adds	r2, r4, #1
90024870:	b289      	uxth	r1, r1
90024872:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024876:	1c4b      	adds	r3, r1, #1
90024878:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002487c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024880:	9a03      	ldr	r2, [sp, #12]
90024882:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024886:	0964      	lsrs	r4, r4, #5
90024888:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002488c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024890:	432b      	orrs	r3, r5
90024892:	4323      	orrs	r3, r4
90024894:	8013      	strh	r3, [r2, #0]
90024896:	b005      	add	sp, #20
90024898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002489c:	f04f 0c00 	mov.w	ip, #0
900248a0:	4664      	mov	r4, ip
900248a2:	e6d6      	b.n	90024652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900248a4:	2300      	movs	r3, #0
900248a6:	469c      	mov	ip, r3
900248a8:	461a      	mov	r2, r3
900248aa:	461c      	mov	r4, r3
900248ac:	e6f8      	b.n	900246a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900248ae:	2300      	movs	r3, #0
900248b0:	461a      	mov	r2, r3
900248b2:	e6f5      	b.n	900246a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900248b4:	460b      	mov	r3, r1
900248b6:	460a      	mov	r2, r1
900248b8:	e6f2      	b.n	900246a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900248ba:	2500      	movs	r5, #0
900248bc:	46ab      	mov	fp, r5
900248be:	e720      	b.n	90024702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900248c0:	2700      	movs	r7, #0
900248c2:	463d      	mov	r5, r7
900248c4:	4638      	mov	r0, r7
900248c6:	46bb      	mov	fp, r7
900248c8:	e745      	b.n	90024756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900248ca:	4677      	mov	r7, lr
900248cc:	4675      	mov	r5, lr
900248ce:	4670      	mov	r0, lr
900248d0:	46f3      	mov	fp, lr
900248d2:	e740      	b.n	90024756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900248d4:	2700      	movs	r7, #0
900248d6:	4638      	mov	r0, r7
900248d8:	e73d      	b.n	90024756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900248da:	460f      	mov	r7, r1
900248dc:	4608      	mov	r0, r1
900248de:	e73a      	b.n	90024756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900248e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900248e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900248e4:	b097      	sub	sp, #92	@ 0x5c
900248e6:	9214      	str	r2, [sp, #80]	@ 0x50
900248e8:	9308      	str	r3, [sp, #32]
900248ea:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900248ec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900248f0:	9015      	str	r0, [sp, #84]	@ 0x54
900248f2:	9312      	str	r3, [sp, #72]	@ 0x48
900248f4:	6850      	ldr	r0, [r2, #4]
900248f6:	9111      	str	r1, [sp, #68]	@ 0x44
900248f8:	6812      	ldr	r2, [r2, #0]
900248fa:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
900248fe:	fb00 1303 	mla	r3, r0, r3, r1
90024902:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024906:	9309      	str	r3, [sp, #36]	@ 0x24
90024908:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002490a:	681b      	ldr	r3, [r3, #0]
9002490c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002490e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024910:	685b      	ldr	r3, [r3, #4]
90024912:	930c      	str	r3, [sp, #48]	@ 0x30
90024914:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90024918:	930a      	str	r3, [sp, #40]	@ 0x28
9002491a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002491c:	2b00      	cmp	r3, #0
9002491e:	dc03      	bgt.n	90024928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024920:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90024922:	2b00      	cmp	r3, #0
90024924:	f340 83cd 	ble.w	900250c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024928:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002492a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002492e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024932:	1e48      	subs	r0, r1, #1
90024934:	1e55      	subs	r5, r2, #1
90024936:	9b08      	ldr	r3, [sp, #32]
90024938:	2b00      	cmp	r3, #0
9002493a:	f340 81a5 	ble.w	90024c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
9002493e:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90024940:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024942:	1436      	asrs	r6, r6, #16
90024944:	ea4f 4323 	mov.w	r3, r3, asr #16
90024948:	d406      	bmi.n	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002494a:	4286      	cmp	r6, r0
9002494c:	da04      	bge.n	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002494e:	2b00      	cmp	r3, #0
90024950:	db02      	blt.n	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024952:	42ab      	cmp	r3, r5
90024954:	f2c0 8199 	blt.w	90024c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024958:	3601      	adds	r6, #1
9002495a:	f100 8186 	bmi.w	90024c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002495e:	42b1      	cmp	r1, r6
90024960:	f2c0 8183 	blt.w	90024c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024964:	3301      	adds	r3, #1
90024966:	f100 8180 	bmi.w	90024c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002496a:	429a      	cmp	r2, r3
9002496c:	f2c0 817d 	blt.w	90024c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024970:	9b08      	ldr	r3, [sp, #32]
90024972:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024976:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024978:	9313      	str	r3, [sp, #76]	@ 0x4c
9002497a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002497c:	2b00      	cmp	r3, #0
9002497e:	f340 81a6 	ble.w	90024cce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024982:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024984:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024986:	1418      	asrs	r0, r3, #16
90024988:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002498a:	142d      	asrs	r5, r5, #16
9002498c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024990:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024992:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024996:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024998:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002499c:	f100 81fa 	bmi.w	90024d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900249a0:	f102 3eff 	add.w	lr, r2, #4294967295
900249a4:	4575      	cmp	r5, lr
900249a6:	f280 81f5 	bge.w	90024d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900249aa:	2800      	cmp	r0, #0
900249ac:	f2c0 81f2 	blt.w	90024d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900249b0:	f103 3eff 	add.w	lr, r3, #4294967295
900249b4:	4570      	cmp	r0, lr
900249b6:	f280 81ed 	bge.w	90024d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900249ba:	b212      	sxth	r2, r2
900249bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900249be:	fa1f fe81 	uxth.w	lr, r1
900249c2:	fb00 5002 	mla	r0, r0, r2, r5
900249c6:	ea4f 150e 	mov.w	r5, lr, lsl #4
900249ca:	eb03 0a00 	add.w	sl, r3, r0
900249ce:	f813 9000 	ldrb.w	r9, [r3, r0]
900249d2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
900249d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900249da:	b29b      	uxth	r3, r3
900249dc:	f1bc 0f00 	cmp.w	ip, #0
900249e0:	f000 81bb 	beq.w	90024d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900249e4:	f81a 4002 	ldrb.w	r4, [sl, r2]
900249e8:	eb0a 0b02 	add.w	fp, sl, r2
900249ec:	fa1f fa8c 	uxth.w	sl, ip
900249f0:	940d      	str	r4, [sp, #52]	@ 0x34
900249f2:	fb0a fe0e 	mul.w	lr, sl, lr
900249f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
900249fa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900249fe:	eba5 050e 	sub.w	r5, r5, lr
90024a02:	940e      	str	r4, [sp, #56]	@ 0x38
90024a04:	fa1f fa8a 	uxth.w	sl, sl
90024a08:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024a0a:	b2ad      	uxth	r5, r5
90024a0c:	eba3 030a 	sub.w	r3, r3, sl
90024a10:	fb08 f505 	mul.w	r5, r8, r5
90024a14:	b29b      	uxth	r3, r3
90024a16:	fb09 5303 	mla	r3, r9, r3, r5
90024a1a:	fb0a 3304 	mla	r3, sl, r4, r3
90024a1e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a20:	fb0e 3304 	mla	r3, lr, r4, r3
90024a24:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024a28:	2b00      	cmp	r3, #0
90024a2a:	f000 8111 	beq.w	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024a2e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024a30:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024a34:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024a38:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024a3c:	f000 8192 	beq.w	90024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024a40:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024a44:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024a48:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024a4c:	fb0a fe0e 	mul.w	lr, sl, lr
90024a50:	fb09 f000 	mul.w	r0, r9, r0
90024a54:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024a58:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024a5c:	f100 0b20 	add.w	fp, r0, #32
90024a60:	44ce      	add	lr, r9
90024a62:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024a66:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024a6a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024a6e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024a72:	ea4e 0909 	orr.w	r9, lr, r9
90024a76:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024a7a:	8868      	ldrh	r0, [r5, #2]
90024a7c:	d019      	beq.n	90024ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024a7e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024a82:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024a86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024a8a:	fb0a fe0e 	mul.w	lr, sl, lr
90024a8e:	fb08 f800 	mul.w	r8, r8, r0
90024a92:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024a96:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024a9a:	f108 0b20 	add.w	fp, r8, #32
90024a9e:	4486      	add	lr, r0
90024aa0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024aa4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024aa8:	0a00      	lsrs	r0, r0, #8
90024aaa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024aae:	ea4e 0000 	orr.w	r0, lr, r0
90024ab2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024ab6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024aba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024abe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024ac2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024ac6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024aca:	ea4e 0909 	orr.w	r9, lr, r9
90024ace:	ea4a 0000 	orr.w	r0, sl, r0
90024ad2:	f1bc 0f00 	cmp.w	ip, #0
90024ad6:	f000 8147 	beq.w	90024d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90024ada:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90024ade:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024ae0:	3a01      	subs	r2, #1
90024ae2:	2cff      	cmp	r4, #255	@ 0xff
90024ae4:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024ae8:	f102 0202 	add.w	r2, r2, #2
90024aec:	eb05 0e02 	add.w	lr, r5, r2
90024af0:	5aaa      	ldrh	r2, [r5, r2]
90024af2:	d018      	beq.n	90024b26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024af4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024af8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024afc:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024b00:	fb04 fa02 	mul.w	sl, r4, r2
90024b04:	fb08 f805 	mul.w	r8, r8, r5
90024b08:	f10a 0520 	add.w	r5, sl, #32
90024b0c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024b10:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024b14:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024b18:	4442      	add	r2, r8
90024b1a:	0a2d      	lsrs	r5, r5, #8
90024b1c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024b20:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024b24:	432a      	orrs	r2, r5
90024b26:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024b28:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024b2c:	2cff      	cmp	r4, #255	@ 0xff
90024b2e:	d01a      	beq.n	90024b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024b30:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024b34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024b38:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024b3c:	fb04 fa05 	mul.w	sl, r4, r5
90024b40:	fb08 f80e 	mul.w	r8, r8, lr
90024b44:	f10a 0e20 	add.w	lr, sl, #32
90024b48:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024b4c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024b50:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90024b54:	4445      	add	r5, r8
90024b56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024b5a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024b5e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90024b62:	ea45 050e 	orr.w	r5, r5, lr
90024b66:	fb1c fe01 	smulbb	lr, ip, r1
90024b6a:	f1cc 0810 	rsb	r8, ip, #16
90024b6e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024b72:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024b76:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024b7a:	eba8 0801 	sub.w	r8, r8, r1
90024b7e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024b82:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024b86:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024b8a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024b8e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024b92:	ea4a 0202 	orr.w	r2, sl, r2
90024b96:	4341      	muls	r1, r0
90024b98:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024b9c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024ba0:	fb09 1108 	mla	r1, r9, r8, r1
90024ba4:	ea4b 0505 	orr.w	r5, fp, r5
90024ba8:	fb0c 1102 	mla	r1, ip, r2, r1
90024bac:	fb0e 1e05 	mla	lr, lr, r5, r1
90024bb0:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024bb4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024bb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024bbc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024bc0:	ea42 0e0e 	orr.w	lr, r2, lr
90024bc4:	fa1f f28e 	uxth.w	r2, lr
90024bc8:	2bff      	cmp	r3, #255	@ 0xff
90024bca:	d103      	bne.n	90024bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024bcc:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024bce:	29ff      	cmp	r1, #255	@ 0xff
90024bd0:	f000 80de 	beq.w	90024d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024bd4:	990a      	ldr	r1, [sp, #40]	@ 0x28
90024bd6:	1215      	asrs	r5, r2, #8
90024bd8:	8838      	ldrh	r0, [r7, #0]
90024bda:	434b      	muls	r3, r1
90024bdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024be0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024be2:	f103 0c01 	add.w	ip, r3, #1
90024be6:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90024bea:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024bee:	fa5f fc83 	uxtb.w	ip, r3
90024bf2:	1203      	asrs	r3, r0, #8
90024bf4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024bf8:	fb13 f30c 	smulbb	r3, r3, ip
90024bfc:	fb05 3501 	mla	r5, r5, r1, r3
90024c00:	10c3      	asrs	r3, r0, #3
90024c02:	10d1      	asrs	r1, r2, #3
90024c04:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024c08:	00d2      	lsls	r2, r2, #3
90024c0a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024c0e:	b2ad      	uxth	r5, r5
90024c10:	fb13 f30c 	smulbb	r3, r3, ip
90024c14:	b2d2      	uxtb	r2, r2
90024c16:	fb01 3104 	mla	r1, r1, r4, r3
90024c1a:	00c3      	lsls	r3, r0, #3
90024c1c:	b2db      	uxtb	r3, r3
90024c1e:	b289      	uxth	r1, r1
90024c20:	fb13 f30c 	smulbb	r3, r3, ip
90024c24:	fb02 3304 	mla	r3, r2, r4, r3
90024c28:	b29a      	uxth	r2, r3
90024c2a:	1c6b      	adds	r3, r5, #1
90024c2c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024c30:	1c53      	adds	r3, r2, #1
90024c32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024c36:	1c4a      	adds	r2, r1, #1
90024c38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024c3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024c40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024c44:	0949      	lsrs	r1, r1, #5
90024c46:	432b      	orrs	r3, r5
90024c48:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024c4c:	430b      	orrs	r3, r1
90024c4e:	803b      	strh	r3, [r7, #0]
90024c50:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024c52:	3702      	adds	r7, #2
90024c54:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024c56:	4413      	add	r3, r2
90024c58:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024c5a:	9321      	str	r3, [sp, #132]	@ 0x84
90024c5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c5e:	441a      	add	r2, r3
90024c60:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024c62:	3b01      	subs	r3, #1
90024c64:	9222      	str	r2, [sp, #136]	@ 0x88
90024c66:	9313      	str	r3, [sp, #76]	@ 0x4c
90024c68:	e687      	b.n	9002497a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024c6a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024c6c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90024c6e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90024c70:	4433      	add	r3, r6
90024c72:	9321      	str	r3, [sp, #132]	@ 0x84
90024c74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c76:	441c      	add	r4, r3
90024c78:	9b08      	ldr	r3, [sp, #32]
90024c7a:	3b01      	subs	r3, #1
90024c7c:	9422      	str	r4, [sp, #136]	@ 0x88
90024c7e:	9308      	str	r3, [sp, #32]
90024c80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c82:	3302      	adds	r3, #2
90024c84:	9309      	str	r3, [sp, #36]	@ 0x24
90024c86:	e656      	b.n	90024936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024c88:	d028      	beq.n	90024cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024c8a:	9b08      	ldr	r3, [sp, #32]
90024c8c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90024c8e:	3b01      	subs	r3, #1
90024c90:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024c92:	fb00 5003 	mla	r0, r0, r3, r5
90024c96:	1400      	asrs	r0, r0, #16
90024c98:	f53f ae6a 	bmi.w	90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024c9c:	3901      	subs	r1, #1
90024c9e:	4288      	cmp	r0, r1
90024ca0:	f6bf ae66 	bge.w	90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024ca4:	9924      	ldr	r1, [sp, #144]	@ 0x90
90024ca6:	9822      	ldr	r0, [sp, #136]	@ 0x88
90024ca8:	fb01 0303 	mla	r3, r1, r3, r0
90024cac:	141b      	asrs	r3, r3, #16
90024cae:	f53f ae5f 	bmi.w	90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024cb2:	3a01      	subs	r2, #1
90024cb4:	4293      	cmp	r3, r2
90024cb6:	f6bf ae5b 	bge.w	90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024cba:	9b08      	ldr	r3, [sp, #32]
90024cbc:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024cc0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024cc4:	9313      	str	r3, [sp, #76]	@ 0x4c
90024cc6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024cc8:	2b00      	cmp	r3, #0
90024cca:	f300 8082 	bgt.w	90024dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90024cce:	9b08      	ldr	r3, [sp, #32]
90024cd0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024cd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024cd6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024cda:	9309      	str	r3, [sp, #36]	@ 0x24
90024cdc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024cde:	2b00      	cmp	r3, #0
90024ce0:	f340 81ef 	ble.w	900250c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024ce4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024ce8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024cea:	ee30 0a04 	vadd.f32	s0, s0, s8
90024cee:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024cf2:	eef0 6a62 	vmov.f32	s13, s5
90024cf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024cfa:	ee31 1a05 	vadd.f32	s2, s2, s10
90024cfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d02:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90024d06:	eef0 6a43 	vmov.f32	s13, s6
90024d0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d0e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90024d12:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d16:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d1a:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d2a:	ee12 2a90 	vmov	r2, s5
90024d2e:	eef0 2a47 	vmov.f32	s5, s14
90024d32:	fb92 f3f3 	sdiv	r3, r2, r3
90024d36:	ee13 2a10 	vmov	r2, s6
90024d3a:	9323      	str	r3, [sp, #140]	@ 0x8c
90024d3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024d3e:	eeb0 3a67 	vmov.f32	s6, s15
90024d42:	fb92 f3f3 	sdiv	r3, r2, r3
90024d46:	9324      	str	r3, [sp, #144]	@ 0x90
90024d48:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024d4a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90024d4c:	3b01      	subs	r3, #1
90024d4e:	9311      	str	r3, [sp, #68]	@ 0x44
90024d50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024d52:	bf08      	it	eq
90024d54:	4613      	moveq	r3, r2
90024d56:	9308      	str	r3, [sp, #32]
90024d58:	e5df      	b.n	9002491a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024d5a:	fb08 f505 	mul.w	r5, r8, r5
90024d5e:	fb09 5303 	mla	r3, r9, r3, r5
90024d62:	e65f      	b.n	90024a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90024d64:	4681      	mov	r9, r0
90024d66:	e686      	b.n	90024a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024d68:	f1c1 0210 	rsb	r2, r1, #16
90024d6c:	4341      	muls	r1, r0
90024d6e:	fb09 1902 	mla	r9, r9, r2, r1
90024d72:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024d76:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024d7a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024d7e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024d82:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024d86:	ea42 0909 	orr.w	r9, r2, r9
90024d8a:	fa1f f289 	uxth.w	r2, r9
90024d8e:	e71b      	b.n	90024bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024d90:	803a      	strh	r2, [r7, #0]
90024d92:	e75d      	b.n	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024d94:	f115 0e01 	adds.w	lr, r5, #1
90024d98:	f53f af5a 	bmi.w	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024d9c:	4572      	cmp	r2, lr
90024d9e:	f6ff af57 	blt.w	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024da2:	f110 0e01 	adds.w	lr, r0, #1
90024da6:	f53f af53 	bmi.w	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024daa:	4573      	cmp	r3, lr
90024dac:	f6ff af50 	blt.w	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024db0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024db2:	b21b      	sxth	r3, r3
90024db4:	b212      	sxth	r2, r2
90024db6:	9502      	str	r5, [sp, #8]
90024db8:	9301      	str	r3, [sp, #4]
90024dba:	9200      	str	r2, [sp, #0]
90024dbc:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024dc0:	e9cd c405 	strd	ip, r4, [sp, #20]
90024dc4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90024dc8:	4639      	mov	r1, r7
90024dca:	9815      	ldr	r0, [sp, #84]	@ 0x54
90024dcc:	f7ff fc02 	bl	900245d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024dd0:	e73e      	b.n	90024c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024dd2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024dd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024dd8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024dda:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024dde:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024de0:	fa1f fc82 	uxth.w	ip, r2
90024de4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024de8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024dea:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024dee:	141f      	asrs	r7, r3, #16
90024df0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024df2:	141b      	asrs	r3, r3, #16
90024df4:	fb01 3707 	mla	r7, r1, r7, r3
90024df8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024dfa:	eb03 0a07 	add.w	sl, r3, r7
90024dfe:	f813 9007 	ldrb.w	r9, [r3, r7]
90024e02:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024e06:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024e0a:	b29b      	uxth	r3, r3
90024e0c:	2d00      	cmp	r5, #0
90024e0e:	f000 813d 	beq.w	9002508c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024e12:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024e16:	eb0a 0b01 	add.w	fp, sl, r1
90024e1a:	fa1f fa85 	uxth.w	sl, r5
90024e1e:	940f      	str	r4, [sp, #60]	@ 0x3c
90024e20:	fb0a fc0c 	mul.w	ip, sl, ip
90024e24:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024e28:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024e2c:	eba0 000c 	sub.w	r0, r0, ip
90024e30:	9410      	str	r4, [sp, #64]	@ 0x40
90024e32:	fa1f fa8a 	uxth.w	sl, sl
90024e36:	b280      	uxth	r0, r0
90024e38:	eba3 030a 	sub.w	r3, r3, sl
90024e3c:	fb08 f000 	mul.w	r0, r8, r0
90024e40:	b29b      	uxth	r3, r3
90024e42:	fb09 0303 	mla	r3, r9, r3, r0
90024e46:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024e48:	fb0a 3300 	mla	r3, sl, r0, r3
90024e4c:	fb0c 3304 	mla	r3, ip, r4, r3
90024e50:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024e54:	2b00      	cmp	r3, #0
90024e56:	f000 810b 	beq.w	90025070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024e5a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90024e5c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024e60:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024e62:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024e66:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024e6a:	f000 8114 	beq.w	90025096 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90024e6e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024e72:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024e76:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024e7a:	fb0a fc0c 	mul.w	ip, sl, ip
90024e7e:	fb09 f707 	mul.w	r7, r9, r7
90024e82:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024e86:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024e8a:	f107 0b20 	add.w	fp, r7, #32
90024e8e:	44cc      	add	ip, r9
90024e90:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024e94:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024e98:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024e9c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024ea0:	ea4c 0909 	orr.w	r9, ip, r9
90024ea4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024ea8:	8847      	ldrh	r7, [r0, #2]
90024eaa:	d019      	beq.n	90024ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024eac:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024eb0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024eb4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024eb8:	fb0a fc0c 	mul.w	ip, sl, ip
90024ebc:	fb08 f807 	mul.w	r8, r8, r7
90024ec0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024ec4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024ec8:	f108 0b20 	add.w	fp, r8, #32
90024ecc:	44bc      	add	ip, r7
90024ece:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024ed2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024ed6:	0a3f      	lsrs	r7, r7, #8
90024ed8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024edc:	ea4c 0707 	orr.w	r7, ip, r7
90024ee0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024ee4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024ee8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024eec:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024ef0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024ef4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024ef8:	ea4c 0909 	orr.w	r9, ip, r9
90024efc:	ea4a 0707 	orr.w	r7, sl, r7
90024f00:	2d00      	cmp	r5, #0
90024f02:	f000 80ca 	beq.w	9002509a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024f06:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90024f0a:	3901      	subs	r1, #1
90024f0c:	0049      	lsls	r1, r1, #1
90024f0e:	3102      	adds	r1, #2
90024f10:	eb00 0c01 	add.w	ip, r0, r1
90024f14:	5a41      	ldrh	r1, [r0, r1]
90024f16:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024f18:	28ff      	cmp	r0, #255	@ 0xff
90024f1a:	d019      	beq.n	90024f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024f1c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90024f20:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024f22:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024f26:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024f2a:	fb04 fa01 	mul.w	sl, r4, r1
90024f2e:	fb08 f800 	mul.w	r8, r8, r0
90024f32:	f10a 0020 	add.w	r0, sl, #32
90024f36:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024f3a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024f3e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024f42:	4441      	add	r1, r8
90024f44:	0a00      	lsrs	r0, r0, #8
90024f46:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024f4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024f4e:	4301      	orrs	r1, r0
90024f50:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024f52:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024f56:	2cff      	cmp	r4, #255	@ 0xff
90024f58:	d01a      	beq.n	90024f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024f5a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90024f5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024f62:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024f66:	fb04 fa00 	mul.w	sl, r4, r0
90024f6a:	fb08 f80c 	mul.w	r8, r8, ip
90024f6e:	f10a 0c20 	add.w	ip, sl, #32
90024f72:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024f76:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024f7a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024f7e:	4440      	add	r0, r8
90024f80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024f84:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024f88:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024f8c:	ea40 000c 	orr.w	r0, r0, ip
90024f90:	fb15 fc02 	smulbb	ip, r5, r2
90024f94:	f1c5 0810 	rsb	r8, r5, #16
90024f98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024f9c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024fa0:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024fa4:	eba8 0802 	sub.w	r8, r8, r2
90024fa8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024fac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024fb0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024fb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024fb8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024fbc:	ea4a 0101 	orr.w	r1, sl, r1
90024fc0:	437a      	muls	r2, r7
90024fc2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024fc6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024fca:	fb09 2208 	mla	r2, r9, r8, r2
90024fce:	ea4b 0000 	orr.w	r0, fp, r0
90024fd2:	fb05 2201 	mla	r2, r5, r1, r2
90024fd6:	fb0c 2200 	mla	r2, ip, r0, r2
90024fda:	0d57      	lsrs	r7, r2, #21
90024fdc:	0952      	lsrs	r2, r2, #5
90024fde:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024fe2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024fe6:	433a      	orrs	r2, r7
90024fe8:	2bff      	cmp	r3, #255	@ 0xff
90024fea:	b292      	uxth	r2, r2
90024fec:	d102      	bne.n	90024ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024fee:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024ff0:	29ff      	cmp	r1, #255	@ 0xff
90024ff2:	d063      	beq.n	900250bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024ff4:	980a      	ldr	r0, [sp, #40]	@ 0x28
90024ff6:	1215      	asrs	r5, r2, #8
90024ff8:	f8be 1000 	ldrh.w	r1, [lr]
90024ffc:	4343      	muls	r3, r0
90024ffe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025000:	10cf      	asrs	r7, r1, #3
90025002:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025006:	1c58      	adds	r0, r3, #1
90025008:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002500c:	eb00 2323 	add.w	r3, r0, r3, asr #8
90025010:	1208      	asrs	r0, r1, #8
90025012:	ea6f 2323 	mvn.w	r3, r3, asr #8
90025016:	00c9      	lsls	r1, r1, #3
90025018:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002501c:	b2db      	uxtb	r3, r3
9002501e:	b2c9      	uxtb	r1, r1
90025020:	fb10 f003 	smulbb	r0, r0, r3
90025024:	fb11 f103 	smulbb	r1, r1, r3
90025028:	fb05 0504 	mla	r5, r5, r4, r0
9002502c:	10d0      	asrs	r0, r2, #3
9002502e:	fb17 f703 	smulbb	r7, r7, r3
90025032:	00d2      	lsls	r2, r2, #3
90025034:	b2ad      	uxth	r5, r5
90025036:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002503a:	b2d2      	uxtb	r2, r2
9002503c:	fb00 7004 	mla	r0, r0, r4, r7
90025040:	1c6b      	adds	r3, r5, #1
90025042:	fb02 1204 	mla	r2, r2, r4, r1
90025046:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002504a:	b292      	uxth	r2, r2
9002504c:	b280      	uxth	r0, r0
9002504e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025052:	1c57      	adds	r7, r2, #1
90025054:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90025058:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002505c:	433d      	orrs	r5, r7
9002505e:	1c47      	adds	r7, r0, #1
90025060:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025064:	097f      	lsrs	r7, r7, #5
90025066:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002506a:	433d      	orrs	r5, r7
9002506c:	f8ae 5000 	strh.w	r5, [lr]
90025070:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025072:	f10e 0e02 	add.w	lr, lr, #2
90025076:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90025078:	4413      	add	r3, r2
9002507a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002507c:	9321      	str	r3, [sp, #132]	@ 0x84
9002507e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025080:	441a      	add	r2, r3
90025082:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025084:	3b01      	subs	r3, #1
90025086:	9222      	str	r2, [sp, #136]	@ 0x88
90025088:	9313      	str	r3, [sp, #76]	@ 0x4c
9002508a:	e61c      	b.n	90024cc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002508c:	fb08 f000 	mul.w	r0, r8, r0
90025090:	fb09 0303 	mla	r3, r9, r3, r0
90025094:	e6dc      	b.n	90024e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90025096:	46b9      	mov	r9, r7
90025098:	e704      	b.n	90024ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002509a:	f1c2 0110 	rsb	r1, r2, #16
9002509e:	437a      	muls	r2, r7
900250a0:	fb09 2901 	mla	r9, r9, r1, r2
900250a4:	ea4f 0949 	mov.w	r9, r9, lsl #1
900250a8:	ea4f 5059 	mov.w	r0, r9, lsr #21
900250ac:	ea4f 1259 	mov.w	r2, r9, lsr #5
900250b0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900250b4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900250b8:	4302      	orrs	r2, r0
900250ba:	e795      	b.n	90024fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
900250bc:	f8ae 2000 	strh.w	r2, [lr]
900250c0:	e7d6      	b.n	90025070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900250c2:	b017      	add	sp, #92	@ 0x5c
900250c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900250c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900250c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900250cc:	b085      	sub	sp, #20
900250ce:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
900250d2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
900250d6:	2800      	cmp	r0, #0
900250d8:	9103      	str	r1, [sp, #12]
900250da:	fb00 7406 	mla	r4, r0, r6, r7
900250de:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
900250e2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900250e6:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900250ea:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900250ee:	eb02 0904 	add.w	r9, r2, r4
900250f2:	9501      	str	r5, [sp, #4]
900250f4:	f2c0 8141 	blt.w	9002537a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900250f8:	4583      	cmp	fp, r0
900250fa:	f340 813e 	ble.w	9002537a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900250fe:	2f00      	cmp	r7, #0
90025100:	f2c0 8137 	blt.w	90025372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025104:	42be      	cmp	r6, r7
90025106:	f340 8134 	ble.w	90025372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002510a:	f812 c004 	ldrb.w	ip, [r2, r4]
9002510e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90025112:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90025116:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002511a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002511e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025122:	4355      	muls	r5, r2
90025124:	fb0c f203 	mul.w	r2, ip, r3
90025128:	ea04 1355 	and.w	r3, r4, r5, lsr #5
9002512c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90025130:	441d      	add	r5, r3
90025132:	f102 0320 	add.w	r3, r2, #32
90025136:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002513a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002513e:	0a1b      	lsrs	r3, r3, #8
90025140:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025144:	431c      	orrs	r4, r3
90025146:	1c7b      	adds	r3, r7, #1
90025148:	f100 811c 	bmi.w	90025384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
9002514c:	429e      	cmp	r6, r3
9002514e:	f340 8119 	ble.w	90025384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90025152:	2900      	cmp	r1, #0
90025154:	f000 8119 	beq.w	9002538a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90025158:	9a01      	ldr	r2, [sp, #4]
9002515a:	f899 3001 	ldrb.w	r3, [r9, #1]
9002515e:	8855      	ldrh	r5, [r2, #2]
90025160:	ea4f 08e3 	mov.w	r8, r3, asr #3
90025164:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90025168:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002516c:	fb08 f802 	mul.w	r8, r8, r2
90025170:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90025174:	435d      	muls	r5, r3
90025176:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002517a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002517e:	44d0      	add	r8, sl
90025180:	f105 0a20 	add.w	sl, r5, #32
90025184:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025188:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002518c:	0a2d      	lsrs	r5, r5, #8
9002518e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025192:	432a      	orrs	r2, r5
90025194:	3001      	adds	r0, #1
90025196:	f100 80fe 	bmi.w	90025396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002519a:	4583      	cmp	fp, r0
9002519c:	f340 80fb 	ble.w	90025396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900251a0:	f1be 0f00 	cmp.w	lr, #0
900251a4:	f000 80fc 	beq.w	900253a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
900251a8:	2f00      	cmp	r7, #0
900251aa:	f2c0 80f1 	blt.w	90025390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
900251ae:	42be      	cmp	r6, r7
900251b0:	f340 80ee 	ble.w	90025390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
900251b4:	9801      	ldr	r0, [sp, #4]
900251b6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
900251ba:	f819 5006 	ldrb.w	r5, [r9, r6]
900251be:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900251c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900251c6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
900251ca:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900251ce:	fb0a fa00 	mul.w	sl, sl, r0
900251d2:	fb05 f808 	mul.w	r8, r5, r8
900251d6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900251da:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
900251de:	4482      	add	sl, r0
900251e0:	f108 0020 	add.w	r0, r8, #32
900251e4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900251e8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900251ec:	0a00      	lsrs	r0, r0, #8
900251ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900251f2:	ea4b 0b00 	orr.w	fp, fp, r0
900251f6:	3701      	adds	r7, #1
900251f8:	f100 80d7 	bmi.w	900253aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900251fc:	42be      	cmp	r6, r7
900251fe:	f340 80d4 	ble.w	900253aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025202:	2900      	cmp	r1, #0
90025204:	f000 80d4 	beq.w	900253b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025208:	3601      	adds	r6, #1
9002520a:	9801      	ldr	r0, [sp, #4]
9002520c:	f819 7006 	ldrb.w	r7, [r9, r6]
90025210:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90025214:	ea4f 09e7 	mov.w	r9, r7, asr #3
90025218:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
9002521c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025220:	fb09 f906 	mul.w	r9, r9, r6
90025224:	fb07 f800 	mul.w	r8, r7, r0
90025228:	f64f 001f 	movw	r0, #63519	@ 0xf81f
9002522c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025230:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90025234:	44d1      	add	r9, sl
90025236:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002523a:	f108 0020 	add.w	r0, r8, #32
9002523e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025242:	0a00      	lsrs	r0, r0, #8
90025244:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025248:	4330      	orrs	r0, r6
9002524a:	b28e      	uxth	r6, r1
9002524c:	fa1f f98e 	uxth.w	r9, lr
90025250:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90025254:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90025258:	fb06 f809 	mul.w	r8, r6, r9
9002525c:	0136      	lsls	r6, r6, #4
9002525e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025262:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90025266:	9601      	str	r6, [sp, #4]
90025268:	ea4a 0404 	orr.w	r4, sl, r4
9002526c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025270:	fa1f f689 	uxth.w	r6, r9
90025274:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025278:	fb11 f90e 	smulbb	r9, r1, lr
9002527c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025280:	9602      	str	r6, [sp, #8]
90025282:	4626      	mov	r6, r4
90025284:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025288:	f1ce 0410 	rsb	r4, lr, #16
9002528c:	ea4a 0202 	orr.w	r2, sl, r2
90025290:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025294:	1a64      	subs	r4, r4, r1
90025296:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002529a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002529e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900252a2:	434a      	muls	r2, r1
900252a4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900252a8:	ea4a 0000 	orr.w	r0, sl, r0
900252ac:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900252b0:	fb04 2406 	mla	r4, r4, r6, r2
900252b4:	9903      	ldr	r1, [sp, #12]
900252b6:	fb09 4200 	mla	r2, r9, r0, r4
900252ba:	ea4f 440b 	mov.w	r4, fp, lsl #16
900252be:	9801      	ldr	r0, [sp, #4]
900252c0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900252c4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900252c8:	8809      	ldrh	r1, [r1, #0]
900252ca:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
900252ce:	ea44 0b0b 	orr.w	fp, r4, fp
900252d2:	9c02      	ldr	r4, [sp, #8]
900252d4:	1b00      	subs	r0, r0, r4
900252d6:	9c01      	ldr	r4, [sp, #4]
900252d8:	fb0e 2e0b 	mla	lr, lr, fp, r2
900252dc:	eba4 0608 	sub.w	r6, r4, r8
900252e0:	b280      	uxth	r0, r0
900252e2:	ea4f 525e 	mov.w	r2, lr, lsr #21
900252e6:	b2b6      	uxth	r6, r6
900252e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900252ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900252f0:	4373      	muls	r3, r6
900252f2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900252f6:	fb0c 3300 	mla	r3, ip, r0, r3
900252fa:	9802      	ldr	r0, [sp, #8]
900252fc:	ea42 0e0e 	orr.w	lr, r2, lr
90025300:	fb00 3505 	mla	r5, r0, r5, r3
90025304:	120b      	asrs	r3, r1, #8
90025306:	10c8      	asrs	r0, r1, #3
90025308:	fb08 5707 	mla	r7, r8, r7, r5
9002530c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025310:	00c9      	lsls	r1, r1, #3
90025312:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025316:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002531a:	fa1f f28e 	uxth.w	r2, lr
9002531e:	b2c9      	uxtb	r1, r1
90025320:	b2ff      	uxtb	r7, r7
90025322:	437b      	muls	r3, r7
90025324:	4378      	muls	r0, r7
90025326:	434f      	muls	r7, r1
90025328:	1c59      	adds	r1, r3, #1
9002532a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002532e:	1213      	asrs	r3, r2, #8
90025330:	f023 0307 	bic.w	r3, r3, #7
90025334:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025338:	1c41      	adds	r1, r0, #1
9002533a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002533e:	10d1      	asrs	r1, r2, #3
90025340:	021b      	lsls	r3, r3, #8
90025342:	f021 0103 	bic.w	r1, r1, #3
90025346:	00d2      	lsls	r2, r2, #3
90025348:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
9002534c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025350:	00c9      	lsls	r1, r1, #3
90025352:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025356:	430b      	orrs	r3, r1
90025358:	1c79      	adds	r1, r7, #1
9002535a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
9002535e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90025362:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025366:	431a      	orrs	r2, r3
90025368:	9b03      	ldr	r3, [sp, #12]
9002536a:	801a      	strh	r2, [r3, #0]
9002536c:	b005      	add	sp, #20
9002536e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025372:	f04f 0c00 	mov.w	ip, #0
90025376:	4664      	mov	r4, ip
90025378:	e6e5      	b.n	90025146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002537a:	2300      	movs	r3, #0
9002537c:	469c      	mov	ip, r3
9002537e:	461a      	mov	r2, r3
90025380:	461c      	mov	r4, r3
90025382:	e707      	b.n	90025194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025384:	2300      	movs	r3, #0
90025386:	461a      	mov	r2, r3
90025388:	e704      	b.n	90025194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002538a:	460b      	mov	r3, r1
9002538c:	460a      	mov	r2, r1
9002538e:	e701      	b.n	90025194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025390:	2500      	movs	r5, #0
90025392:	46ab      	mov	fp, r5
90025394:	e72f      	b.n	900251f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90025396:	2700      	movs	r7, #0
90025398:	463d      	mov	r5, r7
9002539a:	4638      	mov	r0, r7
9002539c:	46bb      	mov	fp, r7
9002539e:	e754      	b.n	9002524a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900253a0:	4677      	mov	r7, lr
900253a2:	4675      	mov	r5, lr
900253a4:	4670      	mov	r0, lr
900253a6:	46f3      	mov	fp, lr
900253a8:	e74f      	b.n	9002524a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900253aa:	2700      	movs	r7, #0
900253ac:	4638      	mov	r0, r7
900253ae:	e74c      	b.n	9002524a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900253b0:	460f      	mov	r7, r1
900253b2:	4608      	mov	r0, r1
900253b4:	e749      	b.n	9002524a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

900253b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900253b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900253bc:	b093      	sub	sp, #76	@ 0x4c
900253be:	9210      	str	r2, [sp, #64]	@ 0x40
900253c0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900253c2:	9011      	str	r0, [sp, #68]	@ 0x44
900253c4:	910e      	str	r1, [sp, #56]	@ 0x38
900253c6:	6850      	ldr	r0, [r2, #4]
900253c8:	9306      	str	r3, [sp, #24]
900253ca:	6812      	ldr	r2, [r2, #0]
900253cc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900253d0:	fb00 1303 	mla	r3, r0, r3, r1
900253d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900253d8:	9307      	str	r3, [sp, #28]
900253da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900253dc:	681b      	ldr	r3, [r3, #0]
900253de:	9308      	str	r3, [sp, #32]
900253e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900253e2:	685b      	ldr	r3, [r3, #4]
900253e4:	9309      	str	r3, [sp, #36]	@ 0x24
900253e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900253e8:	2b00      	cmp	r3, #0
900253ea:	dc03      	bgt.n	900253f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900253ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900253ee:	2b00      	cmp	r3, #0
900253f0:	f340 83b6 	ble.w	90025b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900253f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900253f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900253fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900253fe:	1e48      	subs	r0, r1, #1
90025400:	1e55      	subs	r5, r2, #1
90025402:	9b06      	ldr	r3, [sp, #24]
90025404:	2b00      	cmp	r3, #0
90025406:	f340 8165 	ble.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002540a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
9002540c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002540e:	1436      	asrs	r6, r6, #16
90025410:	ea4f 4323 	mov.w	r3, r3, asr #16
90025414:	d406      	bmi.n	90025424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025416:	4286      	cmp	r6, r0
90025418:	da04      	bge.n	90025424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002541a:	2b00      	cmp	r3, #0
9002541c:	db02      	blt.n	90025424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002541e:	42ab      	cmp	r3, r5
90025420:	f2c0 8159 	blt.w	900256d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90025424:	3601      	adds	r6, #1
90025426:	f100 8146 	bmi.w	900256b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002542a:	42b1      	cmp	r1, r6
9002542c:	f2c0 8143 	blt.w	900256b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025430:	3301      	adds	r3, #1
90025432:	f100 8140 	bmi.w	900256b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025436:	429a      	cmp	r2, r3
90025438:	f2c0 813d 	blt.w	900256b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002543c:	9b06      	ldr	r3, [sp, #24]
9002543e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025442:	9f07      	ldr	r7, [sp, #28]
90025444:	930f      	str	r3, [sp, #60]	@ 0x3c
90025446:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025448:	2b00      	cmp	r3, #0
9002544a:	f340 8166 	ble.w	9002571a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002544e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025450:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90025452:	1418      	asrs	r0, r3, #16
90025454:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025456:	142d      	asrs	r5, r5, #16
90025458:	f3c3 3103 	ubfx	r1, r3, #12, #4
9002545c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002545e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90025462:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025464:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90025468:	f100 81f0 	bmi.w	9002584c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002546c:	f102 3eff 	add.w	lr, r2, #4294967295
90025470:	4575      	cmp	r5, lr
90025472:	f280 81eb 	bge.w	9002584c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025476:	2800      	cmp	r0, #0
90025478:	f2c0 81e8 	blt.w	9002584c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002547c:	f103 3eff 	add.w	lr, r3, #4294967295
90025480:	4570      	cmp	r0, lr
90025482:	f280 81e3 	bge.w	9002584c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025486:	b212      	sxth	r2, r2
90025488:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002548a:	fa1f fe81 	uxth.w	lr, r1
9002548e:	fb00 5002 	mla	r0, r0, r2, r5
90025492:	ea4f 150e 	mov.w	r5, lr, lsl #4
90025496:	eb03 0a00 	add.w	sl, r3, r0
9002549a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002549e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
900254a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900254a6:	b29b      	uxth	r3, r3
900254a8:	f1bc 0f00 	cmp.w	ip, #0
900254ac:	f000 817b 	beq.w	900257a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900254b0:	f81a 4002 	ldrb.w	r4, [sl, r2]
900254b4:	eb0a 0b02 	add.w	fp, sl, r2
900254b8:	fa1f fa8c 	uxth.w	sl, ip
900254bc:	940a      	str	r4, [sp, #40]	@ 0x28
900254be:	fb0a fe0e 	mul.w	lr, sl, lr
900254c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
900254c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900254ca:	eba5 050e 	sub.w	r5, r5, lr
900254ce:	940b      	str	r4, [sp, #44]	@ 0x2c
900254d0:	fa1f fa8a 	uxth.w	sl, sl
900254d4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900254d6:	b2ad      	uxth	r5, r5
900254d8:	eba3 030a 	sub.w	r3, r3, sl
900254dc:	fb08 f505 	mul.w	r5, r8, r5
900254e0:	b29b      	uxth	r3, r3
900254e2:	fb09 5303 	mla	r3, r9, r3, r5
900254e6:	fb0a 3304 	mla	r3, sl, r4, r3
900254ea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900254ec:	fb0e 3304 	mla	r3, lr, r4, r3
900254f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900254f4:	2b00      	cmp	r3, #0
900254f6:	f000 80d1 	beq.w	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900254fa:	9c08      	ldr	r4, [sp, #32]
900254fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025500:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025504:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025508:	f000 8152 	beq.w	900257b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002550c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025510:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025514:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025518:	fb0a fe0e 	mul.w	lr, sl, lr
9002551c:	fb09 f000 	mul.w	r0, r9, r0
90025520:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90025524:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025528:	f100 0b20 	add.w	fp, r0, #32
9002552c:	44ce      	add	lr, r9
9002552e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90025532:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025536:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002553a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002553e:	ea4e 0909 	orr.w	r9, lr, r9
90025542:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025546:	8868      	ldrh	r0, [r5, #2]
90025548:	d019      	beq.n	9002557e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002554a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
9002554e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025552:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025556:	fb0a fe0e 	mul.w	lr, sl, lr
9002555a:	fb08 f800 	mul.w	r8, r8, r0
9002555e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90025562:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025566:	f108 0b20 	add.w	fp, r8, #32
9002556a:	4486      	add	lr, r0
9002556c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025570:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025574:	0a00      	lsrs	r0, r0, #8
90025576:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002557a:	ea4e 0000 	orr.w	r0, lr, r0
9002557e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025582:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025586:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002558a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002558e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025592:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025596:	ea4e 0909 	orr.w	r9, lr, r9
9002559a:	ea4a 0000 	orr.w	r0, sl, r0
9002559e:	f1bc 0f00 	cmp.w	ip, #0
900255a2:	f000 8107 	beq.w	900257b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900255a6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
900255aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900255ac:	3a01      	subs	r2, #1
900255ae:	2cff      	cmp	r4, #255	@ 0xff
900255b0:	ea4f 0242 	mov.w	r2, r2, lsl #1
900255b4:	f102 0202 	add.w	r2, r2, #2
900255b8:	eb05 0e02 	add.w	lr, r5, r2
900255bc:	5aaa      	ldrh	r2, [r5, r2]
900255be:	d018      	beq.n	900255f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
900255c0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
900255c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900255c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900255cc:	fb04 fa02 	mul.w	sl, r4, r2
900255d0:	fb08 f805 	mul.w	r8, r8, r5
900255d4:	f10a 0520 	add.w	r5, sl, #32
900255d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900255dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900255e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900255e4:	4442      	add	r2, r8
900255e6:	0a2d      	lsrs	r5, r5, #8
900255e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900255ec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900255f0:	432a      	orrs	r2, r5
900255f2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900255f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
900255f8:	2cff      	cmp	r4, #255	@ 0xff
900255fa:	d01a      	beq.n	90025632 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900255fc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025600:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025604:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025608:	fb04 fa05 	mul.w	sl, r4, r5
9002560c:	fb08 f80e 	mul.w	r8, r8, lr
90025610:	f10a 0e20 	add.w	lr, sl, #32
90025614:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025618:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002561c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025620:	4445      	add	r5, r8
90025622:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025626:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002562a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002562e:	ea45 050e 	orr.w	r5, r5, lr
90025632:	fb1c fe01 	smulbb	lr, ip, r1
90025636:	f1cc 0810 	rsb	r8, ip, #16
9002563a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002563e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025642:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025646:	eba8 0801 	sub.w	r8, r8, r1
9002564a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002564e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025652:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025656:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002565a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002565e:	ea4a 0202 	orr.w	r2, sl, r2
90025662:	4341      	muls	r1, r0
90025664:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025668:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002566c:	fb09 1108 	mla	r1, r9, r8, r1
90025670:	ea4b 0505 	orr.w	r5, fp, r5
90025674:	fb0c 1102 	mla	r1, ip, r2, r1
90025678:	fb0e 1e05 	mla	lr, lr, r5, r1
9002567c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025680:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025684:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025688:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002568c:	ea42 0e0e 	orr.w	lr, r2, lr
90025690:	fa1f f28e 	uxth.w	r2, lr
90025694:	2bff      	cmp	r3, #255	@ 0xff
90025696:	f040 80a1 	bne.w	900257dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002569a:	803a      	strh	r2, [r7, #0]
9002569c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002569e:	3702      	adds	r7, #2
900256a0:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
900256a2:	4413      	add	r3, r2
900256a4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
900256a6:	931d      	str	r3, [sp, #116]	@ 0x74
900256a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900256aa:	441a      	add	r2, r3
900256ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900256ae:	3b01      	subs	r3, #1
900256b0:	921e      	str	r2, [sp, #120]	@ 0x78
900256b2:	930f      	str	r3, [sp, #60]	@ 0x3c
900256b4:	e6c7      	b.n	90025446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900256b6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900256b8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
900256ba:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
900256bc:	4433      	add	r3, r6
900256be:	931d      	str	r3, [sp, #116]	@ 0x74
900256c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900256c2:	441c      	add	r4, r3
900256c4:	9b06      	ldr	r3, [sp, #24]
900256c6:	3b01      	subs	r3, #1
900256c8:	941e      	str	r4, [sp, #120]	@ 0x78
900256ca:	9306      	str	r3, [sp, #24]
900256cc:	9b07      	ldr	r3, [sp, #28]
900256ce:	3302      	adds	r3, #2
900256d0:	9307      	str	r3, [sp, #28]
900256d2:	e696      	b.n	90025402 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900256d4:	d028      	beq.n	90025728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900256d6:	9b06      	ldr	r3, [sp, #24]
900256d8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900256da:	3b01      	subs	r3, #1
900256dc:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900256de:	fb00 5003 	mla	r0, r0, r3, r5
900256e2:	1400      	asrs	r0, r0, #16
900256e4:	f53f aeaa 	bmi.w	9002543c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900256e8:	3901      	subs	r1, #1
900256ea:	4288      	cmp	r0, r1
900256ec:	f6bf aea6 	bge.w	9002543c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900256f0:	9920      	ldr	r1, [sp, #128]	@ 0x80
900256f2:	981e      	ldr	r0, [sp, #120]	@ 0x78
900256f4:	fb01 0303 	mla	r3, r1, r3, r0
900256f8:	141b      	asrs	r3, r3, #16
900256fa:	f53f ae9f 	bmi.w	9002543c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900256fe:	3a01      	subs	r2, #1
90025700:	4293      	cmp	r3, r2
90025702:	f6bf ae9b 	bge.w	9002543c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025706:	9b06      	ldr	r3, [sp, #24]
90025708:	f64f 061f 	movw	r6, #63519	@ 0xf81f
9002570c:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025710:	930f      	str	r3, [sp, #60]	@ 0x3c
90025712:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025714:	2b00      	cmp	r3, #0
90025716:	f300 80b6 	bgt.w	90025886 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
9002571a:	9b06      	ldr	r3, [sp, #24]
9002571c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025720:	9b07      	ldr	r3, [sp, #28]
90025722:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025726:	9307      	str	r3, [sp, #28]
90025728:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002572a:	2b00      	cmp	r3, #0
9002572c:	f340 8218 	ble.w	90025b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025730:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025734:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025736:	ee30 0a04 	vadd.f32	s0, s0, s8
9002573a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002573e:	eef0 6a62 	vmov.f32	s13, s5
90025742:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025746:	ee31 1a05 	vadd.f32	s2, s2, s10
9002574a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002574e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90025752:	eef0 6a43 	vmov.f32	s13, s6
90025756:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002575a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
9002575e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025762:	ee61 7a27 	vmul.f32	s15, s2, s15
90025766:	ee77 2a62 	vsub.f32	s5, s14, s5
9002576a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002576e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025772:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025776:	ee12 2a90 	vmov	r2, s5
9002577a:	eef0 2a47 	vmov.f32	s5, s14
9002577e:	fb92 f3f3 	sdiv	r3, r2, r3
90025782:	ee13 2a10 	vmov	r2, s6
90025786:	931f      	str	r3, [sp, #124]	@ 0x7c
90025788:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002578a:	eeb0 3a67 	vmov.f32	s6, s15
9002578e:	fb92 f3f3 	sdiv	r3, r2, r3
90025792:	9320      	str	r3, [sp, #128]	@ 0x80
90025794:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025796:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025798:	3b01      	subs	r3, #1
9002579a:	930e      	str	r3, [sp, #56]	@ 0x38
9002579c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002579e:	bf08      	it	eq
900257a0:	4613      	moveq	r3, r2
900257a2:	9306      	str	r3, [sp, #24]
900257a4:	e61f      	b.n	900253e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900257a6:	fb08 f505 	mul.w	r5, r8, r5
900257aa:	fb09 5303 	mla	r3, r9, r3, r5
900257ae:	e69f      	b.n	900254f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900257b0:	4681      	mov	r9, r0
900257b2:	e6c6      	b.n	90025542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900257b4:	f1c1 0210 	rsb	r2, r1, #16
900257b8:	4341      	muls	r1, r0
900257ba:	fb09 1902 	mla	r9, r9, r2, r1
900257be:	ea4f 0949 	mov.w	r9, r9, lsl #1
900257c2:	ea4f 5259 	mov.w	r2, r9, lsr #21
900257c6:	ea4f 1959 	mov.w	r9, r9, lsr #5
900257ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900257ce:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900257d2:	ea42 0909 	orr.w	r9, r2, r9
900257d6:	fa1f f289 	uxth.w	r2, r9
900257da:	e75b      	b.n	90025694 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900257dc:	f8b7 c000 	ldrh.w	ip, [r7]
900257e0:	43db      	mvns	r3, r3
900257e2:	ea4f 202c 	mov.w	r0, ip, asr #8
900257e6:	fa5f fe83 	uxtb.w	lr, r3
900257ea:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900257ee:	ea4f 05ec 	mov.w	r5, ip, asr #3
900257f2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900257f6:	fb00 f00e 	mul.w	r0, r0, lr
900257fa:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900257fe:	b2db      	uxtb	r3, r3
90025800:	1c41      	adds	r1, r0, #1
90025802:	fb05 f50e 	mul.w	r5, r5, lr
90025806:	fb03 f30e 	mul.w	r3, r3, lr
9002580a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002580e:	1211      	asrs	r1, r2, #8
90025810:	f021 0107 	bic.w	r1, r1, #7
90025814:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025818:	48d3      	ldr	r0, [pc, #844]	@ (90025b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002581a:	b2c9      	uxtb	r1, r1
9002581c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025820:	1c69      	adds	r1, r5, #1
90025822:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90025826:	10d1      	asrs	r1, r2, #3
90025828:	00d2      	lsls	r2, r2, #3
9002582a:	f021 0103 	bic.w	r1, r1, #3
9002582e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025832:	00c9      	lsls	r1, r1, #3
90025834:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025838:	4301      	orrs	r1, r0
9002583a:	1c58      	adds	r0, r3, #1
9002583c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025840:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025844:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025848:	430a      	orrs	r2, r1
9002584a:	e726      	b.n	9002569a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
9002584c:	f115 0e01 	adds.w	lr, r5, #1
90025850:	f53f af24 	bmi.w	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025854:	4572      	cmp	r2, lr
90025856:	f6ff af21 	blt.w	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002585a:	f110 0e01 	adds.w	lr, r0, #1
9002585e:	f53f af1d 	bmi.w	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025862:	4573      	cmp	r3, lr
90025864:	f6ff af1a 	blt.w	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025868:	b21b      	sxth	r3, r3
9002586a:	b212      	sxth	r2, r2
9002586c:	9301      	str	r3, [sp, #4]
9002586e:	9200      	str	r2, [sp, #0]
90025870:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025874:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025878:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9002587c:	4639      	mov	r1, r7
9002587e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025880:	f7ff fc22 	bl	900250c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025884:	e70a      	b.n	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025886:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025888:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002588c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002588e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025892:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025894:	fa1f fc82 	uxth.w	ip, r2
90025898:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002589c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002589e:	ea4f 100c 	mov.w	r0, ip, lsl #4
900258a2:	141f      	asrs	r7, r3, #16
900258a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900258a6:	141b      	asrs	r3, r3, #16
900258a8:	fb01 3707 	mla	r7, r1, r7, r3
900258ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900258ae:	eb03 0a07 	add.w	sl, r3, r7
900258b2:	f813 9007 	ldrb.w	r9, [r3, r7]
900258b6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900258ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
900258be:	b29b      	uxth	r3, r3
900258c0:	2d00      	cmp	r5, #0
900258c2:	f000 80fe 	beq.w	90025ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900258c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900258ca:	eb0a 0b01 	add.w	fp, sl, r1
900258ce:	fa1f fa85 	uxth.w	sl, r5
900258d2:	940c      	str	r4, [sp, #48]	@ 0x30
900258d4:	fb0a fc0c 	mul.w	ip, sl, ip
900258d8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900258dc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900258e0:	eba0 000c 	sub.w	r0, r0, ip
900258e4:	940d      	str	r4, [sp, #52]	@ 0x34
900258e6:	fa1f fa8a 	uxth.w	sl, sl
900258ea:	b280      	uxth	r0, r0
900258ec:	eba3 030a 	sub.w	r3, r3, sl
900258f0:	fb08 f000 	mul.w	r0, r8, r0
900258f4:	b29b      	uxth	r3, r3
900258f6:	fb09 0303 	mla	r3, r9, r3, r0
900258fa:	980c      	ldr	r0, [sp, #48]	@ 0x30
900258fc:	fb0a 3300 	mla	r3, sl, r0, r3
90025900:	fb0c 3304 	mla	r3, ip, r4, r3
90025904:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025908:	2b00      	cmp	r3, #0
9002590a:	f000 80cc 	beq.w	90025aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
9002590e:	9808      	ldr	r0, [sp, #32]
90025910:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025914:	9c08      	ldr	r4, [sp, #32]
90025916:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002591a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002591e:	f000 80d5 	beq.w	90025acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025922:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025926:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002592a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002592e:	fb0a fc0c 	mul.w	ip, sl, ip
90025932:	fb09 f707 	mul.w	r7, r9, r7
90025936:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002593a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002593e:	f107 0b20 	add.w	fp, r7, #32
90025942:	44cc      	add	ip, r9
90025944:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025948:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002594c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025950:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025954:	ea4c 0909 	orr.w	r9, ip, r9
90025958:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002595c:	8847      	ldrh	r7, [r0, #2]
9002595e:	d019      	beq.n	90025994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025960:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025964:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025968:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002596c:	fb0a fc0c 	mul.w	ip, sl, ip
90025970:	fb08 f807 	mul.w	r8, r8, r7
90025974:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025978:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002597c:	f108 0b20 	add.w	fp, r8, #32
90025980:	44bc      	add	ip, r7
90025982:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025986:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002598a:	0a3f      	lsrs	r7, r7, #8
9002598c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025990:	ea4c 0707 	orr.w	r7, ip, r7
90025994:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025998:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002599c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900259a0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900259a4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900259a8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900259ac:	ea4c 0909 	orr.w	r9, ip, r9
900259b0:	ea4a 0707 	orr.w	r7, sl, r7
900259b4:	2d00      	cmp	r5, #0
900259b6:	f000 808b 	beq.w	90025ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900259ba:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900259be:	3901      	subs	r1, #1
900259c0:	0049      	lsls	r1, r1, #1
900259c2:	3102      	adds	r1, #2
900259c4:	eb00 0c01 	add.w	ip, r0, r1
900259c8:	5a41      	ldrh	r1, [r0, r1]
900259ca:	980c      	ldr	r0, [sp, #48]	@ 0x30
900259cc:	28ff      	cmp	r0, #255	@ 0xff
900259ce:	d019      	beq.n	90025a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900259d0:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900259d4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900259d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900259da:	ea4f 08e4 	mov.w	r8, r4, asr #3
900259de:	fb04 fa01 	mul.w	sl, r4, r1
900259e2:	fb08 f800 	mul.w	r8, r8, r0
900259e6:	f10a 0020 	add.w	r0, sl, #32
900259ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900259ee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900259f2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900259f6:	4441      	add	r1, r8
900259f8:	0a00      	lsrs	r0, r0, #8
900259fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900259fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a02:	4301      	orrs	r1, r0
90025a04:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025a06:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025a0a:	2cff      	cmp	r4, #255	@ 0xff
90025a0c:	d01a      	beq.n	90025a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025a0e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90025a12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a16:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025a1a:	fb04 fa00 	mul.w	sl, r4, r0
90025a1e:	fb08 f80c 	mul.w	r8, r8, ip
90025a22:	f10a 0c20 	add.w	ip, sl, #32
90025a26:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025a2a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025a2e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025a32:	4440      	add	r0, r8
90025a34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025a38:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025a3c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025a40:	ea40 000c 	orr.w	r0, r0, ip
90025a44:	fb15 fc02 	smulbb	ip, r5, r2
90025a48:	f1c5 0810 	rsb	r8, r5, #16
90025a4c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025a50:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025a54:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025a58:	eba8 0802 	sub.w	r8, r8, r2
90025a5c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025a60:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a64:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025a68:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025a6c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025a70:	ea4a 0101 	orr.w	r1, sl, r1
90025a74:	437a      	muls	r2, r7
90025a76:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025a7a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025a7e:	fb09 2208 	mla	r2, r9, r8, r2
90025a82:	ea4b 0000 	orr.w	r0, fp, r0
90025a86:	fb05 2201 	mla	r2, r5, r1, r2
90025a8a:	fb0c 2200 	mla	r2, ip, r0, r2
90025a8e:	0d57      	lsrs	r7, r2, #21
90025a90:	0952      	lsrs	r2, r2, #5
90025a92:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025a96:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025a9a:	433a      	orrs	r2, r7
90025a9c:	2bff      	cmp	r3, #255	@ 0xff
90025a9e:	b292      	uxth	r2, r2
90025aa0:	d127      	bne.n	90025af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90025aa2:	f8ae 2000 	strh.w	r2, [lr]
90025aa6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025aa8:	f10e 0e02 	add.w	lr, lr, #2
90025aac:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025aae:	4413      	add	r3, r2
90025ab0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025ab2:	931d      	str	r3, [sp, #116]	@ 0x74
90025ab4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025ab6:	441a      	add	r2, r3
90025ab8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025aba:	3b01      	subs	r3, #1
90025abc:	921e      	str	r2, [sp, #120]	@ 0x78
90025abe:	930f      	str	r3, [sp, #60]	@ 0x3c
90025ac0:	e627      	b.n	90025712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025ac2:	fb08 f000 	mul.w	r0, r8, r0
90025ac6:	fb09 0303 	mla	r3, r9, r3, r0
90025aca:	e71b      	b.n	90025904 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025acc:	46b9      	mov	r9, r7
90025ace:	e743      	b.n	90025958 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025ad0:	f1c2 0110 	rsb	r1, r2, #16
90025ad4:	437a      	muls	r2, r7
90025ad6:	fb09 2901 	mla	r9, r9, r1, r2
90025ada:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025ade:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025ae2:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025ae6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025aea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025aee:	4302      	orrs	r2, r0
90025af0:	e7d4      	b.n	90025a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025af2:	f8be 7000 	ldrh.w	r7, [lr]
90025af6:	43db      	mvns	r3, r3
90025af8:	4c1b      	ldr	r4, [pc, #108]	@ (90025b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025afa:	1238      	asrs	r0, r7, #8
90025afc:	fa5f fc83 	uxtb.w	ip, r3
90025b00:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025b04:	10fd      	asrs	r5, r7, #3
90025b06:	00fb      	lsls	r3, r7, #3
90025b08:	fb00 f00c 	mul.w	r0, r0, ip
90025b0c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025b10:	b2db      	uxtb	r3, r3
90025b12:	fb05 f10c 	mul.w	r1, r5, ip
90025b16:	1c45      	adds	r5, r0, #1
90025b18:	fb03 f30c 	mul.w	r3, r3, ip
90025b1c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025b20:	1215      	asrs	r5, r2, #8
90025b22:	f025 0507 	bic.w	r5, r5, #7
90025b26:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025b2a:	1c4d      	adds	r5, r1, #1
90025b2c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025b30:	10d1      	asrs	r1, r2, #3
90025b32:	b2c0      	uxtb	r0, r0
90025b34:	f021 0103 	bic.w	r1, r1, #3
90025b38:	00d2      	lsls	r2, r2, #3
90025b3a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025b3e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025b42:	00c9      	lsls	r1, r1, #3
90025b44:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025b48:	4308      	orrs	r0, r1
90025b4a:	1c59      	adds	r1, r3, #1
90025b4c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025b50:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025b54:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025b58:	4318      	orrs	r0, r3
90025b5a:	f8ae 0000 	strh.w	r0, [lr]
90025b5e:	e7a2      	b.n	90025aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025b60:	b013      	add	sp, #76	@ 0x4c
90025b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b66:	bf00      	nop
90025b68:	fffff800 	.word	0xfffff800

90025b6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025b6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025b70:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90025b74:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025b78:	fb05 4c03 	mla	ip, r5, r3, r4
90025b7c:	2d00      	cmp	r5, #0
90025b7e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90025b82:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025b86:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025b8a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90025b8e:	8808      	ldrh	r0, [r1, #0]
90025b90:	f2c0 80a7 	blt.w	90025ce2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025b94:	45aa      	cmp	sl, r5
90025b96:	f340 80a4 	ble.w	90025ce2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025b9a:	2c00      	cmp	r4, #0
90025b9c:	f2c0 809f 	blt.w	90025cde <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025ba0:	42a3      	cmp	r3, r4
90025ba2:	f340 809c 	ble.w	90025cde <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025ba6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90025baa:	1c62      	adds	r2, r4, #1
90025bac:	f100 809c 	bmi.w	90025ce8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025bb0:	4293      	cmp	r3, r2
90025bb2:	f340 8099 	ble.w	90025ce8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025bb6:	f1b9 0f00 	cmp.w	r9, #0
90025bba:	f000 8095 	beq.w	90025ce8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025bbe:	f8be c002 	ldrh.w	ip, [lr, #2]
90025bc2:	3501      	adds	r5, #1
90025bc4:	f100 8094 	bmi.w	90025cf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025bc8:	45aa      	cmp	sl, r5
90025bca:	f340 8091 	ble.w	90025cf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025bce:	2f00      	cmp	r7, #0
90025bd0:	f000 808e 	beq.w	90025cf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025bd4:	2c00      	cmp	r4, #0
90025bd6:	f2c0 8089 	blt.w	90025cec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025bda:	42a3      	cmp	r3, r4
90025bdc:	f340 8086 	ble.w	90025cec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025be0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025be4:	3401      	adds	r4, #1
90025be6:	f100 8086 	bmi.w	90025cf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025bea:	42a3      	cmp	r3, r4
90025bec:	f340 8083 	ble.w	90025cf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025bf0:	f1b9 0f00 	cmp.w	r9, #0
90025bf4:	d07f      	beq.n	90025cf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025bf6:	3301      	adds	r3, #1
90025bf8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025bfc:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025c00:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90025c04:	fb19 fe07 	smulbb	lr, r9, r7
90025c08:	f1c7 0210 	rsb	r2, r7, #16
90025c0c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025c10:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90025c14:	eba2 0209 	sub.w	r2, r2, r9
90025c18:	ea44 0808 	orr.w	r8, r4, r8
90025c1c:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025c20:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025c24:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025c28:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025c2c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025c30:	ea44 0c0c 	orr.w	ip, r4, ip
90025c34:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90025c38:	fb04 f40c 	mul.w	r4, r4, ip
90025c3c:	fb02 4808 	mla	r8, r2, r8, r4
90025c40:	041a      	lsls	r2, r3, #16
90025c42:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025c46:	b2b4      	uxth	r4, r6
90025c48:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025c4c:	43f6      	mvns	r6, r6
90025c4e:	4313      	orrs	r3, r2
90025c50:	042a      	lsls	r2, r5, #16
90025c52:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90025c56:	b2f6      	uxtb	r6, r6
90025c58:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025c5c:	fb0e 8303 	mla	r3, lr, r3, r8
90025c60:	432a      	orrs	r2, r5
90025c62:	fb07 3202 	mla	r2, r7, r2, r3
90025c66:	10c7      	asrs	r7, r0, #3
90025c68:	0d53      	lsrs	r3, r2, #21
90025c6a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90025c6e:	0952      	lsrs	r2, r2, #5
90025c70:	fb17 f706 	smulbb	r7, r7, r6
90025c74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025c78:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025c7c:	431a      	orrs	r2, r3
90025c7e:	b293      	uxth	r3, r2
90025c80:	1202      	asrs	r2, r0, #8
90025c82:	121d      	asrs	r5, r3, #8
90025c84:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025c88:	00c0      	lsls	r0, r0, #3
90025c8a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025c8e:	fb12 f206 	smulbb	r2, r2, r6
90025c92:	b2c0      	uxtb	r0, r0
90025c94:	fb05 2504 	mla	r5, r5, r4, r2
90025c98:	10da      	asrs	r2, r3, #3
90025c9a:	fb10 f006 	smulbb	r0, r0, r6
90025c9e:	00db      	lsls	r3, r3, #3
90025ca0:	b2ad      	uxth	r5, r5
90025ca2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025ca6:	b2db      	uxtb	r3, r3
90025ca8:	fb02 7204 	mla	r2, r2, r4, r7
90025cac:	fb03 0004 	mla	r0, r3, r4, r0
90025cb0:	1c6b      	adds	r3, r5, #1
90025cb2:	b292      	uxth	r2, r2
90025cb4:	b280      	uxth	r0, r0
90025cb6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025cba:	1c43      	adds	r3, r0, #1
90025cbc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025cc0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025cc4:	1c50      	adds	r0, r2, #1
90025cc6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90025cca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025cce:	0952      	lsrs	r2, r2, #5
90025cd0:	432b      	orrs	r3, r5
90025cd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025cd6:	4313      	orrs	r3, r2
90025cd8:	800b      	strh	r3, [r1, #0]
90025cda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025cde:	4680      	mov	r8, r0
90025ce0:	e763      	b.n	90025baa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025ce2:	4684      	mov	ip, r0
90025ce4:	4680      	mov	r8, r0
90025ce6:	e76c      	b.n	90025bc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025ce8:	4684      	mov	ip, r0
90025cea:	e76a      	b.n	90025bc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025cec:	4605      	mov	r5, r0
90025cee:	e779      	b.n	90025be4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025cf0:	4603      	mov	r3, r0
90025cf2:	4605      	mov	r5, r0
90025cf4:	e782      	b.n	90025bfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90025cf6:	4603      	mov	r3, r0
90025cf8:	e780      	b.n	90025bfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90025cfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025cfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025cfe:	b093      	sub	sp, #76	@ 0x4c
90025d00:	461d      	mov	r5, r3
90025d02:	9210      	str	r2, [sp, #64]	@ 0x40
90025d04:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025d06:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90025d0a:	910a      	str	r1, [sp, #40]	@ 0x28
90025d0c:	920b      	str	r2, [sp, #44]	@ 0x2c
90025d0e:	6859      	ldr	r1, [r3, #4]
90025d10:	681b      	ldr	r3, [r3, #0]
90025d12:	9011      	str	r0, [sp, #68]	@ 0x44
90025d14:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90025d18:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90025d1c:	fb01 2707 	mla	r7, r1, r7, r2
90025d20:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90025d24:	9307      	str	r3, [sp, #28]
90025d26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d28:	681b      	ldr	r3, [r3, #0]
90025d2a:	9309      	str	r3, [sp, #36]	@ 0x24
90025d2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90025d2e:	43db      	mvns	r3, r3
90025d30:	b2db      	uxtb	r3, r3
90025d32:	9308      	str	r3, [sp, #32]
90025d34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025d36:	2b00      	cmp	r3, #0
90025d38:	dc03      	bgt.n	90025d42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025d3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90025d3c:	2b00      	cmp	r3, #0
90025d3e:	f340 8205 	ble.w	9002614c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025d42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025d48:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025d4c:	1e48      	subs	r0, r1, #1
90025d4e:	f102 3cff 	add.w	ip, r2, #4294967295
90025d52:	2d00      	cmp	r5, #0
90025d54:	f340 80da 	ble.w	90025f0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90025d58:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025d5c:	ea4f 4326 	mov.w	r3, r6, asr #16
90025d60:	d406      	bmi.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025d62:	4586      	cmp	lr, r0
90025d64:	da04      	bge.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025d66:	2b00      	cmp	r3, #0
90025d68:	db02      	blt.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025d6a:	4563      	cmp	r3, ip
90025d6c:	f2c0 80cf 	blt.w	90025f0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025d70:	f11e 0e01 	adds.w	lr, lr, #1
90025d74:	f100 80c1 	bmi.w	90025efa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025d78:	4571      	cmp	r1, lr
90025d7a:	f2c0 80be 	blt.w	90025efa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025d7e:	3301      	adds	r3, #1
90025d80:	f100 80bb 	bmi.w	90025efa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025d84:	429a      	cmp	r2, r3
90025d86:	f2c0 80b8 	blt.w	90025efa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025d8a:	46a9      	mov	r9, r5
90025d8c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025d90:	f1b9 0f00 	cmp.w	r9, #0
90025d94:	f340 80d8 	ble.w	90025f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025d98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d9a:	1421      	asrs	r1, r4, #16
90025d9c:	ea4f 4026 	mov.w	r0, r6, asr #16
90025da0:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025da4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025da8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025dac:	f100 8112 	bmi.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025db0:	f10e 3aff 	add.w	sl, lr, #4294967295
90025db4:	4551      	cmp	r1, sl
90025db6:	f280 810d 	bge.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025dba:	2800      	cmp	r0, #0
90025dbc:	f2c0 810a 	blt.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025dc0:	f103 3aff 	add.w	sl, r3, #4294967295
90025dc4:	4550      	cmp	r0, sl
90025dc6:	f280 8105 	bge.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025dca:	fa0f f38e 	sxth.w	r3, lr
90025dce:	fb00 1103 	mla	r1, r0, r3, r1
90025dd2:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025dd4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025dd8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90025ddc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025de0:	f1bc 0f00 	cmp.w	ip, #0
90025de4:	d007      	beq.n	90025df6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025de6:	005b      	lsls	r3, r3, #1
90025de8:	eb0a 0003 	add.w	r0, sl, r3
90025dec:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025df0:	930c      	str	r3, [sp, #48]	@ 0x30
90025df2:	8843      	ldrh	r3, [r0, #2]
90025df4:	930d      	str	r3, [sp, #52]	@ 0x34
90025df6:	ea4f 400e 	mov.w	r0, lr, lsl #16
90025dfa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025dfe:	fb12 f30c 	smulbb	r3, r2, ip
90025e02:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025e06:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025e0a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025e0e:	10db      	asrs	r3, r3, #3
90025e10:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e14:	ea40 000e 	orr.w	r0, r0, lr
90025e18:	f1cc 0e10 	rsb	lr, ip, #16
90025e1c:	ea4a 0101 	orr.w	r1, sl, r1
90025e20:	9f08      	ldr	r7, [sp, #32]
90025e22:	ebae 0e02 	sub.w	lr, lr, r2
90025e26:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025e2a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025e2e:	4351      	muls	r1, r2
90025e30:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90025e32:	fb0e 1e00 	mla	lr, lr, r0, r1
90025e36:	990c      	ldr	r1, [sp, #48]	@ 0x30
90025e38:	0410      	lsls	r0, r2, #16
90025e3a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025e3e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025e42:	4310      	orrs	r0, r2
90025e44:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025e46:	0412      	lsls	r2, r2, #16
90025e48:	fb03 e000 	mla	r0, r3, r0, lr
90025e4c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90025e50:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025e54:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025e58:	ea42 020e 	orr.w	r2, r2, lr
90025e5c:	fb03 0302 	mla	r3, r3, r2, r0
90025e60:	f8b8 0000 	ldrh.w	r0, [r8]
90025e64:	0d5a      	lsrs	r2, r3, #21
90025e66:	095b      	lsrs	r3, r3, #5
90025e68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025e6c:	1201      	asrs	r1, r0, #8
90025e6e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025e72:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025e76:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025e7a:	00c0      	lsls	r0, r0, #3
90025e7c:	4313      	orrs	r3, r2
90025e7e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90025e82:	fb11 f107 	smulbb	r1, r1, r7
90025e86:	b2c0      	uxtb	r0, r0
90025e88:	b29b      	uxth	r3, r3
90025e8a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90025e8e:	fb10 f007 	smulbb	r0, r0, r7
90025e92:	fb1e fe07 	smulbb	lr, lr, r7
90025e96:	ea4f 2c23 	mov.w	ip, r3, asr #8
90025e9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90025e9e:	fb0c 1c02 	mla	ip, ip, r2, r1
90025ea2:	10d9      	asrs	r1, r3, #3
90025ea4:	00db      	lsls	r3, r3, #3
90025ea6:	fa1f fc8c 	uxth.w	ip, ip
90025eaa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025eae:	b2db      	uxtb	r3, r3
90025eb0:	fb01 e102 	mla	r1, r1, r2, lr
90025eb4:	fb03 0302 	mla	r3, r3, r2, r0
90025eb8:	b289      	uxth	r1, r1
90025eba:	b29a      	uxth	r2, r3
90025ebc:	f10c 0301 	add.w	r3, ip, #1
90025ec0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025ec4:	1c53      	adds	r3, r2, #1
90025ec6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025eca:	1c4a      	adds	r2, r1, #1
90025ecc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025ed0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025ed4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025ed8:	0949      	lsrs	r1, r1, #5
90025eda:	ea43 030c 	orr.w	r3, r3, ip
90025ede:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025ee2:	430b      	orrs	r3, r1
90025ee4:	f8a8 3000 	strh.w	r3, [r8]
90025ee8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025eea:	f108 0802 	add.w	r8, r8, #2
90025eee:	f109 39ff 	add.w	r9, r9, #4294967295
90025ef2:	441c      	add	r4, r3
90025ef4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025ef6:	441e      	add	r6, r3
90025ef8:	e74a      	b.n	90025d90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025efa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025efc:	3d01      	subs	r5, #1
90025efe:	441c      	add	r4, r3
90025f00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025f02:	441e      	add	r6, r3
90025f04:	9b07      	ldr	r3, [sp, #28]
90025f06:	3302      	adds	r3, #2
90025f08:	9307      	str	r3, [sp, #28]
90025f0a:	e722      	b.n	90025d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025f0c:	d022      	beq.n	90025f54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025f0e:	1e6b      	subs	r3, r5, #1
90025f10:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025f12:	fb00 4003 	mla	r0, r0, r3, r4
90025f16:	1400      	asrs	r0, r0, #16
90025f18:	f53f af37 	bmi.w	90025d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f1c:	3901      	subs	r1, #1
90025f1e:	4288      	cmp	r0, r1
90025f20:	f6bf af33 	bge.w	90025d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f24:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025f26:	fb01 6303 	mla	r3, r1, r3, r6
90025f2a:	141b      	asrs	r3, r3, #16
90025f2c:	f53f af2d 	bmi.w	90025d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f30:	3a01      	subs	r2, #1
90025f32:	4293      	cmp	r3, r2
90025f34:	f6bf af29 	bge.w	90025d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f38:	46a8      	mov	r8, r5
90025f3a:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025f3e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90025f42:	f1b8 0f00 	cmp.w	r8, #0
90025f46:	dc60      	bgt.n	9002600a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025f48:	9b07      	ldr	r3, [sp, #28]
90025f4a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025f4e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025f52:	9307      	str	r3, [sp, #28]
90025f54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f56:	2b00      	cmp	r3, #0
90025f58:	f340 80f8 	ble.w	9002614c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025f5c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025f60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025f62:	ee30 0a04 	vadd.f32	s0, s0, s8
90025f66:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025f6a:	eef0 6a62 	vmov.f32	s13, s5
90025f6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025f72:	ee31 1a05 	vadd.f32	s2, s2, s10
90025f76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f7a:	ee16 4a90 	vmov	r4, s13
90025f7e:	eef0 6a43 	vmov.f32	s13, s6
90025f82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f86:	ee16 6a90 	vmov	r6, s13
90025f8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025f8e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025f92:	ee77 2a62 	vsub.f32	s5, s14, s5
90025f96:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025f9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025f9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025fa2:	ee12 2a90 	vmov	r2, s5
90025fa6:	eef0 2a47 	vmov.f32	s5, s14
90025faa:	fb92 f3f3 	sdiv	r3, r2, r3
90025fae:	ee13 2a10 	vmov	r2, s6
90025fb2:	931f      	str	r3, [sp, #124]	@ 0x7c
90025fb4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025fb6:	eeb0 3a67 	vmov.f32	s6, s15
90025fba:	fb92 f3f3 	sdiv	r3, r2, r3
90025fbe:	9320      	str	r3, [sp, #128]	@ 0x80
90025fc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025fc2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025fc4:	3b01      	subs	r3, #1
90025fc6:	930a      	str	r3, [sp, #40]	@ 0x28
90025fc8:	bf08      	it	eq
90025fca:	4615      	moveq	r5, r2
90025fcc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025fce:	bf18      	it	ne
90025fd0:	461d      	movne	r5, r3
90025fd2:	e6af      	b.n	90025d34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025fd4:	f111 0a01 	adds.w	sl, r1, #1
90025fd8:	d486      	bmi.n	90025ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025fda:	45d6      	cmp	lr, sl
90025fdc:	db84      	blt.n	90025ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025fde:	f110 0a01 	adds.w	sl, r0, #1
90025fe2:	d481      	bmi.n	90025ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025fe4:	4553      	cmp	r3, sl
90025fe6:	f6ff af7f 	blt.w	90025ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025fea:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90025fec:	b21b      	sxth	r3, r3
90025fee:	9101      	str	r1, [sp, #4]
90025ff0:	4641      	mov	r1, r8
90025ff2:	9300      	str	r3, [sp, #0]
90025ff4:	fa0f f38e 	sxth.w	r3, lr
90025ff8:	e9cd 0202 	strd	r0, r2, [sp, #8]
90025ffc:	e9cd c704 	strd	ip, r7, [sp, #16]
90026000:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026002:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026004:	f7ff fdb2 	bl	90025b6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90026008:	e76e      	b.n	90025ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002600a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002600c:	1430      	asrs	r0, r6, #16
9002600e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026010:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026014:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026018:	1423      	asrs	r3, r4, #16
9002601a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002601e:	fb01 3000 	mla	r0, r1, r0, r3
90026022:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026024:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90026028:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
9002602c:	8858      	ldrh	r0, [r3, #2]
9002602e:	f1be 0f00 	cmp.w	lr, #0
90026032:	d00b      	beq.n	9002604c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90026034:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90026038:	3901      	subs	r1, #1
9002603a:	0049      	lsls	r1, r1, #1
9002603c:	3102      	adds	r1, #2
9002603e:	eb03 0b01 	add.w	fp, r3, r1
90026042:	5a5b      	ldrh	r3, [r3, r1]
90026044:	930e      	str	r3, [sp, #56]	@ 0x38
90026046:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002604a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002604c:	ea4f 410c 	mov.w	r1, ip, lsl #16
90026050:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026054:	fb12 f30e 	smulbb	r3, r2, lr
90026058:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002605c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90026060:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026064:	10db      	asrs	r3, r3, #3
90026066:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002606a:	ea41 010c 	orr.w	r1, r1, ip
9002606e:	f1ce 0c10 	rsb	ip, lr, #16
90026072:	ea4b 0000 	orr.w	r0, fp, r0
90026076:	9f08      	ldr	r7, [sp, #32]
90026078:	ebac 0c02 	sub.w	ip, ip, r2
9002607c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026080:	f108 38ff 	add.w	r8, r8, #4294967295
90026084:	4350      	muls	r0, r2
90026086:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002608a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002608c:	fb0c 0c01 	mla	ip, ip, r1, r0
90026090:	980e      	ldr	r0, [sp, #56]	@ 0x38
90026092:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026096:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002609a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002609c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900260a0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900260a4:	0412      	lsls	r2, r2, #16
900260a6:	ea4b 0101 	orr.w	r1, fp, r1
900260aa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900260ae:	fb03 c101 	mla	r1, r3, r1, ip
900260b2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900260b6:	4302      	orrs	r2, r0
900260b8:	fb03 1202 	mla	r2, r3, r2, r1
900260bc:	ea4f 5b52 	mov.w	fp, r2, lsr #21
900260c0:	0952      	lsrs	r2, r2, #5
900260c2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
900260c6:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
900260ca:	f8b9 2000 	ldrh.w	r2, [r9]
900260ce:	ea4b 0303 	orr.w	r3, fp, r3
900260d2:	1211      	asrs	r1, r2, #8
900260d4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900260d8:	b29b      	uxth	r3, r3
900260da:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900260de:	00d2      	lsls	r2, r2, #3
900260e0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
900260e4:	fb11 f107 	smulbb	r1, r1, r7
900260e8:	1218      	asrs	r0, r3, #8
900260ea:	fb1c fc07 	smulbb	ip, ip, r7
900260ee:	b2d2      	uxtb	r2, r2
900260f0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900260f4:	fb12 f207 	smulbb	r2, r2, r7
900260f8:	fb00 100a 	mla	r0, r0, sl, r1
900260fc:	10d9      	asrs	r1, r3, #3
900260fe:	00db      	lsls	r3, r3, #3
90026100:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026104:	b280      	uxth	r0, r0
90026106:	b2db      	uxtb	r3, r3
90026108:	fb01 c10a 	mla	r1, r1, sl, ip
9002610c:	fb03 230a 	mla	r3, r3, sl, r2
90026110:	1c42      	adds	r2, r0, #1
90026112:	b289      	uxth	r1, r1
90026114:	b29b      	uxth	r3, r3
90026116:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002611a:	f101 0c01 	add.w	ip, r1, #1
9002611e:	1c5a      	adds	r2, r3, #1
90026120:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90026124:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90026128:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002612c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002612e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90026132:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90026136:	441c      	add	r4, r3
90026138:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002613c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002613e:	4310      	orrs	r0, r2
90026140:	441e      	add	r6, r3
90026142:	ea40 000c 	orr.w	r0, r0, ip
90026146:	f829 0b02 	strh.w	r0, [r9], #2
9002614a:	e6fa      	b.n	90025f42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
9002614c:	b013      	add	sp, #76	@ 0x4c
9002614e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026152 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90026152:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90026156:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
9002615a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
9002615e:	fb0e 4703 	mla	r7, lr, r3, r4
90026162:	f1be 0f00 	cmp.w	lr, #0
90026166:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
9002616a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
9002616e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90026172:	8808      	ldrh	r0, [r1, #0]
90026174:	db60      	blt.n	90026238 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90026176:	45f1      	cmp	r9, lr
90026178:	dd5e      	ble.n	90026238 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002617a:	2c00      	cmp	r4, #0
9002617c:	db5a      	blt.n	90026234 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002617e:	42a3      	cmp	r3, r4
90026180:	dd58      	ble.n	90026234 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026182:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90026186:	1c62      	adds	r2, r4, #1
90026188:	d459      	bmi.n	9002623e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002618a:	4293      	cmp	r3, r2
9002618c:	dd57      	ble.n	9002623e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002618e:	2d00      	cmp	r5, #0
90026190:	d055      	beq.n	9002623e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026192:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90026196:	f11e 0e01 	adds.w	lr, lr, #1
9002619a:	d454      	bmi.n	90026246 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002619c:	45f1      	cmp	r9, lr
9002619e:	dd52      	ble.n	90026246 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900261a0:	2e00      	cmp	r6, #0
900261a2:	d050      	beq.n	90026246 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900261a4:	2c00      	cmp	r4, #0
900261a6:	db4c      	blt.n	90026242 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900261a8:	42a3      	cmp	r3, r4
900261aa:	dd4a      	ble.n	90026242 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900261ac:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
900261b0:	3401      	adds	r4, #1
900261b2:	d405      	bmi.n	900261c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900261b4:	42a3      	cmp	r3, r4
900261b6:	dd03      	ble.n	900261c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900261b8:	b115      	cbz	r5, 900261c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900261ba:	3301      	adds	r3, #1
900261bc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
900261c0:	fb15 f406 	smulbb	r4, r5, r6
900261c4:	ea4f 430c 	mov.w	r3, ip, lsl #16
900261c8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900261cc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900261d0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900261d4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900261d8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900261dc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900261e0:	ea43 0c0c 	orr.w	ip, r3, ip
900261e4:	f1c6 0310 	rsb	r3, r6, #16
900261e8:	ea4e 0707 	orr.w	r7, lr, r7
900261ec:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900261f0:	1b5b      	subs	r3, r3, r5
900261f2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900261f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900261fa:	437d      	muls	r5, r7
900261fc:	fb03 5c0c 	mla	ip, r3, ip, r5
90026200:	0403      	lsls	r3, r0, #16
90026202:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026206:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002620a:	4318      	orrs	r0, r3
9002620c:	0413      	lsls	r3, r2, #16
9002620e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026212:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90026216:	fb04 c000 	mla	r0, r4, r0, ip
9002621a:	4313      	orrs	r3, r2
9002621c:	fb06 0003 	mla	r0, r6, r3, r0
90026220:	0d43      	lsrs	r3, r0, #21
90026222:	0940      	lsrs	r0, r0, #5
90026224:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026228:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002622c:	4318      	orrs	r0, r3
9002622e:	8008      	strh	r0, [r1, #0]
90026230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90026234:	4684      	mov	ip, r0
90026236:	e7a6      	b.n	90026186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90026238:	4607      	mov	r7, r0
9002623a:	4684      	mov	ip, r0
9002623c:	e7ab      	b.n	90026196 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
9002623e:	4607      	mov	r7, r0
90026240:	e7a9      	b.n	90026196 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90026242:	4602      	mov	r2, r0
90026244:	e7b4      	b.n	900261b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90026246:	4602      	mov	r2, r0
90026248:	e7ba      	b.n	900261c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002624a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002624a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002624e:	b08f      	sub	sp, #60	@ 0x3c
90026250:	461d      	mov	r5, r3
90026252:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026254:	9107      	str	r1, [sp, #28]
90026256:	920c      	str	r2, [sp, #48]	@ 0x30
90026258:	6859      	ldr	r1, [r3, #4]
9002625a:	681b      	ldr	r3, [r3, #0]
9002625c:	900d      	str	r0, [sp, #52]	@ 0x34
9002625e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90026262:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90026266:	fb01 2707 	mla	r7, r1, r7, r2
9002626a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
9002626e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026270:	f8d3 8000 	ldr.w	r8, [r3]
90026274:	9b07      	ldr	r3, [sp, #28]
90026276:	2b00      	cmp	r3, #0
90026278:	dc03      	bgt.n	90026282 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002627a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002627c:	2b00      	cmp	r3, #0
9002627e:	f340 8182 	ble.w	90026586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90026282:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026284:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026288:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002628c:	1e48      	subs	r0, r1, #1
9002628e:	f102 3cff 	add.w	ip, r2, #4294967295
90026292:	2d00      	cmp	r5, #0
90026294:	f340 809b 	ble.w	900263ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90026298:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002629c:	ea4f 4326 	mov.w	r3, r6, asr #16
900262a0:	d406      	bmi.n	900262b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900262a2:	4586      	cmp	lr, r0
900262a4:	da04      	bge.n	900262b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900262a6:	2b00      	cmp	r3, #0
900262a8:	db02      	blt.n	900262b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900262aa:	4563      	cmp	r3, ip
900262ac:	f2c0 8090 	blt.w	900263d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900262b0:	f11e 0e01 	adds.w	lr, lr, #1
900262b4:	f100 8084 	bmi.w	900263c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
900262b8:	4571      	cmp	r1, lr
900262ba:	f2c0 8081 	blt.w	900263c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
900262be:	3301      	adds	r3, #1
900262c0:	d47e      	bmi.n	900263c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
900262c2:	429a      	cmp	r2, r3
900262c4:	db7c      	blt.n	900263c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
900262c6:	46aa      	mov	sl, r5
900262c8:	46b9      	mov	r9, r7
900262ca:	f1ba 0f00 	cmp.w	sl, #0
900262ce:	f340 8099 	ble.w	90026404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900262d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900262d4:	1421      	asrs	r1, r4, #16
900262d6:	ea4f 4026 	mov.w	r0, r6, asr #16
900262da:	f3c4 3203 	ubfx	r2, r4, #12, #4
900262de:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900262e2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900262e6:	f100 80d1 	bmi.w	9002648c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900262ea:	f10e 3bff 	add.w	fp, lr, #4294967295
900262ee:	4559      	cmp	r1, fp
900262f0:	f280 80cc 	bge.w	9002648c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900262f4:	2800      	cmp	r0, #0
900262f6:	f2c0 80c9 	blt.w	9002648c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900262fa:	f103 3bff 	add.w	fp, r3, #4294967295
900262fe:	4558      	cmp	r0, fp
90026300:	f280 80c4 	bge.w	9002648c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026304:	fa0f fe8e 	sxth.w	lr, lr
90026308:	fb00 110e 	mla	r1, r0, lr, r1
9002630c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026310:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90026314:	8841      	ldrh	r1, [r0, #2]
90026316:	f1bc 0f00 	cmp.w	ip, #0
9002631a:	d00b      	beq.n	90026334 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
9002631c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90026320:	3b01      	subs	r3, #1
90026322:	005b      	lsls	r3, r3, #1
90026324:	3302      	adds	r3, #2
90026326:	eb00 0e03 	add.w	lr, r0, r3
9002632a:	5ac3      	ldrh	r3, [r0, r3]
9002632c:	9308      	str	r3, [sp, #32]
9002632e:	f8be 3002 	ldrh.w	r3, [lr, #2]
90026332:	9309      	str	r3, [sp, #36]	@ 0x24
90026334:	ea4f 400b 	mov.w	r0, fp, lsl #16
90026338:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
9002633c:	fb12 f30c 	smulbb	r3, r2, ip
90026340:	f1cc 0e10 	rsb	lr, ip, #16
90026344:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90026348:	10db      	asrs	r3, r3, #3
9002634a:	ebae 0e02 	sub.w	lr, lr, r2
9002634e:	ea40 000b 	orr.w	r0, r0, fp
90026352:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90026356:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002635a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002635e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026362:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90026366:	ea4b 0101 	orr.w	r1, fp, r1
9002636a:	4351      	muls	r1, r2
9002636c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002636e:	fb0e 1e00 	mla	lr, lr, r0, r1
90026372:	0410      	lsls	r0, r2, #16
90026374:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026378:	9908      	ldr	r1, [sp, #32]
9002637a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002637e:	4310      	orrs	r0, r2
90026380:	9a08      	ldr	r2, [sp, #32]
90026382:	0412      	lsls	r2, r2, #16
90026384:	fb03 e000 	mla	r0, r3, r0, lr
90026388:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002638c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026390:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026394:	ea42 020e 	orr.w	r2, r2, lr
90026398:	fb03 0302 	mla	r3, r3, r2, r0
9002639c:	0d5a      	lsrs	r2, r3, #21
9002639e:	095b      	lsrs	r3, r3, #5
900263a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900263a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900263a8:	4313      	orrs	r3, r2
900263aa:	f8a9 3000 	strh.w	r3, [r9]
900263ae:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900263b0:	f109 0902 	add.w	r9, r9, #2
900263b4:	f10a 3aff 	add.w	sl, sl, #4294967295
900263b8:	441c      	add	r4, r3
900263ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900263bc:	441e      	add	r6, r3
900263be:	e784      	b.n	900262ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900263c0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900263c2:	3d01      	subs	r5, #1
900263c4:	3702      	adds	r7, #2
900263c6:	441c      	add	r4, r3
900263c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900263ca:	441e      	add	r6, r3
900263cc:	e761      	b.n	90026292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900263ce:	d01d      	beq.n	9002640c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900263d0:	1e6b      	subs	r3, r5, #1
900263d2:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900263d4:	fb00 4003 	mla	r0, r0, r3, r4
900263d8:	1400      	asrs	r0, r0, #16
900263da:	f53f af74 	bmi.w	900262c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900263de:	3901      	subs	r1, #1
900263e0:	4288      	cmp	r0, r1
900263e2:	f6bf af70 	bge.w	900262c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900263e6:	991c      	ldr	r1, [sp, #112]	@ 0x70
900263e8:	fb01 6303 	mla	r3, r1, r3, r6
900263ec:	141b      	asrs	r3, r3, #16
900263ee:	f53f af6a 	bmi.w	900262c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900263f2:	3a01      	subs	r2, #1
900263f4:	4293      	cmp	r3, r2
900263f6:	f6bf af66 	bge.w	900262c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900263fa:	46a9      	mov	r9, r5
900263fc:	46ba      	mov	sl, r7
900263fe:	f1b9 0f00 	cmp.w	r9, #0
90026402:	dc5b      	bgt.n	900264bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90026404:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026408:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002640c:	9b07      	ldr	r3, [sp, #28]
9002640e:	2b00      	cmp	r3, #0
90026410:	f340 80b9 	ble.w	90026586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90026414:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026418:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002641a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002641e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026422:	eef0 6a62 	vmov.f32	s13, s5
90026426:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002642a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002642e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026432:	ee16 4a90 	vmov	r4, s13
90026436:	eef0 6a43 	vmov.f32	s13, s6
9002643a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002643e:	ee16 6a90 	vmov	r6, s13
90026442:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026446:	ee61 7a27 	vmul.f32	s15, s2, s15
9002644a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002644e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026452:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026456:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002645a:	ee12 2a90 	vmov	r2, s5
9002645e:	eef0 2a47 	vmov.f32	s5, s14
90026462:	fb92 f3f3 	sdiv	r3, r2, r3
90026466:	ee13 2a10 	vmov	r2, s6
9002646a:	931b      	str	r3, [sp, #108]	@ 0x6c
9002646c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002646e:	eeb0 3a67 	vmov.f32	s6, s15
90026472:	fb92 f3f3 	sdiv	r3, r2, r3
90026476:	931c      	str	r3, [sp, #112]	@ 0x70
90026478:	9b07      	ldr	r3, [sp, #28]
9002647a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002647c:	3b01      	subs	r3, #1
9002647e:	9307      	str	r3, [sp, #28]
90026480:	bf08      	it	eq
90026482:	4615      	moveq	r5, r2
90026484:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026486:	bf18      	it	ne
90026488:	461d      	movne	r5, r3
9002648a:	e6f3      	b.n	90026274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002648c:	f111 0b01 	adds.w	fp, r1, #1
90026490:	d48d      	bmi.n	900263ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026492:	45de      	cmp	lr, fp
90026494:	db8b      	blt.n	900263ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026496:	f110 0b01 	adds.w	fp, r0, #1
9002649a:	d488      	bmi.n	900263ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002649c:	455b      	cmp	r3, fp
9002649e:	db86      	blt.n	900263ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900264a0:	b21b      	sxth	r3, r3
900264a2:	e9cd 1001 	strd	r1, r0, [sp, #4]
900264a6:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900264aa:	9300      	str	r3, [sp, #0]
900264ac:	4642      	mov	r2, r8
900264ae:	fa0f f38e 	sxth.w	r3, lr
900264b2:	4649      	mov	r1, r9
900264b4:	980d      	ldr	r0, [sp, #52]	@ 0x34
900264b6:	f7ff fe4c 	bl	90026152 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
900264ba:	e778      	b.n	900263ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900264bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900264be:	1420      	asrs	r0, r4, #16
900264c0:	1431      	asrs	r1, r6, #16
900264c2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900264c6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900264ca:	f3c4 3203 	ubfx	r2, r4, #12, #4
900264ce:	fb03 0101 	mla	r1, r3, r1, r0
900264d2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900264d6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900264da:	8841      	ldrh	r1, [r0, #2]
900264dc:	f1be 0f00 	cmp.w	lr, #0
900264e0:	d00b      	beq.n	900264fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900264e2:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
900264e6:	3b01      	subs	r3, #1
900264e8:	005b      	lsls	r3, r3, #1
900264ea:	3302      	adds	r3, #2
900264ec:	eb00 0b03 	add.w	fp, r0, r3
900264f0:	5ac3      	ldrh	r3, [r0, r3]
900264f2:	930a      	str	r3, [sp, #40]	@ 0x28
900264f4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900264f8:	930b      	str	r3, [sp, #44]	@ 0x2c
900264fa:	ea4f 400c 	mov.w	r0, ip, lsl #16
900264fe:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026502:	fb12 f30e 	smulbb	r3, r2, lr
90026506:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002650a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002650e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026512:	10db      	asrs	r3, r3, #3
90026514:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026518:	ea40 000c 	orr.w	r0, r0, ip
9002651c:	f1ce 0c10 	rsb	ip, lr, #16
90026520:	ea4b 0101 	orr.w	r1, fp, r1
90026524:	f109 39ff 	add.w	r9, r9, #4294967295
90026528:	ebac 0c02 	sub.w	ip, ip, r2
9002652c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026530:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90026534:	4351      	muls	r1, r2
90026536:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026538:	fb0c 1c00 	mla	ip, ip, r0, r1
9002653c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002653e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026542:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90026546:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90026548:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002654c:	0412      	lsls	r2, r2, #16
9002654e:	ea4b 0000 	orr.w	r0, fp, r0
90026552:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90026556:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002655a:	fb03 c000 	mla	r0, r3, r0, ip
9002655e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026562:	ea42 0b0b 	orr.w	fp, r2, fp
90026566:	fb03 000b 	mla	r0, r3, fp, r0
9002656a:	0d43      	lsrs	r3, r0, #21
9002656c:	0940      	lsrs	r0, r0, #5
9002656e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026572:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026576:	4318      	orrs	r0, r3
90026578:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002657a:	441c      	add	r4, r3
9002657c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002657e:	f82a 0b02 	strh.w	r0, [sl], #2
90026582:	441e      	add	r6, r3
90026584:	e73b      	b.n	900263fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90026586:	b00f      	add	sp, #60	@ 0x3c
90026588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002658c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002658c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026590:	b085      	sub	sp, #20
90026592:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026596:	9102      	str	r1, [sp, #8]
90026598:	2c00      	cmp	r4, #0
9002659a:	fb04 7103 	mla	r1, r4, r3, r7
9002659e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900265a2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900265a6:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900265aa:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900265ae:	f2c0 811b 	blt.w	900267e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900265b2:	45a6      	cmp	lr, r4
900265b4:	f340 8118 	ble.w	900267e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900265b8:	2f00      	cmp	r7, #0
900265ba:	f2c0 8113 	blt.w	900267e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900265be:	42bb      	cmp	r3, r7
900265c0:	f340 8110 	ble.w	900267e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900265c4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900265c8:	1c7a      	adds	r2, r7, #1
900265ca:	f100 8110 	bmi.w	900267ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900265ce:	4293      	cmp	r3, r2
900265d0:	f340 810d 	ble.w	900267ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900265d4:	2e00      	cmp	r6, #0
900265d6:	f000 810c 	beq.w	900267f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900265da:	f8dc 1004 	ldr.w	r1, [ip, #4]
900265de:	3401      	adds	r4, #1
900265e0:	f100 810b 	bmi.w	900267fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900265e4:	45a6      	cmp	lr, r4
900265e6:	f340 8108 	ble.w	900267fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900265ea:	2800      	cmp	r0, #0
900265ec:	f000 8108 	beq.w	90026800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900265f0:	2f00      	cmp	r7, #0
900265f2:	f2c0 8100 	blt.w	900267f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900265f6:	42bb      	cmp	r3, r7
900265f8:	f340 80fd 	ble.w	900267f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900265fc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026600:	3701      	adds	r7, #1
90026602:	f100 8100 	bmi.w	90026806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026606:	42bb      	cmp	r3, r7
90026608:	f340 80fd 	ble.w	90026806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002660c:	2e00      	cmp	r6, #0
9002660e:	f000 80fc 	beq.w	9002680a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90026612:	3301      	adds	r3, #1
90026614:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90026618:	b2b6      	uxth	r6, r6
9002661a:	b280      	uxth	r0, r0
9002661c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026620:	fb00 fe06 	mul.w	lr, r0, r6
90026624:	0136      	lsls	r6, r6, #4
90026626:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002662a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002662e:	eba6 070e 	sub.w	r7, r6, lr
90026632:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90026636:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002663a:	b280      	uxth	r0, r0
9002663c:	b2bf      	uxth	r7, r7
9002663e:	1a1b      	subs	r3, r3, r0
90026640:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026644:	fb0a f607 	mul.w	r6, sl, r7
90026648:	b29b      	uxth	r3, r3
9002664a:	fb0b 6603 	mla	r6, fp, r3, r6
9002664e:	fb00 6609 	mla	r6, r0, r9, r6
90026652:	fb0e 6608 	mla	r6, lr, r8, r6
90026656:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002665a:	9600      	str	r6, [sp, #0]
9002665c:	2e00      	cmp	r6, #0
9002665e:	f000 80be 	beq.w	900267de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90026662:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026666:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002666a:	9e02      	ldr	r6, [sp, #8]
9002666c:	fb0b fc0c 	mul.w	ip, fp, ip
90026670:	fb0b f505 	mul.w	r5, fp, r5
90026674:	8836      	ldrh	r6, [r6, #0]
90026676:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002667a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002667e:	9501      	str	r5, [sp, #4]
90026680:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90026684:	44dc      	add	ip, fp
90026686:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002668a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002668e:	9503      	str	r5, [sp, #12]
90026690:	9d01      	ldr	r5, [sp, #4]
90026692:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90026696:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002669a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002669e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900266a2:	fb0a fc0c 	mul.w	ip, sl, ip
900266a6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900266aa:	fb0a fa01 	mul.w	sl, sl, r1
900266ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
900266b2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900266b6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900266ba:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900266be:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900266c2:	4465      	add	r5, ip
900266c4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900266c8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900266cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266d0:	fb09 fc0c 	mul.w	ip, r9, ip
900266d4:	0a2d      	lsrs	r5, r5, #8
900266d6:	fb09 f904 	mul.w	r9, r9, r4
900266da:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900266de:	ea4f 211c 	mov.w	r1, ip, lsr #8
900266e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900266e6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900266ea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900266ee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900266f2:	437d      	muls	r5, r7
900266f4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900266f8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900266fc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026700:	4461      	add	r1, ip
90026702:	fb08 f404 	mul.w	r4, r8, r4
90026706:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002670a:	fb08 f802 	mul.w	r8, r8, r2
9002670e:	0a09      	lsrs	r1, r1, #8
90026710:	0a22      	lsrs	r2, r4, #8
90026712:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90026716:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002671a:	fb07 f70a 	mul.w	r7, r7, sl
9002671e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026722:	4414      	add	r4, r2
90026724:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026728:	0a24      	lsrs	r4, r4, #8
9002672a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002672e:	9a03      	ldr	r2, [sp, #12]
90026730:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90026734:	fb02 5503 	mla	r5, r2, r3, r5
90026738:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002673c:	9a00      	ldr	r2, [sp, #0]
9002673e:	fb04 540e 	mla	r4, r4, lr, r5
90026742:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90026746:	1235      	asrs	r5, r6, #8
90026748:	fb01 4100 	mla	r1, r1, r0, r4
9002674c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026750:	0a09      	lsrs	r1, r1, #8
90026752:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026756:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002675a:	fb03 7101 	mla	r1, r3, r1, r7
9002675e:	fb0e 1e08 	mla	lr, lr, r8, r1
90026762:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90026766:	fb00 e101 	mla	r1, r0, r1, lr
9002676a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9002676e:	b287      	uxth	r7, r0
90026770:	0a09      	lsrs	r1, r1, #8
90026772:	437a      	muls	r2, r7
90026774:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026778:	1c53      	adds	r3, r2, #1
9002677a:	4321      	orrs	r1, r4
9002677c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026780:	0c0a      	lsrs	r2, r1, #16
90026782:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026786:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002678a:	b2c8      	uxtb	r0, r1
9002678c:	fb12 f207 	smulbb	r2, r2, r7
90026790:	fb14 f407 	smulbb	r4, r4, r7
90026794:	b2db      	uxtb	r3, r3
90026796:	fb10 f007 	smulbb	r0, r0, r7
9002679a:	fb05 2503 	mla	r5, r5, r3, r2
9002679e:	10f2      	asrs	r2, r6, #3
900267a0:	00f6      	lsls	r6, r6, #3
900267a2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900267a6:	b2ad      	uxth	r5, r5
900267a8:	b2f6      	uxtb	r6, r6
900267aa:	fb02 4203 	mla	r2, r2, r3, r4
900267ae:	fb06 0303 	mla	r3, r6, r3, r0
900267b2:	b294      	uxth	r4, r2
900267b4:	b299      	uxth	r1, r3
900267b6:	1c6b      	adds	r3, r5, #1
900267b8:	1c62      	adds	r2, r4, #1
900267ba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900267be:	1c4b      	adds	r3, r1, #1
900267c0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900267c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900267c8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900267cc:	0952      	lsrs	r2, r2, #5
900267ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900267d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900267d6:	432b      	orrs	r3, r5
900267d8:	4313      	orrs	r3, r2
900267da:	9a02      	ldr	r2, [sp, #8]
900267dc:	8013      	strh	r3, [r2, #0]
900267de:	b005      	add	sp, #20
900267e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900267e4:	2500      	movs	r5, #0
900267e6:	e6ef      	b.n	900265c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900267e8:	2100      	movs	r1, #0
900267ea:	460d      	mov	r5, r1
900267ec:	e6f7      	b.n	900265de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900267ee:	2100      	movs	r1, #0
900267f0:	e6f5      	b.n	900265de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900267f2:	4631      	mov	r1, r6
900267f4:	e6f3      	b.n	900265de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900267f6:	2400      	movs	r4, #0
900267f8:	e702      	b.n	90026600 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900267fa:	2200      	movs	r2, #0
900267fc:	4614      	mov	r4, r2
900267fe:	e70b      	b.n	90026618 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026800:	4602      	mov	r2, r0
90026802:	4604      	mov	r4, r0
90026804:	e708      	b.n	90026618 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026806:	2200      	movs	r2, #0
90026808:	e706      	b.n	90026618 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002680a:	4632      	mov	r2, r6
9002680c:	e704      	b.n	90026618 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

9002680e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002680e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026812:	b09d      	sub	sp, #116	@ 0x74
90026814:	9219      	str	r2, [sp, #100]	@ 0x64
90026816:	9307      	str	r3, [sp, #28]
90026818:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
9002681a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
9002681e:	901b      	str	r0, [sp, #108]	@ 0x6c
90026820:	931a      	str	r3, [sp, #104]	@ 0x68
90026822:	6850      	ldr	r0, [r2, #4]
90026824:	9117      	str	r1, [sp, #92]	@ 0x5c
90026826:	6812      	ldr	r2, [r2, #0]
90026828:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
9002682c:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90026830:	fb00 1303 	mla	r3, r0, r3, r1
90026834:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026838:	930a      	str	r3, [sp, #40]	@ 0x28
9002683a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002683c:	681b      	ldr	r3, [r3, #0]
9002683e:	9310      	str	r3, [sp, #64]	@ 0x40
90026840:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90026844:	930b      	str	r3, [sp, #44]	@ 0x2c
90026846:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026848:	2b00      	cmp	r3, #0
9002684a:	dc03      	bgt.n	90026854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9002684c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002684e:	2b00      	cmp	r3, #0
90026850:	f340 8375 	ble.w	90026f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026854:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026856:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002685a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002685e:	1e48      	subs	r0, r1, #1
90026860:	1e57      	subs	r7, r2, #1
90026862:	9b07      	ldr	r3, [sp, #28]
90026864:	2b00      	cmp	r3, #0
90026866:	f340 818e 	ble.w	90026b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002686a:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002686e:	ea4f 4326 	mov.w	r3, r6, asr #16
90026872:	d406      	bmi.n	90026882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026874:	4584      	cmp	ip, r0
90026876:	da04      	bge.n	90026882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026878:	2b00      	cmp	r3, #0
9002687a:	db02      	blt.n	90026882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002687c:	42bb      	cmp	r3, r7
9002687e:	f2c0 8183 	blt.w	90026b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026882:	f11c 0c01 	adds.w	ip, ip, #1
90026886:	f100 8173 	bmi.w	90026b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002688a:	4561      	cmp	r1, ip
9002688c:	f2c0 8170 	blt.w	90026b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026890:	3301      	adds	r3, #1
90026892:	f100 816d 	bmi.w	90026b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026896:	429a      	cmp	r2, r3
90026898:	f2c0 816a 	blt.w	90026b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002689c:	9b07      	ldr	r3, [sp, #28]
9002689e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900268a0:	9318      	str	r3, [sp, #96]	@ 0x60
900268a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900268a4:	2b00      	cmp	r3, #0
900268a6:	f340 818c 	ble.w	90026bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900268aa:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
900268ac:	ea4f 4c26 	mov.w	ip, r6, asr #16
900268b0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900268b2:	f3c4 3003 	ubfx	r0, r4, #12, #4
900268b6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900268ba:	1422      	asrs	r2, r4, #16
900268bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
900268c0:	689b      	ldr	r3, [r3, #8]
900268c2:	f100 81cd 	bmi.w	90026c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900268c6:	f103 38ff 	add.w	r8, r3, #4294967295
900268ca:	4542      	cmp	r2, r8
900268cc:	f280 81c8 	bge.w	90026c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900268d0:	f1bc 0f00 	cmp.w	ip, #0
900268d4:	f2c0 81c4 	blt.w	90026c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900268d8:	f10e 38ff 	add.w	r8, lr, #4294967295
900268dc:	45c4      	cmp	ip, r8
900268de:	f280 81bf 	bge.w	90026c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900268e2:	b21b      	sxth	r3, r3
900268e4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900268e6:	fb0c 2203 	mla	r2, ip, r3, r2
900268ea:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900268ee:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900268f2:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900268f6:	2800      	cmp	r0, #0
900268f8:	f000 81a9 	beq.w	90026c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900268fc:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026900:	950c      	str	r5, [sp, #48]	@ 0x30
90026902:	0e2d      	lsrs	r5, r5, #24
90026904:	9513      	str	r5, [sp, #76]	@ 0x4c
90026906:	b181      	cbz	r1, 9002692a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026908:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002690c:	3b01      	subs	r3, #1
9002690e:	009b      	lsls	r3, r3, #2
90026910:	3304      	adds	r3, #4
90026912:	eb08 0c03 	add.w	ip, r8, r3
90026916:	f858 3003 	ldr.w	r3, [r8, r3]
9002691a:	9308      	str	r3, [sp, #32]
9002691c:	0e1b      	lsrs	r3, r3, #24
9002691e:	9311      	str	r3, [sp, #68]	@ 0x44
90026920:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026924:	930d      	str	r3, [sp, #52]	@ 0x34
90026926:	0e1b      	lsrs	r3, r3, #24
90026928:	9314      	str	r3, [sp, #80]	@ 0x50
9002692a:	b280      	uxth	r0, r0
9002692c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002692e:	b289      	uxth	r1, r1
90026930:	fb00 f901 	mul.w	r9, r0, r1
90026934:	0100      	lsls	r0, r0, #4
90026936:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002693a:	eba0 0809 	sub.w	r8, r0, r9
9002693e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026942:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90026944:	b289      	uxth	r1, r1
90026946:	fa1f f888 	uxth.w	r8, r8
9002694a:	1a5b      	subs	r3, r3, r1
9002694c:	fb08 f000 	mul.w	r0, r8, r0
90026950:	b29b      	uxth	r3, r3
90026952:	fb03 000e 	mla	r0, r3, lr, r0
90026956:	fb01 0005 	mla	r0, r1, r5, r0
9002695a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002695c:	fb09 0005 	mla	r0, r9, r5, r0
90026960:	f3c0 2007 	ubfx	r0, r0, #8, #8
90026964:	2800      	cmp	r0, #0
90026966:	f000 80fa 	beq.w	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002696a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002696e:	d01b      	beq.n	900269a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026970:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026974:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026978:	fb0e fa0a 	mul.w	sl, lr, sl
9002697c:	fb0e fe02 	mul.w	lr, lr, r2
90026980:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026984:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026988:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002698c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026990:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026994:	4452      	add	r2, sl
90026996:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002699a:	0a12      	lsrs	r2, r2, #8
9002699c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900269a0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900269a4:	ea42 020c 	orr.w	r2, r2, ip
900269a8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900269aa:	2dff      	cmp	r5, #255	@ 0xff
900269ac:	d021      	beq.n	900269f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900269ae:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900269b0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900269b4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900269b6:	fb05 fb0b 	mul.w	fp, r5, fp
900269ba:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900269bc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900269c0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900269c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900269c6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900269ca:	fb05 fa0a 	mul.w	sl, r5, sl
900269ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900269d2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900269d6:	44de      	add	lr, fp
900269d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900269dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900269e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900269e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900269e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900269ec:	ea4e 050a 	orr.w	r5, lr, sl
900269f0:	950c      	str	r5, [sp, #48]	@ 0x30
900269f2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900269f4:	2dff      	cmp	r5, #255	@ 0xff
900269f6:	d021      	beq.n	90026a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900269f8:	9d08      	ldr	r5, [sp, #32]
900269fa:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900269fe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a00:	fb05 fb0b 	mul.w	fp, r5, fp
90026a04:	9d08      	ldr	r5, [sp, #32]
90026a06:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026a0a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026a10:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026a14:	fb05 fa0a 	mul.w	sl, r5, sl
90026a18:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a1c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026a20:	44de      	add	lr, fp
90026a22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026a26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026a2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a32:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026a36:	ea4e 050a 	orr.w	r5, lr, sl
90026a3a:	9508      	str	r5, [sp, #32]
90026a3c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026a3e:	2dff      	cmp	r5, #255	@ 0xff
90026a40:	d021      	beq.n	90026a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026a42:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026a44:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026a48:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026a4a:	fb05 fb0b 	mul.w	fp, r5, fp
90026a4e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026a50:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026a54:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026a56:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026a5a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026a5e:	fb05 fa0a 	mul.w	sl, r5, sl
90026a62:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a66:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026a6a:	44de      	add	lr, fp
90026a6c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026a70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026a74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a78:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a7c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026a80:	ea4e 050a 	orr.w	r5, lr, sl
90026a84:	950d      	str	r5, [sp, #52]	@ 0x34
90026a86:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026a88:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026a8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026a90:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026a94:	9d08      	ldr	r5, [sp, #32]
90026a96:	fb08 fc0c 	mul.w	ip, r8, ip
90026a9a:	fb03 cc0e 	mla	ip, r3, lr, ip
90026a9e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026aa2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026aa4:	fb01 cc0e 	mla	ip, r1, lr, ip
90026aa8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026aac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026aae:	fb09 cc0e 	mla	ip, r9, lr, ip
90026ab2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026ab6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026ab8:	fb08 f80e 	mul.w	r8, r8, lr
90026abc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026ac0:	fb03 8202 	mla	r2, r3, r2, r8
90026ac4:	9b08      	ldr	r3, [sp, #32]
90026ac6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026aca:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90026ace:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026ad0:	fb01 220a 	mla	r2, r1, sl, r2
90026ad4:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90026ad8:	883b      	ldrh	r3, [r7, #0]
90026ada:	fb09 2901 	mla	r9, r9, r1, r2
90026ade:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026ae0:	1219      	asrs	r1, r3, #8
90026ae2:	4342      	muls	r2, r0
90026ae4:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026ae8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026aec:	1c50      	adds	r0, r2, #1
90026aee:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026af2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90026af6:	ea4c 0c09 	orr.w	ip, ip, r9
90026afa:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026afe:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026b02:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90026b06:	fa5f fc8c 	uxtb.w	ip, ip
90026b0a:	fb12 f205 	smulbb	r2, r2, r5
90026b0e:	b2c0      	uxtb	r0, r0
90026b10:	fb1c fc05 	smulbb	ip, ip, r5
90026b14:	fb01 2100 	mla	r1, r1, r0, r2
90026b18:	10da      	asrs	r2, r3, #3
90026b1a:	fb1e fe05 	smulbb	lr, lr, r5
90026b1e:	00db      	lsls	r3, r3, #3
90026b20:	b289      	uxth	r1, r1
90026b22:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026b26:	b2db      	uxtb	r3, r3
90026b28:	fb02 e200 	mla	r2, r2, r0, lr
90026b2c:	fb03 c300 	mla	r3, r3, r0, ip
90026b30:	b292      	uxth	r2, r2
90026b32:	fa1f fc83 	uxth.w	ip, r3
90026b36:	1c4b      	adds	r3, r1, #1
90026b38:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026b3c:	f10c 0301 	add.w	r3, ip, #1
90026b40:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90026b44:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90026b48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026b4c:	430b      	orrs	r3, r1
90026b4e:	1c51      	adds	r1, r2, #1
90026b50:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026b54:	0952      	lsrs	r2, r2, #5
90026b56:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026b5a:	4313      	orrs	r3, r2
90026b5c:	803b      	strh	r3, [r7, #0]
90026b5e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026b60:	3702      	adds	r7, #2
90026b62:	441c      	add	r4, r3
90026b64:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026b66:	441e      	add	r6, r3
90026b68:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026b6a:	3b01      	subs	r3, #1
90026b6c:	9318      	str	r3, [sp, #96]	@ 0x60
90026b6e:	e698      	b.n	900268a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026b70:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026b72:	441c      	add	r4, r3
90026b74:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026b76:	441e      	add	r6, r3
90026b78:	9b07      	ldr	r3, [sp, #28]
90026b7a:	3b01      	subs	r3, #1
90026b7c:	9307      	str	r3, [sp, #28]
90026b7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026b80:	3302      	adds	r3, #2
90026b82:	930a      	str	r3, [sp, #40]	@ 0x28
90026b84:	e66d      	b.n	90026862 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026b86:	d023      	beq.n	90026bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026b88:	9b07      	ldr	r3, [sp, #28]
90026b8a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90026b8c:	3b01      	subs	r3, #1
90026b8e:	fb00 4003 	mla	r0, r0, r3, r4
90026b92:	1400      	asrs	r0, r0, #16
90026b94:	f53f ae82 	bmi.w	9002689c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026b98:	3901      	subs	r1, #1
90026b9a:	4288      	cmp	r0, r1
90026b9c:	f6bf ae7e 	bge.w	9002689c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026ba0:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90026ba2:	fb01 6303 	mla	r3, r1, r3, r6
90026ba6:	141b      	asrs	r3, r3, #16
90026ba8:	f53f ae78 	bmi.w	9002689c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026bac:	3a01      	subs	r2, #1
90026bae:	4293      	cmp	r3, r2
90026bb0:	f6bf ae74 	bge.w	9002689c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026bb4:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026bb8:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90026bbc:	f1bb 0f00 	cmp.w	fp, #0
90026bc0:	dc6c      	bgt.n	90026c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026bc2:	9b07      	ldr	r3, [sp, #28]
90026bc4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026bc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026bca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026bce:	930a      	str	r3, [sp, #40]	@ 0x28
90026bd0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026bd2:	2b00      	cmp	r3, #0
90026bd4:	f340 81b3 	ble.w	90026f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026bd8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026bdc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026bde:	ee30 0a04 	vadd.f32	s0, s0, s8
90026be2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026be6:	eef0 6a62 	vmov.f32	s13, s5
90026bea:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026bee:	ee31 1a05 	vadd.f32	s2, s2, s10
90026bf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026bf6:	ee16 4a90 	vmov	r4, s13
90026bfa:	eef0 6a43 	vmov.f32	s13, s6
90026bfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026c02:	ee16 6a90 	vmov	r6, s13
90026c06:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026c0a:	ee61 7a27 	vmul.f32	s15, s2, s15
90026c0e:	ee77 2a62 	vsub.f32	s5, s14, s5
90026c12:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026c16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026c1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026c1e:	ee12 2a90 	vmov	r2, s5
90026c22:	eef0 2a47 	vmov.f32	s5, s14
90026c26:	fb92 f3f3 	sdiv	r3, r2, r3
90026c2a:	ee13 2a10 	vmov	r2, s6
90026c2e:	9329      	str	r3, [sp, #164]	@ 0xa4
90026c30:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026c32:	eeb0 3a67 	vmov.f32	s6, s15
90026c36:	fb92 f3f3 	sdiv	r3, r2, r3
90026c3a:	932a      	str	r3, [sp, #168]	@ 0xa8
90026c3c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026c3e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90026c40:	3b01      	subs	r3, #1
90026c42:	9317      	str	r3, [sp, #92]	@ 0x5c
90026c44:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026c46:	bf08      	it	eq
90026c48:	4613      	moveq	r3, r2
90026c4a:	9307      	str	r3, [sp, #28]
90026c4c:	e5fb      	b.n	90026846 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026c4e:	2900      	cmp	r1, #0
90026c50:	f43f ae6b 	beq.w	9002692a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026c54:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026c58:	9308      	str	r3, [sp, #32]
90026c5a:	0e1b      	lsrs	r3, r3, #24
90026c5c:	9311      	str	r3, [sp, #68]	@ 0x44
90026c5e:	e664      	b.n	9002692a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026c60:	f112 0801 	adds.w	r8, r2, #1
90026c64:	f53f af7b 	bmi.w	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026c68:	4543      	cmp	r3, r8
90026c6a:	f6ff af78 	blt.w	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026c6e:	f11c 0801 	adds.w	r8, ip, #1
90026c72:	f53f af74 	bmi.w	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026c76:	45c6      	cmp	lr, r8
90026c78:	f6ff af71 	blt.w	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026c7c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90026c7e:	b21b      	sxth	r3, r3
90026c80:	9201      	str	r2, [sp, #4]
90026c82:	fa0f f28e 	sxth.w	r2, lr
90026c86:	e9cd 1504 	strd	r1, r5, [sp, #16]
90026c8a:	e9cd c002 	strd	ip, r0, [sp, #8]
90026c8e:	9200      	str	r2, [sp, #0]
90026c90:	4639      	mov	r1, r7
90026c92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026c94:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026c96:	f7ff fc79 	bl	9002658c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90026c9a:	e760      	b.n	90026b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026c9c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026c9e:	1427      	asrs	r7, r4, #16
90026ca0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026ca2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026ca6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026caa:	1433      	asrs	r3, r6, #16
90026cac:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026cb0:	fb01 7303 	mla	r3, r1, r3, r7
90026cb4:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90026cb8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90026cbc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026cc0:	2a00      	cmp	r2, #0
90026cc2:	f000 8133 	beq.w	90026f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90026cc6:	687d      	ldr	r5, [r7, #4]
90026cc8:	950e      	str	r5, [sp, #56]	@ 0x38
90026cca:	0e2d      	lsrs	r5, r5, #24
90026ccc:	9515      	str	r5, [sp, #84]	@ 0x54
90026cce:	b178      	cbz	r0, 90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026cd0:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90026cd4:	3901      	subs	r1, #1
90026cd6:	0089      	lsls	r1, r1, #2
90026cd8:	3104      	adds	r1, #4
90026cda:	eb07 0e01 	add.w	lr, r7, r1
90026cde:	5879      	ldr	r1, [r7, r1]
90026ce0:	9109      	str	r1, [sp, #36]	@ 0x24
90026ce2:	0e09      	lsrs	r1, r1, #24
90026ce4:	9112      	str	r1, [sp, #72]	@ 0x48
90026ce6:	f8de 1004 	ldr.w	r1, [lr, #4]
90026cea:	910f      	str	r1, [sp, #60]	@ 0x3c
90026cec:	0e09      	lsrs	r1, r1, #24
90026cee:	9116      	str	r1, [sp, #88]	@ 0x58
90026cf0:	b292      	uxth	r2, r2
90026cf2:	9915      	ldr	r1, [sp, #84]	@ 0x54
90026cf4:	b280      	uxth	r0, r0
90026cf6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026cf8:	fb02 f800 	mul.w	r8, r2, r0
90026cfc:	0112      	lsls	r2, r2, #4
90026cfe:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026d02:	eba2 0e08 	sub.w	lr, r2, r8
90026d06:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90026d0a:	b280      	uxth	r0, r0
90026d0c:	fa1f fe8e 	uxth.w	lr, lr
90026d10:	1a12      	subs	r2, r2, r0
90026d12:	fb0e f101 	mul.w	r1, lr, r1
90026d16:	b292      	uxth	r2, r2
90026d18:	fb02 110c 	mla	r1, r2, ip, r1
90026d1c:	fb00 1105 	mla	r1, r0, r5, r1
90026d20:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026d22:	fb08 1105 	mla	r1, r8, r5, r1
90026d26:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026d2a:	2900      	cmp	r1, #0
90026d2c:	f000 80f5 	beq.w	90026f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026d30:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026d34:	d019      	beq.n	90026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90026d36:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026d3a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026d3e:	fb0c fa0a 	mul.w	sl, ip, sl
90026d42:	fb0c fc03 	mul.w	ip, ip, r3
90026d46:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026d4a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026d4e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90026d52:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026d56:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026d5a:	4453      	add	r3, sl
90026d5c:	0a3f      	lsrs	r7, r7, #8
90026d5e:	0a1b      	lsrs	r3, r3, #8
90026d60:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026d64:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026d68:	433b      	orrs	r3, r7
90026d6a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026d6c:	2dff      	cmp	r5, #255	@ 0xff
90026d6e:	d020      	beq.n	90026db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026d70:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026d72:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026d76:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026d78:	436f      	muls	r7, r5
90026d7a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026d7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026d80:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026d84:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026d86:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026d8a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026d8e:	fb05 fa0a 	mul.w	sl, r5, sl
90026d92:	44bc      	add	ip, r7
90026d94:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026d98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026d9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026da0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026da4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026da8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026dac:	ea4c 050a 	orr.w	r5, ip, sl
90026db0:	950e      	str	r5, [sp, #56]	@ 0x38
90026db2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026db4:	2dff      	cmp	r5, #255	@ 0xff
90026db6:	d020      	beq.n	90026dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026db8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026dba:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026dbe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026dc0:	436f      	muls	r7, r5
90026dc2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026dc4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026dc8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026dcc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026dce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026dd2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026dd6:	fb05 fa0a 	mul.w	sl, r5, sl
90026dda:	44bc      	add	ip, r7
90026ddc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026de0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026de4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026de8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026dec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026df0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026df4:	ea4c 050a 	orr.w	r5, ip, sl
90026df8:	9509      	str	r5, [sp, #36]	@ 0x24
90026dfa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026dfc:	2dff      	cmp	r5, #255	@ 0xff
90026dfe:	d020      	beq.n	90026e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026e00:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026e02:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026e06:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026e08:	436f      	muls	r7, r5
90026e0a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026e0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026e10:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026e14:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026e16:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026e1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e1e:	fb05 fa0a 	mul.w	sl, r5, sl
90026e22:	44bc      	add	ip, r7
90026e24:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026e30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e38:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026e3c:	ea4c 050a 	orr.w	r5, ip, sl
90026e40:	950f      	str	r5, [sp, #60]	@ 0x3c
90026e42:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026e44:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90026e48:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026e4c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026e50:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026e52:	fb0e f707 	mul.w	r7, lr, r7
90026e56:	fb02 770c 	mla	r7, r2, ip, r7
90026e5a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026e5e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026e60:	fb00 770c 	mla	r7, r0, ip, r7
90026e64:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026e68:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026e6a:	fb08 770c 	mla	r7, r8, ip, r7
90026e6e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026e72:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026e74:	fb0e fe0c 	mul.w	lr, lr, ip
90026e78:	0a3f      	lsrs	r7, r7, #8
90026e7a:	fb02 e303 	mla	r3, r2, r3, lr
90026e7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026e80:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026e84:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90026e88:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026e8a:	fb00 330a 	mla	r3, r0, sl, r3
90026e8e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90026e92:	f8b9 0000 	ldrh.w	r0, [r9]
90026e96:	fb08 3c0c 	mla	ip, r8, ip, r3
90026e9a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90026e9c:	1202      	asrs	r2, r0, #8
90026e9e:	4359      	muls	r1, r3
90026ea0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026ea4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026ea8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026eac:	1c4b      	adds	r3, r1, #1
90026eae:	ea47 070c 	orr.w	r7, r7, ip
90026eb2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026eb6:	0c3b      	lsrs	r3, r7, #16
90026eb8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026ebc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026ec0:	b2ff      	uxtb	r7, r7
90026ec2:	fb13 f305 	smulbb	r3, r3, r5
90026ec6:	b2c9      	uxtb	r1, r1
90026ec8:	fb17 f705 	smulbb	r7, r7, r5
90026ecc:	fb02 3201 	mla	r2, r2, r1, r3
90026ed0:	10c3      	asrs	r3, r0, #3
90026ed2:	fb1c fc05 	smulbb	ip, ip, r5
90026ed6:	00c0      	lsls	r0, r0, #3
90026ed8:	b292      	uxth	r2, r2
90026eda:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026ede:	b2c0      	uxtb	r0, r0
90026ee0:	fb03 c301 	mla	r3, r3, r1, ip
90026ee4:	fb00 7001 	mla	r0, r0, r1, r7
90026ee8:	1c51      	adds	r1, r2, #1
90026eea:	b29b      	uxth	r3, r3
90026eec:	b280      	uxth	r0, r0
90026eee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026ef2:	f100 0c01 	add.w	ip, r0, #1
90026ef6:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90026efa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026efe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026f02:	ea4c 0202 	orr.w	r2, ip, r2
90026f06:	f103 0c01 	add.w	ip, r3, #1
90026f0a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026f0e:	095b      	lsrs	r3, r3, #5
90026f10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026f14:	431a      	orrs	r2, r3
90026f16:	f8a9 2000 	strh.w	r2, [r9]
90026f1a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026f1c:	f109 0902 	add.w	r9, r9, #2
90026f20:	f10b 3bff 	add.w	fp, fp, #4294967295
90026f24:	441c      	add	r4, r3
90026f26:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026f28:	441e      	add	r6, r3
90026f2a:	e647      	b.n	90026bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026f2c:	2800      	cmp	r0, #0
90026f2e:	f43f aedf 	beq.w	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026f32:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026f36:	9109      	str	r1, [sp, #36]	@ 0x24
90026f38:	0e09      	lsrs	r1, r1, #24
90026f3a:	9112      	str	r1, [sp, #72]	@ 0x48
90026f3c:	e6d8      	b.n	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026f3e:	b01d      	add	sp, #116	@ 0x74
90026f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026f44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026f48:	b085      	sub	sp, #20
90026f4a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026f4e:	9102      	str	r1, [sp, #8]
90026f50:	2c00      	cmp	r4, #0
90026f52:	fb04 7103 	mla	r1, r4, r3, r7
90026f56:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026f5a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026f5e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026f62:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026f66:	f2c0 810c 	blt.w	90027182 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026f6a:	45a6      	cmp	lr, r4
90026f6c:	f340 8109 	ble.w	90027182 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026f70:	2f00      	cmp	r7, #0
90026f72:	f2c0 8104 	blt.w	9002717e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026f76:	42bb      	cmp	r3, r7
90026f78:	f340 8101 	ble.w	9002717e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026f7c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026f80:	1c7a      	adds	r2, r7, #1
90026f82:	f100 8101 	bmi.w	90027188 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026f86:	4293      	cmp	r3, r2
90026f88:	f340 80fe 	ble.w	90027188 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026f8c:	2e00      	cmp	r6, #0
90026f8e:	f000 80fd 	beq.w	9002718c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026f92:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026f96:	3401      	adds	r4, #1
90026f98:	f100 80fc 	bmi.w	90027194 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026f9c:	45a6      	cmp	lr, r4
90026f9e:	f340 80f9 	ble.w	90027194 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026fa2:	2800      	cmp	r0, #0
90026fa4:	f000 80f9 	beq.w	9002719a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026fa8:	2f00      	cmp	r7, #0
90026faa:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90026fae:	f2c0 80ef 	blt.w	90027190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026fb2:	42bb      	cmp	r3, r7
90026fb4:	f340 80ec 	ble.w	90027190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026fb8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026fbc:	3701      	adds	r7, #1
90026fbe:	f100 80ef 	bmi.w	900271a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026fc2:	42bb      	cmp	r3, r7
90026fc4:	f340 80ec 	ble.w	900271a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026fc8:	2e00      	cmp	r6, #0
90026fca:	f000 80eb 	beq.w	900271a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90026fce:	6852      	ldr	r2, [r2, #4]
90026fd0:	b2b6      	uxth	r6, r6
90026fd2:	b280      	uxth	r0, r0
90026fd4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026fd8:	fb00 fe06 	mul.w	lr, r0, r6
90026fdc:	0136      	lsls	r6, r6, #4
90026fde:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026fe2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026fe6:	eba6 070e 	sub.w	r7, r6, lr
90026fea:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90026fee:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026ff2:	b280      	uxth	r0, r0
90026ff4:	b2bf      	uxth	r7, r7
90026ff6:	1a1b      	subs	r3, r3, r0
90026ff8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026ffc:	fb07 f60a 	mul.w	r6, r7, sl
90027000:	b29b      	uxth	r3, r3
90027002:	fb0b 6603 	mla	r6, fp, r3, r6
90027006:	fb00 6609 	mla	r6, r0, r9, r6
9002700a:	fb0e 6608 	mla	r6, lr, r8, r6
9002700e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90027012:	9600      	str	r6, [sp, #0]
90027014:	2e00      	cmp	r6, #0
90027016:	f000 80af 	beq.w	90027178 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
9002701a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002701e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90027022:	9e02      	ldr	r6, [sp, #8]
90027024:	fb0b fc0c 	mul.w	ip, fp, ip
90027028:	fb0b f505 	mul.w	r5, fp, r5
9002702c:	8836      	ldrh	r6, [r6, #0]
9002702e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90027032:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027036:	9501      	str	r5, [sp, #4]
90027038:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
9002703c:	44dc      	add	ip, fp
9002703e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027042:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90027046:	9503      	str	r5, [sp, #12]
90027048:	9d01      	ldr	r5, [sp, #4]
9002704a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
9002704e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90027052:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90027056:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002705a:	fb0a fc0c 	mul.w	ip, sl, ip
9002705e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90027062:	fb0a fa01 	mul.w	sl, sl, r1
90027066:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002706a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002706e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90027072:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027076:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002707a:	4465      	add	r5, ip
9002707c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90027080:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90027084:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027088:	fb09 fc0c 	mul.w	ip, r9, ip
9002708c:	0a2d      	lsrs	r5, r5, #8
9002708e:	fb09 f904 	mul.w	r9, r9, r4
90027092:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027096:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002709a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002709e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900270a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900270a6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900270aa:	437d      	muls	r5, r7
900270ac:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900270b0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900270b4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900270b8:	4461      	add	r1, ip
900270ba:	fb08 f404 	mul.w	r4, r8, r4
900270be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900270c2:	fb08 f802 	mul.w	r8, r8, r2
900270c6:	0a09      	lsrs	r1, r1, #8
900270c8:	0a22      	lsrs	r2, r4, #8
900270ca:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900270ce:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900270d2:	fb07 f70a 	mul.w	r7, r7, sl
900270d6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900270da:	4414      	add	r4, r2
900270dc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900270e0:	0a24      	lsrs	r4, r4, #8
900270e2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900270e6:	9a03      	ldr	r2, [sp, #12]
900270e8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900270ec:	fb02 5503 	mla	r5, r2, r3, r5
900270f0:	ea4f 2818 	mov.w	r8, r8, lsr #8
900270f4:	fb04 540e 	mla	r4, r4, lr, r5
900270f8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900270fc:	fb01 4100 	mla	r1, r1, r0, r4
90027100:	0a09      	lsrs	r1, r1, #8
90027102:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90027106:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002710a:	fb03 7101 	mla	r1, r3, r1, r7
9002710e:	9b00      	ldr	r3, [sp, #0]
90027110:	fb0e 1e08 	mla	lr, lr, r8, r1
90027114:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90027118:	43da      	mvns	r2, r3
9002711a:	1233      	asrs	r3, r6, #8
9002711c:	fb00 e101 	mla	r1, r0, r1, lr
90027120:	10f0      	asrs	r0, r6, #3
90027122:	b2d2      	uxtb	r2, r2
90027124:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027128:	0a09      	lsrs	r1, r1, #8
9002712a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002712e:	00f6      	lsls	r6, r6, #3
90027130:	4353      	muls	r3, r2
90027132:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90027136:	4350      	muls	r0, r2
90027138:	b2f6      	uxtb	r6, r6
9002713a:	4321      	orrs	r1, r4
9002713c:	4356      	muls	r6, r2
9002713e:	1c5a      	adds	r2, r3, #1
90027140:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027144:	0c0b      	lsrs	r3, r1, #16
90027146:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002714a:	1c42      	adds	r2, r0, #1
9002714c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027150:	0a0a      	lsrs	r2, r1, #8
90027152:	021b      	lsls	r3, r3, #8
90027154:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90027158:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
9002715c:	00d2      	lsls	r2, r2, #3
9002715e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027162:	4313      	orrs	r3, r2
90027164:	1c72      	adds	r2, r6, #1
90027166:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002716a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
9002716e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027172:	4319      	orrs	r1, r3
90027174:	9b02      	ldr	r3, [sp, #8]
90027176:	8019      	strh	r1, [r3, #0]
90027178:	b005      	add	sp, #20
9002717a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002717e:	2500      	movs	r5, #0
90027180:	e6fe      	b.n	90026f80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90027182:	2100      	movs	r1, #0
90027184:	460d      	mov	r5, r1
90027186:	e706      	b.n	90026f96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027188:	2100      	movs	r1, #0
9002718a:	e704      	b.n	90026f96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002718c:	4631      	mov	r1, r6
9002718e:	e702      	b.n	90026f96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027190:	2400      	movs	r4, #0
90027192:	e713      	b.n	90026fbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90027194:	2200      	movs	r2, #0
90027196:	4614      	mov	r4, r2
90027198:	e71a      	b.n	90026fd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002719a:	4602      	mov	r2, r0
9002719c:	4604      	mov	r4, r0
9002719e:	e717      	b.n	90026fd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900271a0:	2200      	movs	r2, #0
900271a2:	e715      	b.n	90026fd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900271a4:	4632      	mov	r2, r6
900271a6:	e713      	b.n	90026fd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

900271a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900271a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900271ac:	b09b      	sub	sp, #108	@ 0x6c
900271ae:	9218      	str	r2, [sp, #96]	@ 0x60
900271b0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900271b2:	9019      	str	r0, [sp, #100]	@ 0x64
900271b4:	9116      	str	r1, [sp, #88]	@ 0x58
900271b6:	6850      	ldr	r0, [r2, #4]
900271b8:	9307      	str	r3, [sp, #28]
900271ba:	6812      	ldr	r2, [r2, #0]
900271bc:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
900271c0:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
900271c4:	fb00 1303 	mla	r3, r0, r3, r1
900271c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900271cc:	930a      	str	r3, [sp, #40]	@ 0x28
900271ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900271d0:	681b      	ldr	r3, [r3, #0]
900271d2:	930f      	str	r3, [sp, #60]	@ 0x3c
900271d4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900271d6:	2b00      	cmp	r3, #0
900271d8:	dc03      	bgt.n	900271e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900271da:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900271dc:	2b00      	cmp	r3, #0
900271de:	f340 8387 	ble.w	900278f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900271e2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900271e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900271e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900271ec:	1e48      	subs	r0, r1, #1
900271ee:	1e57      	subs	r7, r2, #1
900271f0:	9b07      	ldr	r3, [sp, #28]
900271f2:	2b00      	cmp	r3, #0
900271f4:	f340 8166 	ble.w	900274c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900271f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
900271fc:	ea4f 4326 	mov.w	r3, r6, asr #16
90027200:	d406      	bmi.n	90027210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027202:	4584      	cmp	ip, r0
90027204:	da04      	bge.n	90027210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027206:	2b00      	cmp	r3, #0
90027208:	db02      	blt.n	90027210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002720a:	42bb      	cmp	r3, r7
9002720c:	f2c0 815b 	blt.w	900274c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027210:	f11c 0c01 	adds.w	ip, ip, #1
90027214:	f100 814b 	bmi.w	900274ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027218:	4561      	cmp	r1, ip
9002721a:	f2c0 8148 	blt.w	900274ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002721e:	3301      	adds	r3, #1
90027220:	f100 8145 	bmi.w	900274ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027224:	429a      	cmp	r2, r3
90027226:	f2c0 8142 	blt.w	900274ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002722a:	9b07      	ldr	r3, [sp, #28]
9002722c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002722e:	9317      	str	r3, [sp, #92]	@ 0x5c
90027230:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027232:	2b00      	cmp	r3, #0
90027234:	f340 8165 	ble.w	90027502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90027238:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
9002723a:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002723e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027240:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027244:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90027248:	1422      	asrs	r2, r4, #16
9002724a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002724e:	689b      	ldr	r3, [r3, #8]
90027250:	f100 81d5 	bmi.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027254:	f103 38ff 	add.w	r8, r3, #4294967295
90027258:	4542      	cmp	r2, r8
9002725a:	f280 81d0 	bge.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002725e:	f1bc 0f00 	cmp.w	ip, #0
90027262:	f2c0 81cc 	blt.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027266:	f10e 38ff 	add.w	r8, lr, #4294967295
9002726a:	45c4      	cmp	ip, r8
9002726c:	f280 81c7 	bge.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027270:	b21b      	sxth	r3, r3
90027272:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027274:	fb0c 2203 	mla	r2, ip, r3, r2
90027278:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002727c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027280:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027284:	2900      	cmp	r1, #0
90027286:	f000 8182 	beq.w	9002758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002728a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002728e:	950b      	str	r5, [sp, #44]	@ 0x2c
90027290:	0e2d      	lsrs	r5, r5, #24
90027292:	9512      	str	r5, [sp, #72]	@ 0x48
90027294:	b180      	cbz	r0, 900272b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027296:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002729a:	3b01      	subs	r3, #1
9002729c:	009b      	lsls	r3, r3, #2
9002729e:	3304      	adds	r3, #4
900272a0:	eb08 0c03 	add.w	ip, r8, r3
900272a4:	f858 3003 	ldr.w	r3, [r8, r3]
900272a8:	9308      	str	r3, [sp, #32]
900272aa:	0e1b      	lsrs	r3, r3, #24
900272ac:	9310      	str	r3, [sp, #64]	@ 0x40
900272ae:	f8dc 3004 	ldr.w	r3, [ip, #4]
900272b2:	930c      	str	r3, [sp, #48]	@ 0x30
900272b4:	0e1b      	lsrs	r3, r3, #24
900272b6:	9313      	str	r3, [sp, #76]	@ 0x4c
900272b8:	b289      	uxth	r1, r1
900272ba:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900272bc:	b280      	uxth	r0, r0
900272be:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900272c0:	fb01 f900 	mul.w	r9, r1, r0
900272c4:	0109      	lsls	r1, r1, #4
900272c6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900272ca:	eba1 0809 	sub.w	r8, r1, r9
900272ce:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
900272d2:	b280      	uxth	r0, r0
900272d4:	fa1f f888 	uxth.w	r8, r8
900272d8:	1a09      	subs	r1, r1, r0
900272da:	fb08 f303 	mul.w	r3, r8, r3
900272de:	b289      	uxth	r1, r1
900272e0:	fb01 330e 	mla	r3, r1, lr, r3
900272e4:	fb00 3305 	mla	r3, r0, r5, r3
900272e8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900272ea:	fb09 3305 	mla	r3, r9, r5, r3
900272ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
900272f2:	2b00      	cmp	r3, #0
900272f4:	f000 80d2 	beq.w	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900272f8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900272fc:	d01b      	beq.n	90027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900272fe:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90027302:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027306:	fb0e fa0a 	mul.w	sl, lr, sl
9002730a:	fb0e fe02 	mul.w	lr, lr, r2
9002730e:	ea4f 221a 	mov.w	r2, sl, lsr #8
90027312:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90027316:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002731a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002731e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90027322:	4452      	add	r2, sl
90027324:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027328:	0a12      	lsrs	r2, r2, #8
9002732a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002732e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027332:	ea42 020c 	orr.w	r2, r2, ip
90027336:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027338:	2dff      	cmp	r5, #255	@ 0xff
9002733a:	d021      	beq.n	90027380 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
9002733c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002733e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027342:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027344:	fb05 fb0b 	mul.w	fp, r5, fp
90027348:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002734a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002734e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027350:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027354:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027358:	fb05 fa0a 	mul.w	sl, r5, sl
9002735c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027360:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027364:	44de      	add	lr, fp
90027366:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002736a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002736e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027372:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027376:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002737a:	ea4e 050a 	orr.w	r5, lr, sl
9002737e:	950b      	str	r5, [sp, #44]	@ 0x2c
90027380:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027382:	2dff      	cmp	r5, #255	@ 0xff
90027384:	d021      	beq.n	900273ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90027386:	9d08      	ldr	r5, [sp, #32]
90027388:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002738c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002738e:	fb05 fb0b 	mul.w	fp, r5, fp
90027392:	9d08      	ldr	r5, [sp, #32]
90027394:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027398:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002739a:	fb05 fa0e 	mul.w	sl, r5, lr
9002739e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900273a2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900273a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900273aa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900273ae:	44de      	add	lr, fp
900273b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900273b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900273b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900273bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900273c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900273c4:	ea4e 050a 	orr.w	r5, lr, sl
900273c8:	9508      	str	r5, [sp, #32]
900273ca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900273cc:	2dff      	cmp	r5, #255	@ 0xff
900273ce:	d021      	beq.n	90027414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
900273d0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900273d2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900273d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900273d8:	fb05 fb0b 	mul.w	fp, r5, fp
900273dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900273de:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900273e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900273e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900273e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900273ec:	fb05 fa0a 	mul.w	sl, r5, sl
900273f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900273f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900273f8:	44de      	add	lr, fp
900273fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900273fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027406:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002740a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002740e:	ea4e 050a 	orr.w	r5, lr, sl
90027412:	950c      	str	r5, [sp, #48]	@ 0x30
90027414:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90027416:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002741a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002741e:	2bff      	cmp	r3, #255	@ 0xff
90027420:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027424:	9d08      	ldr	r5, [sp, #32]
90027426:	fb08 fc0c 	mul.w	ip, r8, ip
9002742a:	fb01 cc0e 	mla	ip, r1, lr, ip
9002742e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90027432:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027434:	fb00 cc0e 	mla	ip, r0, lr, ip
90027438:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002743c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002743e:	fb09 cc0e 	mla	ip, r9, lr, ip
90027442:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027446:	fb08 f80e 	mul.w	r8, r8, lr
9002744a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002744e:	fb01 8202 	mla	r2, r1, r2, r8
90027452:	9908      	ldr	r1, [sp, #32]
90027454:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027458:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002745c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002745e:	fb00 220a 	mla	r2, r0, sl, r2
90027462:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90027466:	fb09 2900 	mla	r9, r9, r0, r2
9002746a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002746e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90027472:	ea4c 0c09 	orr.w	ip, ip, r9
90027476:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002747a:	f040 8091 	bne.w	900275a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002747e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90027482:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90027486:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002748a:	f022 0207 	bic.w	r2, r2, #7
9002748e:	431a      	orrs	r2, r3
90027490:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90027494:	ea4c 0c02 	orr.w	ip, ip, r2
90027498:	f8a7 c000 	strh.w	ip, [r7]
9002749c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002749e:	3702      	adds	r7, #2
900274a0:	441c      	add	r4, r3
900274a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900274a4:	441e      	add	r6, r3
900274a6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900274a8:	3b01      	subs	r3, #1
900274aa:	9317      	str	r3, [sp, #92]	@ 0x5c
900274ac:	e6c0      	b.n	90027230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
900274ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900274b0:	441c      	add	r4, r3
900274b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900274b4:	441e      	add	r6, r3
900274b6:	9b07      	ldr	r3, [sp, #28]
900274b8:	3b01      	subs	r3, #1
900274ba:	9307      	str	r3, [sp, #28]
900274bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900274be:	3302      	adds	r3, #2
900274c0:	930a      	str	r3, [sp, #40]	@ 0x28
900274c2:	e695      	b.n	900271f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900274c4:	d024      	beq.n	90027510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
900274c6:	9b07      	ldr	r3, [sp, #28]
900274c8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900274ca:	3b01      	subs	r3, #1
900274cc:	fb00 4003 	mla	r0, r0, r3, r4
900274d0:	1400      	asrs	r0, r0, #16
900274d2:	f53f aeaa 	bmi.w	9002722a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900274d6:	3901      	subs	r1, #1
900274d8:	4288      	cmp	r0, r1
900274da:	f6bf aea6 	bge.w	9002722a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900274de:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900274e0:	fb01 6303 	mla	r3, r1, r3, r6
900274e4:	141b      	asrs	r3, r3, #16
900274e6:	f53f aea0 	bmi.w	9002722a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900274ea:	3a01      	subs	r2, #1
900274ec:	4293      	cmp	r3, r2
900274ee:	f6bf ae9c 	bge.w	9002722a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900274f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
900274f6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900274fa:	f1bb 0f00 	cmp.w	fp, #0
900274fe:	f300 809a 	bgt.w	90027636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027502:	9b07      	ldr	r3, [sp, #28]
90027504:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027508:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002750a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002750e:	930a      	str	r3, [sp, #40]	@ 0x28
90027510:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027512:	2b00      	cmp	r3, #0
90027514:	f340 81ec 	ble.w	900278f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027518:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002751c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002751e:	ee30 0a04 	vadd.f32	s0, s0, s8
90027522:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027526:	eef0 6a62 	vmov.f32	s13, s5
9002752a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002752e:	ee31 1a05 	vadd.f32	s2, s2, s10
90027532:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027536:	ee16 4a90 	vmov	r4, s13
9002753a:	eef0 6a43 	vmov.f32	s13, s6
9002753e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027542:	ee16 6a90 	vmov	r6, s13
90027546:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002754a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002754e:	ee77 2a62 	vsub.f32	s5, s14, s5
90027552:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027556:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002755a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002755e:	ee12 2a90 	vmov	r2, s5
90027562:	eef0 2a47 	vmov.f32	s5, s14
90027566:	fb92 f3f3 	sdiv	r3, r2, r3
9002756a:	ee13 2a10 	vmov	r2, s6
9002756e:	9327      	str	r3, [sp, #156]	@ 0x9c
90027570:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027572:	eeb0 3a67 	vmov.f32	s6, s15
90027576:	fb92 f3f3 	sdiv	r3, r2, r3
9002757a:	9328      	str	r3, [sp, #160]	@ 0xa0
9002757c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002757e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90027580:	3b01      	subs	r3, #1
90027582:	9316      	str	r3, [sp, #88]	@ 0x58
90027584:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027586:	bf08      	it	eq
90027588:	4613      	moveq	r3, r2
9002758a:	9307      	str	r3, [sp, #28]
9002758c:	e622      	b.n	900271d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002758e:	2800      	cmp	r0, #0
90027590:	f43f ae92 	beq.w	900272b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027594:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027598:	9308      	str	r3, [sp, #32]
9002759a:	0e1b      	lsrs	r3, r3, #24
9002759c:	9310      	str	r3, [sp, #64]	@ 0x40
9002759e:	e68b      	b.n	900272b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900275a0:	8839      	ldrh	r1, [r7, #0]
900275a2:	43db      	mvns	r3, r3
900275a4:	4dd4      	ldr	r5, [pc, #848]	@ (900278f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900275a6:	ea4f 2e21 	mov.w	lr, r1, asr #8
900275aa:	fa5f f883 	uxtb.w	r8, r3
900275ae:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
900275b2:	10c8      	asrs	r0, r1, #3
900275b4:	00cb      	lsls	r3, r1, #3
900275b6:	fb0e fe08 	mul.w	lr, lr, r8
900275ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900275be:	b2db      	uxtb	r3, r3
900275c0:	f10e 0101 	add.w	r1, lr, #1
900275c4:	fb00 f008 	mul.w	r0, r0, r8
900275c8:	fb03 f308 	mul.w	r3, r3, r8
900275cc:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900275d0:	ea4f 411c 	mov.w	r1, ip, lsr #16
900275d4:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900275d8:	f100 0e01 	add.w	lr, r0, #1
900275dc:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900275e0:	b2c9      	uxtb	r1, r1
900275e2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900275e6:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900275ea:	00d2      	lsls	r2, r2, #3
900275ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900275f0:	430a      	orrs	r2, r1
900275f2:	1c59      	adds	r1, r3, #1
900275f4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900275f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900275fc:	e748      	b.n	90027490 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900275fe:	f112 0801 	adds.w	r8, r2, #1
90027602:	f53f af4b 	bmi.w	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027606:	4543      	cmp	r3, r8
90027608:	f6ff af48 	blt.w	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002760c:	f11c 0801 	adds.w	r8, ip, #1
90027610:	f53f af44 	bmi.w	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027614:	45c6      	cmp	lr, r8
90027616:	f6ff af41 	blt.w	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002761a:	b21b      	sxth	r3, r3
9002761c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027620:	fa0f f28e 	sxth.w	r2, lr
90027624:	e9cd 1003 	strd	r1, r0, [sp, #12]
90027628:	9200      	str	r2, [sp, #0]
9002762a:	4639      	mov	r1, r7
9002762c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002762e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90027630:	f7ff fc88 	bl	90026f44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90027634:	e732      	b.n	9002749c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027636:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027638:	1421      	asrs	r1, r4, #16
9002763a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002763c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027640:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90027644:	1433      	asrs	r3, r6, #16
90027646:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002764a:	fb07 1303 	mla	r3, r7, r3, r1
9002764e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027650:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90027654:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027658:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002765c:	2a00      	cmp	r2, #0
9002765e:	f000 8108 	beq.w	90027872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90027662:	684d      	ldr	r5, [r1, #4]
90027664:	950d      	str	r5, [sp, #52]	@ 0x34
90027666:	0e2d      	lsrs	r5, r5, #24
90027668:	9514      	str	r5, [sp, #80]	@ 0x50
9002766a:	b178      	cbz	r0, 9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002766c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90027670:	3f01      	subs	r7, #1
90027672:	00bf      	lsls	r7, r7, #2
90027674:	3704      	adds	r7, #4
90027676:	eb01 0e07 	add.w	lr, r1, r7
9002767a:	59c9      	ldr	r1, [r1, r7]
9002767c:	9109      	str	r1, [sp, #36]	@ 0x24
9002767e:	0e09      	lsrs	r1, r1, #24
90027680:	9111      	str	r1, [sp, #68]	@ 0x44
90027682:	f8de 1004 	ldr.w	r1, [lr, #4]
90027686:	910e      	str	r1, [sp, #56]	@ 0x38
90027688:	0e09      	lsrs	r1, r1, #24
9002768a:	9115      	str	r1, [sp, #84]	@ 0x54
9002768c:	b292      	uxth	r2, r2
9002768e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027690:	b280      	uxth	r0, r0
90027692:	fb02 f900 	mul.w	r9, r2, r0
90027696:	0112      	lsls	r2, r2, #4
90027698:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002769c:	eba2 0e09 	sub.w	lr, r2, r9
900276a0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
900276a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900276a6:	b280      	uxth	r0, r0
900276a8:	fa1f fe8e 	uxth.w	lr, lr
900276ac:	1a09      	subs	r1, r1, r0
900276ae:	fb0e f202 	mul.w	r2, lr, r2
900276b2:	b289      	uxth	r1, r1
900276b4:	fb01 220c 	mla	r2, r1, ip, r2
900276b8:	fb00 2205 	mla	r2, r0, r5, r2
900276bc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900276be:	fb09 2205 	mla	r2, r9, r5, r2
900276c2:	f3c2 2207 	ubfx	r2, r2, #8, #8
900276c6:	2a00      	cmp	r2, #0
900276c8:	f000 80ca 	beq.w	90027860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900276cc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900276d0:	d019      	beq.n	90027706 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900276d2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900276d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900276da:	fb0c fa0a 	mul.w	sl, ip, sl
900276de:	fb0c fc03 	mul.w	ip, ip, r3
900276e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900276e6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900276ea:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900276ee:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900276f2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900276f6:	4453      	add	r3, sl
900276f8:	0a3f      	lsrs	r7, r7, #8
900276fa:	0a1b      	lsrs	r3, r3, #8
900276fc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90027700:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027704:	433b      	orrs	r3, r7
90027706:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027708:	2dff      	cmp	r5, #255	@ 0xff
9002770a:	d020      	beq.n	9002774e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
9002770c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002770e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027712:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027714:	436f      	muls	r7, r5
90027716:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027718:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002771c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027720:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027722:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027726:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002772a:	fb05 fa0a 	mul.w	sl, r5, sl
9002772e:	44bc      	add	ip, r7
90027730:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027734:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027738:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002773c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027740:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027744:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027748:	ea4c 050a 	orr.w	r5, ip, sl
9002774c:	950d      	str	r5, [sp, #52]	@ 0x34
9002774e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027750:	2dff      	cmp	r5, #255	@ 0xff
90027752:	d020      	beq.n	90027796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90027754:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027756:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002775a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002775c:	436f      	muls	r7, r5
9002775e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027760:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027764:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027766:	fb05 fa0c 	mul.w	sl, r5, ip
9002776a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002776e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027772:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027776:	44bc      	add	ip, r7
90027778:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002777c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027780:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027784:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027788:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002778c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027790:	ea4c 050a 	orr.w	r5, ip, sl
90027794:	9509      	str	r5, [sp, #36]	@ 0x24
90027796:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027798:	2dff      	cmp	r5, #255	@ 0xff
9002779a:	d020      	beq.n	900277de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
9002779c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002779e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900277a2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900277a4:	436f      	muls	r7, r5
900277a6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900277a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900277ac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900277b0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900277b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900277b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900277ba:	fb05 fa0a 	mul.w	sl, r5, sl
900277be:	44bc      	add	ip, r7
900277c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900277c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900277c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900277cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900277d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900277d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900277d8:	ea4c 050a 	orr.w	r5, ip, sl
900277dc:	950e      	str	r5, [sp, #56]	@ 0x38
900277de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900277e0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900277e4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900277e8:	2aff      	cmp	r2, #255	@ 0xff
900277ea:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900277ee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900277f0:	fb0e f707 	mul.w	r7, lr, r7
900277f4:	fb01 770c 	mla	r7, r1, ip, r7
900277f8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900277fc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900277fe:	fb00 770c 	mla	r7, r0, ip, r7
90027802:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027806:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027808:	fb09 770c 	mla	r7, r9, ip, r7
9002780c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027810:	fb0e fe0c 	mul.w	lr, lr, ip
90027814:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027818:	fb01 e303 	mla	r3, r1, r3, lr
9002781c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002781e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90027822:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90027826:	990e      	ldr	r1, [sp, #56]	@ 0x38
90027828:	fb00 330a 	mla	r3, r0, sl, r3
9002782c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90027830:	fb09 3c0c 	mla	ip, r9, ip, r3
90027834:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027838:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002783c:	ea47 070c 	orr.w	r7, r7, ip
90027840:	ea4f 2317 	mov.w	r3, r7, lsr #8
90027844:	d11e      	bne.n	90027884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90027846:	097a      	lsrs	r2, r7, #5
90027848:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
9002784c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027850:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027854:	f023 0307 	bic.w	r3, r3, #7
90027858:	4313      	orrs	r3, r2
9002785a:	431f      	orrs	r7, r3
9002785c:	f8a8 7000 	strh.w	r7, [r8]
90027860:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027862:	f108 0802 	add.w	r8, r8, #2
90027866:	f10b 3bff 	add.w	fp, fp, #4294967295
9002786a:	441c      	add	r4, r3
9002786c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002786e:	441e      	add	r6, r3
90027870:	e643      	b.n	900274fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027872:	2800      	cmp	r0, #0
90027874:	f43f af0a 	beq.w	9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027878:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9002787c:	9109      	str	r1, [sp, #36]	@ 0x24
9002787e:	0e09      	lsrs	r1, r1, #24
90027880:	9111      	str	r1, [sp, #68]	@ 0x44
90027882:	e703      	b.n	9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027884:	f8b8 1000 	ldrh.w	r1, [r8]
90027888:	43d2      	mvns	r2, r2
9002788a:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002788e:	fa5f fe82 	uxtb.w	lr, r2
90027892:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027896:	10c8      	asrs	r0, r1, #3
90027898:	00ca      	lsls	r2, r1, #3
9002789a:	fb0c fc0e 	mul.w	ip, ip, lr
9002789e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900278a2:	b2d2      	uxtb	r2, r2
900278a4:	f10c 0101 	add.w	r1, ip, #1
900278a8:	fb00 f00e 	mul.w	r0, r0, lr
900278ac:	fb02 f20e 	mul.w	r2, r2, lr
900278b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900278b4:	0c39      	lsrs	r1, r7, #16
900278b6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900278ba:	490f      	ldr	r1, [pc, #60]	@ (900278f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900278bc:	fa5f fc8c 	uxtb.w	ip, ip
900278c0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900278c4:	1c41      	adds	r1, r0, #1
900278c6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900278ca:	1c51      	adds	r1, r2, #1
900278cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900278d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900278d4:	00c0      	lsls	r0, r0, #3
900278d6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900278da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900278de:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900278e2:	ea4c 0c00 	orr.w	ip, ip, r0
900278e6:	ea47 0c0c 	orr.w	ip, r7, ip
900278ea:	f8a8 c000 	strh.w	ip, [r8]
900278ee:	e7b7      	b.n	90027860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900278f0:	b01b      	add	sp, #108	@ 0x6c
900278f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900278f6:	bf00      	nop
900278f8:	fffff800 	.word	0xfffff800

900278fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900278fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027900:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027904:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027908:	2d00      	cmp	r5, #0
9002790a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002790e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027912:	fb05 0e03 	mla	lr, r5, r3, r0
90027916:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002791a:	f2c0 808c 	blt.w	90027a36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002791e:	45a9      	cmp	r9, r5
90027920:	f340 8089 	ble.w	90027a36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027924:	2800      	cmp	r0, #0
90027926:	f2c0 8084 	blt.w	90027a32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002792a:	4580      	cmp	r8, r0
9002792c:	f340 8081 	ble.w	90027a32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027930:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027934:	f01e 0f01 	tst.w	lr, #1
90027938:	5d16      	ldrb	r6, [r2, r4]
9002793a:	bf0c      	ite	eq
9002793c:	f006 060f 	andeq.w	r6, r6, #15
90027940:	1136      	asrne	r6, r6, #4
90027942:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027946:	b2f6      	uxtb	r6, r6
90027948:	1c44      	adds	r4, r0, #1
9002794a:	d477      	bmi.n	90027a3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
9002794c:	45a0      	cmp	r8, r4
9002794e:	dd75      	ble.n	90027a3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027950:	2f00      	cmp	r7, #0
90027952:	d075      	beq.n	90027a40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90027954:	f10e 0a01 	add.w	sl, lr, #1
90027958:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002795c:	f01a 0f01 	tst.w	sl, #1
90027960:	5d14      	ldrb	r4, [r2, r4]
90027962:	bf0c      	ite	eq
90027964:	f004 040f 	andeq.w	r4, r4, #15
90027968:	1124      	asrne	r4, r4, #4
9002796a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002796e:	b2e4      	uxtb	r4, r4
90027970:	3501      	adds	r5, #1
90027972:	d469      	bmi.n	90027a48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027974:	45a9      	cmp	r9, r5
90027976:	dd67      	ble.n	90027a48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027978:	f1bc 0f00 	cmp.w	ip, #0
9002797c:	d067      	beq.n	90027a4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
9002797e:	2800      	cmp	r0, #0
90027980:	db60      	blt.n	90027a44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027982:	4580      	cmp	r8, r0
90027984:	dd5e      	ble.n	90027a44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027986:	eb03 090e 	add.w	r9, r3, lr
9002798a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002798e:	f019 0f01 	tst.w	r9, #1
90027992:	5d55      	ldrb	r5, [r2, r5]
90027994:	bf0c      	ite	eq
90027996:	f005 050f 	andeq.w	r5, r5, #15
9002799a:	112d      	asrne	r5, r5, #4
9002799c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900279a0:	b2ed      	uxtb	r5, r5
900279a2:	3001      	adds	r0, #1
900279a4:	d456      	bmi.n	90027a54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900279a6:	4580      	cmp	r8, r0
900279a8:	dd54      	ble.n	90027a54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900279aa:	2f00      	cmp	r7, #0
900279ac:	d054      	beq.n	90027a58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900279ae:	3301      	adds	r3, #1
900279b0:	449e      	add	lr, r3
900279b2:	ea4f 035e 	mov.w	r3, lr, lsr #1
900279b6:	f01e 0f01 	tst.w	lr, #1
900279ba:	5cd0      	ldrb	r0, [r2, r3]
900279bc:	bf0c      	ite	eq
900279be:	f000 000f 	andeq.w	r0, r0, #15
900279c2:	1100      	asrne	r0, r0, #4
900279c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900279c8:	b2c3      	uxtb	r3, r0
900279ca:	b2ba      	uxth	r2, r7
900279cc:	fa1f fc8c 	uxth.w	ip, ip
900279d0:	fb02 f00c 	mul.w	r0, r2, ip
900279d4:	0112      	lsls	r2, r2, #4
900279d6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900279da:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900279de:	1a12      	subs	r2, r2, r0
900279e0:	fa1f fc8c 	uxth.w	ip, ip
900279e4:	b292      	uxth	r2, r2
900279e6:	eba7 070c 	sub.w	r7, r7, ip
900279ea:	4362      	muls	r2, r4
900279ec:	b2bf      	uxth	r7, r7
900279ee:	fb06 2207 	mla	r2, r6, r7, r2
900279f2:	fb0c 2505 	mla	r5, ip, r5, r2
900279f6:	fb00 5303 	mla	r3, r0, r3, r5
900279fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
900279fe:	b1b3      	cbz	r3, 90027a2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027a00:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027a04:	435a      	muls	r2, r3
90027a06:	1c53      	adds	r3, r2, #1
90027a08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027a0c:	4a2d      	ldr	r2, [pc, #180]	@ (90027ac4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027a0e:	121b      	asrs	r3, r3, #8
90027a10:	6812      	ldr	r2, [r2, #0]
90027a12:	2bff      	cmp	r3, #255	@ 0xff
90027a14:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027a18:	d120      	bne.n	90027a5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027a1a:	0950      	lsrs	r0, r2, #5
90027a1c:	4b2a      	ldr	r3, [pc, #168]	@ (90027ac8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027a1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027a22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027a26:	4033      	ands	r3, r6
90027a28:	4318      	orrs	r0, r3
90027a2a:	4302      	orrs	r2, r0
90027a2c:	800a      	strh	r2, [r1, #0]
90027a2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027a32:	2600      	movs	r6, #0
90027a34:	e788      	b.n	90027948 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90027a36:	2400      	movs	r4, #0
90027a38:	4626      	mov	r6, r4
90027a3a:	e799      	b.n	90027970 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027a3c:	2400      	movs	r4, #0
90027a3e:	e797      	b.n	90027970 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027a40:	463c      	mov	r4, r7
90027a42:	e795      	b.n	90027970 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027a44:	2500      	movs	r5, #0
90027a46:	e7ac      	b.n	900279a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027a48:	2300      	movs	r3, #0
90027a4a:	461d      	mov	r5, r3
90027a4c:	e7bd      	b.n	900279ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027a4e:	4663      	mov	r3, ip
90027a50:	4665      	mov	r5, ip
90027a52:	e7ba      	b.n	900279ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027a54:	2300      	movs	r3, #0
90027a56:	e7b8      	b.n	900279ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027a58:	463b      	mov	r3, r7
90027a5a:	e7b6      	b.n	900279ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027a5c:	880d      	ldrh	r5, [r1, #0]
90027a5e:	b29f      	uxth	r7, r3
90027a60:	f3c2 4007 	ubfx	r0, r2, #16, #8
90027a64:	43db      	mvns	r3, r3
90027a66:	122c      	asrs	r4, r5, #8
90027a68:	fb10 f007 	smulbb	r0, r0, r7
90027a6c:	b2db      	uxtb	r3, r3
90027a6e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027a72:	b2f6      	uxtb	r6, r6
90027a74:	b2d2      	uxtb	r2, r2
90027a76:	fb04 0403 	mla	r4, r4, r3, r0
90027a7a:	10e8      	asrs	r0, r5, #3
90027a7c:	fb12 f207 	smulbb	r2, r2, r7
90027a80:	00ed      	lsls	r5, r5, #3
90027a82:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027a86:	b2a4      	uxth	r4, r4
90027a88:	fb16 f607 	smulbb	r6, r6, r7
90027a8c:	b2ed      	uxtb	r5, r5
90027a8e:	fb00 6603 	mla	r6, r0, r3, r6
90027a92:	fb05 2303 	mla	r3, r5, r3, r2
90027a96:	b2b0      	uxth	r0, r6
90027a98:	b29a      	uxth	r2, r3
90027a9a:	1c63      	adds	r3, r4, #1
90027a9c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027aa0:	1c53      	adds	r3, r2, #1
90027aa2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027aa6:	1c42      	adds	r2, r0, #1
90027aa8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027aac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027ab0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027ab4:	0940      	lsrs	r0, r0, #5
90027ab6:	4323      	orrs	r3, r4
90027ab8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027abc:	4303      	orrs	r3, r0
90027abe:	800b      	strh	r3, [r1, #0]
90027ac0:	e7b5      	b.n	90027a2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027ac2:	bf00      	nop
90027ac4:	240234cc 	.word	0x240234cc
90027ac8:	00fff800 	.word	0x00fff800

90027acc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ad0:	b097      	sub	sp, #92	@ 0x5c
90027ad2:	9214      	str	r2, [sp, #80]	@ 0x50
90027ad4:	9309      	str	r3, [sp, #36]	@ 0x24
90027ad6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90027ad8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90027adc:	9015      	str	r0, [sp, #84]	@ 0x54
90027ade:	910d      	str	r1, [sp, #52]	@ 0x34
90027ae0:	6850      	ldr	r0, [r2, #4]
90027ae2:	930f      	str	r3, [sp, #60]	@ 0x3c
90027ae4:	6812      	ldr	r2, [r2, #0]
90027ae6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90027aea:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90027aee:	fb00 1303 	mla	r3, r0, r3, r1
90027af2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027af6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027af8:	689b      	ldr	r3, [r3, #8]
90027afa:	3301      	adds	r3, #1
90027afc:	f023 0301 	bic.w	r3, r3, #1
90027b00:	930a      	str	r3, [sp, #40]	@ 0x28
90027b02:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027b04:	681f      	ldr	r7, [r3, #0]
90027b06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027b08:	2b00      	cmp	r3, #0
90027b0a:	dc03      	bgt.n	90027b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027b0c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90027b0e:	2b00      	cmp	r3, #0
90027b10:	f340 8289 	ble.w	90028026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027b14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027b16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027b1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027b1e:	1e48      	subs	r0, r1, #1
90027b20:	f102 3cff 	add.w	ip, r2, #4294967295
90027b24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027b26:	2b00      	cmp	r3, #0
90027b28:	f340 80c5 	ble.w	90027cb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027b2c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027b30:	ea4f 4326 	mov.w	r3, r6, asr #16
90027b34:	d406      	bmi.n	90027b44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027b36:	4586      	cmp	lr, r0
90027b38:	da04      	bge.n	90027b44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027b3a:	2b00      	cmp	r3, #0
90027b3c:	db02      	blt.n	90027b44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027b3e:	4563      	cmp	r3, ip
90027b40:	f2c0 80ba 	blt.w	90027cb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90027b44:	f11e 0e01 	adds.w	lr, lr, #1
90027b48:	f100 80ab 	bmi.w	90027ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027b4c:	4571      	cmp	r1, lr
90027b4e:	f2c0 80a8 	blt.w	90027ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027b52:	3301      	adds	r3, #1
90027b54:	f100 80a5 	bmi.w	90027ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027b58:	429a      	cmp	r2, r3
90027b5a:	f2c0 80a2 	blt.w	90027ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027b5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027b60:	46c8      	mov	r8, r9
90027b62:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90027b66:	930e      	str	r3, [sp, #56]	@ 0x38
90027b68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027b6a:	2b00      	cmp	r3, #0
90027b6c:	f340 80c4 	ble.w	90027cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027b70:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027b72:	1430      	asrs	r0, r6, #16
90027b74:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027b78:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027b7c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027b80:	1423      	asrs	r3, r4, #16
90027b82:	f100 814f 	bmi.w	90027e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027b86:	f10c 3bff 	add.w	fp, ip, #4294967295
90027b8a:	455b      	cmp	r3, fp
90027b8c:	f280 814a 	bge.w	90027e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027b90:	2800      	cmp	r0, #0
90027b92:	f2c0 8147 	blt.w	90027e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027b96:	f10e 3bff 	add.w	fp, lr, #4294967295
90027b9a:	4558      	cmp	r0, fp
90027b9c:	f280 8142 	bge.w	90027e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027ba0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90027ba2:	fb00 3305 	mla	r3, r0, r5, r3
90027ba6:	0858      	lsrs	r0, r3, #1
90027ba8:	07dd      	lsls	r5, r3, #31
90027baa:	f817 c000 	ldrb.w	ip, [r7, r0]
90027bae:	bf54      	ite	pl
90027bb0:	f00c 0c0f 	andpl.w	ip, ip, #15
90027bb4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027bb8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027bbc:	fa5f fc8c 	uxtb.w	ip, ip
90027bc0:	2a00      	cmp	r2, #0
90027bc2:	f000 80dd 	beq.w	90027d80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90027bc6:	1c58      	adds	r0, r3, #1
90027bc8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027bcc:	07c0      	lsls	r0, r0, #31
90027bce:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027bd2:	bf54      	ite	pl
90027bd4:	f00e 0e0f 	andpl.w	lr, lr, #15
90027bd8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027bdc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027be0:	fa5f f08e 	uxtb.w	r0, lr
90027be4:	9010      	str	r0, [sp, #64]	@ 0x40
90027be6:	b1d9      	cbz	r1, 90027c20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027be8:	4453      	add	r3, sl
90027bea:	0858      	lsrs	r0, r3, #1
90027bec:	07dd      	lsls	r5, r3, #31
90027bee:	f103 0301 	add.w	r3, r3, #1
90027bf2:	5c38      	ldrb	r0, [r7, r0]
90027bf4:	bf54      	ite	pl
90027bf6:	f000 000f 	andpl.w	r0, r0, #15
90027bfa:	1100      	asrmi	r0, r0, #4
90027bfc:	07dd      	lsls	r5, r3, #31
90027bfe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027c02:	b2c0      	uxtb	r0, r0
90027c04:	900b      	str	r0, [sp, #44]	@ 0x2c
90027c06:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027c0a:	f817 e000 	ldrb.w	lr, [r7, r0]
90027c0e:	bf54      	ite	pl
90027c10:	f00e 030f 	andpl.w	r3, lr, #15
90027c14:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027c18:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027c1c:	b2db      	uxtb	r3, r3
90027c1e:	9311      	str	r3, [sp, #68]	@ 0x44
90027c20:	b292      	uxth	r2, r2
90027c22:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027c24:	b289      	uxth	r1, r1
90027c26:	fb02 f301 	mul.w	r3, r2, r1
90027c2a:	0112      	lsls	r2, r2, #4
90027c2c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027c30:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90027c34:	1ad2      	subs	r2, r2, r3
90027c36:	b289      	uxth	r1, r1
90027c38:	b292      	uxth	r2, r2
90027c3a:	1a40      	subs	r0, r0, r1
90027c3c:	436a      	muls	r2, r5
90027c3e:	b280      	uxth	r0, r0
90027c40:	fb0c 2c00 	mla	ip, ip, r0, r2
90027c44:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90027c46:	fb01 c102 	mla	r1, r1, r2, ip
90027c4a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90027c4c:	fb03 1302 	mla	r3, r3, r2, r1
90027c50:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027c54:	b1db      	cbz	r3, 90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027c56:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027c58:	4353      	muls	r3, r2
90027c5a:	1c5a      	adds	r2, r3, #1
90027c5c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027c60:	4ac6      	ldr	r2, [pc, #792]	@ (90027f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027c62:	121b      	asrs	r3, r3, #8
90027c64:	6812      	ldr	r2, [r2, #0]
90027c66:	2bff      	cmp	r3, #255	@ 0xff
90027c68:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027c6c:	f040 8099 	bne.w	90027da2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027c70:	0953      	lsrs	r3, r2, #5
90027c72:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027c76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027c7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027c7e:	f02c 0c07 	bic.w	ip, ip, #7
90027c82:	ea43 0c0c 	orr.w	ip, r3, ip
90027c86:	ea4c 0202 	orr.w	r2, ip, r2
90027c8a:	f8a8 2000 	strh.w	r2, [r8]
90027c8e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027c90:	f108 0802 	add.w	r8, r8, #2
90027c94:	441c      	add	r4, r3
90027c96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027c98:	441e      	add	r6, r3
90027c9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027c9c:	3b01      	subs	r3, #1
90027c9e:	930e      	str	r3, [sp, #56]	@ 0x38
90027ca0:	e762      	b.n	90027b68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90027ca2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027ca4:	f109 0902 	add.w	r9, r9, #2
90027ca8:	441c      	add	r4, r3
90027caa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027cac:	441e      	add	r6, r3
90027cae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027cb0:	3b01      	subs	r3, #1
90027cb2:	9309      	str	r3, [sp, #36]	@ 0x24
90027cb4:	e736      	b.n	90027b24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027cb6:	d024      	beq.n	90027d02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90027cb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027cba:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90027cbc:	3b01      	subs	r3, #1
90027cbe:	fb00 4003 	mla	r0, r0, r3, r4
90027cc2:	1400      	asrs	r0, r0, #16
90027cc4:	f53f af4b 	bmi.w	90027b5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027cc8:	3901      	subs	r1, #1
90027cca:	4288      	cmp	r0, r1
90027ccc:	f6bf af47 	bge.w	90027b5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027cd0:	9924      	ldr	r1, [sp, #144]	@ 0x90
90027cd2:	fb01 6303 	mla	r3, r1, r3, r6
90027cd6:	141b      	asrs	r3, r3, #16
90027cd8:	f53f af41 	bmi.w	90027b5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027cdc:	3a01      	subs	r2, #1
90027cde:	4293      	cmp	r3, r2
90027ce0:	f6bf af3d 	bge.w	90027b5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027ce4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90027ce8:	46c8      	mov	r8, r9
90027cea:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90027cee:	930e      	str	r3, [sp, #56]	@ 0x38
90027cf0:	f1bb 0f00 	cmp.w	fp, #0
90027cf4:	f300 80b7 	bgt.w	90027e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027cf8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027cfa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027cfe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027d02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027d04:	2b00      	cmp	r3, #0
90027d06:	f340 818e 	ble.w	90028026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027d0a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027d0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027d10:	ee30 0a04 	vadd.f32	s0, s0, s8
90027d14:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027d18:	eef0 6a62 	vmov.f32	s13, s5
90027d1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027d20:	ee31 1a05 	vadd.f32	s2, s2, s10
90027d24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027d28:	ee16 4a90 	vmov	r4, s13
90027d2c:	eef0 6a43 	vmov.f32	s13, s6
90027d30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027d34:	ee16 6a90 	vmov	r6, s13
90027d38:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027d3c:	ee61 7a27 	vmul.f32	s15, s2, s15
90027d40:	ee77 2a62 	vsub.f32	s5, s14, s5
90027d44:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027d48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027d4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027d50:	ee12 2a90 	vmov	r2, s5
90027d54:	eef0 2a47 	vmov.f32	s5, s14
90027d58:	fb92 f3f3 	sdiv	r3, r2, r3
90027d5c:	ee13 2a10 	vmov	r2, s6
90027d60:	9323      	str	r3, [sp, #140]	@ 0x8c
90027d62:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027d64:	eeb0 3a67 	vmov.f32	s6, s15
90027d68:	fb92 f3f3 	sdiv	r3, r2, r3
90027d6c:	9324      	str	r3, [sp, #144]	@ 0x90
90027d6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027d70:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027d72:	3b01      	subs	r3, #1
90027d74:	930d      	str	r3, [sp, #52]	@ 0x34
90027d76:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027d78:	bf08      	it	eq
90027d7a:	4613      	moveq	r3, r2
90027d7c:	9309      	str	r3, [sp, #36]	@ 0x24
90027d7e:	e6c2      	b.n	90027b06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027d80:	2900      	cmp	r1, #0
90027d82:	f43f af4d 	beq.w	90027c20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027d86:	eb0a 0003 	add.w	r0, sl, r3
90027d8a:	0843      	lsrs	r3, r0, #1
90027d8c:	07c0      	lsls	r0, r0, #31
90027d8e:	5cfb      	ldrb	r3, [r7, r3]
90027d90:	bf54      	ite	pl
90027d92:	f003 030f 	andpl.w	r3, r3, #15
90027d96:	111b      	asrmi	r3, r3, #4
90027d98:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027d9c:	b2db      	uxtb	r3, r3
90027d9e:	930b      	str	r3, [sp, #44]	@ 0x2c
90027da0:	e73e      	b.n	90027c20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027da2:	f8b8 e000 	ldrh.w	lr, [r8]
90027da6:	fa1f fb83 	uxth.w	fp, r3
90027daa:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027dae:	43db      	mvns	r3, r3
90027db0:	ea4f 202e 	mov.w	r0, lr, asr #8
90027db4:	fb11 f10b 	smulbb	r1, r1, fp
90027db8:	b2db      	uxtb	r3, r3
90027dba:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027dbe:	fa5f fc8c 	uxtb.w	ip, ip
90027dc2:	b2d2      	uxtb	r2, r2
90027dc4:	fb00 1003 	mla	r0, r0, r3, r1
90027dc8:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027dcc:	fb1c fc0b 	smulbb	ip, ip, fp
90027dd0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027dd4:	b280      	uxth	r0, r0
90027dd6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027dda:	fb12 fb0b 	smulbb	fp, r2, fp
90027dde:	fa5f fe8e 	uxtb.w	lr, lr
90027de2:	fb01 cc03 	mla	ip, r1, r3, ip
90027de6:	fb0e bb03 	mla	fp, lr, r3, fp
90027dea:	1c43      	adds	r3, r0, #1
90027dec:	fa1f fc8c 	uxth.w	ip, ip
90027df0:	fa1f fb8b 	uxth.w	fp, fp
90027df4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027df8:	f10c 0101 	add.w	r1, ip, #1
90027dfc:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90027e00:	f10b 0001 	add.w	r0, fp, #1
90027e04:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027e08:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027e0c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027e10:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027e14:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027e18:	4318      	orrs	r0, r3
90027e1a:	ea40 000c 	orr.w	r0, r0, ip
90027e1e:	f8a8 0000 	strh.w	r0, [r8]
90027e22:	e734      	b.n	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e24:	f113 0b01 	adds.w	fp, r3, #1
90027e28:	f53f af31 	bmi.w	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e2c:	45dc      	cmp	ip, fp
90027e2e:	f6ff af2e 	blt.w	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e32:	f110 0b01 	adds.w	fp, r0, #1
90027e36:	f53f af2a 	bmi.w	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e3a:	45de      	cmp	lr, fp
90027e3c:	f6ff af27 	blt.w	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e40:	9302      	str	r3, [sp, #8]
90027e42:	fa0f f38e 	sxth.w	r3, lr
90027e46:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027e48:	9301      	str	r3, [sp, #4]
90027e4a:	fa0f f38c 	sxth.w	r3, ip
90027e4e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027e52:	e9cd 1505 	strd	r1, r5, [sp, #20]
90027e56:	9300      	str	r3, [sp, #0]
90027e58:	463a      	mov	r2, r7
90027e5a:	4653      	mov	r3, sl
90027e5c:	4641      	mov	r1, r8
90027e5e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90027e60:	f7ff fd4c 	bl	900278fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027e64:	e713      	b.n	90027c8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027e66:	1422      	asrs	r2, r4, #16
90027e68:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90027e6a:	1433      	asrs	r3, r6, #16
90027e6c:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027e70:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027e74:	fb05 2303 	mla	r3, r5, r3, r2
90027e78:	085a      	lsrs	r2, r3, #1
90027e7a:	07dd      	lsls	r5, r3, #31
90027e7c:	5cba      	ldrb	r2, [r7, r2]
90027e7e:	bf54      	ite	pl
90027e80:	f002 020f 	andpl.w	r2, r2, #15
90027e84:	1112      	asrmi	r2, r2, #4
90027e86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027e8a:	b2d2      	uxtb	r2, r2
90027e8c:	2900      	cmp	r1, #0
90027e8e:	d077      	beq.n	90027f80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027e90:	f103 0e01 	add.w	lr, r3, #1
90027e94:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027e98:	f01e 0f01 	tst.w	lr, #1
90027e9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ea0:	bf0c      	ite	eq
90027ea2:	f00c 0c0f 	andeq.w	ip, ip, #15
90027ea6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90027eaa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027eae:	fa5f f58c 	uxtb.w	r5, ip
90027eb2:	9512      	str	r5, [sp, #72]	@ 0x48
90027eb4:	b308      	cbz	r0, 90027efa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027eb6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027eb8:	442b      	add	r3, r5
90027eba:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027ebe:	07dd      	lsls	r5, r3, #31
90027ec0:	f103 0301 	add.w	r3, r3, #1
90027ec4:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ec8:	bf54      	ite	pl
90027eca:	f00c 0c0f 	andpl.w	ip, ip, #15
90027ece:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ed2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ed6:	fa5f f58c 	uxtb.w	r5, ip
90027eda:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027ede:	950c      	str	r5, [sp, #48]	@ 0x30
90027ee0:	07dd      	lsls	r5, r3, #31
90027ee2:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ee6:	bf54      	ite	pl
90027ee8:	f00c 0c0f 	andpl.w	ip, ip, #15
90027eec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ef0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ef4:	fa5f f38c 	uxtb.w	r3, ip
90027ef8:	9313      	str	r3, [sp, #76]	@ 0x4c
90027efa:	b289      	uxth	r1, r1
90027efc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027efe:	b280      	uxth	r0, r0
90027f00:	fb01 f300 	mul.w	r3, r1, r0
90027f04:	0109      	lsls	r1, r1, #4
90027f06:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027f0a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90027f0e:	1ac9      	subs	r1, r1, r3
90027f10:	b280      	uxth	r0, r0
90027f12:	b289      	uxth	r1, r1
90027f14:	ebac 0c00 	sub.w	ip, ip, r0
90027f18:	4369      	muls	r1, r5
90027f1a:	fa1f fc8c 	uxth.w	ip, ip
90027f1e:	fb02 120c 	mla	r2, r2, ip, r1
90027f22:	990c      	ldr	r1, [sp, #48]	@ 0x30
90027f24:	fb00 2001 	mla	r0, r0, r1, r2
90027f28:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90027f2a:	fb03 0302 	mla	r3, r3, r2, r0
90027f2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027f32:	b1d3      	cbz	r3, 90027f6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027f34:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027f36:	4353      	muls	r3, r2
90027f38:	1c5a      	adds	r2, r3, #1
90027f3a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027f3e:	4a0f      	ldr	r2, [pc, #60]	@ (90027f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027f40:	121b      	asrs	r3, r3, #8
90027f42:	6812      	ldr	r2, [r2, #0]
90027f44:	2bff      	cmp	r3, #255	@ 0xff
90027f46:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027f4a:	d12d      	bne.n	90027fa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027f4c:	0953      	lsrs	r3, r2, #5
90027f4e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027f52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027f56:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027f5a:	f02c 0c07 	bic.w	ip, ip, #7
90027f5e:	ea43 0c0c 	orr.w	ip, r3, ip
90027f62:	ea4c 0202 	orr.w	r2, ip, r2
90027f66:	f8a8 2000 	strh.w	r2, [r8]
90027f6a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027f6c:	f108 0802 	add.w	r8, r8, #2
90027f70:	f10b 3bff 	add.w	fp, fp, #4294967295
90027f74:	441c      	add	r4, r3
90027f76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027f78:	441e      	add	r6, r3
90027f7a:	e6b9      	b.n	90027cf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90027f7c:	240234cc 	.word	0x240234cc
90027f80:	2800      	cmp	r0, #0
90027f82:	d0ba      	beq.n	90027efa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027f84:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027f86:	442b      	add	r3, r5
90027f88:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027f8c:	07db      	lsls	r3, r3, #31
90027f8e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027f92:	bf54      	ite	pl
90027f94:	f00c 0c0f 	andpl.w	ip, ip, #15
90027f98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027f9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027fa0:	fa5f f38c 	uxtb.w	r3, ip
90027fa4:	930c      	str	r3, [sp, #48]	@ 0x30
90027fa6:	e7a8      	b.n	90027efa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027fa8:	f8b8 e000 	ldrh.w	lr, [r8]
90027fac:	fa1f fa83 	uxth.w	sl, r3
90027fb0:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027fb4:	43db      	mvns	r3, r3
90027fb6:	ea4f 202e 	mov.w	r0, lr, asr #8
90027fba:	fb11 f10a 	smulbb	r1, r1, sl
90027fbe:	b2db      	uxtb	r3, r3
90027fc0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027fc4:	b2d2      	uxtb	r2, r2
90027fc6:	fa5f fc8c 	uxtb.w	ip, ip
90027fca:	fb00 1003 	mla	r0, r0, r3, r1
90027fce:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027fd2:	fb12 f20a 	smulbb	r2, r2, sl
90027fd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027fda:	b280      	uxth	r0, r0
90027fdc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027fe0:	fb1c fc0a 	smulbb	ip, ip, sl
90027fe4:	fa5f fe8e 	uxtb.w	lr, lr
90027fe8:	fb0e 2203 	mla	r2, lr, r3, r2
90027fec:	fb01 cc03 	mla	ip, r1, r3, ip
90027ff0:	1c43      	adds	r3, r0, #1
90027ff2:	b292      	uxth	r2, r2
90027ff4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027ff8:	1c51      	adds	r1, r2, #1
90027ffa:	fa1f fc8c 	uxth.w	ip, ip
90027ffe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90028002:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90028006:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002800a:	4308      	orrs	r0, r1
9002800c:	f10c 0101 	add.w	r1, ip, #1
90028010:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028014:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028018:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002801c:	ea40 000c 	orr.w	r0, r0, ip
90028020:	f8a8 0000 	strh.w	r0, [r8]
90028024:	e7a1      	b.n	90027f6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90028026:	b017      	add	sp, #92	@ 0x5c
90028028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002802c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
9002802c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028030:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90028034:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90028038:	2d00      	cmp	r5, #0
9002803a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002803e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90028042:	fb05 0e03 	mla	lr, r5, r3, r0
90028046:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002804a:	f2c0 80b0 	blt.w	900281ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
9002804e:	45a9      	cmp	r9, r5
90028050:	f340 80ad 	ble.w	900281ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90028054:	2800      	cmp	r0, #0
90028056:	f2c0 80a8 	blt.w	900281aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002805a:	4580      	cmp	r8, r0
9002805c:	f340 80a5 	ble.w	900281aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90028060:	ea4f 045e 	mov.w	r4, lr, lsr #1
90028064:	f01e 0f01 	tst.w	lr, #1
90028068:	5d16      	ldrb	r6, [r2, r4]
9002806a:	bf0c      	ite	eq
9002806c:	f006 060f 	andeq.w	r6, r6, #15
90028070:	1136      	asrne	r6, r6, #4
90028072:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90028076:	b2f6      	uxtb	r6, r6
90028078:	1c44      	adds	r4, r0, #1
9002807a:	f100 809b 	bmi.w	900281b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002807e:	45a0      	cmp	r8, r4
90028080:	f340 8098 	ble.w	900281b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028084:	2f00      	cmp	r7, #0
90028086:	f000 8097 	beq.w	900281b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002808a:	f10e 0a01 	add.w	sl, lr, #1
9002808e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028092:	f01a 0f01 	tst.w	sl, #1
90028096:	5d14      	ldrb	r4, [r2, r4]
90028098:	bf0c      	ite	eq
9002809a:	f004 040f 	andeq.w	r4, r4, #15
9002809e:	1124      	asrne	r4, r4, #4
900280a0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900280a4:	b2e4      	uxtb	r4, r4
900280a6:	3501      	adds	r5, #1
900280a8:	f100 808a 	bmi.w	900281c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900280ac:	45a9      	cmp	r9, r5
900280ae:	f340 8087 	ble.w	900281c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900280b2:	f1bc 0f00 	cmp.w	ip, #0
900280b6:	f000 8086 	beq.w	900281c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
900280ba:	2800      	cmp	r0, #0
900280bc:	db7e      	blt.n	900281bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
900280be:	4580      	cmp	r8, r0
900280c0:	dd7c      	ble.n	900281bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
900280c2:	eb03 090e 	add.w	r9, r3, lr
900280c6:	ea4f 0559 	mov.w	r5, r9, lsr #1
900280ca:	f019 0f01 	tst.w	r9, #1
900280ce:	5d55      	ldrb	r5, [r2, r5]
900280d0:	bf0c      	ite	eq
900280d2:	f005 050f 	andeq.w	r5, r5, #15
900280d6:	112d      	asrne	r5, r5, #4
900280d8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900280dc:	b2ed      	uxtb	r5, r5
900280de:	3001      	adds	r0, #1
900280e0:	d474      	bmi.n	900281cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900280e2:	4580      	cmp	r8, r0
900280e4:	dd72      	ble.n	900281cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900280e6:	2f00      	cmp	r7, #0
900280e8:	d072      	beq.n	900281d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900280ea:	3301      	adds	r3, #1
900280ec:	449e      	add	lr, r3
900280ee:	ea4f 035e 	mov.w	r3, lr, lsr #1
900280f2:	f01e 0f01 	tst.w	lr, #1
900280f6:	5cd0      	ldrb	r0, [r2, r3]
900280f8:	bf0c      	ite	eq
900280fa:	f000 000f 	andeq.w	r0, r0, #15
900280fe:	1100      	asrne	r0, r0, #4
90028100:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028104:	b2c3      	uxtb	r3, r0
90028106:	b2ba      	uxth	r2, r7
90028108:	fa1f fc8c 	uxth.w	ip, ip
9002810c:	fb02 f00c 	mul.w	r0, r2, ip
90028110:	0112      	lsls	r2, r2, #4
90028112:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90028116:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002811a:	1a12      	subs	r2, r2, r0
9002811c:	fa1f fc8c 	uxth.w	ip, ip
90028120:	b292      	uxth	r2, r2
90028122:	eba7 070c 	sub.w	r7, r7, ip
90028126:	4362      	muls	r2, r4
90028128:	b2bf      	uxth	r7, r7
9002812a:	fb06 2207 	mla	r2, r6, r7, r2
9002812e:	fb0c 2505 	mla	r5, ip, r5, r2
90028132:	fb00 5303 	mla	r3, r0, r3, r5
90028136:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002813a:	b3a3      	cbz	r3, 900281a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
9002813c:	4a25      	ldr	r2, [pc, #148]	@ (900281d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
9002813e:	880e      	ldrh	r6, [r1, #0]
90028140:	6815      	ldr	r5, [r2, #0]
90028142:	b29a      	uxth	r2, r3
90028144:	1234      	asrs	r4, r6, #8
90028146:	43db      	mvns	r3, r3
90028148:	f3c5 4007 	ubfx	r0, r5, #16, #8
9002814c:	f3c5 2707 	ubfx	r7, r5, #8, #8
90028150:	b2db      	uxtb	r3, r3
90028152:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028156:	fb10 f002 	smulbb	r0, r0, r2
9002815a:	b2ed      	uxtb	r5, r5
9002815c:	fb17 f702 	smulbb	r7, r7, r2
90028160:	fb04 0403 	mla	r4, r4, r3, r0
90028164:	10f0      	asrs	r0, r6, #3
90028166:	fb15 f202 	smulbb	r2, r5, r2
9002816a:	00f6      	lsls	r6, r6, #3
9002816c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028170:	b2a4      	uxth	r4, r4
90028172:	b2f6      	uxtb	r6, r6
90028174:	fb00 7003 	mla	r0, r0, r3, r7
90028178:	fb06 2303 	mla	r3, r6, r3, r2
9002817c:	b280      	uxth	r0, r0
9002817e:	b29a      	uxth	r2, r3
90028180:	1c63      	adds	r3, r4, #1
90028182:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90028186:	1c53      	adds	r3, r2, #1
90028188:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002818c:	1c42      	adds	r2, r0, #1
9002818e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028192:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028196:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002819a:	0940      	lsrs	r0, r0, #5
9002819c:	4323      	orrs	r3, r4
9002819e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900281a2:	4303      	orrs	r3, r0
900281a4:	800b      	strh	r3, [r1, #0]
900281a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900281aa:	2600      	movs	r6, #0
900281ac:	e764      	b.n	90028078 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
900281ae:	2400      	movs	r4, #0
900281b0:	4626      	mov	r6, r4
900281b2:	e778      	b.n	900280a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900281b4:	2400      	movs	r4, #0
900281b6:	e776      	b.n	900280a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900281b8:	463c      	mov	r4, r7
900281ba:	e774      	b.n	900280a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900281bc:	2500      	movs	r5, #0
900281be:	e78e      	b.n	900280de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
900281c0:	2300      	movs	r3, #0
900281c2:	461d      	mov	r5, r3
900281c4:	e79f      	b.n	90028106 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900281c6:	4663      	mov	r3, ip
900281c8:	4665      	mov	r5, ip
900281ca:	e79c      	b.n	90028106 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900281cc:	2300      	movs	r3, #0
900281ce:	e79a      	b.n	90028106 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900281d0:	463b      	mov	r3, r7
900281d2:	e798      	b.n	90028106 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900281d4:	240234cc 	.word	0x240234cc

900281d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900281d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900281dc:	b093      	sub	sp, #76	@ 0x4c
900281de:	461d      	mov	r5, r3
900281e0:	920c      	str	r2, [sp, #48]	@ 0x30
900281e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900281e4:	9011      	str	r0, [sp, #68]	@ 0x44
900281e6:	9107      	str	r1, [sp, #28]
900281e8:	6850      	ldr	r0, [r2, #4]
900281ea:	6812      	ldr	r2, [r2, #0]
900281ec:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900281f0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900281f4:	fb00 1303 	mla	r3, r0, r3, r1
900281f8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900281fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900281fe:	689b      	ldr	r3, [r3, #8]
90028200:	3301      	adds	r3, #1
90028202:	f023 0301 	bic.w	r3, r3, #1
90028206:	9306      	str	r3, [sp, #24]
90028208:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002820a:	681f      	ldr	r7, [r3, #0]
9002820c:	9b07      	ldr	r3, [sp, #28]
9002820e:	2b00      	cmp	r3, #0
90028210:	dc03      	bgt.n	9002821a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90028212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90028214:	2b00      	cmp	r3, #0
90028216:	f340 8267 	ble.w	900286e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002821a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002821c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028220:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028224:	1e48      	subs	r0, r1, #1
90028226:	f102 3cff 	add.w	ip, r2, #4294967295
9002822a:	2d00      	cmp	r5, #0
9002822c:	f340 80b7 	ble.w	9002839e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90028230:	ea5f 4e24 	movs.w	lr, r4, asr #16
90028234:	ea4f 4326 	mov.w	r3, r6, asr #16
90028238:	d406      	bmi.n	90028248 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002823a:	4586      	cmp	lr, r0
9002823c:	da04      	bge.n	90028248 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002823e:	2b00      	cmp	r3, #0
90028240:	db02      	blt.n	90028248 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028242:	4563      	cmp	r3, ip
90028244:	f2c0 80ac 	blt.w	900283a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90028248:	f11e 0e01 	adds.w	lr, lr, #1
9002824c:	f100 809f 	bmi.w	9002838e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028250:	4571      	cmp	r1, lr
90028252:	f2c0 809c 	blt.w	9002838e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028256:	3301      	adds	r3, #1
90028258:	f100 8099 	bmi.w	9002838e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002825c:	429a      	cmp	r2, r3
9002825e:	f2c0 8096 	blt.w	9002838e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028262:	46c8      	mov	r8, r9
90028264:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90028268:	9509      	str	r5, [sp, #36]	@ 0x24
9002826a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002826c:	2b00      	cmp	r3, #0
9002826e:	f340 80b5 	ble.w	900283dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90028272:	f3c4 3303 	ubfx	r3, r4, #12, #4
90028276:	1430      	asrs	r0, r6, #16
90028278:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002827c:	9308      	str	r3, [sp, #32]
9002827e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028280:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90028284:	1423      	asrs	r3, r4, #16
90028286:	f100 813f 	bmi.w	90028508 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002828a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002828e:	455b      	cmp	r3, fp
90028290:	f280 813a 	bge.w	90028508 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028294:	2800      	cmp	r0, #0
90028296:	f2c0 8137 	blt.w	90028508 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002829a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002829e:	4558      	cmp	r0, fp
900282a0:	f280 8132 	bge.w	90028508 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900282a4:	9a06      	ldr	r2, [sp, #24]
900282a6:	fb00 3302 	mla	r3, r0, r2, r3
900282aa:	0858      	lsrs	r0, r3, #1
900282ac:	07da      	lsls	r2, r3, #31
900282ae:	9a08      	ldr	r2, [sp, #32]
900282b0:	f817 c000 	ldrb.w	ip, [r7, r0]
900282b4:	bf54      	ite	pl
900282b6:	f00c 0c0f 	andpl.w	ip, ip, #15
900282ba:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900282be:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900282c2:	fa5f fc8c 	uxtb.w	ip, ip
900282c6:	2a00      	cmp	r2, #0
900282c8:	f000 80cc 	beq.w	90028464 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900282cc:	1c58      	adds	r0, r3, #1
900282ce:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900282d2:	07c0      	lsls	r0, r0, #31
900282d4:	f817 e00e 	ldrb.w	lr, [r7, lr]
900282d8:	bf54      	ite	pl
900282da:	f00e 0e0f 	andpl.w	lr, lr, #15
900282de:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900282e2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900282e6:	fa5f fe8e 	uxtb.w	lr, lr
900282ea:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
900282ee:	b1b9      	cbz	r1, 90028320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900282f0:	4453      	add	r3, sl
900282f2:	0858      	lsrs	r0, r3, #1
900282f4:	07da      	lsls	r2, r3, #31
900282f6:	5c38      	ldrb	r0, [r7, r0]
900282f8:	bf54      	ite	pl
900282fa:	f000 000f 	andpl.w	r0, r0, #15
900282fe:	1100      	asrmi	r0, r0, #4
90028300:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028304:	b2c0      	uxtb	r0, r0
90028306:	900a      	str	r0, [sp, #40]	@ 0x28
90028308:	1c58      	adds	r0, r3, #1
9002830a:	0843      	lsrs	r3, r0, #1
9002830c:	07c2      	lsls	r2, r0, #31
9002830e:	5cfb      	ldrb	r3, [r7, r3]
90028310:	bf54      	ite	pl
90028312:	f003 030f 	andpl.w	r3, r3, #15
90028316:	111b      	asrmi	r3, r3, #4
90028318:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002831c:	b2db      	uxtb	r3, r3
9002831e:	930e      	str	r3, [sp, #56]	@ 0x38
90028320:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90028324:	b289      	uxth	r1, r1
90028326:	fb02 f301 	mul.w	r3, r2, r1
9002832a:	0112      	lsls	r2, r2, #4
9002832c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028330:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90028334:	1ad2      	subs	r2, r2, r3
90028336:	b289      	uxth	r1, r1
90028338:	b292      	uxth	r2, r2
9002833a:	1a40      	subs	r0, r0, r1
9002833c:	fa1f fe80 	uxth.w	lr, r0
90028340:	980d      	ldr	r0, [sp, #52]	@ 0x34
90028342:	4342      	muls	r2, r0
90028344:	fb0c 2c0e 	mla	ip, ip, lr, r2
90028348:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002834a:	fb01 c102 	mla	r1, r1, r2, ip
9002834e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90028350:	fb03 1302 	mla	r3, r3, r2, r1
90028354:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028358:	2bff      	cmp	r3, #255	@ 0xff
9002835a:	f040 8094 	bne.w	90028486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
9002835e:	4bbf      	ldr	r3, [pc, #764]	@ (9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028360:	681a      	ldr	r2, [r3, #0]
90028362:	4bbf      	ldr	r3, [pc, #764]	@ (90028660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028364:	0951      	lsrs	r1, r2, #5
90028366:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002836a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002836e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028372:	430b      	orrs	r3, r1
90028374:	4313      	orrs	r3, r2
90028376:	f8a8 3000 	strh.w	r3, [r8]
9002837a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002837c:	f108 0802 	add.w	r8, r8, #2
90028380:	441c      	add	r4, r3
90028382:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028384:	441e      	add	r6, r3
90028386:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028388:	3b01      	subs	r3, #1
9002838a:	9309      	str	r3, [sp, #36]	@ 0x24
9002838c:	e76d      	b.n	9002826a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002838e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028390:	3d01      	subs	r5, #1
90028392:	f109 0902 	add.w	r9, r9, #2
90028396:	441c      	add	r4, r3
90028398:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002839a:	441e      	add	r6, r3
9002839c:	e745      	b.n	9002822a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002839e:	d021      	beq.n	900283e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900283a0:	1e6b      	subs	r3, r5, #1
900283a2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900283a4:	fb00 4003 	mla	r0, r0, r3, r4
900283a8:	1400      	asrs	r0, r0, #16
900283aa:	f53f af5a 	bmi.w	90028262 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900283ae:	3901      	subs	r1, #1
900283b0:	4288      	cmp	r0, r1
900283b2:	f6bf af56 	bge.w	90028262 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900283b6:	9920      	ldr	r1, [sp, #128]	@ 0x80
900283b8:	fb01 6303 	mla	r3, r1, r3, r6
900283bc:	141b      	asrs	r3, r3, #16
900283be:	f53f af50 	bmi.w	90028262 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900283c2:	3a01      	subs	r2, #1
900283c4:	4293      	cmp	r3, r2
900283c6:	f6bf af4c 	bge.w	90028262 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900283ca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900283ce:	46a8      	mov	r8, r5
900283d0:	46ce      	mov	lr, r9
900283d2:	9308      	str	r3, [sp, #32]
900283d4:	f1b8 0f00 	cmp.w	r8, #0
900283d8:	f300 80b6 	bgt.w	90028548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900283dc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900283e0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900283e4:	9b07      	ldr	r3, [sp, #28]
900283e6:	2b00      	cmp	r3, #0
900283e8:	f340 817e 	ble.w	900286e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900283ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900283f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900283f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900283f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900283fa:	eef0 6a62 	vmov.f32	s13, s5
900283fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028402:	ee31 1a05 	vadd.f32	s2, s2, s10
90028406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002840a:	ee16 4a90 	vmov	r4, s13
9002840e:	eef0 6a43 	vmov.f32	s13, s6
90028412:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028416:	ee16 6a90 	vmov	r6, s13
9002841a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002841e:	ee61 7a27 	vmul.f32	s15, s2, s15
90028422:	ee77 2a62 	vsub.f32	s5, s14, s5
90028426:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002842a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002842e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028432:	ee12 2a90 	vmov	r2, s5
90028436:	eef0 2a47 	vmov.f32	s5, s14
9002843a:	fb92 f3f3 	sdiv	r3, r2, r3
9002843e:	ee13 2a10 	vmov	r2, s6
90028442:	931f      	str	r3, [sp, #124]	@ 0x7c
90028444:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028446:	eeb0 3a67 	vmov.f32	s6, s15
9002844a:	fb92 f3f3 	sdiv	r3, r2, r3
9002844e:	9320      	str	r3, [sp, #128]	@ 0x80
90028450:	9b07      	ldr	r3, [sp, #28]
90028452:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90028454:	3b01      	subs	r3, #1
90028456:	9307      	str	r3, [sp, #28]
90028458:	bf08      	it	eq
9002845a:	4615      	moveq	r5, r2
9002845c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002845e:	bf18      	it	ne
90028460:	461d      	movne	r5, r3
90028462:	e6d3      	b.n	9002820c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90028464:	2900      	cmp	r1, #0
90028466:	f43f af5b 	beq.w	90028320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002846a:	eb0a 0003 	add.w	r0, sl, r3
9002846e:	0843      	lsrs	r3, r0, #1
90028470:	07c0      	lsls	r0, r0, #31
90028472:	5cfb      	ldrb	r3, [r7, r3]
90028474:	bf54      	ite	pl
90028476:	f003 030f 	andpl.w	r3, r3, #15
9002847a:	111b      	asrmi	r3, r3, #4
9002847c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028480:	b2db      	uxtb	r3, r3
90028482:	930a      	str	r3, [sp, #40]	@ 0x28
90028484:	e74c      	b.n	90028320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028486:	2b00      	cmp	r3, #0
90028488:	f43f af77 	beq.w	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002848c:	4a73      	ldr	r2, [pc, #460]	@ (9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002848e:	fa1f fe83 	uxth.w	lr, r3
90028492:	f8b8 c000 	ldrh.w	ip, [r8]
90028496:	43db      	mvns	r3, r3
90028498:	6810      	ldr	r0, [r2, #0]
9002849a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002849e:	f3c0 4207 	ubfx	r2, r0, #16, #8
900284a2:	b2db      	uxtb	r3, r3
900284a4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900284a8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900284ac:	fb12 f20e 	smulbb	r2, r2, lr
900284b0:	b2c0      	uxtb	r0, r0
900284b2:	fb1b fb0e 	smulbb	fp, fp, lr
900284b6:	fb01 2103 	mla	r1, r1, r3, r2
900284ba:	ea4f 02ec 	mov.w	r2, ip, asr #3
900284be:	fb10 fe0e 	smulbb	lr, r0, lr
900284c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900284c6:	b289      	uxth	r1, r1
900284c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900284cc:	fa5f fc8c 	uxtb.w	ip, ip
900284d0:	fb02 b203 	mla	r2, r2, r3, fp
900284d4:	1c48      	adds	r0, r1, #1
900284d6:	fb0c e303 	mla	r3, ip, r3, lr
900284da:	b292      	uxth	r2, r2
900284dc:	b29b      	uxth	r3, r3
900284de:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900284e2:	f102 0b01 	add.w	fp, r2, #1
900284e6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
900284ea:	1c59      	adds	r1, r3, #1
900284ec:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900284f0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900284f4:	0952      	lsrs	r2, r2, #5
900284f6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900284fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900284fe:	4301      	orrs	r1, r0
90028500:	4311      	orrs	r1, r2
90028502:	f8a8 1000 	strh.w	r1, [r8]
90028506:	e738      	b.n	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028508:	f113 0b01 	adds.w	fp, r3, #1
9002850c:	f53f af35 	bmi.w	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028510:	45dc      	cmp	ip, fp
90028512:	f6ff af32 	blt.w	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028516:	f110 0b01 	adds.w	fp, r0, #1
9002851a:	f53f af2e 	bmi.w	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002851e:	45de      	cmp	lr, fp
90028520:	f6ff af2b 	blt.w	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028524:	9302      	str	r3, [sp, #8]
90028526:	fa0f f38e 	sxth.w	r3, lr
9002852a:	9a08      	ldr	r2, [sp, #32]
9002852c:	9301      	str	r3, [sp, #4]
9002852e:	fa0f f38c 	sxth.w	r3, ip
90028532:	9105      	str	r1, [sp, #20]
90028534:	4641      	mov	r1, r8
90028536:	9300      	str	r3, [sp, #0]
90028538:	4653      	mov	r3, sl
9002853a:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002853e:	463a      	mov	r2, r7
90028540:	9811      	ldr	r0, [sp, #68]	@ 0x44
90028542:	f7ff fd73 	bl	9002802c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90028546:	e718      	b.n	9002837a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028548:	1422      	asrs	r2, r4, #16
9002854a:	9906      	ldr	r1, [sp, #24]
9002854c:	1433      	asrs	r3, r6, #16
9002854e:	f3c4 3003 	ubfx	r0, r4, #12, #4
90028552:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90028556:	fb01 2303 	mla	r3, r1, r3, r2
9002855a:	085a      	lsrs	r2, r3, #1
9002855c:	07d9      	lsls	r1, r3, #31
9002855e:	5cba      	ldrb	r2, [r7, r2]
90028560:	bf54      	ite	pl
90028562:	f002 020f 	andpl.w	r2, r2, #15
90028566:	1112      	asrmi	r2, r2, #4
90028568:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002856c:	b2d2      	uxtb	r2, r2
9002856e:	2800      	cmp	r0, #0
90028570:	d063      	beq.n	9002863a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90028572:	f103 0a01 	add.w	sl, r3, #1
90028576:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002857a:	f01a 0f01 	tst.w	sl, #1
9002857e:	5c79      	ldrb	r1, [r7, r1]
90028580:	bf0c      	ite	eq
90028582:	f001 010f 	andeq.w	r1, r1, #15
90028586:	1109      	asrne	r1, r1, #4
90028588:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002858c:	b2c9      	uxtb	r1, r1
9002858e:	910f      	str	r1, [sp, #60]	@ 0x3c
90028590:	f1bc 0f00 	cmp.w	ip, #0
90028594:	d01a      	beq.n	900285cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028596:	9908      	ldr	r1, [sp, #32]
90028598:	440b      	add	r3, r1
9002859a:	0859      	lsrs	r1, r3, #1
9002859c:	f013 0f01 	tst.w	r3, #1
900285a0:	f103 0301 	add.w	r3, r3, #1
900285a4:	5c79      	ldrb	r1, [r7, r1]
900285a6:	bf0c      	ite	eq
900285a8:	f001 010f 	andeq.w	r1, r1, #15
900285ac:	1109      	asrne	r1, r1, #4
900285ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900285b2:	b2c9      	uxtb	r1, r1
900285b4:	910b      	str	r1, [sp, #44]	@ 0x2c
900285b6:	0859      	lsrs	r1, r3, #1
900285b8:	07db      	lsls	r3, r3, #31
900285ba:	5c79      	ldrb	r1, [r7, r1]
900285bc:	bf54      	ite	pl
900285be:	f001 010f 	andpl.w	r1, r1, #15
900285c2:	1109      	asrmi	r1, r1, #4
900285c4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900285c8:	b2c9      	uxtb	r1, r1
900285ca:	9110      	str	r1, [sp, #64]	@ 0x40
900285cc:	b280      	uxth	r0, r0
900285ce:	fa1f fc8c 	uxth.w	ip, ip
900285d2:	fb00 f30c 	mul.w	r3, r0, ip
900285d6:	0100      	lsls	r0, r0, #4
900285d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900285dc:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
900285e0:	1ac0      	subs	r0, r0, r3
900285e2:	fa1f fc8c 	uxth.w	ip, ip
900285e6:	b280      	uxth	r0, r0
900285e8:	eba1 010c 	sub.w	r1, r1, ip
900285ec:	fa1f fa81 	uxth.w	sl, r1
900285f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900285f2:	4348      	muls	r0, r1
900285f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900285f6:	fb02 020a 	mla	r2, r2, sl, r0
900285fa:	fb0c 2c01 	mla	ip, ip, r1, r2
900285fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028600:	fb03 c302 	mla	r3, r3, r2, ip
90028604:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028608:	2bff      	cmp	r3, #255	@ 0xff
9002860a:	d12b      	bne.n	90028664 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002860c:	4b13      	ldr	r3, [pc, #76]	@ (9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002860e:	681a      	ldr	r2, [r3, #0]
90028610:	4b13      	ldr	r3, [pc, #76]	@ (90028660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028612:	0951      	lsrs	r1, r2, #5
90028614:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028618:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002861c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028620:	430b      	orrs	r3, r1
90028622:	4313      	orrs	r3, r2
90028624:	f8ae 3000 	strh.w	r3, [lr]
90028628:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002862a:	f10e 0e02 	add.w	lr, lr, #2
9002862e:	f108 38ff 	add.w	r8, r8, #4294967295
90028632:	441c      	add	r4, r3
90028634:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028636:	441e      	add	r6, r3
90028638:	e6cc      	b.n	900283d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002863a:	f1bc 0f00 	cmp.w	ip, #0
9002863e:	d0c5      	beq.n	900285cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028640:	9908      	ldr	r1, [sp, #32]
90028642:	440b      	add	r3, r1
90028644:	0859      	lsrs	r1, r3, #1
90028646:	07db      	lsls	r3, r3, #31
90028648:	5c79      	ldrb	r1, [r7, r1]
9002864a:	bf54      	ite	pl
9002864c:	f001 010f 	andpl.w	r1, r1, #15
90028650:	1109      	asrmi	r1, r1, #4
90028652:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028656:	b2c9      	uxtb	r1, r1
90028658:	910b      	str	r1, [sp, #44]	@ 0x2c
9002865a:	e7b7      	b.n	900285cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002865c:	240234cc 	.word	0x240234cc
90028660:	fffff800 	.word	0xfffff800
90028664:	2b00      	cmp	r3, #0
90028666:	d0df      	beq.n	90028628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028668:	4a21      	ldr	r2, [pc, #132]	@ (900286f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002866a:	fa1f fa83 	uxth.w	sl, r3
9002866e:	f8be c000 	ldrh.w	ip, [lr]
90028672:	43db      	mvns	r3, r3
90028674:	6810      	ldr	r0, [r2, #0]
90028676:	ea4f 212c 	mov.w	r1, ip, asr #8
9002867a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002867e:	b2db      	uxtb	r3, r3
90028680:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028684:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028688:	fb12 f20a 	smulbb	r2, r2, sl
9002868c:	b2c0      	uxtb	r0, r0
9002868e:	fb1b fb0a 	smulbb	fp, fp, sl
90028692:	fb01 2103 	mla	r1, r1, r3, r2
90028696:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002869a:	fb10 f00a 	smulbb	r0, r0, sl
9002869e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900286a2:	b289      	uxth	r1, r1
900286a4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900286a8:	fa5f fc8c 	uxtb.w	ip, ip
900286ac:	fb02 b203 	mla	r2, r2, r3, fp
900286b0:	fb0c 0003 	mla	r0, ip, r3, r0
900286b4:	1c4b      	adds	r3, r1, #1
900286b6:	b292      	uxth	r2, r2
900286b8:	b280      	uxth	r0, r0
900286ba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900286be:	f100 0b01 	add.w	fp, r0, #1
900286c2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900286c6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
900286ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900286ce:	ea4b 0101 	orr.w	r1, fp, r1
900286d2:	f102 0b01 	add.w	fp, r2, #1
900286d6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900286da:	0952      	lsrs	r2, r2, #5
900286dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900286e0:	4311      	orrs	r1, r2
900286e2:	f8ae 1000 	strh.w	r1, [lr]
900286e6:	e79f      	b.n	90028628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900286e8:	b013      	add	sp, #76	@ 0x4c
900286ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900286ee:	bf00      	nop
900286f0:	240234cc 	.word	0x240234cc

900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900286f4:	b570      	push	{r4, r5, r6, lr}
900286f6:	1208      	asrs	r0, r1, #8
900286f8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
900286fc:	b29e      	uxth	r6, r3
900286fe:	1213      	asrs	r3, r2, #8
90028700:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028704:	10cc      	asrs	r4, r1, #3
90028706:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002870a:	00c9      	lsls	r1, r1, #3
9002870c:	fb10 f006 	smulbb	r0, r0, r6
90028710:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90028714:	fb13 f305 	smulbb	r3, r3, r5
90028718:	fb14 f406 	smulbb	r4, r4, r6
9002871c:	4418      	add	r0, r3
9002871e:	10d3      	asrs	r3, r2, #3
90028720:	00d2      	lsls	r2, r2, #3
90028722:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028726:	b280      	uxth	r0, r0
90028728:	b2d2      	uxtb	r2, r2
9002872a:	fb13 f305 	smulbb	r3, r3, r5
9002872e:	fb12 f205 	smulbb	r2, r2, r5
90028732:	441c      	add	r4, r3
90028734:	b2cb      	uxtb	r3, r1
90028736:	fb13 f306 	smulbb	r3, r3, r6
9002873a:	b2a4      	uxth	r4, r4
9002873c:	4413      	add	r3, r2
9002873e:	1c42      	adds	r2, r0, #1
90028740:	b29b      	uxth	r3, r3
90028742:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028746:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002874a:	1c58      	adds	r0, r3, #1
9002874c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028750:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028754:	4310      	orrs	r0, r2
90028756:	1c62      	adds	r2, r4, #1
90028758:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002875c:	0964      	lsrs	r4, r4, #5
9002875e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028762:	4320      	orrs	r0, r4
90028764:	bd70      	pop	{r4, r5, r6, pc}
	...

90028768 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002876c:	b08f      	sub	sp, #60	@ 0x3c
9002876e:	461c      	mov	r4, r3
90028770:	460d      	mov	r5, r1
90028772:	4616      	mov	r6, r2
90028774:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028778:	9004      	str	r0, [sp, #16]
9002877a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002877c:	2f00      	cmp	r7, #0
9002877e:	f000 80f6 	beq.w	9002896e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028782:	6820      	ldr	r0, [r4, #0]
90028784:	aa0a      	add	r2, sp, #40	@ 0x28
90028786:	6861      	ldr	r1, [r4, #4]
90028788:	f04f 0802 	mov.w	r8, #2
9002878c:	3604      	adds	r6, #4
9002878e:	c203      	stmia	r2!, {r0, r1}
90028790:	6818      	ldr	r0, [r3, #0]
90028792:	aa0c      	add	r2, sp, #48	@ 0x30
90028794:	6859      	ldr	r1, [r3, #4]
90028796:	c203      	stmia	r2!, {r0, r1}
90028798:	a80a      	add	r0, sp, #40	@ 0x28
9002879a:	f7ee fbbf 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002879e:	4621      	mov	r1, r4
900287a0:	a80c      	add	r0, sp, #48	@ 0x30
900287a2:	f7ee fbe3 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900287a6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900287aa:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900287ae:	f002 0301 	and.w	r3, r2, #1
900287b2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
900287b6:	9306      	str	r3, [sp, #24]
900287b8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900287bc:	f003 0101 	and.w	r1, r3, #1
900287c0:	9105      	str	r1, [sp, #20]
900287c2:	9805      	ldr	r0, [sp, #20]
900287c4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900287c8:	4403      	add	r3, r0
900287ca:	fb01 2303 	mla	r3, r1, r3, r2
900287ce:	fb93 f3f8 	sdiv	r3, r3, r8
900287d2:	441d      	add	r5, r3
900287d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900287d8:	441a      	add	r2, r3
900287da:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900287de:	4419      	add	r1, r3
900287e0:	4b64      	ldr	r3, [pc, #400]	@ (90028974 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900287e2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900287e6:	6818      	ldr	r0, [r3, #0]
900287e8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900287ec:	6803      	ldr	r3, [r0, #0]
900287ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900287f0:	4798      	blx	r3
900287f2:	4a61      	ldr	r2, [pc, #388]	@ (90028978 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900287f4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
900287f8:	2fff      	cmp	r7, #255	@ 0xff
900287fa:	8813      	ldrh	r3, [r2, #0]
900287fc:	4611      	mov	r1, r2
900287fe:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028802:	fb03 fb0b 	mul.w	fp, r3, fp
90028806:	fb03 a404 	mla	r4, r3, r4, sl
9002880a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002880e:	d06b      	beq.n	900288e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028810:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90028814:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028818:	9303      	str	r3, [sp, #12]
9002881a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
9002881e:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028822:	9b07      	ldr	r3, [sp, #28]
90028824:	42a3      	cmp	r3, r4
90028826:	f240 809d 	bls.w	90028964 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002882a:	9b06      	ldr	r3, [sp, #24]
9002882c:	2b00      	cmp	r3, #0
9002882e:	d039      	beq.n	900288a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028830:	782b      	ldrb	r3, [r5, #0]
90028832:	f105 0801 	add.w	r8, r5, #1
90028836:	f109 3bff 	add.w	fp, r9, #4294967295
9002883a:	8822      	ldrh	r2, [r4, #0]
9002883c:	f003 030f 	and.w	r3, r3, #15
90028840:	9804      	ldr	r0, [sp, #16]
90028842:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028846:	9b03      	ldr	r3, [sp, #12]
90028848:	9300      	str	r3, [sp, #0]
9002884a:	463b      	mov	r3, r7
9002884c:	f7ff ff52 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028850:	f824 0b02 	strh.w	r0, [r4], #2
90028854:	f1bb 0f01 	cmp.w	fp, #1
90028858:	46a2      	mov	sl, r4
9002885a:	f104 0404 	add.w	r4, r4, #4
9002885e:	dd24      	ble.n	900288aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028860:	f898 3000 	ldrb.w	r3, [r8]
90028864:	f1ab 0b02 	sub.w	fp, fp, #2
90028868:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002886c:	091b      	lsrs	r3, r3, #4
9002886e:	9804      	ldr	r0, [sp, #16]
90028870:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028874:	9b03      	ldr	r3, [sp, #12]
90028876:	9300      	str	r3, [sp, #0]
90028878:	463b      	mov	r3, r7
9002887a:	f7ff ff3b 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002887e:	f824 0c04 	strh.w	r0, [r4, #-4]
90028882:	f818 3b01 	ldrb.w	r3, [r8], #1
90028886:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002888a:	f003 030f 	and.w	r3, r3, #15
9002888e:	9804      	ldr	r0, [sp, #16]
90028890:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028894:	9b03      	ldr	r3, [sp, #12]
90028896:	9300      	str	r3, [sp, #0]
90028898:	463b      	mov	r3, r7
9002889a:	f7ff ff2b 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002889e:	f824 0c02 	strh.w	r0, [r4, #-2]
900288a2:	e7d7      	b.n	90028854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900288a4:	46a8      	mov	r8, r5
900288a6:	46cb      	mov	fp, r9
900288a8:	e7d4      	b.n	90028854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900288aa:	d10e      	bne.n	900288ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900288ac:	f898 3000 	ldrb.w	r3, [r8]
900288b0:	f8ba 2000 	ldrh.w	r2, [sl]
900288b4:	091b      	lsrs	r3, r3, #4
900288b6:	9804      	ldr	r0, [sp, #16]
900288b8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900288bc:	9b03      	ldr	r3, [sp, #12]
900288be:	9300      	str	r3, [sp, #0]
900288c0:	463b      	mov	r3, r7
900288c2:	f7ff ff17 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900288c6:	f82a 0b02 	strh.w	r0, [sl], #2
900288ca:	9b08      	ldr	r3, [sp, #32]
900288cc:	9a05      	ldr	r2, [sp, #20]
900288ce:	881c      	ldrh	r4, [r3, #0]
900288d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900288d4:	eba4 0409 	sub.w	r4, r4, r9
900288d8:	4413      	add	r3, r2
900288da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900288dc:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900288e0:	fb93 f3f2 	sdiv	r3, r3, r2
900288e4:	441d      	add	r5, r3
900288e6:	e79c      	b.n	90028822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900288e8:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900288ec:	45a3      	cmp	fp, r4
900288ee:	d939      	bls.n	90028964 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900288f0:	9b06      	ldr	r3, [sp, #24]
900288f2:	b1fb      	cbz	r3, 90028934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900288f4:	782b      	ldrb	r3, [r5, #0]
900288f6:	1c6a      	adds	r2, r5, #1
900288f8:	f109 30ff 	add.w	r0, r9, #4294967295
900288fc:	3402      	adds	r4, #2
900288fe:	f003 030f 	and.w	r3, r3, #15
90028902:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028906:	f824 3c02 	strh.w	r3, [r4, #-2]
9002890a:	2801      	cmp	r0, #1
9002890c:	4623      	mov	r3, r4
9002890e:	f104 0404 	add.w	r4, r4, #4
90028912:	dd12      	ble.n	9002893a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90028914:	7813      	ldrb	r3, [r2, #0]
90028916:	3802      	subs	r0, #2
90028918:	091b      	lsrs	r3, r3, #4
9002891a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002891e:	f824 3c04 	strh.w	r3, [r4, #-4]
90028922:	f812 3b01 	ldrb.w	r3, [r2], #1
90028926:	f003 030f 	and.w	r3, r3, #15
9002892a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002892e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028932:	e7ea      	b.n	9002890a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028934:	462a      	mov	r2, r5
90028936:	4648      	mov	r0, r9
90028938:	e7e7      	b.n	9002890a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002893a:	d106      	bne.n	9002894a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
9002893c:	7812      	ldrb	r2, [r2, #0]
9002893e:	3302      	adds	r3, #2
90028940:	0912      	lsrs	r2, r2, #4
90028942:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90028946:	f823 2c02 	strh.w	r2, [r3, #-2]
9002894a:	880c      	ldrh	r4, [r1, #0]
9002894c:	9a05      	ldr	r2, [sp, #20]
9002894e:	eba4 0409 	sub.w	r4, r4, r9
90028952:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90028956:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002895a:	4413      	add	r3, r2
9002895c:	fb93 f3f8 	sdiv	r3, r3, r8
90028960:	441d      	add	r5, r3
90028962:	e7c3      	b.n	900288ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90028964:	4b03      	ldr	r3, [pc, #12]	@ (90028974 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028966:	6818      	ldr	r0, [r3, #0]
90028968:	6803      	ldr	r3, [r0, #0]
9002896a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002896c:	4798      	blx	r3
9002896e:	b00f      	add	sp, #60	@ 0x3c
90028970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028974:	240234bc 	.word	0x240234bc
90028978:	240234b6 	.word	0x240234b6

9002897c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
9002897c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002897e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028982:	0a0f      	lsrs	r7, r1, #8
90028984:	2dff      	cmp	r5, #255	@ 0xff
90028986:	d10c      	bne.n	900289a2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028988:	2bff      	cmp	r3, #255	@ 0xff
9002898a:	d10a      	bne.n	900289a2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002898c:	0948      	lsrs	r0, r1, #5
9002898e:	4b25      	ldr	r3, [pc, #148]	@ (90028a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028990:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028994:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028998:	403b      	ands	r3, r7
9002899a:	4318      	orrs	r0, r3
9002899c:	4308      	orrs	r0, r1
9002899e:	b280      	uxth	r0, r0
900289a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
900289a2:	fb15 f503 	smulbb	r5, r5, r3
900289a6:	1214      	asrs	r4, r2, #8
900289a8:	10d6      	asrs	r6, r2, #3
900289aa:	b2ab      	uxth	r3, r5
900289ac:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900289b0:	00d0      	lsls	r0, r2, #3
900289b2:	f3c1 4207 	ubfx	r2, r1, #16, #8
900289b6:	1c5d      	adds	r5, r3, #1
900289b8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900289bc:	b2c0      	uxtb	r0, r0
900289be:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900289c2:	eb05 2513 	add.w	r5, r5, r3, lsr #8
900289c6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900289ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
900289ce:	fa1f fc85 	uxth.w	ip, r5
900289d2:	43ed      	mvns	r5, r5
900289d4:	fb12 f20c 	smulbb	r2, r2, ip
900289d8:	b2eb      	uxtb	r3, r5
900289da:	b2fd      	uxtb	r5, r7
900289dc:	fb04 2403 	mla	r4, r4, r3, r2
900289e0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900289e4:	fb15 f50c 	smulbb	r5, r5, ip
900289e8:	b2c8      	uxtb	r0, r1
900289ea:	b2a4      	uxth	r4, r4
900289ec:	fb10 f00c 	smulbb	r0, r0, ip
900289f0:	fb06 5503 	mla	r5, r6, r3, r5
900289f4:	fb02 0003 	mla	r0, r2, r3, r0
900289f8:	b2ad      	uxth	r5, r5
900289fa:	b283      	uxth	r3, r0
900289fc:	1c60      	adds	r0, r4, #1
900289fe:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028a02:	1c58      	adds	r0, r3, #1
90028a04:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028a08:	1c6b      	adds	r3, r5, #1
90028a0a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028a0e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028a12:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028a16:	096d      	lsrs	r5, r5, #5
90028a18:	4320      	orrs	r0, r4
90028a1a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90028a1e:	4328      	orrs	r0, r5
90028a20:	e7be      	b.n	900289a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028a22:	bf00      	nop
90028a24:	00fff800 	.word	0x00fff800

90028a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028a2c:	461c      	mov	r4, r3
90028a2e:	b08d      	sub	sp, #52	@ 0x34
90028a30:	460d      	mov	r5, r1
90028a32:	4616      	mov	r6, r2
90028a34:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028a36:	4680      	mov	r8, r0
90028a38:	6861      	ldr	r1, [r4, #4]
90028a3a:	aa08      	add	r2, sp, #32
90028a3c:	6820      	ldr	r0, [r4, #0]
90028a3e:	f04f 0a02 	mov.w	sl, #2
90028a42:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90028a46:	3604      	adds	r6, #4
90028a48:	c203      	stmia	r2!, {r0, r1}
90028a4a:	6818      	ldr	r0, [r3, #0]
90028a4c:	aa0a      	add	r2, sp, #40	@ 0x28
90028a4e:	6859      	ldr	r1, [r3, #4]
90028a50:	c203      	stmia	r2!, {r0, r1}
90028a52:	a808      	add	r0, sp, #32
90028a54:	f7ee fa62 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028a58:	4621      	mov	r1, r4
90028a5a:	a80a      	add	r0, sp, #40	@ 0x28
90028a5c:	f7ee fa86 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028a60:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90028a64:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90028a68:	f002 0301 	and.w	r3, r2, #1
90028a6c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90028a70:	9303      	str	r3, [sp, #12]
90028a72:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028a76:	f003 0101 	and.w	r1, r3, #1
90028a7a:	9102      	str	r1, [sp, #8]
90028a7c:	9802      	ldr	r0, [sp, #8]
90028a7e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90028a82:	4403      	add	r3, r0
90028a84:	fb01 2303 	mla	r3, r1, r3, r2
90028a88:	fb93 f3fa 	sdiv	r3, r3, sl
90028a8c:	441d      	add	r5, r3
90028a8e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028a92:	441a      	add	r2, r3
90028a94:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90028a98:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90028a9c:	4419      	add	r1, r3
90028a9e:	4a3e      	ldr	r2, [pc, #248]	@ (90028b98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028aa0:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90028aa4:	6810      	ldr	r0, [r2, #0]
90028aa6:	9205      	str	r2, [sp, #20]
90028aa8:	6803      	ldr	r3, [r0, #0]
90028aaa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028aac:	4798      	blx	r3
90028aae:	4b3b      	ldr	r3, [pc, #236]	@ (90028b9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028ab0:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90028ab4:	8819      	ldrh	r1, [r3, #0]
90028ab6:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90028aba:	434f      	muls	r7, r1
90028abc:	fb01 c404 	mla	r4, r1, r4, ip
90028ac0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028ac4:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028ac8:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028acc:	9204      	str	r2, [sp, #16]
90028ace:	9b04      	ldr	r3, [sp, #16]
90028ad0:	429c      	cmp	r4, r3
90028ad2:	d258      	bcs.n	90028b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028ad4:	9b03      	ldr	r3, [sp, #12]
90028ad6:	2b00      	cmp	r3, #0
90028ad8:	d034      	beq.n	90028b44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90028ada:	782b      	ldrb	r3, [r5, #0]
90028adc:	1c6f      	adds	r7, r5, #1
90028ade:	f003 030f 	and.w	r3, r3, #15
90028ae2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028ae6:	0e0b      	lsrs	r3, r1, #24
90028ae8:	d006      	beq.n	90028af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90028aea:	8822      	ldrh	r2, [r4, #0]
90028aec:	4640      	mov	r0, r8
90028aee:	9300      	str	r3, [sp, #0]
90028af0:	464b      	mov	r3, r9
90028af2:	f7ff ff43 	bl	9002897c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028af6:	8020      	strh	r0, [r4, #0]
90028af8:	3402      	adds	r4, #2
90028afa:	f10b 3aff 	add.w	sl, fp, #4294967295
90028afe:	f1ba 0f01 	cmp.w	sl, #1
90028b02:	dd22      	ble.n	90028b4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028b04:	783b      	ldrb	r3, [r7, #0]
90028b06:	091b      	lsrs	r3, r3, #4
90028b08:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028b0c:	0e0b      	lsrs	r3, r1, #24
90028b0e:	d006      	beq.n	90028b1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028b10:	8822      	ldrh	r2, [r4, #0]
90028b12:	4640      	mov	r0, r8
90028b14:	9300      	str	r3, [sp, #0]
90028b16:	464b      	mov	r3, r9
90028b18:	f7ff ff30 	bl	9002897c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028b1c:	8020      	strh	r0, [r4, #0]
90028b1e:	f817 3b01 	ldrb.w	r3, [r7], #1
90028b22:	f003 030f 	and.w	r3, r3, #15
90028b26:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028b2a:	0e0b      	lsrs	r3, r1, #24
90028b2c:	d006      	beq.n	90028b3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028b2e:	8862      	ldrh	r2, [r4, #2]
90028b30:	4640      	mov	r0, r8
90028b32:	9300      	str	r3, [sp, #0]
90028b34:	464b      	mov	r3, r9
90028b36:	f7ff ff21 	bl	9002897c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028b3a:	8060      	strh	r0, [r4, #2]
90028b3c:	3404      	adds	r4, #4
90028b3e:	f1aa 0a02 	sub.w	sl, sl, #2
90028b42:	e7dc      	b.n	90028afe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028b44:	462f      	mov	r7, r5
90028b46:	46da      	mov	sl, fp
90028b48:	e7d9      	b.n	90028afe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028b4a:	d10d      	bne.n	90028b68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028b4c:	783b      	ldrb	r3, [r7, #0]
90028b4e:	091b      	lsrs	r3, r3, #4
90028b50:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028b54:	0e0b      	lsrs	r3, r1, #24
90028b56:	d006      	beq.n	90028b66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028b58:	8822      	ldrh	r2, [r4, #0]
90028b5a:	4640      	mov	r0, r8
90028b5c:	9300      	str	r3, [sp, #0]
90028b5e:	464b      	mov	r3, r9
90028b60:	f7ff ff0c 	bl	9002897c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028b64:	8020      	strh	r0, [r4, #0]
90028b66:	3402      	adds	r4, #2
90028b68:	9b06      	ldr	r3, [sp, #24]
90028b6a:	9a02      	ldr	r2, [sp, #8]
90028b6c:	881b      	ldrh	r3, [r3, #0]
90028b6e:	eba3 030b 	sub.w	r3, r3, fp
90028b72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90028b76:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028b7a:	4413      	add	r3, r2
90028b7c:	9a07      	ldr	r2, [sp, #28]
90028b7e:	fb93 f3f2 	sdiv	r3, r3, r2
90028b82:	441d      	add	r5, r3
90028b84:	e7a3      	b.n	90028ace <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028b86:	9b05      	ldr	r3, [sp, #20]
90028b88:	6818      	ldr	r0, [r3, #0]
90028b8a:	6803      	ldr	r3, [r0, #0]
90028b8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028b8e:	4798      	blx	r3
90028b90:	b00d      	add	sp, #52	@ 0x34
90028b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028b96:	bf00      	nop
90028b98:	240234bc 	.word	0x240234bc
90028b9c:	240234b6 	.word	0x240234b6

90028ba0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90028ba0:	b570      	push	{r4, r5, r6, lr}
90028ba2:	1214      	asrs	r4, r2, #8
90028ba4:	788d      	ldrb	r5, [r1, #2]
90028ba6:	f89d 6010 	ldrb.w	r6, [sp, #16]
90028baa:	10d0      	asrs	r0, r2, #3
90028bac:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028bb0:	00d2      	lsls	r2, r2, #3
90028bb2:	fb15 f503 	smulbb	r5, r5, r3
90028bb6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028bba:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028bbe:	b2d2      	uxtb	r2, r2
90028bc0:	fb04 5506 	mla	r5, r4, r6, r5
90028bc4:	784c      	ldrb	r4, [r1, #1]
90028bc6:	7809      	ldrb	r1, [r1, #0]
90028bc8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90028bcc:	fb14 f403 	smulbb	r4, r4, r3
90028bd0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028bd4:	fb11 f303 	smulbb	r3, r1, r3
90028bd8:	b2ad      	uxth	r5, r5
90028bda:	fb00 4406 	mla	r4, r0, r6, r4
90028bde:	fb02 3306 	mla	r3, r2, r6, r3
90028be2:	1c68      	adds	r0, r5, #1
90028be4:	b2a4      	uxth	r4, r4
90028be6:	b29b      	uxth	r3, r3
90028be8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90028bec:	1c62      	adds	r2, r4, #1
90028bee:	1c58      	adds	r0, r3, #1
90028bf0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028bf4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90028bf8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028bfc:	0964      	lsrs	r4, r4, #5
90028bfe:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028c02:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028c06:	4328      	orrs	r0, r5
90028c08:	4320      	orrs	r0, r4
90028c0a:	bd70      	pop	{r4, r5, r6, pc}

90028c0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028c10:	b08f      	sub	sp, #60	@ 0x3c
90028c12:	461c      	mov	r4, r3
90028c14:	4682      	mov	sl, r0
90028c16:	460e      	mov	r6, r1
90028c18:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028c1c:	4615      	mov	r5, r2
90028c1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028c20:	2f00      	cmp	r7, #0
90028c22:	f000 8141 	beq.w	90028ea8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90028c26:	6820      	ldr	r0, [r4, #0]
90028c28:	aa0a      	add	r2, sp, #40	@ 0x28
90028c2a:	6861      	ldr	r1, [r4, #4]
90028c2c:	f04f 0802 	mov.w	r8, #2
90028c30:	3504      	adds	r5, #4
90028c32:	c203      	stmia	r2!, {r0, r1}
90028c34:	6818      	ldr	r0, [r3, #0]
90028c36:	aa0c      	add	r2, sp, #48	@ 0x30
90028c38:	6859      	ldr	r1, [r3, #4]
90028c3a:	c203      	stmia	r2!, {r0, r1}
90028c3c:	a80a      	add	r0, sp, #40	@ 0x28
90028c3e:	f7ee f96d 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028c42:	4621      	mov	r1, r4
90028c44:	a80c      	add	r0, sp, #48	@ 0x30
90028c46:	f7ee f991 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028c4a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90028c4e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90028c52:	f002 0301 	and.w	r3, r2, #1
90028c56:	9306      	str	r3, [sp, #24]
90028c58:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028c5c:	f003 0101 	and.w	r1, r3, #1
90028c60:	9105      	str	r1, [sp, #20]
90028c62:	9805      	ldr	r0, [sp, #20]
90028c64:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028c68:	4403      	add	r3, r0
90028c6a:	fb01 2303 	mla	r3, r1, r3, r2
90028c6e:	fb93 f3f8 	sdiv	r3, r3, r8
90028c72:	441e      	add	r6, r3
90028c74:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028c78:	441a      	add	r2, r3
90028c7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90028c7e:	4419      	add	r1, r3
90028c80:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90028c84:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028c88:	9303      	str	r3, [sp, #12]
90028c8a:	4b89      	ldr	r3, [pc, #548]	@ (90028eb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028c8c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028c90:	6818      	ldr	r0, [r3, #0]
90028c92:	6803      	ldr	r3, [r0, #0]
90028c94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028c96:	4798      	blx	r3
90028c98:	4a86      	ldr	r2, [pc, #536]	@ (90028eb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90028c9a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028c9e:	2fff      	cmp	r7, #255	@ 0xff
90028ca0:	8813      	ldrh	r3, [r2, #0]
90028ca2:	4694      	mov	ip, r2
90028ca4:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90028ca8:	fb03 9404 	mla	r4, r3, r4, r9
90028cac:	fb03 f30b 	mul.w	r3, r3, fp
90028cb0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028cb4:	d071      	beq.n	90028d9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90028cb6:	43f9      	mvns	r1, r7
90028cb8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028cbc:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028cc0:	b2c9      	uxtb	r1, r1
90028cc2:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028cc6:	9104      	str	r1, [sp, #16]
90028cc8:	9b07      	ldr	r3, [sp, #28]
90028cca:	42a3      	cmp	r3, r4
90028ccc:	f240 80e7 	bls.w	90028e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028cd0:	9b06      	ldr	r3, [sp, #24]
90028cd2:	2b00      	cmp	r3, #0
90028cd4:	d03d      	beq.n	90028d52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90028cd6:	7831      	ldrb	r1, [r6, #0]
90028cd8:	4650      	mov	r0, sl
90028cda:	9b04      	ldr	r3, [sp, #16]
90028cdc:	f106 0801 	add.w	r8, r6, #1
90028ce0:	f001 010f 	and.w	r1, r1, #15
90028ce4:	8822      	ldrh	r2, [r4, #0]
90028ce6:	9300      	str	r3, [sp, #0]
90028ce8:	463b      	mov	r3, r7
90028cea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028cee:	4429      	add	r1, r5
90028cf0:	f7ff ff56 	bl	90028ba0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028cf4:	9b03      	ldr	r3, [sp, #12]
90028cf6:	f824 0b02 	strh.w	r0, [r4], #2
90028cfa:	f103 3bff 	add.w	fp, r3, #4294967295
90028cfe:	f1bb 0f01 	cmp.w	fp, #1
90028d02:	46a1      	mov	r9, r4
90028d04:	f104 0404 	add.w	r4, r4, #4
90028d08:	dd27      	ble.n	90028d5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90028d0a:	f898 1000 	ldrb.w	r1, [r8]
90028d0e:	4650      	mov	r0, sl
90028d10:	9b04      	ldr	r3, [sp, #16]
90028d12:	f1ab 0b02 	sub.w	fp, fp, #2
90028d16:	0909      	lsrs	r1, r1, #4
90028d18:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028d1c:	9300      	str	r3, [sp, #0]
90028d1e:	463b      	mov	r3, r7
90028d20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028d24:	4429      	add	r1, r5
90028d26:	f7ff ff3b 	bl	90028ba0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028d2a:	f824 0c04 	strh.w	r0, [r4, #-4]
90028d2e:	f818 1b01 	ldrb.w	r1, [r8], #1
90028d32:	4650      	mov	r0, sl
90028d34:	9b04      	ldr	r3, [sp, #16]
90028d36:	f001 010f 	and.w	r1, r1, #15
90028d3a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028d3e:	9300      	str	r3, [sp, #0]
90028d40:	463b      	mov	r3, r7
90028d42:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028d46:	4429      	add	r1, r5
90028d48:	f7ff ff2a 	bl	90028ba0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028d4c:	f824 0c02 	strh.w	r0, [r4, #-2]
90028d50:	e7d5      	b.n	90028cfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028d52:	46b0      	mov	r8, r6
90028d54:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028d58:	e7d1      	b.n	90028cfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028d5a:	d10f      	bne.n	90028d7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90028d5c:	f898 1000 	ldrb.w	r1, [r8]
90028d60:	4650      	mov	r0, sl
90028d62:	9b04      	ldr	r3, [sp, #16]
90028d64:	0909      	lsrs	r1, r1, #4
90028d66:	f8b9 2000 	ldrh.w	r2, [r9]
90028d6a:	9300      	str	r3, [sp, #0]
90028d6c:	463b      	mov	r3, r7
90028d6e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028d72:	4429      	add	r1, r5
90028d74:	f7ff ff14 	bl	90028ba0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028d78:	f829 0b02 	strh.w	r0, [r9], #2
90028d7c:	9b08      	ldr	r3, [sp, #32]
90028d7e:	9a05      	ldr	r2, [sp, #20]
90028d80:	881c      	ldrh	r4, [r3, #0]
90028d82:	9b03      	ldr	r3, [sp, #12]
90028d84:	1ae4      	subs	r4, r4, r3
90028d86:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028d8a:	4413      	add	r3, r2
90028d8c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028d8e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028d92:	fb93 f3f2 	sdiv	r3, r3, r2
90028d96:	441e      	add	r6, r3
90028d98:	e796      	b.n	90028cc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90028d9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028d9e:	4f46      	ldr	r7, [pc, #280]	@ (90028eb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028da0:	42a3      	cmp	r3, r4
90028da2:	d97c      	bls.n	90028e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028da4:	9a06      	ldr	r2, [sp, #24]
90028da6:	2a00      	cmp	r2, #0
90028da8:	d054      	beq.n	90028e54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90028daa:	7830      	ldrb	r0, [r6, #0]
90028dac:	1c71      	adds	r1, r6, #1
90028dae:	f000 000f 	and.w	r0, r0, #15
90028db2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028db6:	eb05 0e00 	add.w	lr, r5, r0
90028dba:	5c28      	ldrb	r0, [r5, r0]
90028dbc:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028dc0:	f89e e001 	ldrb.w	lr, [lr, #1]
90028dc4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028dc8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028dcc:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028dd0:	ea42 020e 	orr.w	r2, r2, lr
90028dd4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028dd8:	f824 2b02 	strh.w	r2, [r4], #2
90028ddc:	9a03      	ldr	r2, [sp, #12]
90028dde:	f102 3eff 	add.w	lr, r2, #4294967295
90028de2:	f1be 0f01 	cmp.w	lr, #1
90028de6:	4620      	mov	r0, r4
90028de8:	f104 0404 	add.w	r4, r4, #4
90028dec:	dd36      	ble.n	90028e5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90028dee:	7808      	ldrb	r0, [r1, #0]
90028df0:	f1ae 0e02 	sub.w	lr, lr, #2
90028df4:	0900      	lsrs	r0, r0, #4
90028df6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028dfa:	eb05 0a00 	add.w	sl, r5, r0
90028dfe:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028e02:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028e06:	00d2      	lsls	r2, r2, #3
90028e08:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028e0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028e10:	ea49 0202 	orr.w	r2, r9, r2
90028e14:	f815 9000 	ldrb.w	r9, [r5, r0]
90028e18:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028e1c:	f824 2c04 	strh.w	r2, [r4, #-4]
90028e20:	f811 0b01 	ldrb.w	r0, [r1], #1
90028e24:	f000 000f 	and.w	r0, r0, #15
90028e28:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028e2c:	eb05 0a00 	add.w	sl, r5, r0
90028e30:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028e34:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028e38:	00d2      	lsls	r2, r2, #3
90028e3a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028e3e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028e42:	ea49 0202 	orr.w	r2, r9, r2
90028e46:	f815 9000 	ldrb.w	r9, [r5, r0]
90028e4a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028e4e:	f824 2c02 	strh.w	r2, [r4, #-2]
90028e52:	e7c6      	b.n	90028de2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028e54:	4631      	mov	r1, r6
90028e56:	f8dd e00c 	ldr.w	lr, [sp, #12]
90028e5a:	e7c2      	b.n	90028de2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028e5c:	d111      	bne.n	90028e82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90028e5e:	7809      	ldrb	r1, [r1, #0]
90028e60:	0909      	lsrs	r1, r1, #4
90028e62:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028e66:	186c      	adds	r4, r5, r1
90028e68:	5c69      	ldrb	r1, [r5, r1]
90028e6a:	78a2      	ldrb	r2, [r4, #2]
90028e6c:	7864      	ldrb	r4, [r4, #1]
90028e6e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028e72:	00e4      	lsls	r4, r4, #3
90028e74:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028e78:	4322      	orrs	r2, r4
90028e7a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90028e7e:	f820 2b02 	strh.w	r2, [r0], #2
90028e82:	9a03      	ldr	r2, [sp, #12]
90028e84:	f8bc 4000 	ldrh.w	r4, [ip]
90028e88:	9905      	ldr	r1, [sp, #20]
90028e8a:	1aa4      	subs	r4, r4, r2
90028e8c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90028e90:	440a      	add	r2, r1
90028e92:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028e96:	fb92 f2f8 	sdiv	r2, r2, r8
90028e9a:	4416      	add	r6, r2
90028e9c:	e780      	b.n	90028da0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90028e9e:	4b04      	ldr	r3, [pc, #16]	@ (90028eb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028ea0:	6818      	ldr	r0, [r3, #0]
90028ea2:	6803      	ldr	r3, [r0, #0]
90028ea4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028ea6:	4798      	blx	r3
90028ea8:	b00f      	add	sp, #60	@ 0x3c
90028eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028eae:	bf00      	nop
90028eb0:	240234bc 	.word	0x240234bc
90028eb4:	240234b6 	.word	0x240234b6
90028eb8:	fffff800 	.word	0xfffff800

90028ebc <CRC_Lock>:
90028ebc:	4a2d      	ldr	r2, [pc, #180]	@ (90028f74 <CRC_Lock+0xb8>)
90028ebe:	b530      	push	{r4, r5, lr}
90028ec0:	6813      	ldr	r3, [r2, #0]
90028ec2:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028ec6:	f023 0301 	bic.w	r3, r3, #1
90028eca:	6013      	str	r3, [r2, #0]
90028ecc:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028ed0:	4b29      	ldr	r3, [pc, #164]	@ (90028f78 <CRC_Lock+0xbc>)
90028ed2:	681c      	ldr	r4, [r3, #0]
90028ed4:	4014      	ands	r4, r2
90028ed6:	42ac      	cmp	r4, r5
90028ed8:	d005      	beq.n	90028ee6 <CRC_Lock+0x2a>
90028eda:	681c      	ldr	r4, [r3, #0]
90028edc:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028ee0:	4014      	ands	r4, r2
90028ee2:	42ac      	cmp	r4, r5
90028ee4:	d125      	bne.n	90028f32 <CRC_Lock+0x76>
90028ee6:	4b25      	ldr	r3, [pc, #148]	@ (90028f7c <CRC_Lock+0xc0>)
90028ee8:	681b      	ldr	r3, [r3, #0]
90028eea:	2b00      	cmp	r3, #0
90028eec:	d139      	bne.n	90028f62 <CRC_Lock+0xa6>
90028eee:	4b24      	ldr	r3, [pc, #144]	@ (90028f80 <CRC_Lock+0xc4>)
90028ef0:	681a      	ldr	r2, [r3, #0]
90028ef2:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028ef6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90028efa:	d00d      	beq.n	90028f18 <CRC_Lock+0x5c>
90028efc:	681a      	ldr	r2, [r3, #0]
90028efe:	f240 4483 	movw	r4, #1155	@ 0x483
90028f02:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028f06:	42a2      	cmp	r2, r4
90028f08:	d006      	beq.n	90028f18 <CRC_Lock+0x5c>
90028f0a:	681b      	ldr	r3, [r3, #0]
90028f0c:	f240 4285 	movw	r2, #1157	@ 0x485
90028f10:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028f14:	4293      	cmp	r3, r2
90028f16:	d124      	bne.n	90028f62 <CRC_Lock+0xa6>
90028f18:	4b1a      	ldr	r3, [pc, #104]	@ (90028f84 <CRC_Lock+0xc8>)
90028f1a:	2201      	movs	r2, #1
90028f1c:	601a      	str	r2, [r3, #0]
90028f1e:	681a      	ldr	r2, [r3, #0]
90028f20:	2a00      	cmp	r2, #0
90028f22:	d1fc      	bne.n	90028f1e <CRC_Lock+0x62>
90028f24:	4b18      	ldr	r3, [pc, #96]	@ (90028f88 <CRC_Lock+0xcc>)
90028f26:	6018      	str	r0, [r3, #0]
90028f28:	6818      	ldr	r0, [r3, #0]
90028f2a:	1a43      	subs	r3, r0, r1
90028f2c:	4258      	negs	r0, r3
90028f2e:	4158      	adcs	r0, r3
90028f30:	e00e      	b.n	90028f50 <CRC_Lock+0x94>
90028f32:	681b      	ldr	r3, [r3, #0]
90028f34:	4013      	ands	r3, r2
90028f36:	f24d 2220 	movw	r2, #53792	@ 0xd220
90028f3a:	4293      	cmp	r3, r2
90028f3c:	d111      	bne.n	90028f62 <CRC_Lock+0xa6>
90028f3e:	4b13      	ldr	r3, [pc, #76]	@ (90028f8c <CRC_Lock+0xd0>)
90028f40:	f240 4286 	movw	r2, #1158	@ 0x486
90028f44:	681b      	ldr	r3, [r3, #0]
90028f46:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028f4a:	4293      	cmp	r3, r2
90028f4c:	d001      	beq.n	90028f52 <CRC_Lock+0x96>
90028f4e:	2000      	movs	r0, #0
90028f50:	bd30      	pop	{r4, r5, pc}
90028f52:	4b0f      	ldr	r3, [pc, #60]	@ (90028f90 <CRC_Lock+0xd4>)
90028f54:	2201      	movs	r2, #1
90028f56:	601a      	str	r2, [r3, #0]
90028f58:	681a      	ldr	r2, [r3, #0]
90028f5a:	2a00      	cmp	r2, #0
90028f5c:	d1fc      	bne.n	90028f58 <CRC_Lock+0x9c>
90028f5e:	4b0d      	ldr	r3, [pc, #52]	@ (90028f94 <CRC_Lock+0xd8>)
90028f60:	e7e1      	b.n	90028f26 <CRC_Lock+0x6a>
90028f62:	4b0d      	ldr	r3, [pc, #52]	@ (90028f98 <CRC_Lock+0xdc>)
90028f64:	2201      	movs	r2, #1
90028f66:	601a      	str	r2, [r3, #0]
90028f68:	681a      	ldr	r2, [r3, #0]
90028f6a:	2a00      	cmp	r2, #0
90028f6c:	d1fc      	bne.n	90028f68 <CRC_Lock+0xac>
90028f6e:	4b0b      	ldr	r3, [pc, #44]	@ (90028f9c <CRC_Lock+0xe0>)
90028f70:	e7d9      	b.n	90028f26 <CRC_Lock+0x6a>
90028f72:	bf00      	nop
90028f74:	e0002000 	.word	0xe0002000
90028f78:	e000ed00 	.word	0xe000ed00
90028f7c:	e0042000 	.word	0xe0042000
90028f80:	5c001000 	.word	0x5c001000
90028f84:	58024c08 	.word	0x58024c08
90028f88:	58024c00 	.word	0x58024c00
90028f8c:	46008ff0 	.word	0x46008ff0
90028f90:	46024c08 	.word	0x46024c08
90028f94:	46024c00 	.word	0x46024c00
90028f98:	40023008 	.word	0x40023008
90028f9c:	40023000 	.word	0x40023000

90028fa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028fa0:	6101      	str	r1, [r0, #16]
90028fa2:	4770      	bx	lr

90028fa4 <_ZN8touchgfx8Gestures4tickEv>:
90028fa4:	7b83      	ldrb	r3, [r0, #14]
90028fa6:	b14b      	cbz	r3, 90028fbc <_ZN8touchgfx8Gestures4tickEv+0x18>
90028fa8:	8903      	ldrh	r3, [r0, #8]
90028faa:	3301      	adds	r3, #1
90028fac:	b29b      	uxth	r3, r3
90028fae:	2b07      	cmp	r3, #7
90028fb0:	8103      	strh	r3, [r0, #8]
90028fb2:	bf81      	itttt	hi
90028fb4:	2300      	movhi	r3, #0
90028fb6:	8143      	strhhi	r3, [r0, #10]
90028fb8:	8183      	strhhi	r3, [r0, #12]
90028fba:	7383      	strbhi	r3, [r0, #14]
90028fbc:	4770      	bx	lr
	...

90028fc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028fc0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028fc4:	4698      	mov	r8, r3
90028fc6:	8883      	ldrh	r3, [r0, #4]
90028fc8:	4604      	mov	r4, r0
90028fca:	4617      	mov	r7, r2
90028fcc:	f8ad 3006 	strh.w	r3, [sp, #6]
90028fd0:	eba8 0303 	sub.w	r3, r8, r3
90028fd4:	4a19      	ldr	r2, [pc, #100]	@ (9002903c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028fd6:	460e      	mov	r6, r1
90028fd8:	b21b      	sxth	r3, r3
90028fda:	88c1      	ldrh	r1, [r0, #6]
90028fdc:	9200      	str	r2, [sp, #0]
90028fde:	2000      	movs	r0, #0
90028fe0:	2b00      	cmp	r3, #0
90028fe2:	8aa2      	ldrh	r2, [r4, #20]
90028fe4:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90028fe8:	bfb8      	it	lt
90028fea:	425b      	neglt	r3, r3
90028fec:	f88d 0004 	strb.w	r0, [sp, #4]
90028ff0:	f8ad 1008 	strh.w	r1, [sp, #8]
90028ff4:	b21b      	sxth	r3, r3
90028ff6:	f8ad 800a 	strh.w	r8, [sp, #10]
90028ffa:	f8ad 500c 	strh.w	r5, [sp, #12]
90028ffe:	4293      	cmp	r3, r2
90029000:	dc07      	bgt.n	90029012 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029002:	1a69      	subs	r1, r5, r1
90029004:	b209      	sxth	r1, r1
90029006:	2900      	cmp	r1, #0
90029008:	bfb8      	it	lt
9002900a:	4249      	neglt	r1, r1
9002900c:	b209      	sxth	r1, r1
9002900e:	428a      	cmp	r2, r1
90029010:	da10      	bge.n	90029034 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90029012:	6920      	ldr	r0, [r4, #16]
90029014:	4669      	mov	r1, sp
90029016:	eba8 0606 	sub.w	r6, r8, r6
9002901a:	1bef      	subs	r7, r5, r7
9002901c:	6803      	ldr	r3, [r0, #0]
9002901e:	685b      	ldr	r3, [r3, #4]
90029020:	4798      	blx	r3
90029022:	2300      	movs	r3, #0
90029024:	2001      	movs	r0, #1
90029026:	8166      	strh	r6, [r4, #10]
90029028:	8123      	strh	r3, [r4, #8]
9002902a:	81a7      	strh	r7, [r4, #12]
9002902c:	f8a4 8004 	strh.w	r8, [r4, #4]
90029030:	80e5      	strh	r5, [r4, #6]
90029032:	73a0      	strb	r0, [r4, #14]
90029034:	b004      	add	sp, #16
90029036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002903a:	bf00      	nop
9002903c:	9002e7bc 	.word	0x9002e7bc

90029040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90029040:	b5f0      	push	{r4, r5, r6, r7, lr}
90029042:	461e      	mov	r6, r3
90029044:	1e4b      	subs	r3, r1, #1
90029046:	b085      	sub	sp, #20
90029048:	4604      	mov	r4, r0
9002904a:	2b01      	cmp	r3, #1
9002904c:	460d      	mov	r5, r1
9002904e:	4617      	mov	r7, r2
90029050:	d84b      	bhi.n	900290ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90029052:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90029056:	1cd3      	adds	r3, r2, #3
90029058:	b29b      	uxth	r3, r3
9002905a:	2b06      	cmp	r3, #6
9002905c:	d916      	bls.n	9002908c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002905e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90029100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029062:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029066:	f8cd c004 	str.w	ip, [sp, #4]
9002906a:	f04f 0c00 	mov.w	ip, #0
9002906e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029072:	6900      	ldr	r0, [r0, #16]
90029074:	f8ad 100c 	strh.w	r1, [sp, #12]
90029078:	a901      	add	r1, sp, #4
9002907a:	f88d c008 	strb.w	ip, [sp, #8]
9002907e:	f8ad 200a 	strh.w	r2, [sp, #10]
90029082:	f8ad 300e 	strh.w	r3, [sp, #14]
90029086:	6803      	ldr	r3, [r0, #0]
90029088:	689b      	ldr	r3, [r3, #8]
9002908a:	4798      	blx	r3
9002908c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029090:	1cd3      	adds	r3, r2, #3
90029092:	b29b      	uxth	r3, r3
90029094:	2b06      	cmp	r3, #6
90029096:	d916      	bls.n	900290c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029098:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90029100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002909c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900290a0:	f8cd c004 	str.w	ip, [sp, #4]
900290a4:	f04f 0c01 	mov.w	ip, #1
900290a8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900290ac:	6920      	ldr	r0, [r4, #16]
900290ae:	f8ad 100c 	strh.w	r1, [sp, #12]
900290b2:	a901      	add	r1, sp, #4
900290b4:	f88d c008 	strb.w	ip, [sp, #8]
900290b8:	f8ad 200a 	strh.w	r2, [sp, #10]
900290bc:	f8ad 300e 	strh.w	r3, [sp, #14]
900290c0:	6803      	ldr	r3, [r0, #0]
900290c2:	689b      	ldr	r3, [r3, #8]
900290c4:	4798      	blx	r3
900290c6:	4b0d      	ldr	r3, [pc, #52]	@ (900290fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
900290c8:	a901      	add	r1, sp, #4
900290ca:	6920      	ldr	r0, [r4, #16]
900290cc:	9301      	str	r3, [sp, #4]
900290ce:	2300      	movs	r3, #0
900290d0:	f88d 5008 	strb.w	r5, [sp, #8]
900290d4:	f8ad 700a 	strh.w	r7, [sp, #10]
900290d8:	f8ad 600c 	strh.w	r6, [sp, #12]
900290dc:	f8ad 300e 	strh.w	r3, [sp, #14]
900290e0:	6803      	ldr	r3, [r0, #0]
900290e2:	681b      	ldr	r3, [r3, #0]
900290e4:	4798      	blx	r3
900290e6:	b005      	add	sp, #20
900290e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900290ea:	2900      	cmp	r1, #0
900290ec:	d1eb      	bne.n	900290c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900290ee:	80a2      	strh	r2, [r4, #4]
900290f0:	80c6      	strh	r6, [r0, #6]
900290f2:	60a1      	str	r1, [r4, #8]
900290f4:	81a1      	strh	r1, [r4, #12]
900290f6:	73a1      	strb	r1, [r4, #14]
900290f8:	e7e5      	b.n	900290c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900290fa:	bf00      	nop
900290fc:	9002e7a8 	.word	0x9002e7a8
90029100:	9002e7d0 	.word	0x9002e7d0

90029104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90029104:	10c9      	asrs	r1, r1, #3
90029106:	2900      	cmp	r1, #0
90029108:	bfb8      	it	lt
9002910a:	4249      	neglt	r1, r1
9002910c:	2801      	cmp	r0, #1
9002910e:	d108      	bne.n	90029122 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90029110:	f3c1 0008 	ubfx	r0, r1, #0, #9
90029114:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90029118:	4601      	mov	r1, r0
9002911a:	dd02      	ble.n	90029122 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002911c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90029120:	4770      	bx	lr
90029122:	29ff      	cmp	r1, #255	@ 0xff
90029124:	bfa8      	it	ge
90029126:	21ff      	movge	r1, #255	@ 0xff
90029128:	4608      	mov	r0, r1
9002912a:	4770      	bx	lr

9002912c <_ZN8touchgfx10Rasterizer6lineToEii>:
9002912c:	b410      	push	{r4}
9002912e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90029132:	429c      	cmp	r4, r3
90029134:	d803      	bhi.n	9002913e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90029136:	f85d 4b04 	ldr.w	r4, [sp], #4
9002913a:	f7ec b9e5 	b.w	90015508 <_ZN8touchgfx7Outline6lineToEii>
9002913e:	f85d 4b04 	ldr.w	r4, [sp], #4
90029142:	4770      	bx	lr

90029144 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90029144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029148:	b08b      	sub	sp, #44	@ 0x2c
9002914a:	4606      	mov	r6, r0
9002914c:	468a      	mov	sl, r1
9002914e:	e9cd 2306 	strd	r2, r3, [sp, #24]
90029152:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90029156:	9308      	str	r3, [sp, #32]
90029158:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002915c:	9309      	str	r3, [sp, #36]	@ 0x24
9002915e:	f7ec fb3e 	bl	900157de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90029162:	68b5      	ldr	r5, [r6, #8]
90029164:	4604      	mov	r4, r0
90029166:	2d00      	cmp	r5, #0
90029168:	d044      	beq.n	900291f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002916a:	6873      	ldr	r3, [r6, #4]
9002916c:	42ab      	cmp	r3, r5
9002916e:	d33d      	bcc.n	900291ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90029170:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90029174:	f04f 0800 	mov.w	r8, #0
90029178:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002917c:	eb02 0b03 	add.w	fp, r2, r3
90029180:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90029184:	fb02 1203 	mla	r2, r2, r3, r1
90029188:	9205      	str	r2, [sp, #20]
9002918a:	1e6a      	subs	r2, r5, #1
9002918c:	9204      	str	r2, [sp, #16]
9002918e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90029192:	f9b4 7000 	ldrsh.w	r7, [r4]
90029196:	454b      	cmp	r3, r9
90029198:	463a      	mov	r2, r7
9002919a:	d008      	beq.n	900291ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002919c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
900291a0:	eb03 0b09 	add.w	fp, r3, r9
900291a4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
900291a8:	fb03 1309 	mla	r3, r3, r9, r1
900291ac:	9305      	str	r3, [sp, #20]
900291ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900291b2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900291b6:	4498      	add	r8, r3
900291b8:	9b04      	ldr	r3, [sp, #16]
900291ba:	3b01      	subs	r3, #1
900291bc:	9304      	str	r3, [sp, #16]
900291be:	9b04      	ldr	r3, [sp, #16]
900291c0:	3301      	adds	r3, #1
900291c2:	d015      	beq.n	900291f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
900291c4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
900291c8:	42bb      	cmp	r3, r7
900291ca:	d117      	bne.n	900291fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
900291cc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
900291d0:	9b04      	ldr	r3, [sp, #16]
900291d2:	4548      	cmp	r0, r9
900291d4:	f103 33ff 	add.w	r3, r3, #4294967295
900291d8:	d17d      	bne.n	900292d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
900291da:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
900291de:	4401      	add	r1, r0
900291e0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900291e4:	4480      	add	r8, r0
900291e6:	e7e9      	b.n	900291bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
900291e8:	461f      	mov	r7, r3
900291ea:	e042      	b.n	90029272 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
900291ec:	2000      	movs	r0, #0
900291ee:	e002      	b.n	900291f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
900291f0:	2900      	cmp	r1, #0
900291f2:	d16d      	bne.n	900292d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
900291f4:	2001      	movs	r0, #1
900291f6:	b00b      	add	sp, #44	@ 0x2c
900291f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900291fc:	b379      	cbz	r1, 9002925e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
900291fe:	2f00      	cmp	r7, #0
90029200:	db29      	blt.n	90029256 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029202:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90029206:	42bb      	cmp	r3, r7
90029208:	dd25      	ble.n	90029256 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002920a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002920e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90029212:	f7ff ff77 	bl	90029104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90029216:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029218:	fb10 f003 	smulbb	r0, r0, r3
9002921c:	b280      	uxth	r0, r0
9002921e:	1c41      	adds	r1, r0, #1
90029220:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90029224:	1209      	asrs	r1, r1, #8
90029226:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002922a:	d014      	beq.n	90029256 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002922c:	b2c9      	uxtb	r1, r1
9002922e:	9808      	ldr	r0, [sp, #32]
90029230:	b2ba      	uxth	r2, r7
90029232:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90029234:	9102      	str	r1, [sp, #8]
90029236:	2101      	movs	r1, #1
90029238:	4413      	add	r3, r2
9002923a:	4402      	add	r2, r0
9002923c:	9101      	str	r1, [sp, #4]
9002923e:	fa0f f18b 	sxth.w	r1, fp
90029242:	f8da 0000 	ldr.w	r0, [sl]
90029246:	b21b      	sxth	r3, r3
90029248:	9100      	str	r1, [sp, #0]
9002924a:	b212      	sxth	r2, r2
9002924c:	6941      	ldr	r1, [r0, #20]
9002924e:	4650      	mov	r0, sl
90029250:	460d      	mov	r5, r1
90029252:	9905      	ldr	r1, [sp, #20]
90029254:	47a8      	blx	r5
90029256:	9b04      	ldr	r3, [sp, #16]
90029258:	1c7a      	adds	r2, r7, #1
9002925a:	3301      	adds	r3, #1
9002925c:	d0ca      	beq.n	900291f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002925e:	f9b4 7000 	ldrsh.w	r7, [r4]
90029262:	1abb      	subs	r3, r7, r2
90029264:	2b00      	cmp	r3, #0
90029266:	dd31      	ble.n	900292cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029268:	2a00      	cmp	r2, #0
9002926a:	dabd      	bge.n	900291e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002926c:	2f00      	cmp	r7, #0
9002926e:	dd2d      	ble.n	900292cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029270:	2200      	movs	r2, #0
90029272:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90029276:	19d1      	adds	r1, r2, r7
90029278:	4299      	cmp	r1, r3
9002927a:	db02      	blt.n	90029282 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002927c:	1a9f      	subs	r7, r3, r2
9002927e:	2f00      	cmp	r7, #0
90029280:	dd24      	ble.n	900292cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029282:	ea4f 1188 	mov.w	r1, r8, lsl #6
90029286:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002928a:	f7ff ff3b 	bl	90029104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002928e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029290:	fb10 f003 	smulbb	r0, r0, r3
90029294:	b280      	uxth	r0, r0
90029296:	1c41      	adds	r1, r0, #1
90029298:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002929c:	1209      	asrs	r1, r1, #8
9002929e:	f011 0fff 	tst.w	r1, #255	@ 0xff
900292a2:	d013      	beq.n	900292cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900292a4:	b292      	uxth	r2, r2
900292a6:	9808      	ldr	r0, [sp, #32]
900292a8:	b2c9      	uxtb	r1, r1
900292aa:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900292ac:	b23f      	sxth	r7, r7
900292ae:	4413      	add	r3, r2
900292b0:	9102      	str	r1, [sp, #8]
900292b2:	4402      	add	r2, r0
900292b4:	fa0f f18b 	sxth.w	r1, fp
900292b8:	f8da 0000 	ldr.w	r0, [sl]
900292bc:	b21b      	sxth	r3, r3
900292be:	9100      	str	r1, [sp, #0]
900292c0:	b212      	sxth	r2, r2
900292c2:	9701      	str	r7, [sp, #4]
900292c4:	9905      	ldr	r1, [sp, #20]
900292c6:	6947      	ldr	r7, [r0, #20]
900292c8:	4650      	mov	r0, sl
900292ca:	47b8      	blx	r7
900292cc:	464b      	mov	r3, r9
900292ce:	e75e      	b.n	9002918e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
900292d0:	2f00      	cmp	r7, #0
900292d2:	da96      	bge.n	90029202 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
900292d4:	e78e      	b.n	900291f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900292d6:	2900      	cmp	r1, #0
900292d8:	d0f8      	beq.n	900292cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900292da:	e790      	b.n	900291fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

900292dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
900292dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900292e0:	461e      	mov	r6, r3
900292e2:	4b36      	ldr	r3, [pc, #216]	@ (900293bc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
900292e4:	2500      	movs	r5, #0
900292e6:	f100 0814 	add.w	r8, r0, #20
900292ea:	4604      	mov	r4, r0
900292ec:	4617      	mov	r7, r2
900292ee:	e9c0 3100 	strd	r3, r1, [r0]
900292f2:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
900292f6:	8185      	strh	r5, [r0, #12]
900292f8:	8103      	strh	r3, [r0, #8]
900292fa:	f89d 3020 	ldrb.w	r3, [sp, #32]
900292fe:	81c5      	strh	r5, [r0, #14]
90029300:	7283      	strb	r3, [r0, #10]
90029302:	8205      	strh	r5, [r0, #16]
90029304:	8245      	strh	r5, [r0, #18]
90029306:	4640      	mov	r0, r8
90029308:	f7eb fc44 	bl	90014b94 <_ZN8touchgfx7OutlineC1Ev>
9002930c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90029310:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90029314:	466b      	mov	r3, sp
90029316:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002931a:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002931e:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90029322:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90029326:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002932a:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002932e:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90029332:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90029336:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002933a:	6830      	ldr	r0, [r6, #0]
9002933c:	6871      	ldr	r1, [r6, #4]
9002933e:	8872      	ldrh	r2, [r6, #2]
90029340:	8835      	ldrh	r5, [r6, #0]
90029342:	c303      	stmia	r3!, {r0, r1}
90029344:	887b      	ldrh	r3, [r7, #2]
90029346:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002934a:	4413      	add	r3, r2
9002934c:	883a      	ldrh	r2, [r7, #0]
9002934e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90029352:	442a      	add	r2, r5
90029354:	81e3      	strh	r3, [r4, #14]
90029356:	8220      	strh	r0, [r4, #16]
90029358:	4668      	mov	r0, sp
9002935a:	81a2      	strh	r2, [r4, #12]
9002935c:	8261      	strh	r1, [r4, #18]
9002935e:	4639      	mov	r1, r7
90029360:	f7ed fe04 	bl	90016f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029364:	f104 000c 	add.w	r0, r4, #12
90029368:	f7ed fdd8 	bl	90016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002936c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029370:	f8bd 2000 	ldrh.w	r2, [sp]
90029374:	4640      	mov	r0, r8
90029376:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002937a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002937e:	f7eb fbed 	bl	90014b5c <_ZN8touchgfx7Outline5resetEv>
90029382:	f9bd 3000 	ldrsh.w	r3, [sp]
90029386:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002938a:	4620      	mov	r0, r4
9002938c:	015b      	lsls	r3, r3, #5
9002938e:	64e3      	str	r3, [r4, #76]	@ 0x4c
90029390:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029394:	015b      	lsls	r3, r3, #5
90029396:	6523      	str	r3, [r4, #80]	@ 0x50
90029398:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002939c:	015b      	lsls	r3, r3, #5
9002939e:	6563      	str	r3, [r4, #84]	@ 0x54
900293a0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900293a4:	015b      	lsls	r3, r3, #5
900293a6:	65a3      	str	r3, [r4, #88]	@ 0x58
900293a8:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
900293ac:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
900293b0:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
900293b4:	b002      	add	sp, #8
900293b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900293ba:	bf00      	nop
900293bc:	9002eb0c 	.word	0x9002eb0c

900293c0 <_ZN8touchgfx6Canvas5closeEv>:
900293c0:	b538      	push	{r3, r4, r5, lr}
900293c2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900293c6:	4604      	mov	r4, r0
900293c8:	b193      	cbz	r3, 900293f0 <_ZN8touchgfx6Canvas5closeEv+0x30>
900293ca:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
900293ce:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
900293d2:	4213      	tst	r3, r2
900293d4:	d10c      	bne.n	900293f0 <_ZN8touchgfx6Canvas5closeEv+0x30>
900293d6:	f100 0514 	add.w	r5, r0, #20
900293da:	b123      	cbz	r3, 900293e6 <_ZN8touchgfx6Canvas5closeEv+0x26>
900293dc:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
900293e0:	4628      	mov	r0, r5
900293e2:	f7ff fea3 	bl	9002912c <_ZN8touchgfx10Rasterizer6lineToEii>
900293e6:	4628      	mov	r0, r5
900293e8:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
900293ec:	f7ff fe9e 	bl	9002912c <_ZN8touchgfx10Rasterizer6lineToEii>
900293f0:	2300      	movs	r3, #0
900293f2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900293f6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
900293fa:	4298      	cmp	r0, r3
900293fc:	bf34      	ite	cc
900293fe:	2000      	movcc	r0, #0
90029400:	2001      	movcs	r0, #1
90029402:	bd38      	pop	{r3, r4, r5, pc}

90029404 <_ZN8touchgfx6Canvas6renderEh>:
90029404:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029408:	7a85      	ldrb	r5, [r0, #10]
9002940a:	4604      	mov	r4, r0
9002940c:	4369      	muls	r1, r5
9002940e:	1c4d      	adds	r5, r1, #1
90029410:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90029414:	122d      	asrs	r5, r5, #8
90029416:	f000 8098 	beq.w	9002954a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002941a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002941e:	2b00      	cmp	r3, #0
90029420:	f000 8093 	beq.w	9002954a <_ZN8touchgfx6Canvas6renderEh+0x146>
90029424:	f7ff ffcc 	bl	900293c0 <_ZN8touchgfx6Canvas5closeEv>
90029428:	4607      	mov	r7, r0
9002942a:	2800      	cmp	r0, #0
9002942c:	d045      	beq.n	900294ba <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002942e:	6860      	ldr	r0, [r4, #4]
90029430:	4e47      	ldr	r6, [pc, #284]	@ (90029550 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90029432:	6803      	ldr	r3, [r0, #0]
90029434:	6837      	ldr	r7, [r6, #0]
90029436:	689b      	ldr	r3, [r3, #8]
90029438:	4798      	blx	r3
9002943a:	4601      	mov	r1, r0
9002943c:	4638      	mov	r0, r7
9002943e:	f7e8 fb8b 	bl	90011b58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90029442:	4607      	mov	r7, r0
90029444:	f7e7 ff4c 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90029448:	6803      	ldr	r3, [r0, #0]
9002944a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002944c:	4798      	blx	r3
9002944e:	4680      	mov	r8, r0
90029450:	f7e7 ff46 	bl	900112e0 <_ZN8touchgfx3HAL3lcdEv>
90029454:	6803      	ldr	r3, [r0, #0]
90029456:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029458:	4798      	blx	r3
9002945a:	280b      	cmp	r0, #11
9002945c:	d85a      	bhi.n	90029514 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002945e:	e8df f000 	tbb	[pc, r0]
90029462:	5b50      	.short	0x5b50
90029464:	3059066b 	.word	0x3059066b
90029468:	64646440 	.word	0x64646440
9002946c:	6464      	.short	0x6464
9002946e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029472:	2208      	movs	r2, #8
90029474:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029478:	fb91 f2f2 	sdiv	r2, r1, r2
9002947c:	fb08 2303 	mla	r3, r8, r3, r2
90029480:	441f      	add	r7, r3
90029482:	424b      	negs	r3, r1
90029484:	f001 0107 	and.w	r1, r1, #7
90029488:	f003 0307 	and.w	r3, r3, #7
9002948c:	bf58      	it	pl
9002948e:	4259      	negpl	r1, r3
90029490:	b2c9      	uxtb	r1, r1
90029492:	b2ed      	uxtb	r5, r5
90029494:	463a      	mov	r2, r7
90029496:	fa0f f388 	sxth.w	r3, r8
9002949a:	f104 0014 	add.w	r0, r4, #20
9002949e:	e9cd 1500 	strd	r1, r5, [sp]
900294a2:	6861      	ldr	r1, [r4, #4]
900294a4:	f7ff fe4e 	bl	90029144 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
900294a8:	4607      	mov	r7, r0
900294aa:	6860      	ldr	r0, [r4, #4]
900294ac:	6803      	ldr	r3, [r0, #0]
900294ae:	691b      	ldr	r3, [r3, #16]
900294b0:	4798      	blx	r3
900294b2:	6830      	ldr	r0, [r6, #0]
900294b4:	6803      	ldr	r3, [r0, #0]
900294b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900294b8:	4798      	blx	r3
900294ba:	4638      	mov	r0, r7
900294bc:	b002      	add	sp, #8
900294be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900294c2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900294c6:	2204      	movs	r2, #4
900294c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900294cc:	fb91 f2f2 	sdiv	r2, r1, r2
900294d0:	fb08 2303 	mla	r3, r8, r3, r2
900294d4:	441f      	add	r7, r3
900294d6:	424b      	negs	r3, r1
900294d8:	f001 0103 	and.w	r1, r1, #3
900294dc:	f003 0303 	and.w	r3, r3, #3
900294e0:	e7d4      	b.n	9002948c <_ZN8touchgfx6Canvas6renderEh+0x88>
900294e2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900294e6:	2202      	movs	r2, #2
900294e8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900294ec:	2900      	cmp	r1, #0
900294ee:	fb91 f2f2 	sdiv	r2, r1, r2
900294f2:	f001 0101 	and.w	r1, r1, #1
900294f6:	fb08 2303 	mla	r3, r8, r3, r2
900294fa:	bfb8      	it	lt
900294fc:	4249      	neglt	r1, r1
900294fe:	441f      	add	r7, r3
90029500:	e7c6      	b.n	90029490 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029502:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029506:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002950a:	fb08 f303 	mul.w	r3, r8, r3
9002950e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90029512:	441f      	add	r7, r3
90029514:	2100      	movs	r1, #0
90029516:	e7bc      	b.n	90029492 <_ZN8touchgfx6Canvas6renderEh+0x8e>
90029518:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002951c:	2103      	movs	r1, #3
9002951e:	fb08 f203 	mul.w	r2, r8, r3
90029522:	89a3      	ldrh	r3, [r4, #12]
90029524:	fb13 2301 	smlabb	r3, r3, r1, r2
90029528:	e7f3      	b.n	90029512 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002952a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002952e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029532:	fb08 2303 	mla	r3, r8, r3, r2
90029536:	e7ec      	b.n	90029512 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90029538:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002953c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029540:	fb08 f303 	mul.w	r3, r8, r3
90029544:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029548:	e7e3      	b.n	90029512 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002954a:	2701      	movs	r7, #1
9002954c:	e7b5      	b.n	900294ba <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002954e:	bf00      	nop
90029550:	240234bc 	.word	0x240234bc

90029554 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029554:	4b06      	ldr	r3, [pc, #24]	@ (90029570 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90029556:	b510      	push	{r4, lr}
90029558:	781b      	ldrb	r3, [r3, #0]
9002955a:	2b01      	cmp	r3, #1
9002955c:	d107      	bne.n	9002956e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002955e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90029562:	680b      	ldr	r3, [r1, #0]
90029564:	6814      	ldr	r4, [r2, #0]
90029566:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002956a:	6013      	str	r3, [r2, #0]
9002956c:	600c      	str	r4, [r1, #0]
9002956e:	bd10      	pop	{r4, pc}
90029570:	240234b4 	.word	0x240234b4

90029574 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029574:	b513      	push	{r0, r1, r4, lr}
90029576:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002957a:	4604      	mov	r4, r0
9002957c:	e9cd 2100 	strd	r2, r1, [sp]
90029580:	b9a3      	cbnz	r3, 900295ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029582:	466a      	mov	r2, sp
90029584:	a901      	add	r1, sp, #4
90029586:	4620      	mov	r0, r4
90029588:	f7ff ffe4 	bl	90029554 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002958c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002958e:	9901      	ldr	r1, [sp, #4]
90029590:	9a00      	ldr	r2, [sp, #0]
90029592:	1ac9      	subs	r1, r1, r3
90029594:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029596:	1ad2      	subs	r2, r2, r3
90029598:	9101      	str	r1, [sp, #4]
9002959a:	2a00      	cmp	r2, #0
9002959c:	9200      	str	r2, [sp, #0]
9002959e:	da0b      	bge.n	900295b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900295a0:	2301      	movs	r3, #1
900295a2:	2900      	cmp	r1, #0
900295a4:	da0e      	bge.n	900295c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900295a6:	f043 0304 	orr.w	r3, r3, #4
900295aa:	e013      	b.n	900295d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
900295ac:	f7ff ff08 	bl	900293c0 <_ZN8touchgfx6Canvas5closeEv>
900295b0:	2800      	cmp	r0, #0
900295b2:	d1e6      	bne.n	90029582 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900295b4:	b002      	add	sp, #8
900295b6:	bd10      	pop	{r4, pc}
900295b8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900295ba:	429a      	cmp	r2, r3
900295bc:	bfac      	ite	ge
900295be:	2302      	movge	r3, #2
900295c0:	2300      	movlt	r3, #0
900295c2:	e7ee      	b.n	900295a2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900295c4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
900295c6:	4281      	cmp	r1, r0
900295c8:	bfac      	ite	ge
900295ca:	2008      	movge	r0, #8
900295cc:	2000      	movlt	r0, #0
900295ce:	4318      	orrs	r0, r3
900295d0:	b2c3      	uxtb	r3, r0
900295d2:	b158      	cbz	r0, 900295ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
900295d4:	2200      	movs	r2, #0
900295d6:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
900295da:	9901      	ldr	r1, [sp, #4]
900295dc:	9a00      	ldr	r2, [sp, #0]
900295de:	66e1      	str	r1, [r4, #108]	@ 0x6c
900295e0:	6722      	str	r2, [r4, #112]	@ 0x70
900295e2:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
900295e6:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
900295ea:	e7e3      	b.n	900295b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
900295ec:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
900295f0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
900295f4:	4298      	cmp	r0, r3
900295f6:	d803      	bhi.n	90029600 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
900295f8:	f104 0014 	add.w	r0, r4, #20
900295fc:	f7eb ff9e 	bl	9001553c <_ZN8touchgfx7Outline6moveToEii>
90029600:	2301      	movs	r3, #1
90029602:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029606:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002960a:	2300      	movs	r3, #0
9002960c:	e7e5      	b.n	900295da <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002960e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002960e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029610:	ab02      	add	r3, sp, #8
90029612:	4604      	mov	r4, r0
90029614:	9101      	str	r1, [sp, #4]
90029616:	a901      	add	r1, sp, #4
90029618:	f843 2d08 	str.w	r2, [r3, #-8]!
9002961c:	461a      	mov	r2, r3
9002961e:	f7ff ff99 	bl	90029554 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029622:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90029624:	9901      	ldr	r1, [sp, #4]
90029626:	9a00      	ldr	r2, [sp, #0]
90029628:	1ac9      	subs	r1, r1, r3
9002962a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002962c:	1ad2      	subs	r2, r2, r3
9002962e:	9101      	str	r1, [sp, #4]
90029630:	2a00      	cmp	r2, #0
90029632:	9200      	str	r2, [sp, #0]
90029634:	db1c      	blt.n	90029670 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029636:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90029638:	429a      	cmp	r2, r3
9002963a:	bfac      	ite	ge
9002963c:	2002      	movge	r0, #2
9002963e:	2000      	movlt	r0, #0
90029640:	2900      	cmp	r1, #0
90029642:	db17      	blt.n	90029674 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029644:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90029646:	4299      	cmp	r1, r3
90029648:	bfac      	ite	ge
9002964a:	2308      	movge	r3, #8
9002964c:	2300      	movlt	r3, #0
9002964e:	4303      	orrs	r3, r0
90029650:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90029654:	b2dd      	uxtb	r5, r3
90029656:	b978      	cbnz	r0, 90029678 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029658:	f104 0014 	add.w	r0, r4, #20
9002965c:	f7ff fd66 	bl	9002912c <_ZN8touchgfx10Rasterizer6lineToEii>
90029660:	9b01      	ldr	r3, [sp, #4]
90029662:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90029666:	6623      	str	r3, [r4, #96]	@ 0x60
90029668:	9b00      	ldr	r3, [sp, #0]
9002966a:	6663      	str	r3, [r4, #100]	@ 0x64
9002966c:	b002      	add	sp, #8
9002966e:	bd70      	pop	{r4, r5, r6, pc}
90029670:	2001      	movs	r0, #1
90029672:	e7e5      	b.n	90029640 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029674:	2304      	movs	r3, #4
90029676:	e7ea      	b.n	9002964e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029678:	b113      	cbz	r3, 90029680 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002967a:	ea10 0305 	ands.w	r3, r0, r5
9002967e:	d11c      	bne.n	900296ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029680:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90029684:	f104 0614 	add.w	r6, r4, #20
90029688:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002968c:	b98b      	cbnz	r3, 900296b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002968e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029692:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029696:	4298      	cmp	r0, r3
90029698:	d802      	bhi.n	900296a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002969a:	4630      	mov	r0, r6
9002969c:	f7eb ff4e 	bl	9001553c <_ZN8touchgfx7Outline6moveToEii>
900296a0:	2301      	movs	r3, #1
900296a2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900296a6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
900296aa:	4630      	mov	r0, r6
900296ac:	e9dd 2100 	ldrd	r2, r1, [sp]
900296b0:	e7d4      	b.n	9002965c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
900296b2:	4630      	mov	r0, r6
900296b4:	f7ff fd3a 	bl	9002912c <_ZN8touchgfx10Rasterizer6lineToEii>
900296b8:	e7f7      	b.n	900296aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
900296ba:	461d      	mov	r5, r3
900296bc:	e7d0      	b.n	90029660 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

900296c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
900296c0:	b538      	push	{r3, r4, r5, lr}
900296c2:	ed2d 8b10 	vpush	{d8-d15}
900296c6:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
900296ca:	4605      	mov	r5, r0
900296cc:	eeb0 ca40 	vmov.f32	s24, s0
900296d0:	460c      	mov	r4, r1
900296d2:	eef0 ca60 	vmov.f32	s25, s1
900296d6:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90029834 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
900296da:	eeb0 da41 	vmov.f32	s26, s2
900296de:	eef0 da61 	vmov.f32	s27, s3
900296e2:	eeb0 ea42 	vmov.f32	s28, s4
900296e6:	eef0 ea62 	vmov.f32	s29, s5
900296ea:	eef0 aa6b 	vmov.f32	s21, s23
900296ee:	2c08      	cmp	r4, #8
900296f0:	d86e      	bhi.n	900297d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
900296f2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
900296f6:	ee7d 7aee 	vsub.f32	s15, s27, s29
900296fa:	ee3d 6a4e 	vsub.f32	s12, s26, s28
900296fe:	ee3e 7aec 	vsub.f32	s14, s29, s25
90029702:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90029706:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002970a:	ee7c faad 	vadd.f32	s31, s25, s27
9002970e:	eee6 7a07 	vfma.f32	s15, s12, s14
90029712:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90029716:	ee3d aaae 	vadd.f32	s20, s27, s29
9002971a:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002971e:	ee6f faab 	vmul.f32	s31, s31, s23
90029722:	ee69 9aab 	vmul.f32	s19, s19, s23
90029726:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002972a:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002972e:	ee7f 8a29 	vadd.f32	s17, s30, s19
90029732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029736:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002973a:	ee68 8aab 	vmul.f32	s17, s17, s23
9002973e:	bf48      	it	mi
90029740:	eef1 7a67 	vnegmi.f32	s15, s15
90029744:	ee29 9a2b 	vmul.f32	s18, s18, s23
90029748:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
9002974c:	eef4 7acb 	vcmpe.f32	s15, s22
90029750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029754:	dd3f      	ble.n	900297d6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90029756:	ee27 7a07 	vmul.f32	s14, s14, s14
9002975a:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002975e:	eea6 7aa6 	vfma.f32	s14, s13, s13
90029762:	ee27 7a06 	vmul.f32	s14, s14, s12
90029766:	eef4 7ac7 	vcmpe.f32	s15, s14
9002976a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002976e:	d847      	bhi.n	90029800 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029770:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90029774:	ee3e 0aed 	vsub.f32	s0, s29, s27
90029778:	f000 fa39 	bl	90029bee <atan2f>
9002977c:	eeb0 8a40 	vmov.f32	s16, s0
90029780:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90029784:	ee3d 0aec 	vsub.f32	s0, s27, s25
90029788:	f000 fa31 	bl	90029bee <atan2f>
9002978c:	ee38 0a40 	vsub.f32	s0, s16, s0
90029790:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90029838 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90029794:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002979c:	bf48      	it	mi
9002979e:	eeb1 0a40 	vnegmi.f32	s0, s0
900297a2:	eeb4 0ae7 	vcmpe.f32	s0, s15
900297a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297aa:	bfa4      	itt	ge
900297ac:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 9002983c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
900297b0:	ee37 0ac0 	vsubge.f32	s0, s15, s0
900297b4:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90029840 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
900297b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
900297bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297c0:	d51e      	bpl.n	90029800 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
900297c2:	eef0 0a49 	vmov.f32	s1, s18
900297c6:	4628      	mov	r0, r5
900297c8:	eeb0 0a68 	vmov.f32	s0, s17
900297cc:	f7e9 fb36 	bl	90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900297d0:	ecbd 8b10 	vpop	{d8-d15}
900297d4:	bd38      	pop	{r3, r4, r5, pc}
900297d6:	ee7c 7a0e 	vadd.f32	s15, s24, s28
900297da:	eeb0 7a68 	vmov.f32	s14, s17
900297de:	eef0 6a49 	vmov.f32	s13, s18
900297e2:	eea7 7aea 	vfms.f32	s14, s15, s21
900297e6:	ee7c 7aae 	vadd.f32	s15, s25, s29
900297ea:	eee7 6aea 	vfms.f32	s13, s15, s21
900297ee:	ee66 7aa6 	vmul.f32	s15, s13, s13
900297f2:	eee7 7a07 	vfma.f32	s15, s14, s14
900297f6:	eef4 7ac6 	vcmpe.f32	s15, s12
900297fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297fe:	d9e0      	bls.n	900297c2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029800:	3401      	adds	r4, #1
90029802:	eef0 0a6c 	vmov.f32	s1, s25
90029806:	eeb0 0a4c 	vmov.f32	s0, s24
9002980a:	4628      	mov	r0, r5
9002980c:	4621      	mov	r1, r4
9002980e:	eef0 2a49 	vmov.f32	s5, s18
90029812:	eeb0 2a68 	vmov.f32	s4, s17
90029816:	eef0 1a6f 	vmov.f32	s3, s31
9002981a:	eeb0 1a4f 	vmov.f32	s2, s30
9002981e:	f7ff ff4f 	bl	900296c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90029822:	eef0 da4a 	vmov.f32	s27, s20
90029826:	eeb0 da69 	vmov.f32	s26, s19
9002982a:	eef0 ca49 	vmov.f32	s25, s18
9002982e:	eeb0 ca68 	vmov.f32	s24, s17
90029832:	e75c      	b.n	900296ee <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90029834:	2edbe6ff 	.word	0x2edbe6ff
90029838:	40490fdb 	.word	0x40490fdb
9002983c:	40c90fdb 	.word	0x40c90fdb
90029840:	3dcccccd 	.word	0x3dcccccd

90029844 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90029844:	b530      	push	{r4, r5, lr}
90029846:	ed2d 8b10 	vpush	{d8-d15}
9002984a:	eef0 8a40 	vmov.f32	s17, s0
9002984e:	b085      	sub	sp, #20
90029850:	eef0 9a60 	vmov.f32	s19, s1
90029854:	4604      	mov	r4, r0
90029856:	eef0 fa41 	vmov.f32	s31, s2
9002985a:	460d      	mov	r5, r1
9002985c:	eeb0 fa61 	vmov.f32	s30, s3
90029860:	eef0 ba42 	vmov.f32	s23, s4
90029864:	eeb0 ca62 	vmov.f32	s24, s5
90029868:	eef0 aa43 	vmov.f32	s21, s6
9002986c:	eeb0 ba63 	vmov.f32	s22, s7
90029870:	2d08      	cmp	r5, #8
90029872:	f200 8113 	bhi.w	90029a9c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90029876:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002987a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002987e:	ee7f 6aab 	vadd.f32	s13, s31, s23
90029882:	ee38 daaf 	vadd.f32	s26, s17, s31
90029886:	ee26 6a27 	vmul.f32	s12, s12, s15
9002988a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002988e:	ee2d da27 	vmul.f32	s26, s26, s15
90029892:	ed8d 6a01 	vstr	s12, [sp, #4]
90029896:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002989a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002989e:	eeb0 ea4d 	vmov.f32	s28, s26
900298a2:	ee79 da8f 	vadd.f32	s27, s19, s30
900298a6:	ee3f 7a0c 	vadd.f32	s14, s30, s24
900298aa:	eea6 eaa7 	vfma.f32	s28, s13, s15
900298ae:	ee66 6a27 	vmul.f32	s13, s12, s15
900298b2:	ee6d daa7 	vmul.f32	s27, s27, s15
900298b6:	edcd 6a03 	vstr	s13, [sp, #12]
900298ba:	eef0 6a6c 	vmov.f32	s13, s25
900298be:	eef0 ea6d 	vmov.f32	s29, s27
900298c2:	ee2e ea27 	vmul.f32	s28, s28, s15
900298c6:	eee7 6a27 	vfma.f32	s13, s14, s15
900298ca:	eee7 ea27 	vfma.f32	s29, s14, s15
900298ce:	ee26 7aa7 	vmul.f32	s14, s13, s15
900298d2:	ee6e eaa7 	vmul.f32	s29, s29, s15
900298d6:	eef0 6a67 	vmov.f32	s13, s15
900298da:	ed8d 7a02 	vstr	s14, [sp, #8]
900298de:	ed9d 7a03 	vldr	s14, [sp, #12]
900298e2:	ee3e 9a07 	vadd.f32	s18, s28, s14
900298e6:	ed9d 7a02 	vldr	s14, [sp, #8]
900298ea:	ee3e aa87 	vadd.f32	s20, s29, s14
900298ee:	ee29 9a27 	vmul.f32	s18, s18, s15
900298f2:	ee2a aa27 	vmul.f32	s20, s20, s15
900298f6:	2d00      	cmp	r5, #0
900298f8:	f000 810b 	beq.w	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900298fc:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029900:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90029b58 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029904:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90029908:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002990c:	ee3f 6aea 	vsub.f32	s12, s31, s21
90029910:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90029914:	ee3b 5aea 	vsub.f32	s10, s23, s21
90029918:	eea6 7a27 	vfma.f32	s14, s12, s15
9002991c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90029920:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90029924:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90029928:	eea5 6a27 	vfma.f32	s12, s10, s15
9002992c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90029930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029934:	bf48      	it	mi
90029936:	eeb1 7a47 	vnegmi.f32	s14, s14
9002993a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002993e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029942:	eeb4 7ae4 	vcmpe.f32	s14, s9
90029946:	bf48      	it	mi
90029948:	eeb1 6a46 	vnegmi.f32	s12, s12
9002994c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029950:	f340 80a8 	ble.w	90029aa4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90029954:	eeb4 6ae4 	vcmpe.f32	s12, s9
90029958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002995c:	dd5a      	ble.n	90029a14 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002995e:	ee65 5aa5 	vmul.f32	s11, s11, s11
90029962:	ee37 7a06 	vadd.f32	s14, s14, s12
90029966:	eee7 5aa7 	vfma.f32	s11, s15, s15
9002996a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002996e:	ee65 7a85 	vmul.f32	s15, s11, s10
90029972:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002997a:	f200 80ca 	bhi.w	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002997e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029982:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029986:	f000 f932 	bl	90029bee <atan2f>
9002998a:	eeb0 8a40 	vmov.f32	s16, s0
9002998e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029992:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029996:	f000 f92a 	bl	90029bee <atan2f>
9002999a:	ee38 fa40 	vsub.f32	s30, s16, s0
9002999e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
900299a2:	ee3b 0a4c 	vsub.f32	s0, s22, s24
900299a6:	eeb5 fac0 	vcmpe.f32	s30, #0.0
900299aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299ae:	bf48      	it	mi
900299b0:	eeb1 fa4f 	vnegmi.f32	s30, s30
900299b4:	f000 f91b 	bl	90029bee <atan2f>
900299b8:	ee30 0a48 	vsub.f32	s0, s0, s16
900299bc:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90029b5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900299c0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900299c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299c8:	eeb4 fae7 	vcmpe.f32	s30, s15
900299cc:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90029b5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900299d0:	bf48      	it	mi
900299d2:	eeb1 0a40 	vnegmi.f32	s0, s0
900299d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299da:	eeb4 0ae7 	vcmpe.f32	s0, s15
900299de:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90029b60 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
900299e2:	bfa4      	itt	ge
900299e4:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90029b64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
900299e8:	ee37 fa4f 	vsubge.f32	s30, s14, s30
900299ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299f0:	bfa4      	itt	ge
900299f2:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90029b64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
900299f6:	ee37 0a40 	vsubge.f32	s0, s14, s0
900299fa:	ee3f 0a00 	vadd.f32	s0, s30, s0
900299fe:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029a02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a06:	f140 8084 	bpl.w	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029a0a:	eef0 0a4a 	vmov.f32	s1, s20
90029a0e:	eeb0 0a49 	vmov.f32	s0, s18
90029a12:	e040      	b.n	90029a96 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90029a14:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029a18:	ee27 7a07 	vmul.f32	s14, s14, s14
90029a1c:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029a20:	ee67 7a85 	vmul.f32	s15, s15, s10
90029a24:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029a28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a2c:	d871      	bhi.n	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029a2e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029a32:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029a36:	f000 f8da 	bl	90029bee <atan2f>
90029a3a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029a3e:	eeb0 8a40 	vmov.f32	s16, s0
90029a42:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029a46:	f000 f8d2 	bl	90029bee <atan2f>
90029a4a:	ee38 0a40 	vsub.f32	s0, s16, s0
90029a4e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90029b5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029a52:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a5a:	bf48      	it	mi
90029a5c:	eeb1 0a40 	vnegmi.f32	s0, s0
90029a60:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029a64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a68:	bfa4      	itt	ge
90029a6a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90029b64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029a6e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029a72:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90029b60 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029a76:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a7e:	d548      	bpl.n	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029a80:	eef0 0a4f 	vmov.f32	s1, s30
90029a84:	4620      	mov	r0, r4
90029a86:	eeb0 0a6f 	vmov.f32	s0, s31
90029a8a:	f7e9 f9d7 	bl	90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029a8e:	eef0 0a4c 	vmov.f32	s1, s24
90029a92:	eeb0 0a6b 	vmov.f32	s0, s23
90029a96:	4620      	mov	r0, r4
90029a98:	f7e9 f9d0 	bl	90012e3c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029a9c:	b005      	add	sp, #20
90029a9e:	ecbd 8b10 	vpop	{d8-d15}
90029aa2:	bd30      	pop	{r4, r5, pc}
90029aa4:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90029b58 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029aa8:	eeb4 6ac7 	vcmpe.f32	s12, s14
90029aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029ab0:	dd19      	ble.n	90029ae6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90029ab2:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029ab6:	ee26 7a06 	vmul.f32	s14, s12, s12
90029aba:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029abe:	ee67 7a85 	vmul.f32	s15, s15, s10
90029ac2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029aca:	d822      	bhi.n	90029b12 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029acc:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029ad0:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029ad4:	f000 f88b 	bl	90029bee <atan2f>
90029ad8:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029adc:	eeb0 8a40 	vmov.f32	s16, s0
90029ae0:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029ae4:	e7af      	b.n	90029a46 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90029ae6:	ee78 7aaa 	vadd.f32	s15, s17, s21
90029aea:	eeb0 7a49 	vmov.f32	s14, s18
90029aee:	eeb0 6a4a 	vmov.f32	s12, s20
90029af2:	eea7 7ae6 	vfms.f32	s14, s15, s13
90029af6:	ee79 7a8b 	vadd.f32	s15, s19, s22
90029afa:	eea7 6ae6 	vfms.f32	s12, s15, s13
90029afe:	ee66 7a06 	vmul.f32	s15, s12, s12
90029b02:	eee7 7a07 	vfma.f32	s15, s14, s14
90029b06:	eef4 7ac5 	vcmpe.f32	s15, s10
90029b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b0e:	f67f af7c 	bls.w	90029a0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90029b12:	3501      	adds	r5, #1
90029b14:	eef0 0a69 	vmov.f32	s1, s19
90029b18:	eeb0 0a68 	vmov.f32	s0, s17
90029b1c:	4620      	mov	r0, r4
90029b1e:	4629      	mov	r1, r5
90029b20:	eef0 3a4a 	vmov.f32	s7, s20
90029b24:	eeb0 3a49 	vmov.f32	s6, s18
90029b28:	eef0 2a6e 	vmov.f32	s5, s29
90029b2c:	eeb0 2a4e 	vmov.f32	s4, s28
90029b30:	eef0 1a6d 	vmov.f32	s3, s27
90029b34:	eeb0 1a4d 	vmov.f32	s2, s26
90029b38:	f7ff fe84 	bl	90029844 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90029b3c:	eeb0 ca6c 	vmov.f32	s24, s25
90029b40:	eddd ba01 	vldr	s23, [sp, #4]
90029b44:	eef0 9a4a 	vmov.f32	s19, s20
90029b48:	ed9d fa02 	vldr	s30, [sp, #8]
90029b4c:	eef0 8a49 	vmov.f32	s17, s18
90029b50:	eddd fa03 	vldr	s31, [sp, #12]
90029b54:	e68c      	b.n	90029870 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90029b56:	bf00      	nop
90029b58:	2edbe6ff 	.word	0x2edbe6ff
90029b5c:	40490fdb 	.word	0x40490fdb
90029b60:	3dcccccd 	.word	0x3dcccccd
90029b64:	40c90fdb 	.word	0x40c90fdb

90029b68 <_ZN8touchgfx6CanvasD1Ev>:
90029b68:	4b04      	ldr	r3, [pc, #16]	@ (90029b7c <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029b6a:	b510      	push	{r4, lr}
90029b6c:	4604      	mov	r4, r0
90029b6e:	f840 3b14 	str.w	r3, [r0], #20
90029b72:	f7ea ffeb 	bl	90014b4c <_ZN8touchgfx7OutlineD1Ev>
90029b76:	4620      	mov	r0, r4
90029b78:	bd10      	pop	{r4, pc}
90029b7a:	bf00      	nop
90029b7c:	9002eb0c 	.word	0x9002eb0c

90029b80 <_ZN8touchgfx6CanvasD0Ev>:
90029b80:	b510      	push	{r4, lr}
90029b82:	4604      	mov	r4, r0
90029b84:	f7ff fff0 	bl	90029b68 <_ZN8touchgfx6CanvasD1Ev>
90029b88:	2174      	movs	r1, #116	@ 0x74
90029b8a:	4620      	mov	r0, r4
90029b8c:	f000 f807 	bl	90029b9e <_ZdlPvj>
90029b90:	4620      	mov	r0, r4
90029b92:	bd10      	pop	{r4, pc}

90029b94 <__aeabi_atexit>:
90029b94:	460b      	mov	r3, r1
90029b96:	4601      	mov	r1, r0
90029b98:	4618      	mov	r0, r3
90029b9a:	f000 bc5b 	b.w	9002a454 <__cxa_atexit>

90029b9e <_ZdlPvj>:
90029b9e:	f000 b812 	b.w	90029bc6 <_ZdlPv>

90029ba2 <__cxa_guard_acquire>:
90029ba2:	6802      	ldr	r2, [r0, #0]
90029ba4:	07d2      	lsls	r2, r2, #31
90029ba6:	4603      	mov	r3, r0
90029ba8:	d405      	bmi.n	90029bb6 <__cxa_guard_acquire+0x14>
90029baa:	7842      	ldrb	r2, [r0, #1]
90029bac:	b102      	cbz	r2, 90029bb0 <__cxa_guard_acquire+0xe>
90029bae:	deff      	udf	#255	@ 0xff
90029bb0:	2001      	movs	r0, #1
90029bb2:	7058      	strb	r0, [r3, #1]
90029bb4:	4770      	bx	lr
90029bb6:	2000      	movs	r0, #0
90029bb8:	4770      	bx	lr

90029bba <__cxa_guard_release>:
90029bba:	2301      	movs	r3, #1
90029bbc:	6003      	str	r3, [r0, #0]
90029bbe:	4770      	bx	lr

90029bc0 <__cxa_pure_virtual>:
90029bc0:	b508      	push	{r3, lr}
90029bc2:	f000 f80f 	bl	90029be4 <_ZSt9terminatev>

90029bc6 <_ZdlPv>:
90029bc6:	f000 bb8f 	b.w	9002a2e8 <free>

90029bca <_ZN10__cxxabiv111__terminateEPFvvE>:
90029bca:	b508      	push	{r3, lr}
90029bcc:	4780      	blx	r0
90029bce:	f000 fb58 	bl	9002a282 <abort>
	...

90029bd4 <_ZSt13get_terminatev>:
90029bd4:	4b02      	ldr	r3, [pc, #8]	@ (90029be0 <_ZSt13get_terminatev+0xc>)
90029bd6:	6818      	ldr	r0, [r3, #0]
90029bd8:	f3bf 8f5b 	dmb	ish
90029bdc:	4770      	bx	lr
90029bde:	bf00      	nop
90029be0:	24000104 	.word	0x24000104

90029be4 <_ZSt9terminatev>:
90029be4:	b508      	push	{r3, lr}
90029be6:	f7ff fff5 	bl	90029bd4 <_ZSt13get_terminatev>
90029bea:	f7ff ffee 	bl	90029bca <_ZN10__cxxabiv111__terminateEPFvvE>

90029bee <atan2f>:
90029bee:	f000 b9cf 	b.w	90029f90 <__ieee754_atan2f>
	...

90029bf4 <sqrtf>:
90029bf4:	b508      	push	{r3, lr}
90029bf6:	ed2d 8b02 	vpush	{d8}
90029bfa:	eeb0 8a40 	vmov.f32	s16, s0
90029bfe:	f000 f9c4 	bl	90029f8a <__ieee754_sqrtf>
90029c02:	eeb4 8a48 	vcmp.f32	s16, s16
90029c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029c0a:	d60c      	bvs.n	90029c26 <sqrtf+0x32>
90029c0c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90029c2c <sqrtf+0x38>
90029c10:	eeb4 8ae8 	vcmpe.f32	s16, s17
90029c14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029c18:	d505      	bpl.n	90029c26 <sqrtf+0x32>
90029c1a:	f000 fe89 	bl	9002a930 <__errno>
90029c1e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
90029c22:	2321      	movs	r3, #33	@ 0x21
90029c24:	6003      	str	r3, [r0, #0]
90029c26:	ecbd 8b02 	vpop	{d8}
90029c2a:	bd08      	pop	{r3, pc}
90029c2c:	00000000 	.word	0x00000000

90029c30 <sinf_poly>:
90029c30:	07cb      	lsls	r3, r1, #31
90029c32:	d412      	bmi.n	90029c5a <sinf_poly+0x2a>
90029c34:	ee21 5b00 	vmul.f64	d5, d1, d0
90029c38:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029c3c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029c40:	eea6 7b01 	vfma.f64	d7, d6, d1
90029c44:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029c48:	ee21 1b05 	vmul.f64	d1, d1, d5
90029c4c:	eea6 0b05 	vfma.f64	d0, d6, d5
90029c50:	eea7 0b01 	vfma.f64	d0, d7, d1
90029c54:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029c58:	4770      	bx	lr
90029c5a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90029c5e:	ee21 5b01 	vmul.f64	d5, d1, d1
90029c62:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029c66:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029c6a:	eea1 7b06 	vfma.f64	d7, d1, d6
90029c6e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90029c72:	eea1 0b06 	vfma.f64	d0, d1, d6
90029c76:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029c7a:	ee21 1b05 	vmul.f64	d1, d1, d5
90029c7e:	eea5 0b06 	vfma.f64	d0, d5, d6
90029c82:	e7e5      	b.n	90029c50 <sinf_poly+0x20>
90029c84:	0000      	movs	r0, r0
	...

90029c88 <sinf>:
90029c88:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029c8a:	ee10 4a10 	vmov	r4, s0
90029c8e:	f3c4 530a 	ubfx	r3, r4, #20, #11
90029c92:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90029c96:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90029c9a:	eef0 7a40 	vmov.f32	s15, s0
90029c9e:	ea4f 5214 	mov.w	r2, r4, lsr #20
90029ca2:	d218      	bcs.n	90029cd6 <sinf+0x4e>
90029ca4:	ee26 1b06 	vmul.f64	d1, d6, d6
90029ca8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029cac:	d20a      	bcs.n	90029cc4 <sinf+0x3c>
90029cae:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
90029cb2:	d103      	bne.n	90029cbc <sinf+0x34>
90029cb4:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90029cb8:	ed8d 1a01 	vstr	s2, [sp, #4]
90029cbc:	eeb0 0a67 	vmov.f32	s0, s15
90029cc0:	b003      	add	sp, #12
90029cc2:	bd30      	pop	{r4, r5, pc}
90029cc4:	483a      	ldr	r0, [pc, #232]	@ (90029db0 <sinf+0x128>)
90029cc6:	eeb0 0b46 	vmov.f64	d0, d6
90029cca:	2100      	movs	r1, #0
90029ccc:	b003      	add	sp, #12
90029cce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029cd2:	f7ff bfad 	b.w	90029c30 <sinf_poly>
90029cd6:	f240 422e 	movw	r2, #1070	@ 0x42e
90029cda:	4293      	cmp	r3, r2
90029cdc:	d824      	bhi.n	90029d28 <sinf+0xa0>
90029cde:	4b34      	ldr	r3, [pc, #208]	@ (90029db0 <sinf+0x128>)
90029ce0:	ed93 7b08 	vldr	d7, [r3, #32]
90029ce4:	ee26 7b07 	vmul.f64	d7, d6, d7
90029ce8:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90029cec:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029cf0:	ee17 1a90 	vmov	r1, s15
90029cf4:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029cf8:	1609      	asrs	r1, r1, #24
90029cfa:	ee07 1a90 	vmov	s15, r1
90029cfe:	f001 0203 	and.w	r2, r1, #3
90029d02:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029d06:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90029d0a:	ed92 0b00 	vldr	d0, [r2]
90029d0e:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
90029d12:	f011 0f02 	tst.w	r1, #2
90029d16:	eea5 6b47 	vfms.f64	d6, d5, d7
90029d1a:	bf08      	it	eq
90029d1c:	4618      	moveq	r0, r3
90029d1e:	ee26 1b06 	vmul.f64	d1, d6, d6
90029d22:	ee20 0b06 	vmul.f64	d0, d0, d6
90029d26:	e7d1      	b.n	90029ccc <sinf+0x44>
90029d28:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029d2c:	d237      	bcs.n	90029d9e <sinf+0x116>
90029d2e:	4921      	ldr	r1, [pc, #132]	@ (90029db4 <sinf+0x12c>)
90029d30:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029d34:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029d38:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029d3c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029d40:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029d44:	6a10      	ldr	r0, [r2, #32]
90029d46:	6912      	ldr	r2, [r2, #16]
90029d48:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029d4c:	40ab      	lsls	r3, r5
90029d4e:	fba0 5003 	umull	r5, r0, r0, r3
90029d52:	4359      	muls	r1, r3
90029d54:	fbe3 0102 	umlal	r0, r1, r3, r2
90029d58:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029d5c:	0f9d      	lsrs	r5, r3, #30
90029d5e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029d62:	1ac9      	subs	r1, r1, r3
90029d64:	f7d6 fc9a 	bl	9000069c <__aeabi_l2d>
90029d68:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029d6c:	4b10      	ldr	r3, [pc, #64]	@ (90029db0 <sinf+0x128>)
90029d6e:	f004 0203 	and.w	r2, r4, #3
90029d72:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029d76:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 90029da8 <sinf+0x120>
90029d7a:	ed92 0b00 	vldr	d0, [r2]
90029d7e:	ec41 0b17 	vmov	d7, r0, r1
90029d82:	f014 0f02 	tst.w	r4, #2
90029d86:	ee27 7b06 	vmul.f64	d7, d7, d6
90029d8a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029d8e:	4629      	mov	r1, r5
90029d90:	bf08      	it	eq
90029d92:	4618      	moveq	r0, r3
90029d94:	ee27 1b07 	vmul.f64	d1, d7, d7
90029d98:	ee20 0b07 	vmul.f64	d0, d0, d7
90029d9c:	e796      	b.n	90029ccc <sinf+0x44>
90029d9e:	b003      	add	sp, #12
90029da0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029da4:	f000 b8e2 	b.w	90029f6c <__math_invalidf>
90029da8:	54442d18 	.word	0x54442d18
90029dac:	3c1921fb 	.word	0x3c1921fb
90029db0:	9002eb78 	.word	0x9002eb78
90029db4:	9002eb18 	.word	0x9002eb18

90029db8 <sinf_poly>:
90029db8:	07cb      	lsls	r3, r1, #31
90029dba:	d412      	bmi.n	90029de2 <sinf_poly+0x2a>
90029dbc:	ee21 5b00 	vmul.f64	d5, d1, d0
90029dc0:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029dc4:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029dc8:	eea6 7b01 	vfma.f64	d7, d6, d1
90029dcc:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029dd0:	ee21 1b05 	vmul.f64	d1, d1, d5
90029dd4:	eea6 0b05 	vfma.f64	d0, d6, d5
90029dd8:	eea7 0b01 	vfma.f64	d0, d7, d1
90029ddc:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029de0:	4770      	bx	lr
90029de2:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90029de6:	ee21 5b01 	vmul.f64	d5, d1, d1
90029dea:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029dee:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029df2:	eea1 7b06 	vfma.f64	d7, d1, d6
90029df6:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90029dfa:	eea1 0b06 	vfma.f64	d0, d1, d6
90029dfe:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029e02:	ee21 1b05 	vmul.f64	d1, d1, d5
90029e06:	eea5 0b06 	vfma.f64	d0, d5, d6
90029e0a:	e7e5      	b.n	90029dd8 <sinf_poly+0x20>
90029e0c:	0000      	movs	r0, r0
	...

90029e10 <cosf>:
90029e10:	b538      	push	{r3, r4, r5, lr}
90029e12:	ee10 4a10 	vmov	r4, s0
90029e16:	f3c4 530a 	ubfx	r3, r4, #20, #11
90029e1a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90029e1e:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
90029e22:	d21f      	bcs.n	90029e64 <cosf+0x54>
90029e24:	ee27 7b07 	vmul.f64	d7, d7, d7
90029e28:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029e2c:	f0c0 8082 	bcc.w	90029f34 <cosf+0x124>
90029e30:	ee27 4b07 	vmul.f64	d4, d7, d7
90029e34:	4b44      	ldr	r3, [pc, #272]	@ (90029f48 <cosf+0x138>)
90029e36:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
90029e3a:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
90029e3e:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
90029e42:	eea7 6b05 	vfma.f64	d6, d7, d5
90029e46:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90029e4a:	eea7 0b05 	vfma.f64	d0, d7, d5
90029e4e:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
90029e52:	ee27 7b04 	vmul.f64	d7, d7, d4
90029e56:	eea4 0b05 	vfma.f64	d0, d4, d5
90029e5a:	eea6 0b07 	vfma.f64	d0, d6, d7
90029e5e:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029e62:	bd38      	pop	{r3, r4, r5, pc}
90029e64:	f240 422e 	movw	r2, #1070	@ 0x42e
90029e68:	4293      	cmp	r3, r2
90029e6a:	d829      	bhi.n	90029ec0 <cosf+0xb0>
90029e6c:	4b36      	ldr	r3, [pc, #216]	@ (90029f48 <cosf+0x138>)
90029e6e:	ed93 6b08 	vldr	d6, [r3, #32]
90029e72:	ee27 6b06 	vmul.f64	d6, d7, d6
90029e76:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029e7a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029e7e:	ee16 1a90 	vmov	r1, s13
90029e82:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029e86:	1609      	asrs	r1, r1, #24
90029e88:	ee06 1a90 	vmov	s13, r1
90029e8c:	f001 0203 	and.w	r2, r1, #3
90029e90:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029e94:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029e98:	ed92 0b00 	vldr	d0, [r2]
90029e9c:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029ea0:	f011 0f02 	tst.w	r1, #2
90029ea4:	f081 0101 	eor.w	r1, r1, #1
90029ea8:	eea5 7b46 	vfms.f64	d7, d5, d6
90029eac:	bf08      	it	eq
90029eae:	4618      	moveq	r0, r3
90029eb0:	ee27 1b07 	vmul.f64	d1, d7, d7
90029eb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029eb8:	ee20 0b07 	vmul.f64	d0, d0, d7
90029ebc:	f7ff bf7c 	b.w	90029db8 <sinf_poly>
90029ec0:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029ec4:	d232      	bcs.n	90029f2c <cosf+0x11c>
90029ec6:	4921      	ldr	r1, [pc, #132]	@ (90029f4c <cosf+0x13c>)
90029ec8:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029ecc:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029ed0:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029ed4:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029ed8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029edc:	6a10      	ldr	r0, [r2, #32]
90029ede:	6912      	ldr	r2, [r2, #16]
90029ee0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029ee4:	40ab      	lsls	r3, r5
90029ee6:	fba0 5003 	umull	r5, r0, r0, r3
90029eea:	4359      	muls	r1, r3
90029eec:	fbe3 0102 	umlal	r0, r1, r3, r2
90029ef0:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029ef4:	0f9d      	lsrs	r5, r3, #30
90029ef6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029efa:	1ac9      	subs	r1, r1, r3
90029efc:	f7d6 fbce 	bl	9000069c <__aeabi_l2d>
90029f00:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029f04:	4b10      	ldr	r3, [pc, #64]	@ (90029f48 <cosf+0x138>)
90029f06:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90029f40 <cosf+0x130>
90029f0a:	ec41 0b17 	vmov	d7, r0, r1
90029f0e:	f004 0203 	and.w	r2, r4, #3
90029f12:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029f16:	ed92 0b00 	vldr	d0, [r2]
90029f1a:	ee27 7b06 	vmul.f64	d7, d7, d6
90029f1e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029f22:	f014 0f02 	tst.w	r4, #2
90029f26:	f085 0101 	eor.w	r1, r5, #1
90029f2a:	e7bf      	b.n	90029eac <cosf+0x9c>
90029f2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029f30:	f000 b81c 	b.w	90029f6c <__math_invalidf>
90029f34:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90029f38:	e793      	b.n	90029e62 <cosf+0x52>
90029f3a:	bf00      	nop
90029f3c:	f3af 8000 	nop.w
90029f40:	54442d18 	.word	0x54442d18
90029f44:	3c1921fb 	.word	0x3c1921fb
90029f48:	9002eb78 	.word	0x9002eb78
90029f4c:	9002eb18 	.word	0x9002eb18

90029f50 <with_errnof>:
90029f50:	b510      	push	{r4, lr}
90029f52:	ed2d 8b02 	vpush	{d8}
90029f56:	eeb0 8a40 	vmov.f32	s16, s0
90029f5a:	4604      	mov	r4, r0
90029f5c:	f000 fce8 	bl	9002a930 <__errno>
90029f60:	eeb0 0a48 	vmov.f32	s0, s16
90029f64:	ecbd 8b02 	vpop	{d8}
90029f68:	6004      	str	r4, [r0, #0]
90029f6a:	bd10      	pop	{r4, pc}

90029f6c <__math_invalidf>:
90029f6c:	eef0 7a40 	vmov.f32	s15, s0
90029f70:	ee30 7a40 	vsub.f32	s14, s0, s0
90029f74:	eef4 7a67 	vcmp.f32	s15, s15
90029f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f7c:	ee87 0a07 	vdiv.f32	s0, s14, s14
90029f80:	d602      	bvs.n	90029f88 <__math_invalidf+0x1c>
90029f82:	2021      	movs	r0, #33	@ 0x21
90029f84:	f7ff bfe4 	b.w	90029f50 <with_errnof>
90029f88:	4770      	bx	lr

90029f8a <__ieee754_sqrtf>:
90029f8a:	eeb1 0ac0 	vsqrt.f32	s0, s0
90029f8e:	4770      	bx	lr

90029f90 <__ieee754_atan2f>:
90029f90:	ee10 2a90 	vmov	r2, s1
90029f94:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90029f98:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029f9c:	b510      	push	{r4, lr}
90029f9e:	eef0 7a40 	vmov.f32	s15, s0
90029fa2:	d806      	bhi.n	90029fb2 <__ieee754_atan2f+0x22>
90029fa4:	ee10 0a10 	vmov	r0, s0
90029fa8:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90029fac:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029fb0:	d904      	bls.n	90029fbc <__ieee754_atan2f+0x2c>
90029fb2:	ee77 7aa0 	vadd.f32	s15, s15, s1
90029fb6:	eeb0 0a67 	vmov.f32	s0, s15
90029fba:	bd10      	pop	{r4, pc}
90029fbc:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90029fc0:	d103      	bne.n	90029fca <__ieee754_atan2f+0x3a>
90029fc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029fc6:	f000 b881 	b.w	9002a0cc <atanf>
90029fca:	1794      	asrs	r4, r2, #30
90029fcc:	f004 0402 	and.w	r4, r4, #2
90029fd0:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
90029fd4:	b93b      	cbnz	r3, 90029fe6 <__ieee754_atan2f+0x56>
90029fd6:	2c02      	cmp	r4, #2
90029fd8:	d05c      	beq.n	9002a094 <__ieee754_atan2f+0x104>
90029fda:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a0a8 <__ieee754_atan2f+0x118>
90029fde:	2c03      	cmp	r4, #3
90029fe0:	fe47 7a00 	vseleq.f32	s15, s14, s0
90029fe4:	e7e7      	b.n	90029fb6 <__ieee754_atan2f+0x26>
90029fe6:	b939      	cbnz	r1, 90029ff8 <__ieee754_atan2f+0x68>
90029fe8:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002a0ac <__ieee754_atan2f+0x11c>
90029fec:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a0b0 <__ieee754_atan2f+0x120>
90029ff0:	2800      	cmp	r0, #0
90029ff2:	fe67 7a87 	vselge.f32	s15, s15, s14
90029ff6:	e7de      	b.n	90029fb6 <__ieee754_atan2f+0x26>
90029ff8:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029ffc:	d110      	bne.n	9002a020 <__ieee754_atan2f+0x90>
90029ffe:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a002:	f104 34ff 	add.w	r4, r4, #4294967295
9002a006:	d107      	bne.n	9002a018 <__ieee754_atan2f+0x88>
9002a008:	2c02      	cmp	r4, #2
9002a00a:	d846      	bhi.n	9002a09a <__ieee754_atan2f+0x10a>
9002a00c:	4b29      	ldr	r3, [pc, #164]	@ (9002a0b4 <__ieee754_atan2f+0x124>)
9002a00e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002a012:	edd3 7a00 	vldr	s15, [r3]
9002a016:	e7ce      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a018:	2c02      	cmp	r4, #2
9002a01a:	d841      	bhi.n	9002a0a0 <__ieee754_atan2f+0x110>
9002a01c:	4b26      	ldr	r3, [pc, #152]	@ (9002a0b8 <__ieee754_atan2f+0x128>)
9002a01e:	e7f6      	b.n	9002a00e <__ieee754_atan2f+0x7e>
9002a020:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a024:	d0e0      	beq.n	90029fe8 <__ieee754_atan2f+0x58>
9002a026:	1a5b      	subs	r3, r3, r1
9002a028:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002a02c:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002a030:	da1a      	bge.n	9002a068 <__ieee754_atan2f+0xd8>
9002a032:	2a00      	cmp	r2, #0
9002a034:	da01      	bge.n	9002a03a <__ieee754_atan2f+0xaa>
9002a036:	313c      	adds	r1, #60	@ 0x3c
9002a038:	db19      	blt.n	9002a06e <__ieee754_atan2f+0xde>
9002a03a:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002a03e:	f000 f919 	bl	9002a274 <fabsf>
9002a042:	f000 f843 	bl	9002a0cc <atanf>
9002a046:	eef0 7a40 	vmov.f32	s15, s0
9002a04a:	2c01      	cmp	r4, #1
9002a04c:	d012      	beq.n	9002a074 <__ieee754_atan2f+0xe4>
9002a04e:	2c02      	cmp	r4, #2
9002a050:	d017      	beq.n	9002a082 <__ieee754_atan2f+0xf2>
9002a052:	2c00      	cmp	r4, #0
9002a054:	d0af      	beq.n	90029fb6 <__ieee754_atan2f+0x26>
9002a056:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002a0bc <__ieee754_atan2f+0x12c>
9002a05a:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a05e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002a0c0 <__ieee754_atan2f+0x130>
9002a062:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a066:	e7a6      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a068:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9002a0ac <__ieee754_atan2f+0x11c>
9002a06c:	e7ed      	b.n	9002a04a <__ieee754_atan2f+0xba>
9002a06e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002a0c4 <__ieee754_atan2f+0x134>
9002a072:	e7ea      	b.n	9002a04a <__ieee754_atan2f+0xba>
9002a074:	ee17 3a90 	vmov	r3, s15
9002a078:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002a07c:	ee07 3a90 	vmov	s15, r3
9002a080:	e799      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a082:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002a0bc <__ieee754_atan2f+0x12c>
9002a086:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a08a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002a0c0 <__ieee754_atan2f+0x130>
9002a08e:	ee77 7a67 	vsub.f32	s15, s14, s15
9002a092:	e790      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a094:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002a0c0 <__ieee754_atan2f+0x130>
9002a098:	e78d      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a09a:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002a0c8 <__ieee754_atan2f+0x138>
9002a09e:	e78a      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a0a0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002a0c4 <__ieee754_atan2f+0x134>
9002a0a4:	e787      	b.n	90029fb6 <__ieee754_atan2f+0x26>
9002a0a6:	bf00      	nop
9002a0a8:	c0490fdb 	.word	0xc0490fdb
9002a0ac:	3fc90fdb 	.word	0x3fc90fdb
9002a0b0:	bfc90fdb 	.word	0xbfc90fdb
9002a0b4:	9002ec64 	.word	0x9002ec64
9002a0b8:	9002ec58 	.word	0x9002ec58
9002a0bc:	33bbbd2e 	.word	0x33bbbd2e
9002a0c0:	40490fdb 	.word	0x40490fdb
9002a0c4:	00000000 	.word	0x00000000
9002a0c8:	3f490fdb 	.word	0x3f490fdb

9002a0cc <atanf>:
9002a0cc:	b538      	push	{r3, r4, r5, lr}
9002a0ce:	ee10 5a10 	vmov	r5, s0
9002a0d2:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002a0d6:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002a0da:	eef0 7a40 	vmov.f32	s15, s0
9002a0de:	d30f      	bcc.n	9002a100 <atanf+0x34>
9002a0e0:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002a0e4:	d904      	bls.n	9002a0f0 <atanf+0x24>
9002a0e6:	ee70 7a00 	vadd.f32	s15, s0, s0
9002a0ea:	eeb0 0a67 	vmov.f32	s0, s15
9002a0ee:	bd38      	pop	{r3, r4, r5, pc}
9002a0f0:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002a228 <atanf+0x15c>
9002a0f4:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002a22c <atanf+0x160>
9002a0f8:	2d00      	cmp	r5, #0
9002a0fa:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002a0fe:	e7f4      	b.n	9002a0ea <atanf+0x1e>
9002a100:	4b4b      	ldr	r3, [pc, #300]	@ (9002a230 <atanf+0x164>)
9002a102:	429c      	cmp	r4, r3
9002a104:	d810      	bhi.n	9002a128 <atanf+0x5c>
9002a106:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002a10a:	d20a      	bcs.n	9002a122 <atanf+0x56>
9002a10c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002a234 <atanf+0x168>
9002a110:	ee30 7a07 	vadd.f32	s14, s0, s14
9002a114:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002a118:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002a11c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a120:	dce3      	bgt.n	9002a0ea <atanf+0x1e>
9002a122:	f04f 33ff 	mov.w	r3, #4294967295
9002a126:	e013      	b.n	9002a150 <atanf+0x84>
9002a128:	f000 f8a4 	bl	9002a274 <fabsf>
9002a12c:	4b42      	ldr	r3, [pc, #264]	@ (9002a238 <atanf+0x16c>)
9002a12e:	429c      	cmp	r4, r3
9002a130:	d84f      	bhi.n	9002a1d2 <atanf+0x106>
9002a132:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002a136:	429c      	cmp	r4, r3
9002a138:	d841      	bhi.n	9002a1be <atanf+0xf2>
9002a13a:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002a13e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a142:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a146:	2300      	movs	r3, #0
9002a148:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a14c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a150:	1c5a      	adds	r2, r3, #1
9002a152:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002a156:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002a23c <atanf+0x170>
9002a15a:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002a240 <atanf+0x174>
9002a15e:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002a244 <atanf+0x178>
9002a162:	ee66 6a06 	vmul.f32	s13, s12, s12
9002a166:	eee6 5a87 	vfma.f32	s11, s13, s14
9002a16a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002a248 <atanf+0x17c>
9002a16e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a172:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002a24c <atanf+0x180>
9002a176:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a17a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002a250 <atanf+0x184>
9002a17e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a182:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002a254 <atanf+0x188>
9002a186:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a18a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a258 <atanf+0x18c>
9002a18e:	eea6 5a87 	vfma.f32	s10, s13, s14
9002a192:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002a25c <atanf+0x190>
9002a196:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a19a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002a260 <atanf+0x194>
9002a19e:	eea7 5a26 	vfma.f32	s10, s14, s13
9002a1a2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a264 <atanf+0x198>
9002a1a6:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a1aa:	ee27 7a26 	vmul.f32	s14, s14, s13
9002a1ae:	eea5 7a86 	vfma.f32	s14, s11, s12
9002a1b2:	ee27 7a87 	vmul.f32	s14, s15, s14
9002a1b6:	d121      	bne.n	9002a1fc <atanf+0x130>
9002a1b8:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a1bc:	e795      	b.n	9002a0ea <atanf+0x1e>
9002a1be:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002a1c2:	ee30 7a67 	vsub.f32	s14, s0, s15
9002a1c6:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a1ca:	2301      	movs	r3, #1
9002a1cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a1d0:	e7be      	b.n	9002a150 <atanf+0x84>
9002a1d2:	4b25      	ldr	r3, [pc, #148]	@ (9002a268 <atanf+0x19c>)
9002a1d4:	429c      	cmp	r4, r3
9002a1d6:	d80b      	bhi.n	9002a1f0 <atanf+0x124>
9002a1d8:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002a1dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a1e0:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a1e4:	2302      	movs	r3, #2
9002a1e6:	ee70 6a67 	vsub.f32	s13, s0, s15
9002a1ea:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002a1ee:	e7af      	b.n	9002a150 <atanf+0x84>
9002a1f0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a1f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a1f8:	2303      	movs	r3, #3
9002a1fa:	e7a9      	b.n	9002a150 <atanf+0x84>
9002a1fc:	4a1b      	ldr	r2, [pc, #108]	@ (9002a26c <atanf+0x1a0>)
9002a1fe:	491c      	ldr	r1, [pc, #112]	@ (9002a270 <atanf+0x1a4>)
9002a200:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002a204:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002a208:	edd3 6a00 	vldr	s13, [r3]
9002a20c:	ee37 7a66 	vsub.f32	s14, s14, s13
9002a210:	2d00      	cmp	r5, #0
9002a212:	ee37 7a67 	vsub.f32	s14, s14, s15
9002a216:	edd2 7a00 	vldr	s15, [r2]
9002a21a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a21e:	bfb8      	it	lt
9002a220:	eef1 7a67 	vneglt.f32	s15, s15
9002a224:	e761      	b.n	9002a0ea <atanf+0x1e>
9002a226:	bf00      	nop
9002a228:	bfc90fdb 	.word	0xbfc90fdb
9002a22c:	3fc90fdb 	.word	0x3fc90fdb
9002a230:	3edfffff 	.word	0x3edfffff
9002a234:	7149f2ca 	.word	0x7149f2ca
9002a238:	3f97ffff 	.word	0x3f97ffff
9002a23c:	3c8569d7 	.word	0x3c8569d7
9002a240:	3d4bda59 	.word	0x3d4bda59
9002a244:	bd6ef16b 	.word	0xbd6ef16b
9002a248:	3d886b35 	.word	0x3d886b35
9002a24c:	3dba2e6e 	.word	0x3dba2e6e
9002a250:	3e124925 	.word	0x3e124925
9002a254:	3eaaaaab 	.word	0x3eaaaaab
9002a258:	bd15a221 	.word	0xbd15a221
9002a25c:	bd9d8795 	.word	0xbd9d8795
9002a260:	bde38e38 	.word	0xbde38e38
9002a264:	be4ccccd 	.word	0xbe4ccccd
9002a268:	401bffff 	.word	0x401bffff
9002a26c:	9002ec80 	.word	0x9002ec80
9002a270:	9002ec70 	.word	0x9002ec70

9002a274 <fabsf>:
9002a274:	ee10 3a10 	vmov	r3, s0
9002a278:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002a27c:	ee00 3a10 	vmov	s0, r3
9002a280:	4770      	bx	lr

9002a282 <abort>:
9002a282:	b508      	push	{r3, lr}
9002a284:	2006      	movs	r0, #6
9002a286:	f000 fae1 	bl	9002a84c <raise>
9002a28a:	2001      	movs	r0, #1
9002a28c:	f7da f8dc 	bl	90004448 <_exit>

9002a290 <__assert_func>:
9002a290:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002a292:	4614      	mov	r4, r2
9002a294:	461a      	mov	r2, r3
9002a296:	4b09      	ldr	r3, [pc, #36]	@ (9002a2bc <__assert_func+0x2c>)
9002a298:	681b      	ldr	r3, [r3, #0]
9002a29a:	4605      	mov	r5, r0
9002a29c:	68d8      	ldr	r0, [r3, #12]
9002a29e:	b954      	cbnz	r4, 9002a2b6 <__assert_func+0x26>
9002a2a0:	4b07      	ldr	r3, [pc, #28]	@ (9002a2c0 <__assert_func+0x30>)
9002a2a2:	461c      	mov	r4, r3
9002a2a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002a2a8:	9100      	str	r1, [sp, #0]
9002a2aa:	462b      	mov	r3, r5
9002a2ac:	4905      	ldr	r1, [pc, #20]	@ (9002a2c4 <__assert_func+0x34>)
9002a2ae:	f000 f983 	bl	9002a5b8 <fiprintf>
9002a2b2:	f7ff ffe6 	bl	9002a282 <abort>
9002a2b6:	4b04      	ldr	r3, [pc, #16]	@ (9002a2c8 <__assert_func+0x38>)
9002a2b8:	e7f4      	b.n	9002a2a4 <__assert_func+0x14>
9002a2ba:	bf00      	nop
9002a2bc:	24000114 	.word	0x24000114
9002a2c0:	9002eccb 	.word	0x9002eccb
9002a2c4:	9002ec9d 	.word	0x9002ec9d
9002a2c8:	9002ec90 	.word	0x9002ec90

9002a2cc <atexit>:
9002a2cc:	2300      	movs	r3, #0
9002a2ce:	4601      	mov	r1, r0
9002a2d0:	461a      	mov	r2, r3
9002a2d2:	4618      	mov	r0, r3
9002a2d4:	f000 bb68 	b.w	9002a9a8 <__register_exitproc>

9002a2d8 <malloc>:
9002a2d8:	4b02      	ldr	r3, [pc, #8]	@ (9002a2e4 <malloc+0xc>)
9002a2da:	4601      	mov	r1, r0
9002a2dc:	6818      	ldr	r0, [r3, #0]
9002a2de:	f000 b82d 	b.w	9002a33c <_malloc_r>
9002a2e2:	bf00      	nop
9002a2e4:	24000114 	.word	0x24000114

9002a2e8 <free>:
9002a2e8:	4b02      	ldr	r3, [pc, #8]	@ (9002a2f4 <free+0xc>)
9002a2ea:	4601      	mov	r1, r0
9002a2ec:	6818      	ldr	r0, [r3, #0]
9002a2ee:	f000 bbb7 	b.w	9002aa60 <_free_r>
9002a2f2:	bf00      	nop
9002a2f4:	24000114 	.word	0x24000114

9002a2f8 <sbrk_aligned>:
9002a2f8:	b570      	push	{r4, r5, r6, lr}
9002a2fa:	4e0f      	ldr	r6, [pc, #60]	@ (9002a338 <sbrk_aligned+0x40>)
9002a2fc:	460c      	mov	r4, r1
9002a2fe:	6831      	ldr	r1, [r6, #0]
9002a300:	4605      	mov	r5, r0
9002a302:	b911      	cbnz	r1, 9002a30a <sbrk_aligned+0x12>
9002a304:	f000 faf2 	bl	9002a8ec <_sbrk_r>
9002a308:	6030      	str	r0, [r6, #0]
9002a30a:	4621      	mov	r1, r4
9002a30c:	4628      	mov	r0, r5
9002a30e:	f000 faed 	bl	9002a8ec <_sbrk_r>
9002a312:	1c43      	adds	r3, r0, #1
9002a314:	d103      	bne.n	9002a31e <sbrk_aligned+0x26>
9002a316:	f04f 34ff 	mov.w	r4, #4294967295
9002a31a:	4620      	mov	r0, r4
9002a31c:	bd70      	pop	{r4, r5, r6, pc}
9002a31e:	1cc4      	adds	r4, r0, #3
9002a320:	f024 0403 	bic.w	r4, r4, #3
9002a324:	42a0      	cmp	r0, r4
9002a326:	d0f8      	beq.n	9002a31a <sbrk_aligned+0x22>
9002a328:	1a21      	subs	r1, r4, r0
9002a32a:	4628      	mov	r0, r5
9002a32c:	f000 fade 	bl	9002a8ec <_sbrk_r>
9002a330:	3001      	adds	r0, #1
9002a332:	d1f2      	bne.n	9002a31a <sbrk_aligned+0x22>
9002a334:	e7ef      	b.n	9002a316 <sbrk_aligned+0x1e>
9002a336:	bf00      	nop
9002a338:	24023f18 	.word	0x24023f18

9002a33c <_malloc_r>:
9002a33c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a340:	1ccd      	adds	r5, r1, #3
9002a342:	f025 0503 	bic.w	r5, r5, #3
9002a346:	3508      	adds	r5, #8
9002a348:	2d0c      	cmp	r5, #12
9002a34a:	bf38      	it	cc
9002a34c:	250c      	movcc	r5, #12
9002a34e:	2d00      	cmp	r5, #0
9002a350:	4606      	mov	r6, r0
9002a352:	db01      	blt.n	9002a358 <_malloc_r+0x1c>
9002a354:	42a9      	cmp	r1, r5
9002a356:	d904      	bls.n	9002a362 <_malloc_r+0x26>
9002a358:	230c      	movs	r3, #12
9002a35a:	6033      	str	r3, [r6, #0]
9002a35c:	2000      	movs	r0, #0
9002a35e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a362:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002a438 <_malloc_r+0xfc>
9002a366:	f000 f869 	bl	9002a43c <__malloc_lock>
9002a36a:	f8d8 3000 	ldr.w	r3, [r8]
9002a36e:	461c      	mov	r4, r3
9002a370:	bb44      	cbnz	r4, 9002a3c4 <_malloc_r+0x88>
9002a372:	4629      	mov	r1, r5
9002a374:	4630      	mov	r0, r6
9002a376:	f7ff ffbf 	bl	9002a2f8 <sbrk_aligned>
9002a37a:	1c43      	adds	r3, r0, #1
9002a37c:	4604      	mov	r4, r0
9002a37e:	d158      	bne.n	9002a432 <_malloc_r+0xf6>
9002a380:	f8d8 4000 	ldr.w	r4, [r8]
9002a384:	4627      	mov	r7, r4
9002a386:	2f00      	cmp	r7, #0
9002a388:	d143      	bne.n	9002a412 <_malloc_r+0xd6>
9002a38a:	2c00      	cmp	r4, #0
9002a38c:	d04b      	beq.n	9002a426 <_malloc_r+0xea>
9002a38e:	6823      	ldr	r3, [r4, #0]
9002a390:	4639      	mov	r1, r7
9002a392:	4630      	mov	r0, r6
9002a394:	eb04 0903 	add.w	r9, r4, r3
9002a398:	f000 faa8 	bl	9002a8ec <_sbrk_r>
9002a39c:	4581      	cmp	r9, r0
9002a39e:	d142      	bne.n	9002a426 <_malloc_r+0xea>
9002a3a0:	6821      	ldr	r1, [r4, #0]
9002a3a2:	1a6d      	subs	r5, r5, r1
9002a3a4:	4629      	mov	r1, r5
9002a3a6:	4630      	mov	r0, r6
9002a3a8:	f7ff ffa6 	bl	9002a2f8 <sbrk_aligned>
9002a3ac:	3001      	adds	r0, #1
9002a3ae:	d03a      	beq.n	9002a426 <_malloc_r+0xea>
9002a3b0:	6823      	ldr	r3, [r4, #0]
9002a3b2:	442b      	add	r3, r5
9002a3b4:	6023      	str	r3, [r4, #0]
9002a3b6:	f8d8 3000 	ldr.w	r3, [r8]
9002a3ba:	685a      	ldr	r2, [r3, #4]
9002a3bc:	bb62      	cbnz	r2, 9002a418 <_malloc_r+0xdc>
9002a3be:	f8c8 7000 	str.w	r7, [r8]
9002a3c2:	e00f      	b.n	9002a3e4 <_malloc_r+0xa8>
9002a3c4:	6822      	ldr	r2, [r4, #0]
9002a3c6:	1b52      	subs	r2, r2, r5
9002a3c8:	d420      	bmi.n	9002a40c <_malloc_r+0xd0>
9002a3ca:	2a0b      	cmp	r2, #11
9002a3cc:	d917      	bls.n	9002a3fe <_malloc_r+0xc2>
9002a3ce:	1961      	adds	r1, r4, r5
9002a3d0:	42a3      	cmp	r3, r4
9002a3d2:	6025      	str	r5, [r4, #0]
9002a3d4:	bf18      	it	ne
9002a3d6:	6059      	strne	r1, [r3, #4]
9002a3d8:	6863      	ldr	r3, [r4, #4]
9002a3da:	bf08      	it	eq
9002a3dc:	f8c8 1000 	streq.w	r1, [r8]
9002a3e0:	5162      	str	r2, [r4, r5]
9002a3e2:	604b      	str	r3, [r1, #4]
9002a3e4:	4630      	mov	r0, r6
9002a3e6:	f000 f82f 	bl	9002a448 <__malloc_unlock>
9002a3ea:	f104 000b 	add.w	r0, r4, #11
9002a3ee:	1d23      	adds	r3, r4, #4
9002a3f0:	f020 0007 	bic.w	r0, r0, #7
9002a3f4:	1ac2      	subs	r2, r0, r3
9002a3f6:	bf1c      	itt	ne
9002a3f8:	1a1b      	subne	r3, r3, r0
9002a3fa:	50a3      	strne	r3, [r4, r2]
9002a3fc:	e7af      	b.n	9002a35e <_malloc_r+0x22>
9002a3fe:	6862      	ldr	r2, [r4, #4]
9002a400:	42a3      	cmp	r3, r4
9002a402:	bf0c      	ite	eq
9002a404:	f8c8 2000 	streq.w	r2, [r8]
9002a408:	605a      	strne	r2, [r3, #4]
9002a40a:	e7eb      	b.n	9002a3e4 <_malloc_r+0xa8>
9002a40c:	4623      	mov	r3, r4
9002a40e:	6864      	ldr	r4, [r4, #4]
9002a410:	e7ae      	b.n	9002a370 <_malloc_r+0x34>
9002a412:	463c      	mov	r4, r7
9002a414:	687f      	ldr	r7, [r7, #4]
9002a416:	e7b6      	b.n	9002a386 <_malloc_r+0x4a>
9002a418:	461a      	mov	r2, r3
9002a41a:	685b      	ldr	r3, [r3, #4]
9002a41c:	42a3      	cmp	r3, r4
9002a41e:	d1fb      	bne.n	9002a418 <_malloc_r+0xdc>
9002a420:	2300      	movs	r3, #0
9002a422:	6053      	str	r3, [r2, #4]
9002a424:	e7de      	b.n	9002a3e4 <_malloc_r+0xa8>
9002a426:	230c      	movs	r3, #12
9002a428:	6033      	str	r3, [r6, #0]
9002a42a:	4630      	mov	r0, r6
9002a42c:	f000 f80c 	bl	9002a448 <__malloc_unlock>
9002a430:	e794      	b.n	9002a35c <_malloc_r+0x20>
9002a432:	6005      	str	r5, [r0, #0]
9002a434:	e7d6      	b.n	9002a3e4 <_malloc_r+0xa8>
9002a436:	bf00      	nop
9002a438:	24023f1c 	.word	0x24023f1c

9002a43c <__malloc_lock>:
9002a43c:	4801      	ldr	r0, [pc, #4]	@ (9002a444 <__malloc_lock+0x8>)
9002a43e:	f000 baa2 	b.w	9002a986 <__retarget_lock_acquire_recursive>
9002a442:	bf00      	nop
9002a444:	24024060 	.word	0x24024060

9002a448 <__malloc_unlock>:
9002a448:	4801      	ldr	r0, [pc, #4]	@ (9002a450 <__malloc_unlock+0x8>)
9002a44a:	f000 ba9d 	b.w	9002a988 <__retarget_lock_release_recursive>
9002a44e:	bf00      	nop
9002a450:	24024060 	.word	0x24024060

9002a454 <__cxa_atexit>:
9002a454:	b510      	push	{r4, lr}
9002a456:	4604      	mov	r4, r0
9002a458:	4804      	ldr	r0, [pc, #16]	@ (9002a46c <__cxa_atexit+0x18>)
9002a45a:	4613      	mov	r3, r2
9002a45c:	b120      	cbz	r0, 9002a468 <__cxa_atexit+0x14>
9002a45e:	460a      	mov	r2, r1
9002a460:	2002      	movs	r0, #2
9002a462:	4621      	mov	r1, r4
9002a464:	f000 faa0 	bl	9002a9a8 <__register_exitproc>
9002a468:	bd10      	pop	{r4, pc}
9002a46a:	bf00      	nop
9002a46c:	9002a9a9 	.word	0x9002a9a9

9002a470 <std>:
9002a470:	2300      	movs	r3, #0
9002a472:	b510      	push	{r4, lr}
9002a474:	4604      	mov	r4, r0
9002a476:	e9c0 3300 	strd	r3, r3, [r0]
9002a47a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002a47e:	6083      	str	r3, [r0, #8]
9002a480:	8181      	strh	r1, [r0, #12]
9002a482:	6643      	str	r3, [r0, #100]	@ 0x64
9002a484:	81c2      	strh	r2, [r0, #14]
9002a486:	6183      	str	r3, [r0, #24]
9002a488:	4619      	mov	r1, r3
9002a48a:	2208      	movs	r2, #8
9002a48c:	305c      	adds	r0, #92	@ 0x5c
9002a48e:	f000 f99b 	bl	9002a7c8 <memset>
9002a492:	4b0d      	ldr	r3, [pc, #52]	@ (9002a4c8 <std+0x58>)
9002a494:	6263      	str	r3, [r4, #36]	@ 0x24
9002a496:	4b0d      	ldr	r3, [pc, #52]	@ (9002a4cc <std+0x5c>)
9002a498:	62a3      	str	r3, [r4, #40]	@ 0x28
9002a49a:	4b0d      	ldr	r3, [pc, #52]	@ (9002a4d0 <std+0x60>)
9002a49c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002a49e:	4b0d      	ldr	r3, [pc, #52]	@ (9002a4d4 <std+0x64>)
9002a4a0:	6323      	str	r3, [r4, #48]	@ 0x30
9002a4a2:	4b0d      	ldr	r3, [pc, #52]	@ (9002a4d8 <std+0x68>)
9002a4a4:	6224      	str	r4, [r4, #32]
9002a4a6:	429c      	cmp	r4, r3
9002a4a8:	d006      	beq.n	9002a4b8 <std+0x48>
9002a4aa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002a4ae:	4294      	cmp	r4, r2
9002a4b0:	d002      	beq.n	9002a4b8 <std+0x48>
9002a4b2:	33d0      	adds	r3, #208	@ 0xd0
9002a4b4:	429c      	cmp	r4, r3
9002a4b6:	d105      	bne.n	9002a4c4 <std+0x54>
9002a4b8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002a4bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a4c0:	f000 ba60 	b.w	9002a984 <__retarget_lock_init_recursive>
9002a4c4:	bd10      	pop	{r4, pc}
9002a4c6:	bf00      	nop
9002a4c8:	9002a619 	.word	0x9002a619
9002a4cc:	9002a63b 	.word	0x9002a63b
9002a4d0:	9002a673 	.word	0x9002a673
9002a4d4:	9002a697 	.word	0x9002a697
9002a4d8:	24023f20 	.word	0x24023f20

9002a4dc <stdio_exit_handler>:
9002a4dc:	4a02      	ldr	r2, [pc, #8]	@ (9002a4e8 <stdio_exit_handler+0xc>)
9002a4de:	4903      	ldr	r1, [pc, #12]	@ (9002a4ec <stdio_exit_handler+0x10>)
9002a4e0:	4803      	ldr	r0, [pc, #12]	@ (9002a4f0 <stdio_exit_handler+0x14>)
9002a4e2:	f000 b87b 	b.w	9002a5dc <_fwalk_sglue>
9002a4e6:	bf00      	nop
9002a4e8:	24000108 	.word	0x24000108
9002a4ec:	9002b19d 	.word	0x9002b19d
9002a4f0:	24000118 	.word	0x24000118

9002a4f4 <cleanup_stdio>:
9002a4f4:	6841      	ldr	r1, [r0, #4]
9002a4f6:	4b0c      	ldr	r3, [pc, #48]	@ (9002a528 <cleanup_stdio+0x34>)
9002a4f8:	4299      	cmp	r1, r3
9002a4fa:	b510      	push	{r4, lr}
9002a4fc:	4604      	mov	r4, r0
9002a4fe:	d001      	beq.n	9002a504 <cleanup_stdio+0x10>
9002a500:	f000 fe4c 	bl	9002b19c <_fflush_r>
9002a504:	68a1      	ldr	r1, [r4, #8]
9002a506:	4b09      	ldr	r3, [pc, #36]	@ (9002a52c <cleanup_stdio+0x38>)
9002a508:	4299      	cmp	r1, r3
9002a50a:	d002      	beq.n	9002a512 <cleanup_stdio+0x1e>
9002a50c:	4620      	mov	r0, r4
9002a50e:	f000 fe45 	bl	9002b19c <_fflush_r>
9002a512:	68e1      	ldr	r1, [r4, #12]
9002a514:	4b06      	ldr	r3, [pc, #24]	@ (9002a530 <cleanup_stdio+0x3c>)
9002a516:	4299      	cmp	r1, r3
9002a518:	d004      	beq.n	9002a524 <cleanup_stdio+0x30>
9002a51a:	4620      	mov	r0, r4
9002a51c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a520:	f000 be3c 	b.w	9002b19c <_fflush_r>
9002a524:	bd10      	pop	{r4, pc}
9002a526:	bf00      	nop
9002a528:	24023f20 	.word	0x24023f20
9002a52c:	24023f88 	.word	0x24023f88
9002a530:	24023ff0 	.word	0x24023ff0

9002a534 <global_stdio_init.part.0>:
9002a534:	b510      	push	{r4, lr}
9002a536:	4b0b      	ldr	r3, [pc, #44]	@ (9002a564 <global_stdio_init.part.0+0x30>)
9002a538:	4c0b      	ldr	r4, [pc, #44]	@ (9002a568 <global_stdio_init.part.0+0x34>)
9002a53a:	4a0c      	ldr	r2, [pc, #48]	@ (9002a56c <global_stdio_init.part.0+0x38>)
9002a53c:	601a      	str	r2, [r3, #0]
9002a53e:	4620      	mov	r0, r4
9002a540:	2200      	movs	r2, #0
9002a542:	2104      	movs	r1, #4
9002a544:	f7ff ff94 	bl	9002a470 <std>
9002a548:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002a54c:	2201      	movs	r2, #1
9002a54e:	2109      	movs	r1, #9
9002a550:	f7ff ff8e 	bl	9002a470 <std>
9002a554:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002a558:	2202      	movs	r2, #2
9002a55a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a55e:	2112      	movs	r1, #18
9002a560:	f7ff bf86 	b.w	9002a470 <std>
9002a564:	24024058 	.word	0x24024058
9002a568:	24023f20 	.word	0x24023f20
9002a56c:	9002a4dd 	.word	0x9002a4dd

9002a570 <__sfp_lock_acquire>:
9002a570:	4801      	ldr	r0, [pc, #4]	@ (9002a578 <__sfp_lock_acquire+0x8>)
9002a572:	f000 ba08 	b.w	9002a986 <__retarget_lock_acquire_recursive>
9002a576:	bf00      	nop
9002a578:	24024062 	.word	0x24024062

9002a57c <__sfp_lock_release>:
9002a57c:	4801      	ldr	r0, [pc, #4]	@ (9002a584 <__sfp_lock_release+0x8>)
9002a57e:	f000 ba03 	b.w	9002a988 <__retarget_lock_release_recursive>
9002a582:	bf00      	nop
9002a584:	24024062 	.word	0x24024062

9002a588 <__sinit>:
9002a588:	b510      	push	{r4, lr}
9002a58a:	4604      	mov	r4, r0
9002a58c:	f7ff fff0 	bl	9002a570 <__sfp_lock_acquire>
9002a590:	6a23      	ldr	r3, [r4, #32]
9002a592:	b11b      	cbz	r3, 9002a59c <__sinit+0x14>
9002a594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a598:	f7ff bff0 	b.w	9002a57c <__sfp_lock_release>
9002a59c:	4b04      	ldr	r3, [pc, #16]	@ (9002a5b0 <__sinit+0x28>)
9002a59e:	6223      	str	r3, [r4, #32]
9002a5a0:	4b04      	ldr	r3, [pc, #16]	@ (9002a5b4 <__sinit+0x2c>)
9002a5a2:	681b      	ldr	r3, [r3, #0]
9002a5a4:	2b00      	cmp	r3, #0
9002a5a6:	d1f5      	bne.n	9002a594 <__sinit+0xc>
9002a5a8:	f7ff ffc4 	bl	9002a534 <global_stdio_init.part.0>
9002a5ac:	e7f2      	b.n	9002a594 <__sinit+0xc>
9002a5ae:	bf00      	nop
9002a5b0:	9002a4f5 	.word	0x9002a4f5
9002a5b4:	24024058 	.word	0x24024058

9002a5b8 <fiprintf>:
9002a5b8:	b40e      	push	{r1, r2, r3}
9002a5ba:	b503      	push	{r0, r1, lr}
9002a5bc:	4601      	mov	r1, r0
9002a5be:	ab03      	add	r3, sp, #12
9002a5c0:	4805      	ldr	r0, [pc, #20]	@ (9002a5d8 <fiprintf+0x20>)
9002a5c2:	f853 2b04 	ldr.w	r2, [r3], #4
9002a5c6:	6800      	ldr	r0, [r0, #0]
9002a5c8:	9301      	str	r3, [sp, #4]
9002a5ca:	f000 fabd 	bl	9002ab48 <_vfiprintf_r>
9002a5ce:	b002      	add	sp, #8
9002a5d0:	f85d eb04 	ldr.w	lr, [sp], #4
9002a5d4:	b003      	add	sp, #12
9002a5d6:	4770      	bx	lr
9002a5d8:	24000114 	.word	0x24000114

9002a5dc <_fwalk_sglue>:
9002a5dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a5e0:	4607      	mov	r7, r0
9002a5e2:	4688      	mov	r8, r1
9002a5e4:	4614      	mov	r4, r2
9002a5e6:	2600      	movs	r6, #0
9002a5e8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002a5ec:	f1b9 0901 	subs.w	r9, r9, #1
9002a5f0:	d505      	bpl.n	9002a5fe <_fwalk_sglue+0x22>
9002a5f2:	6824      	ldr	r4, [r4, #0]
9002a5f4:	2c00      	cmp	r4, #0
9002a5f6:	d1f7      	bne.n	9002a5e8 <_fwalk_sglue+0xc>
9002a5f8:	4630      	mov	r0, r6
9002a5fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a5fe:	89ab      	ldrh	r3, [r5, #12]
9002a600:	2b01      	cmp	r3, #1
9002a602:	d907      	bls.n	9002a614 <_fwalk_sglue+0x38>
9002a604:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002a608:	3301      	adds	r3, #1
9002a60a:	d003      	beq.n	9002a614 <_fwalk_sglue+0x38>
9002a60c:	4629      	mov	r1, r5
9002a60e:	4638      	mov	r0, r7
9002a610:	47c0      	blx	r8
9002a612:	4306      	orrs	r6, r0
9002a614:	3568      	adds	r5, #104	@ 0x68
9002a616:	e7e9      	b.n	9002a5ec <_fwalk_sglue+0x10>

9002a618 <__sread>:
9002a618:	b510      	push	{r4, lr}
9002a61a:	460c      	mov	r4, r1
9002a61c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a620:	f000 f93e 	bl	9002a8a0 <_read_r>
9002a624:	2800      	cmp	r0, #0
9002a626:	bfab      	itete	ge
9002a628:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002a62a:	89a3      	ldrhlt	r3, [r4, #12]
9002a62c:	181b      	addge	r3, r3, r0
9002a62e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002a632:	bfac      	ite	ge
9002a634:	6563      	strge	r3, [r4, #84]	@ 0x54
9002a636:	81a3      	strhlt	r3, [r4, #12]
9002a638:	bd10      	pop	{r4, pc}

9002a63a <__swrite>:
9002a63a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a63e:	461f      	mov	r7, r3
9002a640:	898b      	ldrh	r3, [r1, #12]
9002a642:	05db      	lsls	r3, r3, #23
9002a644:	4605      	mov	r5, r0
9002a646:	460c      	mov	r4, r1
9002a648:	4616      	mov	r6, r2
9002a64a:	d505      	bpl.n	9002a658 <__swrite+0x1e>
9002a64c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a650:	2302      	movs	r3, #2
9002a652:	2200      	movs	r2, #0
9002a654:	f000 f912 	bl	9002a87c <_lseek_r>
9002a658:	89a3      	ldrh	r3, [r4, #12]
9002a65a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a65e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002a662:	81a3      	strh	r3, [r4, #12]
9002a664:	4632      	mov	r2, r6
9002a666:	463b      	mov	r3, r7
9002a668:	4628      	mov	r0, r5
9002a66a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002a66e:	f000 b94d 	b.w	9002a90c <_write_r>

9002a672 <__sseek>:
9002a672:	b510      	push	{r4, lr}
9002a674:	460c      	mov	r4, r1
9002a676:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a67a:	f000 f8ff 	bl	9002a87c <_lseek_r>
9002a67e:	1c43      	adds	r3, r0, #1
9002a680:	89a3      	ldrh	r3, [r4, #12]
9002a682:	bf15      	itete	ne
9002a684:	6560      	strne	r0, [r4, #84]	@ 0x54
9002a686:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002a68a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002a68e:	81a3      	strheq	r3, [r4, #12]
9002a690:	bf18      	it	ne
9002a692:	81a3      	strhne	r3, [r4, #12]
9002a694:	bd10      	pop	{r4, pc}

9002a696 <__sclose>:
9002a696:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a69a:	f000 b8df 	b.w	9002a85c <_close_r>

9002a69e <__swbuf_r>:
9002a69e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a6a0:	460e      	mov	r6, r1
9002a6a2:	4614      	mov	r4, r2
9002a6a4:	4605      	mov	r5, r0
9002a6a6:	b118      	cbz	r0, 9002a6b0 <__swbuf_r+0x12>
9002a6a8:	6a03      	ldr	r3, [r0, #32]
9002a6aa:	b90b      	cbnz	r3, 9002a6b0 <__swbuf_r+0x12>
9002a6ac:	f7ff ff6c 	bl	9002a588 <__sinit>
9002a6b0:	69a3      	ldr	r3, [r4, #24]
9002a6b2:	60a3      	str	r3, [r4, #8]
9002a6b4:	89a3      	ldrh	r3, [r4, #12]
9002a6b6:	071a      	lsls	r2, r3, #28
9002a6b8:	d501      	bpl.n	9002a6be <__swbuf_r+0x20>
9002a6ba:	6923      	ldr	r3, [r4, #16]
9002a6bc:	b943      	cbnz	r3, 9002a6d0 <__swbuf_r+0x32>
9002a6be:	4621      	mov	r1, r4
9002a6c0:	4628      	mov	r0, r5
9002a6c2:	f000 f82b 	bl	9002a71c <__swsetup_r>
9002a6c6:	b118      	cbz	r0, 9002a6d0 <__swbuf_r+0x32>
9002a6c8:	f04f 37ff 	mov.w	r7, #4294967295
9002a6cc:	4638      	mov	r0, r7
9002a6ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002a6d0:	6823      	ldr	r3, [r4, #0]
9002a6d2:	6922      	ldr	r2, [r4, #16]
9002a6d4:	1a98      	subs	r0, r3, r2
9002a6d6:	6963      	ldr	r3, [r4, #20]
9002a6d8:	b2f6      	uxtb	r6, r6
9002a6da:	4283      	cmp	r3, r0
9002a6dc:	4637      	mov	r7, r6
9002a6de:	dc05      	bgt.n	9002a6ec <__swbuf_r+0x4e>
9002a6e0:	4621      	mov	r1, r4
9002a6e2:	4628      	mov	r0, r5
9002a6e4:	f000 fd5a 	bl	9002b19c <_fflush_r>
9002a6e8:	2800      	cmp	r0, #0
9002a6ea:	d1ed      	bne.n	9002a6c8 <__swbuf_r+0x2a>
9002a6ec:	68a3      	ldr	r3, [r4, #8]
9002a6ee:	3b01      	subs	r3, #1
9002a6f0:	60a3      	str	r3, [r4, #8]
9002a6f2:	6823      	ldr	r3, [r4, #0]
9002a6f4:	1c5a      	adds	r2, r3, #1
9002a6f6:	6022      	str	r2, [r4, #0]
9002a6f8:	701e      	strb	r6, [r3, #0]
9002a6fa:	6962      	ldr	r2, [r4, #20]
9002a6fc:	1c43      	adds	r3, r0, #1
9002a6fe:	429a      	cmp	r2, r3
9002a700:	d004      	beq.n	9002a70c <__swbuf_r+0x6e>
9002a702:	89a3      	ldrh	r3, [r4, #12]
9002a704:	07db      	lsls	r3, r3, #31
9002a706:	d5e1      	bpl.n	9002a6cc <__swbuf_r+0x2e>
9002a708:	2e0a      	cmp	r6, #10
9002a70a:	d1df      	bne.n	9002a6cc <__swbuf_r+0x2e>
9002a70c:	4621      	mov	r1, r4
9002a70e:	4628      	mov	r0, r5
9002a710:	f000 fd44 	bl	9002b19c <_fflush_r>
9002a714:	2800      	cmp	r0, #0
9002a716:	d0d9      	beq.n	9002a6cc <__swbuf_r+0x2e>
9002a718:	e7d6      	b.n	9002a6c8 <__swbuf_r+0x2a>
	...

9002a71c <__swsetup_r>:
9002a71c:	b538      	push	{r3, r4, r5, lr}
9002a71e:	4b29      	ldr	r3, [pc, #164]	@ (9002a7c4 <__swsetup_r+0xa8>)
9002a720:	4605      	mov	r5, r0
9002a722:	6818      	ldr	r0, [r3, #0]
9002a724:	460c      	mov	r4, r1
9002a726:	b118      	cbz	r0, 9002a730 <__swsetup_r+0x14>
9002a728:	6a03      	ldr	r3, [r0, #32]
9002a72a:	b90b      	cbnz	r3, 9002a730 <__swsetup_r+0x14>
9002a72c:	f7ff ff2c 	bl	9002a588 <__sinit>
9002a730:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a734:	0719      	lsls	r1, r3, #28
9002a736:	d422      	bmi.n	9002a77e <__swsetup_r+0x62>
9002a738:	06da      	lsls	r2, r3, #27
9002a73a:	d407      	bmi.n	9002a74c <__swsetup_r+0x30>
9002a73c:	2209      	movs	r2, #9
9002a73e:	602a      	str	r2, [r5, #0]
9002a740:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a744:	81a3      	strh	r3, [r4, #12]
9002a746:	f04f 30ff 	mov.w	r0, #4294967295
9002a74a:	e033      	b.n	9002a7b4 <__swsetup_r+0x98>
9002a74c:	0758      	lsls	r0, r3, #29
9002a74e:	d512      	bpl.n	9002a776 <__swsetup_r+0x5a>
9002a750:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a752:	b141      	cbz	r1, 9002a766 <__swsetup_r+0x4a>
9002a754:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a758:	4299      	cmp	r1, r3
9002a75a:	d002      	beq.n	9002a762 <__swsetup_r+0x46>
9002a75c:	4628      	mov	r0, r5
9002a75e:	f000 f97f 	bl	9002aa60 <_free_r>
9002a762:	2300      	movs	r3, #0
9002a764:	6363      	str	r3, [r4, #52]	@ 0x34
9002a766:	89a3      	ldrh	r3, [r4, #12]
9002a768:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002a76c:	81a3      	strh	r3, [r4, #12]
9002a76e:	2300      	movs	r3, #0
9002a770:	6063      	str	r3, [r4, #4]
9002a772:	6923      	ldr	r3, [r4, #16]
9002a774:	6023      	str	r3, [r4, #0]
9002a776:	89a3      	ldrh	r3, [r4, #12]
9002a778:	f043 0308 	orr.w	r3, r3, #8
9002a77c:	81a3      	strh	r3, [r4, #12]
9002a77e:	6923      	ldr	r3, [r4, #16]
9002a780:	b94b      	cbnz	r3, 9002a796 <__swsetup_r+0x7a>
9002a782:	89a3      	ldrh	r3, [r4, #12]
9002a784:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002a788:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002a78c:	d003      	beq.n	9002a796 <__swsetup_r+0x7a>
9002a78e:	4621      	mov	r1, r4
9002a790:	4628      	mov	r0, r5
9002a792:	f000 fd51 	bl	9002b238 <__smakebuf_r>
9002a796:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a79a:	f013 0201 	ands.w	r2, r3, #1
9002a79e:	d00a      	beq.n	9002a7b6 <__swsetup_r+0x9a>
9002a7a0:	2200      	movs	r2, #0
9002a7a2:	60a2      	str	r2, [r4, #8]
9002a7a4:	6962      	ldr	r2, [r4, #20]
9002a7a6:	4252      	negs	r2, r2
9002a7a8:	61a2      	str	r2, [r4, #24]
9002a7aa:	6922      	ldr	r2, [r4, #16]
9002a7ac:	b942      	cbnz	r2, 9002a7c0 <__swsetup_r+0xa4>
9002a7ae:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002a7b2:	d1c5      	bne.n	9002a740 <__swsetup_r+0x24>
9002a7b4:	bd38      	pop	{r3, r4, r5, pc}
9002a7b6:	0799      	lsls	r1, r3, #30
9002a7b8:	bf58      	it	pl
9002a7ba:	6962      	ldrpl	r2, [r4, #20]
9002a7bc:	60a2      	str	r2, [r4, #8]
9002a7be:	e7f4      	b.n	9002a7aa <__swsetup_r+0x8e>
9002a7c0:	2000      	movs	r0, #0
9002a7c2:	e7f7      	b.n	9002a7b4 <__swsetup_r+0x98>
9002a7c4:	24000114 	.word	0x24000114

9002a7c8 <memset>:
9002a7c8:	4402      	add	r2, r0
9002a7ca:	4603      	mov	r3, r0
9002a7cc:	4293      	cmp	r3, r2
9002a7ce:	d100      	bne.n	9002a7d2 <memset+0xa>
9002a7d0:	4770      	bx	lr
9002a7d2:	f803 1b01 	strb.w	r1, [r3], #1
9002a7d6:	e7f9      	b.n	9002a7cc <memset+0x4>

9002a7d8 <strncmp>:
9002a7d8:	b510      	push	{r4, lr}
9002a7da:	b16a      	cbz	r2, 9002a7f8 <strncmp+0x20>
9002a7dc:	3901      	subs	r1, #1
9002a7de:	1884      	adds	r4, r0, r2
9002a7e0:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a7e4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002a7e8:	429a      	cmp	r2, r3
9002a7ea:	d103      	bne.n	9002a7f4 <strncmp+0x1c>
9002a7ec:	42a0      	cmp	r0, r4
9002a7ee:	d001      	beq.n	9002a7f4 <strncmp+0x1c>
9002a7f0:	2a00      	cmp	r2, #0
9002a7f2:	d1f5      	bne.n	9002a7e0 <strncmp+0x8>
9002a7f4:	1ad0      	subs	r0, r2, r3
9002a7f6:	bd10      	pop	{r4, pc}
9002a7f8:	4610      	mov	r0, r2
9002a7fa:	e7fc      	b.n	9002a7f6 <strncmp+0x1e>

9002a7fc <_raise_r>:
9002a7fc:	291f      	cmp	r1, #31
9002a7fe:	b538      	push	{r3, r4, r5, lr}
9002a800:	4605      	mov	r5, r0
9002a802:	460c      	mov	r4, r1
9002a804:	d904      	bls.n	9002a810 <_raise_r+0x14>
9002a806:	2316      	movs	r3, #22
9002a808:	6003      	str	r3, [r0, #0]
9002a80a:	f04f 30ff 	mov.w	r0, #4294967295
9002a80e:	bd38      	pop	{r3, r4, r5, pc}
9002a810:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002a812:	b112      	cbz	r2, 9002a81a <_raise_r+0x1e>
9002a814:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002a818:	b94b      	cbnz	r3, 9002a82e <_raise_r+0x32>
9002a81a:	4628      	mov	r0, r5
9002a81c:	f000 f864 	bl	9002a8e8 <_getpid_r>
9002a820:	4622      	mov	r2, r4
9002a822:	4601      	mov	r1, r0
9002a824:	4628      	mov	r0, r5
9002a826:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a82a:	f000 b84b 	b.w	9002a8c4 <_kill_r>
9002a82e:	2b01      	cmp	r3, #1
9002a830:	d00a      	beq.n	9002a848 <_raise_r+0x4c>
9002a832:	1c59      	adds	r1, r3, #1
9002a834:	d103      	bne.n	9002a83e <_raise_r+0x42>
9002a836:	2316      	movs	r3, #22
9002a838:	6003      	str	r3, [r0, #0]
9002a83a:	2001      	movs	r0, #1
9002a83c:	e7e7      	b.n	9002a80e <_raise_r+0x12>
9002a83e:	2100      	movs	r1, #0
9002a840:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002a844:	4620      	mov	r0, r4
9002a846:	4798      	blx	r3
9002a848:	2000      	movs	r0, #0
9002a84a:	e7e0      	b.n	9002a80e <_raise_r+0x12>

9002a84c <raise>:
9002a84c:	4b02      	ldr	r3, [pc, #8]	@ (9002a858 <raise+0xc>)
9002a84e:	4601      	mov	r1, r0
9002a850:	6818      	ldr	r0, [r3, #0]
9002a852:	f7ff bfd3 	b.w	9002a7fc <_raise_r>
9002a856:	bf00      	nop
9002a858:	24000114 	.word	0x24000114

9002a85c <_close_r>:
9002a85c:	b538      	push	{r3, r4, r5, lr}
9002a85e:	4d06      	ldr	r5, [pc, #24]	@ (9002a878 <_close_r+0x1c>)
9002a860:	2300      	movs	r3, #0
9002a862:	4604      	mov	r4, r0
9002a864:	4608      	mov	r0, r1
9002a866:	602b      	str	r3, [r5, #0]
9002a868:	f7d9 fe10 	bl	9000448c <_close>
9002a86c:	1c43      	adds	r3, r0, #1
9002a86e:	d102      	bne.n	9002a876 <_close_r+0x1a>
9002a870:	682b      	ldr	r3, [r5, #0]
9002a872:	b103      	cbz	r3, 9002a876 <_close_r+0x1a>
9002a874:	6023      	str	r3, [r4, #0]
9002a876:	bd38      	pop	{r3, r4, r5, pc}
9002a878:	2402405c 	.word	0x2402405c

9002a87c <_lseek_r>:
9002a87c:	b538      	push	{r3, r4, r5, lr}
9002a87e:	4d07      	ldr	r5, [pc, #28]	@ (9002a89c <_lseek_r+0x20>)
9002a880:	4604      	mov	r4, r0
9002a882:	4608      	mov	r0, r1
9002a884:	4611      	mov	r1, r2
9002a886:	2200      	movs	r2, #0
9002a888:	602a      	str	r2, [r5, #0]
9002a88a:	461a      	mov	r2, r3
9002a88c:	f7d9 fe0a 	bl	900044a4 <_lseek>
9002a890:	1c43      	adds	r3, r0, #1
9002a892:	d102      	bne.n	9002a89a <_lseek_r+0x1e>
9002a894:	682b      	ldr	r3, [r5, #0]
9002a896:	b103      	cbz	r3, 9002a89a <_lseek_r+0x1e>
9002a898:	6023      	str	r3, [r4, #0]
9002a89a:	bd38      	pop	{r3, r4, r5, pc}
9002a89c:	2402405c 	.word	0x2402405c

9002a8a0 <_read_r>:
9002a8a0:	b538      	push	{r3, r4, r5, lr}
9002a8a2:	4d07      	ldr	r5, [pc, #28]	@ (9002a8c0 <_read_r+0x20>)
9002a8a4:	4604      	mov	r4, r0
9002a8a6:	4608      	mov	r0, r1
9002a8a8:	4611      	mov	r1, r2
9002a8aa:	2200      	movs	r2, #0
9002a8ac:	602a      	str	r2, [r5, #0]
9002a8ae:	461a      	mov	r2, r3
9002a8b0:	f7d9 fdd0 	bl	90004454 <_read>
9002a8b4:	1c43      	adds	r3, r0, #1
9002a8b6:	d102      	bne.n	9002a8be <_read_r+0x1e>
9002a8b8:	682b      	ldr	r3, [r5, #0]
9002a8ba:	b103      	cbz	r3, 9002a8be <_read_r+0x1e>
9002a8bc:	6023      	str	r3, [r4, #0]
9002a8be:	bd38      	pop	{r3, r4, r5, pc}
9002a8c0:	2402405c 	.word	0x2402405c

9002a8c4 <_kill_r>:
9002a8c4:	b538      	push	{r3, r4, r5, lr}
9002a8c6:	4d07      	ldr	r5, [pc, #28]	@ (9002a8e4 <_kill_r+0x20>)
9002a8c8:	2300      	movs	r3, #0
9002a8ca:	4604      	mov	r4, r0
9002a8cc:	4608      	mov	r0, r1
9002a8ce:	4611      	mov	r1, r2
9002a8d0:	602b      	str	r3, [r5, #0]
9002a8d2:	f7d9 fdaf 	bl	90004434 <_kill>
9002a8d6:	1c43      	adds	r3, r0, #1
9002a8d8:	d102      	bne.n	9002a8e0 <_kill_r+0x1c>
9002a8da:	682b      	ldr	r3, [r5, #0]
9002a8dc:	b103      	cbz	r3, 9002a8e0 <_kill_r+0x1c>
9002a8de:	6023      	str	r3, [r4, #0]
9002a8e0:	bd38      	pop	{r3, r4, r5, pc}
9002a8e2:	bf00      	nop
9002a8e4:	2402405c 	.word	0x2402405c

9002a8e8 <_getpid_r>:
9002a8e8:	f7d9 bda2 	b.w	90004430 <_getpid>

9002a8ec <_sbrk_r>:
9002a8ec:	b538      	push	{r3, r4, r5, lr}
9002a8ee:	4d06      	ldr	r5, [pc, #24]	@ (9002a908 <_sbrk_r+0x1c>)
9002a8f0:	2300      	movs	r3, #0
9002a8f2:	4604      	mov	r4, r0
9002a8f4:	4608      	mov	r0, r1
9002a8f6:	602b      	str	r3, [r5, #0]
9002a8f8:	f7d9 fdd6 	bl	900044a8 <_sbrk>
9002a8fc:	1c43      	adds	r3, r0, #1
9002a8fe:	d102      	bne.n	9002a906 <_sbrk_r+0x1a>
9002a900:	682b      	ldr	r3, [r5, #0]
9002a902:	b103      	cbz	r3, 9002a906 <_sbrk_r+0x1a>
9002a904:	6023      	str	r3, [r4, #0]
9002a906:	bd38      	pop	{r3, r4, r5, pc}
9002a908:	2402405c 	.word	0x2402405c

9002a90c <_write_r>:
9002a90c:	b538      	push	{r3, r4, r5, lr}
9002a90e:	4d07      	ldr	r5, [pc, #28]	@ (9002a92c <_write_r+0x20>)
9002a910:	4604      	mov	r4, r0
9002a912:	4608      	mov	r0, r1
9002a914:	4611      	mov	r1, r2
9002a916:	2200      	movs	r2, #0
9002a918:	602a      	str	r2, [r5, #0]
9002a91a:	461a      	mov	r2, r3
9002a91c:	f7d9 fda8 	bl	90004470 <_write>
9002a920:	1c43      	adds	r3, r0, #1
9002a922:	d102      	bne.n	9002a92a <_write_r+0x1e>
9002a924:	682b      	ldr	r3, [r5, #0]
9002a926:	b103      	cbz	r3, 9002a92a <_write_r+0x1e>
9002a928:	6023      	str	r3, [r4, #0]
9002a92a:	bd38      	pop	{r3, r4, r5, pc}
9002a92c:	2402405c 	.word	0x2402405c

9002a930 <__errno>:
9002a930:	4b01      	ldr	r3, [pc, #4]	@ (9002a938 <__errno+0x8>)
9002a932:	6818      	ldr	r0, [r3, #0]
9002a934:	4770      	bx	lr
9002a936:	bf00      	nop
9002a938:	24000114 	.word	0x24000114

9002a93c <__libc_init_array>:
9002a93c:	b570      	push	{r4, r5, r6, lr}
9002a93e:	4d0d      	ldr	r5, [pc, #52]	@ (9002a974 <__libc_init_array+0x38>)
9002a940:	4c0d      	ldr	r4, [pc, #52]	@ (9002a978 <__libc_init_array+0x3c>)
9002a942:	1b64      	subs	r4, r4, r5
9002a944:	10a4      	asrs	r4, r4, #2
9002a946:	2600      	movs	r6, #0
9002a948:	42a6      	cmp	r6, r4
9002a94a:	d109      	bne.n	9002a960 <__libc_init_array+0x24>
9002a94c:	4d0b      	ldr	r5, [pc, #44]	@ (9002a97c <__libc_init_array+0x40>)
9002a94e:	4c0c      	ldr	r4, [pc, #48]	@ (9002a980 <__libc_init_array+0x44>)
9002a950:	f000 fcd0 	bl	9002b2f4 <_init>
9002a954:	1b64      	subs	r4, r4, r5
9002a956:	10a4      	asrs	r4, r4, #2
9002a958:	2600      	movs	r6, #0
9002a95a:	42a6      	cmp	r6, r4
9002a95c:	d105      	bne.n	9002a96a <__libc_init_array+0x2e>
9002a95e:	bd70      	pop	{r4, r5, r6, pc}
9002a960:	f855 3b04 	ldr.w	r3, [r5], #4
9002a964:	4798      	blx	r3
9002a966:	3601      	adds	r6, #1
9002a968:	e7ee      	b.n	9002a948 <__libc_init_array+0xc>
9002a96a:	f855 3b04 	ldr.w	r3, [r5], #4
9002a96e:	4798      	blx	r3
9002a970:	3601      	adds	r6, #1
9002a972:	e7f2      	b.n	9002a95a <__libc_init_array+0x1e>
9002a974:	9002ed24 	.word	0x9002ed24
9002a978:	9002ed24 	.word	0x9002ed24
9002a97c:	9002ed24 	.word	0x9002ed24
9002a980:	9002ed3c 	.word	0x9002ed3c

9002a984 <__retarget_lock_init_recursive>:
9002a984:	4770      	bx	lr

9002a986 <__retarget_lock_acquire_recursive>:
9002a986:	4770      	bx	lr

9002a988 <__retarget_lock_release_recursive>:
9002a988:	4770      	bx	lr

9002a98a <memcpy>:
9002a98a:	440a      	add	r2, r1
9002a98c:	4291      	cmp	r1, r2
9002a98e:	f100 33ff 	add.w	r3, r0, #4294967295
9002a992:	d100      	bne.n	9002a996 <memcpy+0xc>
9002a994:	4770      	bx	lr
9002a996:	b510      	push	{r4, lr}
9002a998:	f811 4b01 	ldrb.w	r4, [r1], #1
9002a99c:	f803 4f01 	strb.w	r4, [r3, #1]!
9002a9a0:	4291      	cmp	r1, r2
9002a9a2:	d1f9      	bne.n	9002a998 <memcpy+0xe>
9002a9a4:	bd10      	pop	{r4, pc}
	...

9002a9a8 <__register_exitproc>:
9002a9a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a9ac:	4d27      	ldr	r5, [pc, #156]	@ (9002aa4c <__register_exitproc+0xa4>)
9002a9ae:	4607      	mov	r7, r0
9002a9b0:	6828      	ldr	r0, [r5, #0]
9002a9b2:	4691      	mov	r9, r2
9002a9b4:	460e      	mov	r6, r1
9002a9b6:	4698      	mov	r8, r3
9002a9b8:	f7ff ffe5 	bl	9002a986 <__retarget_lock_acquire_recursive>
9002a9bc:	4a24      	ldr	r2, [pc, #144]	@ (9002aa50 <__register_exitproc+0xa8>)
9002a9be:	6814      	ldr	r4, [r2, #0]
9002a9c0:	b93c      	cbnz	r4, 9002a9d2 <__register_exitproc+0x2a>
9002a9c2:	4b24      	ldr	r3, [pc, #144]	@ (9002aa54 <__register_exitproc+0xac>)
9002a9c4:	6013      	str	r3, [r2, #0]
9002a9c6:	4a24      	ldr	r2, [pc, #144]	@ (9002aa58 <__register_exitproc+0xb0>)
9002a9c8:	b112      	cbz	r2, 9002a9d0 <__register_exitproc+0x28>
9002a9ca:	6812      	ldr	r2, [r2, #0]
9002a9cc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002a9d0:	4c20      	ldr	r4, [pc, #128]	@ (9002aa54 <__register_exitproc+0xac>)
9002a9d2:	6863      	ldr	r3, [r4, #4]
9002a9d4:	2b1f      	cmp	r3, #31
9002a9d6:	dd06      	ble.n	9002a9e6 <__register_exitproc+0x3e>
9002a9d8:	6828      	ldr	r0, [r5, #0]
9002a9da:	f7ff ffd5 	bl	9002a988 <__retarget_lock_release_recursive>
9002a9de:	f04f 30ff 	mov.w	r0, #4294967295
9002a9e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a9e6:	b32f      	cbz	r7, 9002aa34 <__register_exitproc+0x8c>
9002a9e8:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002a9ec:	b968      	cbnz	r0, 9002aa0a <__register_exitproc+0x62>
9002a9ee:	4b1b      	ldr	r3, [pc, #108]	@ (9002aa5c <__register_exitproc+0xb4>)
9002a9f0:	2b00      	cmp	r3, #0
9002a9f2:	d0f1      	beq.n	9002a9d8 <__register_exitproc+0x30>
9002a9f4:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002a9f8:	f7ff fc6e 	bl	9002a2d8 <malloc>
9002a9fc:	2800      	cmp	r0, #0
9002a9fe:	d0eb      	beq.n	9002a9d8 <__register_exitproc+0x30>
9002aa00:	2300      	movs	r3, #0
9002aa02:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002aa06:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002aa0a:	6863      	ldr	r3, [r4, #4]
9002aa0c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002aa10:	2201      	movs	r2, #1
9002aa12:	409a      	lsls	r2, r3
9002aa14:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002aa18:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002aa1c:	4313      	orrs	r3, r2
9002aa1e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002aa22:	2f02      	cmp	r7, #2
9002aa24:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002aa28:	bf02      	ittt	eq
9002aa2a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002aa2e:	4313      	orreq	r3, r2
9002aa30:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002aa34:	6863      	ldr	r3, [r4, #4]
9002aa36:	6828      	ldr	r0, [r5, #0]
9002aa38:	1c5a      	adds	r2, r3, #1
9002aa3a:	3302      	adds	r3, #2
9002aa3c:	6062      	str	r2, [r4, #4]
9002aa3e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002aa42:	f7ff ffa1 	bl	9002a988 <__retarget_lock_release_recursive>
9002aa46:	2000      	movs	r0, #0
9002aa48:	e7cb      	b.n	9002a9e2 <__register_exitproc+0x3a>
9002aa4a:	bf00      	nop
9002aa4c:	24000164 	.word	0x24000164
9002aa50:	240240f0 	.word	0x240240f0
9002aa54:	24024064 	.word	0x24024064
9002aa58:	9002eccc 	.word	0x9002eccc
9002aa5c:	9002a2d9 	.word	0x9002a2d9

9002aa60 <_free_r>:
9002aa60:	b538      	push	{r3, r4, r5, lr}
9002aa62:	4605      	mov	r5, r0
9002aa64:	2900      	cmp	r1, #0
9002aa66:	d041      	beq.n	9002aaec <_free_r+0x8c>
9002aa68:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002aa6c:	1f0c      	subs	r4, r1, #4
9002aa6e:	2b00      	cmp	r3, #0
9002aa70:	bfb8      	it	lt
9002aa72:	18e4      	addlt	r4, r4, r3
9002aa74:	f7ff fce2 	bl	9002a43c <__malloc_lock>
9002aa78:	4a1d      	ldr	r2, [pc, #116]	@ (9002aaf0 <_free_r+0x90>)
9002aa7a:	6813      	ldr	r3, [r2, #0]
9002aa7c:	b933      	cbnz	r3, 9002aa8c <_free_r+0x2c>
9002aa7e:	6063      	str	r3, [r4, #4]
9002aa80:	6014      	str	r4, [r2, #0]
9002aa82:	4628      	mov	r0, r5
9002aa84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002aa88:	f7ff bcde 	b.w	9002a448 <__malloc_unlock>
9002aa8c:	42a3      	cmp	r3, r4
9002aa8e:	d908      	bls.n	9002aaa2 <_free_r+0x42>
9002aa90:	6820      	ldr	r0, [r4, #0]
9002aa92:	1821      	adds	r1, r4, r0
9002aa94:	428b      	cmp	r3, r1
9002aa96:	bf01      	itttt	eq
9002aa98:	6819      	ldreq	r1, [r3, #0]
9002aa9a:	685b      	ldreq	r3, [r3, #4]
9002aa9c:	1809      	addeq	r1, r1, r0
9002aa9e:	6021      	streq	r1, [r4, #0]
9002aaa0:	e7ed      	b.n	9002aa7e <_free_r+0x1e>
9002aaa2:	461a      	mov	r2, r3
9002aaa4:	685b      	ldr	r3, [r3, #4]
9002aaa6:	b10b      	cbz	r3, 9002aaac <_free_r+0x4c>
9002aaa8:	42a3      	cmp	r3, r4
9002aaaa:	d9fa      	bls.n	9002aaa2 <_free_r+0x42>
9002aaac:	6811      	ldr	r1, [r2, #0]
9002aaae:	1850      	adds	r0, r2, r1
9002aab0:	42a0      	cmp	r0, r4
9002aab2:	d10b      	bne.n	9002aacc <_free_r+0x6c>
9002aab4:	6820      	ldr	r0, [r4, #0]
9002aab6:	4401      	add	r1, r0
9002aab8:	1850      	adds	r0, r2, r1
9002aaba:	4283      	cmp	r3, r0
9002aabc:	6011      	str	r1, [r2, #0]
9002aabe:	d1e0      	bne.n	9002aa82 <_free_r+0x22>
9002aac0:	6818      	ldr	r0, [r3, #0]
9002aac2:	685b      	ldr	r3, [r3, #4]
9002aac4:	6053      	str	r3, [r2, #4]
9002aac6:	4408      	add	r0, r1
9002aac8:	6010      	str	r0, [r2, #0]
9002aaca:	e7da      	b.n	9002aa82 <_free_r+0x22>
9002aacc:	d902      	bls.n	9002aad4 <_free_r+0x74>
9002aace:	230c      	movs	r3, #12
9002aad0:	602b      	str	r3, [r5, #0]
9002aad2:	e7d6      	b.n	9002aa82 <_free_r+0x22>
9002aad4:	6820      	ldr	r0, [r4, #0]
9002aad6:	1821      	adds	r1, r4, r0
9002aad8:	428b      	cmp	r3, r1
9002aada:	bf04      	itt	eq
9002aadc:	6819      	ldreq	r1, [r3, #0]
9002aade:	685b      	ldreq	r3, [r3, #4]
9002aae0:	6063      	str	r3, [r4, #4]
9002aae2:	bf04      	itt	eq
9002aae4:	1809      	addeq	r1, r1, r0
9002aae6:	6021      	streq	r1, [r4, #0]
9002aae8:	6054      	str	r4, [r2, #4]
9002aaea:	e7ca      	b.n	9002aa82 <_free_r+0x22>
9002aaec:	bd38      	pop	{r3, r4, r5, pc}
9002aaee:	bf00      	nop
9002aaf0:	24023f1c 	.word	0x24023f1c

9002aaf4 <__sfputc_r>:
9002aaf4:	6893      	ldr	r3, [r2, #8]
9002aaf6:	3b01      	subs	r3, #1
9002aaf8:	2b00      	cmp	r3, #0
9002aafa:	b410      	push	{r4}
9002aafc:	6093      	str	r3, [r2, #8]
9002aafe:	da08      	bge.n	9002ab12 <__sfputc_r+0x1e>
9002ab00:	6994      	ldr	r4, [r2, #24]
9002ab02:	42a3      	cmp	r3, r4
9002ab04:	db01      	blt.n	9002ab0a <__sfputc_r+0x16>
9002ab06:	290a      	cmp	r1, #10
9002ab08:	d103      	bne.n	9002ab12 <__sfputc_r+0x1e>
9002ab0a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002ab0e:	f7ff bdc6 	b.w	9002a69e <__swbuf_r>
9002ab12:	6813      	ldr	r3, [r2, #0]
9002ab14:	1c58      	adds	r0, r3, #1
9002ab16:	6010      	str	r0, [r2, #0]
9002ab18:	7019      	strb	r1, [r3, #0]
9002ab1a:	4608      	mov	r0, r1
9002ab1c:	f85d 4b04 	ldr.w	r4, [sp], #4
9002ab20:	4770      	bx	lr

9002ab22 <__sfputs_r>:
9002ab22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002ab24:	4606      	mov	r6, r0
9002ab26:	460f      	mov	r7, r1
9002ab28:	4614      	mov	r4, r2
9002ab2a:	18d5      	adds	r5, r2, r3
9002ab2c:	42ac      	cmp	r4, r5
9002ab2e:	d101      	bne.n	9002ab34 <__sfputs_r+0x12>
9002ab30:	2000      	movs	r0, #0
9002ab32:	e007      	b.n	9002ab44 <__sfputs_r+0x22>
9002ab34:	f814 1b01 	ldrb.w	r1, [r4], #1
9002ab38:	463a      	mov	r2, r7
9002ab3a:	4630      	mov	r0, r6
9002ab3c:	f7ff ffda 	bl	9002aaf4 <__sfputc_r>
9002ab40:	1c43      	adds	r3, r0, #1
9002ab42:	d1f3      	bne.n	9002ab2c <__sfputs_r+0xa>
9002ab44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002ab48 <_vfiprintf_r>:
9002ab48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002ab4c:	460d      	mov	r5, r1
9002ab4e:	b09d      	sub	sp, #116	@ 0x74
9002ab50:	4614      	mov	r4, r2
9002ab52:	4698      	mov	r8, r3
9002ab54:	4606      	mov	r6, r0
9002ab56:	b118      	cbz	r0, 9002ab60 <_vfiprintf_r+0x18>
9002ab58:	6a03      	ldr	r3, [r0, #32]
9002ab5a:	b90b      	cbnz	r3, 9002ab60 <_vfiprintf_r+0x18>
9002ab5c:	f7ff fd14 	bl	9002a588 <__sinit>
9002ab60:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ab62:	07d9      	lsls	r1, r3, #31
9002ab64:	d405      	bmi.n	9002ab72 <_vfiprintf_r+0x2a>
9002ab66:	89ab      	ldrh	r3, [r5, #12]
9002ab68:	059a      	lsls	r2, r3, #22
9002ab6a:	d402      	bmi.n	9002ab72 <_vfiprintf_r+0x2a>
9002ab6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ab6e:	f7ff ff0a 	bl	9002a986 <__retarget_lock_acquire_recursive>
9002ab72:	89ab      	ldrh	r3, [r5, #12]
9002ab74:	071b      	lsls	r3, r3, #28
9002ab76:	d501      	bpl.n	9002ab7c <_vfiprintf_r+0x34>
9002ab78:	692b      	ldr	r3, [r5, #16]
9002ab7a:	b99b      	cbnz	r3, 9002aba4 <_vfiprintf_r+0x5c>
9002ab7c:	4629      	mov	r1, r5
9002ab7e:	4630      	mov	r0, r6
9002ab80:	f7ff fdcc 	bl	9002a71c <__swsetup_r>
9002ab84:	b170      	cbz	r0, 9002aba4 <_vfiprintf_r+0x5c>
9002ab86:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ab88:	07dc      	lsls	r4, r3, #31
9002ab8a:	d504      	bpl.n	9002ab96 <_vfiprintf_r+0x4e>
9002ab8c:	f04f 30ff 	mov.w	r0, #4294967295
9002ab90:	b01d      	add	sp, #116	@ 0x74
9002ab92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ab96:	89ab      	ldrh	r3, [r5, #12]
9002ab98:	0598      	lsls	r0, r3, #22
9002ab9a:	d4f7      	bmi.n	9002ab8c <_vfiprintf_r+0x44>
9002ab9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ab9e:	f7ff fef3 	bl	9002a988 <__retarget_lock_release_recursive>
9002aba2:	e7f3      	b.n	9002ab8c <_vfiprintf_r+0x44>
9002aba4:	2300      	movs	r3, #0
9002aba6:	9309      	str	r3, [sp, #36]	@ 0x24
9002aba8:	2320      	movs	r3, #32
9002abaa:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002abae:	f8cd 800c 	str.w	r8, [sp, #12]
9002abb2:	2330      	movs	r3, #48	@ 0x30
9002abb4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002ad64 <_vfiprintf_r+0x21c>
9002abb8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002abbc:	f04f 0901 	mov.w	r9, #1
9002abc0:	4623      	mov	r3, r4
9002abc2:	469a      	mov	sl, r3
9002abc4:	f813 2b01 	ldrb.w	r2, [r3], #1
9002abc8:	b10a      	cbz	r2, 9002abce <_vfiprintf_r+0x86>
9002abca:	2a25      	cmp	r2, #37	@ 0x25
9002abcc:	d1f9      	bne.n	9002abc2 <_vfiprintf_r+0x7a>
9002abce:	ebba 0b04 	subs.w	fp, sl, r4
9002abd2:	d00b      	beq.n	9002abec <_vfiprintf_r+0xa4>
9002abd4:	465b      	mov	r3, fp
9002abd6:	4622      	mov	r2, r4
9002abd8:	4629      	mov	r1, r5
9002abda:	4630      	mov	r0, r6
9002abdc:	f7ff ffa1 	bl	9002ab22 <__sfputs_r>
9002abe0:	3001      	adds	r0, #1
9002abe2:	f000 80a7 	beq.w	9002ad34 <_vfiprintf_r+0x1ec>
9002abe6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002abe8:	445a      	add	r2, fp
9002abea:	9209      	str	r2, [sp, #36]	@ 0x24
9002abec:	f89a 3000 	ldrb.w	r3, [sl]
9002abf0:	2b00      	cmp	r3, #0
9002abf2:	f000 809f 	beq.w	9002ad34 <_vfiprintf_r+0x1ec>
9002abf6:	2300      	movs	r3, #0
9002abf8:	f04f 32ff 	mov.w	r2, #4294967295
9002abfc:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002ac00:	f10a 0a01 	add.w	sl, sl, #1
9002ac04:	9304      	str	r3, [sp, #16]
9002ac06:	9307      	str	r3, [sp, #28]
9002ac08:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002ac0c:	931a      	str	r3, [sp, #104]	@ 0x68
9002ac0e:	4654      	mov	r4, sl
9002ac10:	2205      	movs	r2, #5
9002ac12:	f814 1b01 	ldrb.w	r1, [r4], #1
9002ac16:	4853      	ldr	r0, [pc, #332]	@ (9002ad64 <_vfiprintf_r+0x21c>)
9002ac18:	f7d5 fb62 	bl	900002e0 <memchr>
9002ac1c:	9a04      	ldr	r2, [sp, #16]
9002ac1e:	b9d8      	cbnz	r0, 9002ac58 <_vfiprintf_r+0x110>
9002ac20:	06d1      	lsls	r1, r2, #27
9002ac22:	bf44      	itt	mi
9002ac24:	2320      	movmi	r3, #32
9002ac26:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002ac2a:	0713      	lsls	r3, r2, #28
9002ac2c:	bf44      	itt	mi
9002ac2e:	232b      	movmi	r3, #43	@ 0x2b
9002ac30:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002ac34:	f89a 3000 	ldrb.w	r3, [sl]
9002ac38:	2b2a      	cmp	r3, #42	@ 0x2a
9002ac3a:	d015      	beq.n	9002ac68 <_vfiprintf_r+0x120>
9002ac3c:	9a07      	ldr	r2, [sp, #28]
9002ac3e:	4654      	mov	r4, sl
9002ac40:	2000      	movs	r0, #0
9002ac42:	f04f 0c0a 	mov.w	ip, #10
9002ac46:	4621      	mov	r1, r4
9002ac48:	f811 3b01 	ldrb.w	r3, [r1], #1
9002ac4c:	3b30      	subs	r3, #48	@ 0x30
9002ac4e:	2b09      	cmp	r3, #9
9002ac50:	d94b      	bls.n	9002acea <_vfiprintf_r+0x1a2>
9002ac52:	b1b0      	cbz	r0, 9002ac82 <_vfiprintf_r+0x13a>
9002ac54:	9207      	str	r2, [sp, #28]
9002ac56:	e014      	b.n	9002ac82 <_vfiprintf_r+0x13a>
9002ac58:	eba0 0308 	sub.w	r3, r0, r8
9002ac5c:	fa09 f303 	lsl.w	r3, r9, r3
9002ac60:	4313      	orrs	r3, r2
9002ac62:	9304      	str	r3, [sp, #16]
9002ac64:	46a2      	mov	sl, r4
9002ac66:	e7d2      	b.n	9002ac0e <_vfiprintf_r+0xc6>
9002ac68:	9b03      	ldr	r3, [sp, #12]
9002ac6a:	1d19      	adds	r1, r3, #4
9002ac6c:	681b      	ldr	r3, [r3, #0]
9002ac6e:	9103      	str	r1, [sp, #12]
9002ac70:	2b00      	cmp	r3, #0
9002ac72:	bfbb      	ittet	lt
9002ac74:	425b      	neglt	r3, r3
9002ac76:	f042 0202 	orrlt.w	r2, r2, #2
9002ac7a:	9307      	strge	r3, [sp, #28]
9002ac7c:	9307      	strlt	r3, [sp, #28]
9002ac7e:	bfb8      	it	lt
9002ac80:	9204      	strlt	r2, [sp, #16]
9002ac82:	7823      	ldrb	r3, [r4, #0]
9002ac84:	2b2e      	cmp	r3, #46	@ 0x2e
9002ac86:	d10a      	bne.n	9002ac9e <_vfiprintf_r+0x156>
9002ac88:	7863      	ldrb	r3, [r4, #1]
9002ac8a:	2b2a      	cmp	r3, #42	@ 0x2a
9002ac8c:	d132      	bne.n	9002acf4 <_vfiprintf_r+0x1ac>
9002ac8e:	9b03      	ldr	r3, [sp, #12]
9002ac90:	1d1a      	adds	r2, r3, #4
9002ac92:	681b      	ldr	r3, [r3, #0]
9002ac94:	9203      	str	r2, [sp, #12]
9002ac96:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002ac9a:	3402      	adds	r4, #2
9002ac9c:	9305      	str	r3, [sp, #20]
9002ac9e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002ad74 <_vfiprintf_r+0x22c>
9002aca2:	7821      	ldrb	r1, [r4, #0]
9002aca4:	2203      	movs	r2, #3
9002aca6:	4650      	mov	r0, sl
9002aca8:	f7d5 fb1a 	bl	900002e0 <memchr>
9002acac:	b138      	cbz	r0, 9002acbe <_vfiprintf_r+0x176>
9002acae:	9b04      	ldr	r3, [sp, #16]
9002acb0:	eba0 000a 	sub.w	r0, r0, sl
9002acb4:	2240      	movs	r2, #64	@ 0x40
9002acb6:	4082      	lsls	r2, r0
9002acb8:	4313      	orrs	r3, r2
9002acba:	3401      	adds	r4, #1
9002acbc:	9304      	str	r3, [sp, #16]
9002acbe:	f814 1b01 	ldrb.w	r1, [r4], #1
9002acc2:	4829      	ldr	r0, [pc, #164]	@ (9002ad68 <_vfiprintf_r+0x220>)
9002acc4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002acc8:	2206      	movs	r2, #6
9002acca:	f7d5 fb09 	bl	900002e0 <memchr>
9002acce:	2800      	cmp	r0, #0
9002acd0:	d03f      	beq.n	9002ad52 <_vfiprintf_r+0x20a>
9002acd2:	4b26      	ldr	r3, [pc, #152]	@ (9002ad6c <_vfiprintf_r+0x224>)
9002acd4:	bb1b      	cbnz	r3, 9002ad1e <_vfiprintf_r+0x1d6>
9002acd6:	9b03      	ldr	r3, [sp, #12]
9002acd8:	3307      	adds	r3, #7
9002acda:	f023 0307 	bic.w	r3, r3, #7
9002acde:	3308      	adds	r3, #8
9002ace0:	9303      	str	r3, [sp, #12]
9002ace2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002ace4:	443b      	add	r3, r7
9002ace6:	9309      	str	r3, [sp, #36]	@ 0x24
9002ace8:	e76a      	b.n	9002abc0 <_vfiprintf_r+0x78>
9002acea:	fb0c 3202 	mla	r2, ip, r2, r3
9002acee:	460c      	mov	r4, r1
9002acf0:	2001      	movs	r0, #1
9002acf2:	e7a8      	b.n	9002ac46 <_vfiprintf_r+0xfe>
9002acf4:	2300      	movs	r3, #0
9002acf6:	3401      	adds	r4, #1
9002acf8:	9305      	str	r3, [sp, #20]
9002acfa:	4619      	mov	r1, r3
9002acfc:	f04f 0c0a 	mov.w	ip, #10
9002ad00:	4620      	mov	r0, r4
9002ad02:	f810 2b01 	ldrb.w	r2, [r0], #1
9002ad06:	3a30      	subs	r2, #48	@ 0x30
9002ad08:	2a09      	cmp	r2, #9
9002ad0a:	d903      	bls.n	9002ad14 <_vfiprintf_r+0x1cc>
9002ad0c:	2b00      	cmp	r3, #0
9002ad0e:	d0c6      	beq.n	9002ac9e <_vfiprintf_r+0x156>
9002ad10:	9105      	str	r1, [sp, #20]
9002ad12:	e7c4      	b.n	9002ac9e <_vfiprintf_r+0x156>
9002ad14:	fb0c 2101 	mla	r1, ip, r1, r2
9002ad18:	4604      	mov	r4, r0
9002ad1a:	2301      	movs	r3, #1
9002ad1c:	e7f0      	b.n	9002ad00 <_vfiprintf_r+0x1b8>
9002ad1e:	ab03      	add	r3, sp, #12
9002ad20:	9300      	str	r3, [sp, #0]
9002ad22:	462a      	mov	r2, r5
9002ad24:	4b12      	ldr	r3, [pc, #72]	@ (9002ad70 <_vfiprintf_r+0x228>)
9002ad26:	a904      	add	r1, sp, #16
9002ad28:	4630      	mov	r0, r6
9002ad2a:	f3af 8000 	nop.w
9002ad2e:	4607      	mov	r7, r0
9002ad30:	1c78      	adds	r0, r7, #1
9002ad32:	d1d6      	bne.n	9002ace2 <_vfiprintf_r+0x19a>
9002ad34:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ad36:	07d9      	lsls	r1, r3, #31
9002ad38:	d405      	bmi.n	9002ad46 <_vfiprintf_r+0x1fe>
9002ad3a:	89ab      	ldrh	r3, [r5, #12]
9002ad3c:	059a      	lsls	r2, r3, #22
9002ad3e:	d402      	bmi.n	9002ad46 <_vfiprintf_r+0x1fe>
9002ad40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ad42:	f7ff fe21 	bl	9002a988 <__retarget_lock_release_recursive>
9002ad46:	89ab      	ldrh	r3, [r5, #12]
9002ad48:	065b      	lsls	r3, r3, #25
9002ad4a:	f53f af1f 	bmi.w	9002ab8c <_vfiprintf_r+0x44>
9002ad4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002ad50:	e71e      	b.n	9002ab90 <_vfiprintf_r+0x48>
9002ad52:	ab03      	add	r3, sp, #12
9002ad54:	9300      	str	r3, [sp, #0]
9002ad56:	462a      	mov	r2, r5
9002ad58:	4b05      	ldr	r3, [pc, #20]	@ (9002ad70 <_vfiprintf_r+0x228>)
9002ad5a:	a904      	add	r1, sp, #16
9002ad5c:	4630      	mov	r0, r6
9002ad5e:	f000 f879 	bl	9002ae54 <_printf_i>
9002ad62:	e7e4      	b.n	9002ad2e <_vfiprintf_r+0x1e6>
9002ad64:	9002ecd0 	.word	0x9002ecd0
9002ad68:	9002ecda 	.word	0x9002ecda
9002ad6c:	00000000 	.word	0x00000000
9002ad70:	9002ab23 	.word	0x9002ab23
9002ad74:	9002ecd6 	.word	0x9002ecd6

9002ad78 <_printf_common>:
9002ad78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002ad7c:	4616      	mov	r6, r2
9002ad7e:	4698      	mov	r8, r3
9002ad80:	688a      	ldr	r2, [r1, #8]
9002ad82:	690b      	ldr	r3, [r1, #16]
9002ad84:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002ad88:	4293      	cmp	r3, r2
9002ad8a:	bfb8      	it	lt
9002ad8c:	4613      	movlt	r3, r2
9002ad8e:	6033      	str	r3, [r6, #0]
9002ad90:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002ad94:	4607      	mov	r7, r0
9002ad96:	460c      	mov	r4, r1
9002ad98:	b10a      	cbz	r2, 9002ad9e <_printf_common+0x26>
9002ad9a:	3301      	adds	r3, #1
9002ad9c:	6033      	str	r3, [r6, #0]
9002ad9e:	6823      	ldr	r3, [r4, #0]
9002ada0:	0699      	lsls	r1, r3, #26
9002ada2:	bf42      	ittt	mi
9002ada4:	6833      	ldrmi	r3, [r6, #0]
9002ada6:	3302      	addmi	r3, #2
9002ada8:	6033      	strmi	r3, [r6, #0]
9002adaa:	6825      	ldr	r5, [r4, #0]
9002adac:	f015 0506 	ands.w	r5, r5, #6
9002adb0:	d106      	bne.n	9002adc0 <_printf_common+0x48>
9002adb2:	f104 0a19 	add.w	sl, r4, #25
9002adb6:	68e3      	ldr	r3, [r4, #12]
9002adb8:	6832      	ldr	r2, [r6, #0]
9002adba:	1a9b      	subs	r3, r3, r2
9002adbc:	42ab      	cmp	r3, r5
9002adbe:	dc26      	bgt.n	9002ae0e <_printf_common+0x96>
9002adc0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002adc4:	6822      	ldr	r2, [r4, #0]
9002adc6:	3b00      	subs	r3, #0
9002adc8:	bf18      	it	ne
9002adca:	2301      	movne	r3, #1
9002adcc:	0692      	lsls	r2, r2, #26
9002adce:	d42b      	bmi.n	9002ae28 <_printf_common+0xb0>
9002add0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002add4:	4641      	mov	r1, r8
9002add6:	4638      	mov	r0, r7
9002add8:	47c8      	blx	r9
9002adda:	3001      	adds	r0, #1
9002addc:	d01e      	beq.n	9002ae1c <_printf_common+0xa4>
9002adde:	6823      	ldr	r3, [r4, #0]
9002ade0:	6922      	ldr	r2, [r4, #16]
9002ade2:	f003 0306 	and.w	r3, r3, #6
9002ade6:	2b04      	cmp	r3, #4
9002ade8:	bf02      	ittt	eq
9002adea:	68e5      	ldreq	r5, [r4, #12]
9002adec:	6833      	ldreq	r3, [r6, #0]
9002adee:	1aed      	subeq	r5, r5, r3
9002adf0:	68a3      	ldr	r3, [r4, #8]
9002adf2:	bf0c      	ite	eq
9002adf4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002adf8:	2500      	movne	r5, #0
9002adfa:	4293      	cmp	r3, r2
9002adfc:	bfc4      	itt	gt
9002adfe:	1a9b      	subgt	r3, r3, r2
9002ae00:	18ed      	addgt	r5, r5, r3
9002ae02:	2600      	movs	r6, #0
9002ae04:	341a      	adds	r4, #26
9002ae06:	42b5      	cmp	r5, r6
9002ae08:	d11a      	bne.n	9002ae40 <_printf_common+0xc8>
9002ae0a:	2000      	movs	r0, #0
9002ae0c:	e008      	b.n	9002ae20 <_printf_common+0xa8>
9002ae0e:	2301      	movs	r3, #1
9002ae10:	4652      	mov	r2, sl
9002ae12:	4641      	mov	r1, r8
9002ae14:	4638      	mov	r0, r7
9002ae16:	47c8      	blx	r9
9002ae18:	3001      	adds	r0, #1
9002ae1a:	d103      	bne.n	9002ae24 <_printf_common+0xac>
9002ae1c:	f04f 30ff 	mov.w	r0, #4294967295
9002ae20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002ae24:	3501      	adds	r5, #1
9002ae26:	e7c6      	b.n	9002adb6 <_printf_common+0x3e>
9002ae28:	18e1      	adds	r1, r4, r3
9002ae2a:	1c5a      	adds	r2, r3, #1
9002ae2c:	2030      	movs	r0, #48	@ 0x30
9002ae2e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002ae32:	4422      	add	r2, r4
9002ae34:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002ae38:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002ae3c:	3302      	adds	r3, #2
9002ae3e:	e7c7      	b.n	9002add0 <_printf_common+0x58>
9002ae40:	2301      	movs	r3, #1
9002ae42:	4622      	mov	r2, r4
9002ae44:	4641      	mov	r1, r8
9002ae46:	4638      	mov	r0, r7
9002ae48:	47c8      	blx	r9
9002ae4a:	3001      	adds	r0, #1
9002ae4c:	d0e6      	beq.n	9002ae1c <_printf_common+0xa4>
9002ae4e:	3601      	adds	r6, #1
9002ae50:	e7d9      	b.n	9002ae06 <_printf_common+0x8e>
	...

9002ae54 <_printf_i>:
9002ae54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002ae58:	7e0f      	ldrb	r7, [r1, #24]
9002ae5a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002ae5c:	2f78      	cmp	r7, #120	@ 0x78
9002ae5e:	4691      	mov	r9, r2
9002ae60:	4680      	mov	r8, r0
9002ae62:	460c      	mov	r4, r1
9002ae64:	469a      	mov	sl, r3
9002ae66:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002ae6a:	d807      	bhi.n	9002ae7c <_printf_i+0x28>
9002ae6c:	2f62      	cmp	r7, #98	@ 0x62
9002ae6e:	d80a      	bhi.n	9002ae86 <_printf_i+0x32>
9002ae70:	2f00      	cmp	r7, #0
9002ae72:	f000 80d2 	beq.w	9002b01a <_printf_i+0x1c6>
9002ae76:	2f58      	cmp	r7, #88	@ 0x58
9002ae78:	f000 80b9 	beq.w	9002afee <_printf_i+0x19a>
9002ae7c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002ae80:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002ae84:	e03a      	b.n	9002aefc <_printf_i+0xa8>
9002ae86:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002ae8a:	2b15      	cmp	r3, #21
9002ae8c:	d8f6      	bhi.n	9002ae7c <_printf_i+0x28>
9002ae8e:	a101      	add	r1, pc, #4	@ (adr r1, 9002ae94 <_printf_i+0x40>)
9002ae90:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002ae94:	9002aeed 	.word	0x9002aeed
9002ae98:	9002af01 	.word	0x9002af01
9002ae9c:	9002ae7d 	.word	0x9002ae7d
9002aea0:	9002ae7d 	.word	0x9002ae7d
9002aea4:	9002ae7d 	.word	0x9002ae7d
9002aea8:	9002ae7d 	.word	0x9002ae7d
9002aeac:	9002af01 	.word	0x9002af01
9002aeb0:	9002ae7d 	.word	0x9002ae7d
9002aeb4:	9002ae7d 	.word	0x9002ae7d
9002aeb8:	9002ae7d 	.word	0x9002ae7d
9002aebc:	9002ae7d 	.word	0x9002ae7d
9002aec0:	9002b001 	.word	0x9002b001
9002aec4:	9002af2b 	.word	0x9002af2b
9002aec8:	9002afbb 	.word	0x9002afbb
9002aecc:	9002ae7d 	.word	0x9002ae7d
9002aed0:	9002ae7d 	.word	0x9002ae7d
9002aed4:	9002b023 	.word	0x9002b023
9002aed8:	9002ae7d 	.word	0x9002ae7d
9002aedc:	9002af2b 	.word	0x9002af2b
9002aee0:	9002ae7d 	.word	0x9002ae7d
9002aee4:	9002ae7d 	.word	0x9002ae7d
9002aee8:	9002afc3 	.word	0x9002afc3
9002aeec:	6833      	ldr	r3, [r6, #0]
9002aeee:	1d1a      	adds	r2, r3, #4
9002aef0:	681b      	ldr	r3, [r3, #0]
9002aef2:	6032      	str	r2, [r6, #0]
9002aef4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002aef8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002aefc:	2301      	movs	r3, #1
9002aefe:	e09d      	b.n	9002b03c <_printf_i+0x1e8>
9002af00:	6833      	ldr	r3, [r6, #0]
9002af02:	6820      	ldr	r0, [r4, #0]
9002af04:	1d19      	adds	r1, r3, #4
9002af06:	6031      	str	r1, [r6, #0]
9002af08:	0606      	lsls	r6, r0, #24
9002af0a:	d501      	bpl.n	9002af10 <_printf_i+0xbc>
9002af0c:	681d      	ldr	r5, [r3, #0]
9002af0e:	e003      	b.n	9002af18 <_printf_i+0xc4>
9002af10:	0645      	lsls	r5, r0, #25
9002af12:	d5fb      	bpl.n	9002af0c <_printf_i+0xb8>
9002af14:	f9b3 5000 	ldrsh.w	r5, [r3]
9002af18:	2d00      	cmp	r5, #0
9002af1a:	da03      	bge.n	9002af24 <_printf_i+0xd0>
9002af1c:	232d      	movs	r3, #45	@ 0x2d
9002af1e:	426d      	negs	r5, r5
9002af20:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002af24:	4859      	ldr	r0, [pc, #356]	@ (9002b08c <_printf_i+0x238>)
9002af26:	230a      	movs	r3, #10
9002af28:	e011      	b.n	9002af4e <_printf_i+0xfa>
9002af2a:	6821      	ldr	r1, [r4, #0]
9002af2c:	6833      	ldr	r3, [r6, #0]
9002af2e:	0608      	lsls	r0, r1, #24
9002af30:	f853 5b04 	ldr.w	r5, [r3], #4
9002af34:	d402      	bmi.n	9002af3c <_printf_i+0xe8>
9002af36:	0649      	lsls	r1, r1, #25
9002af38:	bf48      	it	mi
9002af3a:	b2ad      	uxthmi	r5, r5
9002af3c:	2f6f      	cmp	r7, #111	@ 0x6f
9002af3e:	4853      	ldr	r0, [pc, #332]	@ (9002b08c <_printf_i+0x238>)
9002af40:	6033      	str	r3, [r6, #0]
9002af42:	bf14      	ite	ne
9002af44:	230a      	movne	r3, #10
9002af46:	2308      	moveq	r3, #8
9002af48:	2100      	movs	r1, #0
9002af4a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002af4e:	6866      	ldr	r6, [r4, #4]
9002af50:	60a6      	str	r6, [r4, #8]
9002af52:	2e00      	cmp	r6, #0
9002af54:	bfa2      	ittt	ge
9002af56:	6821      	ldrge	r1, [r4, #0]
9002af58:	f021 0104 	bicge.w	r1, r1, #4
9002af5c:	6021      	strge	r1, [r4, #0]
9002af5e:	b90d      	cbnz	r5, 9002af64 <_printf_i+0x110>
9002af60:	2e00      	cmp	r6, #0
9002af62:	d04b      	beq.n	9002affc <_printf_i+0x1a8>
9002af64:	4616      	mov	r6, r2
9002af66:	fbb5 f1f3 	udiv	r1, r5, r3
9002af6a:	fb03 5711 	mls	r7, r3, r1, r5
9002af6e:	5dc7      	ldrb	r7, [r0, r7]
9002af70:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002af74:	462f      	mov	r7, r5
9002af76:	42bb      	cmp	r3, r7
9002af78:	460d      	mov	r5, r1
9002af7a:	d9f4      	bls.n	9002af66 <_printf_i+0x112>
9002af7c:	2b08      	cmp	r3, #8
9002af7e:	d10b      	bne.n	9002af98 <_printf_i+0x144>
9002af80:	6823      	ldr	r3, [r4, #0]
9002af82:	07df      	lsls	r7, r3, #31
9002af84:	d508      	bpl.n	9002af98 <_printf_i+0x144>
9002af86:	6923      	ldr	r3, [r4, #16]
9002af88:	6861      	ldr	r1, [r4, #4]
9002af8a:	4299      	cmp	r1, r3
9002af8c:	bfde      	ittt	le
9002af8e:	2330      	movle	r3, #48	@ 0x30
9002af90:	f806 3c01 	strble.w	r3, [r6, #-1]
9002af94:	f106 36ff 	addle.w	r6, r6, #4294967295
9002af98:	1b92      	subs	r2, r2, r6
9002af9a:	6122      	str	r2, [r4, #16]
9002af9c:	f8cd a000 	str.w	sl, [sp]
9002afa0:	464b      	mov	r3, r9
9002afa2:	aa03      	add	r2, sp, #12
9002afa4:	4621      	mov	r1, r4
9002afa6:	4640      	mov	r0, r8
9002afa8:	f7ff fee6 	bl	9002ad78 <_printf_common>
9002afac:	3001      	adds	r0, #1
9002afae:	d14a      	bne.n	9002b046 <_printf_i+0x1f2>
9002afb0:	f04f 30ff 	mov.w	r0, #4294967295
9002afb4:	b004      	add	sp, #16
9002afb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002afba:	6823      	ldr	r3, [r4, #0]
9002afbc:	f043 0320 	orr.w	r3, r3, #32
9002afc0:	6023      	str	r3, [r4, #0]
9002afc2:	4833      	ldr	r0, [pc, #204]	@ (9002b090 <_printf_i+0x23c>)
9002afc4:	2778      	movs	r7, #120	@ 0x78
9002afc6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002afca:	6823      	ldr	r3, [r4, #0]
9002afcc:	6831      	ldr	r1, [r6, #0]
9002afce:	061f      	lsls	r7, r3, #24
9002afd0:	f851 5b04 	ldr.w	r5, [r1], #4
9002afd4:	d402      	bmi.n	9002afdc <_printf_i+0x188>
9002afd6:	065f      	lsls	r7, r3, #25
9002afd8:	bf48      	it	mi
9002afda:	b2ad      	uxthmi	r5, r5
9002afdc:	6031      	str	r1, [r6, #0]
9002afde:	07d9      	lsls	r1, r3, #31
9002afe0:	bf44      	itt	mi
9002afe2:	f043 0320 	orrmi.w	r3, r3, #32
9002afe6:	6023      	strmi	r3, [r4, #0]
9002afe8:	b11d      	cbz	r5, 9002aff2 <_printf_i+0x19e>
9002afea:	2310      	movs	r3, #16
9002afec:	e7ac      	b.n	9002af48 <_printf_i+0xf4>
9002afee:	4827      	ldr	r0, [pc, #156]	@ (9002b08c <_printf_i+0x238>)
9002aff0:	e7e9      	b.n	9002afc6 <_printf_i+0x172>
9002aff2:	6823      	ldr	r3, [r4, #0]
9002aff4:	f023 0320 	bic.w	r3, r3, #32
9002aff8:	6023      	str	r3, [r4, #0]
9002affa:	e7f6      	b.n	9002afea <_printf_i+0x196>
9002affc:	4616      	mov	r6, r2
9002affe:	e7bd      	b.n	9002af7c <_printf_i+0x128>
9002b000:	6833      	ldr	r3, [r6, #0]
9002b002:	6825      	ldr	r5, [r4, #0]
9002b004:	6961      	ldr	r1, [r4, #20]
9002b006:	1d18      	adds	r0, r3, #4
9002b008:	6030      	str	r0, [r6, #0]
9002b00a:	062e      	lsls	r6, r5, #24
9002b00c:	681b      	ldr	r3, [r3, #0]
9002b00e:	d501      	bpl.n	9002b014 <_printf_i+0x1c0>
9002b010:	6019      	str	r1, [r3, #0]
9002b012:	e002      	b.n	9002b01a <_printf_i+0x1c6>
9002b014:	0668      	lsls	r0, r5, #25
9002b016:	d5fb      	bpl.n	9002b010 <_printf_i+0x1bc>
9002b018:	8019      	strh	r1, [r3, #0]
9002b01a:	2300      	movs	r3, #0
9002b01c:	6123      	str	r3, [r4, #16]
9002b01e:	4616      	mov	r6, r2
9002b020:	e7bc      	b.n	9002af9c <_printf_i+0x148>
9002b022:	6833      	ldr	r3, [r6, #0]
9002b024:	1d1a      	adds	r2, r3, #4
9002b026:	6032      	str	r2, [r6, #0]
9002b028:	681e      	ldr	r6, [r3, #0]
9002b02a:	6862      	ldr	r2, [r4, #4]
9002b02c:	2100      	movs	r1, #0
9002b02e:	4630      	mov	r0, r6
9002b030:	f7d5 f956 	bl	900002e0 <memchr>
9002b034:	b108      	cbz	r0, 9002b03a <_printf_i+0x1e6>
9002b036:	1b80      	subs	r0, r0, r6
9002b038:	6060      	str	r0, [r4, #4]
9002b03a:	6863      	ldr	r3, [r4, #4]
9002b03c:	6123      	str	r3, [r4, #16]
9002b03e:	2300      	movs	r3, #0
9002b040:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b044:	e7aa      	b.n	9002af9c <_printf_i+0x148>
9002b046:	6923      	ldr	r3, [r4, #16]
9002b048:	4632      	mov	r2, r6
9002b04a:	4649      	mov	r1, r9
9002b04c:	4640      	mov	r0, r8
9002b04e:	47d0      	blx	sl
9002b050:	3001      	adds	r0, #1
9002b052:	d0ad      	beq.n	9002afb0 <_printf_i+0x15c>
9002b054:	6823      	ldr	r3, [r4, #0]
9002b056:	079b      	lsls	r3, r3, #30
9002b058:	d413      	bmi.n	9002b082 <_printf_i+0x22e>
9002b05a:	68e0      	ldr	r0, [r4, #12]
9002b05c:	9b03      	ldr	r3, [sp, #12]
9002b05e:	4298      	cmp	r0, r3
9002b060:	bfb8      	it	lt
9002b062:	4618      	movlt	r0, r3
9002b064:	e7a6      	b.n	9002afb4 <_printf_i+0x160>
9002b066:	2301      	movs	r3, #1
9002b068:	4632      	mov	r2, r6
9002b06a:	4649      	mov	r1, r9
9002b06c:	4640      	mov	r0, r8
9002b06e:	47d0      	blx	sl
9002b070:	3001      	adds	r0, #1
9002b072:	d09d      	beq.n	9002afb0 <_printf_i+0x15c>
9002b074:	3501      	adds	r5, #1
9002b076:	68e3      	ldr	r3, [r4, #12]
9002b078:	9903      	ldr	r1, [sp, #12]
9002b07a:	1a5b      	subs	r3, r3, r1
9002b07c:	42ab      	cmp	r3, r5
9002b07e:	dcf2      	bgt.n	9002b066 <_printf_i+0x212>
9002b080:	e7eb      	b.n	9002b05a <_printf_i+0x206>
9002b082:	2500      	movs	r5, #0
9002b084:	f104 0619 	add.w	r6, r4, #25
9002b088:	e7f5      	b.n	9002b076 <_printf_i+0x222>
9002b08a:	bf00      	nop
9002b08c:	9002ece1 	.word	0x9002ece1
9002b090:	9002ecf2 	.word	0x9002ecf2

9002b094 <__sflush_r>:
9002b094:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002b098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b09c:	0716      	lsls	r6, r2, #28
9002b09e:	4605      	mov	r5, r0
9002b0a0:	460c      	mov	r4, r1
9002b0a2:	d454      	bmi.n	9002b14e <__sflush_r+0xba>
9002b0a4:	684b      	ldr	r3, [r1, #4]
9002b0a6:	2b00      	cmp	r3, #0
9002b0a8:	dc02      	bgt.n	9002b0b0 <__sflush_r+0x1c>
9002b0aa:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002b0ac:	2b00      	cmp	r3, #0
9002b0ae:	dd48      	ble.n	9002b142 <__sflush_r+0xae>
9002b0b0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b0b2:	2e00      	cmp	r6, #0
9002b0b4:	d045      	beq.n	9002b142 <__sflush_r+0xae>
9002b0b6:	2300      	movs	r3, #0
9002b0b8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002b0bc:	682f      	ldr	r7, [r5, #0]
9002b0be:	6a21      	ldr	r1, [r4, #32]
9002b0c0:	602b      	str	r3, [r5, #0]
9002b0c2:	d030      	beq.n	9002b126 <__sflush_r+0x92>
9002b0c4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002b0c6:	89a3      	ldrh	r3, [r4, #12]
9002b0c8:	0759      	lsls	r1, r3, #29
9002b0ca:	d505      	bpl.n	9002b0d8 <__sflush_r+0x44>
9002b0cc:	6863      	ldr	r3, [r4, #4]
9002b0ce:	1ad2      	subs	r2, r2, r3
9002b0d0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002b0d2:	b10b      	cbz	r3, 9002b0d8 <__sflush_r+0x44>
9002b0d4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002b0d6:	1ad2      	subs	r2, r2, r3
9002b0d8:	2300      	movs	r3, #0
9002b0da:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b0dc:	6a21      	ldr	r1, [r4, #32]
9002b0de:	4628      	mov	r0, r5
9002b0e0:	47b0      	blx	r6
9002b0e2:	1c43      	adds	r3, r0, #1
9002b0e4:	89a3      	ldrh	r3, [r4, #12]
9002b0e6:	d106      	bne.n	9002b0f6 <__sflush_r+0x62>
9002b0e8:	6829      	ldr	r1, [r5, #0]
9002b0ea:	291d      	cmp	r1, #29
9002b0ec:	d82b      	bhi.n	9002b146 <__sflush_r+0xb2>
9002b0ee:	4a2a      	ldr	r2, [pc, #168]	@ (9002b198 <__sflush_r+0x104>)
9002b0f0:	410a      	asrs	r2, r1
9002b0f2:	07d6      	lsls	r6, r2, #31
9002b0f4:	d427      	bmi.n	9002b146 <__sflush_r+0xb2>
9002b0f6:	2200      	movs	r2, #0
9002b0f8:	6062      	str	r2, [r4, #4]
9002b0fa:	04d9      	lsls	r1, r3, #19
9002b0fc:	6922      	ldr	r2, [r4, #16]
9002b0fe:	6022      	str	r2, [r4, #0]
9002b100:	d504      	bpl.n	9002b10c <__sflush_r+0x78>
9002b102:	1c42      	adds	r2, r0, #1
9002b104:	d101      	bne.n	9002b10a <__sflush_r+0x76>
9002b106:	682b      	ldr	r3, [r5, #0]
9002b108:	b903      	cbnz	r3, 9002b10c <__sflush_r+0x78>
9002b10a:	6560      	str	r0, [r4, #84]	@ 0x54
9002b10c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002b10e:	602f      	str	r7, [r5, #0]
9002b110:	b1b9      	cbz	r1, 9002b142 <__sflush_r+0xae>
9002b112:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002b116:	4299      	cmp	r1, r3
9002b118:	d002      	beq.n	9002b120 <__sflush_r+0x8c>
9002b11a:	4628      	mov	r0, r5
9002b11c:	f7ff fca0 	bl	9002aa60 <_free_r>
9002b120:	2300      	movs	r3, #0
9002b122:	6363      	str	r3, [r4, #52]	@ 0x34
9002b124:	e00d      	b.n	9002b142 <__sflush_r+0xae>
9002b126:	2301      	movs	r3, #1
9002b128:	4628      	mov	r0, r5
9002b12a:	47b0      	blx	r6
9002b12c:	4602      	mov	r2, r0
9002b12e:	1c50      	adds	r0, r2, #1
9002b130:	d1c9      	bne.n	9002b0c6 <__sflush_r+0x32>
9002b132:	682b      	ldr	r3, [r5, #0]
9002b134:	2b00      	cmp	r3, #0
9002b136:	d0c6      	beq.n	9002b0c6 <__sflush_r+0x32>
9002b138:	2b1d      	cmp	r3, #29
9002b13a:	d001      	beq.n	9002b140 <__sflush_r+0xac>
9002b13c:	2b16      	cmp	r3, #22
9002b13e:	d11e      	bne.n	9002b17e <__sflush_r+0xea>
9002b140:	602f      	str	r7, [r5, #0]
9002b142:	2000      	movs	r0, #0
9002b144:	e022      	b.n	9002b18c <__sflush_r+0xf8>
9002b146:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b14a:	b21b      	sxth	r3, r3
9002b14c:	e01b      	b.n	9002b186 <__sflush_r+0xf2>
9002b14e:	690f      	ldr	r7, [r1, #16]
9002b150:	2f00      	cmp	r7, #0
9002b152:	d0f6      	beq.n	9002b142 <__sflush_r+0xae>
9002b154:	0793      	lsls	r3, r2, #30
9002b156:	680e      	ldr	r6, [r1, #0]
9002b158:	bf08      	it	eq
9002b15a:	694b      	ldreq	r3, [r1, #20]
9002b15c:	600f      	str	r7, [r1, #0]
9002b15e:	bf18      	it	ne
9002b160:	2300      	movne	r3, #0
9002b162:	eba6 0807 	sub.w	r8, r6, r7
9002b166:	608b      	str	r3, [r1, #8]
9002b168:	f1b8 0f00 	cmp.w	r8, #0
9002b16c:	dde9      	ble.n	9002b142 <__sflush_r+0xae>
9002b16e:	6a21      	ldr	r1, [r4, #32]
9002b170:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002b172:	4643      	mov	r3, r8
9002b174:	463a      	mov	r2, r7
9002b176:	4628      	mov	r0, r5
9002b178:	47b0      	blx	r6
9002b17a:	2800      	cmp	r0, #0
9002b17c:	dc08      	bgt.n	9002b190 <__sflush_r+0xfc>
9002b17e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b182:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b186:	81a3      	strh	r3, [r4, #12]
9002b188:	f04f 30ff 	mov.w	r0, #4294967295
9002b18c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b190:	4407      	add	r7, r0
9002b192:	eba8 0800 	sub.w	r8, r8, r0
9002b196:	e7e7      	b.n	9002b168 <__sflush_r+0xd4>
9002b198:	dfbffffe 	.word	0xdfbffffe

9002b19c <_fflush_r>:
9002b19c:	b538      	push	{r3, r4, r5, lr}
9002b19e:	690b      	ldr	r3, [r1, #16]
9002b1a0:	4605      	mov	r5, r0
9002b1a2:	460c      	mov	r4, r1
9002b1a4:	b913      	cbnz	r3, 9002b1ac <_fflush_r+0x10>
9002b1a6:	2500      	movs	r5, #0
9002b1a8:	4628      	mov	r0, r5
9002b1aa:	bd38      	pop	{r3, r4, r5, pc}
9002b1ac:	b118      	cbz	r0, 9002b1b6 <_fflush_r+0x1a>
9002b1ae:	6a03      	ldr	r3, [r0, #32]
9002b1b0:	b90b      	cbnz	r3, 9002b1b6 <_fflush_r+0x1a>
9002b1b2:	f7ff f9e9 	bl	9002a588 <__sinit>
9002b1b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b1ba:	2b00      	cmp	r3, #0
9002b1bc:	d0f3      	beq.n	9002b1a6 <_fflush_r+0xa>
9002b1be:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002b1c0:	07d0      	lsls	r0, r2, #31
9002b1c2:	d404      	bmi.n	9002b1ce <_fflush_r+0x32>
9002b1c4:	0599      	lsls	r1, r3, #22
9002b1c6:	d402      	bmi.n	9002b1ce <_fflush_r+0x32>
9002b1c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b1ca:	f7ff fbdc 	bl	9002a986 <__retarget_lock_acquire_recursive>
9002b1ce:	4628      	mov	r0, r5
9002b1d0:	4621      	mov	r1, r4
9002b1d2:	f7ff ff5f 	bl	9002b094 <__sflush_r>
9002b1d6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002b1d8:	07da      	lsls	r2, r3, #31
9002b1da:	4605      	mov	r5, r0
9002b1dc:	d4e4      	bmi.n	9002b1a8 <_fflush_r+0xc>
9002b1de:	89a3      	ldrh	r3, [r4, #12]
9002b1e0:	059b      	lsls	r3, r3, #22
9002b1e2:	d4e1      	bmi.n	9002b1a8 <_fflush_r+0xc>
9002b1e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b1e6:	f7ff fbcf 	bl	9002a988 <__retarget_lock_release_recursive>
9002b1ea:	e7dd      	b.n	9002b1a8 <_fflush_r+0xc>

9002b1ec <__swhatbuf_r>:
9002b1ec:	b570      	push	{r4, r5, r6, lr}
9002b1ee:	460c      	mov	r4, r1
9002b1f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b1f4:	2900      	cmp	r1, #0
9002b1f6:	b096      	sub	sp, #88	@ 0x58
9002b1f8:	4615      	mov	r5, r2
9002b1fa:	461e      	mov	r6, r3
9002b1fc:	da0d      	bge.n	9002b21a <__swhatbuf_r+0x2e>
9002b1fe:	89a3      	ldrh	r3, [r4, #12]
9002b200:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002b204:	f04f 0100 	mov.w	r1, #0
9002b208:	bf14      	ite	ne
9002b20a:	2340      	movne	r3, #64	@ 0x40
9002b20c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002b210:	2000      	movs	r0, #0
9002b212:	6031      	str	r1, [r6, #0]
9002b214:	602b      	str	r3, [r5, #0]
9002b216:	b016      	add	sp, #88	@ 0x58
9002b218:	bd70      	pop	{r4, r5, r6, pc}
9002b21a:	466a      	mov	r2, sp
9002b21c:	f000 f848 	bl	9002b2b0 <_fstat_r>
9002b220:	2800      	cmp	r0, #0
9002b222:	dbec      	blt.n	9002b1fe <__swhatbuf_r+0x12>
9002b224:	9901      	ldr	r1, [sp, #4]
9002b226:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002b22a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002b22e:	4259      	negs	r1, r3
9002b230:	4159      	adcs	r1, r3
9002b232:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002b236:	e7eb      	b.n	9002b210 <__swhatbuf_r+0x24>

9002b238 <__smakebuf_r>:
9002b238:	898b      	ldrh	r3, [r1, #12]
9002b23a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002b23c:	079d      	lsls	r5, r3, #30
9002b23e:	4606      	mov	r6, r0
9002b240:	460c      	mov	r4, r1
9002b242:	d507      	bpl.n	9002b254 <__smakebuf_r+0x1c>
9002b244:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002b248:	6023      	str	r3, [r4, #0]
9002b24a:	6123      	str	r3, [r4, #16]
9002b24c:	2301      	movs	r3, #1
9002b24e:	6163      	str	r3, [r4, #20]
9002b250:	b003      	add	sp, #12
9002b252:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b254:	ab01      	add	r3, sp, #4
9002b256:	466a      	mov	r2, sp
9002b258:	f7ff ffc8 	bl	9002b1ec <__swhatbuf_r>
9002b25c:	9f00      	ldr	r7, [sp, #0]
9002b25e:	4605      	mov	r5, r0
9002b260:	4639      	mov	r1, r7
9002b262:	4630      	mov	r0, r6
9002b264:	f7ff f86a 	bl	9002a33c <_malloc_r>
9002b268:	b948      	cbnz	r0, 9002b27e <__smakebuf_r+0x46>
9002b26a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b26e:	059a      	lsls	r2, r3, #22
9002b270:	d4ee      	bmi.n	9002b250 <__smakebuf_r+0x18>
9002b272:	f023 0303 	bic.w	r3, r3, #3
9002b276:	f043 0302 	orr.w	r3, r3, #2
9002b27a:	81a3      	strh	r3, [r4, #12]
9002b27c:	e7e2      	b.n	9002b244 <__smakebuf_r+0xc>
9002b27e:	89a3      	ldrh	r3, [r4, #12]
9002b280:	6020      	str	r0, [r4, #0]
9002b282:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002b286:	81a3      	strh	r3, [r4, #12]
9002b288:	9b01      	ldr	r3, [sp, #4]
9002b28a:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002b28e:	b15b      	cbz	r3, 9002b2a8 <__smakebuf_r+0x70>
9002b290:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002b294:	4630      	mov	r0, r6
9002b296:	f000 f81d 	bl	9002b2d4 <_isatty_r>
9002b29a:	b128      	cbz	r0, 9002b2a8 <__smakebuf_r+0x70>
9002b29c:	89a3      	ldrh	r3, [r4, #12]
9002b29e:	f023 0303 	bic.w	r3, r3, #3
9002b2a2:	f043 0301 	orr.w	r3, r3, #1
9002b2a6:	81a3      	strh	r3, [r4, #12]
9002b2a8:	89a3      	ldrh	r3, [r4, #12]
9002b2aa:	431d      	orrs	r5, r3
9002b2ac:	81a5      	strh	r5, [r4, #12]
9002b2ae:	e7cf      	b.n	9002b250 <__smakebuf_r+0x18>

9002b2b0 <_fstat_r>:
9002b2b0:	b538      	push	{r3, r4, r5, lr}
9002b2b2:	4d07      	ldr	r5, [pc, #28]	@ (9002b2d0 <_fstat_r+0x20>)
9002b2b4:	2300      	movs	r3, #0
9002b2b6:	4604      	mov	r4, r0
9002b2b8:	4608      	mov	r0, r1
9002b2ba:	4611      	mov	r1, r2
9002b2bc:	602b      	str	r3, [r5, #0]
9002b2be:	f7d9 f8e9 	bl	90004494 <_fstat>
9002b2c2:	1c43      	adds	r3, r0, #1
9002b2c4:	d102      	bne.n	9002b2cc <_fstat_r+0x1c>
9002b2c6:	682b      	ldr	r3, [r5, #0]
9002b2c8:	b103      	cbz	r3, 9002b2cc <_fstat_r+0x1c>
9002b2ca:	6023      	str	r3, [r4, #0]
9002b2cc:	bd38      	pop	{r3, r4, r5, pc}
9002b2ce:	bf00      	nop
9002b2d0:	2402405c 	.word	0x2402405c

9002b2d4 <_isatty_r>:
9002b2d4:	b538      	push	{r3, r4, r5, lr}
9002b2d6:	4d06      	ldr	r5, [pc, #24]	@ (9002b2f0 <_isatty_r+0x1c>)
9002b2d8:	2300      	movs	r3, #0
9002b2da:	4604      	mov	r4, r0
9002b2dc:	4608      	mov	r0, r1
9002b2de:	602b      	str	r3, [r5, #0]
9002b2e0:	f7d9 f8de 	bl	900044a0 <_isatty>
9002b2e4:	1c43      	adds	r3, r0, #1
9002b2e6:	d102      	bne.n	9002b2ee <_isatty_r+0x1a>
9002b2e8:	682b      	ldr	r3, [r5, #0]
9002b2ea:	b103      	cbz	r3, 9002b2ee <_isatty_r+0x1a>
9002b2ec:	6023      	str	r3, [r4, #0]
9002b2ee:	bd38      	pop	{r3, r4, r5, pc}
9002b2f0:	2402405c 	.word	0x2402405c

9002b2f4 <_init>:
9002b2f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b2f6:	bf00      	nop
9002b2f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b2fa:	bc08      	pop	{r3}
9002b2fc:	469e      	mov	lr, r3
9002b2fe:	4770      	bx	lr

9002b300 <_fini>:
9002b300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b302:	bf00      	nop
9002b304:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b306:	bc08      	pop	{r3}
9002b308:	469e      	mov	lr, r3
9002b30a:	4770      	bx	lr
